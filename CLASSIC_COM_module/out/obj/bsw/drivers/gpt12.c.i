# 1 "D:\\Workspace\\autoever_osek\\can_based_OSEK_OS_TEST\\bsw\\drivers\\gpt12.c"
# 1 "D:\\Workspace\\autoever_osek\\can_based_OSEK_OS_TEST\\out//"
# 1 "<built-in>"
#define __STDC__ 1
#define __STDC_VERSION__ 199901L
#define __STDC_HOSTED__ 1
#define __GNUC__ 4
#define __GNUC_MINOR__ 9
#define __GNUC_PATCHLEVEL__ 4
#define __VERSION__ "4.9.4 build on 2019-06-07"
#define __ATOMIC_RELAXED 0
#define __ATOMIC_SEQ_CST 5
#define __ATOMIC_ACQUIRE 2
#define __ATOMIC_RELEASE 3
#define __ATOMIC_ACQ_REL 4
#define __ATOMIC_CONSUME 1
#define __OPTIMIZE__ 1
#define __FAST_MATH__ 1
#define __FINITE_MATH_ONLY__ 1
#define __SIZEOF_INT__ 4
#define __SIZEOF_LONG__ 4
#define __SIZEOF_LONG_LONG__ 8
#define __SIZEOF_SHORT__ 2
#define __SIZEOF_FLOAT__ 4
#define __SIZEOF_DOUBLE__ 4
#define __SIZEOF_LONG_DOUBLE__ 8
#define __SIZEOF_SIZE_T__ 4
#define __CHAR_BIT__ 8
#define __BIGGEST_ALIGNMENT__ 4
#define __ORDER_LITTLE_ENDIAN__ 1234
#define __ORDER_BIG_ENDIAN__ 4321
#define __ORDER_PDP_ENDIAN__ 3412
#define __BYTE_ORDER__ __ORDER_LITTLE_ENDIAN__
#define __FLOAT_WORD_ORDER__ __ORDER_LITTLE_ENDIAN__
#define __SIZEOF_POINTER__ 4
#define __SIZE_TYPE__ long unsigned int
#define __PTRDIFF_TYPE__ long int
#define __WCHAR_TYPE__ int
#define __WINT_TYPE__ unsigned int
#define __INTMAX_TYPE__ long long int
#define __UINTMAX_TYPE__ long long unsigned int
#define __CHAR16_TYPE__ short unsigned int
#define __CHAR32_TYPE__ long unsigned int
#define __SIG_ATOMIC_TYPE__ int
#define __INT8_TYPE__ signed char
#define __INT16_TYPE__ short int
#define __INT32_TYPE__ long int
#define __INT64_TYPE__ long long int
#define __UINT8_TYPE__ unsigned char
#define __UINT16_TYPE__ short unsigned int
#define __UINT32_TYPE__ long unsigned int
#define __UINT64_TYPE__ long long unsigned int
#define __INT_LEAST8_TYPE__ signed char
#define __INT_LEAST16_TYPE__ short int
#define __INT_LEAST32_TYPE__ long int
#define __INT_LEAST64_TYPE__ long long int
#define __UINT_LEAST8_TYPE__ unsigned char
#define __UINT_LEAST16_TYPE__ short unsigned int
#define __UINT_LEAST32_TYPE__ long unsigned int
#define __UINT_LEAST64_TYPE__ long long unsigned int
#define __INT_FAST8_TYPE__ int
#define __INT_FAST16_TYPE__ int
#define __INT_FAST32_TYPE__ int
#define __INT_FAST64_TYPE__ long long int
#define __UINT_FAST8_TYPE__ unsigned int
#define __UINT_FAST16_TYPE__ unsigned int
#define __UINT_FAST32_TYPE__ unsigned int
#define __UINT_FAST64_TYPE__ long long unsigned int
#define __INTPTR_TYPE__ long int
#define __UINTPTR_TYPE__ long unsigned int
#define __has_include(STR) __has_include__(STR)
#define __has_include_next(STR) __has_include_next__(STR)
#define __GXX_ABI_VERSION 1002
#define __USING_SJLJ_EXCEPTIONS__ 1
#define __SCHAR_MAX__ 127
#define __SHRT_MAX__ 32767
#define __INT_MAX__ 2147483647
#define __LONG_MAX__ 2147483647L
#define __LONG_LONG_MAX__ 9223372036854775807LL
#define __WCHAR_MAX__ 2147483647
#define __WCHAR_MIN__ (-__WCHAR_MAX__ - 1)
#define __WINT_MAX__ 4294967295U
#define __WINT_MIN__ 0U
#define __PTRDIFF_MAX__ 2147483647L
#define __SIZE_MAX__ 4294967295UL
#define __INTMAX_MAX__ 9223372036854775807LL
#define __INTMAX_C(c) c ## LL
#define __UINTMAX_MAX__ 18446744073709551615ULL
#define __UINTMAX_C(c) c ## ULL
#define __SIG_ATOMIC_MAX__ 2147483647
#define __SIG_ATOMIC_MIN__ (-__SIG_ATOMIC_MAX__ - 1)
#define __INT8_MAX__ 127
#define __INT16_MAX__ 32767
#define __INT32_MAX__ 2147483647L
#define __INT64_MAX__ 9223372036854775807LL
#define __UINT8_MAX__ 255
#define __UINT16_MAX__ 65535
#define __UINT32_MAX__ 4294967295UL
#define __UINT64_MAX__ 18446744073709551615ULL
#define __INT_LEAST8_MAX__ 127
#define __INT8_C(c) c
#define __INT_LEAST16_MAX__ 32767
#define __INT16_C(c) c
#define __INT_LEAST32_MAX__ 2147483647L
#define __INT32_C(c) c ## L
#define __INT_LEAST64_MAX__ 9223372036854775807LL
#define __INT64_C(c) c ## LL
#define __UINT_LEAST8_MAX__ 255
#define __UINT8_C(c) c
#define __UINT_LEAST16_MAX__ 65535
#define __UINT16_C(c) c
#define __UINT_LEAST32_MAX__ 4294967295UL
#define __UINT32_C(c) c ## UL
#define __UINT_LEAST64_MAX__ 18446744073709551615ULL
#define __UINT64_C(c) c ## ULL
#define __INT_FAST8_MAX__ 2147483647
#define __INT_FAST16_MAX__ 2147483647
#define __INT_FAST32_MAX__ 2147483647
#define __INT_FAST64_MAX__ 9223372036854775807LL
#define __UINT_FAST8_MAX__ 4294967295U
#define __UINT_FAST16_MAX__ 4294967295U
#define __UINT_FAST32_MAX__ 4294967295U
#define __UINT_FAST64_MAX__ 18446744073709551615ULL
#define __INTPTR_MAX__ 2147483647L
#define __UINTPTR_MAX__ 4294967295UL
#define __GCC_IEC_559 0
#define __GCC_IEC_559_COMPLEX 0
#define __FLT_EVAL_METHOD__ 0
#define __DEC_EVAL_METHOD__ 2
#define __FLT_RADIX__ 2
#define __FLT_MANT_DIG__ 24
#define __FLT_DIG__ 6
#define __FLT_MIN_EXP__ (-125)
#define __FLT_MIN_10_EXP__ (-37)
#define __FLT_MAX_EXP__ 128
#define __FLT_MAX_10_EXP__ 38
#define __FLT_DECIMAL_DIG__ 9
#define __FLT_MAX__ 3.4028234663852886e+38F
#define __FLT_MIN__ 1.1754943508222875e-38F
#define __FLT_EPSILON__ 1.1920928955078125e-7F
#define __FLT_DENORM_MIN__ 1.4012984643248171e-45F
#define __FLT_HAS_DENORM__ 1
#define __FLT_HAS_INFINITY__ 1
#define __FLT_HAS_QUIET_NAN__ 1
#define __FP_FAST_FMAF 1
#define __DBL_MANT_DIG__ 24
#define __DBL_DIG__ 6
#define __DBL_MIN_EXP__ (-125)
#define __DBL_MIN_10_EXP__ (-37)
#define __DBL_MAX_EXP__ 128
#define __DBL_MAX_10_EXP__ 38
#define __DBL_DECIMAL_DIG__ 9
#define __DBL_MAX__ ((double)3.4028234663852886e+38L)
#define __DBL_MIN__ ((double)1.1754943508222875e-38L)
#define __DBL_EPSILON__ ((double)1.1920928955078125e-7L)
#define __DBL_DENORM_MIN__ ((double)1.4012984643248171e-45L)
#define __DBL_HAS_DENORM__ 1
#define __DBL_HAS_INFINITY__ 1
#define __DBL_HAS_QUIET_NAN__ 1
#define __FP_FAST_FMA 1
#define __LDBL_MANT_DIG__ 53
#define __LDBL_DIG__ 15
#define __LDBL_MIN_EXP__ (-1021)
#define __LDBL_MIN_10_EXP__ (-307)
#define __LDBL_MAX_EXP__ 1024
#define __LDBL_MAX_10_EXP__ 308
#define __DECIMAL_DIG__ 17
#define __LDBL_MAX__ 1.7976931348623157e+308L
#define __LDBL_MIN__ 2.2250738585072014e-308L
#define __LDBL_EPSILON__ 2.2204460492503131e-16L
#define __LDBL_DENORM_MIN__ 4.9406564584124654e-324L
#define __LDBL_HAS_DENORM__ 1
#define __LDBL_HAS_INFINITY__ 1
#define __LDBL_HAS_QUIET_NAN__ 1
#define __DEC32_MANT_DIG__ 7
#define __DEC32_MIN_EXP__ (-94)
#define __DEC32_MAX_EXP__ 97
#define __DEC32_MIN__ 1E-95DF
#define __DEC32_MAX__ 9.999999E96DF
#define __DEC32_EPSILON__ 1E-6DF
#define __DEC32_SUBNORMAL_MIN__ 0.000001E-95DF
#define __DEC64_MANT_DIG__ 16
#define __DEC64_MIN_EXP__ (-382)
#define __DEC64_MAX_EXP__ 385
#define __DEC64_MIN__ 1E-383DD
#define __DEC64_MAX__ 9.999999999999999E384DD
#define __DEC64_EPSILON__ 1E-15DD
#define __DEC64_SUBNORMAL_MIN__ 0.000000000000001E-383DD
#define __DEC128_MANT_DIG__ 34
#define __DEC128_MIN_EXP__ (-6142)
#define __DEC128_MAX_EXP__ 6145
#define __DEC128_MIN__ 1E-6143DL
#define __DEC128_MAX__ 9.999999999999999999999999999999999E6144DL
#define __DEC128_EPSILON__ 1E-33DL
#define __DEC128_SUBNORMAL_MIN__ 0.000000000000000000000000000000001E-6143DL
#define __REGISTER_PREFIX__ %
#define __USER_LABEL_PREFIX__ 
#define __GNUC_STDC_INLINE__ 1
#define __STRICT_ANSI__ 1
#define __GCC_ATOMIC_BOOL_LOCK_FREE 1
#define __GCC_ATOMIC_CHAR_LOCK_FREE 1
#define __GCC_ATOMIC_CHAR16_T_LOCK_FREE 1
#define __GCC_ATOMIC_CHAR32_T_LOCK_FREE 1
#define __GCC_ATOMIC_WCHAR_T_LOCK_FREE 1
#define __GCC_ATOMIC_SHORT_LOCK_FREE 1
#define __GCC_ATOMIC_INT_LOCK_FREE 1
#define __GCC_ATOMIC_LONG_LOCK_FREE 1
#define __GCC_ATOMIC_LLONG_LOCK_FREE 1
#define __GCC_ATOMIC_TEST_AND_SET_TRUEVAL 1
#define __GCC_ATOMIC_POINTER_LOCK_FREE 1
#define __PRAGMA_REDEFINE_EXTNAME 1
#define __SIZEOF_WCHAR_T__ 4
#define __SIZEOF_WINT_T__ 4
#define __SIZEOF_PTRDIFF_T__ 4
#define __HIGHTEC__ 1
#define __HAVE_SHORT_DOUBLE__ 1
#define __tricore 1
#define __tricore__ 1
#define __TRICORE__ 1
#define __TC161__ 1
#define __TRICORE_CORE__ 0x161
#define __TC27XX__ 1
#define __TRICORE_NAME__ 0x2700
#define __TRICORE_HAVE_DIV__ 1
#define __TRICORE_HAVE_FTOIZ__ 1
#define __TRICORE_HAVE_MOV64__ 1
#define __TRICORE_HAVE_FLOAT16__ 1
#define __BUILTIN_TRICORE_NOP 1
#define __BUILTIN_TRICORE_LROTATE 1
#define __BUILTIN_TRICORE_RROTATE 1
#define __BUILTIN_TRICORE_INSERT 1
#define __BUILTIN_TRICORE_IMASK 1
#define __BUILTIN_TRICORE_SWAPW 1
#define __BUILTIN_TRICORE_SWAPMSKW 1
#define __BUILTIN_TRICORE_CMPSWAPW 1
#define __BUILTIN_TRICORE_SATB 1
#define __BUILTIN_TRICORE_SATH 1
#define __BUILTIN_TRICORE_SATBU 1
#define __BUILTIN_TRICORE_SATHU 1
#define __BUILTIN_TRICORE_LDMST 1
#define __ELF__ 1
# 1 "<command-line>"
#define __HAVE_SHORT_DOUBLE__ 1
# 1 "D:\\Workspace\\autoever_osek\\can_based_OSEK_OS_TEST\\bsw\\drivers\\gpt12.c"
# 1 "D:\\Workspace\\autoever_osek\\can_based_OSEK_OS_TEST\\bsw\\drivers\\gpt12.h" 1

#define BSW_DRIVERS_GPT12_H_ 

unsigned int getLeftMotorDuty(void);
unsigned int getRightMotorDuty(void);
void setLeftMotorDuty(unsigned int duty);
void setRightMotorDuty(unsigned int duty);
unsigned int getcntDelay(void);
void setcntDelay(unsigned int n);

void IsrGpt120T3Handler_Motor(void);
void IsrGpt2T6Handler(void);

void init_gpt1(void);
void init_gpt2(void);

void runGpt12_T3(void);
void stopGpt12_T3(void);
void runGpt12_T6(void);
void stopGpt12_T6(void);
void runGpt12_T4(void);
void stopGpt12_T4(void);
void setGpt12_T4(unsigned short value);
unsigned int getGpt12_T4(void);
# 2 "D:\\Workspace\\autoever_osek\\can_based_OSEK_OS_TEST\\bsw\\drivers\\gpt12.c" 2
# 1 "D:\\Workspace\\autoever_osek\\can_based_OSEK_OS_TEST\\bsw\\drivers\\asclin.h" 1

#define BSW_DRIVERS_ASCLIN_H_ 

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\machine\\intrinsics.h" 1 3
# 28 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\machine\\intrinsics.h" 3
#define __INTRINSICS_H__ 

#undef __STRINGIFY
#define __STRINGIFY(x) #x
# 82 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\machine\\intrinsics.h" 3
#define __bisr(irq_level) __tric_bisr(irq_level)
#define __BISR(irq_level) __tric_bisr(irq_level)

#define __tric_bisr(irq_level) __asm__ volatile ("bisr " __STRINGIFY (irq_level) ::: "memory")


static __inline__ __attribute__((__always_inline__))
void _bisr (const unsigned __irq_level)
{
  __asm__ volatile ("bisr %0" :: "i" (__irq_level) : "memory");
}






#define __MFCR(regaddr) __tric_mfcr (regaddr)
#define __mfcr(regaddr) __tric_mfcr (regaddr)

#define __tric_mfcr(regaddr) (__extension__({ unsigned __res; __asm__ volatile ("mfcr %0, LO:" __STRINGIFY (regaddr) : "=d" (__res) :: "memory"); __res; }))







static __inline__ __attribute__((__always_inline__))
unsigned _mfcr (const unsigned __regaddr)
{
  unsigned __res;
  __asm__ volatile ("mfcr %0, LO:%1"
                    : "=d" (__res) : "i" (__regaddr) : "memory");
  return __res;
}






#define __MTCR(regaddr,val) __tric_mtcr (regaddr, val)
#define __mtcr(regaddr,val) __tric_mtcr (regaddr, val)

#define __tric_mtcr(regaddr,val) do { unsigned __newval = (unsigned) (val); __asm__ volatile ("mtcr LO:" __STRINGIFY (regaddr) ", %0" :: "d" (__newval) : "memory"); } while (0)






static __inline__ __attribute__((__always_inline__))
void _mtcr (const unsigned __regaddr, const unsigned __val)
{
  __asm__ volatile ("mtcr LO:%0, %1"
                    :: "i" (__regaddr), "d" (__val) : "memory");
}






#define __syscall(service) __tric_syscall (service)
#define __SYSCALL(service) __tric_syscall (service)

#define __tric_syscall(service) __asm__ volatile ("syscall "__STRINGIFY (service) ::: "memory")


static __inline__ __attribute__((__always_inline__))
void _syscall (const unsigned __service)
{
  __asm__ volatile ("syscall %0" :: "i" (__service) : "memory");
}






static __inline__ __attribute__((__always_inline__))
void _disable (void)
{
  __asm__ volatile ("disable" ::: "memory");
}

static __inline__ __attribute__((__always_inline__))
void _enable (void)
{
  __asm__ volatile ("enable" ::: "memory");
}

static __inline__ __attribute__((__always_inline__))
void _debug (void)
{
  __asm__ volatile ("debug" ::: "memory");
}

static __inline__ __attribute__((__always_inline__))
void _isync (void)
{
  __asm__ volatile ("isync" ::: "memory");
}

static __inline__ __attribute__((__always_inline__))
void _dsync (void)
{
  __asm__ volatile ("dsync" ::: "memory");
}

static __inline__ __attribute__((__always_inline__))
void _rstv (void)
{
  __asm__ volatile ("rstv" ::: "memory");
}

static __inline__ __attribute__((__always_inline__))
void _rslcx (void)
{
    __asm__ volatile ("rslcx" ::: "memory",
                      "d0", "d1", "d2", "d3", "d4", "d5", "d6", "d7",
                      "a2", "a3", "a4", "a5", "a6", "a7", "a11");
}


static __inline__ __attribute__((__always_inline__))
void _svlcx (void)
{
  __asm__ volatile ("svlcx" ::: "memory");
}

static __inline__ __attribute__((__always_inline__))
void _nop (void)
{
  __asm__ volatile ("nop" ::: "memory");
}
# 227 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\machine\\intrinsics.h" 3
static __inline__ __attribute__((__always_inline__))
void _restore (const int irqs_on)
{

  __asm__ volatile ("restore %0" :: "d" (irqs_on) : "memory");






}
# 248 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\machine\\intrinsics.h" 3
#define __CLZ(val) __builtin_clz (val)

#define __CTZ(val) __builtin_ctz (val)

#define __ABS(val) __builtin_abs (val)
# 5 "D:\\Workspace\\autoever_osek\\can_based_OSEK_OS_TEST\\bsw\\drivers\\asclin.h" 2
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\lib\\gcc\\tricore\\4.9.4\\include\\stdarg.h" 1 3 4
# 31 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\lib\\gcc\\tricore\\4.9.4\\include\\stdarg.h" 3 4
#define _STDARG_H 
#define _ANSI_STDARG_H_ 

#undef __need___va_list




#define __GNUC_VA_LIST 
typedef __builtin_va_list __gnuc_va_list;






#define va_start(v,l) __builtin_va_start(v,l)
#define va_end(v) __builtin_va_end(v)
#define va_arg(v,l) __builtin_va_arg(v,l)

#define va_copy(d,s) __builtin_va_copy(d,s)

#define __va_copy(d,s) __builtin_va_copy(d,s)
# 98 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\lib\\gcc\\tricore\\4.9.4\\include\\stdarg.h" 3 4
typedef __gnuc_va_list va_list;





#define _VA_LIST_ 


#define _VA_LIST 


#define _VA_LIST_DEFINED 


#define _VA_LIST_T_H 


#define __va_list__ 
# 6 "D:\\Workspace\\autoever_osek\\can_based_OSEK_OS_TEST\\bsw\\drivers\\asclin.h" 2
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport_reg.h" 1 3
# 82 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport_reg.h" 3
#define IFXPORT_REG_H 1

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxPort_regdef.h" 1 3
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxPort_regdef.h" 3
#define IFXPORT_REGDEF_H 1

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\Ifx_TypesReg.h" 1 3
# 27 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\Ifx_TypesReg.h" 3
#define IFX_TYPESREG_H 1







#define Ifx_Strict_16Bit volatile unsigned short
#define Ifx_Strict_32Bit volatile unsigned int
# 48 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\Ifx_TypesReg.h" 3
#define Ifx_VADC_RES Ifx_VADC_G_RES
#define Ifx_VADC_RESD Ifx_VADC_G_RESD
#define Ifx_VADC_CHCTR Ifx_VADC_G_CHCTR
#define Ifx_VADC_RCR Ifx_VADC_G_RCR
# 40 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxPort_regdef.h" 2 3





typedef struct _Ifx_P_ACCEN0_Bits
{
    unsigned int EN0:1;
    unsigned int EN1:1;
    unsigned int EN2:1;
    unsigned int EN3:1;
    unsigned int EN4:1;
    unsigned int EN5:1;
    unsigned int EN6:1;
    unsigned int EN7:1;
    unsigned int EN8:1;
    unsigned int EN9:1;
    unsigned int EN10:1;
    unsigned int EN11:1;
    unsigned int EN12:1;
    unsigned int EN13:1;
    unsigned int EN14:1;
    unsigned int EN15:1;
    unsigned int EN16:1;
    unsigned int EN17:1;
    unsigned int EN18:1;
    unsigned int EN19:1;
    unsigned int EN20:1;
    unsigned int EN21:1;
    unsigned int EN22:1;
    unsigned int EN23:1;
    unsigned int EN24:1;
    unsigned int EN25:1;
    unsigned int EN26:1;
    unsigned int EN27:1;
    unsigned int EN28:1;
    unsigned int EN29:1;
    unsigned int EN30:1;
    unsigned int EN31:1;
} Ifx_P_ACCEN0_Bits;


typedef struct _Ifx_P_ACCEN1_Bits
{
    unsigned int reserved_0:32;
} Ifx_P_ACCEN1_Bits;


typedef struct _Ifx_P_ESR_Bits
{
    unsigned int EN0:1;
    unsigned int EN1:1;
    unsigned int EN2:1;
    unsigned int EN3:1;
    unsigned int EN4:1;
    unsigned int EN5:1;
    unsigned int EN6:1;
    unsigned int EN7:1;
    unsigned int EN8:1;
    unsigned int EN9:1;
    unsigned int EN10:1;
    unsigned int EN11:1;
    unsigned int EN12:1;
    unsigned int EN13:1;
    unsigned int EN14:1;
    unsigned int EN15:1;
    unsigned int reserved_16:16;
} Ifx_P_ESR_Bits;


typedef struct _Ifx_P_ID_Bits
{
    unsigned int MODREV:8;
    unsigned int MODTYPE:8;
    unsigned int MODNUMBER:16;
} Ifx_P_ID_Bits;


typedef struct _Ifx_P_IN_Bits
{
    unsigned int P0:1;
    unsigned int P1:1;
    unsigned int P2:1;
    unsigned int P3:1;
    unsigned int P4:1;
    unsigned int P5:1;
    unsigned int P6:1;
    unsigned int P7:1;
    unsigned int P8:1;
    unsigned int P9:1;
    unsigned int P10:1;
    unsigned int P11:1;
    unsigned int P12:1;
    unsigned int P13:1;
    unsigned int P14:1;
    unsigned int P15:1;
    unsigned int reserved_16:16;
} Ifx_P_IN_Bits;


typedef struct _Ifx_P_IOCR0_Bits
{
    unsigned int reserved_0:3;
    unsigned int PC0:5;
    unsigned int reserved_8:3;
    unsigned int PC1:5;
    unsigned int reserved_16:3;
    unsigned int PC2:5;
    unsigned int reserved_24:3;
    unsigned int PC3:5;
} Ifx_P_IOCR0_Bits;


typedef struct _Ifx_P_IOCR12_Bits
{
    unsigned int reserved_0:3;
    unsigned int PC12:5;
    unsigned int reserved_8:3;
    unsigned int PC13:5;
    unsigned int reserved_16:3;
    unsigned int PC14:5;
    unsigned int reserved_24:3;
    unsigned int PC15:5;
} Ifx_P_IOCR12_Bits;


typedef struct _Ifx_P_IOCR4_Bits
{
    unsigned int reserved_0:3;
    unsigned int PC4:5;
    unsigned int reserved_8:3;
    unsigned int PC5:5;
    unsigned int reserved_16:3;
    unsigned int PC6:5;
    unsigned int reserved_24:3;
    unsigned int PC7:5;
} Ifx_P_IOCR4_Bits;


typedef struct _Ifx_P_IOCR8_Bits
{
    unsigned int reserved_0:3;
    unsigned int PC8:5;
    unsigned int reserved_8:3;
    unsigned int PC9:5;
    unsigned int reserved_16:3;
    unsigned int PC10:5;
    unsigned int reserved_24:3;
    unsigned int PC11:5;
} Ifx_P_IOCR8_Bits;


typedef struct _Ifx_P_LPCR0_Bits
{
    unsigned int reserved_0:1;
    unsigned int PS1:1;
    unsigned int reserved_2:30;
} Ifx_P_LPCR0_Bits;


typedef struct _Ifx_P_LPCR1_Bits
{
    unsigned int reserved_0:1;
    unsigned int PS1:1;
    unsigned int reserved_2:30;
} Ifx_P_LPCR1_Bits;


typedef struct _Ifx_P_LPCR1_P21_Bits
{
    unsigned int RDIS_CTRL:1;
    unsigned int RX_DIS:1;
    unsigned int TERM:1;
    unsigned int LRXTERM:5;
    unsigned int reserved_8:24;
} Ifx_P_LPCR1_P21_Bits;


typedef struct _Ifx_P_LPCR2_Bits
{
    unsigned int reserved_0:8;
    unsigned int LVDSR:1;
    unsigned int LVDSRL:1;
    unsigned int reserved_10:2;
    unsigned int TDIS_CTRL:1;
    unsigned int TX_DIS:1;
    unsigned int TX_PD:1;
    unsigned int TX_PWDPD:1;
    unsigned int reserved_16:16;
} Ifx_P_LPCR2_Bits;


typedef struct _Ifx_P_OMCR0_Bits
{
    unsigned int reserved_0:16;
    unsigned int PCL0:1;
    unsigned int PCL1:1;
    unsigned int PCL2:1;
    unsigned int PCL3:1;
    unsigned int reserved_20:12;
} Ifx_P_OMCR0_Bits;


typedef struct _Ifx_P_OMCR12_Bits
{
    unsigned int reserved_0:28;
    unsigned int PCL12:1;
    unsigned int PCL13:1;
    unsigned int PCL14:1;
    unsigned int PCL15:1;
} Ifx_P_OMCR12_Bits;


typedef struct _Ifx_P_OMCR4_Bits
{
    unsigned int reserved_0:20;
    unsigned int PCL4:1;
    unsigned int PCL5:1;
    unsigned int PCL6:1;
    unsigned int PCL7:1;
    unsigned int reserved_24:8;
} Ifx_P_OMCR4_Bits;


typedef struct _Ifx_P_OMCR8_Bits
{
    unsigned int reserved_0:24;
    unsigned int PCL8:1;
    unsigned int PCL9:1;
    unsigned int PCL10:1;
    unsigned int PCL11:1;
    unsigned int reserved_28:4;
} Ifx_P_OMCR8_Bits;


typedef struct _Ifx_P_OMCR_Bits
{
    unsigned int reserved_0:16;
    unsigned int PCL0:1;
    unsigned int PCL1:1;
    unsigned int PCL2:1;
    unsigned int PCL3:1;
    unsigned int PCL4:1;
    unsigned int PCL5:1;
    unsigned int PCL6:1;
    unsigned int PCL7:1;
    unsigned int PCL8:1;
    unsigned int PCL9:1;
    unsigned int PCL10:1;
    unsigned int PCL11:1;
    unsigned int PCL12:1;
    unsigned int PCL13:1;
    unsigned int PCL14:1;
    unsigned int PCL15:1;
} Ifx_P_OMCR_Bits;


typedef struct _Ifx_P_OMR_Bits
{
    unsigned int PS0:1;
    unsigned int PS1:1;
    unsigned int PS2:1;
    unsigned int PS3:1;
    unsigned int PS4:1;
    unsigned int PS5:1;
    unsigned int PS6:1;
    unsigned int PS7:1;
    unsigned int PS8:1;
    unsigned int PS9:1;
    unsigned int PS10:1;
    unsigned int PS11:1;
    unsigned int PS12:1;
    unsigned int PS13:1;
    unsigned int PS14:1;
    unsigned int PS15:1;
    unsigned int PCL0:1;
    unsigned int PCL1:1;
    unsigned int PCL2:1;
    unsigned int PCL3:1;
    unsigned int PCL4:1;
    unsigned int PCL5:1;
    unsigned int PCL6:1;
    unsigned int PCL7:1;
    unsigned int PCL8:1;
    unsigned int PCL9:1;
    unsigned int PCL10:1;
    unsigned int PCL11:1;
    unsigned int PCL12:1;
    unsigned int PCL13:1;
    unsigned int PCL14:1;
    unsigned int PCL15:1;
} Ifx_P_OMR_Bits;


typedef struct _Ifx_P_OMSR0_Bits
{
    unsigned int PS0:1;
    unsigned int PS1:1;
    unsigned int PS2:1;
    unsigned int PS3:1;
    unsigned int reserved_4:28;
} Ifx_P_OMSR0_Bits;


typedef struct _Ifx_P_OMSR12_Bits
{
    unsigned int reserved_0:12;
    unsigned int PS12:1;
    unsigned int PS13:1;
    unsigned int PS14:1;
    unsigned int PS15:1;
    unsigned int reserved_16:16;
} Ifx_P_OMSR12_Bits;


typedef struct _Ifx_P_OMSR4_Bits
{
    unsigned int reserved_0:4;
    unsigned int PS4:1;
    unsigned int PS5:1;
    unsigned int PS6:1;
    unsigned int PS7:1;
    unsigned int reserved_8:24;
} Ifx_P_OMSR4_Bits;


typedef struct _Ifx_P_OMSR8_Bits
{
    unsigned int reserved_0:8;
    unsigned int PS8:1;
    unsigned int PS9:1;
    unsigned int PS10:1;
    unsigned int PS11:1;
    unsigned int reserved_12:20;
} Ifx_P_OMSR8_Bits;


typedef struct _Ifx_P_OMSR_Bits
{
    unsigned int PS0:1;
    unsigned int PS1:1;
    unsigned int PS2:1;
    unsigned int PS3:1;
    unsigned int PS4:1;
    unsigned int PS5:1;
    unsigned int PS6:1;
    unsigned int PS7:1;
    unsigned int PS8:1;
    unsigned int PS9:1;
    unsigned int PS10:1;
    unsigned int PS11:1;
    unsigned int PS12:1;
    unsigned int PS13:1;
    unsigned int PS14:1;
    unsigned int PS15:1;
    unsigned int reserved_16:16;
} Ifx_P_OMSR_Bits;


typedef struct _Ifx_P_OUT_Bits
{
    unsigned int P0:1;
    unsigned int P1:1;
    unsigned int P2:1;
    unsigned int P3:1;
    unsigned int P4:1;
    unsigned int P5:1;
    unsigned int P6:1;
    unsigned int P7:1;
    unsigned int P8:1;
    unsigned int P9:1;
    unsigned int P10:1;
    unsigned int P11:1;
    unsigned int P12:1;
    unsigned int P13:1;
    unsigned int P14:1;
    unsigned int P15:1;
    unsigned int reserved_16:16;
} Ifx_P_OUT_Bits;


typedef struct _Ifx_P_PCSR_Bits
{
    unsigned int SEL0:1;
    unsigned int SEL1:1;
    unsigned int SEL2:1;
    unsigned int SEL3:1;
    unsigned int SEL4:1;
    unsigned int SEL5:1;
    unsigned int SEL6:1;
    unsigned int reserved_7:3;
    unsigned int SEL10:1;
    unsigned int SEL11:1;
    unsigned int reserved_12:19;
    unsigned int LCK:1;
} Ifx_P_PCSR_Bits;


typedef struct _Ifx_P_PDISC_Bits
{
    unsigned int PDIS0:1;
    unsigned int PDIS1:1;
    unsigned int PDIS2:1;
    unsigned int PDIS3:1;
    unsigned int PDIS4:1;
    unsigned int PDIS5:1;
    unsigned int PDIS6:1;
    unsigned int PDIS7:1;
    unsigned int PDIS8:1;
    unsigned int PDIS9:1;
    unsigned int PDIS10:1;
    unsigned int PDIS11:1;
    unsigned int PDIS12:1;
    unsigned int PDIS13:1;
    unsigned int PDIS14:1;
    unsigned int PDIS15:1;
    unsigned int reserved_16:16;
} Ifx_P_PDISC_Bits;


typedef struct _Ifx_P_PDR0_Bits
{
    unsigned int PD0:3;
    unsigned int PL0:1;
    unsigned int PD1:3;
    unsigned int PL1:1;
    unsigned int PD2:3;
    unsigned int PL2:1;
    unsigned int PD3:3;
    unsigned int PL3:1;
    unsigned int PD4:3;
    unsigned int PL4:1;
    unsigned int PD5:3;
    unsigned int PL5:1;
    unsigned int PD6:3;
    unsigned int PL6:1;
    unsigned int PD7:3;
    unsigned int PL7:1;
} Ifx_P_PDR0_Bits;


typedef struct _Ifx_P_PDR1_Bits
{
    unsigned int PD8:3;
    unsigned int PL8:1;
    unsigned int PD9:3;
    unsigned int PL9:1;
    unsigned int PD10:3;
    unsigned int PL10:1;
    unsigned int PD11:3;
    unsigned int PL11:1;
    unsigned int PD12:3;
    unsigned int PL12:1;
    unsigned int PD13:3;
    unsigned int PL13:1;
    unsigned int PD14:3;
    unsigned int PL14:1;
    unsigned int PD15:3;
    unsigned int PL15:1;
} Ifx_P_PDR1_Bits;







typedef union
{
    unsigned int U;
    signed int I;
    Ifx_P_ACCEN0_Bits B;
} Ifx_P_ACCEN0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_P_ACCEN1_Bits B;
} Ifx_P_ACCEN1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_P_ESR_Bits B;
} Ifx_P_ESR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_P_ID_Bits B;
} Ifx_P_ID;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_P_IN_Bits B;
} Ifx_P_IN;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_P_IOCR0_Bits B;
} Ifx_P_IOCR0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_P_IOCR12_Bits B;
} Ifx_P_IOCR12;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_P_IOCR4_Bits B;
} Ifx_P_IOCR4;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_P_IOCR8_Bits B;
} Ifx_P_IOCR8;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_P_LPCR0_Bits B;
} Ifx_P_LPCR0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_P_LPCR1_Bits B;
    Ifx_P_LPCR1_P21_Bits B_P21;
} Ifx_P_LPCR1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_P_LPCR2_Bits B;
} Ifx_P_LPCR2;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_P_OMCR_Bits B;
} Ifx_P_OMCR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_P_OMCR0_Bits B;
} Ifx_P_OMCR0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_P_OMCR12_Bits B;
} Ifx_P_OMCR12;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_P_OMCR4_Bits B;
} Ifx_P_OMCR4;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_P_OMCR8_Bits B;
} Ifx_P_OMCR8;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_P_OMR_Bits B;
} Ifx_P_OMR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_P_OMSR_Bits B;
} Ifx_P_OMSR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_P_OMSR0_Bits B;
} Ifx_P_OMSR0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_P_OMSR12_Bits B;
} Ifx_P_OMSR12;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_P_OMSR4_Bits B;
} Ifx_P_OMSR4;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_P_OMSR8_Bits B;
} Ifx_P_OMSR8;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_P_OUT_Bits B;
} Ifx_P_OUT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_P_PCSR_Bits B;
} Ifx_P_PCSR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_P_PDISC_Bits B;
} Ifx_P_PDISC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_P_PDR0_Bits B;
} Ifx_P_PDR0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_P_PDR1_Bits B;
} Ifx_P_PDR1;
# 740 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxPort_regdef.h" 3
typedef volatile struct _Ifx_P
{
    Ifx_P_OUT OUT;
    Ifx_P_OMR OMR;
    Ifx_P_ID ID;
    unsigned char reserved_C[4];
    Ifx_P_IOCR0 IOCR0;
    Ifx_P_IOCR4 IOCR4;
    Ifx_P_IOCR8 IOCR8;
    Ifx_P_IOCR12 IOCR12;
    unsigned char reserved_20[4];
    Ifx_P_IN IN;
    unsigned char reserved_28[24];
    Ifx_P_PDR0 PDR0;
    Ifx_P_PDR1 PDR1;
    unsigned char reserved_48[8];
    Ifx_P_ESR ESR;
    unsigned char reserved_54[12];
    Ifx_P_PDISC PDISC;
    Ifx_P_PCSR PCSR;
    unsigned char reserved_68[8];
    Ifx_P_OMSR0 OMSR0;
    Ifx_P_OMSR4 OMSR4;
    Ifx_P_OMSR8 OMSR8;
    Ifx_P_OMSR12 OMSR12;
    Ifx_P_OMCR0 OMCR0;
    Ifx_P_OMCR4 OMCR4;
    Ifx_P_OMCR8 OMCR8;
    Ifx_P_OMCR12 OMCR12;
    Ifx_P_OMSR OMSR;
    Ifx_P_OMCR OMCR;
    unsigned char reserved_98[8];
    Ifx_P_LPCR0 LPCR0;
    Ifx_P_LPCR1 LPCR1;
    Ifx_P_LPCR2 LPCR2;
    unsigned char reserved_A4[76];
    Ifx_P_ACCEN1 ACCEN1;
    Ifx_P_ACCEN0 ACCEN0;
} Ifx_P;
# 85 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport_reg.h" 2 3





#define MODULE_P00 (*(Ifx_P*)0xF003A000u)


#define MODULE_P01 (*(Ifx_P*)0xF003A100u)


#define MODULE_P02 (*(Ifx_P*)0xF003A200u)


#define MODULE_P10 (*(Ifx_P*)0xF003B000u)


#define MODULE_P11 (*(Ifx_P*)0xF003B100u)


#define MODULE_P12 (*(Ifx_P*)0xF003B200u)


#define MODULE_P13 (*(Ifx_P*)0xF003B300u)


#define MODULE_P14 (*(Ifx_P*)0xF003B400u)


#define MODULE_P15 (*(Ifx_P*)0xF003B500u)


#define MODULE_P20 (*(Ifx_P*)0xF003C000u)


#define MODULE_P21 (*(Ifx_P*)0xF003C100u)


#define MODULE_P22 (*(Ifx_P*)0xF003C200u)


#define MODULE_P23 (*(Ifx_P*)0xF003C300u)


#define MODULE_P32 (*(Ifx_P*)0xF003D200u)


#define MODULE_P33 (*(Ifx_P*)0xF003D300u)


#define MODULE_P34 (*(Ifx_P*)0xF003D400u)


#define MODULE_P40 (*(Ifx_P*)0xF003E000u)







#define P00_ACCEN0 (*(volatile Ifx_P_ACCEN0*)0xF003A0FCu)


#define P00_ACCEN1 (*(volatile Ifx_P_ACCEN1*)0xF003A0F8u)


#define P00_ESR (*(volatile Ifx_P_ESR*)0xF003A050u)


#define P00_ID (*(volatile Ifx_P_ID*)0xF003A008u)


#define P00_IN (*(volatile Ifx_P_IN*)0xF003A024u)


#define P00_IOCR0 (*(volatile Ifx_P_IOCR0*)0xF003A010u)


#define P00_IOCR12 (*(volatile Ifx_P_IOCR12*)0xF003A01Cu)


#define P00_IOCR4 (*(volatile Ifx_P_IOCR4*)0xF003A014u)


#define P00_IOCR8 (*(volatile Ifx_P_IOCR8*)0xF003A018u)


#define P00_OMCR (*(volatile Ifx_P_OMCR*)0xF003A094u)


#define P00_OMCR0 (*(volatile Ifx_P_OMCR0*)0xF003A080u)


#define P00_OMCR12 (*(volatile Ifx_P_OMCR12*)0xF003A08Cu)


#define P00_OMCR4 (*(volatile Ifx_P_OMCR4*)0xF003A084u)


#define P00_OMCR8 (*(volatile Ifx_P_OMCR8*)0xF003A088u)


#define P00_OMR (*(volatile Ifx_P_OMR*)0xF003A004u)


#define P00_OMSR (*(volatile Ifx_P_OMSR*)0xF003A090u)


#define P00_OMSR0 (*(volatile Ifx_P_OMSR0*)0xF003A070u)


#define P00_OMSR12 (*(volatile Ifx_P_OMSR12*)0xF003A07Cu)


#define P00_OMSR4 (*(volatile Ifx_P_OMSR4*)0xF003A074u)


#define P00_OMSR8 (*(volatile Ifx_P_OMSR8*)0xF003A078u)


#define P00_OUT (*(volatile Ifx_P_OUT*)0xF003A000u)


#define P00_PCSR (*(volatile Ifx_P_PCSR*)0xF003A064u)


#define P00_PDR0 (*(volatile Ifx_P_PDR0*)0xF003A040u)


#define P00_PDR1 (*(volatile Ifx_P_PDR1*)0xF003A044u)







#define P01_ACCEN0 (*(volatile Ifx_P_ACCEN0*)0xF003A1FCu)


#define P01_ACCEN1 (*(volatile Ifx_P_ACCEN1*)0xF003A1F8u)


#define P01_ESR (*(volatile Ifx_P_ESR*)0xF003A150u)


#define P01_ID (*(volatile Ifx_P_ID*)0xF003A108u)


#define P01_IN (*(volatile Ifx_P_IN*)0xF003A124u)


#define P01_IOCR0 (*(volatile Ifx_P_IOCR0*)0xF003A110u)


#define P01_IOCR4 (*(volatile Ifx_P_IOCR4*)0xF003A114u)


#define P01_OMCR (*(volatile Ifx_P_OMCR*)0xF003A194u)


#define P01_OMCR0 (*(volatile Ifx_P_OMCR0*)0xF003A180u)


#define P01_OMCR4 (*(volatile Ifx_P_OMCR4*)0xF003A184u)


#define P01_OMR (*(volatile Ifx_P_OMR*)0xF003A104u)


#define P01_OMSR (*(volatile Ifx_P_OMSR*)0xF003A190u)


#define P01_OMSR0 (*(volatile Ifx_P_OMSR0*)0xF003A170u)


#define P01_OMSR4 (*(volatile Ifx_P_OMSR4*)0xF003A174u)


#define P01_OUT (*(volatile Ifx_P_OUT*)0xF003A100u)


#define P01_PDR0 (*(volatile Ifx_P_PDR0*)0xF003A140u)







#define P02_ACCEN0 (*(volatile Ifx_P_ACCEN0*)0xF003A2FCu)


#define P02_ACCEN1 (*(volatile Ifx_P_ACCEN1*)0xF003A2F8u)


#define P02_ESR (*(volatile Ifx_P_ESR*)0xF003A250u)


#define P02_ID (*(volatile Ifx_P_ID*)0xF003A208u)


#define P02_IN (*(volatile Ifx_P_IN*)0xF003A224u)


#define P02_IOCR0 (*(volatile Ifx_P_IOCR0*)0xF003A210u)


#define P02_IOCR4 (*(volatile Ifx_P_IOCR4*)0xF003A214u)


#define P02_IOCR8 (*(volatile Ifx_P_IOCR8*)0xF003A218u)


#define P02_OMCR (*(volatile Ifx_P_OMCR*)0xF003A294u)


#define P02_OMCR0 (*(volatile Ifx_P_OMCR0*)0xF003A280u)


#define P02_OMCR4 (*(volatile Ifx_P_OMCR4*)0xF003A284u)


#define P02_OMCR8 (*(volatile Ifx_P_OMCR8*)0xF003A288u)


#define P02_OMR (*(volatile Ifx_P_OMR*)0xF003A204u)


#define P02_OMSR (*(volatile Ifx_P_OMSR*)0xF003A290u)


#define P02_OMSR0 (*(volatile Ifx_P_OMSR0*)0xF003A270u)


#define P02_OMSR4 (*(volatile Ifx_P_OMSR4*)0xF003A274u)


#define P02_OMSR8 (*(volatile Ifx_P_OMSR8*)0xF003A278u)


#define P02_OUT (*(volatile Ifx_P_OUT*)0xF003A200u)


#define P02_PDR0 (*(volatile Ifx_P_PDR0*)0xF003A240u)


#define P02_PDR1 (*(volatile Ifx_P_PDR1*)0xF003A244u)







#define P10_ACCEN0 (*(volatile Ifx_P_ACCEN0*)0xF003B0FCu)


#define P10_ACCEN1 (*(volatile Ifx_P_ACCEN1*)0xF003B0F8u)


#define P10_ESR (*(volatile Ifx_P_ESR*)0xF003B050u)


#define P10_ID (*(volatile Ifx_P_ID*)0xF003B008u)


#define P10_IN (*(volatile Ifx_P_IN*)0xF003B024u)


#define P10_IOCR0 (*(volatile Ifx_P_IOCR0*)0xF003B010u)


#define P10_IOCR4 (*(volatile Ifx_P_IOCR4*)0xF003B014u)


#define P10_IOCR8 (*(volatile Ifx_P_IOCR8*)0xF003B018u)


#define P10_OMCR (*(volatile Ifx_P_OMCR*)0xF003B094u)


#define P10_OMCR0 (*(volatile Ifx_P_OMCR0*)0xF003B080u)


#define P10_OMCR4 (*(volatile Ifx_P_OMCR4*)0xF003B084u)


#define P10_OMCR8 (*(volatile Ifx_P_OMCR8*)0xF003B088u)


#define P10_OMR (*(volatile Ifx_P_OMR*)0xF003B004u)


#define P10_OMSR (*(volatile Ifx_P_OMSR*)0xF003B090u)


#define P10_OMSR0 (*(volatile Ifx_P_OMSR0*)0xF003B070u)


#define P10_OMSR4 (*(volatile Ifx_P_OMSR4*)0xF003B074u)


#define P10_OMSR8 (*(volatile Ifx_P_OMSR8*)0xF003B078u)


#define P10_OUT (*(volatile Ifx_P_OUT*)0xF003B000u)


#define P10_PDR0 (*(volatile Ifx_P_PDR0*)0xF003B040u)


#define P10_PDR1 (*(volatile Ifx_P_PDR1*)0xF003B044u)







#define P11_ACCEN0 (*(volatile Ifx_P_ACCEN0*)0xF003B1FCu)


#define P11_ACCEN1 (*(volatile Ifx_P_ACCEN1*)0xF003B1F8u)


#define P11_ESR (*(volatile Ifx_P_ESR*)0xF003B150u)


#define P11_ID (*(volatile Ifx_P_ID*)0xF003B108u)


#define P11_IN (*(volatile Ifx_P_IN*)0xF003B124u)


#define P11_IOCR0 (*(volatile Ifx_P_IOCR0*)0xF003B110u)


#define P11_IOCR12 (*(volatile Ifx_P_IOCR12*)0xF003B11Cu)


#define P11_IOCR4 (*(volatile Ifx_P_IOCR4*)0xF003B114u)


#define P11_IOCR8 (*(volatile Ifx_P_IOCR8*)0xF003B118u)


#define P11_OMCR (*(volatile Ifx_P_OMCR*)0xF003B194u)


#define P11_OMCR0 (*(volatile Ifx_P_OMCR0*)0xF003B180u)


#define P11_OMCR12 (*(volatile Ifx_P_OMCR12*)0xF003B18Cu)


#define P11_OMCR4 (*(volatile Ifx_P_OMCR4*)0xF003B184u)


#define P11_OMCR8 (*(volatile Ifx_P_OMCR8*)0xF003B188u)


#define P11_OMR (*(volatile Ifx_P_OMR*)0xF003B104u)


#define P11_OMSR (*(volatile Ifx_P_OMSR*)0xF003B190u)


#define P11_OMSR0 (*(volatile Ifx_P_OMSR0*)0xF003B170u)


#define P11_OMSR12 (*(volatile Ifx_P_OMSR12*)0xF003B17Cu)


#define P11_OMSR4 (*(volatile Ifx_P_OMSR4*)0xF003B174u)


#define P11_OMSR8 (*(volatile Ifx_P_OMSR8*)0xF003B178u)


#define P11_OUT (*(volatile Ifx_P_OUT*)0xF003B100u)


#define P11_PCSR (*(volatile Ifx_P_PCSR*)0xF003B164u)


#define P11_PDR0 (*(volatile Ifx_P_PDR0*)0xF003B140u)


#define P11_PDR1 (*(volatile Ifx_P_PDR1*)0xF003B144u)







#define P12_ACCEN0 (*(volatile Ifx_P_ACCEN0*)0xF003B2FCu)


#define P12_ACCEN1 (*(volatile Ifx_P_ACCEN1*)0xF003B2F8u)


#define P12_ESR (*(volatile Ifx_P_ESR*)0xF003B250u)


#define P12_ID (*(volatile Ifx_P_ID*)0xF003B208u)


#define P12_IN (*(volatile Ifx_P_IN*)0xF003B224u)


#define P12_IOCR0 (*(volatile Ifx_P_IOCR0*)0xF003B210u)


#define P12_OMCR (*(volatile Ifx_P_OMCR*)0xF003B294u)


#define P12_OMCR0 (*(volatile Ifx_P_OMCR0*)0xF003B280u)


#define P12_OMR (*(volatile Ifx_P_OMR*)0xF003B204u)


#define P12_OMSR (*(volatile Ifx_P_OMSR*)0xF003B290u)


#define P12_OMSR0 (*(volatile Ifx_P_OMSR0*)0xF003B270u)


#define P12_OUT (*(volatile Ifx_P_OUT*)0xF003B200u)


#define P12_PDR0 (*(volatile Ifx_P_PDR0*)0xF003B240u)







#define P13_ACCEN0 (*(volatile Ifx_P_ACCEN0*)0xF003B3FCu)


#define P13_ACCEN1 (*(volatile Ifx_P_ACCEN1*)0xF003B3F8u)


#define P13_ESR (*(volatile Ifx_P_ESR*)0xF003B350u)


#define P13_ID (*(volatile Ifx_P_ID*)0xF003B308u)


#define P13_IN (*(volatile Ifx_P_IN*)0xF003B324u)


#define P13_IOCR0 (*(volatile Ifx_P_IOCR0*)0xF003B310u)


#define P13_LPCR0 (*(volatile Ifx_P_LPCR0*)0xF003B3A0u)


#define P13_LPCR1 (*(volatile Ifx_P_LPCR1*)0xF003B3A4u)


#define P13_OMCR (*(volatile Ifx_P_OMCR*)0xF003B394u)


#define P13_OMCR0 (*(volatile Ifx_P_OMCR0*)0xF003B380u)


#define P13_OMR (*(volatile Ifx_P_OMR*)0xF003B304u)


#define P13_OMSR (*(volatile Ifx_P_OMSR*)0xF003B390u)


#define P13_OMSR0 (*(volatile Ifx_P_OMSR0*)0xF003B370u)


#define P13_OUT (*(volatile Ifx_P_OUT*)0xF003B300u)


#define P13_PDR0 (*(volatile Ifx_P_PDR0*)0xF003B340u)







#define P14_ACCEN0 (*(volatile Ifx_P_ACCEN0*)0xF003B4FCu)


#define P14_ACCEN1 (*(volatile Ifx_P_ACCEN1*)0xF003B4F8u)


#define P14_ESR (*(volatile Ifx_P_ESR*)0xF003B450u)


#define P14_ID (*(volatile Ifx_P_ID*)0xF003B408u)


#define P14_IN (*(volatile Ifx_P_IN*)0xF003B424u)


#define P14_IOCR0 (*(volatile Ifx_P_IOCR0*)0xF003B410u)


#define P14_IOCR4 (*(volatile Ifx_P_IOCR4*)0xF003B414u)


#define P14_IOCR8 (*(volatile Ifx_P_IOCR8*)0xF003B418u)


#define P14_OMCR (*(volatile Ifx_P_OMCR*)0xF003B494u)


#define P14_OMCR0 (*(volatile Ifx_P_OMCR0*)0xF003B480u)


#define P14_OMCR4 (*(volatile Ifx_P_OMCR4*)0xF003B484u)


#define P14_OMCR8 (*(volatile Ifx_P_OMCR8*)0xF003B488u)


#define P14_OMR (*(volatile Ifx_P_OMR*)0xF003B404u)


#define P14_OMSR (*(volatile Ifx_P_OMSR*)0xF003B490u)


#define P14_OMSR0 (*(volatile Ifx_P_OMSR0*)0xF003B470u)


#define P14_OMSR4 (*(volatile Ifx_P_OMSR4*)0xF003B474u)


#define P14_OMSR8 (*(volatile Ifx_P_OMSR8*)0xF003B478u)


#define P14_OUT (*(volatile Ifx_P_OUT*)0xF003B400u)


#define P14_PDR0 (*(volatile Ifx_P_PDR0*)0xF003B440u)


#define P14_PDR1 (*(volatile Ifx_P_PDR1*)0xF003B444u)







#define P15_ACCEN0 (*(volatile Ifx_P_ACCEN0*)0xF003B5FCu)


#define P15_ACCEN1 (*(volatile Ifx_P_ACCEN1*)0xF003B5F8u)


#define P15_ESR (*(volatile Ifx_P_ESR*)0xF003B550u)


#define P15_ID (*(volatile Ifx_P_ID*)0xF003B508u)


#define P15_IN (*(volatile Ifx_P_IN*)0xF003B524u)


#define P15_IOCR0 (*(volatile Ifx_P_IOCR0*)0xF003B510u)


#define P15_IOCR4 (*(volatile Ifx_P_IOCR4*)0xF003B514u)


#define P15_IOCR8 (*(volatile Ifx_P_IOCR8*)0xF003B518u)


#define P15_OMCR (*(volatile Ifx_P_OMCR*)0xF003B594u)


#define P15_OMCR0 (*(volatile Ifx_P_OMCR0*)0xF003B580u)


#define P15_OMCR4 (*(volatile Ifx_P_OMCR4*)0xF003B584u)


#define P15_OMCR8 (*(volatile Ifx_P_OMCR8*)0xF003B588u)


#define P15_OMR (*(volatile Ifx_P_OMR*)0xF003B504u)


#define P15_OMSR (*(volatile Ifx_P_OMSR*)0xF003B590u)


#define P15_OMSR0 (*(volatile Ifx_P_OMSR0*)0xF003B570u)


#define P15_OMSR4 (*(volatile Ifx_P_OMSR4*)0xF003B574u)


#define P15_OMSR8 (*(volatile Ifx_P_OMSR8*)0xF003B578u)


#define P15_OUT (*(volatile Ifx_P_OUT*)0xF003B500u)


#define P15_PDR0 (*(volatile Ifx_P_PDR0*)0xF003B540u)


#define P15_PDR1 (*(volatile Ifx_P_PDR1*)0xF003B544u)







#define P20_ACCEN0 (*(volatile Ifx_P_ACCEN0*)0xF003C0FCu)


#define P20_ACCEN1 (*(volatile Ifx_P_ACCEN1*)0xF003C0F8u)


#define P20_ESR (*(volatile Ifx_P_ESR*)0xF003C050u)


#define P20_ID (*(volatile Ifx_P_ID*)0xF003C008u)


#define P20_IN (*(volatile Ifx_P_IN*)0xF003C024u)


#define P20_IOCR0 (*(volatile Ifx_P_IOCR0*)0xF003C010u)


#define P20_IOCR12 (*(volatile Ifx_P_IOCR12*)0xF003C01Cu)


#define P20_IOCR4 (*(volatile Ifx_P_IOCR4*)0xF003C014u)


#define P20_IOCR8 (*(volatile Ifx_P_IOCR8*)0xF003C018u)


#define P20_OMCR (*(volatile Ifx_P_OMCR*)0xF003C094u)


#define P20_OMCR0 (*(volatile Ifx_P_OMCR0*)0xF003C080u)


#define P20_OMCR12 (*(volatile Ifx_P_OMCR12*)0xF003C08Cu)


#define P20_OMCR4 (*(volatile Ifx_P_OMCR4*)0xF003C084u)


#define P20_OMCR8 (*(volatile Ifx_P_OMCR8*)0xF003C088u)


#define P20_OMR (*(volatile Ifx_P_OMR*)0xF003C004u)


#define P20_OMSR (*(volatile Ifx_P_OMSR*)0xF003C090u)


#define P20_OMSR0 (*(volatile Ifx_P_OMSR0*)0xF003C070u)


#define P20_OMSR12 (*(volatile Ifx_P_OMSR12*)0xF003C07Cu)


#define P20_OMSR4 (*(volatile Ifx_P_OMSR4*)0xF003C074u)


#define P20_OMSR8 (*(volatile Ifx_P_OMSR8*)0xF003C078u)


#define P20_OUT (*(volatile Ifx_P_OUT*)0xF003C000u)


#define P20_PDR0 (*(volatile Ifx_P_PDR0*)0xF003C040u)


#define P20_PDR1 (*(volatile Ifx_P_PDR1*)0xF003C044u)







#define P21_ACCEN0 (*(volatile Ifx_P_ACCEN0*)0xF003C1FCu)


#define P21_ACCEN1 (*(volatile Ifx_P_ACCEN1*)0xF003C1F8u)


#define P21_ESR (*(volatile Ifx_P_ESR*)0xF003C150u)


#define P21_ID (*(volatile Ifx_P_ID*)0xF003C108u)


#define P21_IN (*(volatile Ifx_P_IN*)0xF003C124u)


#define P21_IOCR0 (*(volatile Ifx_P_IOCR0*)0xF003C110u)


#define P21_IOCR4 (*(volatile Ifx_P_IOCR4*)0xF003C114u)


#define P21_LPCR1 (*(volatile Ifx_P_LPCR1*)0xF003C1A4u)


#define P21_LPCR2 (*(volatile Ifx_P_LPCR2*)0xF003C1A8u)


#define P21_OMCR (*(volatile Ifx_P_OMCR*)0xF003C194u)


#define P21_OMCR0 (*(volatile Ifx_P_OMCR0*)0xF003C180u)


#define P21_OMCR4 (*(volatile Ifx_P_OMCR4*)0xF003C184u)


#define P21_OMR (*(volatile Ifx_P_OMR*)0xF003C104u)


#define P21_OMSR (*(volatile Ifx_P_OMSR*)0xF003C190u)


#define P21_OMSR0 (*(volatile Ifx_P_OMSR0*)0xF003C170u)


#define P21_OMSR4 (*(volatile Ifx_P_OMSR4*)0xF003C174u)


#define P21_OUT (*(volatile Ifx_P_OUT*)0xF003C100u)


#define P21_PDR0 (*(volatile Ifx_P_PDR0*)0xF003C140u)







#define P22_ACCEN0 (*(volatile Ifx_P_ACCEN0*)0xF003C2FCu)


#define P22_ACCEN1 (*(volatile Ifx_P_ACCEN1*)0xF003C2F8u)


#define P22_ESR (*(volatile Ifx_P_ESR*)0xF003C250u)


#define P22_ID (*(volatile Ifx_P_ID*)0xF003C208u)


#define P22_IN (*(volatile Ifx_P_IN*)0xF003C224u)


#define P22_IOCR0 (*(volatile Ifx_P_IOCR0*)0xF003C210u)


#define P22_IOCR4 (*(volatile Ifx_P_IOCR4*)0xF003C214u)


#define P22_IOCR8 (*(volatile Ifx_P_IOCR8*)0xF003C218u)


#define P22_LPCR0 (*(volatile Ifx_P_LPCR0*)0xF003C2A0u)


#define P22_LPCR1 (*(volatile Ifx_P_LPCR1*)0xF003C2A4u)


#define P22_OMCR (*(volatile Ifx_P_OMCR*)0xF003C294u)


#define P22_OMCR0 (*(volatile Ifx_P_OMCR0*)0xF003C280u)


#define P22_OMCR4 (*(volatile Ifx_P_OMCR4*)0xF003C284u)


#define P22_OMCR8 (*(volatile Ifx_P_OMCR8*)0xF003C288u)


#define P22_OMR (*(volatile Ifx_P_OMR*)0xF003C204u)


#define P22_OMSR (*(volatile Ifx_P_OMSR*)0xF003C290u)


#define P22_OMSR0 (*(volatile Ifx_P_OMSR0*)0xF003C270u)


#define P22_OMSR4 (*(volatile Ifx_P_OMSR4*)0xF003C274u)


#define P22_OMSR8 (*(volatile Ifx_P_OMSR8*)0xF003C278u)


#define P22_OUT (*(volatile Ifx_P_OUT*)0xF003C200u)


#define P22_PDR0 (*(volatile Ifx_P_PDR0*)0xF003C240u)


#define P22_PDR1 (*(volatile Ifx_P_PDR1*)0xF003C244u)







#define P23_ACCEN0 (*(volatile Ifx_P_ACCEN0*)0xF003C3FCu)


#define P23_ACCEN1 (*(volatile Ifx_P_ACCEN1*)0xF003C3F8u)


#define P23_ESR (*(volatile Ifx_P_ESR*)0xF003C350u)


#define P23_ID (*(volatile Ifx_P_ID*)0xF003C308u)


#define P23_IN (*(volatile Ifx_P_IN*)0xF003C324u)


#define P23_IOCR0 (*(volatile Ifx_P_IOCR0*)0xF003C310u)


#define P23_IOCR4 (*(volatile Ifx_P_IOCR4*)0xF003C314u)


#define P23_OMCR (*(volatile Ifx_P_OMCR*)0xF003C394u)


#define P23_OMCR0 (*(volatile Ifx_P_OMCR0*)0xF003C380u)


#define P23_OMCR4 (*(volatile Ifx_P_OMCR4*)0xF003C384u)


#define P23_OMR (*(volatile Ifx_P_OMR*)0xF003C304u)


#define P23_OMSR (*(volatile Ifx_P_OMSR*)0xF003C390u)


#define P23_OMSR0 (*(volatile Ifx_P_OMSR0*)0xF003C370u)


#define P23_OMSR4 (*(volatile Ifx_P_OMSR4*)0xF003C374u)


#define P23_OUT (*(volatile Ifx_P_OUT*)0xF003C300u)


#define P23_PDR0 (*(volatile Ifx_P_PDR0*)0xF003C340u)







#define P32_ACCEN0 (*(volatile Ifx_P_ACCEN0*)0xF003D2FCu)


#define P32_ACCEN1 (*(volatile Ifx_P_ACCEN1*)0xF003D2F8u)


#define P32_ESR (*(volatile Ifx_P_ESR*)0xF003D250u)


#define P32_ID (*(volatile Ifx_P_ID*)0xF003D208u)


#define P32_IN (*(volatile Ifx_P_IN*)0xF003D224u)


#define P32_IOCR0 (*(volatile Ifx_P_IOCR0*)0xF003D210u)


#define P32_IOCR4 (*(volatile Ifx_P_IOCR4*)0xF003D214u)


#define P32_OMCR (*(volatile Ifx_P_OMCR*)0xF003D294u)


#define P32_OMCR0 (*(volatile Ifx_P_OMCR0*)0xF003D280u)


#define P32_OMCR4 (*(volatile Ifx_P_OMCR4*)0xF003D284u)


#define P32_OMR (*(volatile Ifx_P_OMR*)0xF003D204u)


#define P32_OMSR (*(volatile Ifx_P_OMSR*)0xF003D290u)


#define P32_OMSR0 (*(volatile Ifx_P_OMSR0*)0xF003D270u)


#define P32_OMSR4 (*(volatile Ifx_P_OMSR4*)0xF003D274u)


#define P32_OUT (*(volatile Ifx_P_OUT*)0xF003D200u)


#define P32_PDR0 (*(volatile Ifx_P_PDR0*)0xF003D240u)







#define P33_ACCEN0 (*(volatile Ifx_P_ACCEN0*)0xF003D3FCu)


#define P33_ACCEN1 (*(volatile Ifx_P_ACCEN1*)0xF003D3F8u)


#define P33_ESR (*(volatile Ifx_P_ESR*)0xF003D350u)


#define P33_ID (*(volatile Ifx_P_ID*)0xF003D308u)


#define P33_IN (*(volatile Ifx_P_IN*)0xF003D324u)


#define P33_IOCR0 (*(volatile Ifx_P_IOCR0*)0xF003D310u)


#define P33_IOCR12 (*(volatile Ifx_P_IOCR12*)0xF003D31Cu)


#define P33_IOCR4 (*(volatile Ifx_P_IOCR4*)0xF003D314u)


#define P33_IOCR8 (*(volatile Ifx_P_IOCR8*)0xF003D318u)


#define P33_OMCR (*(volatile Ifx_P_OMCR*)0xF003D394u)


#define P33_OMCR0 (*(volatile Ifx_P_OMCR0*)0xF003D380u)


#define P33_OMCR12 (*(volatile Ifx_P_OMCR12*)0xF003D38Cu)


#define P33_OMCR4 (*(volatile Ifx_P_OMCR4*)0xF003D384u)


#define P33_OMCR8 (*(volatile Ifx_P_OMCR8*)0xF003D388u)


#define P33_OMR (*(volatile Ifx_P_OMR*)0xF003D304u)


#define P33_OMSR (*(volatile Ifx_P_OMSR*)0xF003D390u)


#define P33_OMSR0 (*(volatile Ifx_P_OMSR0*)0xF003D370u)


#define P33_OMSR12 (*(volatile Ifx_P_OMSR12*)0xF003D37Cu)


#define P33_OMSR4 (*(volatile Ifx_P_OMSR4*)0xF003D374u)


#define P33_OMSR8 (*(volatile Ifx_P_OMSR8*)0xF003D378u)


#define P33_OUT (*(volatile Ifx_P_OUT*)0xF003D300u)


#define P33_PDR0 (*(volatile Ifx_P_PDR0*)0xF003D340u)


#define P33_PDR1 (*(volatile Ifx_P_PDR1*)0xF003D344u)







#define P34_ACCEN0 (*(volatile Ifx_P_ACCEN0*)0xF003D4FCu)


#define P34_ACCEN1 (*(volatile Ifx_P_ACCEN1*)0xF003D4F8u)


#define P34_ESR (*(volatile Ifx_P_ESR*)0xF003D450u)


#define P34_ID (*(volatile Ifx_P_ID*)0xF003D408u)


#define P34_IN (*(volatile Ifx_P_IN*)0xF003D424u)


#define P34_IOCR0 (*(volatile Ifx_P_IOCR0*)0xF003D410u)


#define P34_IOCR4 (*(volatile Ifx_P_IOCR4*)0xF003D414u)


#define P34_OMCR (*(volatile Ifx_P_OMCR*)0xF003D494u)


#define P34_OMCR0 (*(volatile Ifx_P_OMCR0*)0xF003D480u)


#define P34_OMCR4 (*(volatile Ifx_P_OMCR4*)0xF003D484u)


#define P34_OMR (*(volatile Ifx_P_OMR*)0xF003D404u)


#define P34_OMSR (*(volatile Ifx_P_OMSR*)0xF003D490u)


#define P34_OMSR0 (*(volatile Ifx_P_OMSR0*)0xF003D470u)


#define P34_OMSR4 (*(volatile Ifx_P_OMSR4*)0xF003D474u)


#define P34_OUT (*(volatile Ifx_P_OUT*)0xF003D400u)


#define P34_PDR0 (*(volatile Ifx_P_PDR0*)0xF003D440u)







#define P40_ACCEN0 (*(volatile Ifx_P_ACCEN0*)0xF003E0FCu)


#define P40_ACCEN1 (*(volatile Ifx_P_ACCEN1*)0xF003E0F8u)


#define P40_ID (*(volatile Ifx_P_ID*)0xF003E008u)


#define P40_IN (*(volatile Ifx_P_IN*)0xF003E024u)


#define P40_IOCR0 (*(volatile Ifx_P_IOCR0*)0xF003E010u)


#define P40_IOCR4 (*(volatile Ifx_P_IOCR4*)0xF003E014u)


#define P40_IOCR8 (*(volatile Ifx_P_IOCR8*)0xF003E018u)


#define P40_PCSR (*(volatile Ifx_P_PCSR*)0xF003E064u)


#define P40_PDISC (*(volatile Ifx_P_PDISC*)0xF003E060u)
# 7 "D:\\Workspace\\autoever_osek\\can_based_OSEK_OS_TEST\\bsw\\drivers\\asclin.h" 2
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport_bf.h" 1 3
# 28 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport_bf.h" 3
#define IFXPORT_BF_H 1






#define IFX_P_ACCEN0_EN0_LEN (1u)


#define IFX_P_ACCEN0_EN0_MSK (0x1u)


#define IFX_P_ACCEN0_EN0_OFF (0u)


#define IFX_P_ACCEN0_EN10_LEN (1u)


#define IFX_P_ACCEN0_EN10_MSK (0x1u)


#define IFX_P_ACCEN0_EN10_OFF (10u)


#define IFX_P_ACCEN0_EN11_LEN (1u)


#define IFX_P_ACCEN0_EN11_MSK (0x1u)


#define IFX_P_ACCEN0_EN11_OFF (11u)


#define IFX_P_ACCEN0_EN12_LEN (1u)


#define IFX_P_ACCEN0_EN12_MSK (0x1u)


#define IFX_P_ACCEN0_EN12_OFF (12u)


#define IFX_P_ACCEN0_EN13_LEN (1u)


#define IFX_P_ACCEN0_EN13_MSK (0x1u)


#define IFX_P_ACCEN0_EN13_OFF (13u)


#define IFX_P_ACCEN0_EN14_LEN (1u)


#define IFX_P_ACCEN0_EN14_MSK (0x1u)


#define IFX_P_ACCEN0_EN14_OFF (14u)


#define IFX_P_ACCEN0_EN15_LEN (1u)


#define IFX_P_ACCEN0_EN15_MSK (0x1u)


#define IFX_P_ACCEN0_EN15_OFF (15u)


#define IFX_P_ACCEN0_EN16_LEN (1u)


#define IFX_P_ACCEN0_EN16_MSK (0x1u)


#define IFX_P_ACCEN0_EN16_OFF (16u)


#define IFX_P_ACCEN0_EN17_LEN (1u)


#define IFX_P_ACCEN0_EN17_MSK (0x1u)


#define IFX_P_ACCEN0_EN17_OFF (17u)


#define IFX_P_ACCEN0_EN18_LEN (1u)


#define IFX_P_ACCEN0_EN18_MSK (0x1u)


#define IFX_P_ACCEN0_EN18_OFF (18u)


#define IFX_P_ACCEN0_EN19_LEN (1u)


#define IFX_P_ACCEN0_EN19_MSK (0x1u)


#define IFX_P_ACCEN0_EN19_OFF (19u)


#define IFX_P_ACCEN0_EN1_LEN (1u)


#define IFX_P_ACCEN0_EN1_MSK (0x1u)


#define IFX_P_ACCEN0_EN1_OFF (1u)


#define IFX_P_ACCEN0_EN20_LEN (1u)


#define IFX_P_ACCEN0_EN20_MSK (0x1u)


#define IFX_P_ACCEN0_EN20_OFF (20u)


#define IFX_P_ACCEN0_EN21_LEN (1u)


#define IFX_P_ACCEN0_EN21_MSK (0x1u)


#define IFX_P_ACCEN0_EN21_OFF (21u)


#define IFX_P_ACCEN0_EN22_LEN (1u)


#define IFX_P_ACCEN0_EN22_MSK (0x1u)


#define IFX_P_ACCEN0_EN22_OFF (22u)


#define IFX_P_ACCEN0_EN23_LEN (1u)


#define IFX_P_ACCEN0_EN23_MSK (0x1u)


#define IFX_P_ACCEN0_EN23_OFF (23u)


#define IFX_P_ACCEN0_EN24_LEN (1u)


#define IFX_P_ACCEN0_EN24_MSK (0x1u)


#define IFX_P_ACCEN0_EN24_OFF (24u)


#define IFX_P_ACCEN0_EN25_LEN (1u)


#define IFX_P_ACCEN0_EN25_MSK (0x1u)


#define IFX_P_ACCEN0_EN25_OFF (25u)


#define IFX_P_ACCEN0_EN26_LEN (1u)


#define IFX_P_ACCEN0_EN26_MSK (0x1u)


#define IFX_P_ACCEN0_EN26_OFF (26u)


#define IFX_P_ACCEN0_EN27_LEN (1u)


#define IFX_P_ACCEN0_EN27_MSK (0x1u)


#define IFX_P_ACCEN0_EN27_OFF (27u)


#define IFX_P_ACCEN0_EN28_LEN (1u)


#define IFX_P_ACCEN0_EN28_MSK (0x1u)


#define IFX_P_ACCEN0_EN28_OFF (28u)


#define IFX_P_ACCEN0_EN29_LEN (1u)


#define IFX_P_ACCEN0_EN29_MSK (0x1u)


#define IFX_P_ACCEN0_EN29_OFF (29u)


#define IFX_P_ACCEN0_EN2_LEN (1u)


#define IFX_P_ACCEN0_EN2_MSK (0x1u)


#define IFX_P_ACCEN0_EN2_OFF (2u)


#define IFX_P_ACCEN0_EN30_LEN (1u)


#define IFX_P_ACCEN0_EN30_MSK (0x1u)


#define IFX_P_ACCEN0_EN30_OFF (30u)


#define IFX_P_ACCEN0_EN31_LEN (1u)


#define IFX_P_ACCEN0_EN31_MSK (0x1u)


#define IFX_P_ACCEN0_EN31_OFF (31u)


#define IFX_P_ACCEN0_EN3_LEN (1u)


#define IFX_P_ACCEN0_EN3_MSK (0x1u)


#define IFX_P_ACCEN0_EN3_OFF (3u)


#define IFX_P_ACCEN0_EN4_LEN (1u)


#define IFX_P_ACCEN0_EN4_MSK (0x1u)


#define IFX_P_ACCEN0_EN4_OFF (4u)


#define IFX_P_ACCEN0_EN5_LEN (1u)


#define IFX_P_ACCEN0_EN5_MSK (0x1u)


#define IFX_P_ACCEN0_EN5_OFF (5u)


#define IFX_P_ACCEN0_EN6_LEN (1u)


#define IFX_P_ACCEN0_EN6_MSK (0x1u)


#define IFX_P_ACCEN0_EN6_OFF (6u)


#define IFX_P_ACCEN0_EN7_LEN (1u)


#define IFX_P_ACCEN0_EN7_MSK (0x1u)


#define IFX_P_ACCEN0_EN7_OFF (7u)


#define IFX_P_ACCEN0_EN8_LEN (1u)


#define IFX_P_ACCEN0_EN8_MSK (0x1u)


#define IFX_P_ACCEN0_EN8_OFF (8u)


#define IFX_P_ACCEN0_EN9_LEN (1u)


#define IFX_P_ACCEN0_EN9_MSK (0x1u)


#define IFX_P_ACCEN0_EN9_OFF (9u)


#define IFX_P_ESR_EN0_LEN (1u)


#define IFX_P_ESR_EN0_MSK (0x1u)


#define IFX_P_ESR_EN0_OFF (0u)


#define IFX_P_ESR_EN10_LEN (1u)


#define IFX_P_ESR_EN10_MSK (0x1u)


#define IFX_P_ESR_EN10_OFF (10u)


#define IFX_P_ESR_EN11_LEN (1u)


#define IFX_P_ESR_EN11_MSK (0x1u)


#define IFX_P_ESR_EN11_OFF (11u)


#define IFX_P_ESR_EN12_LEN (1u)


#define IFX_P_ESR_EN12_MSK (0x1u)


#define IFX_P_ESR_EN12_OFF (12u)


#define IFX_P_ESR_EN13_LEN (1u)


#define IFX_P_ESR_EN13_MSK (0x1u)


#define IFX_P_ESR_EN13_OFF (13u)


#define IFX_P_ESR_EN14_LEN (1u)


#define IFX_P_ESR_EN14_MSK (0x1u)


#define IFX_P_ESR_EN14_OFF (14u)


#define IFX_P_ESR_EN15_LEN (1u)


#define IFX_P_ESR_EN15_MSK (0x1u)


#define IFX_P_ESR_EN15_OFF (15u)


#define IFX_P_ESR_EN1_LEN (1u)


#define IFX_P_ESR_EN1_MSK (0x1u)


#define IFX_P_ESR_EN1_OFF (1u)


#define IFX_P_ESR_EN2_LEN (1u)


#define IFX_P_ESR_EN2_MSK (0x1u)


#define IFX_P_ESR_EN2_OFF (2u)


#define IFX_P_ESR_EN3_LEN (1u)


#define IFX_P_ESR_EN3_MSK (0x1u)


#define IFX_P_ESR_EN3_OFF (3u)


#define IFX_P_ESR_EN4_LEN (1u)


#define IFX_P_ESR_EN4_MSK (0x1u)


#define IFX_P_ESR_EN4_OFF (4u)


#define IFX_P_ESR_EN5_LEN (1u)


#define IFX_P_ESR_EN5_MSK (0x1u)


#define IFX_P_ESR_EN5_OFF (5u)


#define IFX_P_ESR_EN6_LEN (1u)


#define IFX_P_ESR_EN6_MSK (0x1u)


#define IFX_P_ESR_EN6_OFF (6u)


#define IFX_P_ESR_EN7_LEN (1u)


#define IFX_P_ESR_EN7_MSK (0x1u)


#define IFX_P_ESR_EN7_OFF (7u)


#define IFX_P_ESR_EN8_LEN (1u)


#define IFX_P_ESR_EN8_MSK (0x1u)


#define IFX_P_ESR_EN8_OFF (8u)


#define IFX_P_ESR_EN9_LEN (1u)


#define IFX_P_ESR_EN9_MSK (0x1u)


#define IFX_P_ESR_EN9_OFF (9u)


#define IFX_P_ID_MODNUMBER_LEN (16u)


#define IFX_P_ID_MODNUMBER_MSK (0xffffu)


#define IFX_P_ID_MODNUMBER_OFF (16u)


#define IFX_P_ID_MODREV_LEN (8u)


#define IFX_P_ID_MODREV_MSK (0xffu)


#define IFX_P_ID_MODREV_OFF (0u)


#define IFX_P_ID_MODTYPE_LEN (8u)


#define IFX_P_ID_MODTYPE_MSK (0xffu)


#define IFX_P_ID_MODTYPE_OFF (8u)


#define IFX_P_IN_P0_LEN (1u)


#define IFX_P_IN_P0_MSK (0x1u)


#define IFX_P_IN_P0_OFF (0u)


#define IFX_P_IN_P10_LEN (1u)


#define IFX_P_IN_P10_MSK (0x1u)


#define IFX_P_IN_P10_OFF (10u)


#define IFX_P_IN_P11_LEN (1u)


#define IFX_P_IN_P11_MSK (0x1u)


#define IFX_P_IN_P11_OFF (11u)


#define IFX_P_IN_P12_LEN (1u)


#define IFX_P_IN_P12_MSK (0x1u)


#define IFX_P_IN_P12_OFF (12u)


#define IFX_P_IN_P13_LEN (1u)


#define IFX_P_IN_P13_MSK (0x1u)


#define IFX_P_IN_P13_OFF (13u)


#define IFX_P_IN_P14_LEN (1u)


#define IFX_P_IN_P14_MSK (0x1u)


#define IFX_P_IN_P14_OFF (14u)


#define IFX_P_IN_P15_LEN (1u)


#define IFX_P_IN_P15_MSK (0x1u)


#define IFX_P_IN_P15_OFF (15u)


#define IFX_P_IN_P1_LEN (1u)


#define IFX_P_IN_P1_MSK (0x1u)


#define IFX_P_IN_P1_OFF (1u)


#define IFX_P_IN_P2_LEN (1u)


#define IFX_P_IN_P2_MSK (0x1u)


#define IFX_P_IN_P2_OFF (2u)


#define IFX_P_IN_P3_LEN (1u)


#define IFX_P_IN_P3_MSK (0x1u)


#define IFX_P_IN_P3_OFF (3u)


#define IFX_P_IN_P4_LEN (1u)


#define IFX_P_IN_P4_MSK (0x1u)


#define IFX_P_IN_P4_OFF (4u)


#define IFX_P_IN_P5_LEN (1u)


#define IFX_P_IN_P5_MSK (0x1u)


#define IFX_P_IN_P5_OFF (5u)


#define IFX_P_IN_P6_LEN (1u)


#define IFX_P_IN_P6_MSK (0x1u)


#define IFX_P_IN_P6_OFF (6u)


#define IFX_P_IN_P7_LEN (1u)


#define IFX_P_IN_P7_MSK (0x1u)


#define IFX_P_IN_P7_OFF (7u)


#define IFX_P_IN_P8_LEN (1u)


#define IFX_P_IN_P8_MSK (0x1u)


#define IFX_P_IN_P8_OFF (8u)


#define IFX_P_IN_P9_LEN (1u)


#define IFX_P_IN_P9_MSK (0x1u)


#define IFX_P_IN_P9_OFF (9u)


#define IFX_P_IOCR0_PC0_LEN (5u)


#define IFX_P_IOCR0_PC0_MSK (0x1fu)


#define IFX_P_IOCR0_PC0_OFF (3u)


#define IFX_P_IOCR0_PC1_LEN (5u)


#define IFX_P_IOCR0_PC1_MSK (0x1fu)


#define IFX_P_IOCR0_PC1_OFF (11u)


#define IFX_P_IOCR0_PC2_LEN (5u)


#define IFX_P_IOCR0_PC2_MSK (0x1fu)


#define IFX_P_IOCR0_PC2_OFF (19u)


#define IFX_P_IOCR0_PC3_LEN (5u)


#define IFX_P_IOCR0_PC3_MSK (0x1fu)


#define IFX_P_IOCR0_PC3_OFF (27u)


#define IFX_P_IOCR12_PC12_LEN (5u)


#define IFX_P_IOCR12_PC12_MSK (0x1fu)


#define IFX_P_IOCR12_PC12_OFF (3u)


#define IFX_P_IOCR12_PC13_LEN (5u)


#define IFX_P_IOCR12_PC13_MSK (0x1fu)


#define IFX_P_IOCR12_PC13_OFF (11u)


#define IFX_P_IOCR12_PC14_LEN (5u)


#define IFX_P_IOCR12_PC14_MSK (0x1fu)


#define IFX_P_IOCR12_PC14_OFF (19u)


#define IFX_P_IOCR12_PC15_LEN (5u)


#define IFX_P_IOCR12_PC15_MSK (0x1fu)


#define IFX_P_IOCR12_PC15_OFF (27u)


#define IFX_P_IOCR4_PC4_LEN (5u)


#define IFX_P_IOCR4_PC4_MSK (0x1fu)


#define IFX_P_IOCR4_PC4_OFF (3u)


#define IFX_P_IOCR4_PC5_LEN (5u)


#define IFX_P_IOCR4_PC5_MSK (0x1fu)


#define IFX_P_IOCR4_PC5_OFF (11u)


#define IFX_P_IOCR4_PC6_LEN (5u)


#define IFX_P_IOCR4_PC6_MSK (0x1fu)


#define IFX_P_IOCR4_PC6_OFF (19u)


#define IFX_P_IOCR4_PC7_LEN (5u)


#define IFX_P_IOCR4_PC7_MSK (0x1fu)


#define IFX_P_IOCR4_PC7_OFF (27u)


#define IFX_P_IOCR8_PC10_LEN (5u)


#define IFX_P_IOCR8_PC10_MSK (0x1fu)


#define IFX_P_IOCR8_PC10_OFF (19u)


#define IFX_P_IOCR8_PC11_LEN (5u)


#define IFX_P_IOCR8_PC11_MSK (0x1fu)


#define IFX_P_IOCR8_PC11_OFF (27u)


#define IFX_P_IOCR8_PC8_LEN (5u)


#define IFX_P_IOCR8_PC8_MSK (0x1fu)


#define IFX_P_IOCR8_PC8_OFF (3u)


#define IFX_P_IOCR8_PC9_LEN (5u)


#define IFX_P_IOCR8_PC9_MSK (0x1fu)


#define IFX_P_IOCR8_PC9_OFF (11u)


#define IFX_P_LPCR0_PS1_LEN (1u)


#define IFX_P_LPCR0_PS1_MSK (0x1u)


#define IFX_P_LPCR0_PS1_OFF (1u)


#define IFX_P_LPCR1_P21_LRXTERM_LEN (5u)


#define IFX_P_LPCR1_P21_LRXTERM_MSK (0x1fu)


#define IFX_P_LPCR1_P21_LRXTERM_OFF (3u)


#define IFX_P_LPCR1_P21_RDIS_CTRL_LEN (1u)


#define IFX_P_LPCR1_P21_RDIS_CTRL_MSK (0x1u)


#define IFX_P_LPCR1_P21_RDIS_CTRL_OFF (0u)


#define IFX_P_LPCR1_P21_RX_DIS_LEN (1u)


#define IFX_P_LPCR1_P21_RX_DIS_MSK (0x1u)


#define IFX_P_LPCR1_P21_RX_DIS_OFF (1u)


#define IFX_P_LPCR1_P21_TERM_LEN (1u)


#define IFX_P_LPCR1_P21_TERM_MSK (0x1u)


#define IFX_P_LPCR1_P21_TERM_OFF (2u)


#define IFX_P_LPCR1_PS1_LEN (1u)


#define IFX_P_LPCR1_PS1_MSK (0x1u)


#define IFX_P_LPCR1_PS1_OFF (1u)


#define IFX_P_LPCR2_LVDSR_LEN (1u)


#define IFX_P_LPCR2_LVDSR_MSK (0x1u)


#define IFX_P_LPCR2_LVDSR_OFF (8u)


#define IFX_P_LPCR2_LVDSRL_LEN (1u)


#define IFX_P_LPCR2_LVDSRL_MSK (0x1u)


#define IFX_P_LPCR2_LVDSRL_OFF (9u)


#define IFX_P_LPCR2_TDIS_CTRL_LEN (1u)


#define IFX_P_LPCR2_TDIS_CTRL_MSK (0x1u)


#define IFX_P_LPCR2_TDIS_CTRL_OFF (12u)


#define IFX_P_LPCR2_TX_DIS_LEN (1u)


#define IFX_P_LPCR2_TX_DIS_MSK (0x1u)


#define IFX_P_LPCR2_TX_DIS_OFF (13u)


#define IFX_P_LPCR2_TX_PD_LEN (1u)


#define IFX_P_LPCR2_TX_PD_MSK (0x1u)


#define IFX_P_LPCR2_TX_PD_OFF (14u)


#define IFX_P_LPCR2_TX_PWDPD_LEN (1u)


#define IFX_P_LPCR2_TX_PWDPD_MSK (0x1u)


#define IFX_P_LPCR2_TX_PWDPD_OFF (15u)


#define IFX_P_OMCR0_PCL0_LEN (1u)


#define IFX_P_OMCR0_PCL0_MSK (0x1u)


#define IFX_P_OMCR0_PCL0_OFF (16u)


#define IFX_P_OMCR0_PCL1_LEN (1u)


#define IFX_P_OMCR0_PCL1_MSK (0x1u)


#define IFX_P_OMCR0_PCL1_OFF (17u)


#define IFX_P_OMCR0_PCL2_LEN (1u)


#define IFX_P_OMCR0_PCL2_MSK (0x1u)


#define IFX_P_OMCR0_PCL2_OFF (18u)


#define IFX_P_OMCR0_PCL3_LEN (1u)


#define IFX_P_OMCR0_PCL3_MSK (0x1u)


#define IFX_P_OMCR0_PCL3_OFF (19u)


#define IFX_P_OMCR12_PCL12_LEN (1u)


#define IFX_P_OMCR12_PCL12_MSK (0x1u)


#define IFX_P_OMCR12_PCL12_OFF (28u)


#define IFX_P_OMCR12_PCL13_LEN (1u)


#define IFX_P_OMCR12_PCL13_MSK (0x1u)


#define IFX_P_OMCR12_PCL13_OFF (29u)


#define IFX_P_OMCR12_PCL14_LEN (1u)


#define IFX_P_OMCR12_PCL14_MSK (0x1u)


#define IFX_P_OMCR12_PCL14_OFF (30u)


#define IFX_P_OMCR12_PCL15_LEN (1u)


#define IFX_P_OMCR12_PCL15_MSK (0x1u)


#define IFX_P_OMCR12_PCL15_OFF (31u)


#define IFX_P_OMCR4_PCL4_LEN (1u)


#define IFX_P_OMCR4_PCL4_MSK (0x1u)


#define IFX_P_OMCR4_PCL4_OFF (20u)


#define IFX_P_OMCR4_PCL5_LEN (1u)


#define IFX_P_OMCR4_PCL5_MSK (0x1u)


#define IFX_P_OMCR4_PCL5_OFF (21u)


#define IFX_P_OMCR4_PCL6_LEN (1u)


#define IFX_P_OMCR4_PCL6_MSK (0x1u)


#define IFX_P_OMCR4_PCL6_OFF (22u)


#define IFX_P_OMCR4_PCL7_LEN (1u)


#define IFX_P_OMCR4_PCL7_MSK (0x1u)


#define IFX_P_OMCR4_PCL7_OFF (23u)


#define IFX_P_OMCR8_PCL10_LEN (1u)


#define IFX_P_OMCR8_PCL10_MSK (0x1u)


#define IFX_P_OMCR8_PCL10_OFF (26u)


#define IFX_P_OMCR8_PCL11_LEN (1u)


#define IFX_P_OMCR8_PCL11_MSK (0x1u)


#define IFX_P_OMCR8_PCL11_OFF (27u)


#define IFX_P_OMCR8_PCL8_LEN (1u)


#define IFX_P_OMCR8_PCL8_MSK (0x1u)


#define IFX_P_OMCR8_PCL8_OFF (24u)


#define IFX_P_OMCR8_PCL9_LEN (1u)


#define IFX_P_OMCR8_PCL9_MSK (0x1u)


#define IFX_P_OMCR8_PCL9_OFF (25u)


#define IFX_P_OMCR_PCL0_LEN (1u)


#define IFX_P_OMCR_PCL0_MSK (0x1u)


#define IFX_P_OMCR_PCL0_OFF (16u)


#define IFX_P_OMCR_PCL10_LEN (1u)


#define IFX_P_OMCR_PCL10_MSK (0x1u)


#define IFX_P_OMCR_PCL10_OFF (26u)


#define IFX_P_OMCR_PCL11_LEN (1u)


#define IFX_P_OMCR_PCL11_MSK (0x1u)


#define IFX_P_OMCR_PCL11_OFF (27u)


#define IFX_P_OMCR_PCL12_LEN (1u)


#define IFX_P_OMCR_PCL12_MSK (0x1u)


#define IFX_P_OMCR_PCL12_OFF (28u)


#define IFX_P_OMCR_PCL13_LEN (1u)


#define IFX_P_OMCR_PCL13_MSK (0x1u)


#define IFX_P_OMCR_PCL13_OFF (29u)


#define IFX_P_OMCR_PCL14_LEN (1u)


#define IFX_P_OMCR_PCL14_MSK (0x1u)


#define IFX_P_OMCR_PCL14_OFF (30u)


#define IFX_P_OMCR_PCL15_LEN (1u)


#define IFX_P_OMCR_PCL15_MSK (0x1u)


#define IFX_P_OMCR_PCL15_OFF (31u)


#define IFX_P_OMCR_PCL1_LEN (1u)


#define IFX_P_OMCR_PCL1_MSK (0x1u)


#define IFX_P_OMCR_PCL1_OFF (17u)


#define IFX_P_OMCR_PCL2_LEN (1u)


#define IFX_P_OMCR_PCL2_MSK (0x1u)


#define IFX_P_OMCR_PCL2_OFF (18u)


#define IFX_P_OMCR_PCL3_LEN (1u)


#define IFX_P_OMCR_PCL3_MSK (0x1u)


#define IFX_P_OMCR_PCL3_OFF (19u)


#define IFX_P_OMCR_PCL4_LEN (1u)


#define IFX_P_OMCR_PCL4_MSK (0x1u)


#define IFX_P_OMCR_PCL4_OFF (20u)


#define IFX_P_OMCR_PCL5_LEN (1u)


#define IFX_P_OMCR_PCL5_MSK (0x1u)


#define IFX_P_OMCR_PCL5_OFF (21u)


#define IFX_P_OMCR_PCL6_LEN (1u)


#define IFX_P_OMCR_PCL6_MSK (0x1u)


#define IFX_P_OMCR_PCL6_OFF (22u)


#define IFX_P_OMCR_PCL7_LEN (1u)


#define IFX_P_OMCR_PCL7_MSK (0x1u)


#define IFX_P_OMCR_PCL7_OFF (23u)


#define IFX_P_OMCR_PCL8_LEN (1u)


#define IFX_P_OMCR_PCL8_MSK (0x1u)


#define IFX_P_OMCR_PCL8_OFF (24u)


#define IFX_P_OMCR_PCL9_LEN (1u)


#define IFX_P_OMCR_PCL9_MSK (0x1u)


#define IFX_P_OMCR_PCL9_OFF (25u)


#define IFX_P_OMR_PCL0_LEN (1u)


#define IFX_P_OMR_PCL0_MSK (0x1u)


#define IFX_P_OMR_PCL0_OFF (16u)


#define IFX_P_OMR_PCL10_LEN (1u)


#define IFX_P_OMR_PCL10_MSK (0x1u)


#define IFX_P_OMR_PCL10_OFF (26u)


#define IFX_P_OMR_PCL11_LEN (1u)


#define IFX_P_OMR_PCL11_MSK (0x1u)


#define IFX_P_OMR_PCL11_OFF (27u)


#define IFX_P_OMR_PCL12_LEN (1u)


#define IFX_P_OMR_PCL12_MSK (0x1u)


#define IFX_P_OMR_PCL12_OFF (28u)


#define IFX_P_OMR_PCL13_LEN (1u)


#define IFX_P_OMR_PCL13_MSK (0x1u)


#define IFX_P_OMR_PCL13_OFF (29u)


#define IFX_P_OMR_PCL14_LEN (1u)


#define IFX_P_OMR_PCL14_MSK (0x1u)


#define IFX_P_OMR_PCL14_OFF (30u)


#define IFX_P_OMR_PCL15_LEN (1u)


#define IFX_P_OMR_PCL15_MSK (0x1u)


#define IFX_P_OMR_PCL15_OFF (31u)


#define IFX_P_OMR_PCL1_LEN (1u)


#define IFX_P_OMR_PCL1_MSK (0x1u)


#define IFX_P_OMR_PCL1_OFF (17u)


#define IFX_P_OMR_PCL2_LEN (1u)


#define IFX_P_OMR_PCL2_MSK (0x1u)


#define IFX_P_OMR_PCL2_OFF (18u)


#define IFX_P_OMR_PCL3_LEN (1u)


#define IFX_P_OMR_PCL3_MSK (0x1u)


#define IFX_P_OMR_PCL3_OFF (19u)


#define IFX_P_OMR_PCL4_LEN (1u)


#define IFX_P_OMR_PCL4_MSK (0x1u)


#define IFX_P_OMR_PCL4_OFF (20u)


#define IFX_P_OMR_PCL5_LEN (1u)


#define IFX_P_OMR_PCL5_MSK (0x1u)


#define IFX_P_OMR_PCL5_OFF (21u)


#define IFX_P_OMR_PCL6_LEN (1u)


#define IFX_P_OMR_PCL6_MSK (0x1u)


#define IFX_P_OMR_PCL6_OFF (22u)


#define IFX_P_OMR_PCL7_LEN (1u)


#define IFX_P_OMR_PCL7_MSK (0x1u)


#define IFX_P_OMR_PCL7_OFF (23u)


#define IFX_P_OMR_PCL8_LEN (1u)


#define IFX_P_OMR_PCL8_MSK (0x1u)


#define IFX_P_OMR_PCL8_OFF (24u)


#define IFX_P_OMR_PCL9_LEN (1u)


#define IFX_P_OMR_PCL9_MSK (0x1u)


#define IFX_P_OMR_PCL9_OFF (25u)


#define IFX_P_OMR_PS0_LEN (1u)


#define IFX_P_OMR_PS0_MSK (0x1u)


#define IFX_P_OMR_PS0_OFF (0u)


#define IFX_P_OMR_PS10_LEN (1u)


#define IFX_P_OMR_PS10_MSK (0x1u)


#define IFX_P_OMR_PS10_OFF (10u)


#define IFX_P_OMR_PS11_LEN (1u)


#define IFX_P_OMR_PS11_MSK (0x1u)


#define IFX_P_OMR_PS11_OFF (11u)


#define IFX_P_OMR_PS12_LEN (1u)


#define IFX_P_OMR_PS12_MSK (0x1u)


#define IFX_P_OMR_PS12_OFF (12u)


#define IFX_P_OMR_PS13_LEN (1u)


#define IFX_P_OMR_PS13_MSK (0x1u)


#define IFX_P_OMR_PS13_OFF (13u)


#define IFX_P_OMR_PS14_LEN (1u)


#define IFX_P_OMR_PS14_MSK (0x1u)


#define IFX_P_OMR_PS14_OFF (14u)


#define IFX_P_OMR_PS15_LEN (1u)


#define IFX_P_OMR_PS15_MSK (0x1u)


#define IFX_P_OMR_PS15_OFF (15u)


#define IFX_P_OMR_PS1_LEN (1u)


#define IFX_P_OMR_PS1_MSK (0x1u)


#define IFX_P_OMR_PS1_OFF (1u)


#define IFX_P_OMR_PS2_LEN (1u)


#define IFX_P_OMR_PS2_MSK (0x1u)


#define IFX_P_OMR_PS2_OFF (2u)


#define IFX_P_OMR_PS3_LEN (1u)


#define IFX_P_OMR_PS3_MSK (0x1u)


#define IFX_P_OMR_PS3_OFF (3u)


#define IFX_P_OMR_PS4_LEN (1u)


#define IFX_P_OMR_PS4_MSK (0x1u)


#define IFX_P_OMR_PS4_OFF (4u)


#define IFX_P_OMR_PS5_LEN (1u)


#define IFX_P_OMR_PS5_MSK (0x1u)


#define IFX_P_OMR_PS5_OFF (5u)


#define IFX_P_OMR_PS6_LEN (1u)


#define IFX_P_OMR_PS6_MSK (0x1u)


#define IFX_P_OMR_PS6_OFF (6u)


#define IFX_P_OMR_PS7_LEN (1u)


#define IFX_P_OMR_PS7_MSK (0x1u)


#define IFX_P_OMR_PS7_OFF (7u)


#define IFX_P_OMR_PS8_LEN (1u)


#define IFX_P_OMR_PS8_MSK (0x1u)


#define IFX_P_OMR_PS8_OFF (8u)


#define IFX_P_OMR_PS9_LEN (1u)


#define IFX_P_OMR_PS9_MSK (0x1u)


#define IFX_P_OMR_PS9_OFF (9u)


#define IFX_P_OMSR0_PS0_LEN (1u)


#define IFX_P_OMSR0_PS0_MSK (0x1u)


#define IFX_P_OMSR0_PS0_OFF (0u)


#define IFX_P_OMSR0_PS1_LEN (1u)


#define IFX_P_OMSR0_PS1_MSK (0x1u)


#define IFX_P_OMSR0_PS1_OFF (1u)


#define IFX_P_OMSR0_PS2_LEN (1u)


#define IFX_P_OMSR0_PS2_MSK (0x1u)


#define IFX_P_OMSR0_PS2_OFF (2u)


#define IFX_P_OMSR0_PS3_LEN (1u)


#define IFX_P_OMSR0_PS3_MSK (0x1u)


#define IFX_P_OMSR0_PS3_OFF (3u)


#define IFX_P_OMSR12_PS12_LEN (1u)


#define IFX_P_OMSR12_PS12_MSK (0x1u)


#define IFX_P_OMSR12_PS12_OFF (12u)


#define IFX_P_OMSR12_PS13_LEN (1u)


#define IFX_P_OMSR12_PS13_MSK (0x1u)


#define IFX_P_OMSR12_PS13_OFF (13u)


#define IFX_P_OMSR12_PS14_LEN (1u)


#define IFX_P_OMSR12_PS14_MSK (0x1u)


#define IFX_P_OMSR12_PS14_OFF (14u)


#define IFX_P_OMSR12_PS15_LEN (1u)


#define IFX_P_OMSR12_PS15_MSK (0x1u)


#define IFX_P_OMSR12_PS15_OFF (15u)


#define IFX_P_OMSR4_PS4_LEN (1u)


#define IFX_P_OMSR4_PS4_MSK (0x1u)


#define IFX_P_OMSR4_PS4_OFF (4u)


#define IFX_P_OMSR4_PS5_LEN (1u)


#define IFX_P_OMSR4_PS5_MSK (0x1u)


#define IFX_P_OMSR4_PS5_OFF (5u)


#define IFX_P_OMSR4_PS6_LEN (1u)


#define IFX_P_OMSR4_PS6_MSK (0x1u)


#define IFX_P_OMSR4_PS6_OFF (6u)


#define IFX_P_OMSR4_PS7_LEN (1u)


#define IFX_P_OMSR4_PS7_MSK (0x1u)


#define IFX_P_OMSR4_PS7_OFF (7u)


#define IFX_P_OMSR8_PS10_LEN (1u)


#define IFX_P_OMSR8_PS10_MSK (0x1u)


#define IFX_P_OMSR8_PS10_OFF (10u)


#define IFX_P_OMSR8_PS11_LEN (1u)


#define IFX_P_OMSR8_PS11_MSK (0x1u)


#define IFX_P_OMSR8_PS11_OFF (11u)


#define IFX_P_OMSR8_PS8_LEN (1u)


#define IFX_P_OMSR8_PS8_MSK (0x1u)


#define IFX_P_OMSR8_PS8_OFF (8u)


#define IFX_P_OMSR8_PS9_LEN (1u)


#define IFX_P_OMSR8_PS9_MSK (0x1u)


#define IFX_P_OMSR8_PS9_OFF (9u)


#define IFX_P_OMSR_PS0_LEN (1u)


#define IFX_P_OMSR_PS0_MSK (0x1u)


#define IFX_P_OMSR_PS0_OFF (0u)


#define IFX_P_OMSR_PS10_LEN (1u)


#define IFX_P_OMSR_PS10_MSK (0x1u)


#define IFX_P_OMSR_PS10_OFF (10u)


#define IFX_P_OMSR_PS11_LEN (1u)


#define IFX_P_OMSR_PS11_MSK (0x1u)


#define IFX_P_OMSR_PS11_OFF (11u)


#define IFX_P_OMSR_PS12_LEN (1u)


#define IFX_P_OMSR_PS12_MSK (0x1u)


#define IFX_P_OMSR_PS12_OFF (12u)


#define IFX_P_OMSR_PS13_LEN (1u)


#define IFX_P_OMSR_PS13_MSK (0x1u)


#define IFX_P_OMSR_PS13_OFF (13u)


#define IFX_P_OMSR_PS14_LEN (1u)


#define IFX_P_OMSR_PS14_MSK (0x1u)


#define IFX_P_OMSR_PS14_OFF (14u)


#define IFX_P_OMSR_PS15_LEN (1u)


#define IFX_P_OMSR_PS15_MSK (0x1u)


#define IFX_P_OMSR_PS15_OFF (15u)


#define IFX_P_OMSR_PS1_LEN (1u)


#define IFX_P_OMSR_PS1_MSK (0x1u)


#define IFX_P_OMSR_PS1_OFF (1u)


#define IFX_P_OMSR_PS2_LEN (1u)


#define IFX_P_OMSR_PS2_MSK (0x1u)


#define IFX_P_OMSR_PS2_OFF (2u)


#define IFX_P_OMSR_PS3_LEN (1u)


#define IFX_P_OMSR_PS3_MSK (0x1u)


#define IFX_P_OMSR_PS3_OFF (3u)


#define IFX_P_OMSR_PS4_LEN (1u)


#define IFX_P_OMSR_PS4_MSK (0x1u)


#define IFX_P_OMSR_PS4_OFF (4u)


#define IFX_P_OMSR_PS5_LEN (1u)


#define IFX_P_OMSR_PS5_MSK (0x1u)


#define IFX_P_OMSR_PS5_OFF (5u)


#define IFX_P_OMSR_PS6_LEN (1u)


#define IFX_P_OMSR_PS6_MSK (0x1u)


#define IFX_P_OMSR_PS6_OFF (6u)


#define IFX_P_OMSR_PS7_LEN (1u)


#define IFX_P_OMSR_PS7_MSK (0x1u)


#define IFX_P_OMSR_PS7_OFF (7u)


#define IFX_P_OMSR_PS8_LEN (1u)


#define IFX_P_OMSR_PS8_MSK (0x1u)


#define IFX_P_OMSR_PS8_OFF (8u)


#define IFX_P_OMSR_PS9_LEN (1u)


#define IFX_P_OMSR_PS9_MSK (0x1u)


#define IFX_P_OMSR_PS9_OFF (9u)


#define IFX_P_OUT_P0_LEN (1u)


#define IFX_P_OUT_P0_MSK (0x1u)


#define IFX_P_OUT_P0_OFF (0u)


#define IFX_P_OUT_P10_LEN (1u)


#define IFX_P_OUT_P10_MSK (0x1u)


#define IFX_P_OUT_P10_OFF (10u)


#define IFX_P_OUT_P11_LEN (1u)


#define IFX_P_OUT_P11_MSK (0x1u)


#define IFX_P_OUT_P11_OFF (11u)


#define IFX_P_OUT_P12_LEN (1u)


#define IFX_P_OUT_P12_MSK (0x1u)


#define IFX_P_OUT_P12_OFF (12u)


#define IFX_P_OUT_P13_LEN (1u)


#define IFX_P_OUT_P13_MSK (0x1u)


#define IFX_P_OUT_P13_OFF (13u)


#define IFX_P_OUT_P14_LEN (1u)


#define IFX_P_OUT_P14_MSK (0x1u)


#define IFX_P_OUT_P14_OFF (14u)


#define IFX_P_OUT_P15_LEN (1u)


#define IFX_P_OUT_P15_MSK (0x1u)


#define IFX_P_OUT_P15_OFF (15u)


#define IFX_P_OUT_P1_LEN (1u)


#define IFX_P_OUT_P1_MSK (0x1u)


#define IFX_P_OUT_P1_OFF (1u)


#define IFX_P_OUT_P2_LEN (1u)


#define IFX_P_OUT_P2_MSK (0x1u)


#define IFX_P_OUT_P2_OFF (2u)


#define IFX_P_OUT_P3_LEN (1u)


#define IFX_P_OUT_P3_MSK (0x1u)


#define IFX_P_OUT_P3_OFF (3u)


#define IFX_P_OUT_P4_LEN (1u)


#define IFX_P_OUT_P4_MSK (0x1u)


#define IFX_P_OUT_P4_OFF (4u)


#define IFX_P_OUT_P5_LEN (1u)


#define IFX_P_OUT_P5_MSK (0x1u)


#define IFX_P_OUT_P5_OFF (5u)


#define IFX_P_OUT_P6_LEN (1u)


#define IFX_P_OUT_P6_MSK (0x1u)


#define IFX_P_OUT_P6_OFF (6u)


#define IFX_P_OUT_P7_LEN (1u)


#define IFX_P_OUT_P7_MSK (0x1u)


#define IFX_P_OUT_P7_OFF (7u)


#define IFX_P_OUT_P8_LEN (1u)


#define IFX_P_OUT_P8_MSK (0x1u)


#define IFX_P_OUT_P8_OFF (8u)


#define IFX_P_OUT_P9_LEN (1u)


#define IFX_P_OUT_P9_MSK (0x1u)


#define IFX_P_OUT_P9_OFF (9u)


#define IFX_P_PCSR_LCK_LEN (1u)


#define IFX_P_PCSR_LCK_MSK (0x1u)


#define IFX_P_PCSR_LCK_OFF (31u)


#define IFX_P_PCSR_SEL0_LEN (1u)


#define IFX_P_PCSR_SEL0_MSK (0x1u)


#define IFX_P_PCSR_SEL0_OFF (0u)


#define IFX_P_PCSR_SEL10_LEN (1u)


#define IFX_P_PCSR_SEL10_MSK (0x1u)


#define IFX_P_PCSR_SEL10_OFF (10u)


#define IFX_P_PCSR_SEL11_LEN (1u)


#define IFX_P_PCSR_SEL11_MSK (0x1u)


#define IFX_P_PCSR_SEL11_OFF (11u)


#define IFX_P_PCSR_SEL1_LEN (1u)


#define IFX_P_PCSR_SEL1_MSK (0x1u)


#define IFX_P_PCSR_SEL1_OFF (1u)


#define IFX_P_PCSR_SEL2_LEN (1u)


#define IFX_P_PCSR_SEL2_MSK (0x1u)


#define IFX_P_PCSR_SEL2_OFF (2u)


#define IFX_P_PCSR_SEL3_LEN (1u)


#define IFX_P_PCSR_SEL3_MSK (0x1u)


#define IFX_P_PCSR_SEL3_OFF (3u)


#define IFX_P_PCSR_SEL4_LEN (1u)


#define IFX_P_PCSR_SEL4_MSK (0x1u)


#define IFX_P_PCSR_SEL4_OFF (4u)


#define IFX_P_PCSR_SEL5_LEN (1u)


#define IFX_P_PCSR_SEL5_MSK (0x1u)


#define IFX_P_PCSR_SEL5_OFF (5u)


#define IFX_P_PCSR_SEL6_LEN (1u)


#define IFX_P_PCSR_SEL6_MSK (0x1u)


#define IFX_P_PCSR_SEL6_OFF (6u)


#define IFX_P_PDISC_PDIS0_LEN (1u)


#define IFX_P_PDISC_PDIS0_MSK (0x1u)


#define IFX_P_PDISC_PDIS0_OFF (0u)


#define IFX_P_PDISC_PDIS10_LEN (1u)


#define IFX_P_PDISC_PDIS10_MSK (0x1u)


#define IFX_P_PDISC_PDIS10_OFF (10u)


#define IFX_P_PDISC_PDIS11_LEN (1u)


#define IFX_P_PDISC_PDIS11_MSK (0x1u)


#define IFX_P_PDISC_PDIS11_OFF (11u)


#define IFX_P_PDISC_PDIS12_LEN (1u)


#define IFX_P_PDISC_PDIS12_MSK (0x1u)


#define IFX_P_PDISC_PDIS12_OFF (12u)


#define IFX_P_PDISC_PDIS13_LEN (1u)


#define IFX_P_PDISC_PDIS13_MSK (0x1u)


#define IFX_P_PDISC_PDIS13_OFF (13u)


#define IFX_P_PDISC_PDIS14_LEN (1u)


#define IFX_P_PDISC_PDIS14_MSK (0x1u)


#define IFX_P_PDISC_PDIS14_OFF (14u)


#define IFX_P_PDISC_PDIS15_LEN (1u)


#define IFX_P_PDISC_PDIS15_MSK (0x1u)


#define IFX_P_PDISC_PDIS15_OFF (15u)


#define IFX_P_PDISC_PDIS1_LEN (1u)


#define IFX_P_PDISC_PDIS1_MSK (0x1u)


#define IFX_P_PDISC_PDIS1_OFF (1u)


#define IFX_P_PDISC_PDIS2_LEN (1u)


#define IFX_P_PDISC_PDIS2_MSK (0x1u)


#define IFX_P_PDISC_PDIS2_OFF (2u)


#define IFX_P_PDISC_PDIS3_LEN (1u)


#define IFX_P_PDISC_PDIS3_MSK (0x1u)


#define IFX_P_PDISC_PDIS3_OFF (3u)


#define IFX_P_PDISC_PDIS4_LEN (1u)


#define IFX_P_PDISC_PDIS4_MSK (0x1u)


#define IFX_P_PDISC_PDIS4_OFF (4u)


#define IFX_P_PDISC_PDIS5_LEN (1u)


#define IFX_P_PDISC_PDIS5_MSK (0x1u)


#define IFX_P_PDISC_PDIS5_OFF (5u)


#define IFX_P_PDISC_PDIS6_LEN (1u)


#define IFX_P_PDISC_PDIS6_MSK (0x1u)


#define IFX_P_PDISC_PDIS6_OFF (6u)


#define IFX_P_PDISC_PDIS7_LEN (1u)


#define IFX_P_PDISC_PDIS7_MSK (0x1u)


#define IFX_P_PDISC_PDIS7_OFF (7u)


#define IFX_P_PDISC_PDIS8_LEN (1u)


#define IFX_P_PDISC_PDIS8_MSK (0x1u)


#define IFX_P_PDISC_PDIS8_OFF (8u)


#define IFX_P_PDISC_PDIS9_LEN (1u)


#define IFX_P_PDISC_PDIS9_MSK (0x1u)


#define IFX_P_PDISC_PDIS9_OFF (9u)


#define IFX_P_PDR0_PD0_LEN (3u)


#define IFX_P_PDR0_PD0_MSK (0x7u)


#define IFX_P_PDR0_PD0_OFF (0u)


#define IFX_P_PDR0_PD1_LEN (3u)


#define IFX_P_PDR0_PD1_MSK (0x7u)


#define IFX_P_PDR0_PD1_OFF (4u)


#define IFX_P_PDR0_PD2_LEN (3u)


#define IFX_P_PDR0_PD2_MSK (0x7u)


#define IFX_P_PDR0_PD2_OFF (8u)


#define IFX_P_PDR0_PD3_LEN (3u)


#define IFX_P_PDR0_PD3_MSK (0x7u)


#define IFX_P_PDR0_PD3_OFF (12u)


#define IFX_P_PDR0_PD4_LEN (3u)


#define IFX_P_PDR0_PD4_MSK (0x7u)


#define IFX_P_PDR0_PD4_OFF (16u)


#define IFX_P_PDR0_PD5_LEN (3u)


#define IFX_P_PDR0_PD5_MSK (0x7u)


#define IFX_P_PDR0_PD5_OFF (20u)


#define IFX_P_PDR0_PD6_LEN (3u)


#define IFX_P_PDR0_PD6_MSK (0x7u)


#define IFX_P_PDR0_PD6_OFF (24u)


#define IFX_P_PDR0_PD7_LEN (3u)


#define IFX_P_PDR0_PD7_MSK (0x7u)


#define IFX_P_PDR0_PD7_OFF (28u)


#define IFX_P_PDR0_PL0_LEN (1u)


#define IFX_P_PDR0_PL0_MSK (0x1u)


#define IFX_P_PDR0_PL0_OFF (3u)


#define IFX_P_PDR0_PL1_LEN (1u)


#define IFX_P_PDR0_PL1_MSK (0x1u)


#define IFX_P_PDR0_PL1_OFF (7u)


#define IFX_P_PDR0_PL2_LEN (1u)


#define IFX_P_PDR0_PL2_MSK (0x1u)


#define IFX_P_PDR0_PL2_OFF (11u)


#define IFX_P_PDR0_PL3_LEN (1u)


#define IFX_P_PDR0_PL3_MSK (0x1u)


#define IFX_P_PDR0_PL3_OFF (15u)


#define IFX_P_PDR0_PL4_LEN (1u)


#define IFX_P_PDR0_PL4_MSK (0x1u)


#define IFX_P_PDR0_PL4_OFF (19u)


#define IFX_P_PDR0_PL5_LEN (1u)


#define IFX_P_PDR0_PL5_MSK (0x1u)


#define IFX_P_PDR0_PL5_OFF (23u)


#define IFX_P_PDR0_PL6_LEN (1u)


#define IFX_P_PDR0_PL6_MSK (0x1u)


#define IFX_P_PDR0_PL6_OFF (27u)


#define IFX_P_PDR0_PL7_LEN (1u)


#define IFX_P_PDR0_PL7_MSK (0x1u)


#define IFX_P_PDR0_PL7_OFF (31u)


#define IFX_P_PDR1_PD10_LEN (3u)


#define IFX_P_PDR1_PD10_MSK (0x7u)


#define IFX_P_PDR1_PD10_OFF (8u)


#define IFX_P_PDR1_PD11_LEN (3u)


#define IFX_P_PDR1_PD11_MSK (0x7u)


#define IFX_P_PDR1_PD11_OFF (12u)


#define IFX_P_PDR1_PD12_LEN (3u)


#define IFX_P_PDR1_PD12_MSK (0x7u)


#define IFX_P_PDR1_PD12_OFF (16u)


#define IFX_P_PDR1_PD13_LEN (3u)


#define IFX_P_PDR1_PD13_MSK (0x7u)


#define IFX_P_PDR1_PD13_OFF (20u)


#define IFX_P_PDR1_PD14_LEN (3u)


#define IFX_P_PDR1_PD14_MSK (0x7u)


#define IFX_P_PDR1_PD14_OFF (24u)


#define IFX_P_PDR1_PD15_LEN (3u)


#define IFX_P_PDR1_PD15_MSK (0x7u)


#define IFX_P_PDR1_PD15_OFF (28u)


#define IFX_P_PDR1_PD8_LEN (3u)


#define IFX_P_PDR1_PD8_MSK (0x7u)


#define IFX_P_PDR1_PD8_OFF (0u)


#define IFX_P_PDR1_PD9_LEN (3u)


#define IFX_P_PDR1_PD9_MSK (0x7u)


#define IFX_P_PDR1_PD9_OFF (4u)


#define IFX_P_PDR1_PL10_LEN (1u)


#define IFX_P_PDR1_PL10_MSK (0x1u)


#define IFX_P_PDR1_PL10_OFF (11u)


#define IFX_P_PDR1_PL11_LEN (1u)


#define IFX_P_PDR1_PL11_MSK (0x1u)


#define IFX_P_PDR1_PL11_OFF (15u)


#define IFX_P_PDR1_PL12_LEN (1u)


#define IFX_P_PDR1_PL12_MSK (0x1u)


#define IFX_P_PDR1_PL12_OFF (19u)


#define IFX_P_PDR1_PL13_LEN (1u)


#define IFX_P_PDR1_PL13_MSK (0x1u)


#define IFX_P_PDR1_PL13_OFF (23u)


#define IFX_P_PDR1_PL14_LEN (1u)


#define IFX_P_PDR1_PL14_MSK (0x1u)


#define IFX_P_PDR1_PL14_OFF (27u)


#define IFX_P_PDR1_PL15_LEN (1u)


#define IFX_P_PDR1_PL15_MSK (0x1u)


#define IFX_P_PDR1_PL15_OFF (31u)


#define IFX_P_PDR1_PL8_LEN (1u)


#define IFX_P_PDR1_PL8_MSK (0x1u)


#define IFX_P_PDR1_PL8_OFF (3u)


#define IFX_P_PDR1_PL9_LEN (1u)


#define IFX_P_PDR1_PL9_MSK (0x1u)


#define IFX_P_PDR1_PL9_OFF (7u)
# 8 "D:\\Workspace\\autoever_osek\\can_based_OSEK_OS_TEST\\bsw\\drivers\\asclin.h" 2




# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxasclin_reg.h" 1 3
# 43 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxasclin_reg.h" 3
#define IFXASCLIN_REG_H 1

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxAsclin_regdef.h" 1 3
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxAsclin_regdef.h" 3
#define IFXASCLIN_REGDEF_H 1







typedef struct _Ifx_ASCLIN_ACCEN0_Bits
{
    unsigned int EN0:1;
    unsigned int EN1:1;
    unsigned int EN2:1;
    unsigned int EN3:1;
    unsigned int EN4:1;
    unsigned int EN5:1;
    unsigned int EN6:1;
    unsigned int EN7:1;
    unsigned int EN8:1;
    unsigned int EN9:1;
    unsigned int EN10:1;
    unsigned int EN11:1;
    unsigned int EN12:1;
    unsigned int EN13:1;
    unsigned int EN14:1;
    unsigned int EN15:1;
    unsigned int EN16:1;
    unsigned int EN17:1;
    unsigned int EN18:1;
    unsigned int EN19:1;
    unsigned int EN20:1;
    unsigned int EN21:1;
    unsigned int EN22:1;
    unsigned int EN23:1;
    unsigned int EN24:1;
    unsigned int EN25:1;
    unsigned int EN26:1;
    unsigned int EN27:1;
    unsigned int EN28:1;
    unsigned int EN29:1;
    unsigned int EN30:1;
    unsigned int EN31:1;
} Ifx_ASCLIN_ACCEN0_Bits;


typedef struct _Ifx_ASCLIN_ACCEN1_Bits
{
    unsigned int reserved_0:32;
} Ifx_ASCLIN_ACCEN1_Bits;


typedef struct _Ifx_ASCLIN_BITCON_Bits
{
    unsigned int PRESCALER:12;
    unsigned int reserved_12:4;
    unsigned int OVERSAMPLING:4;
    unsigned int reserved_20:4;
    unsigned int SAMPLEPOINT:4;
    unsigned int reserved_28:3;
    unsigned int SM:1;
} Ifx_ASCLIN_BITCON_Bits;


typedef struct _Ifx_ASCLIN_BRD_Bits
{
    unsigned int LOWERLIMIT:8;
    unsigned int UPPERLIMIT:8;
    unsigned int MEASURED:12;
    unsigned int reserved_28:4;
} Ifx_ASCLIN_BRD_Bits;


typedef struct _Ifx_ASCLIN_BRG_Bits
{
    unsigned int DENOMINATOR:12;
    unsigned int reserved_12:4;
    unsigned int NUMERATOR:12;
    unsigned int reserved_28:4;
} Ifx_ASCLIN_BRG_Bits;


typedef struct _Ifx_ASCLIN_CLC_Bits
{
    unsigned int DISR:1;
    unsigned int DISS:1;
    unsigned int reserved_2:1;
    unsigned int EDIS:1;
    unsigned int reserved_4:28;
} Ifx_ASCLIN_CLC_Bits;


typedef struct _Ifx_ASCLIN_CSR_Bits
{
    unsigned int CLKSEL:5;
    unsigned int reserved_5:26;
    unsigned int CON:1;
} Ifx_ASCLIN_CSR_Bits;


typedef struct _Ifx_ASCLIN_DATCON_Bits
{
    unsigned int DATLEN:4;
    unsigned int reserved_4:9;
    unsigned int HO:1;
    unsigned int RM:1;
    unsigned int CSM:1;
    unsigned int RESPONSE:8;
    unsigned int reserved_24:8;
} Ifx_ASCLIN_DATCON_Bits;


typedef struct _Ifx_ASCLIN_FLAGS_Bits
{
    unsigned int TH:1;
    unsigned int TR:1;
    unsigned int RH:1;
    unsigned int RR:1;
    unsigned int reserved_4:1;
    unsigned int FED:1;
    unsigned int RED:1;
    unsigned int reserved_7:6;
    unsigned int TWRQ:1;
    unsigned int THRQ:1;
    unsigned int TRRQ:1;
    unsigned int PE:1;
    unsigned int TC:1;
    unsigned int FE:1;
    unsigned int HT:1;
    unsigned int RT:1;
    unsigned int BD:1;
    unsigned int LP:1;
    unsigned int LA:1;
    unsigned int LC:1;
    unsigned int CE:1;
    unsigned int RFO:1;
    unsigned int RFU:1;
    unsigned int RFL:1;
    unsigned int reserved_29:1;
    unsigned int TFO:1;
    unsigned int TFL:1;
} Ifx_ASCLIN_FLAGS_Bits;


typedef struct _Ifx_ASCLIN_FLAGSCLEAR_Bits
{
    unsigned int THC:1;
    unsigned int TRC:1;
    unsigned int RHC:1;
    unsigned int RRC:1;
    unsigned int reserved_4:1;
    unsigned int FEDC:1;
    unsigned int REDC:1;
    unsigned int reserved_7:6;
    unsigned int TWRQC:1;
    unsigned int THRQC:1;
    unsigned int TRRQC:1;
    unsigned int PEC:1;
    unsigned int TCC:1;
    unsigned int FEC:1;
    unsigned int HTC:1;
    unsigned int RTC:1;
    unsigned int BDC:1;
    unsigned int LPC:1;
    unsigned int LAC:1;
    unsigned int LCC:1;
    unsigned int CEC:1;
    unsigned int RFOC:1;
    unsigned int RFUC:1;
    unsigned int RFLC:1;
    unsigned int reserved_29:1;
    unsigned int TFOC:1;
    unsigned int TFLC:1;
} Ifx_ASCLIN_FLAGSCLEAR_Bits;


typedef struct _Ifx_ASCLIN_FLAGSENABLE_Bits
{
    unsigned int THE:1;
    unsigned int TRE:1;
    unsigned int RHE:1;
    unsigned int RRE:1;
    unsigned int reserved_4:1;
    unsigned int FEDE:1;
    unsigned int REDE:1;
    unsigned int reserved_7:9;
    unsigned int PEE:1;
    unsigned int TCE:1;
    unsigned int FEE:1;
    unsigned int HTE:1;
    unsigned int RTE:1;
    unsigned int BDE:1;
    unsigned int LPE:1;
    unsigned int ABE:1;
    unsigned int LCE:1;
    unsigned int CEE:1;
    unsigned int RFOE:1;
    unsigned int RFUE:1;
    unsigned int RFLE:1;
    unsigned int reserved_29:1;
    unsigned int TFOE:1;
    unsigned int TFLE:1;
} Ifx_ASCLIN_FLAGSENABLE_Bits;


typedef struct _Ifx_ASCLIN_FLAGSSET_Bits
{
    unsigned int THS:1;
    unsigned int TRS:1;
    unsigned int RHS:1;
    unsigned int RRS:1;
    unsigned int reserved_4:1;
    unsigned int FEDS:1;
    unsigned int REDS:1;
    unsigned int reserved_7:6;
    unsigned int TWRQS:1;
    unsigned int THRQS:1;
    unsigned int TRRQS:1;
    unsigned int PES:1;
    unsigned int TCS:1;
    unsigned int FES:1;
    unsigned int HTS:1;
    unsigned int RTS:1;
    unsigned int BDS:1;
    unsigned int LPS:1;
    unsigned int LAS:1;
    unsigned int LCS:1;
    unsigned int CES:1;
    unsigned int RFOS:1;
    unsigned int RFUS:1;
    unsigned int RFLS:1;
    unsigned int reserved_29:1;
    unsigned int TFOS:1;
    unsigned int TFLS:1;
} Ifx_ASCLIN_FLAGSSET_Bits;


typedef struct _Ifx_ASCLIN_FRAMECON_Bits
{
    unsigned int reserved_0:6;
    unsigned int IDLE:3;
    unsigned int STOP:3;
    unsigned int LEAD:3;
    unsigned int reserved_15:1;
    unsigned int MODE:2;
    unsigned int reserved_18:10;
    unsigned int MSB:1;
    unsigned int CEN:1;
    unsigned int PEN:1;
    unsigned int ODD:1;
} Ifx_ASCLIN_FRAMECON_Bits;


typedef struct _Ifx_ASCLIN_ID_Bits
{
    unsigned int MODREV:8;
    unsigned int MODTYPE:8;
    unsigned int MODNUMBER:16;
} Ifx_ASCLIN_ID_Bits;


typedef struct _Ifx_ASCLIN_IOCR_Bits
{
    unsigned int ALTI:3;
    unsigned int reserved_3:1;
    unsigned int DEPTH:6;
    unsigned int reserved_10:6;
    unsigned int CTS:2;
    unsigned int reserved_18:7;
    unsigned int RCPOL:1;
    unsigned int CPOL:1;
    unsigned int SPOL:1;
    unsigned int LB:1;
    unsigned int CTSEN:1;
    unsigned int RXM:1;
    unsigned int TXM:1;
} Ifx_ASCLIN_IOCR_Bits;


typedef struct _Ifx_ASCLIN_KRST0_Bits
{
    unsigned int RST:1;
    unsigned int RSTSTAT:1;
    unsigned int reserved_2:30;
} Ifx_ASCLIN_KRST0_Bits;


typedef struct _Ifx_ASCLIN_KRST1_Bits
{
    unsigned int RST:1;
    unsigned int reserved_1:31;
} Ifx_ASCLIN_KRST1_Bits;


typedef struct _Ifx_ASCLIN_KRSTCLR_Bits
{
    unsigned int CLR:1;
    unsigned int reserved_1:31;
} Ifx_ASCLIN_KRSTCLR_Bits;


typedef struct _Ifx_ASCLIN_LIN_BTIMER_Bits
{
    unsigned int BREAK:6;
    unsigned int reserved_6:26;
} Ifx_ASCLIN_LIN_BTIMER_Bits;


typedef struct _Ifx_ASCLIN_LIN_CON_Bits
{
    unsigned int reserved_0:23;
    unsigned int CSI:1;
    unsigned int reserved_24:1;
    unsigned int CSEN:1;
    unsigned int MS:1;
    unsigned int ABD:1;
    unsigned int reserved_28:4;
} Ifx_ASCLIN_LIN_CON_Bits;


typedef struct _Ifx_ASCLIN_LIN_HTIMER_Bits
{
    unsigned int HEADER:8;
    unsigned int reserved_8:24;
} Ifx_ASCLIN_LIN_HTIMER_Bits;


typedef struct _Ifx_ASCLIN_OCS_Bits
{
    unsigned int reserved_0:24;
    unsigned int SUS:4;
    unsigned int SUS_P:1;
    unsigned int SUSSTA:1;
    unsigned int reserved_30:2;
} Ifx_ASCLIN_OCS_Bits;


typedef struct _Ifx_ASCLIN_RXDATA_Bits
{
    unsigned int DATA:32;
} Ifx_ASCLIN_RXDATA_Bits;


typedef struct _Ifx_ASCLIN_RXDATAD_Bits
{
    unsigned int DATA:32;
} Ifx_ASCLIN_RXDATAD_Bits;


typedef struct _Ifx_ASCLIN_RXFIFOCON_Bits
{
    unsigned int FLUSH:1;
    unsigned int ENI:1;
    unsigned int reserved_2:4;
    unsigned int OUTW:2;
    unsigned int INTLEVEL:4;
    unsigned int reserved_12:4;
    unsigned int FILL:5;
    unsigned int reserved_21:10;
    unsigned int BUF:1;
} Ifx_ASCLIN_RXFIFOCON_Bits;


typedef struct _Ifx_ASCLIN_TXDATA_Bits
{
    unsigned int DATA:32;
} Ifx_ASCLIN_TXDATA_Bits;


typedef struct _Ifx_ASCLIN_TXFIFOCON_Bits
{
    unsigned int FLUSH:1;
    unsigned int ENO:1;
    unsigned int reserved_2:4;
    unsigned int INW:2;
    unsigned int INTLEVEL:4;
    unsigned int reserved_12:4;
    unsigned int FILL:5;
    unsigned int reserved_21:11;
} Ifx_ASCLIN_TXFIFOCON_Bits;







typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ASCLIN_ACCEN0_Bits B;
} Ifx_ASCLIN_ACCEN0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ASCLIN_ACCEN1_Bits B;
} Ifx_ASCLIN_ACCEN1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ASCLIN_BITCON_Bits B;
} Ifx_ASCLIN_BITCON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ASCLIN_BRD_Bits B;
} Ifx_ASCLIN_BRD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ASCLIN_BRG_Bits B;
} Ifx_ASCLIN_BRG;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ASCLIN_CLC_Bits B;
} Ifx_ASCLIN_CLC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ASCLIN_CSR_Bits B;
} Ifx_ASCLIN_CSR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ASCLIN_DATCON_Bits B;
} Ifx_ASCLIN_DATCON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ASCLIN_FLAGS_Bits B;
} Ifx_ASCLIN_FLAGS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ASCLIN_FLAGSCLEAR_Bits B;
} Ifx_ASCLIN_FLAGSCLEAR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ASCLIN_FLAGSENABLE_Bits B;
} Ifx_ASCLIN_FLAGSENABLE;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ASCLIN_FLAGSSET_Bits B;
} Ifx_ASCLIN_FLAGSSET;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ASCLIN_FRAMECON_Bits B;
} Ifx_ASCLIN_FRAMECON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ASCLIN_ID_Bits B;
} Ifx_ASCLIN_ID;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ASCLIN_IOCR_Bits B;
} Ifx_ASCLIN_IOCR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ASCLIN_KRST0_Bits B;
} Ifx_ASCLIN_KRST0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ASCLIN_KRST1_Bits B;
} Ifx_ASCLIN_KRST1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ASCLIN_KRSTCLR_Bits B;
} Ifx_ASCLIN_KRSTCLR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ASCLIN_LIN_BTIMER_Bits B;
} Ifx_ASCLIN_LIN_BTIMER;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ASCLIN_LIN_CON_Bits B;
} Ifx_ASCLIN_LIN_CON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ASCLIN_LIN_HTIMER_Bits B;
} Ifx_ASCLIN_LIN_HTIMER;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ASCLIN_OCS_Bits B;
} Ifx_ASCLIN_OCS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ASCLIN_RXDATA_Bits B;
} Ifx_ASCLIN_RXDATA;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ASCLIN_RXDATAD_Bits B;
} Ifx_ASCLIN_RXDATAD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ASCLIN_RXFIFOCON_Bits B;
} Ifx_ASCLIN_RXFIFOCON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ASCLIN_TXDATA_Bits B;
} Ifx_ASCLIN_TXDATA;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ASCLIN_TXFIFOCON_Bits B;
} Ifx_ASCLIN_TXFIFOCON;
# 647 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxAsclin_regdef.h" 3
typedef volatile struct _Ifx_ASCLIN_LIN
{
    Ifx_ASCLIN_LIN_CON CON;
    Ifx_ASCLIN_LIN_BTIMER BTIMER;
    Ifx_ASCLIN_LIN_HTIMER HTIMER;
} Ifx_ASCLIN_LIN;
# 665 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxAsclin_regdef.h" 3
typedef volatile struct _Ifx_ASCLIN
{
    Ifx_ASCLIN_CLC CLC;
    Ifx_ASCLIN_IOCR IOCR;
    Ifx_ASCLIN_ID ID;
    Ifx_ASCLIN_TXFIFOCON TXFIFOCON;
    Ifx_ASCLIN_RXFIFOCON RXFIFOCON;
    Ifx_ASCLIN_BITCON BITCON;
    Ifx_ASCLIN_FRAMECON FRAMECON;
    Ifx_ASCLIN_DATCON DATCON;
    Ifx_ASCLIN_BRG BRG;
    Ifx_ASCLIN_BRD BRD;
    Ifx_ASCLIN_LIN LIN;
    Ifx_ASCLIN_FLAGS FLAGS;
    Ifx_ASCLIN_FLAGSSET FLAGSSET;
    Ifx_ASCLIN_FLAGSCLEAR FLAGSCLEAR;
    Ifx_ASCLIN_FLAGSENABLE FLAGSENABLE;
    Ifx_ASCLIN_TXDATA TXDATA;
    Ifx_ASCLIN_RXDATA RXDATA;
    Ifx_ASCLIN_CSR CSR;
    Ifx_ASCLIN_RXDATAD RXDATAD;
    unsigned char reserved_54[148];
    Ifx_ASCLIN_OCS OCS;
    Ifx_ASCLIN_KRSTCLR KRSTCLR;
    Ifx_ASCLIN_KRST1 KRST1;
    Ifx_ASCLIN_KRST0 KRST0;
    Ifx_ASCLIN_ACCEN1 ACCEN1;
    Ifx_ASCLIN_ACCEN0 ACCEN0;
} Ifx_ASCLIN;
# 46 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxasclin_reg.h" 2 3





#define MODULE_ASCLIN0 (*(Ifx_ASCLIN*)0xF0000600u)


#define MODULE_ASCLIN1 (*(Ifx_ASCLIN*)0xF0000700u)


#define MODULE_ASCLIN2 (*(Ifx_ASCLIN*)0xF0000800u)


#define MODULE_ASCLIN3 (*(Ifx_ASCLIN*)0xF0000900u)







#define ASCLIN0_ACCEN0 (*(volatile Ifx_ASCLIN_ACCEN0*)0xF00006FCu)


#define ASCLIN0_ACCEN1 (*(volatile Ifx_ASCLIN_ACCEN1*)0xF00006F8u)


#define ASCLIN0_BITCON (*(volatile Ifx_ASCLIN_BITCON*)0xF0000614u)


#define ASCLIN0_BRD (*(volatile Ifx_ASCLIN_BRD*)0xF0000624u)


#define ASCLIN0_BRG (*(volatile Ifx_ASCLIN_BRG*)0xF0000620u)


#define ASCLIN0_CLC (*(volatile Ifx_ASCLIN_CLC*)0xF0000600u)


#define ASCLIN0_CSR (*(volatile Ifx_ASCLIN_CSR*)0xF000064Cu)


#define ASCLIN0_DATCON (*(volatile Ifx_ASCLIN_DATCON*)0xF000061Cu)


#define ASCLIN0_FLAGS (*(volatile Ifx_ASCLIN_FLAGS*)0xF0000634u)


#define ASCLIN0_FLAGSCLEAR (*(volatile Ifx_ASCLIN_FLAGSCLEAR*)0xF000063Cu)


#define ASCLIN0_FLAGSENABLE (*(volatile Ifx_ASCLIN_FLAGSENABLE*)0xF0000640u)


#define ASCLIN0_FLAGSSET (*(volatile Ifx_ASCLIN_FLAGSSET*)0xF0000638u)


#define ASCLIN0_FRAMECON (*(volatile Ifx_ASCLIN_FRAMECON*)0xF0000618u)


#define ASCLIN0_ID (*(volatile Ifx_ASCLIN_ID*)0xF0000608u)


#define ASCLIN0_IOCR (*(volatile Ifx_ASCLIN_IOCR*)0xF0000604u)


#define ASCLIN0_KRST0 (*(volatile Ifx_ASCLIN_KRST0*)0xF00006F4u)


#define ASCLIN0_KRST1 (*(volatile Ifx_ASCLIN_KRST1*)0xF00006F0u)


#define ASCLIN0_KRSTCLR (*(volatile Ifx_ASCLIN_KRSTCLR*)0xF00006ECu)


#define ASCLIN0_LIN_BTIMER (*(volatile Ifx_ASCLIN_LIN_BTIMER*)0xF000062Cu)




#define ASCLIN0_LINBTIMER (ASCLIN0_LIN_BTIMER)


#define ASCLIN0_LIN_CON (*(volatile Ifx_ASCLIN_LIN_CON*)0xF0000628u)




#define ASCLIN0_LINCON (ASCLIN0_LIN_CON)


#define ASCLIN0_LIN_HTIMER (*(volatile Ifx_ASCLIN_LIN_HTIMER*)0xF0000630u)




#define ASCLIN0_LINHTIMER (ASCLIN0_LIN_HTIMER)


#define ASCLIN0_OCS (*(volatile Ifx_ASCLIN_OCS*)0xF00006E8u)


#define ASCLIN0_RXDATA (*(volatile Ifx_ASCLIN_RXDATA*)0xF0000648u)


#define ASCLIN0_RXDATAD (*(volatile Ifx_ASCLIN_RXDATAD*)0xF0000650u)


#define ASCLIN0_RXFIFOCON (*(volatile Ifx_ASCLIN_RXFIFOCON*)0xF0000610u)


#define ASCLIN0_TXDATA (*(volatile Ifx_ASCLIN_TXDATA*)0xF0000644u)


#define ASCLIN0_TXFIFOCON (*(volatile Ifx_ASCLIN_TXFIFOCON*)0xF000060Cu)







#define ASCLIN1_ACCEN0 (*(volatile Ifx_ASCLIN_ACCEN0*)0xF00007FCu)


#define ASCLIN1_ACCEN1 (*(volatile Ifx_ASCLIN_ACCEN1*)0xF00007F8u)


#define ASCLIN1_BITCON (*(volatile Ifx_ASCLIN_BITCON*)0xF0000714u)


#define ASCLIN1_BRD (*(volatile Ifx_ASCLIN_BRD*)0xF0000724u)


#define ASCLIN1_BRG (*(volatile Ifx_ASCLIN_BRG*)0xF0000720u)


#define ASCLIN1_CLC (*(volatile Ifx_ASCLIN_CLC*)0xF0000700u)


#define ASCLIN1_CSR (*(volatile Ifx_ASCLIN_CSR*)0xF000074Cu)


#define ASCLIN1_DATCON (*(volatile Ifx_ASCLIN_DATCON*)0xF000071Cu)


#define ASCLIN1_FLAGS (*(volatile Ifx_ASCLIN_FLAGS*)0xF0000734u)


#define ASCLIN1_FLAGSCLEAR (*(volatile Ifx_ASCLIN_FLAGSCLEAR*)0xF000073Cu)


#define ASCLIN1_FLAGSENABLE (*(volatile Ifx_ASCLIN_FLAGSENABLE*)0xF0000740u)


#define ASCLIN1_FLAGSSET (*(volatile Ifx_ASCLIN_FLAGSSET*)0xF0000738u)


#define ASCLIN1_FRAMECON (*(volatile Ifx_ASCLIN_FRAMECON*)0xF0000718u)


#define ASCLIN1_ID (*(volatile Ifx_ASCLIN_ID*)0xF0000708u)


#define ASCLIN1_IOCR (*(volatile Ifx_ASCLIN_IOCR*)0xF0000704u)


#define ASCLIN1_KRST0 (*(volatile Ifx_ASCLIN_KRST0*)0xF00007F4u)


#define ASCLIN1_KRST1 (*(volatile Ifx_ASCLIN_KRST1*)0xF00007F0u)


#define ASCLIN1_KRSTCLR (*(volatile Ifx_ASCLIN_KRSTCLR*)0xF00007ECu)


#define ASCLIN1_LIN_BTIMER (*(volatile Ifx_ASCLIN_LIN_BTIMER*)0xF000072Cu)




#define ASCLIN1_LINBTIMER (ASCLIN1_LIN_BTIMER)


#define ASCLIN1_LIN_CON (*(volatile Ifx_ASCLIN_LIN_CON*)0xF0000728u)




#define ASCLIN1_LINCON (ASCLIN1_LIN_CON)


#define ASCLIN1_LIN_HTIMER (*(volatile Ifx_ASCLIN_LIN_HTIMER*)0xF0000730u)




#define ASCLIN1_LINHTIMER (ASCLIN1_LIN_HTIMER)


#define ASCLIN1_OCS (*(volatile Ifx_ASCLIN_OCS*)0xF00007E8u)


#define ASCLIN1_RXDATA (*(volatile Ifx_ASCLIN_RXDATA*)0xF0000748u)


#define ASCLIN1_RXDATAD (*(volatile Ifx_ASCLIN_RXDATAD*)0xF0000750u)


#define ASCLIN1_RXFIFOCON (*(volatile Ifx_ASCLIN_RXFIFOCON*)0xF0000710u)


#define ASCLIN1_TXDATA (*(volatile Ifx_ASCLIN_TXDATA*)0xF0000744u)


#define ASCLIN1_TXFIFOCON (*(volatile Ifx_ASCLIN_TXFIFOCON*)0xF000070Cu)







#define ASCLIN2_ACCEN0 (*(volatile Ifx_ASCLIN_ACCEN0*)0xF00008FCu)


#define ASCLIN2_ACCEN1 (*(volatile Ifx_ASCLIN_ACCEN1*)0xF00008F8u)


#define ASCLIN2_BITCON (*(volatile Ifx_ASCLIN_BITCON*)0xF0000814u)


#define ASCLIN2_BRD (*(volatile Ifx_ASCLIN_BRD*)0xF0000824u)


#define ASCLIN2_BRG (*(volatile Ifx_ASCLIN_BRG*)0xF0000820u)


#define ASCLIN2_CLC (*(volatile Ifx_ASCLIN_CLC*)0xF0000800u)


#define ASCLIN2_CSR (*(volatile Ifx_ASCLIN_CSR*)0xF000084Cu)


#define ASCLIN2_DATCON (*(volatile Ifx_ASCLIN_DATCON*)0xF000081Cu)


#define ASCLIN2_FLAGS (*(volatile Ifx_ASCLIN_FLAGS*)0xF0000834u)


#define ASCLIN2_FLAGSCLEAR (*(volatile Ifx_ASCLIN_FLAGSCLEAR*)0xF000083Cu)


#define ASCLIN2_FLAGSENABLE (*(volatile Ifx_ASCLIN_FLAGSENABLE*)0xF0000840u)


#define ASCLIN2_FLAGSSET (*(volatile Ifx_ASCLIN_FLAGSSET*)0xF0000838u)


#define ASCLIN2_FRAMECON (*(volatile Ifx_ASCLIN_FRAMECON*)0xF0000818u)


#define ASCLIN2_ID (*(volatile Ifx_ASCLIN_ID*)0xF0000808u)


#define ASCLIN2_IOCR (*(volatile Ifx_ASCLIN_IOCR*)0xF0000804u)


#define ASCLIN2_KRST0 (*(volatile Ifx_ASCLIN_KRST0*)0xF00008F4u)


#define ASCLIN2_KRST1 (*(volatile Ifx_ASCLIN_KRST1*)0xF00008F0u)


#define ASCLIN2_KRSTCLR (*(volatile Ifx_ASCLIN_KRSTCLR*)0xF00008ECu)


#define ASCLIN2_LIN_BTIMER (*(volatile Ifx_ASCLIN_LIN_BTIMER*)0xF000082Cu)




#define ASCLIN2_LINBTIMER (ASCLIN2_LIN_BTIMER)


#define ASCLIN2_LIN_CON (*(volatile Ifx_ASCLIN_LIN_CON*)0xF0000828u)




#define ASCLIN2_LINCON (ASCLIN2_LIN_CON)


#define ASCLIN2_LIN_HTIMER (*(volatile Ifx_ASCLIN_LIN_HTIMER*)0xF0000830u)




#define ASCLIN2_LINHTIMER (ASCLIN2_LIN_HTIMER)


#define ASCLIN2_OCS (*(volatile Ifx_ASCLIN_OCS*)0xF00008E8u)


#define ASCLIN2_RXDATA (*(volatile Ifx_ASCLIN_RXDATA*)0xF0000848u)


#define ASCLIN2_RXDATAD (*(volatile Ifx_ASCLIN_RXDATAD*)0xF0000850u)


#define ASCLIN2_RXFIFOCON (*(volatile Ifx_ASCLIN_RXFIFOCON*)0xF0000810u)


#define ASCLIN2_TXDATA (*(volatile Ifx_ASCLIN_TXDATA*)0xF0000844u)


#define ASCLIN2_TXFIFOCON (*(volatile Ifx_ASCLIN_TXFIFOCON*)0xF000080Cu)







#define ASCLIN3_ACCEN0 (*(volatile Ifx_ASCLIN_ACCEN0*)0xF00009FCu)


#define ASCLIN3_ACCEN1 (*(volatile Ifx_ASCLIN_ACCEN1*)0xF00009F8u)


#define ASCLIN3_BITCON (*(volatile Ifx_ASCLIN_BITCON*)0xF0000914u)


#define ASCLIN3_BRD (*(volatile Ifx_ASCLIN_BRD*)0xF0000924u)


#define ASCLIN3_BRG (*(volatile Ifx_ASCLIN_BRG*)0xF0000920u)


#define ASCLIN3_CLC (*(volatile Ifx_ASCLIN_CLC*)0xF0000900u)


#define ASCLIN3_CSR (*(volatile Ifx_ASCLIN_CSR*)0xF000094Cu)


#define ASCLIN3_DATCON (*(volatile Ifx_ASCLIN_DATCON*)0xF000091Cu)


#define ASCLIN3_FLAGS (*(volatile Ifx_ASCLIN_FLAGS*)0xF0000934u)


#define ASCLIN3_FLAGSCLEAR (*(volatile Ifx_ASCLIN_FLAGSCLEAR*)0xF000093Cu)


#define ASCLIN3_FLAGSENABLE (*(volatile Ifx_ASCLIN_FLAGSENABLE*)0xF0000940u)


#define ASCLIN3_FLAGSSET (*(volatile Ifx_ASCLIN_FLAGSSET*)0xF0000938u)


#define ASCLIN3_FRAMECON (*(volatile Ifx_ASCLIN_FRAMECON*)0xF0000918u)


#define ASCLIN3_ID (*(volatile Ifx_ASCLIN_ID*)0xF0000908u)


#define ASCLIN3_IOCR (*(volatile Ifx_ASCLIN_IOCR*)0xF0000904u)


#define ASCLIN3_KRST0 (*(volatile Ifx_ASCLIN_KRST0*)0xF00009F4u)


#define ASCLIN3_KRST1 (*(volatile Ifx_ASCLIN_KRST1*)0xF00009F0u)


#define ASCLIN3_KRSTCLR (*(volatile Ifx_ASCLIN_KRSTCLR*)0xF00009ECu)


#define ASCLIN3_LIN_BTIMER (*(volatile Ifx_ASCLIN_LIN_BTIMER*)0xF000092Cu)




#define ASCLIN3_LINBTIMER (ASCLIN3_LIN_BTIMER)


#define ASCLIN3_LIN_CON (*(volatile Ifx_ASCLIN_LIN_CON*)0xF0000928u)




#define ASCLIN3_LINCON (ASCLIN3_LIN_CON)


#define ASCLIN3_LIN_HTIMER (*(volatile Ifx_ASCLIN_LIN_HTIMER*)0xF0000930u)




#define ASCLIN3_LINHTIMER (ASCLIN3_LIN_HTIMER)


#define ASCLIN3_OCS (*(volatile Ifx_ASCLIN_OCS*)0xF00009E8u)


#define ASCLIN3_RXDATA (*(volatile Ifx_ASCLIN_RXDATA*)0xF0000948u)


#define ASCLIN3_RXDATAD (*(volatile Ifx_ASCLIN_RXDATAD*)0xF0000950u)


#define ASCLIN3_RXFIFOCON (*(volatile Ifx_ASCLIN_RXFIFOCON*)0xF0000910u)


#define ASCLIN3_TXDATA (*(volatile Ifx_ASCLIN_TXDATA*)0xF0000944u)


#define ASCLIN3_TXFIFOCON (*(volatile Ifx_ASCLIN_TXFIFOCON*)0xF000090Cu)
# 13 "D:\\Workspace\\autoever_osek\\can_based_OSEK_OS_TEST\\bsw\\drivers\\asclin.h" 2
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxasclin_bf.h" 1 3
# 28 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxasclin_bf.h" 3
#define IFXASCLIN_BF_H 1






#define IFX_ASCLIN_ACCEN0_EN0_LEN (1u)


#define IFX_ASCLIN_ACCEN0_EN0_MSK (0x1u)


#define IFX_ASCLIN_ACCEN0_EN0_OFF (0u)


#define IFX_ASCLIN_ACCEN0_EN10_LEN (1u)


#define IFX_ASCLIN_ACCEN0_EN10_MSK (0x1u)


#define IFX_ASCLIN_ACCEN0_EN10_OFF (10u)


#define IFX_ASCLIN_ACCEN0_EN11_LEN (1u)


#define IFX_ASCLIN_ACCEN0_EN11_MSK (0x1u)


#define IFX_ASCLIN_ACCEN0_EN11_OFF (11u)


#define IFX_ASCLIN_ACCEN0_EN12_LEN (1u)


#define IFX_ASCLIN_ACCEN0_EN12_MSK (0x1u)


#define IFX_ASCLIN_ACCEN0_EN12_OFF (12u)


#define IFX_ASCLIN_ACCEN0_EN13_LEN (1u)


#define IFX_ASCLIN_ACCEN0_EN13_MSK (0x1u)


#define IFX_ASCLIN_ACCEN0_EN13_OFF (13u)


#define IFX_ASCLIN_ACCEN0_EN14_LEN (1u)


#define IFX_ASCLIN_ACCEN0_EN14_MSK (0x1u)


#define IFX_ASCLIN_ACCEN0_EN14_OFF (14u)


#define IFX_ASCLIN_ACCEN0_EN15_LEN (1u)


#define IFX_ASCLIN_ACCEN0_EN15_MSK (0x1u)


#define IFX_ASCLIN_ACCEN0_EN15_OFF (15u)


#define IFX_ASCLIN_ACCEN0_EN16_LEN (1u)


#define IFX_ASCLIN_ACCEN0_EN16_MSK (0x1u)


#define IFX_ASCLIN_ACCEN0_EN16_OFF (16u)


#define IFX_ASCLIN_ACCEN0_EN17_LEN (1u)


#define IFX_ASCLIN_ACCEN0_EN17_MSK (0x1u)


#define IFX_ASCLIN_ACCEN0_EN17_OFF (17u)


#define IFX_ASCLIN_ACCEN0_EN18_LEN (1u)


#define IFX_ASCLIN_ACCEN0_EN18_MSK (0x1u)


#define IFX_ASCLIN_ACCEN0_EN18_OFF (18u)


#define IFX_ASCLIN_ACCEN0_EN19_LEN (1u)


#define IFX_ASCLIN_ACCEN0_EN19_MSK (0x1u)


#define IFX_ASCLIN_ACCEN0_EN19_OFF (19u)


#define IFX_ASCLIN_ACCEN0_EN1_LEN (1u)


#define IFX_ASCLIN_ACCEN0_EN1_MSK (0x1u)


#define IFX_ASCLIN_ACCEN0_EN1_OFF (1u)


#define IFX_ASCLIN_ACCEN0_EN20_LEN (1u)


#define IFX_ASCLIN_ACCEN0_EN20_MSK (0x1u)


#define IFX_ASCLIN_ACCEN0_EN20_OFF (20u)


#define IFX_ASCLIN_ACCEN0_EN21_LEN (1u)


#define IFX_ASCLIN_ACCEN0_EN21_MSK (0x1u)


#define IFX_ASCLIN_ACCEN0_EN21_OFF (21u)


#define IFX_ASCLIN_ACCEN0_EN22_LEN (1u)


#define IFX_ASCLIN_ACCEN0_EN22_MSK (0x1u)


#define IFX_ASCLIN_ACCEN0_EN22_OFF (22u)


#define IFX_ASCLIN_ACCEN0_EN23_LEN (1u)


#define IFX_ASCLIN_ACCEN0_EN23_MSK (0x1u)


#define IFX_ASCLIN_ACCEN0_EN23_OFF (23u)


#define IFX_ASCLIN_ACCEN0_EN24_LEN (1u)


#define IFX_ASCLIN_ACCEN0_EN24_MSK (0x1u)


#define IFX_ASCLIN_ACCEN0_EN24_OFF (24u)


#define IFX_ASCLIN_ACCEN0_EN25_LEN (1u)


#define IFX_ASCLIN_ACCEN0_EN25_MSK (0x1u)


#define IFX_ASCLIN_ACCEN0_EN25_OFF (25u)


#define IFX_ASCLIN_ACCEN0_EN26_LEN (1u)


#define IFX_ASCLIN_ACCEN0_EN26_MSK (0x1u)


#define IFX_ASCLIN_ACCEN0_EN26_OFF (26u)


#define IFX_ASCLIN_ACCEN0_EN27_LEN (1u)


#define IFX_ASCLIN_ACCEN0_EN27_MSK (0x1u)


#define IFX_ASCLIN_ACCEN0_EN27_OFF (27u)


#define IFX_ASCLIN_ACCEN0_EN28_LEN (1u)


#define IFX_ASCLIN_ACCEN0_EN28_MSK (0x1u)


#define IFX_ASCLIN_ACCEN0_EN28_OFF (28u)


#define IFX_ASCLIN_ACCEN0_EN29_LEN (1u)


#define IFX_ASCLIN_ACCEN0_EN29_MSK (0x1u)


#define IFX_ASCLIN_ACCEN0_EN29_OFF (29u)


#define IFX_ASCLIN_ACCEN0_EN2_LEN (1u)


#define IFX_ASCLIN_ACCEN0_EN2_MSK (0x1u)


#define IFX_ASCLIN_ACCEN0_EN2_OFF (2u)


#define IFX_ASCLIN_ACCEN0_EN30_LEN (1u)


#define IFX_ASCLIN_ACCEN0_EN30_MSK (0x1u)


#define IFX_ASCLIN_ACCEN0_EN30_OFF (30u)


#define IFX_ASCLIN_ACCEN0_EN31_LEN (1u)


#define IFX_ASCLIN_ACCEN0_EN31_MSK (0x1u)


#define IFX_ASCLIN_ACCEN0_EN31_OFF (31u)


#define IFX_ASCLIN_ACCEN0_EN3_LEN (1u)


#define IFX_ASCLIN_ACCEN0_EN3_MSK (0x1u)


#define IFX_ASCLIN_ACCEN0_EN3_OFF (3u)


#define IFX_ASCLIN_ACCEN0_EN4_LEN (1u)


#define IFX_ASCLIN_ACCEN0_EN4_MSK (0x1u)


#define IFX_ASCLIN_ACCEN0_EN4_OFF (4u)


#define IFX_ASCLIN_ACCEN0_EN5_LEN (1u)


#define IFX_ASCLIN_ACCEN0_EN5_MSK (0x1u)


#define IFX_ASCLIN_ACCEN0_EN5_OFF (5u)


#define IFX_ASCLIN_ACCEN0_EN6_LEN (1u)


#define IFX_ASCLIN_ACCEN0_EN6_MSK (0x1u)


#define IFX_ASCLIN_ACCEN0_EN6_OFF (6u)


#define IFX_ASCLIN_ACCEN0_EN7_LEN (1u)


#define IFX_ASCLIN_ACCEN0_EN7_MSK (0x1u)


#define IFX_ASCLIN_ACCEN0_EN7_OFF (7u)


#define IFX_ASCLIN_ACCEN0_EN8_LEN (1u)


#define IFX_ASCLIN_ACCEN0_EN8_MSK (0x1u)


#define IFX_ASCLIN_ACCEN0_EN8_OFF (8u)


#define IFX_ASCLIN_ACCEN0_EN9_LEN (1u)


#define IFX_ASCLIN_ACCEN0_EN9_MSK (0x1u)


#define IFX_ASCLIN_ACCEN0_EN9_OFF (9u)


#define IFX_ASCLIN_BITCON_OVERSAMPLING_LEN (4u)


#define IFX_ASCLIN_BITCON_OVERSAMPLING_MSK (0xfu)


#define IFX_ASCLIN_BITCON_OVERSAMPLING_OFF (16u)


#define IFX_ASCLIN_BITCON_PRESCALER_LEN (12u)


#define IFX_ASCLIN_BITCON_PRESCALER_MSK (0xfffu)


#define IFX_ASCLIN_BITCON_PRESCALER_OFF (0u)


#define IFX_ASCLIN_BITCON_SAMPLEPOINT_LEN (4u)


#define IFX_ASCLIN_BITCON_SAMPLEPOINT_MSK (0xfu)


#define IFX_ASCLIN_BITCON_SAMPLEPOINT_OFF (24u)


#define IFX_ASCLIN_BITCON_SM_LEN (1u)


#define IFX_ASCLIN_BITCON_SM_MSK (0x1u)


#define IFX_ASCLIN_BITCON_SM_OFF (31u)


#define IFX_ASCLIN_BRD_LOWERLIMIT_LEN (8u)


#define IFX_ASCLIN_BRD_LOWERLIMIT_MSK (0xffu)


#define IFX_ASCLIN_BRD_LOWERLIMIT_OFF (0u)


#define IFX_ASCLIN_BRD_MEASURED_LEN (12u)


#define IFX_ASCLIN_BRD_MEASURED_MSK (0xfffu)


#define IFX_ASCLIN_BRD_MEASURED_OFF (16u)


#define IFX_ASCLIN_BRD_UPPERLIMIT_LEN (8u)


#define IFX_ASCLIN_BRD_UPPERLIMIT_MSK (0xffu)


#define IFX_ASCLIN_BRD_UPPERLIMIT_OFF (8u)


#define IFX_ASCLIN_BRG_DENOMINATOR_LEN (12u)


#define IFX_ASCLIN_BRG_DENOMINATOR_MSK (0xfffu)


#define IFX_ASCLIN_BRG_DENOMINATOR_OFF (0u)


#define IFX_ASCLIN_BRG_NUMERATOR_LEN (12u)


#define IFX_ASCLIN_BRG_NUMERATOR_MSK (0xfffu)


#define IFX_ASCLIN_BRG_NUMERATOR_OFF (16u)


#define IFX_ASCLIN_CLC_DISR_LEN (1u)


#define IFX_ASCLIN_CLC_DISR_MSK (0x1u)


#define IFX_ASCLIN_CLC_DISR_OFF (0u)


#define IFX_ASCLIN_CLC_DISS_LEN (1u)


#define IFX_ASCLIN_CLC_DISS_MSK (0x1u)


#define IFX_ASCLIN_CLC_DISS_OFF (1u)


#define IFX_ASCLIN_CLC_EDIS_LEN (1u)


#define IFX_ASCLIN_CLC_EDIS_MSK (0x1u)


#define IFX_ASCLIN_CLC_EDIS_OFF (3u)


#define IFX_ASCLIN_CSR_CLKSEL_LEN (5u)


#define IFX_ASCLIN_CSR_CLKSEL_MSK (0x1fu)


#define IFX_ASCLIN_CSR_CLKSEL_OFF (0u)


#define IFX_ASCLIN_CSR_CON_LEN (1u)


#define IFX_ASCLIN_CSR_CON_MSK (0x1u)


#define IFX_ASCLIN_CSR_CON_OFF (31u)


#define IFX_ASCLIN_DATCON_CSM_LEN (1u)


#define IFX_ASCLIN_DATCON_CSM_MSK (0x1u)


#define IFX_ASCLIN_DATCON_CSM_OFF (15u)


#define IFX_ASCLIN_DATCON_DATLEN_LEN (4u)


#define IFX_ASCLIN_DATCON_DATLEN_MSK (0xfu)


#define IFX_ASCLIN_DATCON_DATLEN_OFF (0u)


#define IFX_ASCLIN_DATCON_HO_LEN (1u)


#define IFX_ASCLIN_DATCON_HO_MSK (0x1u)


#define IFX_ASCLIN_DATCON_HO_OFF (13u)


#define IFX_ASCLIN_DATCON_RESPONSE_LEN (8u)


#define IFX_ASCLIN_DATCON_RESPONSE_MSK (0xffu)


#define IFX_ASCLIN_DATCON_RESPONSE_OFF (16u)


#define IFX_ASCLIN_DATCON_RM_LEN (1u)


#define IFX_ASCLIN_DATCON_RM_MSK (0x1u)


#define IFX_ASCLIN_DATCON_RM_OFF (14u)


#define IFX_ASCLIN_FLAGS_BD_LEN (1u)


#define IFX_ASCLIN_FLAGS_BD_MSK (0x1u)


#define IFX_ASCLIN_FLAGS_BD_OFF (21u)


#define IFX_ASCLIN_FLAGS_CE_LEN (1u)


#define IFX_ASCLIN_FLAGS_CE_MSK (0x1u)


#define IFX_ASCLIN_FLAGS_CE_OFF (25u)


#define IFX_ASCLIN_FLAGS_FE_LEN (1u)


#define IFX_ASCLIN_FLAGS_FE_MSK (0x1u)


#define IFX_ASCLIN_FLAGS_FE_OFF (18u)


#define IFX_ASCLIN_FLAGS_FED_LEN (1u)


#define IFX_ASCLIN_FLAGS_FED_MSK (0x1u)


#define IFX_ASCLIN_FLAGS_FED_OFF (5u)


#define IFX_ASCLIN_FLAGS_HT_LEN (1u)


#define IFX_ASCLIN_FLAGS_HT_MSK (0x1u)


#define IFX_ASCLIN_FLAGS_HT_OFF (19u)


#define IFX_ASCLIN_FLAGS_LA_LEN (1u)


#define IFX_ASCLIN_FLAGS_LA_MSK (0x1u)


#define IFX_ASCLIN_FLAGS_LA_OFF (23u)


#define IFX_ASCLIN_FLAGS_LC_LEN (1u)


#define IFX_ASCLIN_FLAGS_LC_MSK (0x1u)


#define IFX_ASCLIN_FLAGS_LC_OFF (24u)


#define IFX_ASCLIN_FLAGS_LP_LEN (1u)


#define IFX_ASCLIN_FLAGS_LP_MSK (0x1u)


#define IFX_ASCLIN_FLAGS_LP_OFF (22u)


#define IFX_ASCLIN_FLAGS_PE_LEN (1u)


#define IFX_ASCLIN_FLAGS_PE_MSK (0x1u)


#define IFX_ASCLIN_FLAGS_PE_OFF (16u)


#define IFX_ASCLIN_FLAGS_RED_LEN (1u)


#define IFX_ASCLIN_FLAGS_RED_MSK (0x1u)


#define IFX_ASCLIN_FLAGS_RED_OFF (6u)


#define IFX_ASCLIN_FLAGS_RFL_LEN (1u)


#define IFX_ASCLIN_FLAGS_RFL_MSK (0x1u)


#define IFX_ASCLIN_FLAGS_RFL_OFF (28u)


#define IFX_ASCLIN_FLAGS_RFO_LEN (1u)


#define IFX_ASCLIN_FLAGS_RFO_MSK (0x1u)


#define IFX_ASCLIN_FLAGS_RFO_OFF (26u)


#define IFX_ASCLIN_FLAGS_RFU_LEN (1u)


#define IFX_ASCLIN_FLAGS_RFU_MSK (0x1u)


#define IFX_ASCLIN_FLAGS_RFU_OFF (27u)


#define IFX_ASCLIN_FLAGS_RH_LEN (1u)


#define IFX_ASCLIN_FLAGS_RH_MSK (0x1u)


#define IFX_ASCLIN_FLAGS_RH_OFF (2u)


#define IFX_ASCLIN_FLAGS_RR_LEN (1u)


#define IFX_ASCLIN_FLAGS_RR_MSK (0x1u)


#define IFX_ASCLIN_FLAGS_RR_OFF (3u)


#define IFX_ASCLIN_FLAGS_RT_LEN (1u)


#define IFX_ASCLIN_FLAGS_RT_MSK (0x1u)


#define IFX_ASCLIN_FLAGS_RT_OFF (20u)


#define IFX_ASCLIN_FLAGS_TC_LEN (1u)


#define IFX_ASCLIN_FLAGS_TC_MSK (0x1u)


#define IFX_ASCLIN_FLAGS_TC_OFF (17u)


#define IFX_ASCLIN_FLAGS_TFL_LEN (1u)


#define IFX_ASCLIN_FLAGS_TFL_MSK (0x1u)


#define IFX_ASCLIN_FLAGS_TFL_OFF (31u)


#define IFX_ASCLIN_FLAGS_TFO_LEN (1u)


#define IFX_ASCLIN_FLAGS_TFO_MSK (0x1u)


#define IFX_ASCLIN_FLAGS_TFO_OFF (30u)


#define IFX_ASCLIN_FLAGS_TH_LEN (1u)


#define IFX_ASCLIN_FLAGS_TH_MSK (0x1u)


#define IFX_ASCLIN_FLAGS_TH_OFF (0u)


#define IFX_ASCLIN_FLAGS_THRQ_LEN (1u)


#define IFX_ASCLIN_FLAGS_THRQ_MSK (0x1u)


#define IFX_ASCLIN_FLAGS_THRQ_OFF (14u)


#define IFX_ASCLIN_FLAGS_TR_LEN (1u)


#define IFX_ASCLIN_FLAGS_TR_MSK (0x1u)


#define IFX_ASCLIN_FLAGS_TR_OFF (1u)


#define IFX_ASCLIN_FLAGS_TRRQ_LEN (1u)


#define IFX_ASCLIN_FLAGS_TRRQ_MSK (0x1u)


#define IFX_ASCLIN_FLAGS_TRRQ_OFF (15u)


#define IFX_ASCLIN_FLAGS_TWRQ_LEN (1u)


#define IFX_ASCLIN_FLAGS_TWRQ_MSK (0x1u)


#define IFX_ASCLIN_FLAGS_TWRQ_OFF (13u)


#define IFX_ASCLIN_FLAGSCLEAR_BDC_LEN (1u)


#define IFX_ASCLIN_FLAGSCLEAR_BDC_MSK (0x1u)


#define IFX_ASCLIN_FLAGSCLEAR_BDC_OFF (21u)


#define IFX_ASCLIN_FLAGSCLEAR_CEC_LEN (1u)


#define IFX_ASCLIN_FLAGSCLEAR_CEC_MSK (0x1u)


#define IFX_ASCLIN_FLAGSCLEAR_CEC_OFF (25u)


#define IFX_ASCLIN_FLAGSCLEAR_FEC_LEN (1u)


#define IFX_ASCLIN_FLAGSCLEAR_FEC_MSK (0x1u)


#define IFX_ASCLIN_FLAGSCLEAR_FEC_OFF (18u)


#define IFX_ASCLIN_FLAGSCLEAR_FEDC_LEN (1u)


#define IFX_ASCLIN_FLAGSCLEAR_FEDC_MSK (0x1u)


#define IFX_ASCLIN_FLAGSCLEAR_FEDC_OFF (5u)


#define IFX_ASCLIN_FLAGSCLEAR_HTC_LEN (1u)


#define IFX_ASCLIN_FLAGSCLEAR_HTC_MSK (0x1u)


#define IFX_ASCLIN_FLAGSCLEAR_HTC_OFF (19u)


#define IFX_ASCLIN_FLAGSCLEAR_LAC_LEN (1u)


#define IFX_ASCLIN_FLAGSCLEAR_LAC_MSK (0x1u)


#define IFX_ASCLIN_FLAGSCLEAR_LAC_OFF (23u)


#define IFX_ASCLIN_FLAGSCLEAR_LCC_LEN (1u)


#define IFX_ASCLIN_FLAGSCLEAR_LCC_MSK (0x1u)


#define IFX_ASCLIN_FLAGSCLEAR_LCC_OFF (24u)


#define IFX_ASCLIN_FLAGSCLEAR_LPC_LEN (1u)


#define IFX_ASCLIN_FLAGSCLEAR_LPC_MSK (0x1u)


#define IFX_ASCLIN_FLAGSCLEAR_LPC_OFF (22u)


#define IFX_ASCLIN_FLAGSCLEAR_PEC_LEN (1u)


#define IFX_ASCLIN_FLAGSCLEAR_PEC_MSK (0x1u)


#define IFX_ASCLIN_FLAGSCLEAR_PEC_OFF (16u)


#define IFX_ASCLIN_FLAGSCLEAR_REDC_LEN (1u)


#define IFX_ASCLIN_FLAGSCLEAR_REDC_MSK (0x1u)


#define IFX_ASCLIN_FLAGSCLEAR_REDC_OFF (6u)


#define IFX_ASCLIN_FLAGSCLEAR_RFLC_LEN (1u)


#define IFX_ASCLIN_FLAGSCLEAR_RFLC_MSK (0x1u)


#define IFX_ASCLIN_FLAGSCLEAR_RFLC_OFF (28u)


#define IFX_ASCLIN_FLAGSCLEAR_RFOC_LEN (1u)


#define IFX_ASCLIN_FLAGSCLEAR_RFOC_MSK (0x1u)


#define IFX_ASCLIN_FLAGSCLEAR_RFOC_OFF (26u)


#define IFX_ASCLIN_FLAGSCLEAR_RFUC_LEN (1u)


#define IFX_ASCLIN_FLAGSCLEAR_RFUC_MSK (0x1u)


#define IFX_ASCLIN_FLAGSCLEAR_RFUC_OFF (27u)


#define IFX_ASCLIN_FLAGSCLEAR_RHC_LEN (1u)


#define IFX_ASCLIN_FLAGSCLEAR_RHC_MSK (0x1u)


#define IFX_ASCLIN_FLAGSCLEAR_RHC_OFF (2u)


#define IFX_ASCLIN_FLAGSCLEAR_RRC_LEN (1u)


#define IFX_ASCLIN_FLAGSCLEAR_RRC_MSK (0x1u)


#define IFX_ASCLIN_FLAGSCLEAR_RRC_OFF (3u)


#define IFX_ASCLIN_FLAGSCLEAR_RTC_LEN (1u)


#define IFX_ASCLIN_FLAGSCLEAR_RTC_MSK (0x1u)


#define IFX_ASCLIN_FLAGSCLEAR_RTC_OFF (20u)


#define IFX_ASCLIN_FLAGSCLEAR_TCC_LEN (1u)


#define IFX_ASCLIN_FLAGSCLEAR_TCC_MSK (0x1u)


#define IFX_ASCLIN_FLAGSCLEAR_TCC_OFF (17u)


#define IFX_ASCLIN_FLAGSCLEAR_TFLC_LEN (1u)


#define IFX_ASCLIN_FLAGSCLEAR_TFLC_MSK (0x1u)


#define IFX_ASCLIN_FLAGSCLEAR_TFLC_OFF (31u)


#define IFX_ASCLIN_FLAGSCLEAR_TFOC_LEN (1u)


#define IFX_ASCLIN_FLAGSCLEAR_TFOC_MSK (0x1u)


#define IFX_ASCLIN_FLAGSCLEAR_TFOC_OFF (30u)


#define IFX_ASCLIN_FLAGSCLEAR_THC_LEN (1u)


#define IFX_ASCLIN_FLAGSCLEAR_THC_MSK (0x1u)


#define IFX_ASCLIN_FLAGSCLEAR_THC_OFF (0u)


#define IFX_ASCLIN_FLAGSCLEAR_THRQC_LEN (1u)


#define IFX_ASCLIN_FLAGSCLEAR_THRQC_MSK (0x1u)


#define IFX_ASCLIN_FLAGSCLEAR_THRQC_OFF (14u)


#define IFX_ASCLIN_FLAGSCLEAR_TRC_LEN (1u)


#define IFX_ASCLIN_FLAGSCLEAR_TRC_MSK (0x1u)


#define IFX_ASCLIN_FLAGSCLEAR_TRC_OFF (1u)


#define IFX_ASCLIN_FLAGSCLEAR_TRRQC_LEN (1u)


#define IFX_ASCLIN_FLAGSCLEAR_TRRQC_MSK (0x1u)


#define IFX_ASCLIN_FLAGSCLEAR_TRRQC_OFF (15u)


#define IFX_ASCLIN_FLAGSCLEAR_TWRQC_LEN (1u)


#define IFX_ASCLIN_FLAGSCLEAR_TWRQC_MSK (0x1u)


#define IFX_ASCLIN_FLAGSCLEAR_TWRQC_OFF (13u)


#define IFX_ASCLIN_FLAGSENABLE_ABE_LEN (1u)


#define IFX_ASCLIN_FLAGSENABLE_ABE_MSK (0x1u)


#define IFX_ASCLIN_FLAGSENABLE_ABE_OFF (23u)


#define IFX_ASCLIN_FLAGSENABLE_BDE_LEN (1u)


#define IFX_ASCLIN_FLAGSENABLE_BDE_MSK (0x1u)


#define IFX_ASCLIN_FLAGSENABLE_BDE_OFF (21u)


#define IFX_ASCLIN_FLAGSENABLE_CEE_LEN (1u)


#define IFX_ASCLIN_FLAGSENABLE_CEE_MSK (0x1u)


#define IFX_ASCLIN_FLAGSENABLE_CEE_OFF (25u)


#define IFX_ASCLIN_FLAGSENABLE_FEDE_LEN (1u)


#define IFX_ASCLIN_FLAGSENABLE_FEDE_MSK (0x1u)


#define IFX_ASCLIN_FLAGSENABLE_FEDE_OFF (5u)


#define IFX_ASCLIN_FLAGSENABLE_FEE_LEN (1u)


#define IFX_ASCLIN_FLAGSENABLE_FEE_MSK (0x1u)


#define IFX_ASCLIN_FLAGSENABLE_FEE_OFF (18u)


#define IFX_ASCLIN_FLAGSENABLE_HTE_LEN (1u)


#define IFX_ASCLIN_FLAGSENABLE_HTE_MSK (0x1u)


#define IFX_ASCLIN_FLAGSENABLE_HTE_OFF (19u)


#define IFX_ASCLIN_FLAGSENABLE_LCE_LEN (1u)


#define IFX_ASCLIN_FLAGSENABLE_LCE_MSK (0x1u)


#define IFX_ASCLIN_FLAGSENABLE_LCE_OFF (24u)


#define IFX_ASCLIN_FLAGSENABLE_LPE_LEN (1u)


#define IFX_ASCLIN_FLAGSENABLE_LPE_MSK (0x1u)


#define IFX_ASCLIN_FLAGSENABLE_LPE_OFF (22u)


#define IFX_ASCLIN_FLAGSENABLE_PEE_LEN (1u)


#define IFX_ASCLIN_FLAGSENABLE_PEE_MSK (0x1u)


#define IFX_ASCLIN_FLAGSENABLE_PEE_OFF (16u)


#define IFX_ASCLIN_FLAGSENABLE_REDE_LEN (1u)


#define IFX_ASCLIN_FLAGSENABLE_REDE_MSK (0x1u)


#define IFX_ASCLIN_FLAGSENABLE_REDE_OFF (6u)


#define IFX_ASCLIN_FLAGSENABLE_RFLE_LEN (1u)


#define IFX_ASCLIN_FLAGSENABLE_RFLE_MSK (0x1u)


#define IFX_ASCLIN_FLAGSENABLE_RFLE_OFF (28u)


#define IFX_ASCLIN_FLAGSENABLE_RFOE_LEN (1u)


#define IFX_ASCLIN_FLAGSENABLE_RFOE_MSK (0x1u)


#define IFX_ASCLIN_FLAGSENABLE_RFOE_OFF (26u)


#define IFX_ASCLIN_FLAGSENABLE_RFUE_LEN (1u)


#define IFX_ASCLIN_FLAGSENABLE_RFUE_MSK (0x1u)


#define IFX_ASCLIN_FLAGSENABLE_RFUE_OFF (27u)


#define IFX_ASCLIN_FLAGSENABLE_RHE_LEN (1u)


#define IFX_ASCLIN_FLAGSENABLE_RHE_MSK (0x1u)


#define IFX_ASCLIN_FLAGSENABLE_RHE_OFF (2u)


#define IFX_ASCLIN_FLAGSENABLE_RRE_LEN (1u)


#define IFX_ASCLIN_FLAGSENABLE_RRE_MSK (0x1u)


#define IFX_ASCLIN_FLAGSENABLE_RRE_OFF (3u)


#define IFX_ASCLIN_FLAGSENABLE_RTE_LEN (1u)


#define IFX_ASCLIN_FLAGSENABLE_RTE_MSK (0x1u)


#define IFX_ASCLIN_FLAGSENABLE_RTE_OFF (20u)


#define IFX_ASCLIN_FLAGSENABLE_TCE_LEN (1u)


#define IFX_ASCLIN_FLAGSENABLE_TCE_MSK (0x1u)


#define IFX_ASCLIN_FLAGSENABLE_TCE_OFF (17u)


#define IFX_ASCLIN_FLAGSENABLE_TFLE_LEN (1u)


#define IFX_ASCLIN_FLAGSENABLE_TFLE_MSK (0x1u)


#define IFX_ASCLIN_FLAGSENABLE_TFLE_OFF (31u)


#define IFX_ASCLIN_FLAGSENABLE_TFOE_LEN (1u)


#define IFX_ASCLIN_FLAGSENABLE_TFOE_MSK (0x1u)


#define IFX_ASCLIN_FLAGSENABLE_TFOE_OFF (30u)


#define IFX_ASCLIN_FLAGSENABLE_THE_LEN (1u)


#define IFX_ASCLIN_FLAGSENABLE_THE_MSK (0x1u)


#define IFX_ASCLIN_FLAGSENABLE_THE_OFF (0u)


#define IFX_ASCLIN_FLAGSENABLE_TRE_LEN (1u)


#define IFX_ASCLIN_FLAGSENABLE_TRE_MSK (0x1u)


#define IFX_ASCLIN_FLAGSENABLE_TRE_OFF (1u)


#define IFX_ASCLIN_FLAGSSET_BDS_LEN (1u)


#define IFX_ASCLIN_FLAGSSET_BDS_MSK (0x1u)


#define IFX_ASCLIN_FLAGSSET_BDS_OFF (21u)


#define IFX_ASCLIN_FLAGSSET_CES_LEN (1u)


#define IFX_ASCLIN_FLAGSSET_CES_MSK (0x1u)


#define IFX_ASCLIN_FLAGSSET_CES_OFF (25u)


#define IFX_ASCLIN_FLAGSSET_FEDS_LEN (1u)


#define IFX_ASCLIN_FLAGSSET_FEDS_MSK (0x1u)


#define IFX_ASCLIN_FLAGSSET_FEDS_OFF (5u)


#define IFX_ASCLIN_FLAGSSET_FES_LEN (1u)


#define IFX_ASCLIN_FLAGSSET_FES_MSK (0x1u)


#define IFX_ASCLIN_FLAGSSET_FES_OFF (18u)


#define IFX_ASCLIN_FLAGSSET_HTS_LEN (1u)


#define IFX_ASCLIN_FLAGSSET_HTS_MSK (0x1u)


#define IFX_ASCLIN_FLAGSSET_HTS_OFF (19u)


#define IFX_ASCLIN_FLAGSSET_LAS_LEN (1u)


#define IFX_ASCLIN_FLAGSSET_LAS_MSK (0x1u)


#define IFX_ASCLIN_FLAGSSET_LAS_OFF (23u)


#define IFX_ASCLIN_FLAGSSET_LCS_LEN (1u)


#define IFX_ASCLIN_FLAGSSET_LCS_MSK (0x1u)


#define IFX_ASCLIN_FLAGSSET_LCS_OFF (24u)


#define IFX_ASCLIN_FLAGSSET_LPS_LEN (1u)


#define IFX_ASCLIN_FLAGSSET_LPS_MSK (0x1u)


#define IFX_ASCLIN_FLAGSSET_LPS_OFF (22u)


#define IFX_ASCLIN_FLAGSSET_PES_LEN (1u)


#define IFX_ASCLIN_FLAGSSET_PES_MSK (0x1u)


#define IFX_ASCLIN_FLAGSSET_PES_OFF (16u)


#define IFX_ASCLIN_FLAGSSET_REDS_LEN (1u)


#define IFX_ASCLIN_FLAGSSET_REDS_MSK (0x1u)


#define IFX_ASCLIN_FLAGSSET_REDS_OFF (6u)


#define IFX_ASCLIN_FLAGSSET_RFLS_LEN (1u)


#define IFX_ASCLIN_FLAGSSET_RFLS_MSK (0x1u)


#define IFX_ASCLIN_FLAGSSET_RFLS_OFF (28u)


#define IFX_ASCLIN_FLAGSSET_RFOS_LEN (1u)


#define IFX_ASCLIN_FLAGSSET_RFOS_MSK (0x1u)


#define IFX_ASCLIN_FLAGSSET_RFOS_OFF (26u)


#define IFX_ASCLIN_FLAGSSET_RFUS_LEN (1u)


#define IFX_ASCLIN_FLAGSSET_RFUS_MSK (0x1u)


#define IFX_ASCLIN_FLAGSSET_RFUS_OFF (27u)


#define IFX_ASCLIN_FLAGSSET_RHS_LEN (1u)


#define IFX_ASCLIN_FLAGSSET_RHS_MSK (0x1u)


#define IFX_ASCLIN_FLAGSSET_RHS_OFF (2u)


#define IFX_ASCLIN_FLAGSSET_RRS_LEN (1u)


#define IFX_ASCLIN_FLAGSSET_RRS_MSK (0x1u)


#define IFX_ASCLIN_FLAGSSET_RRS_OFF (3u)


#define IFX_ASCLIN_FLAGSSET_RTS_LEN (1u)


#define IFX_ASCLIN_FLAGSSET_RTS_MSK (0x1u)


#define IFX_ASCLIN_FLAGSSET_RTS_OFF (20u)


#define IFX_ASCLIN_FLAGSSET_TCS_LEN (1u)


#define IFX_ASCLIN_FLAGSSET_TCS_MSK (0x1u)


#define IFX_ASCLIN_FLAGSSET_TCS_OFF (17u)


#define IFX_ASCLIN_FLAGSSET_TFLS_LEN (1u)


#define IFX_ASCLIN_FLAGSSET_TFLS_MSK (0x1u)


#define IFX_ASCLIN_FLAGSSET_TFLS_OFF (31u)


#define IFX_ASCLIN_FLAGSSET_TFOS_LEN (1u)


#define IFX_ASCLIN_FLAGSSET_TFOS_MSK (0x1u)


#define IFX_ASCLIN_FLAGSSET_TFOS_OFF (30u)


#define IFX_ASCLIN_FLAGSSET_THRQS_LEN (1u)


#define IFX_ASCLIN_FLAGSSET_THRQS_MSK (0x1u)


#define IFX_ASCLIN_FLAGSSET_THRQS_OFF (14u)


#define IFX_ASCLIN_FLAGSSET_THS_LEN (1u)


#define IFX_ASCLIN_FLAGSSET_THS_MSK (0x1u)


#define IFX_ASCLIN_FLAGSSET_THS_OFF (0u)


#define IFX_ASCLIN_FLAGSSET_TRRQS_LEN (1u)


#define IFX_ASCLIN_FLAGSSET_TRRQS_MSK (0x1u)


#define IFX_ASCLIN_FLAGSSET_TRRQS_OFF (15u)


#define IFX_ASCLIN_FLAGSSET_TRS_LEN (1u)


#define IFX_ASCLIN_FLAGSSET_TRS_MSK (0x1u)


#define IFX_ASCLIN_FLAGSSET_TRS_OFF (1u)


#define IFX_ASCLIN_FLAGSSET_TWRQS_LEN (1u)


#define IFX_ASCLIN_FLAGSSET_TWRQS_MSK (0x1u)


#define IFX_ASCLIN_FLAGSSET_TWRQS_OFF (13u)


#define IFX_ASCLIN_FRAMECON_CEN_LEN (1u)


#define IFX_ASCLIN_FRAMECON_CEN_MSK (0x1u)


#define IFX_ASCLIN_FRAMECON_CEN_OFF (29u)


#define IFX_ASCLIN_FRAMECON_IDLE_LEN (3u)


#define IFX_ASCLIN_FRAMECON_IDLE_MSK (0x7u)


#define IFX_ASCLIN_FRAMECON_IDLE_OFF (6u)


#define IFX_ASCLIN_FRAMECON_LEAD_LEN (3u)


#define IFX_ASCLIN_FRAMECON_LEAD_MSK (0x7u)


#define IFX_ASCLIN_FRAMECON_LEAD_OFF (12u)


#define IFX_ASCLIN_FRAMECON_MODE_LEN (2u)


#define IFX_ASCLIN_FRAMECON_MODE_MSK (0x3u)


#define IFX_ASCLIN_FRAMECON_MODE_OFF (16u)


#define IFX_ASCLIN_FRAMECON_MSB_LEN (1u)


#define IFX_ASCLIN_FRAMECON_MSB_MSK (0x1u)


#define IFX_ASCLIN_FRAMECON_MSB_OFF (28u)


#define IFX_ASCLIN_FRAMECON_ODD_LEN (1u)


#define IFX_ASCLIN_FRAMECON_ODD_MSK (0x1u)


#define IFX_ASCLIN_FRAMECON_ODD_OFF (31u)


#define IFX_ASCLIN_FRAMECON_PEN_LEN (1u)


#define IFX_ASCLIN_FRAMECON_PEN_MSK (0x1u)


#define IFX_ASCLIN_FRAMECON_PEN_OFF (30u)


#define IFX_ASCLIN_FRAMECON_STOP_LEN (3u)


#define IFX_ASCLIN_FRAMECON_STOP_MSK (0x7u)


#define IFX_ASCLIN_FRAMECON_STOP_OFF (9u)


#define IFX_ASCLIN_ID_MODNUMBER_LEN (16u)


#define IFX_ASCLIN_ID_MODNUMBER_MSK (0xffffu)


#define IFX_ASCLIN_ID_MODNUMBER_OFF (16u)


#define IFX_ASCLIN_ID_MODREV_LEN (8u)


#define IFX_ASCLIN_ID_MODREV_MSK (0xffu)


#define IFX_ASCLIN_ID_MODREV_OFF (0u)


#define IFX_ASCLIN_ID_MODTYPE_LEN (8u)


#define IFX_ASCLIN_ID_MODTYPE_MSK (0xffu)


#define IFX_ASCLIN_ID_MODTYPE_OFF (8u)


#define IFX_ASCLIN_IOCR_ALTI_LEN (3u)


#define IFX_ASCLIN_IOCR_ALTI_MSK (0x7u)


#define IFX_ASCLIN_IOCR_ALTI_OFF (0u)


#define IFX_ASCLIN_IOCR_CPOL_LEN (1u)


#define IFX_ASCLIN_IOCR_CPOL_MSK (0x1u)


#define IFX_ASCLIN_IOCR_CPOL_OFF (26u)


#define IFX_ASCLIN_IOCR_CTS_LEN (2u)


#define IFX_ASCLIN_IOCR_CTS_MSK (0x3u)


#define IFX_ASCLIN_IOCR_CTS_OFF (16u)


#define IFX_ASCLIN_IOCR_CTSEN_LEN (1u)


#define IFX_ASCLIN_IOCR_CTSEN_MSK (0x1u)


#define IFX_ASCLIN_IOCR_CTSEN_OFF (29u)


#define IFX_ASCLIN_IOCR_DEPTH_LEN (6u)


#define IFX_ASCLIN_IOCR_DEPTH_MSK (0x3fu)


#define IFX_ASCLIN_IOCR_DEPTH_OFF (4u)


#define IFX_ASCLIN_IOCR_LB_LEN (1u)


#define IFX_ASCLIN_IOCR_LB_MSK (0x1u)


#define IFX_ASCLIN_IOCR_LB_OFF (28u)


#define IFX_ASCLIN_IOCR_RCPOL_LEN (1u)


#define IFX_ASCLIN_IOCR_RCPOL_MSK (0x1u)


#define IFX_ASCLIN_IOCR_RCPOL_OFF (25u)


#define IFX_ASCLIN_IOCR_RXM_LEN (1u)


#define IFX_ASCLIN_IOCR_RXM_MSK (0x1u)


#define IFX_ASCLIN_IOCR_RXM_OFF (30u)


#define IFX_ASCLIN_IOCR_SPOL_LEN (1u)


#define IFX_ASCLIN_IOCR_SPOL_MSK (0x1u)


#define IFX_ASCLIN_IOCR_SPOL_OFF (27u)


#define IFX_ASCLIN_IOCR_TXM_LEN (1u)


#define IFX_ASCLIN_IOCR_TXM_MSK (0x1u)


#define IFX_ASCLIN_IOCR_TXM_OFF (31u)


#define IFX_ASCLIN_KRST0_RST_LEN (1u)


#define IFX_ASCLIN_KRST0_RST_MSK (0x1u)


#define IFX_ASCLIN_KRST0_RST_OFF (0u)


#define IFX_ASCLIN_KRST0_RSTSTAT_LEN (1u)


#define IFX_ASCLIN_KRST0_RSTSTAT_MSK (0x1u)


#define IFX_ASCLIN_KRST0_RSTSTAT_OFF (1u)


#define IFX_ASCLIN_KRST1_RST_LEN (1u)


#define IFX_ASCLIN_KRST1_RST_MSK (0x1u)


#define IFX_ASCLIN_KRST1_RST_OFF (0u)


#define IFX_ASCLIN_KRSTCLR_CLR_LEN (1u)


#define IFX_ASCLIN_KRSTCLR_CLR_MSK (0x1u)


#define IFX_ASCLIN_KRSTCLR_CLR_OFF (0u)


#define IFX_ASCLIN_LIN_BTIMER_BREAK_LEN (6u)


#define IFX_ASCLIN_LIN_BTIMER_BREAK_MSK (0x3fu)


#define IFX_ASCLIN_LIN_BTIMER_BREAK_OFF (0u)


#define IFX_ASCLIN_LIN_CON_ABD_LEN (1u)


#define IFX_ASCLIN_LIN_CON_ABD_MSK (0x1u)


#define IFX_ASCLIN_LIN_CON_ABD_OFF (27u)


#define IFX_ASCLIN_LIN_CON_CSEN_LEN (1u)


#define IFX_ASCLIN_LIN_CON_CSEN_MSK (0x1u)


#define IFX_ASCLIN_LIN_CON_CSEN_OFF (25u)


#define IFX_ASCLIN_LIN_CON_CSI_LEN (1u)


#define IFX_ASCLIN_LIN_CON_CSI_MSK (0x1u)


#define IFX_ASCLIN_LIN_CON_CSI_OFF (23u)


#define IFX_ASCLIN_LIN_CON_MS_LEN (1u)


#define IFX_ASCLIN_LIN_CON_MS_MSK (0x1u)


#define IFX_ASCLIN_LIN_CON_MS_OFF (26u)


#define IFX_ASCLIN_LIN_HTIMER_HEADER_LEN (8u)


#define IFX_ASCLIN_LIN_HTIMER_HEADER_MSK (0xffu)


#define IFX_ASCLIN_LIN_HTIMER_HEADER_OFF (0u)


#define IFX_ASCLIN_OCS_SUS_LEN (4u)


#define IFX_ASCLIN_OCS_SUS_MSK (0xfu)


#define IFX_ASCLIN_OCS_SUS_OFF (24u)


#define IFX_ASCLIN_OCS_SUS_P_LEN (1u)


#define IFX_ASCLIN_OCS_SUS_P_MSK (0x1u)


#define IFX_ASCLIN_OCS_SUS_P_OFF (28u)


#define IFX_ASCLIN_OCS_SUSSTA_LEN (1u)


#define IFX_ASCLIN_OCS_SUSSTA_MSK (0x1u)


#define IFX_ASCLIN_OCS_SUSSTA_OFF (29u)


#define IFX_ASCLIN_RXDATA_DATA_LEN (32u)


#define IFX_ASCLIN_RXDATA_DATA_MSK (0xffffffffu)


#define IFX_ASCLIN_RXDATA_DATA_OFF (0u)


#define IFX_ASCLIN_RXDATAD_DATA_LEN (32u)


#define IFX_ASCLIN_RXDATAD_DATA_MSK (0xffffffffu)


#define IFX_ASCLIN_RXDATAD_DATA_OFF (0u)


#define IFX_ASCLIN_RXFIFOCON_BUF_LEN (1u)


#define IFX_ASCLIN_RXFIFOCON_BUF_MSK (0x1u)


#define IFX_ASCLIN_RXFIFOCON_BUF_OFF (31u)


#define IFX_ASCLIN_RXFIFOCON_ENI_LEN (1u)


#define IFX_ASCLIN_RXFIFOCON_ENI_MSK (0x1u)


#define IFX_ASCLIN_RXFIFOCON_ENI_OFF (1u)


#define IFX_ASCLIN_RXFIFOCON_FILL_LEN (5u)


#define IFX_ASCLIN_RXFIFOCON_FILL_MSK (0x1fu)


#define IFX_ASCLIN_RXFIFOCON_FILL_OFF (16u)


#define IFX_ASCLIN_RXFIFOCON_FLUSH_LEN (1u)


#define IFX_ASCLIN_RXFIFOCON_FLUSH_MSK (0x1u)


#define IFX_ASCLIN_RXFIFOCON_FLUSH_OFF (0u)


#define IFX_ASCLIN_RXFIFOCON_INTLEVEL_LEN (4u)


#define IFX_ASCLIN_RXFIFOCON_INTLEVEL_MSK (0xfu)


#define IFX_ASCLIN_RXFIFOCON_INTLEVEL_OFF (8u)


#define IFX_ASCLIN_RXFIFOCON_OUTW_LEN (2u)


#define IFX_ASCLIN_RXFIFOCON_OUTW_MSK (0x3u)


#define IFX_ASCLIN_RXFIFOCON_OUTW_OFF (6u)


#define IFX_ASCLIN_TXDATA_DATA_LEN (32u)


#define IFX_ASCLIN_TXDATA_DATA_MSK (0xffffffffu)


#define IFX_ASCLIN_TXDATA_DATA_OFF (0u)


#define IFX_ASCLIN_TXFIFOCON_ENO_LEN (1u)


#define IFX_ASCLIN_TXFIFOCON_ENO_MSK (0x1u)


#define IFX_ASCLIN_TXFIFOCON_ENO_OFF (1u)


#define IFX_ASCLIN_TXFIFOCON_FILL_LEN (5u)


#define IFX_ASCLIN_TXFIFOCON_FILL_MSK (0x1fu)


#define IFX_ASCLIN_TXFIFOCON_FILL_OFF (16u)


#define IFX_ASCLIN_TXFIFOCON_FLUSH_LEN (1u)


#define IFX_ASCLIN_TXFIFOCON_FLUSH_MSK (0x1u)


#define IFX_ASCLIN_TXFIFOCON_FLUSH_OFF (0u)


#define IFX_ASCLIN_TXFIFOCON_INTLEVEL_LEN (4u)


#define IFX_ASCLIN_TXFIFOCON_INTLEVEL_MSK (0xfu)


#define IFX_ASCLIN_TXFIFOCON_INTLEVEL_OFF (8u)


#define IFX_ASCLIN_TXFIFOCON_INW_LEN (2u)


#define IFX_ASCLIN_TXFIFOCON_INW_MSK (0x3u)


#define IFX_ASCLIN_TXFIFOCON_INW_OFF (6u)
# 14 "D:\\Workspace\\autoever_osek\\can_based_OSEK_OS_TEST\\bsw\\drivers\\asclin.h" 2

static Ifx_ASCLIN * const asclin3 = (Ifx_ASCLIN *)&(*(Ifx_ASCLIN*)0xF0000900u);

#define UARTBASE asclin3


#define BAUD_38400 (48 * 4)


#define IN_NOPULL0 0x00
#define IN_PULLDOWN 0x01
#define IN_PULLUP 0x02
#define IN_NOPULL3 0x03
#define OUT_PPGPIO 0x10
#define OUT_PPALT1 0x11
#define OUT_PPALT2 0x12
#define OUT_PPALT3 0x13
#define OUT_PPALT4 0x14
#define OUT_PPALT5 0x15
#define OUT_PPALT6 0x16
#define OUT_PPALT7 0x17
#define OUT_ODGPIO 0x18
#define OUT_ODALT1 0x19
#define OUT_ODALT2 0x1A
#define OUT_ODALT3 0x1B
#define OUT_ODALT4 0x1C
#define OUT_ODALT5 0x1D
#define OUT_ODALT6 0x1E
#define OUT_ODALT7 0x1F


#define ASC_ERROR_MASK ((IFX_ASCLIN_FLAGS_PE_MSK << IFX_ASCLIN_FLAGS_PE_OFF) | (IFX_ASCLIN_FLAGS_FE_MSK << IFX_ASCLIN_FLAGS_FE_OFF) | (IFX_ASCLIN_FLAGS_RFO_MSK << IFX_ASCLIN_FLAGS_RFO_OFF))



#define ASC_CLRERR_MASK ((IFX_ASCLIN_FLAGSCLEAR_PEC_MSK << IFX_ASCLIN_FLAGSCLEAR_PEC_OFF) | (IFX_ASCLIN_FLAGSCLEAR_FEC_MSK << IFX_ASCLIN_FLAGSCLEAR_FEC_OFF) | (IFX_ASCLIN_FLAGSCLEAR_RFOC_MSK << IFX_ASCLIN_FLAGSCLEAR_RFOC_OFF))




#define RX_CLEAR(u) ((u).FLAGSCLEAR.U = (IFX_ASCLIN_FLAGSCLEAR_RFLC_MSK << IFX_ASCLIN_FLAGSCLEAR_RFLC_OFF))
#define TX_CLEAR(u) ((u).FLAGSCLEAR.U = (IFX_ASCLIN_FLAGSCLEAR_TFLC_MSK << IFX_ASCLIN_FLAGSCLEAR_TFLC_OFF))
#define PUT_CHAR(u,c) ((u).TXDATA.U = (c))
#define GET_CHAR(u) ((u).RXDATA.U)
#define GET_ERROR_STATUS(u) (((u).FLAGS.U) & ASC_ERROR_MASK)
#define RESET_ERROR(u) ((u).FLAGSCLEAR.U = ASC_CLRERR_MASK)






#define TX_START(u) ((u).FLAGSSET.U = (IFX_ASCLIN_FLAGSSET_TFLS_MSK << IFX_ASCLIN_FLAGSSET_TFLS_OFF))
#define TX_READY(u) ((u).FLAGS.B.TFL != 0)
#define RX_READY(u) ((u).FLAGS.B.RFL != 0)

void uart3_rx_isr(void);

void _init_uart3(void);


void _out_uart3(const unsigned char chr);


unsigned char _in_uart3(void);





int _poll_uart3(unsigned char *chr);
int usr_vsprintf(char *dest, const char *fmt, va_list ap);
int usr_sprintf(char *buf, char const *fmt, ...);
void my_puts(const char *str);
void my_printf(const char *fmt, ...);
void my_scanf(const char *fmt, ...);
void remove_null(char *s);


#define __debug(loc,val) my_printf("@@ " #loc " @@ - " #val ": %d\n", val )


void _init_uart1(void);
unsigned char _in_uart1(void);
int _poll_uart1(unsigned char *chr);

int _poll_uart0(unsigned char *chr);
unsigned char _in_uart0(void);
void _init_uart0(void);
void _out_uart0(const unsigned char chr);
# 3 "D:\\Workspace\\autoever_osek\\can_based_OSEK_OS_TEST\\bsw\\drivers\\gpt12.c" 2
# 1 "D:\\Workspace\\autoever_osek\\can_based_OSEK_OS_TEST\\bsw\\drivers\\../io/Ultrasonic.h" 1

#define BSW_IO_ULTRASONIC_H_ 

void Init_Ultrasonics(void);
double ReadUltrasonic_noFilt(void);
double ReadUltrasonic_Filt(void);

#define FILT_SIZE 5
# 4 "D:\\Workspace\\autoever_osek\\can_based_OSEK_OS_TEST\\bsw\\drivers\\gpt12.c" 2
# 1 "D:\\Workspace\\autoever_osek\\can_based_OSEK_OS_TEST\\bsw\\drivers\\../../main.h" 1

#define MAIN_H_ 


# 1 "D:\\Workspace\\autoever_osek\\can_based_OSEK_OS_TEST\\bsw\\drivers\\../../bsw/system/system_tc2x.h" 1
# 9 "D:\\Workspace\\autoever_osek\\can_based_OSEK_OS_TEST\\bsw\\drivers\\../../bsw/system/system_tc2x.h"
#define __SYSTEM_TC2X_H__ 

# 1 "D:\\Workspace\\autoever_osek\\can_based_OSEK_OS_TEST\\bsw\\drivers\\../../bsw/system/system.h" 1
# 20 "D:\\Workspace\\autoever_osek\\can_based_OSEK_OS_TEST\\bsw\\drivers\\../../bsw/system/system.h"
#define __SYSTEM_H__ 






void SYSTEM_Init(void);







unsigned long SYSTEM_GetExtClock(void);






unsigned long SYSTEM_GetCpuClock(void);






unsigned long SYSTEM_GetSysClock(void);



void SYSTEM_EnableInterrupts(void);



void SYSTEM_DisableInterrupts(void);






void SYSTEM_EnableProtection(void);






void SYSTEM_DisableProtection(void);



int SYSTEM_Reset(void);



int SYSTEM_Idle(void);



int SYSTEM_Sleep(void);



void SYSTEM_DbgBreak(void);
# 12 "D:\\Workspace\\autoever_osek\\can_based_OSEK_OS_TEST\\bsw\\drivers\\../../bsw/system/system_tc2x.h" 2



int SYSTEM_IsCacheEnabled(void);



void SYSTEM_EnaDisCache(int Enable);




void SYSTEM_EnableProtectionExt(int Sel);
void SYSTEM_DisableProtectionExt(int Sel);

void SYSTEM_EnableSecProtection(void);
void SYSTEM_DisableSecProtection(void);

unsigned long SYSTEM_GetStmClock(void);

unsigned long SYSTEM_GetCanClock(void);
# 6 "D:\\Workspace\\autoever_osek\\can_based_OSEK_OS_TEST\\bsw\\drivers\\../../main.h" 2
# 1 "D:\\Workspace\\autoever_osek\\can_based_OSEK_OS_TEST\\bsw\\drivers\\../../bsw/system/interrupts.h" 1
# 9 "D:\\Workspace\\autoever_osek\\can_based_OSEK_OS_TEST\\bsw\\drivers\\../../bsw/system/interrupts.h"
#define __INTERRUPTS_H__ 


#define SRC_ID_CPU0SBSRC 0
#define SRC_ID_CPU1SBSRC 1
#define SRC_ID_CPU2SBSRC 2

#define SRC_ID_EMEM 8
#define SRC_ID_AGBT 9

#define SRC_ID_BCUSPBSRC 16

#define SRC_ID_XBARSRC 18

#define SRC_ID_CERBERUS0 20
#define SRC_ID_CERBERUS1 21

#define SRC_ID_ASCLIN0TX 32
#define SRC_ID_ASCLIN0RX 33
#define SRC_ID_ASCLIN0EX 34
#define SRC_ID_ASCLIN1TX 35
#define SRC_ID_ASCLIN1RX 36
#define SRC_ID_ASCLIN1EX 37
#define SRC_ID_ASCLIN2TX 38
#define SRC_ID_ASCLIN2RX 39
#define SRC_ID_ASCLIN2EX 40
#define SRC_ID_ASCLIN3TX 41
#define SRC_ID_ASCLIN3RX 42
#define SRC_ID_ASCLIN3EX 43

#define SRC_ID_QSPI0TX 100
#define SRC_ID_QSPI0RX 101
#define SRC_ID_QSPI0ERR 102
#define SRC_ID_QSPI0PT 103
#define SRC_ID_QSPI0HC 104
#define SRC_ID_QSPI0U 105
#define SRC_ID_QSPI1TX 106
#define SRC_ID_QSPI1RX 107
#define SRC_ID_QSPI1ERR 108
#define SRC_ID_QSPI1PT 109
#define SRC_ID_QSPI1HC 110
#define SRC_ID_QSPI1U 111
#define SRC_ID_QSPI2TX 112
#define SRC_ID_QSPI2RX 113
#define SRC_ID_QSPI2ERR 114
#define SRC_ID_QSPI2PT 115
#define SRC_ID_QSPI2HC 116
#define SRC_ID_QSPI2U 117
#define SRC_ID_QSPI3TX 118
#define SRC_ID_QSPI3RX 119
#define SRC_ID_QSPI3ERR 120
#define SRC_ID_QSPI3PT 121
#define SRC_ID_QSPI3HC 122
#define SRC_ID_QSPI3U 123

#define SRC_ID_HSCT 164

#define SRC_ID_HSSLCOK0 168
#define SRC_ID_HSSLRDI0 169
#define SRC_ID_HSSLERR0 170
#define SRC_ID_HSSLTRG0 171
#define SRC_ID_HSSLCOK1 172
#define SRC_ID_HSSLRDI1 173
#define SRC_ID_HSSLERR1 174
#define SRC_ID_HSSLTRG1 175
#define SRC_ID_HSSLCOK2 176
#define SRC_ID_HSSLRDI2 177
#define SRC_ID_HSSLERR2 178
#define SRC_ID_HSSLTRG2 179
#define SRC_ID_HSSLCOK3 180
#define SRC_ID_HSSLRDI3 181
#define SRC_ID_HSSLERR3 182
#define SRC_ID_HSSLTRG3 183
#define SRC_ID_HSSLEXI 184

#define SRC_ID_I2C0BREQ 192
#define SRC_ID_I2C0LBREQ 193
#define SRC_ID_I2C0SREQ 194
#define SRC_ID_I2C0LSREQ 195
#define SRC_ID_I2C0ERR 196
#define SRC_ID_I2C0P 197

#define SRC_ID_SENT0 212
#define SRC_ID_SENT1 213
#define SRC_ID_SENT2 214
#define SRC_ID_SENT3 215
#define SRC_ID_SENT4 216
#define SRC_ID_SENT5 217
#define SRC_ID_SENT6 218
#define SRC_ID_SENT7 219
#define SRC_ID_SENT8 220
#define SRC_ID_SENT9 221

#define SRC_ID_MSC0SR0 248
#define SRC_ID_MSC0SR1 249
#define SRC_ID_MSC0SR2 250
#define SRC_ID_MSC0SR3 251
#define SRC_ID_MSC0SR4 252
#define SRC_ID_MSC1SR0 253
#define SRC_ID_MSC1SR1 254
#define SRC_ID_MSC1SR2 255
#define SRC_ID_MSC1SR3 256
#define SRC_ID_MSC1SR4 257

#define SRC_ID_CCU60SR0 264
#define SRC_ID_CCU60SR1 265
#define SRC_ID_CCU60SR2 266
#define SRC_ID_CCU60SR3 267
#define SRC_ID_CCU61SR0 268
#define SRC_ID_CCU61SR1 269
#define SRC_ID_CCU61SR2 270
#define SRC_ID_CCU61SR3 271

#define SRC_ID_GPT120CIRQ 280
#define SRC_ID_GPT120T2 281
#define SRC_ID_GPT120T3 282
#define SRC_ID_GPT120T4 283
#define SRC_ID_GPT120T5 284
#define SRC_ID_GPT120T6 285

#define SRC_ID_STM0SR0 292
#define SRC_ID_STM0SR1 293
#define SRC_ID_STM1SR0 294
#define SRC_ID_STM1SR1 295
#define SRC_ID_STM2SR0 296
#define SRC_ID_STM2SR1 297

#define SRC_ID_FCE 300

#define SRC_ID_DMAERR 316

#define SRC_ID_DMACH0 320
#define SRC_ID_DMACH1 321
#define SRC_ID_DMACH2 322
#define SRC_ID_DMACH3 323
#define SRC_ID_DMACH4 324
#define SRC_ID_DMACH5 325
#define SRC_ID_DMACH6 326
#define SRC_ID_DMACH7 327
#define SRC_ID_DMACH8 328
#define SRC_ID_DMACH9 329
#define SRC_ID_DMACH10 330
#define SRC_ID_DMACH11 331
#define SRC_ID_DMACH12 332
#define SRC_ID_DMACH13 333
#define SRC_ID_DMACH14 334
#define SRC_ID_DMACH15 335
#define SRC_ID_DMACH16 336
#define SRC_ID_DMACH17 337
#define SRC_ID_DMACH18 338
#define SRC_ID_DMACH19 339
#define SRC_ID_DMACH20 340
#define SRC_ID_DMACH21 341
#define SRC_ID_DMACH22 342
#define SRC_ID_DMACH23 343
#define SRC_ID_DMACH24 344
#define SRC_ID_DMACH25 345
#define SRC_ID_DMACH26 346
#define SRC_ID_DMACH27 347
#define SRC_ID_DMACH28 348
#define SRC_ID_DMACH29 349
#define SRC_ID_DMACH30 350
#define SRC_ID_DMACH31 351
#define SRC_ID_DMACH32 352
#define SRC_ID_DMACH33 353
#define SRC_ID_DMACH34 354
#define SRC_ID_DMACH35 355
#define SRC_ID_DMACH36 356
#define SRC_ID_DMACH37 357
#define SRC_ID_DMACH38 358
#define SRC_ID_DMACH39 359
#define SRC_ID_DMACH40 360
#define SRC_ID_DMACH41 361
#define SRC_ID_DMACH42 362
#define SRC_ID_DMACH43 363
#define SRC_ID_DMACH44 364
#define SRC_ID_DMACH45 365
#define SRC_ID_DMACH46 366
#define SRC_ID_DMACH47 367
#define SRC_ID_DMACH48 368
#define SRC_ID_DMACH49 369
#define SRC_ID_DMACH50 370
#define SRC_ID_DMACH51 371
#define SRC_ID_DMACH52 372
#define SRC_ID_DMACH53 373
#define SRC_ID_DMACH54 374
#define SRC_ID_DMACH55 375
#define SRC_ID_DMACH56 376
#define SRC_ID_DMACH57 377
#define SRC_ID_DMACH58 378
#define SRC_ID_DMACH59 379
#define SRC_ID_DMACH60 380
#define SRC_ID_DMACH61 381
#define SRC_ID_DMACH62 382
#define SRC_ID_DMACH63 383

#define SRC_ID_ETH 572

#define SRC_ID_CANINT0 576
#define SRC_ID_CANINT1 577
#define SRC_ID_CANINT2 578
#define SRC_ID_CANINT3 579
#define SRC_ID_CANINT4 580
#define SRC_ID_CANINT5 581
#define SRC_ID_CANINT6 582
#define SRC_ID_CANINT7 583
#define SRC_ID_CANINT8 584
#define SRC_ID_CANINT9 585
#define SRC_ID_CANINT10 586
#define SRC_ID_CANINT11 587
#define SRC_ID_CANINT12 588
#define SRC_ID_CANINT13 589
#define SRC_ID_CANINT14 590
#define SRC_ID_CANINT15 591

#define SRC_ID_VADCG0SR0 608
#define SRC_ID_VADCG0SR1 609
#define SRC_ID_VADCG0SR2 610
#define SRC_ID_VADCG0SR3 611
#define SRC_ID_VADCG1SR0 612
#define SRC_ID_VADCG1SR1 613
#define SRC_ID_VADCG1SR2 614
#define SRC_ID_VADCG1SR3 615
#define SRC_ID_VADCG2SR0 616
#define SRC_ID_VADCG2SR1 617
#define SRC_ID_VADCG2SR2 618
#define SRC_ID_VADCG2SR3 619
#define SRC_ID_VADCG3SR0 620
#define SRC_ID_VADCG3SR1 621
#define SRC_ID_VADCG3SR2 622
#define SRC_ID_VADCG3SR3 623
#define SRC_ID_VADCG4SR0 624
#define SRC_ID_VADCG4SR1 625
#define SRC_ID_VADCG4SR2 626
#define SRC_ID_VADCG4SR3 627
#define SRC_ID_VADCG5SR0 628
#define SRC_ID_VADCG5SR1 629
#define SRC_ID_VADCG5SR2 630
#define SRC_ID_VADCG5SR3 631
#define SRC_ID_VADCG6SR0 632
#define SRC_ID_VADCG6SR1 633
#define SRC_ID_VADCG6SR2 634
#define SRC_ID_VADCG6SR3 635
#define SRC_ID_VADCG7SR0 636
#define SRC_ID_VADCG7SR1 637
#define SRC_ID_VADCG7SR2 638
#define SRC_ID_VADCG7SR3 639

#define SRC_ID_VADCCG0SR0 680
#define SRC_ID_VADCCG0SR1 681
#define SRC_ID_VADCCG0SR2 682
#define SRC_ID_VADCCG0SR3 683
#define SRC_ID_VADCCG1SR0 684
#define SRC_ID_VADCCG1SR1 685
#define SRC_ID_VADCCG1SR2 686
#define SRC_ID_VADCCG1SR3 687

#define SRC_ID_DSADCSRM0 724
#define SRC_ID_DSADCSRA0 725
#define SRC_ID_DSADCSRM1 726
#define SRC_ID_DSADCSRA1 727
#define SRC_ID_DSADCSRM2 728
#define SRC_ID_DSADCSRA2 729
#define SRC_ID_DSADCSRM3 730
#define SRC_ID_DSADCSRA3 731
#define SRC_ID_DSADCSRM4 732
#define SRC_ID_DSADCSRA4 733
#define SRC_ID_DSADCSRM5 734
#define SRC_ID_DSADCSRA5 735

#define SRC_ID_ERAYINT0 760
#define SRC_ID_ERAYINT1 761
#define SRC_ID_ERAYTINT0 762
#define SRC_ID_ERAYTINT1 763
#define SRC_ID_ERAYNDAT0 764
#define SRC_ID_ERAYNDAT1 765
#define SRC_ID_ERAYMBSC0 766
#define SRC_ID_ERAYMBSC1 767
#define SRC_ID_ERAYOBUSY 768
#define SRC_ID_ERAYIBUSY 769

#define SRC_ID_PMU00 780
#define SRC_ID_PMU01 781

#define SRC_ID_HSM0 816
#define SRC_ID_HSM1 817

#define SRC_ID_SCUDTS 820
#define SRC_ID_SCUERU0 821
#define SRC_ID_SCUERU1 822
#define SRC_ID_SCUERU2 823
#define SRC_ID_SCUERU3 824

#define SRC_ID_SMU0 836
#define SRC_ID_SMU1 837
#define SRC_ID_SMU2 838

#define SRC_ID_PSI50 844
#define SRC_ID_PSI51 845
#define SRC_ID_PSI52 846
#define SRC_ID_PSI53 847
#define SRC_ID_PSI54 848
#define SRC_ID_PSI55 849
#define SRC_ID_PSI56 850
#define SRC_ID_PSI57 851

#define SRC_ID_DAMLI0 860
#define SRC_ID_DAMRI0 861
#define SRC_ID_DAMLI1 862
#define SRC_ID_DAMRI1 863
#define SRC_ID_DAMDR 864
#define SRC_ID_DAMERR 865

#define SRC_ID_CIFMI 872
#define SRC_ID_CIFMIEP 873
#define SRC_ID_CIFISP 874
#define SRC_ID_CIFMJPEG 875

#define SRC_ID_LMU 888

#define SRC_ID_PSI5S0 892
#define SRC_ID_PSI5S1 893
#define SRC_ID_PSI5S2 894
#define SRC_ID_PSI5S3 895
#define SRC_ID_PSI5S4 896
#define SRC_ID_PSI5S5 897
#define SRC_ID_PSI5S6 898
#define SRC_ID_PSI5S7 899

#define SRC_ID_GPSR00 1024
#define SRC_ID_GPSR01 1025
#define SRC_ID_GPSR02 1026
#define SRC_ID_GPSR03 1027

#define SRC_ID_GPSR10 1032
#define SRC_ID_GPSR11 1033
#define SRC_ID_GPSR12 1034
#define SRC_ID_GPSR13 1035

#define SRC_ID_GPSR20 1040
#define SRC_ID_GPSR21 1041
#define SRC_ID_GPSR22 1042
#define SRC_ID_GPSR23 1043

#define SRC_ID_GTMAEIIRQ 1408
#define SRC_ID_GTMARUIRQ0 1409
#define SRC_ID_GTMARUIRQ1 1410
#define SRC_ID_GTMARUIRQ2 1411

#define SRC_ID_GTMBRCIRQ 1413
#define SRC_ID_GTMCMPIRQ 1414
#define SRC_ID_GTMSPE0IRQ 1415
#define SRC_ID_GTMSPE1IRQ 1416

#define SRC_ID_GTMPSM00 1419
#define SRC_ID_GTMPSM01 1420
#define SRC_ID_GTMPSM02 1421
#define SRC_ID_GTMPSM03 1422
#define SRC_ID_GTMPSM04 1423
#define SRC_ID_GTMPSM05 1424
#define SRC_ID_GTMPSM06 1425
#define SRC_ID_GTMPSM07 1426

#define SRC_ID_GTMDPLL0 1449
#define SRC_ID_GTMDPLL1 1450
#define SRC_ID_GTMDPLL2 1451
#define SRC_ID_GTMDPLL3 1452
#define SRC_ID_GTMDPLL4 1453
#define SRC_ID_GTMDPLL5 1454
#define SRC_ID_GTMDPLL6 1455
#define SRC_ID_GTMDPLL7 1456
#define SRC_ID_GTMDPLL8 1457
#define SRC_ID_GTMDPLL9 1458
#define SRC_ID_GTMDPLL10 1459
#define SRC_ID_GTMDPLL11 1460
#define SRC_ID_GTMDPLL12 1461
#define SRC_ID_GTMDPLL13 1462
#define SRC_ID_GTMDPLL14 1463
#define SRC_ID_GTMDPLL15 1464
#define SRC_ID_GTMDPLL16 1465
#define SRC_ID_GTMDPLL17 1466
#define SRC_ID_GTMDPLL18 1467
#define SRC_ID_GTMDPLL19 1468
#define SRC_ID_GTMDPLL20 1469
#define SRC_ID_GTMDPLL21 1470
#define SRC_ID_GTMDPLL22 1471
#define SRC_ID_GTMDPLL23 1472
#define SRC_ID_GTMDPLL24 1473
#define SRC_ID_GTMDPLL25 1474
#define SRC_ID_GTMDPLL26 1475

#define SRC_ID_GTMERR 1500

#define SRC_ID_GTMTIM00 1504
#define SRC_ID_GTMTIM01 1505
#define SRC_ID_GTMTIM02 1506
#define SRC_ID_GTMTIM03 1507
#define SRC_ID_GTMTIM04 1508
#define SRC_ID_GTMTIM05 1509
#define SRC_ID_GTMTIM06 1510
#define SRC_ID_GTMTIM07 1511
#define SRC_ID_GTMTIM10 1512
#define SRC_ID_GTMTIM11 1513
#define SRC_ID_GTMTIM12 1514
#define SRC_ID_GTMTIM13 1515
#define SRC_ID_GTMTIM14 1516
#define SRC_ID_GTMTIM15 1517
#define SRC_ID_GTMTIM16 1518
#define SRC_ID_GTMTIM17 1519
#define SRC_ID_GTMTIM20 1520
#define SRC_ID_GTMTIM21 1521
#define SRC_ID_GTMTIM22 1522
#define SRC_ID_GTMTIM23 1523
#define SRC_ID_GTMTIM24 1524
#define SRC_ID_GTMTIM25 1525
#define SRC_ID_GTMTIM26 1526
#define SRC_ID_GTMTIM27 1527
#define SRC_ID_GTMTIM30 1528
#define SRC_ID_GTMTIM31 1529
#define SRC_ID_GTMTIM32 1530
#define SRC_ID_GTMTIM33 1531
#define SRC_ID_GTMTIM34 1532
#define SRC_ID_GTMTIM35 1533
#define SRC_ID_GTMTIM36 1534
#define SRC_ID_GTMTIM37 1535

#define SRC_ID_GTMMSC00 1632
#define SRC_ID_GTMMSC01 1633
#define SRC_ID_GTMMSC02 1634
#define SRC_ID_GTMMSC03 1635
#define SRC_ID_GTMMSC04 1636
#define SRC_ID_GTMMSC05 1637
#define SRC_ID_GTMMSC06 1638
#define SRC_ID_GTMMSC07 1639
#define SRC_ID_GTMMSC10 1640
#define SRC_ID_GTMMSC11 1641
#define SRC_ID_GTMMSC12 1642
#define SRC_ID_GTMMSC13 1643
#define SRC_ID_GTMMSC14 1644
#define SRC_ID_GTMMSC15 1645
#define SRC_ID_GTMMSC16 1646
#define SRC_ID_GTMMSC17 1647
#define SRC_ID_GTMMSC20 1648
#define SRC_ID_GTMMSC21 1649
#define SRC_ID_GTMMSC22 1650
#define SRC_ID_GTMMSC23 1651
#define SRC_ID_GTMMSC24 1652
#define SRC_ID_GTMMSC25 1653
#define SRC_ID_GTMMSC26 1654
#define SRC_ID_GTMMSC27 1655
#define SRC_ID_GTMMSC30 1656
#define SRC_ID_GTMMSC31 1657
#define SRC_ID_GTMMSC32 1658
#define SRC_ID_GTMMSC33 1659
#define SRC_ID_GTMMSC34 1660
#define SRC_ID_GTMMSC35 1661
#define SRC_ID_GTMMSC36 1662
#define SRC_ID_GTMMSC37 1663

#define SRC_ID_GTMTOM00 1760
#define SRC_ID_GTMTOM01 1761
#define SRC_ID_GTMTOM02 1762
#define SRC_ID_GTMTOM03 1763
#define SRC_ID_GTMTOM04 1764
#define SRC_ID_GTMTOM05 1765
#define SRC_ID_GTMTOM06 1766
#define SRC_ID_GTMTOM07 1767
#define SRC_ID_GTMTOM10 1768
#define SRC_ID_GTMTOM11 1769
#define SRC_ID_GTMTOM12 1770
#define SRC_ID_GTMTOM13 1771
#define SRC_ID_GTMTOM14 1772
#define SRC_ID_GTMTOM15 1773
#define SRC_ID_GTMTOM16 1774
#define SRC_ID_GTMTOM17 1775
#define SRC_ID_GTMTOM20 1776
#define SRC_ID_GTMTOM21 1777
#define SRC_ID_GTMTOM22 1778
#define SRC_ID_GTMTOM23 1779
#define SRC_ID_GTMTOM24 1780
#define SRC_ID_GTMTOM25 1781
#define SRC_ID_GTMTOM26 1782
#define SRC_ID_GTMTOM27 1783

#define SRC_ID_GTMATOM00 1888
#define SRC_ID_GTMATOM01 1889
#define SRC_ID_GTMATOM02 1890
#define SRC_ID_GTMATOM03 1891
#define SRC_ID_GTMATOM10 1892
#define SRC_ID_GTMATOM11 1893
#define SRC_ID_GTMATOM12 1894
#define SRC_ID_GTMATOM13 1895
#define SRC_ID_GTMATOM20 1896
#define SRC_ID_GTMATOM21 1897
#define SRC_ID_GTMATOM22 1898
#define SRC_ID_GTMATOM23 1899
#define SRC_ID_GTMATOM30 1900
#define SRC_ID_GTMATOM31 1901
#define SRC_ID_GTMATOM32 1902
#define SRC_ID_GTMATOM33 1903
#define SRC_ID_GTMATOM40 1904
#define SRC_ID_GTMATOM41 1905
#define SRC_ID_GTMATOM42 1906
#define SRC_ID_GTMATOM43 1907

#define IRQ_ID_MAX_NUM 1908
# 523 "D:\\Workspace\\autoever_osek\\can_based_OSEK_OS_TEST\\bsw\\drivers\\../../bsw/system/interrupts.h"
typedef void (*isrhnd_t)(int arg);
# 532 "D:\\Workspace\\autoever_osek\\can_based_OSEK_OS_TEST\\bsw\\drivers\\../../bsw/system/interrupts.h"
void InterruptInit(void);
# 543 "D:\\Workspace\\autoever_osek\\can_based_OSEK_OS_TEST\\bsw\\drivers\\../../bsw/system/interrupts.h"
void InterruptInstall(int irqNum, isrhnd_t isrProc, int prio, int arg);
# 7 "D:\\Workspace\\autoever_osek\\can_based_OSEK_OS_TEST\\bsw\\drivers\\../../main.h" 2


# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_reg.h" 1 3
# 26 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_reg.h" 3
#define IFX_REG_H 1

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxAsclin_reg.h" 1 3
# 29 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_reg.h" 2 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCbs_reg.h" 1 3
# 34 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCbs_reg.h" 3
#define IFXCBS_REG_H 1

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCbs_regdef.h" 1 3
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCbs_regdef.h" 3
#define IFXCBS_REGDEF_H 1







typedef struct _Ifx_CBS_COMDATA_Bits
{
    unsigned int DATA : 32;
} Ifx_CBS_COMDATA_Bits;


typedef struct _Ifx_CBS_ICTSA_Bits
{
    unsigned int ADDR : 32;
} Ifx_CBS_ICTSA_Bits;


typedef struct _Ifx_CBS_ICTTA_Bits
{
    unsigned int ADDR : 32;
} Ifx_CBS_ICTTA_Bits;


typedef struct _Ifx_CBS_INTMOD_Bits
{
    unsigned int SET_CRS : 1;
    unsigned int SET_CWS : 1;
    unsigned int SET_CS : 1;
    unsigned int CLR_CS : 1;
    unsigned int CHANNEL_P : 1;
    unsigned int CHANNEL : 3;
    unsigned int reserved_8 : 8;
    unsigned int SET_INT_MOD : 1;
    unsigned int reserved_17 : 1;
    unsigned int SET_INT_TRC : 1;
    unsigned int CLR_INT_TRC : 1;
    unsigned int TRC_MOD_P : 1;
    unsigned int TRC_MOD : 2;
    unsigned int reserved_23 : 1;
    unsigned int INT_MOD : 1;
    unsigned int INT_TRC : 1;
    unsigned int reserved_26 : 6;
} Ifx_CBS_INTMOD_Bits;


typedef struct _Ifx_CBS_IOSR_Bits
{
    unsigned int reserved_0 : 4;
    unsigned int CRSYNC : 1;
    unsigned int CWSYNC : 1;
    unsigned int CW_ACK : 1;
    unsigned int COM_SYNC : 1;
    unsigned int HOSTED : 1;
    unsigned int reserved_9 : 3;
    unsigned int CHANNEL : 3;
    unsigned int reserved_15 : 17;
} Ifx_CBS_IOSR_Bits;


typedef struct _Ifx_CBS_JDPID_Bits
{
    unsigned int MOD_REV : 8;
    unsigned int MOD_TYPE : 8;
    unsigned int MODNUMBER : 16;
} Ifx_CBS_JDPID_Bits;


typedef struct _Ifx_CBS_JTAGID_Bits
{
    unsigned int JTAG_ID : 32;
} Ifx_CBS_JTAGID_Bits;


typedef struct _Ifx_CBS_OCNTRL_Bits
{
    unsigned int OC0_P : 1;
    unsigned int OC0 : 1;
    unsigned int OC1_P : 1;
    unsigned int OC1 : 1;
    unsigned int OC2_P : 1;
    unsigned int OC2 : 1;
    unsigned int OC3_P : 1;
    unsigned int OC3 : 1;
    unsigned int OC4_P : 1;
    unsigned int OC4 : 1;
    unsigned int OC5_P : 1;
    unsigned int OC5 : 1;
    unsigned int WDTSUS_P : 1;
    unsigned int WDTSUS : 1;
    unsigned int STABLE_P : 1;
    unsigned int STABLE : 1;
    unsigned int OJC0_P : 1;
    unsigned int OJC0 : 1;
    unsigned int OJC1_P : 1;
    unsigned int OJC1 : 1;
    unsigned int OJC2_P : 1;
    unsigned int OJC2 : 1;
    unsigned int OJC3_P : 1;
    unsigned int OJC3 : 1;
    unsigned int OJC4_P : 1;
    unsigned int OJC4 : 1;
    unsigned int OJC5_P : 1;
    unsigned int OJC5 : 1;
    unsigned int OJC6_P : 1;
    unsigned int OJC6 : 1;
    unsigned int OJC7_P : 1;
    unsigned int OJC7 : 1;
} Ifx_CBS_OCNTRL_Bits;


typedef struct _Ifx_CBS_OEC_Bits
{
    unsigned int PAT : 8;
    unsigned int DS : 1;
    unsigned int OCO : 1;
    unsigned int reserved_10 : 6;
    unsigned int IF_LCK_P : 1;
    unsigned int IF_LCK : 1;
    unsigned int AUT_OK_P : 1;
    unsigned int AUT_OK : 1;
    unsigned int reserved_20 : 12;
} Ifx_CBS_OEC_Bits;


typedef struct _Ifx_CBS_OIFM_Bits
{
    unsigned int DAPMODE : 3;
    unsigned int DAPRST : 1;
    unsigned int reserved_4 : 4;
    unsigned int F_JTAG : 1;
    unsigned int N_JTAG : 1;
    unsigned int reserved_10 : 2;
    unsigned int PADCTL : 4;
    unsigned int reserved_16 : 16;
} Ifx_CBS_OIFM_Bits;


typedef struct _Ifx_CBS_OSTATE_Bits
{
    unsigned int OEN : 1;
    unsigned int OC0 : 1;
    unsigned int OC1 : 1;
    unsigned int OC2 : 1;
    unsigned int ENIDIS : 1;
    unsigned int EECTRC : 1;
    unsigned int EECDIS : 1;
    unsigned int WDTSUS : 1;
    unsigned int HARR : 1;
    unsigned int OJC1 : 1;
    unsigned int OJC2 : 1;
    unsigned int OJC3 : 1;
    unsigned int RSTCL0 : 1;
    unsigned int RSTCL1 : 1;
    unsigned int OJC6 : 1;
    unsigned int RSTCL3 : 1;
    unsigned int IF_LCK : 1;
    unsigned int AUT_OK : 1;
    unsigned int STABLE : 1;
    unsigned int OCO : 1;
    unsigned int reserved_20 : 12;
} Ifx_CBS_OSTATE_Bits;


typedef struct _Ifx_CBS_TCCB_Bits
{
    unsigned int C0 : 1;
    unsigned int C1 : 1;
    unsigned int C2 : 1;
    unsigned int reserved_3 : 28;
    unsigned int HSM : 1;
} Ifx_CBS_TCCB_Bits;


typedef struct _Ifx_CBS_TCCH_Bits
{
    unsigned int C0 : 1;
    unsigned int C1 : 1;
    unsigned int C2 : 1;
    unsigned int reserved_3 : 28;
    unsigned int HSM : 1;
} Ifx_CBS_TCCH_Bits;


typedef struct _Ifx_CBS_TCIP_Bits
{
    unsigned int P0 : 1;
    unsigned int P1 : 1;
    unsigned int P2 : 1;
    unsigned int P3 : 1;
    unsigned int P4 : 1;
    unsigned int P5 : 1;
    unsigned int P6 : 1;
    unsigned int P7 : 1;
    unsigned int reserved_8 : 24;
} Ifx_CBS_TCIP_Bits;


typedef struct _Ifx_CBS_TCM_Bits
{
    unsigned int BRK : 1;
    unsigned int SUS : 1;
    unsigned int reserved_2 : 6;
    unsigned int T0 : 1;
    unsigned int T1 : 1;
    unsigned int T2 : 1;
    unsigned int T3 : 1;
    unsigned int reserved_12 : 20;
} Ifx_CBS_TCM_Bits;


typedef struct _Ifx_CBS_TCTGB_Bits
{
    unsigned int OTGB0 : 16;
    unsigned int OTGB1 : 16;
} Ifx_CBS_TCTGB_Bits;


typedef struct _Ifx_CBS_TCTL_Bits
{
    unsigned int reserved_0 : 1;
    unsigned int TL1 : 1;
    unsigned int TL2 : 1;
    unsigned int TL3 : 1;
    unsigned int TL4 : 1;
    unsigned int TL5 : 1;
    unsigned int TL6 : 1;
    unsigned int TL7 : 1;
    unsigned int reserved_8 : 24;
} Ifx_CBS_TCTL_Bits;


typedef struct _Ifx_CBS_TIPR_Bits
{
    unsigned int PIN0 : 4;
    unsigned int PIN1 : 4;
    unsigned int PIN2 : 4;
    unsigned int PIN3 : 4;
    unsigned int PIN4 : 4;
    unsigned int PIN5 : 4;
    unsigned int PIN6 : 4;
    unsigned int PIN7 : 4;
} Ifx_CBS_TIPR_Bits;


typedef struct _Ifx_CBS_TL1ST_Bits
{
    unsigned int C0 : 1;
    unsigned int C1 : 1;
    unsigned int C2 : 1;
    unsigned int reserved_3 : 25;
    unsigned int HSS : 1;
    unsigned int DMA : 1;
    unsigned int reserved_30 : 1;
    unsigned int HSM : 1;
} Ifx_CBS_TL1ST_Bits;


typedef struct _Ifx_CBS_TLC_Bits
{
    unsigned int reserved_0 : 4;
    unsigned int TLSP1 : 4;
    unsigned int TLSP2 : 4;
    unsigned int TLSP3 : 4;
    unsigned int TLSP4 : 4;
    unsigned int TLSP5 : 4;
    unsigned int TLSP6 : 4;
    unsigned int TLSP7 : 4;
} Ifx_CBS_TLC_Bits;


typedef struct _Ifx_CBS_TLCC_Bits
{
    unsigned int TGL : 4;
    unsigned int LE : 3;
    unsigned int reserved_7 : 1;
    unsigned int CLR : 2;
    unsigned int reserved_10 : 2;
    unsigned int STOP : 2;
    unsigned int reserved_14 : 18;
} Ifx_CBS_TLCC_Bits;


typedef struct _Ifx_CBS_TLCHE_Bits
{
    unsigned int reserved_0 : 1;
    unsigned int TL1 : 1;
    unsigned int TL2 : 1;
    unsigned int TL3 : 1;
    unsigned int reserved_4 : 28;
} Ifx_CBS_TLCHE_Bits;


typedef struct _Ifx_CBS_TLCHS_Bits
{
    unsigned int reserved_0 : 1;
    unsigned int TL1 : 1;
    unsigned int TL2 : 1;
    unsigned int TL3 : 1;
    unsigned int reserved_4 : 28;
} Ifx_CBS_TLCHS_Bits;


typedef struct _Ifx_CBS_TLCV_Bits
{
    unsigned int CV : 31;
    unsigned int SO : 1;
} Ifx_CBS_TLCV_Bits;


typedef struct _Ifx_CBS_TLS_Bits
{
    unsigned int reserved_0 : 1;
    unsigned int TL1 : 1;
    unsigned int TL2 : 1;
    unsigned int TL3 : 1;
    unsigned int TL4 : 1;
    unsigned int TL5 : 1;
    unsigned int TL6 : 1;
    unsigned int TL7 : 1;
    unsigned int reserved_8 : 24;
} Ifx_CBS_TLS_Bits;


typedef struct _Ifx_CBS_TLT_Bits
{
    unsigned int TGL : 4;
    unsigned int VTZ : 1;
    unsigned int reserved_5 : 11;
    unsigned int TIM : 16;
} Ifx_CBS_TLT_Bits;


typedef struct _Ifx_CBS_TLTTH_Bits
{
    unsigned int reserved_0 : 2;
    unsigned int TL1 : 2;
    unsigned int TL2 : 2;
    unsigned int TL3 : 2;
    unsigned int TL4 : 2;
    unsigned int TL5 : 2;
    unsigned int TL6 : 2;
    unsigned int TL7 : 2;
    unsigned int reserved_16 : 16;
} Ifx_CBS_TLTTH_Bits;


typedef struct _Ifx_CBS_TOPPS_Bits
{
    unsigned int PIN0 : 2;
    unsigned int PIN1 : 2;
    unsigned int PIN2 : 2;
    unsigned int PIN3 : 2;
    unsigned int PIN4 : 2;
    unsigned int PIN5 : 2;
    unsigned int PIN6 : 2;
    unsigned int PIN7 : 2;
    unsigned int reserved_16 : 16;
} Ifx_CBS_TOPPS_Bits;


typedef struct _Ifx_CBS_TOPR_Bits
{
    unsigned int PIN0 : 4;
    unsigned int PIN1 : 4;
    unsigned int PIN2 : 4;
    unsigned int PIN3 : 4;
    unsigned int PIN4 : 4;
    unsigned int PIN5 : 4;
    unsigned int PIN6 : 4;
    unsigned int PIN7 : 4;
} Ifx_CBS_TOPR_Bits;


typedef struct _Ifx_CBS_TRC_Bits
{
    unsigned int HALT : 4;
    unsigned int BRKOUT : 4;
    unsigned int BT1 : 1;
    unsigned int reserved_9 : 11;
    unsigned int BRKIN : 4;
    unsigned int SUSIN : 4;
    unsigned int reserved_28 : 4;
} Ifx_CBS_TRC_Bits;


typedef struct _Ifx_CBS_TREC_Bits
{
    unsigned int TR0EV : 4;
    unsigned int reserved_4 : 4;
    unsigned int TR2EV : 4;
    unsigned int reserved_12 : 4;
    unsigned int TR4EV : 4;
    unsigned int reserved_20 : 4;
    unsigned int TR6EV : 4;
    unsigned int reserved_28 : 4;
} Ifx_CBS_TREC_Bits;


typedef struct _Ifx_CBS_TRHSM_Bits
{
    unsigned int HALT : 4;
    unsigned int BRKOUT : 4;
    unsigned int BT1 : 1;
    unsigned int reserved_9 : 11;
    unsigned int BRKIN : 4;
    unsigned int SUSIN : 4;
    unsigned int reserved_28 : 4;
} Ifx_CBS_TRHSM_Bits;


typedef struct _Ifx_CBS_TRIG_Bits
{
    unsigned int TRGx_0 : 1;
    unsigned int TRGx_1 : 1;
    unsigned int TRGx_2 : 1;
    unsigned int TRGx_3 : 1;
    unsigned int TRGx_4 : 1;
    unsigned int TRGx_5 : 1;
    unsigned int TRGx_6 : 1;
    unsigned int TRGx_7 : 1;
    unsigned int TRGx_8 : 1;
    unsigned int TRGx_9 : 1;
    unsigned int TRGx_10 : 1;
    unsigned int TRGx_11 : 1;
    unsigned int TRGx_12 : 1;
    unsigned int TRGx_13 : 1;
    unsigned int TRGx_14 : 1;
    unsigned int TRGx_15 : 1;
    unsigned int TRGx_16 : 1;
    unsigned int TRGx_17 : 1;
    unsigned int TRGx_18 : 1;
    unsigned int TRGx_19 : 1;
    unsigned int TRGx_20 : 1;
    unsigned int TRGx_21 : 1;
    unsigned int TRGx_22 : 1;
    unsigned int TRGx_23 : 1;
    unsigned int x : 8;
} Ifx_CBS_TRIG_Bits;


typedef struct _Ifx_CBS_TRIGC_Bits
{
    unsigned int TRGx_0 : 1;
    unsigned int TRGx_1 : 1;
    unsigned int TRGx_2 : 1;
    unsigned int TRGx_3 : 1;
    unsigned int TRGx_4 : 1;
    unsigned int TRGx_5 : 1;
    unsigned int TRGx_6 : 1;
    unsigned int TRGx_7 : 1;
    unsigned int TRGx_8 : 1;
    unsigned int TRGx_9 : 1;
    unsigned int TRGx_10 : 1;
    unsigned int TRGx_11 : 1;
    unsigned int TRGx_12 : 1;
    unsigned int TRGx_13 : 1;
    unsigned int TRGx_14 : 1;
    unsigned int TRGx_15 : 1;
    unsigned int TRGx_16 : 1;
    unsigned int TRGx_17 : 1;
    unsigned int TRGx_18 : 1;
    unsigned int TRGx_19 : 1;
    unsigned int TRGx_20 : 1;
    unsigned int TRGx_21 : 1;
    unsigned int TRGx_22 : 1;
    unsigned int TRGx_23 : 1;
    unsigned int x : 8;
} Ifx_CBS_TRIGC_Bits;


typedef struct _Ifx_CBS_TRIGS_Bits
{
    unsigned int BITNUM : 13;
    unsigned int reserved_13 : 19;
} Ifx_CBS_TRIGS_Bits;


typedef struct _Ifx_CBS_TRMC_Bits
{
    unsigned int reserved_0 : 4;
    unsigned int BRKOUT : 4;
    unsigned int SUSOUT : 4;
    unsigned int reserved_12 : 8;
    unsigned int BRKIN : 4;
    unsigned int reserved_24 : 8;
} Ifx_CBS_TRMC_Bits;


typedef struct _Ifx_CBS_TRMT_Bits
{
    unsigned int TG0 : 4;
    unsigned int TG1 : 4;
    unsigned int TG2 : 4;
    unsigned int TG3 : 4;
    unsigned int reserved_16 : 16;
} Ifx_CBS_TRMT_Bits;


typedef struct _Ifx_CBS_TRSS_Bits
{
    unsigned int TT : 4;
    unsigned int reserved_4 : 12;
    unsigned int SRC0 : 4;
    unsigned int SRC1 : 4;
    unsigned int reserved_24 : 8;
} Ifx_CBS_TRSS_Bits;


typedef struct _Ifx_CBS_TRTGB_H_Bits
{
    unsigned int TG8 : 4;
    unsigned int TG9 : 4;
    unsigned int TG10 : 4;
    unsigned int TG11 : 4;
    unsigned int TG12 : 4;
    unsigned int TG13 : 4;
    unsigned int TG14 : 4;
    unsigned int TG15 : 4;
} Ifx_CBS_TRTGB_H_Bits;


typedef struct _Ifx_CBS_TRTGB_L_Bits
{
    unsigned int TG0 : 4;
    unsigned int TG1 : 4;
    unsigned int TG2 : 4;
    unsigned int TG3 : 4;
    unsigned int TG4 : 4;
    unsigned int TG5 : 4;
    unsigned int TG6 : 4;
    unsigned int TG7 : 4;
} Ifx_CBS_TRTGB_L_Bits;







typedef union
{

    unsigned int U;

    signed int I;

    Ifx_CBS_COMDATA_Bits B;
} Ifx_CBS_COMDATA;


typedef union
{

    unsigned int U;

    signed int I;

    Ifx_CBS_ICTSA_Bits B;
} Ifx_CBS_ICTSA;


typedef union
{

    unsigned int U;

    signed int I;

    Ifx_CBS_ICTTA_Bits B;
} Ifx_CBS_ICTTA;


typedef union
{

    unsigned int U;

    signed int I;

    Ifx_CBS_INTMOD_Bits B;
} Ifx_CBS_INTMOD;


typedef union
{

    unsigned int U;

    signed int I;

    Ifx_CBS_IOSR_Bits B;
} Ifx_CBS_IOSR;


typedef union
{

    unsigned int U;

    signed int I;

    Ifx_CBS_JDPID_Bits B;
} Ifx_CBS_JDPID;


typedef union
{

    unsigned int U;

    signed int I;

    Ifx_CBS_JTAGID_Bits B;
} Ifx_CBS_JTAGID;


typedef union
{

    unsigned int U;

    signed int I;

    Ifx_CBS_OCNTRL_Bits B;
} Ifx_CBS_OCNTRL;


typedef union
{

    unsigned int U;

    signed int I;

    Ifx_CBS_OEC_Bits B;
} Ifx_CBS_OEC;


typedef union
{

    unsigned int U;

    signed int I;

    Ifx_CBS_OIFM_Bits B;
} Ifx_CBS_OIFM;


typedef union
{

    unsigned int U;

    signed int I;

    Ifx_CBS_OSTATE_Bits B;
} Ifx_CBS_OSTATE;


typedef union
{

    unsigned int U;

    signed int I;

    Ifx_CBS_TCCB_Bits B;
} Ifx_CBS_TCCB;


typedef union
{

    unsigned int U;

    signed int I;

    Ifx_CBS_TCCH_Bits B;
} Ifx_CBS_TCCH;


typedef union
{

    unsigned int U;

    signed int I;

    Ifx_CBS_TCIP_Bits B;
} Ifx_CBS_TCIP;


typedef union
{

    unsigned int U;

    signed int I;

    Ifx_CBS_TCM_Bits B;
} Ifx_CBS_TCM;


typedef union
{

    unsigned int U;

    signed int I;

    Ifx_CBS_TCTGB_Bits B;
} Ifx_CBS_TCTGB;


typedef union
{

    unsigned int U;

    signed int I;

    Ifx_CBS_TCTL_Bits B;
} Ifx_CBS_TCTL;


typedef union
{

    unsigned int U;

    signed int I;

    Ifx_CBS_TIPR_Bits B;
} Ifx_CBS_TIPR;


typedef union
{

    unsigned int U;

    signed int I;

    Ifx_CBS_TL1ST_Bits B;
} Ifx_CBS_TL1ST;


typedef union
{

    unsigned int U;

    signed int I;

    Ifx_CBS_TLC_Bits B;
} Ifx_CBS_TLC;


typedef union
{

    unsigned int U;

    signed int I;

    Ifx_CBS_TLCC_Bits B;
} Ifx_CBS_TLCC;


typedef union
{

    unsigned int U;

    signed int I;

    Ifx_CBS_TLCHE_Bits B;
} Ifx_CBS_TLCHE;


typedef union
{

    unsigned int U;

    signed int I;

    Ifx_CBS_TLCHS_Bits B;
} Ifx_CBS_TLCHS;


typedef union
{

    unsigned int U;

    signed int I;

    Ifx_CBS_TLCV_Bits B;
} Ifx_CBS_TLCV;


typedef union
{

    unsigned int U;

    signed int I;

    Ifx_CBS_TLS_Bits B;
} Ifx_CBS_TLS;


typedef union
{

    unsigned int U;

    signed int I;

    Ifx_CBS_TLT_Bits B;
} Ifx_CBS_TLT;


typedef union
{

    unsigned int U;

    signed int I;

    Ifx_CBS_TLTTH_Bits B;
} Ifx_CBS_TLTTH;


typedef union
{

    unsigned int U;

    signed int I;

    Ifx_CBS_TOPPS_Bits B;
} Ifx_CBS_TOPPS;


typedef union
{

    unsigned int U;

    signed int I;

    Ifx_CBS_TOPR_Bits B;
} Ifx_CBS_TOPR;


typedef union
{

    unsigned int U;

    signed int I;

    Ifx_CBS_TRC_Bits B;
} Ifx_CBS_TRC;


typedef union
{

    unsigned int U;

    signed int I;

    Ifx_CBS_TREC_Bits B;
} Ifx_CBS_TREC;


typedef union
{

    unsigned int U;

    signed int I;

    Ifx_CBS_TRHSM_Bits B;
} Ifx_CBS_TRHSM;


typedef union
{

    unsigned int U;

    signed int I;

    Ifx_CBS_TRIG_Bits B;
} Ifx_CBS_TRIG;


typedef union
{

    unsigned int U;

    signed int I;

    Ifx_CBS_TRIGC_Bits B;
} Ifx_CBS_TRIGC;


typedef union
{

    unsigned int U;

    signed int I;

    Ifx_CBS_TRIGS_Bits B;
} Ifx_CBS_TRIGS;


typedef union
{

    unsigned int U;

    signed int I;

    Ifx_CBS_TRMC_Bits B;
} Ifx_CBS_TRMC;


typedef union
{

    unsigned int U;

    signed int I;

    Ifx_CBS_TRMT_Bits B;
} Ifx_CBS_TRMT;


typedef union
{

    unsigned int U;

    signed int I;

    Ifx_CBS_TRSS_Bits B;
} Ifx_CBS_TRSS;


typedef union
{

    unsigned int U;

    signed int I;

    Ifx_CBS_TRTGB_H_Bits B;
} Ifx_CBS_TRTGB_H;


typedef union
{

    unsigned int U;

    signed int I;

    Ifx_CBS_TRTGB_L_Bits B;
} Ifx_CBS_TRTGB_L;
# 1027 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCbs_regdef.h" 3
typedef volatile struct _Ifx_CBS_TRTGB
{
    Ifx_CBS_TRTGB_L L;
    Ifx_CBS_TRTGB_H H;
} Ifx_CBS_TRTGB;
# 1044 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCbs_regdef.h" 3
typedef volatile struct _Ifx_CBS
{
    unsigned char reserved_0[8];
    Ifx_CBS_JDPID JDPID;
    Ifx_CBS_OIFM OIFM;
    Ifx_CBS_TIPR TIPR;
    Ifx_CBS_TOPR TOPR;
    Ifx_CBS_TOPPS TOPPS;
    Ifx_CBS_TCIP TCIP;
    Ifx_CBS_TRC TRC[3];
    unsigned char reserved_2C[12];
    Ifx_CBS_TRHSM TRHSM;
    Ifx_CBS_TRMC TRMC;
    Ifx_CBS_TLCC TLCC[2];
    unsigned char reserved_48[8];
    Ifx_CBS_TLCV TLCV[2];
    unsigned char reserved_58[8];
    Ifx_CBS_TRSS TRSS;
    Ifx_CBS_JTAGID JTAGID;
    Ifx_CBS_COMDATA COMDATA;
    Ifx_CBS_IOSR IOSR;
    Ifx_CBS_TLS TLS;
    Ifx_CBS_TCTL TCTL;
    Ifx_CBS_OEC OEC;
    Ifx_CBS_OCNTRL OCNTRL;
    Ifx_CBS_OSTATE OSTATE;
    Ifx_CBS_INTMOD INTMOD;
    Ifx_CBS_ICTSA ICTSA;
    Ifx_CBS_ICTTA ICTTA;
    Ifx_CBS_TLC TLC;
    Ifx_CBS_TL1ST TL1ST;
    Ifx_CBS_TLCHE TLCHE;
    Ifx_CBS_TLCHS TLCHS;
    Ifx_CBS_TRIGS TRIGS;
    Ifx_CBS_TRIGC TRIGC;
    Ifx_CBS_TLT TLT;
    Ifx_CBS_TLTTH TLTTH;
    Ifx_CBS_TCCB TCCB;
    Ifx_CBS_TCCH TCCH;
    Ifx_CBS_TCTGB TCTGB;
    Ifx_CBS_TCM TCM;
    Ifx_CBS_TREC TREC[3];
    unsigned char reserved_CC[16];
    Ifx_CBS_TRMT TRMT;
    Ifx_CBS_TRTGB TRTGB[2];
    unsigned char reserved_F0[16];
    Ifx_CBS_TRIG TRIG[22];
    unsigned char reserved_158[168];
} Ifx_CBS;
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCbs_reg.h" 2 3





#define MODULE_CBS ((*(Ifx_CBS *)0xF0000400u))







#define CBS_COMDATA (*(volatile Ifx_CBS_COMDATA *)0xF0000468u)


#define CBS_ICTSA (*(volatile Ifx_CBS_ICTSA *)0xF0000488u)


#define CBS_ICTTA (*(volatile Ifx_CBS_ICTTA *)0xF000048Cu)


#define CBS_INTMOD (*(volatile Ifx_CBS_INTMOD *)0xF0000484u)


#define CBS_IOSR (*(volatile Ifx_CBS_IOSR *)0xF000046Cu)


#define CBS_JDPID (*(volatile Ifx_CBS_JDPID *)0xF0000408u)


#define CBS_JTAGID (*(volatile Ifx_CBS_JTAGID *)0xF0000464u)


#define CBS_OCNTRL (*(volatile Ifx_CBS_OCNTRL *)0xF000047Cu)


#define CBS_OEC (*(volatile Ifx_CBS_OEC *)0xF0000478u)


#define CBS_OIFM (*(volatile Ifx_CBS_OIFM *)0xF000040Cu)


#define CBS_OSTATE (*(volatile Ifx_CBS_OSTATE *)0xF0000480u)


#define CBS_TCCB (*(volatile Ifx_CBS_TCCB *)0xF00004B0u)


#define CBS_TCCH (*(volatile Ifx_CBS_TCCH *)0xF00004B4u)


#define CBS_TCIP (*(volatile Ifx_CBS_TCIP *)0xF000041Cu)


#define CBS_TCM (*(volatile Ifx_CBS_TCM *)0xF00004BCu)


#define CBS_TCTGB (*(volatile Ifx_CBS_TCTGB *)0xF00004B8u)


#define CBS_TCTL (*(volatile Ifx_CBS_TCTL *)0xF0000474u)


#define CBS_TIPR (*(volatile Ifx_CBS_TIPR *)0xF0000410u)


#define CBS_TL1ST (*(volatile Ifx_CBS_TL1ST *)0xF0000494u)


#define CBS_TLC (*(volatile Ifx_CBS_TLC *)0xF0000490u)


#define CBS_TLCC0 (*(volatile Ifx_CBS_TLCC *)0xF0000440u)


#define CBS_TLCC1 (*(volatile Ifx_CBS_TLCC *)0xF0000444u)


#define CBS_TLCHE (*(volatile Ifx_CBS_TLCHE *)0xF0000498u)


#define CBS_TLCHS (*(volatile Ifx_CBS_TLCHS *)0xF000049Cu)


#define CBS_TLCV0 (*(volatile Ifx_CBS_TLCV *)0xF0000450u)


#define CBS_TLCV1 (*(volatile Ifx_CBS_TLCV *)0xF0000454u)


#define CBS_TLS (*(volatile Ifx_CBS_TLS *)0xF0000470u)


#define CBS_TLT (*(volatile Ifx_CBS_TLT *)0xF00004A8u)


#define CBS_TLTTH (*(volatile Ifx_CBS_TLTTH *)0xF00004ACu)


#define CBS_TOPPS (*(volatile Ifx_CBS_TOPPS *)0xF0000418u)


#define CBS_TOPR (*(volatile Ifx_CBS_TOPR *)0xF0000414u)


#define CBS_TRC0 (*(volatile Ifx_CBS_TRC *)0xF0000420u)


#define CBS_TRC1 (*(volatile Ifx_CBS_TRC *)0xF0000424u)


#define CBS_TRC2 (*(volatile Ifx_CBS_TRC *)0xF0000428u)


#define CBS_TREC0 (*(volatile Ifx_CBS_TREC *)0xF00004C0u)


#define CBS_TREC1 (*(volatile Ifx_CBS_TREC *)0xF00004C4u)


#define CBS_TREC2 (*(volatile Ifx_CBS_TREC *)0xF00004C8u)


#define CBS_TRHSM (*(volatile Ifx_CBS_TRHSM *)0xF0000438u)


#define CBS_TRIG0 (*(volatile Ifx_CBS_TRIG *)0xF0000500u)


#define CBS_TRIG1 (*(volatile Ifx_CBS_TRIG *)0xF0000504u)


#define CBS_TRIG10 (*(volatile Ifx_CBS_TRIG *)0xF0000528u)


#define CBS_TRIG11 (*(volatile Ifx_CBS_TRIG *)0xF000052Cu)


#define CBS_TRIG12 (*(volatile Ifx_CBS_TRIG *)0xF0000530u)


#define CBS_TRIG13 (*(volatile Ifx_CBS_TRIG *)0xF0000534u)


#define CBS_TRIG14 (*(volatile Ifx_CBS_TRIG *)0xF0000538u)


#define CBS_TRIG15 (*(volatile Ifx_CBS_TRIG *)0xF000053Cu)


#define CBS_TRIG16 (*(volatile Ifx_CBS_TRIG *)0xF0000540u)


#define CBS_TRIG17 (*(volatile Ifx_CBS_TRIG *)0xF0000544u)


#define CBS_TRIG18 (*(volatile Ifx_CBS_TRIG *)0xF0000548u)


#define CBS_TRIG19 (*(volatile Ifx_CBS_TRIG *)0xF000054Cu)


#define CBS_TRIG2 (*(volatile Ifx_CBS_TRIG *)0xF0000508u)


#define CBS_TRIG20 (*(volatile Ifx_CBS_TRIG *)0xF0000550u)


#define CBS_TRIG21 (*(volatile Ifx_CBS_TRIG *)0xF0000554u)


#define CBS_TRIG3 (*(volatile Ifx_CBS_TRIG *)0xF000050Cu)


#define CBS_TRIG4 (*(volatile Ifx_CBS_TRIG *)0xF0000510u)


#define CBS_TRIG5 (*(volatile Ifx_CBS_TRIG *)0xF0000514u)


#define CBS_TRIG6 (*(volatile Ifx_CBS_TRIG *)0xF0000518u)


#define CBS_TRIG7 (*(volatile Ifx_CBS_TRIG *)0xF000051Cu)


#define CBS_TRIG8 (*(volatile Ifx_CBS_TRIG *)0xF0000520u)


#define CBS_TRIG9 (*(volatile Ifx_CBS_TRIG *)0xF0000524u)


#define CBS_TRIGC (*(volatile Ifx_CBS_TRIGC *)0xF00004A4u)


#define CBS_TRIGS (*(volatile Ifx_CBS_TRIGS *)0xF00004A0u)


#define CBS_TRMC (*(volatile Ifx_CBS_TRMC *)0xF000043Cu)


#define CBS_TRMT (*(volatile Ifx_CBS_TRMT *)0xF00004DCu)


#define CBS_TRSS (*(volatile Ifx_CBS_TRSS *)0xF0000460u)


#define CBS_TRTGB0_H (*(volatile Ifx_CBS_TRTGB_H *)0xF00004E4u)




#define CBS_TRTGB0H (CBS_TRTGB0_H)


#define CBS_TRTGB0_L (*(volatile Ifx_CBS_TRTGB_L *)0xF00004E0u)




#define CBS_TRTGB0L (CBS_TRTGB0_L)


#define CBS_TRTGB1_H (*(volatile Ifx_CBS_TRTGB_H *)0xF00004ECu)




#define CBS_TRTGB1H (CBS_TRTGB1_H)


#define CBS_TRTGB1_L (*(volatile Ifx_CBS_TRTGB_L *)0xF00004E8u)




#define CBS_TRTGB1L (CBS_TRTGB1_L)
# 30 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_reg.h" 2 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCan_reg.h" 1 3
# 34 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCan_reg.h" 3
#define IFXCAN_REG_H 1

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCan_regdef.h" 1 3
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCan_regdef.h" 3
#define IFXCAN_REGDEF_H 1
# 49 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCan_regdef.h" 3
typedef struct _Ifx_CAN_ACCEN0_Bits
{
    unsigned int EN0:1;
    unsigned int EN1:1;
    unsigned int EN2:1;
    unsigned int EN3:1;
    unsigned int EN4:1;
    unsigned int EN5:1;
    unsigned int EN6:1;
    unsigned int EN7:1;
    unsigned int EN8:1;
    unsigned int EN9:1;
    unsigned int EN10:1;
    unsigned int EN11:1;
    unsigned int EN12:1;
    unsigned int EN13:1;
    unsigned int EN14:1;
    unsigned int EN15:1;
    unsigned int EN16:1;
    unsigned int EN17:1;
    unsigned int EN18:1;
    unsigned int EN19:1;
    unsigned int EN20:1;
    unsigned int EN21:1;
    unsigned int EN22:1;
    unsigned int EN23:1;
    unsigned int EN24:1;
    unsigned int EN25:1;
    unsigned int EN26:1;
    unsigned int EN27:1;
    unsigned int EN28:1;
    unsigned int EN29:1;
    unsigned int EN30:1;
    unsigned int EN31:1;
} Ifx_CAN_ACCEN0_Bits;


typedef struct _Ifx_CAN_ACCEN1_Bits
{
    unsigned int reserved_0:32;
} Ifx_CAN_ACCEN1_Bits;


typedef struct _Ifx_CAN_CLC_Bits
{
    unsigned int DISR:1;
    unsigned int DISS:1;
    unsigned int reserved_2:1;
    unsigned int EDIS:1;
    unsigned int reserved_4:28;
} Ifx_CAN_CLC_Bits;


typedef struct _Ifx_CAN_FDR_Bits
{
    unsigned int STEP:10;
    unsigned int reserved_10:4;
    unsigned int DM:2;
    unsigned int reserved_16:16;
} Ifx_CAN_FDR_Bits;


typedef struct _Ifx_CAN_ID_Bits
{
    unsigned int MOD_REV:8;
    unsigned int MOD_TYPE:8;
    unsigned int MODNUMBER:16;
} Ifx_CAN_ID_Bits;


typedef struct _Ifx_CAN_KRST0_Bits
{
    unsigned int RST:1;
    unsigned int RSTSTAT:1;
    unsigned int reserved_2:30;
} Ifx_CAN_KRST0_Bits;


typedef struct _Ifx_CAN_KRST1_Bits
{
    unsigned int RST:1;
    unsigned int reserved_1:31;
} Ifx_CAN_KRST1_Bits;


typedef struct _Ifx_CAN_KRSTCLR_Bits
{
    unsigned int CLR:1;
    unsigned int reserved_1:31;
} Ifx_CAN_KRSTCLR_Bits;


typedef struct _Ifx_CAN_LIST_Bits
{
    unsigned int BEGIN:8;
    unsigned int END:8;
    unsigned int SIZE:8;
    unsigned int EMPTY:1;
    unsigned int reserved_25:7;
} Ifx_CAN_LIST_Bits;


typedef struct _Ifx_CAN_MCR_Bits
{
    unsigned int CLKSEL:4;
    unsigned int reserved_4:8;
    unsigned int MPSEL:4;
    unsigned int reserved_16:16;
} Ifx_CAN_MCR_Bits;


typedef struct _Ifx_CAN_MECR_Bits
{
    unsigned int TH:16;
    unsigned int INP:4;
    unsigned int NODE:3;
    unsigned int reserved_23:1;
    unsigned int ANYED:1;
    unsigned int CAPEIE:1;
    unsigned int reserved_26:1;
    unsigned int DEPTH:3;
    unsigned int SOF:1;
    unsigned int reserved_31:1;
} Ifx_CAN_MECR_Bits;


typedef struct _Ifx_CAN_MESTAT_Bits
{
    unsigned int CAPT:16;
    unsigned int CAPRED:1;
    unsigned int CAPE:1;
    unsigned int reserved_18:14;
} Ifx_CAN_MESTAT_Bits;


typedef struct _Ifx_CAN_MITR_Bits
{
    unsigned int IT:16;
    unsigned int reserved_16:16;
} Ifx_CAN_MITR_Bits;


typedef struct _Ifx_CAN_MO_AMR_Bits
{
    unsigned int AM:29;
    unsigned int MIDE:1;
    unsigned int reserved_30:2;
} Ifx_CAN_MO_AMR_Bits;


typedef struct _Ifx_CAN_MO_AR_Bits
{
    unsigned int ID:29;
    unsigned int IDE:1;
    unsigned int PRI:2;
} Ifx_CAN_MO_AR_Bits;


typedef struct _Ifx_CAN_MO_CTR_Bits
{
    unsigned int RESRXPND:1;
    unsigned int RESTXPND:1;
    unsigned int RESRXUPD:1;
    unsigned int RESNEWDAT:1;
    unsigned int RESMSGLST:1;
    unsigned int RESMSGVAL:1;
    unsigned int RESRTSEL:1;
    unsigned int RESRXEN:1;
    unsigned int RESTXRQ:1;
    unsigned int RESTXEN0:1;
    unsigned int RESTXEN1:1;
    unsigned int RESDIR:1;
    unsigned int reserved_12:4;
    unsigned int SETRXPND:1;
    unsigned int SETTXPND:1;
    unsigned int SETRXUPD:1;
    unsigned int SETNEWDAT:1;
    unsigned int SETMSGLST:1;
    unsigned int SETMSGVAL:1;
    unsigned int SETRTSEL:1;
    unsigned int SETRXEN:1;
    unsigned int SETTXRQ:1;
    unsigned int SETTXEN0:1;
    unsigned int SETTXEN1:1;
    unsigned int SETDIR:1;
    unsigned int reserved_28:4;
} Ifx_CAN_MO_CTR_Bits;


typedef struct _Ifx_CAN_MO_DATAH_Bits
{
    unsigned int DB4:8;
    unsigned int DB5:8;
    unsigned int DB6:8;
    unsigned int DB7:8;
} Ifx_CAN_MO_DATAH_Bits;


typedef struct _Ifx_CAN_MO_DATAL_Bits
{
    unsigned int DB0:8;
    unsigned int DB1:8;
    unsigned int DB2:8;
    unsigned int DB3:8;
} Ifx_CAN_MO_DATAL_Bits;


typedef struct _Ifx_CAN_MO_EDATA0_Bits
{
    unsigned int DB0:8;
    unsigned int DB1:8;
    unsigned int DB2:8;
    unsigned int DB3:8;
} Ifx_CAN_MO_EDATA0_Bits;


typedef struct _Ifx_CAN_MO_EDATA1_Bits
{
    unsigned int DB0:8;
    unsigned int DB1:8;
    unsigned int DB2:8;
    unsigned int DB3:8;
} Ifx_CAN_MO_EDATA1_Bits;


typedef struct _Ifx_CAN_MO_EDATA2_Bits
{
    unsigned int DB0:8;
    unsigned int DB1:8;
    unsigned int DB2:8;
    unsigned int DB3:8;
} Ifx_CAN_MO_EDATA2_Bits;


typedef struct _Ifx_CAN_MO_EDATA3_Bits
{
    unsigned int DB0:8;
    unsigned int DB1:8;
    unsigned int DB2:8;
    unsigned int DB3:8;
} Ifx_CAN_MO_EDATA3_Bits;


typedef struct _Ifx_CAN_MO_EDATA4_Bits
{
    unsigned int DB0:8;
    unsigned int DB1:8;
    unsigned int DB2:8;
    unsigned int DB3:8;
} Ifx_CAN_MO_EDATA4_Bits;


typedef struct _Ifx_CAN_MO_EDATA5_Bits
{
    unsigned int DB0:8;
    unsigned int DB1:8;
    unsigned int DB2:8;
    unsigned int DB3:8;
} Ifx_CAN_MO_EDATA5_Bits;


typedef struct _Ifx_CAN_MO_EDATA6_Bits
{
    unsigned int DB0:8;
    unsigned int DB1:8;
    unsigned int DB2:8;
    unsigned int DB3:8;
} Ifx_CAN_MO_EDATA6_Bits;


typedef struct _Ifx_CAN_MO_FCR_Bits
{
    unsigned int MMC:4;
    unsigned int RXTOE:1;
    unsigned int BRS:1;
    unsigned int FDF:1;
    unsigned int reserved_7:1;
    unsigned int GDFS:1;
    unsigned int IDC:1;
    unsigned int DLCC:1;
    unsigned int DATC:1;
    unsigned int reserved_12:4;
    unsigned int RXIE:1;
    unsigned int TXIE:1;
    unsigned int OVIE:1;
    unsigned int reserved_19:1;
    unsigned int FRREN:1;
    unsigned int RMM:1;
    unsigned int SDT:1;
    unsigned int STT:1;
    unsigned int DLC:4;
    unsigned int reserved_28:4;
} Ifx_CAN_MO_FCR_Bits;


typedef struct _Ifx_CAN_MO_FGPR_Bits
{
    unsigned int BOT:8;
    unsigned int TOP:8;
    unsigned int CUR:8;
    unsigned int SEL:8;
} Ifx_CAN_MO_FGPR_Bits;


typedef struct _Ifx_CAN_MO_IPR_Bits
{
    unsigned int RXINP:4;
    unsigned int TXINP:4;
    unsigned int MPN:8;
    unsigned int CFCVAL:16;
} Ifx_CAN_MO_IPR_Bits;


typedef struct _Ifx_CAN_MO_STAT_Bits
{
    unsigned int RXPND:1;
    unsigned int TXPND:1;
    unsigned int RXUPD:1;
    unsigned int NEWDAT:1;
    unsigned int MSGLST:1;
    unsigned int MSGVAL:1;
    unsigned int RTSEL:1;
    unsigned int RXEN:1;
    unsigned int TXRQ:1;
    unsigned int TXEN0:1;
    unsigned int TXEN1:1;
    unsigned int DIR:1;
    unsigned int LIST:4;
    unsigned int PPREV:8;
    unsigned int PNEXT:8;
} Ifx_CAN_MO_STAT_Bits;


typedef struct _Ifx_CAN_MSID_Bits
{
    unsigned int INDEX:6;
    unsigned int reserved_6:26;
} Ifx_CAN_MSID_Bits;


typedef struct _Ifx_CAN_MSIMASK_Bits
{
    unsigned int IM:32;
} Ifx_CAN_MSIMASK_Bits;


typedef struct _Ifx_CAN_MSPND_Bits
{
    unsigned int PND:32;
} Ifx_CAN_MSPND_Bits;


typedef struct _Ifx_CAN_N_BTEVR_Bits
{
    unsigned int BRP:6;
    unsigned int reserved_6:2;
    unsigned int SJW:4;
    unsigned int reserved_12:3;
    unsigned int DIV8:1;
    unsigned int TSEG2:5;
    unsigned int reserved_21:1;
    unsigned int TSEG1:6;
    unsigned int reserved_28:4;
} Ifx_CAN_N_BTEVR_Bits;


typedef struct _Ifx_CAN_N_BTR_Bits
{
    unsigned int BRP:6;
    unsigned int SJW:2;
    unsigned int TSEG1:4;
    unsigned int TSEG2:3;
    unsigned int DIV8:1;
    unsigned int reserved_16:16;
} Ifx_CAN_N_BTR_Bits;


typedef struct _Ifx_CAN_N_CR_Bits
{
    unsigned int INIT:1;
    unsigned int TRIE:1;
    unsigned int LECIE:1;
    unsigned int ALIE:1;
    unsigned int CANDIS:1;
    unsigned int TXDIS:1;
    unsigned int CCE:1;
    unsigned int CALM:1;
    unsigned int SUSEN:1;
    unsigned int FDEN:1;
    unsigned int reserved_10:22;
} Ifx_CAN_N_CR_Bits;


typedef struct _Ifx_CAN_N_ECNT_Bits
{
    unsigned int REC:8;
    unsigned int TEC:8;
    unsigned int EWRNLVL:8;
    unsigned int LETD:1;
    unsigned int LEINC:1;
    unsigned int reserved_26:6;
} Ifx_CAN_N_ECNT_Bits;


typedef struct _Ifx_CAN_N_FBTR_Bits
{
    unsigned int FBRP:6;
    unsigned int FSJW:2;
    unsigned int FTSEG1:4;
    unsigned int FTSEG2:3;
    unsigned int reserved_15:17;
} Ifx_CAN_N_FBTR_Bits;


typedef struct _Ifx_CAN_N_FCR_Bits
{
    unsigned int CFC:16;
    unsigned int CFSEL:3;
    unsigned int CFMOD:2;
    unsigned int reserved_21:1;
    unsigned int CFCIE:1;
    unsigned int CFCOV:1;
    unsigned int reserved_24:8;
} Ifx_CAN_N_FCR_Bits;


typedef struct _Ifx_CAN_N_IPR_Bits
{
    unsigned int ALINP:4;
    unsigned int LECINP:4;
    unsigned int TRINP:4;
    unsigned int CFCINP:4;
    unsigned int TEINP:4;
    unsigned int reserved_20:12;
} Ifx_CAN_N_IPR_Bits;


typedef struct _Ifx_CAN_N_PCR_Bits
{
    unsigned int RXSEL:3;
    unsigned int reserved_3:5;
    unsigned int LBM:1;
    unsigned int reserved_9:23;
} Ifx_CAN_N_PCR_Bits;


typedef struct _Ifx_CAN_N_SR_Bits
{
    unsigned int LEC:3;
    unsigned int TXOK:1;
    unsigned int RXOK:1;
    unsigned int ALERT:1;
    unsigned int EWRN:1;
    unsigned int BOFF:1;
    unsigned int LLE:1;
    unsigned int LOE:1;
    unsigned int SUSACK:1;
    unsigned int RESI:1;
    unsigned int FLEC:3;
    unsigned int reserved_15:17;
} Ifx_CAN_N_SR_Bits;


typedef struct _Ifx_CAN_N_TCCR_Bits
{
    unsigned int reserved_0:8;
    unsigned int TPSC:4;
    unsigned int reserved_12:6;
    unsigned int TRIGSRC:3;
    unsigned int reserved_21:11;
} Ifx_CAN_N_TCCR_Bits;


typedef struct _Ifx_CAN_N_TDCR_Bits
{
    unsigned int TDCV:5;
    unsigned int reserved_5:3;
    unsigned int TDCO:4;
    unsigned int reserved_12:3;
    unsigned int TDC:1;
    unsigned int reserved_16:16;
} Ifx_CAN_N_TDCR_Bits;


typedef struct _Ifx_CAN_N_TRTR_Bits
{
    unsigned int RELOAD:16;
    unsigned int reserved_16:6;
    unsigned int TEIE:1;
    unsigned int TE:1;
    unsigned int reserved_24:8;
} Ifx_CAN_N_TRTR_Bits;


typedef struct _Ifx_CAN_N_TTTR_Bits
{
    unsigned int RELOAD:16;
    unsigned int TXMO:8;
    unsigned int STRT:1;
    unsigned int reserved_25:7;
} Ifx_CAN_N_TTTR_Bits;


typedef struct _Ifx_CAN_OCS_Bits
{
    unsigned int TGS:2;
    unsigned int TGB:1;
    unsigned int TG_P:1;
    unsigned int reserved_4:20;
    unsigned int SUS:4;
    unsigned int SUS_P:1;
    unsigned int SUSSTA:1;
    unsigned int reserved_30:2;
} Ifx_CAN_OCS_Bits;


typedef struct _Ifx_CAN_PANCTR_Bits
{
    unsigned int PANCMD:8;
    unsigned int BUSY:1;
    unsigned int RBUSY:1;
    unsigned int reserved_10:6;
    unsigned int PANAR1:8;
    unsigned int PANAR2:8;
} Ifx_CAN_PANCTR_Bits;







typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CAN_ACCEN0_Bits B;
} Ifx_CAN_ACCEN0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CAN_ACCEN1_Bits B;
} Ifx_CAN_ACCEN1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CAN_CLC_Bits B;
} Ifx_CAN_CLC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CAN_FDR_Bits B;
} Ifx_CAN_FDR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CAN_ID_Bits B;
} Ifx_CAN_ID;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CAN_KRST0_Bits B;
} Ifx_CAN_KRST0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CAN_KRST1_Bits B;
} Ifx_CAN_KRST1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CAN_KRSTCLR_Bits B;
} Ifx_CAN_KRSTCLR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CAN_LIST_Bits B;
} Ifx_CAN_LIST;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CAN_MCR_Bits B;
} Ifx_CAN_MCR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CAN_MECR_Bits B;
} Ifx_CAN_MECR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CAN_MESTAT_Bits B;
} Ifx_CAN_MESTAT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CAN_MITR_Bits B;
} Ifx_CAN_MITR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CAN_MO_AMR_Bits B;
} Ifx_CAN_MO_AMR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CAN_MO_AR_Bits B;
} Ifx_CAN_MO_AR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CAN_MO_CTR_Bits B;
} Ifx_CAN_MO_CTR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CAN_MO_DATAH_Bits B;
} Ifx_CAN_MO_DATAH;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CAN_MO_DATAL_Bits B;
} Ifx_CAN_MO_DATAL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CAN_MO_EDATA0_Bits B;
} Ifx_CAN_MO_EDATA0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CAN_MO_EDATA1_Bits B;
} Ifx_CAN_MO_EDATA1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CAN_MO_EDATA2_Bits B;
} Ifx_CAN_MO_EDATA2;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CAN_MO_EDATA3_Bits B;
} Ifx_CAN_MO_EDATA3;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CAN_MO_EDATA4_Bits B;
} Ifx_CAN_MO_EDATA4;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CAN_MO_EDATA5_Bits B;
} Ifx_CAN_MO_EDATA5;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CAN_MO_EDATA6_Bits B;
} Ifx_CAN_MO_EDATA6;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CAN_MO_FCR_Bits B;
} Ifx_CAN_MO_FCR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CAN_MO_FGPR_Bits B;
} Ifx_CAN_MO_FGPR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CAN_MO_IPR_Bits B;
} Ifx_CAN_MO_IPR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CAN_MO_STAT_Bits B;
} Ifx_CAN_MO_STAT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CAN_MSID_Bits B;
} Ifx_CAN_MSID;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CAN_MSIMASK_Bits B;
} Ifx_CAN_MSIMASK;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CAN_MSPND_Bits B;
} Ifx_CAN_MSPND;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CAN_N_BTEVR_Bits B;
} Ifx_CAN_N_BTEVR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CAN_N_BTR_Bits B;
} Ifx_CAN_N_BTR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CAN_N_CR_Bits B;
} Ifx_CAN_N_CR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CAN_N_ECNT_Bits B;
} Ifx_CAN_N_ECNT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CAN_N_FBTR_Bits B;
} Ifx_CAN_N_FBTR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CAN_N_FCR_Bits B;
} Ifx_CAN_N_FCR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CAN_N_IPR_Bits B;
} Ifx_CAN_N_IPR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CAN_N_PCR_Bits B;
} Ifx_CAN_N_PCR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CAN_N_SR_Bits B;
} Ifx_CAN_N_SR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CAN_N_TCCR_Bits B;
} Ifx_CAN_N_TCCR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CAN_N_TDCR_Bits B;
} Ifx_CAN_N_TDCR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CAN_N_TRTR_Bits B;
} Ifx_CAN_N_TRTR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CAN_N_TTTR_Bits B;
} Ifx_CAN_N_TTTR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CAN_OCS_Bits B;
} Ifx_CAN_OCS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CAN_PANCTR_Bits B;
} Ifx_CAN_PANCTR;
# 965 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCan_regdef.h" 3
typedef volatile struct _Ifx_CAN_MO
{
    union
    {
        Ifx_CAN_MO_EDATA0 EDATA0;
        Ifx_CAN_MO_FCR FCR;
    };

    union
    {
        Ifx_CAN_MO_EDATA1 EDATA1;
        Ifx_CAN_MO_FGPR FGPR;
    };

    union
    {
        Ifx_CAN_MO_EDATA2 EDATA2;
        Ifx_CAN_MO_IPR IPR;
    };

    union
    {
        Ifx_CAN_MO_AMR AMR;
        Ifx_CAN_MO_EDATA3 EDATA3;
    };

    union
    {
        Ifx_CAN_MO_DATAL DATAL;
        Ifx_CAN_MO_EDATA4 EDATA4;
    };

    union
    {
        Ifx_CAN_MO_DATAH DATAH;
        Ifx_CAN_MO_EDATA5 EDATA5;
    };

    union
    {
        Ifx_CAN_MO_AR AR;
        Ifx_CAN_MO_EDATA6 EDATA6;
    };

    union
    {
        Ifx_CAN_MO_CTR CTR;
        Ifx_CAN_MO_STAT STAT;
    };

} Ifx_CAN_MO;


typedef volatile struct _Ifx_CAN_N
{
    Ifx_CAN_N_CR CR;
    Ifx_CAN_N_SR SR;
    Ifx_CAN_N_IPR IPR;
    Ifx_CAN_N_PCR PCR;
    union
    {
        Ifx_CAN_N_BTEVR BTEVR;
        Ifx_CAN_N_BTR BTR;
    };

    Ifx_CAN_N_ECNT ECNT;
    Ifx_CAN_N_FCR FCR;
    Ifx_CAN_N_TCCR TCCR;
    Ifx_CAN_N_TRTR TRTR;
    Ifx_CAN_N_TTTR TATTR;
    Ifx_CAN_N_TTTR TBTTR;
    Ifx_CAN_N_TTTR TCTTR;
    unsigned char reserved_30[8];
    Ifx_CAN_N_FBTR FBTR;
    Ifx_CAN_N_TDCR TDCR;
    unsigned char reserved_40[192];
} Ifx_CAN_N;
# 1054 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCan_regdef.h" 3
typedef volatile struct _Ifx_CAN
{
    Ifx_CAN_CLC CLC;
    unsigned char reserved_4[4];
    Ifx_CAN_ID ID;
    Ifx_CAN_FDR FDR;
    unsigned char reserved_10[216];
    Ifx_CAN_OCS OCS;
    Ifx_CAN_KRSTCLR KRSTCLR;
    Ifx_CAN_KRST1 KRST1;
    Ifx_CAN_KRST0 KRST0;
    Ifx_CAN_ACCEN1 ACCEN1;
    Ifx_CAN_ACCEN0 ACCEN0;
    Ifx_CAN_LIST LIST[16];
    Ifx_CAN_MSPND MSPND[8];
    unsigned char reserved_160[32];
    Ifx_CAN_MSID MSID[8];
    unsigned char reserved_1A0[32];
    Ifx_CAN_MSIMASK MSIMASK;
    Ifx_CAN_PANCTR PANCTR;
    Ifx_CAN_MCR MCR;
    Ifx_CAN_MITR MITR;
    Ifx_CAN_MECR MECR;
    Ifx_CAN_MESTAT MESTAT;
    unsigned char reserved_1D8[40];
    Ifx_CAN_N N[4];
    unsigned char reserved_600[2560];
    Ifx_CAN_MO MO[256];
    unsigned char reserved_3000[4096];
} Ifx_CAN;
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCan_reg.h" 2 3





#define MODULE_CAN (*(Ifx_CAN*)0xF0018000u)







#define CAN_ACCEN0 (*(volatile Ifx_CAN_ACCEN0*)0xF00180FCu)


#define CAN_ACCEN1 (*(volatile Ifx_CAN_ACCEN1*)0xF00180F8u)


#define CAN_CLC (*(volatile Ifx_CAN_CLC*)0xF0018000u)


#define CAN_FDR (*(volatile Ifx_CAN_FDR*)0xF001800Cu)


#define CAN_ID (*(volatile Ifx_CAN_ID*)0xF0018008u)


#define CAN_KRST0 (*(volatile Ifx_CAN_KRST0*)0xF00180F4u)


#define CAN_KRST1 (*(volatile Ifx_CAN_KRST1*)0xF00180F0u)


#define CAN_KRSTCLR (*(volatile Ifx_CAN_KRSTCLR*)0xF00180ECu)


#define CAN_LIST0 (*(volatile Ifx_CAN_LIST*)0xF0018100u)


#define CAN_LIST1 (*(volatile Ifx_CAN_LIST*)0xF0018104u)


#define CAN_LIST10 (*(volatile Ifx_CAN_LIST*)0xF0018128u)


#define CAN_LIST11 (*(volatile Ifx_CAN_LIST*)0xF001812Cu)


#define CAN_LIST12 (*(volatile Ifx_CAN_LIST*)0xF0018130u)


#define CAN_LIST13 (*(volatile Ifx_CAN_LIST*)0xF0018134u)


#define CAN_LIST14 (*(volatile Ifx_CAN_LIST*)0xF0018138u)


#define CAN_LIST15 (*(volatile Ifx_CAN_LIST*)0xF001813Cu)


#define CAN_LIST2 (*(volatile Ifx_CAN_LIST*)0xF0018108u)


#define CAN_LIST3 (*(volatile Ifx_CAN_LIST*)0xF001810Cu)


#define CAN_LIST4 (*(volatile Ifx_CAN_LIST*)0xF0018110u)


#define CAN_LIST5 (*(volatile Ifx_CAN_LIST*)0xF0018114u)


#define CAN_LIST6 (*(volatile Ifx_CAN_LIST*)0xF0018118u)


#define CAN_LIST7 (*(volatile Ifx_CAN_LIST*)0xF001811Cu)


#define CAN_LIST8 (*(volatile Ifx_CAN_LIST*)0xF0018120u)


#define CAN_LIST9 (*(volatile Ifx_CAN_LIST*)0xF0018124u)


#define CAN_MCR (*(volatile Ifx_CAN_MCR*)0xF00181C8u)


#define CAN_MECR (*(volatile Ifx_CAN_MECR*)0xF00181D0u)


#define CAN_MESTAT (*(volatile Ifx_CAN_MESTAT*)0xF00181D4u)


#define CAN_MITR (*(volatile Ifx_CAN_MITR*)0xF00181CCu)


#define CAN_MO0_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001900Cu)




#define CAN_MOAMR0 (CAN_MO0_AMR)


#define CAN_MO0_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019018u)




#define CAN_MOAR0 (CAN_MO0_AR)


#define CAN_MO0_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001901Cu)




#define CAN_MOCTR0 (CAN_MO0_CTR)


#define CAN_MO0_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019014u)




#define CAN_MODATAH0 (CAN_MO0_DATAH)


#define CAN_MO0_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019010u)




#define CAN_MODATAL0 (CAN_MO0_DATAL)


#define CAN_MO0_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019000u)




#define CAN_EMO0DATA0 (CAN_MO0_EDATA0)


#define CAN_MO0_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019004u)




#define CAN_EMO0DATA1 (CAN_MO0_EDATA1)


#define CAN_MO0_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019008u)




#define CAN_EMO0DATA2 (CAN_MO0_EDATA2)


#define CAN_MO0_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001900Cu)




#define CAN_EMO0DATA3 (CAN_MO0_EDATA3)


#define CAN_MO0_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019010u)




#define CAN_EMO0DATA4 (CAN_MO0_EDATA4)


#define CAN_MO0_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019014u)




#define CAN_EMO0DATA5 (CAN_MO0_EDATA5)


#define CAN_MO0_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019018u)




#define CAN_EMO0DATA6 (CAN_MO0_EDATA6)


#define CAN_MO0_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019000u)




#define CAN_MOFCR0 (CAN_MO0_FCR)


#define CAN_MO0_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019004u)




#define CAN_MOFGPR0 (CAN_MO0_FGPR)


#define CAN_MO0_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019008u)




#define CAN_MOIPR0 (CAN_MO0_IPR)


#define CAN_MO0_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001901Cu)




#define CAN_MOSTAT0 (CAN_MO0_STAT)


#define CAN_MO100_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF0019C8Cu)




#define CAN_MOAMR100 (CAN_MO100_AMR)


#define CAN_MO100_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019C98u)




#define CAN_MOAR100 (CAN_MO100_AR)


#define CAN_MO100_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF0019C9Cu)




#define CAN_MOCTR100 (CAN_MO100_CTR)


#define CAN_MO100_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019C94u)




#define CAN_MODATAH100 (CAN_MO100_DATAH)


#define CAN_MO100_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019C90u)




#define CAN_MODATAL100 (CAN_MO100_DATAL)


#define CAN_MO100_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019C80u)




#define CAN_EMO100DATA0 (CAN_MO100_EDATA0)


#define CAN_MO100_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019C84u)




#define CAN_EMO100DATA1 (CAN_MO100_EDATA1)


#define CAN_MO100_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019C88u)




#define CAN_EMO100DATA2 (CAN_MO100_EDATA2)


#define CAN_MO100_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF0019C8Cu)




#define CAN_EMO100DATA3 (CAN_MO100_EDATA3)


#define CAN_MO100_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019C90u)




#define CAN_EMO100DATA4 (CAN_MO100_EDATA4)


#define CAN_MO100_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019C94u)




#define CAN_EMO100DATA5 (CAN_MO100_EDATA5)


#define CAN_MO100_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019C98u)




#define CAN_EMO100DATA6 (CAN_MO100_EDATA6)


#define CAN_MO100_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019C80u)




#define CAN_MOFCR100 (CAN_MO100_FCR)


#define CAN_MO100_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019C84u)




#define CAN_MOFGPR100 (CAN_MO100_FGPR)


#define CAN_MO100_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019C88u)




#define CAN_MOIPR100 (CAN_MO100_IPR)


#define CAN_MO100_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF0019C9Cu)




#define CAN_MOSTAT100 (CAN_MO100_STAT)


#define CAN_MO101_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF0019CACu)




#define CAN_MOAMR101 (CAN_MO101_AMR)


#define CAN_MO101_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019CB8u)




#define CAN_MOAR101 (CAN_MO101_AR)


#define CAN_MO101_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF0019CBCu)




#define CAN_MOCTR101 (CAN_MO101_CTR)


#define CAN_MO101_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019CB4u)




#define CAN_MODATAH101 (CAN_MO101_DATAH)


#define CAN_MO101_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019CB0u)




#define CAN_MODATAL101 (CAN_MO101_DATAL)


#define CAN_MO101_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019CA0u)




#define CAN_EMO101DATA0 (CAN_MO101_EDATA0)


#define CAN_MO101_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019CA4u)




#define CAN_EMO101DATA1 (CAN_MO101_EDATA1)


#define CAN_MO101_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019CA8u)




#define CAN_EMO101DATA2 (CAN_MO101_EDATA2)


#define CAN_MO101_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF0019CACu)




#define CAN_EMO101DATA3 (CAN_MO101_EDATA3)


#define CAN_MO101_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019CB0u)




#define CAN_EMO101DATA4 (CAN_MO101_EDATA4)


#define CAN_MO101_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019CB4u)




#define CAN_EMO101DATA5 (CAN_MO101_EDATA5)


#define CAN_MO101_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019CB8u)




#define CAN_EMO101DATA6 (CAN_MO101_EDATA6)


#define CAN_MO101_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019CA0u)




#define CAN_MOFCR101 (CAN_MO101_FCR)


#define CAN_MO101_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019CA4u)




#define CAN_MOFGPR101 (CAN_MO101_FGPR)


#define CAN_MO101_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019CA8u)




#define CAN_MOIPR101 (CAN_MO101_IPR)


#define CAN_MO101_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF0019CBCu)




#define CAN_MOSTAT101 (CAN_MO101_STAT)


#define CAN_MO102_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF0019CCCu)




#define CAN_MOAMR102 (CAN_MO102_AMR)


#define CAN_MO102_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019CD8u)




#define CAN_MOAR102 (CAN_MO102_AR)


#define CAN_MO102_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF0019CDCu)




#define CAN_MOCTR102 (CAN_MO102_CTR)


#define CAN_MO102_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019CD4u)




#define CAN_MODATAH102 (CAN_MO102_DATAH)


#define CAN_MO102_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019CD0u)




#define CAN_MODATAL102 (CAN_MO102_DATAL)


#define CAN_MO102_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019CC0u)




#define CAN_EMO102DATA0 (CAN_MO102_EDATA0)


#define CAN_MO102_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019CC4u)




#define CAN_EMO102DATA1 (CAN_MO102_EDATA1)


#define CAN_MO102_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019CC8u)




#define CAN_EMO102DATA2 (CAN_MO102_EDATA2)


#define CAN_MO102_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF0019CCCu)




#define CAN_EMO102DATA3 (CAN_MO102_EDATA3)


#define CAN_MO102_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019CD0u)




#define CAN_EMO102DATA4 (CAN_MO102_EDATA4)


#define CAN_MO102_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019CD4u)




#define CAN_EMO102DATA5 (CAN_MO102_EDATA5)


#define CAN_MO102_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019CD8u)




#define CAN_EMO102DATA6 (CAN_MO102_EDATA6)


#define CAN_MO102_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019CC0u)




#define CAN_MOFCR102 (CAN_MO102_FCR)


#define CAN_MO102_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019CC4u)




#define CAN_MOFGPR102 (CAN_MO102_FGPR)


#define CAN_MO102_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019CC8u)




#define CAN_MOIPR102 (CAN_MO102_IPR)


#define CAN_MO102_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF0019CDCu)




#define CAN_MOSTAT102 (CAN_MO102_STAT)


#define CAN_MO103_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF0019CECu)




#define CAN_MOAMR103 (CAN_MO103_AMR)


#define CAN_MO103_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019CF8u)




#define CAN_MOAR103 (CAN_MO103_AR)


#define CAN_MO103_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF0019CFCu)




#define CAN_MOCTR103 (CAN_MO103_CTR)


#define CAN_MO103_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019CF4u)




#define CAN_MODATAH103 (CAN_MO103_DATAH)


#define CAN_MO103_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019CF0u)




#define CAN_MODATAL103 (CAN_MO103_DATAL)


#define CAN_MO103_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019CE0u)




#define CAN_EMO103DATA0 (CAN_MO103_EDATA0)


#define CAN_MO103_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019CE4u)




#define CAN_EMO103DATA1 (CAN_MO103_EDATA1)


#define CAN_MO103_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019CE8u)




#define CAN_EMO103DATA2 (CAN_MO103_EDATA2)


#define CAN_MO103_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF0019CECu)




#define CAN_EMO103DATA3 (CAN_MO103_EDATA3)


#define CAN_MO103_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019CF0u)




#define CAN_EMO103DATA4 (CAN_MO103_EDATA4)


#define CAN_MO103_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019CF4u)




#define CAN_EMO103DATA5 (CAN_MO103_EDATA5)


#define CAN_MO103_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019CF8u)




#define CAN_EMO103DATA6 (CAN_MO103_EDATA6)


#define CAN_MO103_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019CE0u)




#define CAN_MOFCR103 (CAN_MO103_FCR)


#define CAN_MO103_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019CE4u)




#define CAN_MOFGPR103 (CAN_MO103_FGPR)


#define CAN_MO103_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019CE8u)




#define CAN_MOIPR103 (CAN_MO103_IPR)


#define CAN_MO103_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF0019CFCu)




#define CAN_MOSTAT103 (CAN_MO103_STAT)


#define CAN_MO104_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF0019D0Cu)




#define CAN_MOAMR104 (CAN_MO104_AMR)


#define CAN_MO104_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019D18u)




#define CAN_MOAR104 (CAN_MO104_AR)


#define CAN_MO104_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF0019D1Cu)




#define CAN_MOCTR104 (CAN_MO104_CTR)


#define CAN_MO104_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019D14u)




#define CAN_MODATAH104 (CAN_MO104_DATAH)


#define CAN_MO104_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019D10u)




#define CAN_MODATAL104 (CAN_MO104_DATAL)


#define CAN_MO104_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019D00u)




#define CAN_EMO104DATA0 (CAN_MO104_EDATA0)


#define CAN_MO104_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019D04u)




#define CAN_EMO104DATA1 (CAN_MO104_EDATA1)


#define CAN_MO104_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019D08u)




#define CAN_EMO104DATA2 (CAN_MO104_EDATA2)


#define CAN_MO104_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF0019D0Cu)




#define CAN_EMO104DATA3 (CAN_MO104_EDATA3)


#define CAN_MO104_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019D10u)




#define CAN_EMO104DATA4 (CAN_MO104_EDATA4)


#define CAN_MO104_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019D14u)




#define CAN_EMO104DATA5 (CAN_MO104_EDATA5)


#define CAN_MO104_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019D18u)




#define CAN_EMO104DATA6 (CAN_MO104_EDATA6)


#define CAN_MO104_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019D00u)




#define CAN_MOFCR104 (CAN_MO104_FCR)


#define CAN_MO104_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019D04u)




#define CAN_MOFGPR104 (CAN_MO104_FGPR)


#define CAN_MO104_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019D08u)




#define CAN_MOIPR104 (CAN_MO104_IPR)


#define CAN_MO104_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF0019D1Cu)




#define CAN_MOSTAT104 (CAN_MO104_STAT)


#define CAN_MO105_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF0019D2Cu)




#define CAN_MOAMR105 (CAN_MO105_AMR)


#define CAN_MO105_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019D38u)




#define CAN_MOAR105 (CAN_MO105_AR)


#define CAN_MO105_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF0019D3Cu)




#define CAN_MOCTR105 (CAN_MO105_CTR)


#define CAN_MO105_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019D34u)




#define CAN_MODATAH105 (CAN_MO105_DATAH)


#define CAN_MO105_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019D30u)




#define CAN_MODATAL105 (CAN_MO105_DATAL)


#define CAN_MO105_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019D20u)




#define CAN_EMO105DATA0 (CAN_MO105_EDATA0)


#define CAN_MO105_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019D24u)




#define CAN_EMO105DATA1 (CAN_MO105_EDATA1)


#define CAN_MO105_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019D28u)




#define CAN_EMO105DATA2 (CAN_MO105_EDATA2)


#define CAN_MO105_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF0019D2Cu)




#define CAN_EMO105DATA3 (CAN_MO105_EDATA3)


#define CAN_MO105_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019D30u)




#define CAN_EMO105DATA4 (CAN_MO105_EDATA4)


#define CAN_MO105_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019D34u)




#define CAN_EMO105DATA5 (CAN_MO105_EDATA5)


#define CAN_MO105_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019D38u)




#define CAN_EMO105DATA6 (CAN_MO105_EDATA6)


#define CAN_MO105_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019D20u)




#define CAN_MOFCR105 (CAN_MO105_FCR)


#define CAN_MO105_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019D24u)




#define CAN_MOFGPR105 (CAN_MO105_FGPR)


#define CAN_MO105_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019D28u)




#define CAN_MOIPR105 (CAN_MO105_IPR)


#define CAN_MO105_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF0019D3Cu)




#define CAN_MOSTAT105 (CAN_MO105_STAT)


#define CAN_MO106_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF0019D4Cu)




#define CAN_MOAMR106 (CAN_MO106_AMR)


#define CAN_MO106_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019D58u)




#define CAN_MOAR106 (CAN_MO106_AR)


#define CAN_MO106_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF0019D5Cu)




#define CAN_MOCTR106 (CAN_MO106_CTR)


#define CAN_MO106_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019D54u)




#define CAN_MODATAH106 (CAN_MO106_DATAH)


#define CAN_MO106_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019D50u)




#define CAN_MODATAL106 (CAN_MO106_DATAL)


#define CAN_MO106_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019D40u)




#define CAN_EMO106DATA0 (CAN_MO106_EDATA0)


#define CAN_MO106_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019D44u)




#define CAN_EMO106DATA1 (CAN_MO106_EDATA1)


#define CAN_MO106_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019D48u)




#define CAN_EMO106DATA2 (CAN_MO106_EDATA2)


#define CAN_MO106_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF0019D4Cu)




#define CAN_EMO106DATA3 (CAN_MO106_EDATA3)


#define CAN_MO106_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019D50u)




#define CAN_EMO106DATA4 (CAN_MO106_EDATA4)


#define CAN_MO106_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019D54u)




#define CAN_EMO106DATA5 (CAN_MO106_EDATA5)


#define CAN_MO106_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019D58u)




#define CAN_EMO106DATA6 (CAN_MO106_EDATA6)


#define CAN_MO106_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019D40u)




#define CAN_MOFCR106 (CAN_MO106_FCR)


#define CAN_MO106_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019D44u)




#define CAN_MOFGPR106 (CAN_MO106_FGPR)


#define CAN_MO106_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019D48u)




#define CAN_MOIPR106 (CAN_MO106_IPR)


#define CAN_MO106_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF0019D5Cu)




#define CAN_MOSTAT106 (CAN_MO106_STAT)


#define CAN_MO107_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF0019D6Cu)




#define CAN_MOAMR107 (CAN_MO107_AMR)


#define CAN_MO107_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019D78u)




#define CAN_MOAR107 (CAN_MO107_AR)


#define CAN_MO107_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF0019D7Cu)




#define CAN_MOCTR107 (CAN_MO107_CTR)


#define CAN_MO107_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019D74u)




#define CAN_MODATAH107 (CAN_MO107_DATAH)


#define CAN_MO107_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019D70u)




#define CAN_MODATAL107 (CAN_MO107_DATAL)


#define CAN_MO107_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019D60u)




#define CAN_EMO107DATA0 (CAN_MO107_EDATA0)


#define CAN_MO107_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019D64u)




#define CAN_EMO107DATA1 (CAN_MO107_EDATA1)


#define CAN_MO107_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019D68u)




#define CAN_EMO107DATA2 (CAN_MO107_EDATA2)


#define CAN_MO107_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF0019D6Cu)




#define CAN_EMO107DATA3 (CAN_MO107_EDATA3)


#define CAN_MO107_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019D70u)




#define CAN_EMO107DATA4 (CAN_MO107_EDATA4)


#define CAN_MO107_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019D74u)




#define CAN_EMO107DATA5 (CAN_MO107_EDATA5)


#define CAN_MO107_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019D78u)




#define CAN_EMO107DATA6 (CAN_MO107_EDATA6)


#define CAN_MO107_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019D60u)




#define CAN_MOFCR107 (CAN_MO107_FCR)


#define CAN_MO107_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019D64u)




#define CAN_MOFGPR107 (CAN_MO107_FGPR)


#define CAN_MO107_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019D68u)




#define CAN_MOIPR107 (CAN_MO107_IPR)


#define CAN_MO107_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF0019D7Cu)




#define CAN_MOSTAT107 (CAN_MO107_STAT)


#define CAN_MO108_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF0019D8Cu)




#define CAN_MOAMR108 (CAN_MO108_AMR)


#define CAN_MO108_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019D98u)




#define CAN_MOAR108 (CAN_MO108_AR)


#define CAN_MO108_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF0019D9Cu)




#define CAN_MOCTR108 (CAN_MO108_CTR)


#define CAN_MO108_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019D94u)




#define CAN_MODATAH108 (CAN_MO108_DATAH)


#define CAN_MO108_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019D90u)




#define CAN_MODATAL108 (CAN_MO108_DATAL)


#define CAN_MO108_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019D80u)




#define CAN_EMO108DATA0 (CAN_MO108_EDATA0)


#define CAN_MO108_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019D84u)




#define CAN_EMO108DATA1 (CAN_MO108_EDATA1)


#define CAN_MO108_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019D88u)




#define CAN_EMO108DATA2 (CAN_MO108_EDATA2)


#define CAN_MO108_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF0019D8Cu)




#define CAN_EMO108DATA3 (CAN_MO108_EDATA3)


#define CAN_MO108_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019D90u)




#define CAN_EMO108DATA4 (CAN_MO108_EDATA4)


#define CAN_MO108_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019D94u)




#define CAN_EMO108DATA5 (CAN_MO108_EDATA5)


#define CAN_MO108_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019D98u)




#define CAN_EMO108DATA6 (CAN_MO108_EDATA6)


#define CAN_MO108_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019D80u)




#define CAN_MOFCR108 (CAN_MO108_FCR)


#define CAN_MO108_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019D84u)




#define CAN_MOFGPR108 (CAN_MO108_FGPR)


#define CAN_MO108_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019D88u)




#define CAN_MOIPR108 (CAN_MO108_IPR)


#define CAN_MO108_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF0019D9Cu)




#define CAN_MOSTAT108 (CAN_MO108_STAT)


#define CAN_MO109_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF0019DACu)




#define CAN_MOAMR109 (CAN_MO109_AMR)


#define CAN_MO109_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019DB8u)




#define CAN_MOAR109 (CAN_MO109_AR)


#define CAN_MO109_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF0019DBCu)




#define CAN_MOCTR109 (CAN_MO109_CTR)


#define CAN_MO109_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019DB4u)




#define CAN_MODATAH109 (CAN_MO109_DATAH)


#define CAN_MO109_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019DB0u)




#define CAN_MODATAL109 (CAN_MO109_DATAL)


#define CAN_MO109_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019DA0u)




#define CAN_EMO109DATA0 (CAN_MO109_EDATA0)


#define CAN_MO109_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019DA4u)




#define CAN_EMO109DATA1 (CAN_MO109_EDATA1)


#define CAN_MO109_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019DA8u)




#define CAN_EMO109DATA2 (CAN_MO109_EDATA2)


#define CAN_MO109_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF0019DACu)




#define CAN_EMO109DATA3 (CAN_MO109_EDATA3)


#define CAN_MO109_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019DB0u)




#define CAN_EMO109DATA4 (CAN_MO109_EDATA4)


#define CAN_MO109_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019DB4u)




#define CAN_EMO109DATA5 (CAN_MO109_EDATA5)


#define CAN_MO109_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019DB8u)




#define CAN_EMO109DATA6 (CAN_MO109_EDATA6)


#define CAN_MO109_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019DA0u)




#define CAN_MOFCR109 (CAN_MO109_FCR)


#define CAN_MO109_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019DA4u)




#define CAN_MOFGPR109 (CAN_MO109_FGPR)


#define CAN_MO109_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019DA8u)




#define CAN_MOIPR109 (CAN_MO109_IPR)


#define CAN_MO109_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF0019DBCu)




#define CAN_MOSTAT109 (CAN_MO109_STAT)


#define CAN_MO10_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001914Cu)




#define CAN_MOAMR10 (CAN_MO10_AMR)


#define CAN_MO10_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019158u)




#define CAN_MOAR10 (CAN_MO10_AR)


#define CAN_MO10_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001915Cu)




#define CAN_MOCTR10 (CAN_MO10_CTR)


#define CAN_MO10_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019154u)




#define CAN_MODATAH10 (CAN_MO10_DATAH)


#define CAN_MO10_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019150u)




#define CAN_MODATAL10 (CAN_MO10_DATAL)


#define CAN_MO10_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019140u)




#define CAN_EMO10DATA0 (CAN_MO10_EDATA0)


#define CAN_MO10_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019144u)




#define CAN_EMO10DATA1 (CAN_MO10_EDATA1)


#define CAN_MO10_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019148u)




#define CAN_EMO10DATA2 (CAN_MO10_EDATA2)


#define CAN_MO10_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001914Cu)




#define CAN_EMO10DATA3 (CAN_MO10_EDATA3)


#define CAN_MO10_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019150u)




#define CAN_EMO10DATA4 (CAN_MO10_EDATA4)


#define CAN_MO10_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019154u)




#define CAN_EMO10DATA5 (CAN_MO10_EDATA5)


#define CAN_MO10_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019158u)




#define CAN_EMO10DATA6 (CAN_MO10_EDATA6)


#define CAN_MO10_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019140u)




#define CAN_MOFCR10 (CAN_MO10_FCR)


#define CAN_MO10_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019144u)




#define CAN_MOFGPR10 (CAN_MO10_FGPR)


#define CAN_MO10_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019148u)




#define CAN_MOIPR10 (CAN_MO10_IPR)


#define CAN_MO10_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001915Cu)




#define CAN_MOSTAT10 (CAN_MO10_STAT)


#define CAN_MO110_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF0019DCCu)




#define CAN_MOAMR110 (CAN_MO110_AMR)


#define CAN_MO110_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019DD8u)




#define CAN_MOAR110 (CAN_MO110_AR)


#define CAN_MO110_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF0019DDCu)




#define CAN_MOCTR110 (CAN_MO110_CTR)


#define CAN_MO110_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019DD4u)




#define CAN_MODATAH110 (CAN_MO110_DATAH)


#define CAN_MO110_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019DD0u)




#define CAN_MODATAL110 (CAN_MO110_DATAL)


#define CAN_MO110_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019DC0u)




#define CAN_EMO110DATA0 (CAN_MO110_EDATA0)


#define CAN_MO110_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019DC4u)




#define CAN_EMO110DATA1 (CAN_MO110_EDATA1)


#define CAN_MO110_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019DC8u)




#define CAN_EMO110DATA2 (CAN_MO110_EDATA2)


#define CAN_MO110_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF0019DCCu)




#define CAN_EMO110DATA3 (CAN_MO110_EDATA3)


#define CAN_MO110_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019DD0u)




#define CAN_EMO110DATA4 (CAN_MO110_EDATA4)


#define CAN_MO110_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019DD4u)




#define CAN_EMO110DATA5 (CAN_MO110_EDATA5)


#define CAN_MO110_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019DD8u)




#define CAN_EMO110DATA6 (CAN_MO110_EDATA6)


#define CAN_MO110_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019DC0u)




#define CAN_MOFCR110 (CAN_MO110_FCR)


#define CAN_MO110_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019DC4u)




#define CAN_MOFGPR110 (CAN_MO110_FGPR)


#define CAN_MO110_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019DC8u)




#define CAN_MOIPR110 (CAN_MO110_IPR)


#define CAN_MO110_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF0019DDCu)




#define CAN_MOSTAT110 (CAN_MO110_STAT)


#define CAN_MO111_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF0019DECu)




#define CAN_MOAMR111 (CAN_MO111_AMR)


#define CAN_MO111_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019DF8u)




#define CAN_MOAR111 (CAN_MO111_AR)


#define CAN_MO111_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF0019DFCu)




#define CAN_MOCTR111 (CAN_MO111_CTR)


#define CAN_MO111_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019DF4u)




#define CAN_MODATAH111 (CAN_MO111_DATAH)


#define CAN_MO111_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019DF0u)




#define CAN_MODATAL111 (CAN_MO111_DATAL)


#define CAN_MO111_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019DE0u)




#define CAN_EMO111DATA0 (CAN_MO111_EDATA0)


#define CAN_MO111_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019DE4u)




#define CAN_EMO111DATA1 (CAN_MO111_EDATA1)


#define CAN_MO111_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019DE8u)




#define CAN_EMO111DATA2 (CAN_MO111_EDATA2)


#define CAN_MO111_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF0019DECu)




#define CAN_EMO111DATA3 (CAN_MO111_EDATA3)


#define CAN_MO111_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019DF0u)




#define CAN_EMO111DATA4 (CAN_MO111_EDATA4)


#define CAN_MO111_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019DF4u)




#define CAN_EMO111DATA5 (CAN_MO111_EDATA5)


#define CAN_MO111_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019DF8u)




#define CAN_EMO111DATA6 (CAN_MO111_EDATA6)


#define CAN_MO111_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019DE0u)




#define CAN_MOFCR111 (CAN_MO111_FCR)


#define CAN_MO111_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019DE4u)




#define CAN_MOFGPR111 (CAN_MO111_FGPR)


#define CAN_MO111_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019DE8u)




#define CAN_MOIPR111 (CAN_MO111_IPR)


#define CAN_MO111_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF0019DFCu)




#define CAN_MOSTAT111 (CAN_MO111_STAT)


#define CAN_MO112_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF0019E0Cu)




#define CAN_MOAMR112 (CAN_MO112_AMR)


#define CAN_MO112_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019E18u)




#define CAN_MOAR112 (CAN_MO112_AR)


#define CAN_MO112_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF0019E1Cu)




#define CAN_MOCTR112 (CAN_MO112_CTR)


#define CAN_MO112_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019E14u)




#define CAN_MODATAH112 (CAN_MO112_DATAH)


#define CAN_MO112_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019E10u)




#define CAN_MODATAL112 (CAN_MO112_DATAL)


#define CAN_MO112_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019E00u)




#define CAN_EMO112DATA0 (CAN_MO112_EDATA0)


#define CAN_MO112_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019E04u)




#define CAN_EMO112DATA1 (CAN_MO112_EDATA1)


#define CAN_MO112_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019E08u)




#define CAN_EMO112DATA2 (CAN_MO112_EDATA2)


#define CAN_MO112_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF0019E0Cu)




#define CAN_EMO112DATA3 (CAN_MO112_EDATA3)


#define CAN_MO112_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019E10u)




#define CAN_EMO112DATA4 (CAN_MO112_EDATA4)


#define CAN_MO112_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019E14u)




#define CAN_EMO112DATA5 (CAN_MO112_EDATA5)


#define CAN_MO112_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019E18u)




#define CAN_EMO112DATA6 (CAN_MO112_EDATA6)


#define CAN_MO112_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019E00u)




#define CAN_MOFCR112 (CAN_MO112_FCR)


#define CAN_MO112_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019E04u)




#define CAN_MOFGPR112 (CAN_MO112_FGPR)


#define CAN_MO112_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019E08u)




#define CAN_MOIPR112 (CAN_MO112_IPR)


#define CAN_MO112_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF0019E1Cu)




#define CAN_MOSTAT112 (CAN_MO112_STAT)


#define CAN_MO113_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF0019E2Cu)




#define CAN_MOAMR113 (CAN_MO113_AMR)


#define CAN_MO113_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019E38u)




#define CAN_MOAR113 (CAN_MO113_AR)


#define CAN_MO113_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF0019E3Cu)




#define CAN_MOCTR113 (CAN_MO113_CTR)


#define CAN_MO113_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019E34u)




#define CAN_MODATAH113 (CAN_MO113_DATAH)


#define CAN_MO113_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019E30u)




#define CAN_MODATAL113 (CAN_MO113_DATAL)


#define CAN_MO113_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019E20u)




#define CAN_EMO113DATA0 (CAN_MO113_EDATA0)


#define CAN_MO113_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019E24u)




#define CAN_EMO113DATA1 (CAN_MO113_EDATA1)


#define CAN_MO113_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019E28u)




#define CAN_EMO113DATA2 (CAN_MO113_EDATA2)


#define CAN_MO113_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF0019E2Cu)




#define CAN_EMO113DATA3 (CAN_MO113_EDATA3)


#define CAN_MO113_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019E30u)




#define CAN_EMO113DATA4 (CAN_MO113_EDATA4)


#define CAN_MO113_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019E34u)




#define CAN_EMO113DATA5 (CAN_MO113_EDATA5)


#define CAN_MO113_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019E38u)




#define CAN_EMO113DATA6 (CAN_MO113_EDATA6)


#define CAN_MO113_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019E20u)




#define CAN_MOFCR113 (CAN_MO113_FCR)


#define CAN_MO113_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019E24u)




#define CAN_MOFGPR113 (CAN_MO113_FGPR)


#define CAN_MO113_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019E28u)




#define CAN_MOIPR113 (CAN_MO113_IPR)


#define CAN_MO113_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF0019E3Cu)




#define CAN_MOSTAT113 (CAN_MO113_STAT)


#define CAN_MO114_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF0019E4Cu)




#define CAN_MOAMR114 (CAN_MO114_AMR)


#define CAN_MO114_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019E58u)




#define CAN_MOAR114 (CAN_MO114_AR)


#define CAN_MO114_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF0019E5Cu)




#define CAN_MOCTR114 (CAN_MO114_CTR)


#define CAN_MO114_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019E54u)




#define CAN_MODATAH114 (CAN_MO114_DATAH)


#define CAN_MO114_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019E50u)




#define CAN_MODATAL114 (CAN_MO114_DATAL)


#define CAN_MO114_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019E40u)




#define CAN_EMO114DATA0 (CAN_MO114_EDATA0)


#define CAN_MO114_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019E44u)




#define CAN_EMO114DATA1 (CAN_MO114_EDATA1)


#define CAN_MO114_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019E48u)




#define CAN_EMO114DATA2 (CAN_MO114_EDATA2)


#define CAN_MO114_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF0019E4Cu)




#define CAN_EMO114DATA3 (CAN_MO114_EDATA3)


#define CAN_MO114_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019E50u)




#define CAN_EMO114DATA4 (CAN_MO114_EDATA4)


#define CAN_MO114_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019E54u)




#define CAN_EMO114DATA5 (CAN_MO114_EDATA5)


#define CAN_MO114_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019E58u)




#define CAN_EMO114DATA6 (CAN_MO114_EDATA6)


#define CAN_MO114_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019E40u)




#define CAN_MOFCR114 (CAN_MO114_FCR)


#define CAN_MO114_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019E44u)




#define CAN_MOFGPR114 (CAN_MO114_FGPR)


#define CAN_MO114_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019E48u)




#define CAN_MOIPR114 (CAN_MO114_IPR)


#define CAN_MO114_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF0019E5Cu)




#define CAN_MOSTAT114 (CAN_MO114_STAT)


#define CAN_MO115_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF0019E6Cu)




#define CAN_MOAMR115 (CAN_MO115_AMR)


#define CAN_MO115_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019E78u)




#define CAN_MOAR115 (CAN_MO115_AR)


#define CAN_MO115_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF0019E7Cu)




#define CAN_MOCTR115 (CAN_MO115_CTR)


#define CAN_MO115_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019E74u)




#define CAN_MODATAH115 (CAN_MO115_DATAH)


#define CAN_MO115_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019E70u)




#define CAN_MODATAL115 (CAN_MO115_DATAL)


#define CAN_MO115_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019E60u)




#define CAN_EMO115DATA0 (CAN_MO115_EDATA0)


#define CAN_MO115_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019E64u)




#define CAN_EMO115DATA1 (CAN_MO115_EDATA1)


#define CAN_MO115_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019E68u)




#define CAN_EMO115DATA2 (CAN_MO115_EDATA2)


#define CAN_MO115_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF0019E6Cu)




#define CAN_EMO115DATA3 (CAN_MO115_EDATA3)


#define CAN_MO115_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019E70u)




#define CAN_EMO115DATA4 (CAN_MO115_EDATA4)


#define CAN_MO115_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019E74u)




#define CAN_EMO115DATA5 (CAN_MO115_EDATA5)


#define CAN_MO115_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019E78u)




#define CAN_EMO115DATA6 (CAN_MO115_EDATA6)


#define CAN_MO115_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019E60u)




#define CAN_MOFCR115 (CAN_MO115_FCR)


#define CAN_MO115_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019E64u)




#define CAN_MOFGPR115 (CAN_MO115_FGPR)


#define CAN_MO115_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019E68u)




#define CAN_MOIPR115 (CAN_MO115_IPR)


#define CAN_MO115_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF0019E7Cu)




#define CAN_MOSTAT115 (CAN_MO115_STAT)


#define CAN_MO116_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF0019E8Cu)




#define CAN_MOAMR116 (CAN_MO116_AMR)


#define CAN_MO116_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019E98u)




#define CAN_MOAR116 (CAN_MO116_AR)


#define CAN_MO116_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF0019E9Cu)




#define CAN_MOCTR116 (CAN_MO116_CTR)


#define CAN_MO116_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019E94u)




#define CAN_MODATAH116 (CAN_MO116_DATAH)


#define CAN_MO116_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019E90u)




#define CAN_MODATAL116 (CAN_MO116_DATAL)


#define CAN_MO116_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019E80u)




#define CAN_EMO116DATA0 (CAN_MO116_EDATA0)


#define CAN_MO116_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019E84u)




#define CAN_EMO116DATA1 (CAN_MO116_EDATA1)


#define CAN_MO116_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019E88u)




#define CAN_EMO116DATA2 (CAN_MO116_EDATA2)


#define CAN_MO116_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF0019E8Cu)




#define CAN_EMO116DATA3 (CAN_MO116_EDATA3)


#define CAN_MO116_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019E90u)




#define CAN_EMO116DATA4 (CAN_MO116_EDATA4)


#define CAN_MO116_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019E94u)




#define CAN_EMO116DATA5 (CAN_MO116_EDATA5)


#define CAN_MO116_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019E98u)




#define CAN_EMO116DATA6 (CAN_MO116_EDATA6)


#define CAN_MO116_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019E80u)




#define CAN_MOFCR116 (CAN_MO116_FCR)


#define CAN_MO116_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019E84u)




#define CAN_MOFGPR116 (CAN_MO116_FGPR)


#define CAN_MO116_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019E88u)




#define CAN_MOIPR116 (CAN_MO116_IPR)


#define CAN_MO116_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF0019E9Cu)




#define CAN_MOSTAT116 (CAN_MO116_STAT)


#define CAN_MO117_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF0019EACu)




#define CAN_MOAMR117 (CAN_MO117_AMR)


#define CAN_MO117_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019EB8u)




#define CAN_MOAR117 (CAN_MO117_AR)


#define CAN_MO117_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF0019EBCu)




#define CAN_MOCTR117 (CAN_MO117_CTR)


#define CAN_MO117_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019EB4u)




#define CAN_MODATAH117 (CAN_MO117_DATAH)


#define CAN_MO117_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019EB0u)




#define CAN_MODATAL117 (CAN_MO117_DATAL)


#define CAN_MO117_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019EA0u)




#define CAN_EMO117DATA0 (CAN_MO117_EDATA0)


#define CAN_MO117_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019EA4u)




#define CAN_EMO117DATA1 (CAN_MO117_EDATA1)


#define CAN_MO117_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019EA8u)




#define CAN_EMO117DATA2 (CAN_MO117_EDATA2)


#define CAN_MO117_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF0019EACu)




#define CAN_EMO117DATA3 (CAN_MO117_EDATA3)


#define CAN_MO117_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019EB0u)




#define CAN_EMO117DATA4 (CAN_MO117_EDATA4)


#define CAN_MO117_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019EB4u)




#define CAN_EMO117DATA5 (CAN_MO117_EDATA5)


#define CAN_MO117_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019EB8u)




#define CAN_EMO117DATA6 (CAN_MO117_EDATA6)


#define CAN_MO117_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019EA0u)




#define CAN_MOFCR117 (CAN_MO117_FCR)


#define CAN_MO117_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019EA4u)




#define CAN_MOFGPR117 (CAN_MO117_FGPR)


#define CAN_MO117_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019EA8u)




#define CAN_MOIPR117 (CAN_MO117_IPR)


#define CAN_MO117_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF0019EBCu)




#define CAN_MOSTAT117 (CAN_MO117_STAT)


#define CAN_MO118_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF0019ECCu)




#define CAN_MOAMR118 (CAN_MO118_AMR)


#define CAN_MO118_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019ED8u)




#define CAN_MOAR118 (CAN_MO118_AR)


#define CAN_MO118_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF0019EDCu)




#define CAN_MOCTR118 (CAN_MO118_CTR)


#define CAN_MO118_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019ED4u)




#define CAN_MODATAH118 (CAN_MO118_DATAH)


#define CAN_MO118_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019ED0u)




#define CAN_MODATAL118 (CAN_MO118_DATAL)


#define CAN_MO118_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019EC0u)




#define CAN_EMO118DATA0 (CAN_MO118_EDATA0)


#define CAN_MO118_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019EC4u)




#define CAN_EMO118DATA1 (CAN_MO118_EDATA1)


#define CAN_MO118_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019EC8u)




#define CAN_EMO118DATA2 (CAN_MO118_EDATA2)


#define CAN_MO118_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF0019ECCu)




#define CAN_EMO118DATA3 (CAN_MO118_EDATA3)


#define CAN_MO118_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019ED0u)




#define CAN_EMO118DATA4 (CAN_MO118_EDATA4)


#define CAN_MO118_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019ED4u)




#define CAN_EMO118DATA5 (CAN_MO118_EDATA5)


#define CAN_MO118_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019ED8u)




#define CAN_EMO118DATA6 (CAN_MO118_EDATA6)


#define CAN_MO118_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019EC0u)




#define CAN_MOFCR118 (CAN_MO118_FCR)


#define CAN_MO118_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019EC4u)




#define CAN_MOFGPR118 (CAN_MO118_FGPR)


#define CAN_MO118_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019EC8u)




#define CAN_MOIPR118 (CAN_MO118_IPR)


#define CAN_MO118_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF0019EDCu)




#define CAN_MOSTAT118 (CAN_MO118_STAT)


#define CAN_MO119_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF0019EECu)




#define CAN_MOAMR119 (CAN_MO119_AMR)


#define CAN_MO119_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019EF8u)




#define CAN_MOAR119 (CAN_MO119_AR)


#define CAN_MO119_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF0019EFCu)




#define CAN_MOCTR119 (CAN_MO119_CTR)


#define CAN_MO119_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019EF4u)




#define CAN_MODATAH119 (CAN_MO119_DATAH)


#define CAN_MO119_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019EF0u)




#define CAN_MODATAL119 (CAN_MO119_DATAL)


#define CAN_MO119_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019EE0u)




#define CAN_EMO119DATA0 (CAN_MO119_EDATA0)


#define CAN_MO119_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019EE4u)




#define CAN_EMO119DATA1 (CAN_MO119_EDATA1)


#define CAN_MO119_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019EE8u)




#define CAN_EMO119DATA2 (CAN_MO119_EDATA2)


#define CAN_MO119_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF0019EECu)




#define CAN_EMO119DATA3 (CAN_MO119_EDATA3)


#define CAN_MO119_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019EF0u)




#define CAN_EMO119DATA4 (CAN_MO119_EDATA4)


#define CAN_MO119_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019EF4u)




#define CAN_EMO119DATA5 (CAN_MO119_EDATA5)


#define CAN_MO119_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019EF8u)




#define CAN_EMO119DATA6 (CAN_MO119_EDATA6)


#define CAN_MO119_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019EE0u)




#define CAN_MOFCR119 (CAN_MO119_FCR)


#define CAN_MO119_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019EE4u)




#define CAN_MOFGPR119 (CAN_MO119_FGPR)


#define CAN_MO119_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019EE8u)




#define CAN_MOIPR119 (CAN_MO119_IPR)


#define CAN_MO119_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF0019EFCu)




#define CAN_MOSTAT119 (CAN_MO119_STAT)


#define CAN_MO11_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001916Cu)




#define CAN_MOAMR11 (CAN_MO11_AMR)


#define CAN_MO11_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019178u)




#define CAN_MOAR11 (CAN_MO11_AR)


#define CAN_MO11_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001917Cu)




#define CAN_MOCTR11 (CAN_MO11_CTR)


#define CAN_MO11_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019174u)




#define CAN_MODATAH11 (CAN_MO11_DATAH)


#define CAN_MO11_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019170u)




#define CAN_MODATAL11 (CAN_MO11_DATAL)


#define CAN_MO11_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019160u)




#define CAN_EMO11DATA0 (CAN_MO11_EDATA0)


#define CAN_MO11_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019164u)




#define CAN_EMO11DATA1 (CAN_MO11_EDATA1)


#define CAN_MO11_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019168u)




#define CAN_EMO11DATA2 (CAN_MO11_EDATA2)


#define CAN_MO11_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001916Cu)




#define CAN_EMO11DATA3 (CAN_MO11_EDATA3)


#define CAN_MO11_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019170u)




#define CAN_EMO11DATA4 (CAN_MO11_EDATA4)


#define CAN_MO11_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019174u)




#define CAN_EMO11DATA5 (CAN_MO11_EDATA5)


#define CAN_MO11_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019178u)




#define CAN_EMO11DATA6 (CAN_MO11_EDATA6)


#define CAN_MO11_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019160u)




#define CAN_MOFCR11 (CAN_MO11_FCR)


#define CAN_MO11_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019164u)




#define CAN_MOFGPR11 (CAN_MO11_FGPR)


#define CAN_MO11_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019168u)




#define CAN_MOIPR11 (CAN_MO11_IPR)


#define CAN_MO11_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001917Cu)




#define CAN_MOSTAT11 (CAN_MO11_STAT)


#define CAN_MO120_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF0019F0Cu)




#define CAN_MOAMR120 (CAN_MO120_AMR)


#define CAN_MO120_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019F18u)




#define CAN_MOAR120 (CAN_MO120_AR)


#define CAN_MO120_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF0019F1Cu)




#define CAN_MOCTR120 (CAN_MO120_CTR)


#define CAN_MO120_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019F14u)




#define CAN_MODATAH120 (CAN_MO120_DATAH)


#define CAN_MO120_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019F10u)




#define CAN_MODATAL120 (CAN_MO120_DATAL)


#define CAN_MO120_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019F00u)




#define CAN_EMO120DATA0 (CAN_MO120_EDATA0)


#define CAN_MO120_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019F04u)




#define CAN_EMO120DATA1 (CAN_MO120_EDATA1)


#define CAN_MO120_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019F08u)




#define CAN_EMO120DATA2 (CAN_MO120_EDATA2)


#define CAN_MO120_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF0019F0Cu)




#define CAN_EMO120DATA3 (CAN_MO120_EDATA3)


#define CAN_MO120_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019F10u)




#define CAN_EMO120DATA4 (CAN_MO120_EDATA4)


#define CAN_MO120_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019F14u)




#define CAN_EMO120DATA5 (CAN_MO120_EDATA5)


#define CAN_MO120_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019F18u)




#define CAN_EMO120DATA6 (CAN_MO120_EDATA6)


#define CAN_MO120_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019F00u)




#define CAN_MOFCR120 (CAN_MO120_FCR)


#define CAN_MO120_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019F04u)




#define CAN_MOFGPR120 (CAN_MO120_FGPR)


#define CAN_MO120_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019F08u)




#define CAN_MOIPR120 (CAN_MO120_IPR)


#define CAN_MO120_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF0019F1Cu)




#define CAN_MOSTAT120 (CAN_MO120_STAT)


#define CAN_MO121_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF0019F2Cu)




#define CAN_MOAMR121 (CAN_MO121_AMR)


#define CAN_MO121_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019F38u)




#define CAN_MOAR121 (CAN_MO121_AR)


#define CAN_MO121_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF0019F3Cu)




#define CAN_MOCTR121 (CAN_MO121_CTR)


#define CAN_MO121_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019F34u)




#define CAN_MODATAH121 (CAN_MO121_DATAH)


#define CAN_MO121_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019F30u)




#define CAN_MODATAL121 (CAN_MO121_DATAL)


#define CAN_MO121_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019F20u)




#define CAN_EMO121DATA0 (CAN_MO121_EDATA0)


#define CAN_MO121_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019F24u)




#define CAN_EMO121DATA1 (CAN_MO121_EDATA1)


#define CAN_MO121_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019F28u)




#define CAN_EMO121DATA2 (CAN_MO121_EDATA2)


#define CAN_MO121_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF0019F2Cu)




#define CAN_EMO121DATA3 (CAN_MO121_EDATA3)


#define CAN_MO121_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019F30u)




#define CAN_EMO121DATA4 (CAN_MO121_EDATA4)


#define CAN_MO121_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019F34u)




#define CAN_EMO121DATA5 (CAN_MO121_EDATA5)


#define CAN_MO121_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019F38u)




#define CAN_EMO121DATA6 (CAN_MO121_EDATA6)


#define CAN_MO121_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019F20u)




#define CAN_MOFCR121 (CAN_MO121_FCR)


#define CAN_MO121_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019F24u)




#define CAN_MOFGPR121 (CAN_MO121_FGPR)


#define CAN_MO121_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019F28u)




#define CAN_MOIPR121 (CAN_MO121_IPR)


#define CAN_MO121_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF0019F3Cu)




#define CAN_MOSTAT121 (CAN_MO121_STAT)


#define CAN_MO122_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF0019F4Cu)




#define CAN_MOAMR122 (CAN_MO122_AMR)


#define CAN_MO122_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019F58u)




#define CAN_MOAR122 (CAN_MO122_AR)


#define CAN_MO122_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF0019F5Cu)




#define CAN_MOCTR122 (CAN_MO122_CTR)


#define CAN_MO122_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019F54u)




#define CAN_MODATAH122 (CAN_MO122_DATAH)


#define CAN_MO122_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019F50u)




#define CAN_MODATAL122 (CAN_MO122_DATAL)


#define CAN_MO122_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019F40u)




#define CAN_EMO122DATA0 (CAN_MO122_EDATA0)


#define CAN_MO122_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019F44u)




#define CAN_EMO122DATA1 (CAN_MO122_EDATA1)


#define CAN_MO122_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019F48u)




#define CAN_EMO122DATA2 (CAN_MO122_EDATA2)


#define CAN_MO122_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF0019F4Cu)




#define CAN_EMO122DATA3 (CAN_MO122_EDATA3)


#define CAN_MO122_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019F50u)




#define CAN_EMO122DATA4 (CAN_MO122_EDATA4)


#define CAN_MO122_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019F54u)




#define CAN_EMO122DATA5 (CAN_MO122_EDATA5)


#define CAN_MO122_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019F58u)




#define CAN_EMO122DATA6 (CAN_MO122_EDATA6)


#define CAN_MO122_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019F40u)




#define CAN_MOFCR122 (CAN_MO122_FCR)


#define CAN_MO122_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019F44u)




#define CAN_MOFGPR122 (CAN_MO122_FGPR)


#define CAN_MO122_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019F48u)




#define CAN_MOIPR122 (CAN_MO122_IPR)


#define CAN_MO122_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF0019F5Cu)




#define CAN_MOSTAT122 (CAN_MO122_STAT)


#define CAN_MO123_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF0019F6Cu)




#define CAN_MOAMR123 (CAN_MO123_AMR)


#define CAN_MO123_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019F78u)




#define CAN_MOAR123 (CAN_MO123_AR)


#define CAN_MO123_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF0019F7Cu)




#define CAN_MOCTR123 (CAN_MO123_CTR)


#define CAN_MO123_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019F74u)




#define CAN_MODATAH123 (CAN_MO123_DATAH)


#define CAN_MO123_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019F70u)




#define CAN_MODATAL123 (CAN_MO123_DATAL)


#define CAN_MO123_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019F60u)




#define CAN_EMO123DATA0 (CAN_MO123_EDATA0)


#define CAN_MO123_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019F64u)




#define CAN_EMO123DATA1 (CAN_MO123_EDATA1)


#define CAN_MO123_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019F68u)




#define CAN_EMO123DATA2 (CAN_MO123_EDATA2)


#define CAN_MO123_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF0019F6Cu)




#define CAN_EMO123DATA3 (CAN_MO123_EDATA3)


#define CAN_MO123_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019F70u)




#define CAN_EMO123DATA4 (CAN_MO123_EDATA4)


#define CAN_MO123_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019F74u)




#define CAN_EMO123DATA5 (CAN_MO123_EDATA5)


#define CAN_MO123_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019F78u)




#define CAN_EMO123DATA6 (CAN_MO123_EDATA6)


#define CAN_MO123_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019F60u)




#define CAN_MOFCR123 (CAN_MO123_FCR)


#define CAN_MO123_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019F64u)




#define CAN_MOFGPR123 (CAN_MO123_FGPR)


#define CAN_MO123_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019F68u)




#define CAN_MOIPR123 (CAN_MO123_IPR)


#define CAN_MO123_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF0019F7Cu)




#define CAN_MOSTAT123 (CAN_MO123_STAT)


#define CAN_MO124_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF0019F8Cu)




#define CAN_MOAMR124 (CAN_MO124_AMR)


#define CAN_MO124_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019F98u)




#define CAN_MOAR124 (CAN_MO124_AR)


#define CAN_MO124_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF0019F9Cu)




#define CAN_MOCTR124 (CAN_MO124_CTR)


#define CAN_MO124_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019F94u)




#define CAN_MODATAH124 (CAN_MO124_DATAH)


#define CAN_MO124_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019F90u)




#define CAN_MODATAL124 (CAN_MO124_DATAL)


#define CAN_MO124_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019F80u)




#define CAN_EMO124DATA0 (CAN_MO124_EDATA0)


#define CAN_MO124_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019F84u)




#define CAN_EMO124DATA1 (CAN_MO124_EDATA1)


#define CAN_MO124_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019F88u)




#define CAN_EMO124DATA2 (CAN_MO124_EDATA2)


#define CAN_MO124_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF0019F8Cu)




#define CAN_EMO124DATA3 (CAN_MO124_EDATA3)


#define CAN_MO124_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019F90u)




#define CAN_EMO124DATA4 (CAN_MO124_EDATA4)


#define CAN_MO124_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019F94u)




#define CAN_EMO124DATA5 (CAN_MO124_EDATA5)


#define CAN_MO124_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019F98u)




#define CAN_EMO124DATA6 (CAN_MO124_EDATA6)


#define CAN_MO124_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019F80u)




#define CAN_MOFCR124 (CAN_MO124_FCR)


#define CAN_MO124_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019F84u)




#define CAN_MOFGPR124 (CAN_MO124_FGPR)


#define CAN_MO124_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019F88u)




#define CAN_MOIPR124 (CAN_MO124_IPR)


#define CAN_MO124_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF0019F9Cu)




#define CAN_MOSTAT124 (CAN_MO124_STAT)


#define CAN_MO125_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF0019FACu)




#define CAN_MOAMR125 (CAN_MO125_AMR)


#define CAN_MO125_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019FB8u)




#define CAN_MOAR125 (CAN_MO125_AR)


#define CAN_MO125_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF0019FBCu)




#define CAN_MOCTR125 (CAN_MO125_CTR)


#define CAN_MO125_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019FB4u)




#define CAN_MODATAH125 (CAN_MO125_DATAH)


#define CAN_MO125_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019FB0u)




#define CAN_MODATAL125 (CAN_MO125_DATAL)


#define CAN_MO125_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019FA0u)




#define CAN_EMO125DATA0 (CAN_MO125_EDATA0)


#define CAN_MO125_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019FA4u)




#define CAN_EMO125DATA1 (CAN_MO125_EDATA1)


#define CAN_MO125_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019FA8u)




#define CAN_EMO125DATA2 (CAN_MO125_EDATA2)


#define CAN_MO125_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF0019FACu)




#define CAN_EMO125DATA3 (CAN_MO125_EDATA3)


#define CAN_MO125_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019FB0u)




#define CAN_EMO125DATA4 (CAN_MO125_EDATA4)


#define CAN_MO125_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019FB4u)




#define CAN_EMO125DATA5 (CAN_MO125_EDATA5)


#define CAN_MO125_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019FB8u)




#define CAN_EMO125DATA6 (CAN_MO125_EDATA6)


#define CAN_MO125_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019FA0u)




#define CAN_MOFCR125 (CAN_MO125_FCR)


#define CAN_MO125_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019FA4u)




#define CAN_MOFGPR125 (CAN_MO125_FGPR)


#define CAN_MO125_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019FA8u)




#define CAN_MOIPR125 (CAN_MO125_IPR)


#define CAN_MO125_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF0019FBCu)




#define CAN_MOSTAT125 (CAN_MO125_STAT)


#define CAN_MO126_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF0019FCCu)




#define CAN_MOAMR126 (CAN_MO126_AMR)


#define CAN_MO126_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019FD8u)




#define CAN_MOAR126 (CAN_MO126_AR)


#define CAN_MO126_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF0019FDCu)




#define CAN_MOCTR126 (CAN_MO126_CTR)


#define CAN_MO126_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019FD4u)




#define CAN_MODATAH126 (CAN_MO126_DATAH)


#define CAN_MO126_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019FD0u)




#define CAN_MODATAL126 (CAN_MO126_DATAL)


#define CAN_MO126_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019FC0u)




#define CAN_EMO126DATA0 (CAN_MO126_EDATA0)


#define CAN_MO126_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019FC4u)




#define CAN_EMO126DATA1 (CAN_MO126_EDATA1)


#define CAN_MO126_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019FC8u)




#define CAN_EMO126DATA2 (CAN_MO126_EDATA2)


#define CAN_MO126_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF0019FCCu)




#define CAN_EMO126DATA3 (CAN_MO126_EDATA3)


#define CAN_MO126_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019FD0u)




#define CAN_EMO126DATA4 (CAN_MO126_EDATA4)


#define CAN_MO126_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019FD4u)




#define CAN_EMO126DATA5 (CAN_MO126_EDATA5)


#define CAN_MO126_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019FD8u)




#define CAN_EMO126DATA6 (CAN_MO126_EDATA6)


#define CAN_MO126_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019FC0u)




#define CAN_MOFCR126 (CAN_MO126_FCR)


#define CAN_MO126_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019FC4u)




#define CAN_MOFGPR126 (CAN_MO126_FGPR)


#define CAN_MO126_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019FC8u)




#define CAN_MOIPR126 (CAN_MO126_IPR)


#define CAN_MO126_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF0019FDCu)




#define CAN_MOSTAT126 (CAN_MO126_STAT)


#define CAN_MO127_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF0019FECu)




#define CAN_MOAMR127 (CAN_MO127_AMR)


#define CAN_MO127_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019FF8u)




#define CAN_MOAR127 (CAN_MO127_AR)


#define CAN_MO127_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF0019FFCu)




#define CAN_MOCTR127 (CAN_MO127_CTR)


#define CAN_MO127_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019FF4u)




#define CAN_MODATAH127 (CAN_MO127_DATAH)


#define CAN_MO127_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019FF0u)




#define CAN_MODATAL127 (CAN_MO127_DATAL)


#define CAN_MO127_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019FE0u)




#define CAN_EMO127DATA0 (CAN_MO127_EDATA0)


#define CAN_MO127_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019FE4u)




#define CAN_EMO127DATA1 (CAN_MO127_EDATA1)


#define CAN_MO127_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019FE8u)




#define CAN_EMO127DATA2 (CAN_MO127_EDATA2)


#define CAN_MO127_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF0019FECu)




#define CAN_EMO127DATA3 (CAN_MO127_EDATA3)


#define CAN_MO127_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019FF0u)




#define CAN_EMO127DATA4 (CAN_MO127_EDATA4)


#define CAN_MO127_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019FF4u)




#define CAN_EMO127DATA5 (CAN_MO127_EDATA5)


#define CAN_MO127_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019FF8u)




#define CAN_EMO127DATA6 (CAN_MO127_EDATA6)


#define CAN_MO127_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019FE0u)




#define CAN_MOFCR127 (CAN_MO127_FCR)


#define CAN_MO127_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019FE4u)




#define CAN_MOFGPR127 (CAN_MO127_FGPR)


#define CAN_MO127_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019FE8u)




#define CAN_MOIPR127 (CAN_MO127_IPR)


#define CAN_MO127_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF0019FFCu)




#define CAN_MOSTAT127 (CAN_MO127_STAT)


#define CAN_MO128_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A00Cu)




#define CAN_MOAMR128 (CAN_MO128_AMR)


#define CAN_MO128_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A018u)




#define CAN_MOAR128 (CAN_MO128_AR)


#define CAN_MO128_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A01Cu)




#define CAN_MOCTR128 (CAN_MO128_CTR)


#define CAN_MO128_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A014u)




#define CAN_MODATAH128 (CAN_MO128_DATAH)


#define CAN_MO128_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A010u)




#define CAN_MODATAL128 (CAN_MO128_DATAL)


#define CAN_MO128_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A000u)




#define CAN_EMO128DATA0 (CAN_MO128_EDATA0)


#define CAN_MO128_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A004u)




#define CAN_EMO128DATA1 (CAN_MO128_EDATA1)


#define CAN_MO128_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A008u)




#define CAN_EMO128DATA2 (CAN_MO128_EDATA2)


#define CAN_MO128_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A00Cu)




#define CAN_EMO128DATA3 (CAN_MO128_EDATA3)


#define CAN_MO128_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A010u)




#define CAN_EMO128DATA4 (CAN_MO128_EDATA4)


#define CAN_MO128_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A014u)




#define CAN_EMO128DATA5 (CAN_MO128_EDATA5)


#define CAN_MO128_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A018u)




#define CAN_EMO128DATA6 (CAN_MO128_EDATA6)


#define CAN_MO128_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A000u)




#define CAN_MOFCR128 (CAN_MO128_FCR)


#define CAN_MO128_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A004u)




#define CAN_MOFGPR128 (CAN_MO128_FGPR)


#define CAN_MO128_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A008u)




#define CAN_MOIPR128 (CAN_MO128_IPR)


#define CAN_MO128_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A01Cu)




#define CAN_MOSTAT128 (CAN_MO128_STAT)


#define CAN_MO129_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A02Cu)




#define CAN_MOAMR129 (CAN_MO129_AMR)


#define CAN_MO129_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A038u)




#define CAN_MOAR129 (CAN_MO129_AR)


#define CAN_MO129_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A03Cu)




#define CAN_MOCTR129 (CAN_MO129_CTR)


#define CAN_MO129_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A034u)




#define CAN_MODATAH129 (CAN_MO129_DATAH)


#define CAN_MO129_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A030u)




#define CAN_MODATAL129 (CAN_MO129_DATAL)


#define CAN_MO129_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A020u)




#define CAN_EMO129DATA0 (CAN_MO129_EDATA0)


#define CAN_MO129_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A024u)




#define CAN_EMO129DATA1 (CAN_MO129_EDATA1)


#define CAN_MO129_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A028u)




#define CAN_EMO129DATA2 (CAN_MO129_EDATA2)


#define CAN_MO129_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A02Cu)




#define CAN_EMO129DATA3 (CAN_MO129_EDATA3)


#define CAN_MO129_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A030u)




#define CAN_EMO129DATA4 (CAN_MO129_EDATA4)


#define CAN_MO129_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A034u)




#define CAN_EMO129DATA5 (CAN_MO129_EDATA5)


#define CAN_MO129_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A038u)




#define CAN_EMO129DATA6 (CAN_MO129_EDATA6)


#define CAN_MO129_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A020u)




#define CAN_MOFCR129 (CAN_MO129_FCR)


#define CAN_MO129_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A024u)




#define CAN_MOFGPR129 (CAN_MO129_FGPR)


#define CAN_MO129_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A028u)




#define CAN_MOIPR129 (CAN_MO129_IPR)


#define CAN_MO129_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A03Cu)




#define CAN_MOSTAT129 (CAN_MO129_STAT)


#define CAN_MO12_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001918Cu)




#define CAN_MOAMR12 (CAN_MO12_AMR)


#define CAN_MO12_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019198u)




#define CAN_MOAR12 (CAN_MO12_AR)


#define CAN_MO12_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001919Cu)




#define CAN_MOCTR12 (CAN_MO12_CTR)


#define CAN_MO12_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019194u)




#define CAN_MODATAH12 (CAN_MO12_DATAH)


#define CAN_MO12_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019190u)




#define CAN_MODATAL12 (CAN_MO12_DATAL)


#define CAN_MO12_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019180u)




#define CAN_EMO12DATA0 (CAN_MO12_EDATA0)


#define CAN_MO12_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019184u)




#define CAN_EMO12DATA1 (CAN_MO12_EDATA1)


#define CAN_MO12_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019188u)




#define CAN_EMO12DATA2 (CAN_MO12_EDATA2)


#define CAN_MO12_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001918Cu)




#define CAN_EMO12DATA3 (CAN_MO12_EDATA3)


#define CAN_MO12_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019190u)




#define CAN_EMO12DATA4 (CAN_MO12_EDATA4)


#define CAN_MO12_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019194u)




#define CAN_EMO12DATA5 (CAN_MO12_EDATA5)


#define CAN_MO12_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019198u)




#define CAN_EMO12DATA6 (CAN_MO12_EDATA6)


#define CAN_MO12_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019180u)




#define CAN_MOFCR12 (CAN_MO12_FCR)


#define CAN_MO12_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019184u)




#define CAN_MOFGPR12 (CAN_MO12_FGPR)


#define CAN_MO12_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019188u)




#define CAN_MOIPR12 (CAN_MO12_IPR)


#define CAN_MO12_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001919Cu)




#define CAN_MOSTAT12 (CAN_MO12_STAT)


#define CAN_MO130_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A04Cu)




#define CAN_MOAMR130 (CAN_MO130_AMR)


#define CAN_MO130_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A058u)




#define CAN_MOAR130 (CAN_MO130_AR)


#define CAN_MO130_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A05Cu)




#define CAN_MOCTR130 (CAN_MO130_CTR)


#define CAN_MO130_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A054u)




#define CAN_MODATAH130 (CAN_MO130_DATAH)


#define CAN_MO130_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A050u)




#define CAN_MODATAL130 (CAN_MO130_DATAL)


#define CAN_MO130_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A040u)




#define CAN_EMO130DATA0 (CAN_MO130_EDATA0)


#define CAN_MO130_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A044u)




#define CAN_EMO130DATA1 (CAN_MO130_EDATA1)


#define CAN_MO130_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A048u)




#define CAN_EMO130DATA2 (CAN_MO130_EDATA2)


#define CAN_MO130_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A04Cu)




#define CAN_EMO130DATA3 (CAN_MO130_EDATA3)


#define CAN_MO130_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A050u)




#define CAN_EMO130DATA4 (CAN_MO130_EDATA4)


#define CAN_MO130_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A054u)




#define CAN_EMO130DATA5 (CAN_MO130_EDATA5)


#define CAN_MO130_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A058u)




#define CAN_EMO130DATA6 (CAN_MO130_EDATA6)


#define CAN_MO130_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A040u)




#define CAN_MOFCR130 (CAN_MO130_FCR)


#define CAN_MO130_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A044u)




#define CAN_MOFGPR130 (CAN_MO130_FGPR)


#define CAN_MO130_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A048u)




#define CAN_MOIPR130 (CAN_MO130_IPR)


#define CAN_MO130_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A05Cu)




#define CAN_MOSTAT130 (CAN_MO130_STAT)


#define CAN_MO131_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A06Cu)




#define CAN_MOAMR131 (CAN_MO131_AMR)


#define CAN_MO131_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A078u)




#define CAN_MOAR131 (CAN_MO131_AR)


#define CAN_MO131_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A07Cu)




#define CAN_MOCTR131 (CAN_MO131_CTR)


#define CAN_MO131_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A074u)




#define CAN_MODATAH131 (CAN_MO131_DATAH)


#define CAN_MO131_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A070u)




#define CAN_MODATAL131 (CAN_MO131_DATAL)


#define CAN_MO131_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A060u)




#define CAN_EMO131DATA0 (CAN_MO131_EDATA0)


#define CAN_MO131_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A064u)




#define CAN_EMO131DATA1 (CAN_MO131_EDATA1)


#define CAN_MO131_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A068u)




#define CAN_EMO131DATA2 (CAN_MO131_EDATA2)


#define CAN_MO131_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A06Cu)




#define CAN_EMO131DATA3 (CAN_MO131_EDATA3)


#define CAN_MO131_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A070u)




#define CAN_EMO131DATA4 (CAN_MO131_EDATA4)


#define CAN_MO131_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A074u)




#define CAN_EMO131DATA5 (CAN_MO131_EDATA5)


#define CAN_MO131_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A078u)




#define CAN_EMO131DATA6 (CAN_MO131_EDATA6)


#define CAN_MO131_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A060u)




#define CAN_MOFCR131 (CAN_MO131_FCR)


#define CAN_MO131_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A064u)




#define CAN_MOFGPR131 (CAN_MO131_FGPR)


#define CAN_MO131_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A068u)




#define CAN_MOIPR131 (CAN_MO131_IPR)


#define CAN_MO131_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A07Cu)




#define CAN_MOSTAT131 (CAN_MO131_STAT)


#define CAN_MO132_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A08Cu)




#define CAN_MOAMR132 (CAN_MO132_AMR)


#define CAN_MO132_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A098u)




#define CAN_MOAR132 (CAN_MO132_AR)


#define CAN_MO132_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A09Cu)




#define CAN_MOCTR132 (CAN_MO132_CTR)


#define CAN_MO132_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A094u)




#define CAN_MODATAH132 (CAN_MO132_DATAH)


#define CAN_MO132_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A090u)




#define CAN_MODATAL132 (CAN_MO132_DATAL)


#define CAN_MO132_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A080u)




#define CAN_EMO132DATA0 (CAN_MO132_EDATA0)


#define CAN_MO132_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A084u)




#define CAN_EMO132DATA1 (CAN_MO132_EDATA1)


#define CAN_MO132_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A088u)




#define CAN_EMO132DATA2 (CAN_MO132_EDATA2)


#define CAN_MO132_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A08Cu)




#define CAN_EMO132DATA3 (CAN_MO132_EDATA3)


#define CAN_MO132_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A090u)




#define CAN_EMO132DATA4 (CAN_MO132_EDATA4)


#define CAN_MO132_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A094u)




#define CAN_EMO132DATA5 (CAN_MO132_EDATA5)


#define CAN_MO132_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A098u)




#define CAN_EMO132DATA6 (CAN_MO132_EDATA6)


#define CAN_MO132_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A080u)




#define CAN_MOFCR132 (CAN_MO132_FCR)


#define CAN_MO132_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A084u)




#define CAN_MOFGPR132 (CAN_MO132_FGPR)


#define CAN_MO132_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A088u)




#define CAN_MOIPR132 (CAN_MO132_IPR)


#define CAN_MO132_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A09Cu)




#define CAN_MOSTAT132 (CAN_MO132_STAT)


#define CAN_MO133_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A0ACu)




#define CAN_MOAMR133 (CAN_MO133_AMR)


#define CAN_MO133_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A0B8u)




#define CAN_MOAR133 (CAN_MO133_AR)


#define CAN_MO133_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A0BCu)




#define CAN_MOCTR133 (CAN_MO133_CTR)


#define CAN_MO133_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A0B4u)




#define CAN_MODATAH133 (CAN_MO133_DATAH)


#define CAN_MO133_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A0B0u)




#define CAN_MODATAL133 (CAN_MO133_DATAL)


#define CAN_MO133_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A0A0u)




#define CAN_EMO133DATA0 (CAN_MO133_EDATA0)


#define CAN_MO133_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A0A4u)




#define CAN_EMO133DATA1 (CAN_MO133_EDATA1)


#define CAN_MO133_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A0A8u)




#define CAN_EMO133DATA2 (CAN_MO133_EDATA2)


#define CAN_MO133_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A0ACu)




#define CAN_EMO133DATA3 (CAN_MO133_EDATA3)


#define CAN_MO133_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A0B0u)




#define CAN_EMO133DATA4 (CAN_MO133_EDATA4)


#define CAN_MO133_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A0B4u)




#define CAN_EMO133DATA5 (CAN_MO133_EDATA5)


#define CAN_MO133_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A0B8u)




#define CAN_EMO133DATA6 (CAN_MO133_EDATA6)


#define CAN_MO133_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A0A0u)




#define CAN_MOFCR133 (CAN_MO133_FCR)


#define CAN_MO133_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A0A4u)




#define CAN_MOFGPR133 (CAN_MO133_FGPR)


#define CAN_MO133_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A0A8u)




#define CAN_MOIPR133 (CAN_MO133_IPR)


#define CAN_MO133_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A0BCu)




#define CAN_MOSTAT133 (CAN_MO133_STAT)


#define CAN_MO134_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A0CCu)




#define CAN_MOAMR134 (CAN_MO134_AMR)


#define CAN_MO134_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A0D8u)




#define CAN_MOAR134 (CAN_MO134_AR)


#define CAN_MO134_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A0DCu)




#define CAN_MOCTR134 (CAN_MO134_CTR)


#define CAN_MO134_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A0D4u)




#define CAN_MODATAH134 (CAN_MO134_DATAH)


#define CAN_MO134_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A0D0u)




#define CAN_MODATAL134 (CAN_MO134_DATAL)


#define CAN_MO134_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A0C0u)




#define CAN_EMO134DATA0 (CAN_MO134_EDATA0)


#define CAN_MO134_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A0C4u)




#define CAN_EMO134DATA1 (CAN_MO134_EDATA1)


#define CAN_MO134_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A0C8u)




#define CAN_EMO134DATA2 (CAN_MO134_EDATA2)


#define CAN_MO134_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A0CCu)




#define CAN_EMO134DATA3 (CAN_MO134_EDATA3)


#define CAN_MO134_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A0D0u)




#define CAN_EMO134DATA4 (CAN_MO134_EDATA4)


#define CAN_MO134_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A0D4u)




#define CAN_EMO134DATA5 (CAN_MO134_EDATA5)


#define CAN_MO134_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A0D8u)




#define CAN_EMO134DATA6 (CAN_MO134_EDATA6)


#define CAN_MO134_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A0C0u)




#define CAN_MOFCR134 (CAN_MO134_FCR)


#define CAN_MO134_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A0C4u)




#define CAN_MOFGPR134 (CAN_MO134_FGPR)


#define CAN_MO134_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A0C8u)




#define CAN_MOIPR134 (CAN_MO134_IPR)


#define CAN_MO134_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A0DCu)




#define CAN_MOSTAT134 (CAN_MO134_STAT)


#define CAN_MO135_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A0ECu)




#define CAN_MOAMR135 (CAN_MO135_AMR)


#define CAN_MO135_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A0F8u)




#define CAN_MOAR135 (CAN_MO135_AR)


#define CAN_MO135_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A0FCu)




#define CAN_MOCTR135 (CAN_MO135_CTR)


#define CAN_MO135_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A0F4u)




#define CAN_MODATAH135 (CAN_MO135_DATAH)


#define CAN_MO135_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A0F0u)




#define CAN_MODATAL135 (CAN_MO135_DATAL)


#define CAN_MO135_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A0E0u)




#define CAN_EMO135DATA0 (CAN_MO135_EDATA0)


#define CAN_MO135_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A0E4u)




#define CAN_EMO135DATA1 (CAN_MO135_EDATA1)


#define CAN_MO135_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A0E8u)




#define CAN_EMO135DATA2 (CAN_MO135_EDATA2)


#define CAN_MO135_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A0ECu)




#define CAN_EMO135DATA3 (CAN_MO135_EDATA3)


#define CAN_MO135_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A0F0u)




#define CAN_EMO135DATA4 (CAN_MO135_EDATA4)


#define CAN_MO135_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A0F4u)




#define CAN_EMO135DATA5 (CAN_MO135_EDATA5)


#define CAN_MO135_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A0F8u)




#define CAN_EMO135DATA6 (CAN_MO135_EDATA6)


#define CAN_MO135_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A0E0u)




#define CAN_MOFCR135 (CAN_MO135_FCR)


#define CAN_MO135_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A0E4u)




#define CAN_MOFGPR135 (CAN_MO135_FGPR)


#define CAN_MO135_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A0E8u)




#define CAN_MOIPR135 (CAN_MO135_IPR)


#define CAN_MO135_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A0FCu)




#define CAN_MOSTAT135 (CAN_MO135_STAT)


#define CAN_MO136_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A10Cu)




#define CAN_MOAMR136 (CAN_MO136_AMR)


#define CAN_MO136_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A118u)




#define CAN_MOAR136 (CAN_MO136_AR)


#define CAN_MO136_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A11Cu)




#define CAN_MOCTR136 (CAN_MO136_CTR)


#define CAN_MO136_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A114u)




#define CAN_MODATAH136 (CAN_MO136_DATAH)


#define CAN_MO136_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A110u)




#define CAN_MODATAL136 (CAN_MO136_DATAL)


#define CAN_MO136_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A100u)




#define CAN_EMO136DATA0 (CAN_MO136_EDATA0)


#define CAN_MO136_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A104u)




#define CAN_EMO136DATA1 (CAN_MO136_EDATA1)


#define CAN_MO136_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A108u)




#define CAN_EMO136DATA2 (CAN_MO136_EDATA2)


#define CAN_MO136_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A10Cu)




#define CAN_EMO136DATA3 (CAN_MO136_EDATA3)


#define CAN_MO136_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A110u)




#define CAN_EMO136DATA4 (CAN_MO136_EDATA4)


#define CAN_MO136_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A114u)




#define CAN_EMO136DATA5 (CAN_MO136_EDATA5)


#define CAN_MO136_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A118u)




#define CAN_EMO136DATA6 (CAN_MO136_EDATA6)


#define CAN_MO136_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A100u)




#define CAN_MOFCR136 (CAN_MO136_FCR)


#define CAN_MO136_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A104u)




#define CAN_MOFGPR136 (CAN_MO136_FGPR)


#define CAN_MO136_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A108u)




#define CAN_MOIPR136 (CAN_MO136_IPR)


#define CAN_MO136_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A11Cu)




#define CAN_MOSTAT136 (CAN_MO136_STAT)


#define CAN_MO137_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A12Cu)




#define CAN_MOAMR137 (CAN_MO137_AMR)


#define CAN_MO137_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A138u)




#define CAN_MOAR137 (CAN_MO137_AR)


#define CAN_MO137_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A13Cu)




#define CAN_MOCTR137 (CAN_MO137_CTR)


#define CAN_MO137_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A134u)




#define CAN_MODATAH137 (CAN_MO137_DATAH)


#define CAN_MO137_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A130u)




#define CAN_MODATAL137 (CAN_MO137_DATAL)


#define CAN_MO137_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A120u)




#define CAN_EMO137DATA0 (CAN_MO137_EDATA0)


#define CAN_MO137_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A124u)




#define CAN_EMO137DATA1 (CAN_MO137_EDATA1)


#define CAN_MO137_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A128u)




#define CAN_EMO137DATA2 (CAN_MO137_EDATA2)


#define CAN_MO137_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A12Cu)




#define CAN_EMO137DATA3 (CAN_MO137_EDATA3)


#define CAN_MO137_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A130u)




#define CAN_EMO137DATA4 (CAN_MO137_EDATA4)


#define CAN_MO137_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A134u)




#define CAN_EMO137DATA5 (CAN_MO137_EDATA5)


#define CAN_MO137_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A138u)




#define CAN_EMO137DATA6 (CAN_MO137_EDATA6)


#define CAN_MO137_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A120u)




#define CAN_MOFCR137 (CAN_MO137_FCR)


#define CAN_MO137_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A124u)




#define CAN_MOFGPR137 (CAN_MO137_FGPR)


#define CAN_MO137_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A128u)




#define CAN_MOIPR137 (CAN_MO137_IPR)


#define CAN_MO137_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A13Cu)




#define CAN_MOSTAT137 (CAN_MO137_STAT)


#define CAN_MO138_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A14Cu)




#define CAN_MOAMR138 (CAN_MO138_AMR)


#define CAN_MO138_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A158u)




#define CAN_MOAR138 (CAN_MO138_AR)


#define CAN_MO138_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A15Cu)




#define CAN_MOCTR138 (CAN_MO138_CTR)


#define CAN_MO138_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A154u)




#define CAN_MODATAH138 (CAN_MO138_DATAH)


#define CAN_MO138_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A150u)




#define CAN_MODATAL138 (CAN_MO138_DATAL)


#define CAN_MO138_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A140u)




#define CAN_EMO138DATA0 (CAN_MO138_EDATA0)


#define CAN_MO138_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A144u)




#define CAN_EMO138DATA1 (CAN_MO138_EDATA1)


#define CAN_MO138_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A148u)




#define CAN_EMO138DATA2 (CAN_MO138_EDATA2)


#define CAN_MO138_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A14Cu)




#define CAN_EMO138DATA3 (CAN_MO138_EDATA3)


#define CAN_MO138_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A150u)




#define CAN_EMO138DATA4 (CAN_MO138_EDATA4)


#define CAN_MO138_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A154u)




#define CAN_EMO138DATA5 (CAN_MO138_EDATA5)


#define CAN_MO138_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A158u)




#define CAN_EMO138DATA6 (CAN_MO138_EDATA6)


#define CAN_MO138_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A140u)




#define CAN_MOFCR138 (CAN_MO138_FCR)


#define CAN_MO138_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A144u)




#define CAN_MOFGPR138 (CAN_MO138_FGPR)


#define CAN_MO138_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A148u)




#define CAN_MOIPR138 (CAN_MO138_IPR)


#define CAN_MO138_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A15Cu)




#define CAN_MOSTAT138 (CAN_MO138_STAT)


#define CAN_MO139_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A16Cu)




#define CAN_MOAMR139 (CAN_MO139_AMR)


#define CAN_MO139_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A178u)




#define CAN_MOAR139 (CAN_MO139_AR)


#define CAN_MO139_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A17Cu)




#define CAN_MOCTR139 (CAN_MO139_CTR)


#define CAN_MO139_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A174u)




#define CAN_MODATAH139 (CAN_MO139_DATAH)


#define CAN_MO139_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A170u)




#define CAN_MODATAL139 (CAN_MO139_DATAL)


#define CAN_MO139_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A160u)




#define CAN_EMO139DATA0 (CAN_MO139_EDATA0)


#define CAN_MO139_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A164u)




#define CAN_EMO139DATA1 (CAN_MO139_EDATA1)


#define CAN_MO139_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A168u)




#define CAN_EMO139DATA2 (CAN_MO139_EDATA2)


#define CAN_MO139_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A16Cu)




#define CAN_EMO139DATA3 (CAN_MO139_EDATA3)


#define CAN_MO139_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A170u)




#define CAN_EMO139DATA4 (CAN_MO139_EDATA4)


#define CAN_MO139_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A174u)




#define CAN_EMO139DATA5 (CAN_MO139_EDATA5)


#define CAN_MO139_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A178u)




#define CAN_EMO139DATA6 (CAN_MO139_EDATA6)


#define CAN_MO139_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A160u)




#define CAN_MOFCR139 (CAN_MO139_FCR)


#define CAN_MO139_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A164u)




#define CAN_MOFGPR139 (CAN_MO139_FGPR)


#define CAN_MO139_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A168u)




#define CAN_MOIPR139 (CAN_MO139_IPR)


#define CAN_MO139_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A17Cu)




#define CAN_MOSTAT139 (CAN_MO139_STAT)


#define CAN_MO13_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF00191ACu)




#define CAN_MOAMR13 (CAN_MO13_AMR)


#define CAN_MO13_AR (*(volatile Ifx_CAN_MO_AR*)0xF00191B8u)




#define CAN_MOAR13 (CAN_MO13_AR)


#define CAN_MO13_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF00191BCu)




#define CAN_MOCTR13 (CAN_MO13_CTR)


#define CAN_MO13_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF00191B4u)




#define CAN_MODATAH13 (CAN_MO13_DATAH)


#define CAN_MO13_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF00191B0u)




#define CAN_MODATAL13 (CAN_MO13_DATAL)


#define CAN_MO13_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF00191A0u)




#define CAN_EMO13DATA0 (CAN_MO13_EDATA0)


#define CAN_MO13_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF00191A4u)




#define CAN_EMO13DATA1 (CAN_MO13_EDATA1)


#define CAN_MO13_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF00191A8u)




#define CAN_EMO13DATA2 (CAN_MO13_EDATA2)


#define CAN_MO13_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF00191ACu)




#define CAN_EMO13DATA3 (CAN_MO13_EDATA3)


#define CAN_MO13_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF00191B0u)




#define CAN_EMO13DATA4 (CAN_MO13_EDATA4)


#define CAN_MO13_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF00191B4u)




#define CAN_EMO13DATA5 (CAN_MO13_EDATA5)


#define CAN_MO13_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF00191B8u)




#define CAN_EMO13DATA6 (CAN_MO13_EDATA6)


#define CAN_MO13_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF00191A0u)




#define CAN_MOFCR13 (CAN_MO13_FCR)


#define CAN_MO13_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF00191A4u)




#define CAN_MOFGPR13 (CAN_MO13_FGPR)


#define CAN_MO13_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF00191A8u)




#define CAN_MOIPR13 (CAN_MO13_IPR)


#define CAN_MO13_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF00191BCu)




#define CAN_MOSTAT13 (CAN_MO13_STAT)


#define CAN_MO140_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A18Cu)




#define CAN_MOAMR140 (CAN_MO140_AMR)


#define CAN_MO140_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A198u)




#define CAN_MOAR140 (CAN_MO140_AR)


#define CAN_MO140_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A19Cu)




#define CAN_MOCTR140 (CAN_MO140_CTR)


#define CAN_MO140_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A194u)




#define CAN_MODATAH140 (CAN_MO140_DATAH)


#define CAN_MO140_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A190u)




#define CAN_MODATAL140 (CAN_MO140_DATAL)


#define CAN_MO140_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A180u)




#define CAN_EMO140DATA0 (CAN_MO140_EDATA0)


#define CAN_MO140_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A184u)




#define CAN_EMO140DATA1 (CAN_MO140_EDATA1)


#define CAN_MO140_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A188u)




#define CAN_EMO140DATA2 (CAN_MO140_EDATA2)


#define CAN_MO140_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A18Cu)




#define CAN_EMO140DATA3 (CAN_MO140_EDATA3)


#define CAN_MO140_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A190u)




#define CAN_EMO140DATA4 (CAN_MO140_EDATA4)


#define CAN_MO140_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A194u)




#define CAN_EMO140DATA5 (CAN_MO140_EDATA5)


#define CAN_MO140_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A198u)




#define CAN_EMO140DATA6 (CAN_MO140_EDATA6)


#define CAN_MO140_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A180u)




#define CAN_MOFCR140 (CAN_MO140_FCR)


#define CAN_MO140_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A184u)




#define CAN_MOFGPR140 (CAN_MO140_FGPR)


#define CAN_MO140_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A188u)




#define CAN_MOIPR140 (CAN_MO140_IPR)


#define CAN_MO140_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A19Cu)




#define CAN_MOSTAT140 (CAN_MO140_STAT)


#define CAN_MO141_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A1ACu)




#define CAN_MOAMR141 (CAN_MO141_AMR)


#define CAN_MO141_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A1B8u)




#define CAN_MOAR141 (CAN_MO141_AR)


#define CAN_MO141_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A1BCu)




#define CAN_MOCTR141 (CAN_MO141_CTR)


#define CAN_MO141_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A1B4u)




#define CAN_MODATAH141 (CAN_MO141_DATAH)


#define CAN_MO141_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A1B0u)




#define CAN_MODATAL141 (CAN_MO141_DATAL)


#define CAN_MO141_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A1A0u)




#define CAN_EMO141DATA0 (CAN_MO141_EDATA0)


#define CAN_MO141_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A1A4u)




#define CAN_EMO141DATA1 (CAN_MO141_EDATA1)


#define CAN_MO141_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A1A8u)




#define CAN_EMO141DATA2 (CAN_MO141_EDATA2)


#define CAN_MO141_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A1ACu)




#define CAN_EMO141DATA3 (CAN_MO141_EDATA3)


#define CAN_MO141_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A1B0u)




#define CAN_EMO141DATA4 (CAN_MO141_EDATA4)


#define CAN_MO141_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A1B4u)




#define CAN_EMO141DATA5 (CAN_MO141_EDATA5)


#define CAN_MO141_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A1B8u)




#define CAN_EMO141DATA6 (CAN_MO141_EDATA6)


#define CAN_MO141_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A1A0u)




#define CAN_MOFCR141 (CAN_MO141_FCR)


#define CAN_MO141_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A1A4u)




#define CAN_MOFGPR141 (CAN_MO141_FGPR)


#define CAN_MO141_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A1A8u)




#define CAN_MOIPR141 (CAN_MO141_IPR)


#define CAN_MO141_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A1BCu)




#define CAN_MOSTAT141 (CAN_MO141_STAT)


#define CAN_MO142_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A1CCu)




#define CAN_MOAMR142 (CAN_MO142_AMR)


#define CAN_MO142_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A1D8u)




#define CAN_MOAR142 (CAN_MO142_AR)


#define CAN_MO142_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A1DCu)




#define CAN_MOCTR142 (CAN_MO142_CTR)


#define CAN_MO142_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A1D4u)




#define CAN_MODATAH142 (CAN_MO142_DATAH)


#define CAN_MO142_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A1D0u)




#define CAN_MODATAL142 (CAN_MO142_DATAL)


#define CAN_MO142_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A1C0u)




#define CAN_EMO142DATA0 (CAN_MO142_EDATA0)


#define CAN_MO142_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A1C4u)




#define CAN_EMO142DATA1 (CAN_MO142_EDATA1)


#define CAN_MO142_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A1C8u)




#define CAN_EMO142DATA2 (CAN_MO142_EDATA2)


#define CAN_MO142_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A1CCu)




#define CAN_EMO142DATA3 (CAN_MO142_EDATA3)


#define CAN_MO142_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A1D0u)




#define CAN_EMO142DATA4 (CAN_MO142_EDATA4)


#define CAN_MO142_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A1D4u)




#define CAN_EMO142DATA5 (CAN_MO142_EDATA5)


#define CAN_MO142_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A1D8u)




#define CAN_EMO142DATA6 (CAN_MO142_EDATA6)


#define CAN_MO142_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A1C0u)




#define CAN_MOFCR142 (CAN_MO142_FCR)


#define CAN_MO142_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A1C4u)




#define CAN_MOFGPR142 (CAN_MO142_FGPR)


#define CAN_MO142_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A1C8u)




#define CAN_MOIPR142 (CAN_MO142_IPR)


#define CAN_MO142_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A1DCu)




#define CAN_MOSTAT142 (CAN_MO142_STAT)


#define CAN_MO143_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A1ECu)




#define CAN_MOAMR143 (CAN_MO143_AMR)


#define CAN_MO143_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A1F8u)




#define CAN_MOAR143 (CAN_MO143_AR)


#define CAN_MO143_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A1FCu)




#define CAN_MOCTR143 (CAN_MO143_CTR)


#define CAN_MO143_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A1F4u)




#define CAN_MODATAH143 (CAN_MO143_DATAH)


#define CAN_MO143_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A1F0u)




#define CAN_MODATAL143 (CAN_MO143_DATAL)


#define CAN_MO143_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A1E0u)




#define CAN_EMO143DATA0 (CAN_MO143_EDATA0)


#define CAN_MO143_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A1E4u)




#define CAN_EMO143DATA1 (CAN_MO143_EDATA1)


#define CAN_MO143_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A1E8u)




#define CAN_EMO143DATA2 (CAN_MO143_EDATA2)


#define CAN_MO143_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A1ECu)




#define CAN_EMO143DATA3 (CAN_MO143_EDATA3)


#define CAN_MO143_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A1F0u)




#define CAN_EMO143DATA4 (CAN_MO143_EDATA4)


#define CAN_MO143_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A1F4u)




#define CAN_EMO143DATA5 (CAN_MO143_EDATA5)


#define CAN_MO143_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A1F8u)




#define CAN_EMO143DATA6 (CAN_MO143_EDATA6)


#define CAN_MO143_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A1E0u)




#define CAN_MOFCR143 (CAN_MO143_FCR)


#define CAN_MO143_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A1E4u)




#define CAN_MOFGPR143 (CAN_MO143_FGPR)


#define CAN_MO143_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A1E8u)




#define CAN_MOIPR143 (CAN_MO143_IPR)


#define CAN_MO143_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A1FCu)




#define CAN_MOSTAT143 (CAN_MO143_STAT)


#define CAN_MO144_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A20Cu)




#define CAN_MOAMR144 (CAN_MO144_AMR)


#define CAN_MO144_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A218u)




#define CAN_MOAR144 (CAN_MO144_AR)


#define CAN_MO144_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A21Cu)




#define CAN_MOCTR144 (CAN_MO144_CTR)


#define CAN_MO144_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A214u)




#define CAN_MODATAH144 (CAN_MO144_DATAH)


#define CAN_MO144_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A210u)




#define CAN_MODATAL144 (CAN_MO144_DATAL)


#define CAN_MO144_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A200u)




#define CAN_EMO144DATA0 (CAN_MO144_EDATA0)


#define CAN_MO144_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A204u)




#define CAN_EMO144DATA1 (CAN_MO144_EDATA1)


#define CAN_MO144_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A208u)




#define CAN_EMO144DATA2 (CAN_MO144_EDATA2)


#define CAN_MO144_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A20Cu)




#define CAN_EMO144DATA3 (CAN_MO144_EDATA3)


#define CAN_MO144_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A210u)




#define CAN_EMO144DATA4 (CAN_MO144_EDATA4)


#define CAN_MO144_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A214u)




#define CAN_EMO144DATA5 (CAN_MO144_EDATA5)


#define CAN_MO144_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A218u)




#define CAN_EMO144DATA6 (CAN_MO144_EDATA6)


#define CAN_MO144_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A200u)




#define CAN_MOFCR144 (CAN_MO144_FCR)


#define CAN_MO144_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A204u)




#define CAN_MOFGPR144 (CAN_MO144_FGPR)


#define CAN_MO144_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A208u)




#define CAN_MOIPR144 (CAN_MO144_IPR)


#define CAN_MO144_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A21Cu)




#define CAN_MOSTAT144 (CAN_MO144_STAT)


#define CAN_MO145_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A22Cu)




#define CAN_MOAMR145 (CAN_MO145_AMR)


#define CAN_MO145_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A238u)




#define CAN_MOAR145 (CAN_MO145_AR)


#define CAN_MO145_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A23Cu)




#define CAN_MOCTR145 (CAN_MO145_CTR)


#define CAN_MO145_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A234u)




#define CAN_MODATAH145 (CAN_MO145_DATAH)


#define CAN_MO145_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A230u)




#define CAN_MODATAL145 (CAN_MO145_DATAL)


#define CAN_MO145_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A220u)




#define CAN_EMO145DATA0 (CAN_MO145_EDATA0)


#define CAN_MO145_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A224u)




#define CAN_EMO145DATA1 (CAN_MO145_EDATA1)


#define CAN_MO145_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A228u)




#define CAN_EMO145DATA2 (CAN_MO145_EDATA2)


#define CAN_MO145_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A22Cu)




#define CAN_EMO145DATA3 (CAN_MO145_EDATA3)


#define CAN_MO145_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A230u)




#define CAN_EMO145DATA4 (CAN_MO145_EDATA4)


#define CAN_MO145_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A234u)




#define CAN_EMO145DATA5 (CAN_MO145_EDATA5)


#define CAN_MO145_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A238u)




#define CAN_EMO145DATA6 (CAN_MO145_EDATA6)


#define CAN_MO145_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A220u)




#define CAN_MOFCR145 (CAN_MO145_FCR)


#define CAN_MO145_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A224u)




#define CAN_MOFGPR145 (CAN_MO145_FGPR)


#define CAN_MO145_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A228u)




#define CAN_MOIPR145 (CAN_MO145_IPR)


#define CAN_MO145_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A23Cu)




#define CAN_MOSTAT145 (CAN_MO145_STAT)


#define CAN_MO146_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A24Cu)




#define CAN_MOAMR146 (CAN_MO146_AMR)


#define CAN_MO146_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A258u)




#define CAN_MOAR146 (CAN_MO146_AR)


#define CAN_MO146_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A25Cu)




#define CAN_MOCTR146 (CAN_MO146_CTR)


#define CAN_MO146_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A254u)




#define CAN_MODATAH146 (CAN_MO146_DATAH)


#define CAN_MO146_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A250u)




#define CAN_MODATAL146 (CAN_MO146_DATAL)


#define CAN_MO146_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A240u)




#define CAN_EMO146DATA0 (CAN_MO146_EDATA0)


#define CAN_MO146_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A244u)




#define CAN_EMO146DATA1 (CAN_MO146_EDATA1)


#define CAN_MO146_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A248u)




#define CAN_EMO146DATA2 (CAN_MO146_EDATA2)


#define CAN_MO146_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A24Cu)




#define CAN_EMO146DATA3 (CAN_MO146_EDATA3)


#define CAN_MO146_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A250u)




#define CAN_EMO146DATA4 (CAN_MO146_EDATA4)


#define CAN_MO146_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A254u)




#define CAN_EMO146DATA5 (CAN_MO146_EDATA5)


#define CAN_MO146_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A258u)




#define CAN_EMO146DATA6 (CAN_MO146_EDATA6)


#define CAN_MO146_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A240u)




#define CAN_MOFCR146 (CAN_MO146_FCR)


#define CAN_MO146_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A244u)




#define CAN_MOFGPR146 (CAN_MO146_FGPR)


#define CAN_MO146_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A248u)




#define CAN_MOIPR146 (CAN_MO146_IPR)


#define CAN_MO146_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A25Cu)




#define CAN_MOSTAT146 (CAN_MO146_STAT)


#define CAN_MO147_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A26Cu)




#define CAN_MOAMR147 (CAN_MO147_AMR)


#define CAN_MO147_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A278u)




#define CAN_MOAR147 (CAN_MO147_AR)


#define CAN_MO147_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A27Cu)




#define CAN_MOCTR147 (CAN_MO147_CTR)


#define CAN_MO147_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A274u)




#define CAN_MODATAH147 (CAN_MO147_DATAH)


#define CAN_MO147_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A270u)




#define CAN_MODATAL147 (CAN_MO147_DATAL)


#define CAN_MO147_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A260u)




#define CAN_EMO147DATA0 (CAN_MO147_EDATA0)


#define CAN_MO147_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A264u)




#define CAN_EMO147DATA1 (CAN_MO147_EDATA1)


#define CAN_MO147_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A268u)




#define CAN_EMO147DATA2 (CAN_MO147_EDATA2)


#define CAN_MO147_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A26Cu)




#define CAN_EMO147DATA3 (CAN_MO147_EDATA3)


#define CAN_MO147_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A270u)




#define CAN_EMO147DATA4 (CAN_MO147_EDATA4)


#define CAN_MO147_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A274u)




#define CAN_EMO147DATA5 (CAN_MO147_EDATA5)


#define CAN_MO147_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A278u)




#define CAN_EMO147DATA6 (CAN_MO147_EDATA6)


#define CAN_MO147_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A260u)




#define CAN_MOFCR147 (CAN_MO147_FCR)


#define CAN_MO147_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A264u)




#define CAN_MOFGPR147 (CAN_MO147_FGPR)


#define CAN_MO147_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A268u)




#define CAN_MOIPR147 (CAN_MO147_IPR)


#define CAN_MO147_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A27Cu)




#define CAN_MOSTAT147 (CAN_MO147_STAT)


#define CAN_MO148_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A28Cu)




#define CAN_MOAMR148 (CAN_MO148_AMR)


#define CAN_MO148_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A298u)




#define CAN_MOAR148 (CAN_MO148_AR)


#define CAN_MO148_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A29Cu)




#define CAN_MOCTR148 (CAN_MO148_CTR)


#define CAN_MO148_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A294u)




#define CAN_MODATAH148 (CAN_MO148_DATAH)


#define CAN_MO148_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A290u)




#define CAN_MODATAL148 (CAN_MO148_DATAL)


#define CAN_MO148_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A280u)




#define CAN_EMO148DATA0 (CAN_MO148_EDATA0)


#define CAN_MO148_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A284u)




#define CAN_EMO148DATA1 (CAN_MO148_EDATA1)


#define CAN_MO148_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A288u)




#define CAN_EMO148DATA2 (CAN_MO148_EDATA2)


#define CAN_MO148_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A28Cu)




#define CAN_EMO148DATA3 (CAN_MO148_EDATA3)


#define CAN_MO148_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A290u)




#define CAN_EMO148DATA4 (CAN_MO148_EDATA4)


#define CAN_MO148_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A294u)




#define CAN_EMO148DATA5 (CAN_MO148_EDATA5)


#define CAN_MO148_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A298u)




#define CAN_EMO148DATA6 (CAN_MO148_EDATA6)


#define CAN_MO148_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A280u)




#define CAN_MOFCR148 (CAN_MO148_FCR)


#define CAN_MO148_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A284u)




#define CAN_MOFGPR148 (CAN_MO148_FGPR)


#define CAN_MO148_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A288u)




#define CAN_MOIPR148 (CAN_MO148_IPR)


#define CAN_MO148_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A29Cu)




#define CAN_MOSTAT148 (CAN_MO148_STAT)


#define CAN_MO149_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A2ACu)




#define CAN_MOAMR149 (CAN_MO149_AMR)


#define CAN_MO149_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A2B8u)




#define CAN_MOAR149 (CAN_MO149_AR)


#define CAN_MO149_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A2BCu)




#define CAN_MOCTR149 (CAN_MO149_CTR)


#define CAN_MO149_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A2B4u)




#define CAN_MODATAH149 (CAN_MO149_DATAH)


#define CAN_MO149_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A2B0u)




#define CAN_MODATAL149 (CAN_MO149_DATAL)


#define CAN_MO149_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A2A0u)




#define CAN_EMO149DATA0 (CAN_MO149_EDATA0)


#define CAN_MO149_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A2A4u)




#define CAN_EMO149DATA1 (CAN_MO149_EDATA1)


#define CAN_MO149_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A2A8u)




#define CAN_EMO149DATA2 (CAN_MO149_EDATA2)


#define CAN_MO149_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A2ACu)




#define CAN_EMO149DATA3 (CAN_MO149_EDATA3)


#define CAN_MO149_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A2B0u)




#define CAN_EMO149DATA4 (CAN_MO149_EDATA4)


#define CAN_MO149_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A2B4u)




#define CAN_EMO149DATA5 (CAN_MO149_EDATA5)


#define CAN_MO149_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A2B8u)




#define CAN_EMO149DATA6 (CAN_MO149_EDATA6)


#define CAN_MO149_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A2A0u)




#define CAN_MOFCR149 (CAN_MO149_FCR)


#define CAN_MO149_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A2A4u)




#define CAN_MOFGPR149 (CAN_MO149_FGPR)


#define CAN_MO149_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A2A8u)




#define CAN_MOIPR149 (CAN_MO149_IPR)


#define CAN_MO149_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A2BCu)




#define CAN_MOSTAT149 (CAN_MO149_STAT)


#define CAN_MO14_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF00191CCu)




#define CAN_MOAMR14 (CAN_MO14_AMR)


#define CAN_MO14_AR (*(volatile Ifx_CAN_MO_AR*)0xF00191D8u)




#define CAN_MOAR14 (CAN_MO14_AR)


#define CAN_MO14_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF00191DCu)




#define CAN_MOCTR14 (CAN_MO14_CTR)


#define CAN_MO14_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF00191D4u)




#define CAN_MODATAH14 (CAN_MO14_DATAH)


#define CAN_MO14_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF00191D0u)




#define CAN_MODATAL14 (CAN_MO14_DATAL)


#define CAN_MO14_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF00191C0u)




#define CAN_EMO14DATA0 (CAN_MO14_EDATA0)


#define CAN_MO14_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF00191C4u)




#define CAN_EMO14DATA1 (CAN_MO14_EDATA1)


#define CAN_MO14_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF00191C8u)




#define CAN_EMO14DATA2 (CAN_MO14_EDATA2)


#define CAN_MO14_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF00191CCu)




#define CAN_EMO14DATA3 (CAN_MO14_EDATA3)


#define CAN_MO14_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF00191D0u)




#define CAN_EMO14DATA4 (CAN_MO14_EDATA4)


#define CAN_MO14_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF00191D4u)




#define CAN_EMO14DATA5 (CAN_MO14_EDATA5)


#define CAN_MO14_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF00191D8u)




#define CAN_EMO14DATA6 (CAN_MO14_EDATA6)


#define CAN_MO14_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF00191C0u)




#define CAN_MOFCR14 (CAN_MO14_FCR)


#define CAN_MO14_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF00191C4u)




#define CAN_MOFGPR14 (CAN_MO14_FGPR)


#define CAN_MO14_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF00191C8u)




#define CAN_MOIPR14 (CAN_MO14_IPR)


#define CAN_MO14_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF00191DCu)




#define CAN_MOSTAT14 (CAN_MO14_STAT)


#define CAN_MO150_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A2CCu)




#define CAN_MOAMR150 (CAN_MO150_AMR)


#define CAN_MO150_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A2D8u)




#define CAN_MOAR150 (CAN_MO150_AR)


#define CAN_MO150_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A2DCu)




#define CAN_MOCTR150 (CAN_MO150_CTR)


#define CAN_MO150_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A2D4u)




#define CAN_MODATAH150 (CAN_MO150_DATAH)


#define CAN_MO150_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A2D0u)




#define CAN_MODATAL150 (CAN_MO150_DATAL)


#define CAN_MO150_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A2C0u)




#define CAN_EMO150DATA0 (CAN_MO150_EDATA0)


#define CAN_MO150_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A2C4u)




#define CAN_EMO150DATA1 (CAN_MO150_EDATA1)


#define CAN_MO150_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A2C8u)




#define CAN_EMO150DATA2 (CAN_MO150_EDATA2)


#define CAN_MO150_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A2CCu)




#define CAN_EMO150DATA3 (CAN_MO150_EDATA3)


#define CAN_MO150_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A2D0u)




#define CAN_EMO150DATA4 (CAN_MO150_EDATA4)


#define CAN_MO150_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A2D4u)




#define CAN_EMO150DATA5 (CAN_MO150_EDATA5)


#define CAN_MO150_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A2D8u)




#define CAN_EMO150DATA6 (CAN_MO150_EDATA6)


#define CAN_MO150_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A2C0u)




#define CAN_MOFCR150 (CAN_MO150_FCR)


#define CAN_MO150_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A2C4u)




#define CAN_MOFGPR150 (CAN_MO150_FGPR)


#define CAN_MO150_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A2C8u)




#define CAN_MOIPR150 (CAN_MO150_IPR)


#define CAN_MO150_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A2DCu)




#define CAN_MOSTAT150 (CAN_MO150_STAT)


#define CAN_MO151_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A2ECu)




#define CAN_MOAMR151 (CAN_MO151_AMR)


#define CAN_MO151_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A2F8u)




#define CAN_MOAR151 (CAN_MO151_AR)


#define CAN_MO151_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A2FCu)




#define CAN_MOCTR151 (CAN_MO151_CTR)


#define CAN_MO151_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A2F4u)




#define CAN_MODATAH151 (CAN_MO151_DATAH)


#define CAN_MO151_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A2F0u)




#define CAN_MODATAL151 (CAN_MO151_DATAL)


#define CAN_MO151_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A2E0u)




#define CAN_EMO151DATA0 (CAN_MO151_EDATA0)


#define CAN_MO151_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A2E4u)




#define CAN_EMO151DATA1 (CAN_MO151_EDATA1)


#define CAN_MO151_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A2E8u)




#define CAN_EMO151DATA2 (CAN_MO151_EDATA2)


#define CAN_MO151_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A2ECu)




#define CAN_EMO151DATA3 (CAN_MO151_EDATA3)


#define CAN_MO151_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A2F0u)




#define CAN_EMO151DATA4 (CAN_MO151_EDATA4)


#define CAN_MO151_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A2F4u)




#define CAN_EMO151DATA5 (CAN_MO151_EDATA5)


#define CAN_MO151_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A2F8u)




#define CAN_EMO151DATA6 (CAN_MO151_EDATA6)


#define CAN_MO151_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A2E0u)




#define CAN_MOFCR151 (CAN_MO151_FCR)


#define CAN_MO151_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A2E4u)




#define CAN_MOFGPR151 (CAN_MO151_FGPR)


#define CAN_MO151_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A2E8u)




#define CAN_MOIPR151 (CAN_MO151_IPR)


#define CAN_MO151_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A2FCu)




#define CAN_MOSTAT151 (CAN_MO151_STAT)


#define CAN_MO152_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A30Cu)




#define CAN_MOAMR152 (CAN_MO152_AMR)


#define CAN_MO152_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A318u)




#define CAN_MOAR152 (CAN_MO152_AR)


#define CAN_MO152_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A31Cu)




#define CAN_MOCTR152 (CAN_MO152_CTR)


#define CAN_MO152_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A314u)




#define CAN_MODATAH152 (CAN_MO152_DATAH)


#define CAN_MO152_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A310u)




#define CAN_MODATAL152 (CAN_MO152_DATAL)


#define CAN_MO152_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A300u)




#define CAN_EMO152DATA0 (CAN_MO152_EDATA0)


#define CAN_MO152_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A304u)




#define CAN_EMO152DATA1 (CAN_MO152_EDATA1)


#define CAN_MO152_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A308u)




#define CAN_EMO152DATA2 (CAN_MO152_EDATA2)


#define CAN_MO152_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A30Cu)




#define CAN_EMO152DATA3 (CAN_MO152_EDATA3)


#define CAN_MO152_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A310u)




#define CAN_EMO152DATA4 (CAN_MO152_EDATA4)


#define CAN_MO152_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A314u)




#define CAN_EMO152DATA5 (CAN_MO152_EDATA5)


#define CAN_MO152_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A318u)




#define CAN_EMO152DATA6 (CAN_MO152_EDATA6)


#define CAN_MO152_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A300u)




#define CAN_MOFCR152 (CAN_MO152_FCR)


#define CAN_MO152_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A304u)




#define CAN_MOFGPR152 (CAN_MO152_FGPR)


#define CAN_MO152_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A308u)




#define CAN_MOIPR152 (CAN_MO152_IPR)


#define CAN_MO152_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A31Cu)




#define CAN_MOSTAT152 (CAN_MO152_STAT)


#define CAN_MO153_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A32Cu)




#define CAN_MOAMR153 (CAN_MO153_AMR)


#define CAN_MO153_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A338u)




#define CAN_MOAR153 (CAN_MO153_AR)


#define CAN_MO153_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A33Cu)




#define CAN_MOCTR153 (CAN_MO153_CTR)


#define CAN_MO153_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A334u)




#define CAN_MODATAH153 (CAN_MO153_DATAH)


#define CAN_MO153_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A330u)




#define CAN_MODATAL153 (CAN_MO153_DATAL)


#define CAN_MO153_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A320u)




#define CAN_EMO153DATA0 (CAN_MO153_EDATA0)


#define CAN_MO153_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A324u)




#define CAN_EMO153DATA1 (CAN_MO153_EDATA1)


#define CAN_MO153_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A328u)




#define CAN_EMO153DATA2 (CAN_MO153_EDATA2)


#define CAN_MO153_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A32Cu)




#define CAN_EMO153DATA3 (CAN_MO153_EDATA3)


#define CAN_MO153_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A330u)




#define CAN_EMO153DATA4 (CAN_MO153_EDATA4)


#define CAN_MO153_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A334u)




#define CAN_EMO153DATA5 (CAN_MO153_EDATA5)


#define CAN_MO153_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A338u)




#define CAN_EMO153DATA6 (CAN_MO153_EDATA6)


#define CAN_MO153_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A320u)




#define CAN_MOFCR153 (CAN_MO153_FCR)


#define CAN_MO153_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A324u)




#define CAN_MOFGPR153 (CAN_MO153_FGPR)


#define CAN_MO153_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A328u)




#define CAN_MOIPR153 (CAN_MO153_IPR)


#define CAN_MO153_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A33Cu)




#define CAN_MOSTAT153 (CAN_MO153_STAT)


#define CAN_MO154_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A34Cu)




#define CAN_MOAMR154 (CAN_MO154_AMR)


#define CAN_MO154_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A358u)




#define CAN_MOAR154 (CAN_MO154_AR)


#define CAN_MO154_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A35Cu)




#define CAN_MOCTR154 (CAN_MO154_CTR)


#define CAN_MO154_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A354u)




#define CAN_MODATAH154 (CAN_MO154_DATAH)


#define CAN_MO154_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A350u)




#define CAN_MODATAL154 (CAN_MO154_DATAL)


#define CAN_MO154_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A340u)




#define CAN_EMO154DATA0 (CAN_MO154_EDATA0)


#define CAN_MO154_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A344u)




#define CAN_EMO154DATA1 (CAN_MO154_EDATA1)


#define CAN_MO154_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A348u)




#define CAN_EMO154DATA2 (CAN_MO154_EDATA2)


#define CAN_MO154_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A34Cu)




#define CAN_EMO154DATA3 (CAN_MO154_EDATA3)


#define CAN_MO154_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A350u)




#define CAN_EMO154DATA4 (CAN_MO154_EDATA4)


#define CAN_MO154_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A354u)




#define CAN_EMO154DATA5 (CAN_MO154_EDATA5)


#define CAN_MO154_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A358u)




#define CAN_EMO154DATA6 (CAN_MO154_EDATA6)


#define CAN_MO154_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A340u)




#define CAN_MOFCR154 (CAN_MO154_FCR)


#define CAN_MO154_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A344u)




#define CAN_MOFGPR154 (CAN_MO154_FGPR)


#define CAN_MO154_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A348u)




#define CAN_MOIPR154 (CAN_MO154_IPR)


#define CAN_MO154_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A35Cu)




#define CAN_MOSTAT154 (CAN_MO154_STAT)


#define CAN_MO155_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A36Cu)




#define CAN_MOAMR155 (CAN_MO155_AMR)


#define CAN_MO155_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A378u)




#define CAN_MOAR155 (CAN_MO155_AR)


#define CAN_MO155_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A37Cu)




#define CAN_MOCTR155 (CAN_MO155_CTR)


#define CAN_MO155_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A374u)




#define CAN_MODATAH155 (CAN_MO155_DATAH)


#define CAN_MO155_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A370u)




#define CAN_MODATAL155 (CAN_MO155_DATAL)


#define CAN_MO155_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A360u)




#define CAN_EMO155DATA0 (CAN_MO155_EDATA0)


#define CAN_MO155_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A364u)




#define CAN_EMO155DATA1 (CAN_MO155_EDATA1)


#define CAN_MO155_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A368u)




#define CAN_EMO155DATA2 (CAN_MO155_EDATA2)


#define CAN_MO155_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A36Cu)




#define CAN_EMO155DATA3 (CAN_MO155_EDATA3)


#define CAN_MO155_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A370u)




#define CAN_EMO155DATA4 (CAN_MO155_EDATA4)


#define CAN_MO155_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A374u)




#define CAN_EMO155DATA5 (CAN_MO155_EDATA5)


#define CAN_MO155_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A378u)




#define CAN_EMO155DATA6 (CAN_MO155_EDATA6)


#define CAN_MO155_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A360u)




#define CAN_MOFCR155 (CAN_MO155_FCR)


#define CAN_MO155_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A364u)




#define CAN_MOFGPR155 (CAN_MO155_FGPR)


#define CAN_MO155_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A368u)




#define CAN_MOIPR155 (CAN_MO155_IPR)


#define CAN_MO155_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A37Cu)




#define CAN_MOSTAT155 (CAN_MO155_STAT)


#define CAN_MO156_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A38Cu)




#define CAN_MOAMR156 (CAN_MO156_AMR)


#define CAN_MO156_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A398u)




#define CAN_MOAR156 (CAN_MO156_AR)


#define CAN_MO156_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A39Cu)




#define CAN_MOCTR156 (CAN_MO156_CTR)


#define CAN_MO156_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A394u)




#define CAN_MODATAH156 (CAN_MO156_DATAH)


#define CAN_MO156_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A390u)




#define CAN_MODATAL156 (CAN_MO156_DATAL)


#define CAN_MO156_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A380u)




#define CAN_EMO156DATA0 (CAN_MO156_EDATA0)


#define CAN_MO156_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A384u)




#define CAN_EMO156DATA1 (CAN_MO156_EDATA1)


#define CAN_MO156_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A388u)




#define CAN_EMO156DATA2 (CAN_MO156_EDATA2)


#define CAN_MO156_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A38Cu)




#define CAN_EMO156DATA3 (CAN_MO156_EDATA3)


#define CAN_MO156_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A390u)




#define CAN_EMO156DATA4 (CAN_MO156_EDATA4)


#define CAN_MO156_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A394u)




#define CAN_EMO156DATA5 (CAN_MO156_EDATA5)


#define CAN_MO156_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A398u)




#define CAN_EMO156DATA6 (CAN_MO156_EDATA6)


#define CAN_MO156_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A380u)




#define CAN_MOFCR156 (CAN_MO156_FCR)


#define CAN_MO156_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A384u)




#define CAN_MOFGPR156 (CAN_MO156_FGPR)


#define CAN_MO156_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A388u)




#define CAN_MOIPR156 (CAN_MO156_IPR)


#define CAN_MO156_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A39Cu)




#define CAN_MOSTAT156 (CAN_MO156_STAT)


#define CAN_MO157_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A3ACu)




#define CAN_MOAMR157 (CAN_MO157_AMR)


#define CAN_MO157_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A3B8u)




#define CAN_MOAR157 (CAN_MO157_AR)


#define CAN_MO157_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A3BCu)




#define CAN_MOCTR157 (CAN_MO157_CTR)


#define CAN_MO157_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A3B4u)




#define CAN_MODATAH157 (CAN_MO157_DATAH)


#define CAN_MO157_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A3B0u)




#define CAN_MODATAL157 (CAN_MO157_DATAL)


#define CAN_MO157_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A3A0u)




#define CAN_EMO157DATA0 (CAN_MO157_EDATA0)


#define CAN_MO157_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A3A4u)




#define CAN_EMO157DATA1 (CAN_MO157_EDATA1)


#define CAN_MO157_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A3A8u)




#define CAN_EMO157DATA2 (CAN_MO157_EDATA2)


#define CAN_MO157_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A3ACu)




#define CAN_EMO157DATA3 (CAN_MO157_EDATA3)


#define CAN_MO157_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A3B0u)




#define CAN_EMO157DATA4 (CAN_MO157_EDATA4)


#define CAN_MO157_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A3B4u)




#define CAN_EMO157DATA5 (CAN_MO157_EDATA5)


#define CAN_MO157_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A3B8u)




#define CAN_EMO157DATA6 (CAN_MO157_EDATA6)


#define CAN_MO157_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A3A0u)




#define CAN_MOFCR157 (CAN_MO157_FCR)


#define CAN_MO157_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A3A4u)




#define CAN_MOFGPR157 (CAN_MO157_FGPR)


#define CAN_MO157_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A3A8u)




#define CAN_MOIPR157 (CAN_MO157_IPR)


#define CAN_MO157_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A3BCu)




#define CAN_MOSTAT157 (CAN_MO157_STAT)


#define CAN_MO158_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A3CCu)




#define CAN_MOAMR158 (CAN_MO158_AMR)


#define CAN_MO158_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A3D8u)




#define CAN_MOAR158 (CAN_MO158_AR)


#define CAN_MO158_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A3DCu)




#define CAN_MOCTR158 (CAN_MO158_CTR)


#define CAN_MO158_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A3D4u)




#define CAN_MODATAH158 (CAN_MO158_DATAH)


#define CAN_MO158_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A3D0u)




#define CAN_MODATAL158 (CAN_MO158_DATAL)


#define CAN_MO158_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A3C0u)




#define CAN_EMO158DATA0 (CAN_MO158_EDATA0)


#define CAN_MO158_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A3C4u)




#define CAN_EMO158DATA1 (CAN_MO158_EDATA1)


#define CAN_MO158_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A3C8u)




#define CAN_EMO158DATA2 (CAN_MO158_EDATA2)


#define CAN_MO158_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A3CCu)




#define CAN_EMO158DATA3 (CAN_MO158_EDATA3)


#define CAN_MO158_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A3D0u)




#define CAN_EMO158DATA4 (CAN_MO158_EDATA4)


#define CAN_MO158_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A3D4u)




#define CAN_EMO158DATA5 (CAN_MO158_EDATA5)


#define CAN_MO158_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A3D8u)




#define CAN_EMO158DATA6 (CAN_MO158_EDATA6)


#define CAN_MO158_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A3C0u)




#define CAN_MOFCR158 (CAN_MO158_FCR)


#define CAN_MO158_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A3C4u)




#define CAN_MOFGPR158 (CAN_MO158_FGPR)


#define CAN_MO158_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A3C8u)




#define CAN_MOIPR158 (CAN_MO158_IPR)


#define CAN_MO158_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A3DCu)




#define CAN_MOSTAT158 (CAN_MO158_STAT)


#define CAN_MO159_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A3ECu)




#define CAN_MOAMR159 (CAN_MO159_AMR)


#define CAN_MO159_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A3F8u)




#define CAN_MOAR159 (CAN_MO159_AR)


#define CAN_MO159_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A3FCu)




#define CAN_MOCTR159 (CAN_MO159_CTR)


#define CAN_MO159_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A3F4u)




#define CAN_MODATAH159 (CAN_MO159_DATAH)


#define CAN_MO159_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A3F0u)




#define CAN_MODATAL159 (CAN_MO159_DATAL)


#define CAN_MO159_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A3E0u)




#define CAN_EMO159DATA0 (CAN_MO159_EDATA0)


#define CAN_MO159_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A3E4u)




#define CAN_EMO159DATA1 (CAN_MO159_EDATA1)


#define CAN_MO159_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A3E8u)




#define CAN_EMO159DATA2 (CAN_MO159_EDATA2)


#define CAN_MO159_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A3ECu)




#define CAN_EMO159DATA3 (CAN_MO159_EDATA3)


#define CAN_MO159_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A3F0u)




#define CAN_EMO159DATA4 (CAN_MO159_EDATA4)


#define CAN_MO159_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A3F4u)




#define CAN_EMO159DATA5 (CAN_MO159_EDATA5)


#define CAN_MO159_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A3F8u)




#define CAN_EMO159DATA6 (CAN_MO159_EDATA6)


#define CAN_MO159_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A3E0u)




#define CAN_MOFCR159 (CAN_MO159_FCR)


#define CAN_MO159_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A3E4u)




#define CAN_MOFGPR159 (CAN_MO159_FGPR)


#define CAN_MO159_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A3E8u)




#define CAN_MOIPR159 (CAN_MO159_IPR)


#define CAN_MO159_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A3FCu)




#define CAN_MOSTAT159 (CAN_MO159_STAT)


#define CAN_MO15_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF00191ECu)




#define CAN_MOAMR15 (CAN_MO15_AMR)


#define CAN_MO15_AR (*(volatile Ifx_CAN_MO_AR*)0xF00191F8u)




#define CAN_MOAR15 (CAN_MO15_AR)


#define CAN_MO15_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF00191FCu)




#define CAN_MOCTR15 (CAN_MO15_CTR)


#define CAN_MO15_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF00191F4u)




#define CAN_MODATAH15 (CAN_MO15_DATAH)


#define CAN_MO15_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF00191F0u)




#define CAN_MODATAL15 (CAN_MO15_DATAL)


#define CAN_MO15_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF00191E0u)




#define CAN_EMO15DATA0 (CAN_MO15_EDATA0)


#define CAN_MO15_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF00191E4u)




#define CAN_EMO15DATA1 (CAN_MO15_EDATA1)


#define CAN_MO15_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF00191E8u)




#define CAN_EMO15DATA2 (CAN_MO15_EDATA2)


#define CAN_MO15_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF00191ECu)




#define CAN_EMO15DATA3 (CAN_MO15_EDATA3)


#define CAN_MO15_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF00191F0u)




#define CAN_EMO15DATA4 (CAN_MO15_EDATA4)


#define CAN_MO15_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF00191F4u)




#define CAN_EMO15DATA5 (CAN_MO15_EDATA5)


#define CAN_MO15_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF00191F8u)




#define CAN_EMO15DATA6 (CAN_MO15_EDATA6)


#define CAN_MO15_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF00191E0u)




#define CAN_MOFCR15 (CAN_MO15_FCR)


#define CAN_MO15_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF00191E4u)




#define CAN_MOFGPR15 (CAN_MO15_FGPR)


#define CAN_MO15_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF00191E8u)




#define CAN_MOIPR15 (CAN_MO15_IPR)


#define CAN_MO15_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF00191FCu)




#define CAN_MOSTAT15 (CAN_MO15_STAT)


#define CAN_MO160_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A40Cu)




#define CAN_MOAMR160 (CAN_MO160_AMR)


#define CAN_MO160_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A418u)




#define CAN_MOAR160 (CAN_MO160_AR)


#define CAN_MO160_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A41Cu)




#define CAN_MOCTR160 (CAN_MO160_CTR)


#define CAN_MO160_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A414u)




#define CAN_MODATAH160 (CAN_MO160_DATAH)


#define CAN_MO160_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A410u)




#define CAN_MODATAL160 (CAN_MO160_DATAL)


#define CAN_MO160_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A400u)




#define CAN_EMO160DATA0 (CAN_MO160_EDATA0)


#define CAN_MO160_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A404u)




#define CAN_EMO160DATA1 (CAN_MO160_EDATA1)


#define CAN_MO160_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A408u)




#define CAN_EMO160DATA2 (CAN_MO160_EDATA2)


#define CAN_MO160_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A40Cu)




#define CAN_EMO160DATA3 (CAN_MO160_EDATA3)


#define CAN_MO160_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A410u)




#define CAN_EMO160DATA4 (CAN_MO160_EDATA4)


#define CAN_MO160_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A414u)




#define CAN_EMO160DATA5 (CAN_MO160_EDATA5)


#define CAN_MO160_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A418u)




#define CAN_EMO160DATA6 (CAN_MO160_EDATA6)


#define CAN_MO160_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A400u)




#define CAN_MOFCR160 (CAN_MO160_FCR)


#define CAN_MO160_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A404u)




#define CAN_MOFGPR160 (CAN_MO160_FGPR)


#define CAN_MO160_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A408u)




#define CAN_MOIPR160 (CAN_MO160_IPR)


#define CAN_MO160_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A41Cu)




#define CAN_MOSTAT160 (CAN_MO160_STAT)


#define CAN_MO161_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A42Cu)




#define CAN_MOAMR161 (CAN_MO161_AMR)


#define CAN_MO161_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A438u)




#define CAN_MOAR161 (CAN_MO161_AR)


#define CAN_MO161_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A43Cu)




#define CAN_MOCTR161 (CAN_MO161_CTR)


#define CAN_MO161_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A434u)




#define CAN_MODATAH161 (CAN_MO161_DATAH)


#define CAN_MO161_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A430u)




#define CAN_MODATAL161 (CAN_MO161_DATAL)


#define CAN_MO161_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A420u)




#define CAN_EMO161DATA0 (CAN_MO161_EDATA0)


#define CAN_MO161_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A424u)




#define CAN_EMO161DATA1 (CAN_MO161_EDATA1)


#define CAN_MO161_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A428u)




#define CAN_EMO161DATA2 (CAN_MO161_EDATA2)


#define CAN_MO161_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A42Cu)




#define CAN_EMO161DATA3 (CAN_MO161_EDATA3)


#define CAN_MO161_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A430u)




#define CAN_EMO161DATA4 (CAN_MO161_EDATA4)


#define CAN_MO161_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A434u)




#define CAN_EMO161DATA5 (CAN_MO161_EDATA5)


#define CAN_MO161_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A438u)




#define CAN_EMO161DATA6 (CAN_MO161_EDATA6)


#define CAN_MO161_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A420u)




#define CAN_MOFCR161 (CAN_MO161_FCR)


#define CAN_MO161_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A424u)




#define CAN_MOFGPR161 (CAN_MO161_FGPR)


#define CAN_MO161_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A428u)




#define CAN_MOIPR161 (CAN_MO161_IPR)


#define CAN_MO161_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A43Cu)




#define CAN_MOSTAT161 (CAN_MO161_STAT)


#define CAN_MO162_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A44Cu)




#define CAN_MOAMR162 (CAN_MO162_AMR)


#define CAN_MO162_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A458u)




#define CAN_MOAR162 (CAN_MO162_AR)


#define CAN_MO162_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A45Cu)




#define CAN_MOCTR162 (CAN_MO162_CTR)


#define CAN_MO162_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A454u)




#define CAN_MODATAH162 (CAN_MO162_DATAH)


#define CAN_MO162_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A450u)




#define CAN_MODATAL162 (CAN_MO162_DATAL)


#define CAN_MO162_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A440u)




#define CAN_EMO162DATA0 (CAN_MO162_EDATA0)


#define CAN_MO162_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A444u)




#define CAN_EMO162DATA1 (CAN_MO162_EDATA1)


#define CAN_MO162_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A448u)




#define CAN_EMO162DATA2 (CAN_MO162_EDATA2)


#define CAN_MO162_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A44Cu)




#define CAN_EMO162DATA3 (CAN_MO162_EDATA3)


#define CAN_MO162_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A450u)




#define CAN_EMO162DATA4 (CAN_MO162_EDATA4)


#define CAN_MO162_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A454u)




#define CAN_EMO162DATA5 (CAN_MO162_EDATA5)


#define CAN_MO162_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A458u)




#define CAN_EMO162DATA6 (CAN_MO162_EDATA6)


#define CAN_MO162_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A440u)




#define CAN_MOFCR162 (CAN_MO162_FCR)


#define CAN_MO162_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A444u)




#define CAN_MOFGPR162 (CAN_MO162_FGPR)


#define CAN_MO162_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A448u)




#define CAN_MOIPR162 (CAN_MO162_IPR)


#define CAN_MO162_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A45Cu)




#define CAN_MOSTAT162 (CAN_MO162_STAT)


#define CAN_MO163_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A46Cu)




#define CAN_MOAMR163 (CAN_MO163_AMR)


#define CAN_MO163_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A478u)




#define CAN_MOAR163 (CAN_MO163_AR)


#define CAN_MO163_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A47Cu)




#define CAN_MOCTR163 (CAN_MO163_CTR)


#define CAN_MO163_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A474u)




#define CAN_MODATAH163 (CAN_MO163_DATAH)


#define CAN_MO163_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A470u)




#define CAN_MODATAL163 (CAN_MO163_DATAL)


#define CAN_MO163_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A460u)




#define CAN_EMO163DATA0 (CAN_MO163_EDATA0)


#define CAN_MO163_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A464u)




#define CAN_EMO163DATA1 (CAN_MO163_EDATA1)


#define CAN_MO163_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A468u)




#define CAN_EMO163DATA2 (CAN_MO163_EDATA2)


#define CAN_MO163_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A46Cu)




#define CAN_EMO163DATA3 (CAN_MO163_EDATA3)


#define CAN_MO163_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A470u)




#define CAN_EMO163DATA4 (CAN_MO163_EDATA4)


#define CAN_MO163_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A474u)




#define CAN_EMO163DATA5 (CAN_MO163_EDATA5)


#define CAN_MO163_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A478u)




#define CAN_EMO163DATA6 (CAN_MO163_EDATA6)


#define CAN_MO163_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A460u)




#define CAN_MOFCR163 (CAN_MO163_FCR)


#define CAN_MO163_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A464u)




#define CAN_MOFGPR163 (CAN_MO163_FGPR)


#define CAN_MO163_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A468u)




#define CAN_MOIPR163 (CAN_MO163_IPR)


#define CAN_MO163_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A47Cu)




#define CAN_MOSTAT163 (CAN_MO163_STAT)


#define CAN_MO164_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A48Cu)




#define CAN_MOAMR164 (CAN_MO164_AMR)


#define CAN_MO164_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A498u)




#define CAN_MOAR164 (CAN_MO164_AR)


#define CAN_MO164_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A49Cu)




#define CAN_MOCTR164 (CAN_MO164_CTR)


#define CAN_MO164_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A494u)




#define CAN_MODATAH164 (CAN_MO164_DATAH)


#define CAN_MO164_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A490u)




#define CAN_MODATAL164 (CAN_MO164_DATAL)


#define CAN_MO164_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A480u)




#define CAN_EMO164DATA0 (CAN_MO164_EDATA0)


#define CAN_MO164_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A484u)




#define CAN_EMO164DATA1 (CAN_MO164_EDATA1)


#define CAN_MO164_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A488u)




#define CAN_EMO164DATA2 (CAN_MO164_EDATA2)


#define CAN_MO164_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A48Cu)




#define CAN_EMO164DATA3 (CAN_MO164_EDATA3)


#define CAN_MO164_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A490u)




#define CAN_EMO164DATA4 (CAN_MO164_EDATA4)


#define CAN_MO164_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A494u)




#define CAN_EMO164DATA5 (CAN_MO164_EDATA5)


#define CAN_MO164_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A498u)




#define CAN_EMO164DATA6 (CAN_MO164_EDATA6)


#define CAN_MO164_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A480u)




#define CAN_MOFCR164 (CAN_MO164_FCR)


#define CAN_MO164_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A484u)




#define CAN_MOFGPR164 (CAN_MO164_FGPR)


#define CAN_MO164_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A488u)




#define CAN_MOIPR164 (CAN_MO164_IPR)


#define CAN_MO164_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A49Cu)




#define CAN_MOSTAT164 (CAN_MO164_STAT)


#define CAN_MO165_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A4ACu)




#define CAN_MOAMR165 (CAN_MO165_AMR)


#define CAN_MO165_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A4B8u)




#define CAN_MOAR165 (CAN_MO165_AR)


#define CAN_MO165_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A4BCu)




#define CAN_MOCTR165 (CAN_MO165_CTR)


#define CAN_MO165_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A4B4u)




#define CAN_MODATAH165 (CAN_MO165_DATAH)


#define CAN_MO165_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A4B0u)




#define CAN_MODATAL165 (CAN_MO165_DATAL)


#define CAN_MO165_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A4A0u)




#define CAN_EMO165DATA0 (CAN_MO165_EDATA0)


#define CAN_MO165_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A4A4u)




#define CAN_EMO165DATA1 (CAN_MO165_EDATA1)


#define CAN_MO165_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A4A8u)




#define CAN_EMO165DATA2 (CAN_MO165_EDATA2)


#define CAN_MO165_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A4ACu)




#define CAN_EMO165DATA3 (CAN_MO165_EDATA3)


#define CAN_MO165_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A4B0u)




#define CAN_EMO165DATA4 (CAN_MO165_EDATA4)


#define CAN_MO165_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A4B4u)




#define CAN_EMO165DATA5 (CAN_MO165_EDATA5)


#define CAN_MO165_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A4B8u)




#define CAN_EMO165DATA6 (CAN_MO165_EDATA6)


#define CAN_MO165_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A4A0u)




#define CAN_MOFCR165 (CAN_MO165_FCR)


#define CAN_MO165_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A4A4u)




#define CAN_MOFGPR165 (CAN_MO165_FGPR)


#define CAN_MO165_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A4A8u)




#define CAN_MOIPR165 (CAN_MO165_IPR)


#define CAN_MO165_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A4BCu)




#define CAN_MOSTAT165 (CAN_MO165_STAT)


#define CAN_MO166_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A4CCu)




#define CAN_MOAMR166 (CAN_MO166_AMR)


#define CAN_MO166_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A4D8u)




#define CAN_MOAR166 (CAN_MO166_AR)


#define CAN_MO166_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A4DCu)




#define CAN_MOCTR166 (CAN_MO166_CTR)


#define CAN_MO166_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A4D4u)




#define CAN_MODATAH166 (CAN_MO166_DATAH)


#define CAN_MO166_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A4D0u)




#define CAN_MODATAL166 (CAN_MO166_DATAL)


#define CAN_MO166_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A4C0u)




#define CAN_EMO166DATA0 (CAN_MO166_EDATA0)


#define CAN_MO166_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A4C4u)




#define CAN_EMO166DATA1 (CAN_MO166_EDATA1)


#define CAN_MO166_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A4C8u)




#define CAN_EMO166DATA2 (CAN_MO166_EDATA2)


#define CAN_MO166_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A4CCu)




#define CAN_EMO166DATA3 (CAN_MO166_EDATA3)


#define CAN_MO166_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A4D0u)




#define CAN_EMO166DATA4 (CAN_MO166_EDATA4)


#define CAN_MO166_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A4D4u)




#define CAN_EMO166DATA5 (CAN_MO166_EDATA5)


#define CAN_MO166_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A4D8u)




#define CAN_EMO166DATA6 (CAN_MO166_EDATA6)


#define CAN_MO166_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A4C0u)




#define CAN_MOFCR166 (CAN_MO166_FCR)


#define CAN_MO166_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A4C4u)




#define CAN_MOFGPR166 (CAN_MO166_FGPR)


#define CAN_MO166_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A4C8u)




#define CAN_MOIPR166 (CAN_MO166_IPR)


#define CAN_MO166_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A4DCu)




#define CAN_MOSTAT166 (CAN_MO166_STAT)


#define CAN_MO167_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A4ECu)




#define CAN_MOAMR167 (CAN_MO167_AMR)


#define CAN_MO167_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A4F8u)




#define CAN_MOAR167 (CAN_MO167_AR)


#define CAN_MO167_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A4FCu)




#define CAN_MOCTR167 (CAN_MO167_CTR)


#define CAN_MO167_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A4F4u)




#define CAN_MODATAH167 (CAN_MO167_DATAH)


#define CAN_MO167_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A4F0u)




#define CAN_MODATAL167 (CAN_MO167_DATAL)


#define CAN_MO167_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A4E0u)




#define CAN_EMO167DATA0 (CAN_MO167_EDATA0)


#define CAN_MO167_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A4E4u)




#define CAN_EMO167DATA1 (CAN_MO167_EDATA1)


#define CAN_MO167_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A4E8u)




#define CAN_EMO167DATA2 (CAN_MO167_EDATA2)


#define CAN_MO167_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A4ECu)




#define CAN_EMO167DATA3 (CAN_MO167_EDATA3)


#define CAN_MO167_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A4F0u)




#define CAN_EMO167DATA4 (CAN_MO167_EDATA4)


#define CAN_MO167_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A4F4u)




#define CAN_EMO167DATA5 (CAN_MO167_EDATA5)


#define CAN_MO167_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A4F8u)




#define CAN_EMO167DATA6 (CAN_MO167_EDATA6)


#define CAN_MO167_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A4E0u)




#define CAN_MOFCR167 (CAN_MO167_FCR)


#define CAN_MO167_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A4E4u)




#define CAN_MOFGPR167 (CAN_MO167_FGPR)


#define CAN_MO167_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A4E8u)




#define CAN_MOIPR167 (CAN_MO167_IPR)


#define CAN_MO167_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A4FCu)




#define CAN_MOSTAT167 (CAN_MO167_STAT)


#define CAN_MO168_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A50Cu)




#define CAN_MOAMR168 (CAN_MO168_AMR)


#define CAN_MO168_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A518u)




#define CAN_MOAR168 (CAN_MO168_AR)


#define CAN_MO168_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A51Cu)




#define CAN_MOCTR168 (CAN_MO168_CTR)


#define CAN_MO168_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A514u)




#define CAN_MODATAH168 (CAN_MO168_DATAH)


#define CAN_MO168_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A510u)




#define CAN_MODATAL168 (CAN_MO168_DATAL)


#define CAN_MO168_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A500u)




#define CAN_EMO168DATA0 (CAN_MO168_EDATA0)


#define CAN_MO168_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A504u)




#define CAN_EMO168DATA1 (CAN_MO168_EDATA1)


#define CAN_MO168_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A508u)




#define CAN_EMO168DATA2 (CAN_MO168_EDATA2)


#define CAN_MO168_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A50Cu)




#define CAN_EMO168DATA3 (CAN_MO168_EDATA3)


#define CAN_MO168_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A510u)




#define CAN_EMO168DATA4 (CAN_MO168_EDATA4)


#define CAN_MO168_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A514u)




#define CAN_EMO168DATA5 (CAN_MO168_EDATA5)


#define CAN_MO168_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A518u)




#define CAN_EMO168DATA6 (CAN_MO168_EDATA6)


#define CAN_MO168_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A500u)




#define CAN_MOFCR168 (CAN_MO168_FCR)


#define CAN_MO168_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A504u)




#define CAN_MOFGPR168 (CAN_MO168_FGPR)


#define CAN_MO168_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A508u)




#define CAN_MOIPR168 (CAN_MO168_IPR)


#define CAN_MO168_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A51Cu)




#define CAN_MOSTAT168 (CAN_MO168_STAT)


#define CAN_MO169_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A52Cu)




#define CAN_MOAMR169 (CAN_MO169_AMR)


#define CAN_MO169_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A538u)




#define CAN_MOAR169 (CAN_MO169_AR)


#define CAN_MO169_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A53Cu)




#define CAN_MOCTR169 (CAN_MO169_CTR)


#define CAN_MO169_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A534u)




#define CAN_MODATAH169 (CAN_MO169_DATAH)


#define CAN_MO169_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A530u)




#define CAN_MODATAL169 (CAN_MO169_DATAL)


#define CAN_MO169_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A520u)




#define CAN_EMO169DATA0 (CAN_MO169_EDATA0)


#define CAN_MO169_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A524u)




#define CAN_EMO169DATA1 (CAN_MO169_EDATA1)


#define CAN_MO169_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A528u)




#define CAN_EMO169DATA2 (CAN_MO169_EDATA2)


#define CAN_MO169_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A52Cu)




#define CAN_EMO169DATA3 (CAN_MO169_EDATA3)


#define CAN_MO169_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A530u)




#define CAN_EMO169DATA4 (CAN_MO169_EDATA4)


#define CAN_MO169_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A534u)




#define CAN_EMO169DATA5 (CAN_MO169_EDATA5)


#define CAN_MO169_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A538u)




#define CAN_EMO169DATA6 (CAN_MO169_EDATA6)


#define CAN_MO169_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A520u)




#define CAN_MOFCR169 (CAN_MO169_FCR)


#define CAN_MO169_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A524u)




#define CAN_MOFGPR169 (CAN_MO169_FGPR)


#define CAN_MO169_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A528u)




#define CAN_MOIPR169 (CAN_MO169_IPR)


#define CAN_MO169_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A53Cu)




#define CAN_MOSTAT169 (CAN_MO169_STAT)


#define CAN_MO16_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001920Cu)




#define CAN_MOAMR16 (CAN_MO16_AMR)


#define CAN_MO16_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019218u)




#define CAN_MOAR16 (CAN_MO16_AR)


#define CAN_MO16_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001921Cu)




#define CAN_MOCTR16 (CAN_MO16_CTR)


#define CAN_MO16_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019214u)




#define CAN_MODATAH16 (CAN_MO16_DATAH)


#define CAN_MO16_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019210u)




#define CAN_MODATAL16 (CAN_MO16_DATAL)


#define CAN_MO16_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019200u)




#define CAN_EMO16DATA0 (CAN_MO16_EDATA0)


#define CAN_MO16_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019204u)




#define CAN_EMO16DATA1 (CAN_MO16_EDATA1)


#define CAN_MO16_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019208u)




#define CAN_EMO16DATA2 (CAN_MO16_EDATA2)


#define CAN_MO16_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001920Cu)




#define CAN_EMO16DATA3 (CAN_MO16_EDATA3)


#define CAN_MO16_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019210u)




#define CAN_EMO16DATA4 (CAN_MO16_EDATA4)


#define CAN_MO16_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019214u)




#define CAN_EMO16DATA5 (CAN_MO16_EDATA5)


#define CAN_MO16_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019218u)




#define CAN_EMO16DATA6 (CAN_MO16_EDATA6)


#define CAN_MO16_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019200u)




#define CAN_MOFCR16 (CAN_MO16_FCR)


#define CAN_MO16_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019204u)




#define CAN_MOFGPR16 (CAN_MO16_FGPR)


#define CAN_MO16_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019208u)




#define CAN_MOIPR16 (CAN_MO16_IPR)


#define CAN_MO16_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001921Cu)




#define CAN_MOSTAT16 (CAN_MO16_STAT)


#define CAN_MO170_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A54Cu)




#define CAN_MOAMR170 (CAN_MO170_AMR)


#define CAN_MO170_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A558u)




#define CAN_MOAR170 (CAN_MO170_AR)


#define CAN_MO170_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A55Cu)




#define CAN_MOCTR170 (CAN_MO170_CTR)


#define CAN_MO170_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A554u)




#define CAN_MODATAH170 (CAN_MO170_DATAH)


#define CAN_MO170_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A550u)




#define CAN_MODATAL170 (CAN_MO170_DATAL)


#define CAN_MO170_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A540u)




#define CAN_EMO170DATA0 (CAN_MO170_EDATA0)


#define CAN_MO170_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A544u)




#define CAN_EMO170DATA1 (CAN_MO170_EDATA1)


#define CAN_MO170_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A548u)




#define CAN_EMO170DATA2 (CAN_MO170_EDATA2)


#define CAN_MO170_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A54Cu)




#define CAN_EMO170DATA3 (CAN_MO170_EDATA3)


#define CAN_MO170_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A550u)




#define CAN_EMO170DATA4 (CAN_MO170_EDATA4)


#define CAN_MO170_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A554u)




#define CAN_EMO170DATA5 (CAN_MO170_EDATA5)


#define CAN_MO170_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A558u)




#define CAN_EMO170DATA6 (CAN_MO170_EDATA6)


#define CAN_MO170_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A540u)




#define CAN_MOFCR170 (CAN_MO170_FCR)


#define CAN_MO170_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A544u)




#define CAN_MOFGPR170 (CAN_MO170_FGPR)


#define CAN_MO170_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A548u)




#define CAN_MOIPR170 (CAN_MO170_IPR)


#define CAN_MO170_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A55Cu)




#define CAN_MOSTAT170 (CAN_MO170_STAT)


#define CAN_MO171_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A56Cu)




#define CAN_MOAMR171 (CAN_MO171_AMR)


#define CAN_MO171_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A578u)




#define CAN_MOAR171 (CAN_MO171_AR)


#define CAN_MO171_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A57Cu)




#define CAN_MOCTR171 (CAN_MO171_CTR)


#define CAN_MO171_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A574u)




#define CAN_MODATAH171 (CAN_MO171_DATAH)


#define CAN_MO171_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A570u)




#define CAN_MODATAL171 (CAN_MO171_DATAL)


#define CAN_MO171_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A560u)




#define CAN_EMO171DATA0 (CAN_MO171_EDATA0)


#define CAN_MO171_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A564u)




#define CAN_EMO171DATA1 (CAN_MO171_EDATA1)


#define CAN_MO171_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A568u)




#define CAN_EMO171DATA2 (CAN_MO171_EDATA2)


#define CAN_MO171_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A56Cu)




#define CAN_EMO171DATA3 (CAN_MO171_EDATA3)


#define CAN_MO171_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A570u)




#define CAN_EMO171DATA4 (CAN_MO171_EDATA4)


#define CAN_MO171_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A574u)




#define CAN_EMO171DATA5 (CAN_MO171_EDATA5)


#define CAN_MO171_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A578u)




#define CAN_EMO171DATA6 (CAN_MO171_EDATA6)


#define CAN_MO171_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A560u)




#define CAN_MOFCR171 (CAN_MO171_FCR)


#define CAN_MO171_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A564u)




#define CAN_MOFGPR171 (CAN_MO171_FGPR)


#define CAN_MO171_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A568u)




#define CAN_MOIPR171 (CAN_MO171_IPR)


#define CAN_MO171_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A57Cu)




#define CAN_MOSTAT171 (CAN_MO171_STAT)


#define CAN_MO172_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A58Cu)




#define CAN_MOAMR172 (CAN_MO172_AMR)


#define CAN_MO172_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A598u)




#define CAN_MOAR172 (CAN_MO172_AR)


#define CAN_MO172_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A59Cu)




#define CAN_MOCTR172 (CAN_MO172_CTR)


#define CAN_MO172_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A594u)




#define CAN_MODATAH172 (CAN_MO172_DATAH)


#define CAN_MO172_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A590u)




#define CAN_MODATAL172 (CAN_MO172_DATAL)


#define CAN_MO172_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A580u)




#define CAN_EMO172DATA0 (CAN_MO172_EDATA0)


#define CAN_MO172_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A584u)




#define CAN_EMO172DATA1 (CAN_MO172_EDATA1)


#define CAN_MO172_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A588u)




#define CAN_EMO172DATA2 (CAN_MO172_EDATA2)


#define CAN_MO172_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A58Cu)




#define CAN_EMO172DATA3 (CAN_MO172_EDATA3)


#define CAN_MO172_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A590u)




#define CAN_EMO172DATA4 (CAN_MO172_EDATA4)


#define CAN_MO172_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A594u)




#define CAN_EMO172DATA5 (CAN_MO172_EDATA5)


#define CAN_MO172_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A598u)




#define CAN_EMO172DATA6 (CAN_MO172_EDATA6)


#define CAN_MO172_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A580u)




#define CAN_MOFCR172 (CAN_MO172_FCR)


#define CAN_MO172_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A584u)




#define CAN_MOFGPR172 (CAN_MO172_FGPR)


#define CAN_MO172_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A588u)




#define CAN_MOIPR172 (CAN_MO172_IPR)


#define CAN_MO172_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A59Cu)




#define CAN_MOSTAT172 (CAN_MO172_STAT)


#define CAN_MO173_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A5ACu)




#define CAN_MOAMR173 (CAN_MO173_AMR)


#define CAN_MO173_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A5B8u)




#define CAN_MOAR173 (CAN_MO173_AR)


#define CAN_MO173_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A5BCu)




#define CAN_MOCTR173 (CAN_MO173_CTR)


#define CAN_MO173_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A5B4u)




#define CAN_MODATAH173 (CAN_MO173_DATAH)


#define CAN_MO173_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A5B0u)




#define CAN_MODATAL173 (CAN_MO173_DATAL)


#define CAN_MO173_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A5A0u)




#define CAN_EMO173DATA0 (CAN_MO173_EDATA0)


#define CAN_MO173_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A5A4u)




#define CAN_EMO173DATA1 (CAN_MO173_EDATA1)


#define CAN_MO173_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A5A8u)




#define CAN_EMO173DATA2 (CAN_MO173_EDATA2)


#define CAN_MO173_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A5ACu)




#define CAN_EMO173DATA3 (CAN_MO173_EDATA3)


#define CAN_MO173_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A5B0u)




#define CAN_EMO173DATA4 (CAN_MO173_EDATA4)


#define CAN_MO173_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A5B4u)




#define CAN_EMO173DATA5 (CAN_MO173_EDATA5)


#define CAN_MO173_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A5B8u)




#define CAN_EMO173DATA6 (CAN_MO173_EDATA6)


#define CAN_MO173_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A5A0u)




#define CAN_MOFCR173 (CAN_MO173_FCR)


#define CAN_MO173_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A5A4u)




#define CAN_MOFGPR173 (CAN_MO173_FGPR)


#define CAN_MO173_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A5A8u)




#define CAN_MOIPR173 (CAN_MO173_IPR)


#define CAN_MO173_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A5BCu)




#define CAN_MOSTAT173 (CAN_MO173_STAT)


#define CAN_MO174_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A5CCu)




#define CAN_MOAMR174 (CAN_MO174_AMR)


#define CAN_MO174_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A5D8u)




#define CAN_MOAR174 (CAN_MO174_AR)


#define CAN_MO174_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A5DCu)




#define CAN_MOCTR174 (CAN_MO174_CTR)


#define CAN_MO174_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A5D4u)




#define CAN_MODATAH174 (CAN_MO174_DATAH)


#define CAN_MO174_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A5D0u)




#define CAN_MODATAL174 (CAN_MO174_DATAL)


#define CAN_MO174_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A5C0u)




#define CAN_EMO174DATA0 (CAN_MO174_EDATA0)


#define CAN_MO174_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A5C4u)




#define CAN_EMO174DATA1 (CAN_MO174_EDATA1)


#define CAN_MO174_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A5C8u)




#define CAN_EMO174DATA2 (CAN_MO174_EDATA2)


#define CAN_MO174_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A5CCu)




#define CAN_EMO174DATA3 (CAN_MO174_EDATA3)


#define CAN_MO174_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A5D0u)




#define CAN_EMO174DATA4 (CAN_MO174_EDATA4)


#define CAN_MO174_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A5D4u)




#define CAN_EMO174DATA5 (CAN_MO174_EDATA5)


#define CAN_MO174_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A5D8u)




#define CAN_EMO174DATA6 (CAN_MO174_EDATA6)


#define CAN_MO174_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A5C0u)




#define CAN_MOFCR174 (CAN_MO174_FCR)


#define CAN_MO174_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A5C4u)




#define CAN_MOFGPR174 (CAN_MO174_FGPR)


#define CAN_MO174_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A5C8u)




#define CAN_MOIPR174 (CAN_MO174_IPR)


#define CAN_MO174_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A5DCu)




#define CAN_MOSTAT174 (CAN_MO174_STAT)


#define CAN_MO175_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A5ECu)




#define CAN_MOAMR175 (CAN_MO175_AMR)


#define CAN_MO175_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A5F8u)




#define CAN_MOAR175 (CAN_MO175_AR)


#define CAN_MO175_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A5FCu)




#define CAN_MOCTR175 (CAN_MO175_CTR)


#define CAN_MO175_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A5F4u)




#define CAN_MODATAH175 (CAN_MO175_DATAH)


#define CAN_MO175_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A5F0u)




#define CAN_MODATAL175 (CAN_MO175_DATAL)


#define CAN_MO175_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A5E0u)




#define CAN_EMO175DATA0 (CAN_MO175_EDATA0)


#define CAN_MO175_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A5E4u)




#define CAN_EMO175DATA1 (CAN_MO175_EDATA1)


#define CAN_MO175_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A5E8u)




#define CAN_EMO175DATA2 (CAN_MO175_EDATA2)


#define CAN_MO175_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A5ECu)




#define CAN_EMO175DATA3 (CAN_MO175_EDATA3)


#define CAN_MO175_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A5F0u)




#define CAN_EMO175DATA4 (CAN_MO175_EDATA4)


#define CAN_MO175_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A5F4u)




#define CAN_EMO175DATA5 (CAN_MO175_EDATA5)


#define CAN_MO175_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A5F8u)




#define CAN_EMO175DATA6 (CAN_MO175_EDATA6)


#define CAN_MO175_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A5E0u)




#define CAN_MOFCR175 (CAN_MO175_FCR)


#define CAN_MO175_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A5E4u)




#define CAN_MOFGPR175 (CAN_MO175_FGPR)


#define CAN_MO175_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A5E8u)




#define CAN_MOIPR175 (CAN_MO175_IPR)


#define CAN_MO175_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A5FCu)




#define CAN_MOSTAT175 (CAN_MO175_STAT)


#define CAN_MO176_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A60Cu)




#define CAN_MOAMR176 (CAN_MO176_AMR)


#define CAN_MO176_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A618u)




#define CAN_MOAR176 (CAN_MO176_AR)


#define CAN_MO176_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A61Cu)




#define CAN_MOCTR176 (CAN_MO176_CTR)


#define CAN_MO176_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A614u)




#define CAN_MODATAH176 (CAN_MO176_DATAH)


#define CAN_MO176_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A610u)




#define CAN_MODATAL176 (CAN_MO176_DATAL)


#define CAN_MO176_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A600u)




#define CAN_EMO176DATA0 (CAN_MO176_EDATA0)


#define CAN_MO176_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A604u)




#define CAN_EMO176DATA1 (CAN_MO176_EDATA1)


#define CAN_MO176_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A608u)




#define CAN_EMO176DATA2 (CAN_MO176_EDATA2)


#define CAN_MO176_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A60Cu)




#define CAN_EMO176DATA3 (CAN_MO176_EDATA3)


#define CAN_MO176_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A610u)




#define CAN_EMO176DATA4 (CAN_MO176_EDATA4)


#define CAN_MO176_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A614u)




#define CAN_EMO176DATA5 (CAN_MO176_EDATA5)


#define CAN_MO176_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A618u)




#define CAN_EMO176DATA6 (CAN_MO176_EDATA6)


#define CAN_MO176_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A600u)




#define CAN_MOFCR176 (CAN_MO176_FCR)


#define CAN_MO176_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A604u)




#define CAN_MOFGPR176 (CAN_MO176_FGPR)


#define CAN_MO176_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A608u)




#define CAN_MOIPR176 (CAN_MO176_IPR)


#define CAN_MO176_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A61Cu)




#define CAN_MOSTAT176 (CAN_MO176_STAT)


#define CAN_MO177_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A62Cu)




#define CAN_MOAMR177 (CAN_MO177_AMR)


#define CAN_MO177_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A638u)




#define CAN_MOAR177 (CAN_MO177_AR)


#define CAN_MO177_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A63Cu)




#define CAN_MOCTR177 (CAN_MO177_CTR)


#define CAN_MO177_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A634u)




#define CAN_MODATAH177 (CAN_MO177_DATAH)


#define CAN_MO177_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A630u)




#define CAN_MODATAL177 (CAN_MO177_DATAL)


#define CAN_MO177_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A620u)




#define CAN_EMO177DATA0 (CAN_MO177_EDATA0)


#define CAN_MO177_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A624u)




#define CAN_EMO177DATA1 (CAN_MO177_EDATA1)


#define CAN_MO177_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A628u)




#define CAN_EMO177DATA2 (CAN_MO177_EDATA2)


#define CAN_MO177_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A62Cu)




#define CAN_EMO177DATA3 (CAN_MO177_EDATA3)


#define CAN_MO177_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A630u)




#define CAN_EMO177DATA4 (CAN_MO177_EDATA4)


#define CAN_MO177_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A634u)




#define CAN_EMO177DATA5 (CAN_MO177_EDATA5)


#define CAN_MO177_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A638u)




#define CAN_EMO177DATA6 (CAN_MO177_EDATA6)


#define CAN_MO177_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A620u)




#define CAN_MOFCR177 (CAN_MO177_FCR)


#define CAN_MO177_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A624u)




#define CAN_MOFGPR177 (CAN_MO177_FGPR)


#define CAN_MO177_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A628u)




#define CAN_MOIPR177 (CAN_MO177_IPR)


#define CAN_MO177_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A63Cu)




#define CAN_MOSTAT177 (CAN_MO177_STAT)


#define CAN_MO178_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A64Cu)




#define CAN_MOAMR178 (CAN_MO178_AMR)


#define CAN_MO178_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A658u)




#define CAN_MOAR178 (CAN_MO178_AR)


#define CAN_MO178_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A65Cu)




#define CAN_MOCTR178 (CAN_MO178_CTR)


#define CAN_MO178_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A654u)




#define CAN_MODATAH178 (CAN_MO178_DATAH)


#define CAN_MO178_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A650u)




#define CAN_MODATAL178 (CAN_MO178_DATAL)


#define CAN_MO178_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A640u)




#define CAN_EMO178DATA0 (CAN_MO178_EDATA0)


#define CAN_MO178_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A644u)




#define CAN_EMO178DATA1 (CAN_MO178_EDATA1)


#define CAN_MO178_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A648u)




#define CAN_EMO178DATA2 (CAN_MO178_EDATA2)


#define CAN_MO178_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A64Cu)




#define CAN_EMO178DATA3 (CAN_MO178_EDATA3)


#define CAN_MO178_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A650u)




#define CAN_EMO178DATA4 (CAN_MO178_EDATA4)


#define CAN_MO178_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A654u)




#define CAN_EMO178DATA5 (CAN_MO178_EDATA5)


#define CAN_MO178_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A658u)




#define CAN_EMO178DATA6 (CAN_MO178_EDATA6)


#define CAN_MO178_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A640u)




#define CAN_MOFCR178 (CAN_MO178_FCR)


#define CAN_MO178_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A644u)




#define CAN_MOFGPR178 (CAN_MO178_FGPR)


#define CAN_MO178_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A648u)




#define CAN_MOIPR178 (CAN_MO178_IPR)


#define CAN_MO178_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A65Cu)




#define CAN_MOSTAT178 (CAN_MO178_STAT)


#define CAN_MO179_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A66Cu)




#define CAN_MOAMR179 (CAN_MO179_AMR)


#define CAN_MO179_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A678u)




#define CAN_MOAR179 (CAN_MO179_AR)


#define CAN_MO179_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A67Cu)




#define CAN_MOCTR179 (CAN_MO179_CTR)


#define CAN_MO179_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A674u)




#define CAN_MODATAH179 (CAN_MO179_DATAH)


#define CAN_MO179_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A670u)




#define CAN_MODATAL179 (CAN_MO179_DATAL)


#define CAN_MO179_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A660u)




#define CAN_EMO179DATA0 (CAN_MO179_EDATA0)


#define CAN_MO179_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A664u)




#define CAN_EMO179DATA1 (CAN_MO179_EDATA1)


#define CAN_MO179_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A668u)




#define CAN_EMO179DATA2 (CAN_MO179_EDATA2)


#define CAN_MO179_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A66Cu)




#define CAN_EMO179DATA3 (CAN_MO179_EDATA3)


#define CAN_MO179_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A670u)




#define CAN_EMO179DATA4 (CAN_MO179_EDATA4)


#define CAN_MO179_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A674u)




#define CAN_EMO179DATA5 (CAN_MO179_EDATA5)


#define CAN_MO179_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A678u)




#define CAN_EMO179DATA6 (CAN_MO179_EDATA6)


#define CAN_MO179_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A660u)




#define CAN_MOFCR179 (CAN_MO179_FCR)


#define CAN_MO179_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A664u)




#define CAN_MOFGPR179 (CAN_MO179_FGPR)


#define CAN_MO179_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A668u)




#define CAN_MOIPR179 (CAN_MO179_IPR)


#define CAN_MO179_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A67Cu)




#define CAN_MOSTAT179 (CAN_MO179_STAT)


#define CAN_MO17_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001922Cu)




#define CAN_MOAMR17 (CAN_MO17_AMR)


#define CAN_MO17_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019238u)




#define CAN_MOAR17 (CAN_MO17_AR)


#define CAN_MO17_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001923Cu)




#define CAN_MOCTR17 (CAN_MO17_CTR)


#define CAN_MO17_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019234u)




#define CAN_MODATAH17 (CAN_MO17_DATAH)


#define CAN_MO17_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019230u)




#define CAN_MODATAL17 (CAN_MO17_DATAL)


#define CAN_MO17_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019220u)




#define CAN_EMO17DATA0 (CAN_MO17_EDATA0)


#define CAN_MO17_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019224u)




#define CAN_EMO17DATA1 (CAN_MO17_EDATA1)


#define CAN_MO17_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019228u)




#define CAN_EMO17DATA2 (CAN_MO17_EDATA2)


#define CAN_MO17_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001922Cu)




#define CAN_EMO17DATA3 (CAN_MO17_EDATA3)


#define CAN_MO17_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019230u)




#define CAN_EMO17DATA4 (CAN_MO17_EDATA4)


#define CAN_MO17_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019234u)




#define CAN_EMO17DATA5 (CAN_MO17_EDATA5)


#define CAN_MO17_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019238u)




#define CAN_EMO17DATA6 (CAN_MO17_EDATA6)


#define CAN_MO17_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019220u)




#define CAN_MOFCR17 (CAN_MO17_FCR)


#define CAN_MO17_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019224u)




#define CAN_MOFGPR17 (CAN_MO17_FGPR)


#define CAN_MO17_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019228u)




#define CAN_MOIPR17 (CAN_MO17_IPR)


#define CAN_MO17_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001923Cu)




#define CAN_MOSTAT17 (CAN_MO17_STAT)


#define CAN_MO180_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A68Cu)




#define CAN_MOAMR180 (CAN_MO180_AMR)


#define CAN_MO180_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A698u)




#define CAN_MOAR180 (CAN_MO180_AR)


#define CAN_MO180_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A69Cu)




#define CAN_MOCTR180 (CAN_MO180_CTR)


#define CAN_MO180_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A694u)




#define CAN_MODATAH180 (CAN_MO180_DATAH)


#define CAN_MO180_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A690u)




#define CAN_MODATAL180 (CAN_MO180_DATAL)


#define CAN_MO180_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A680u)




#define CAN_EMO180DATA0 (CAN_MO180_EDATA0)


#define CAN_MO180_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A684u)




#define CAN_EMO180DATA1 (CAN_MO180_EDATA1)


#define CAN_MO180_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A688u)




#define CAN_EMO180DATA2 (CAN_MO180_EDATA2)


#define CAN_MO180_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A68Cu)




#define CAN_EMO180DATA3 (CAN_MO180_EDATA3)


#define CAN_MO180_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A690u)




#define CAN_EMO180DATA4 (CAN_MO180_EDATA4)


#define CAN_MO180_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A694u)




#define CAN_EMO180DATA5 (CAN_MO180_EDATA5)


#define CAN_MO180_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A698u)




#define CAN_EMO180DATA6 (CAN_MO180_EDATA6)


#define CAN_MO180_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A680u)




#define CAN_MOFCR180 (CAN_MO180_FCR)


#define CAN_MO180_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A684u)




#define CAN_MOFGPR180 (CAN_MO180_FGPR)


#define CAN_MO180_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A688u)




#define CAN_MOIPR180 (CAN_MO180_IPR)


#define CAN_MO180_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A69Cu)




#define CAN_MOSTAT180 (CAN_MO180_STAT)


#define CAN_MO181_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A6ACu)




#define CAN_MOAMR181 (CAN_MO181_AMR)


#define CAN_MO181_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A6B8u)




#define CAN_MOAR181 (CAN_MO181_AR)


#define CAN_MO181_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A6BCu)




#define CAN_MOCTR181 (CAN_MO181_CTR)


#define CAN_MO181_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A6B4u)




#define CAN_MODATAH181 (CAN_MO181_DATAH)


#define CAN_MO181_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A6B0u)




#define CAN_MODATAL181 (CAN_MO181_DATAL)


#define CAN_MO181_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A6A0u)




#define CAN_EMO181DATA0 (CAN_MO181_EDATA0)


#define CAN_MO181_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A6A4u)




#define CAN_EMO181DATA1 (CAN_MO181_EDATA1)


#define CAN_MO181_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A6A8u)




#define CAN_EMO181DATA2 (CAN_MO181_EDATA2)


#define CAN_MO181_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A6ACu)




#define CAN_EMO181DATA3 (CAN_MO181_EDATA3)


#define CAN_MO181_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A6B0u)




#define CAN_EMO181DATA4 (CAN_MO181_EDATA4)


#define CAN_MO181_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A6B4u)




#define CAN_EMO181DATA5 (CAN_MO181_EDATA5)


#define CAN_MO181_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A6B8u)




#define CAN_EMO181DATA6 (CAN_MO181_EDATA6)


#define CAN_MO181_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A6A0u)




#define CAN_MOFCR181 (CAN_MO181_FCR)


#define CAN_MO181_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A6A4u)




#define CAN_MOFGPR181 (CAN_MO181_FGPR)


#define CAN_MO181_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A6A8u)




#define CAN_MOIPR181 (CAN_MO181_IPR)


#define CAN_MO181_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A6BCu)




#define CAN_MOSTAT181 (CAN_MO181_STAT)


#define CAN_MO182_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A6CCu)




#define CAN_MOAMR182 (CAN_MO182_AMR)


#define CAN_MO182_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A6D8u)




#define CAN_MOAR182 (CAN_MO182_AR)


#define CAN_MO182_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A6DCu)




#define CAN_MOCTR182 (CAN_MO182_CTR)


#define CAN_MO182_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A6D4u)




#define CAN_MODATAH182 (CAN_MO182_DATAH)


#define CAN_MO182_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A6D0u)




#define CAN_MODATAL182 (CAN_MO182_DATAL)


#define CAN_MO182_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A6C0u)




#define CAN_EMO182DATA0 (CAN_MO182_EDATA0)


#define CAN_MO182_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A6C4u)




#define CAN_EMO182DATA1 (CAN_MO182_EDATA1)


#define CAN_MO182_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A6C8u)




#define CAN_EMO182DATA2 (CAN_MO182_EDATA2)


#define CAN_MO182_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A6CCu)




#define CAN_EMO182DATA3 (CAN_MO182_EDATA3)


#define CAN_MO182_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A6D0u)




#define CAN_EMO182DATA4 (CAN_MO182_EDATA4)


#define CAN_MO182_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A6D4u)




#define CAN_EMO182DATA5 (CAN_MO182_EDATA5)


#define CAN_MO182_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A6D8u)




#define CAN_EMO182DATA6 (CAN_MO182_EDATA6)


#define CAN_MO182_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A6C0u)




#define CAN_MOFCR182 (CAN_MO182_FCR)


#define CAN_MO182_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A6C4u)




#define CAN_MOFGPR182 (CAN_MO182_FGPR)


#define CAN_MO182_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A6C8u)




#define CAN_MOIPR182 (CAN_MO182_IPR)


#define CAN_MO182_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A6DCu)




#define CAN_MOSTAT182 (CAN_MO182_STAT)


#define CAN_MO183_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A6ECu)




#define CAN_MOAMR183 (CAN_MO183_AMR)


#define CAN_MO183_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A6F8u)




#define CAN_MOAR183 (CAN_MO183_AR)


#define CAN_MO183_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A6FCu)




#define CAN_MOCTR183 (CAN_MO183_CTR)


#define CAN_MO183_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A6F4u)




#define CAN_MODATAH183 (CAN_MO183_DATAH)


#define CAN_MO183_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A6F0u)




#define CAN_MODATAL183 (CAN_MO183_DATAL)


#define CAN_MO183_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A6E0u)




#define CAN_EMO183DATA0 (CAN_MO183_EDATA0)


#define CAN_MO183_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A6E4u)




#define CAN_EMO183DATA1 (CAN_MO183_EDATA1)


#define CAN_MO183_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A6E8u)




#define CAN_EMO183DATA2 (CAN_MO183_EDATA2)


#define CAN_MO183_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A6ECu)




#define CAN_EMO183DATA3 (CAN_MO183_EDATA3)


#define CAN_MO183_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A6F0u)




#define CAN_EMO183DATA4 (CAN_MO183_EDATA4)


#define CAN_MO183_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A6F4u)




#define CAN_EMO183DATA5 (CAN_MO183_EDATA5)


#define CAN_MO183_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A6F8u)




#define CAN_EMO183DATA6 (CAN_MO183_EDATA6)


#define CAN_MO183_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A6E0u)




#define CAN_MOFCR183 (CAN_MO183_FCR)


#define CAN_MO183_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A6E4u)




#define CAN_MOFGPR183 (CAN_MO183_FGPR)


#define CAN_MO183_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A6E8u)




#define CAN_MOIPR183 (CAN_MO183_IPR)


#define CAN_MO183_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A6FCu)




#define CAN_MOSTAT183 (CAN_MO183_STAT)


#define CAN_MO184_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A70Cu)




#define CAN_MOAMR184 (CAN_MO184_AMR)


#define CAN_MO184_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A718u)




#define CAN_MOAR184 (CAN_MO184_AR)


#define CAN_MO184_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A71Cu)




#define CAN_MOCTR184 (CAN_MO184_CTR)


#define CAN_MO184_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A714u)




#define CAN_MODATAH184 (CAN_MO184_DATAH)


#define CAN_MO184_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A710u)




#define CAN_MODATAL184 (CAN_MO184_DATAL)


#define CAN_MO184_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A700u)




#define CAN_EMO184DATA0 (CAN_MO184_EDATA0)


#define CAN_MO184_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A704u)




#define CAN_EMO184DATA1 (CAN_MO184_EDATA1)


#define CAN_MO184_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A708u)




#define CAN_EMO184DATA2 (CAN_MO184_EDATA2)


#define CAN_MO184_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A70Cu)




#define CAN_EMO184DATA3 (CAN_MO184_EDATA3)


#define CAN_MO184_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A710u)




#define CAN_EMO184DATA4 (CAN_MO184_EDATA4)


#define CAN_MO184_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A714u)




#define CAN_EMO184DATA5 (CAN_MO184_EDATA5)


#define CAN_MO184_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A718u)




#define CAN_EMO184DATA6 (CAN_MO184_EDATA6)


#define CAN_MO184_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A700u)




#define CAN_MOFCR184 (CAN_MO184_FCR)


#define CAN_MO184_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A704u)




#define CAN_MOFGPR184 (CAN_MO184_FGPR)


#define CAN_MO184_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A708u)




#define CAN_MOIPR184 (CAN_MO184_IPR)


#define CAN_MO184_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A71Cu)




#define CAN_MOSTAT184 (CAN_MO184_STAT)


#define CAN_MO185_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A72Cu)




#define CAN_MOAMR185 (CAN_MO185_AMR)


#define CAN_MO185_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A738u)




#define CAN_MOAR185 (CAN_MO185_AR)


#define CAN_MO185_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A73Cu)




#define CAN_MOCTR185 (CAN_MO185_CTR)


#define CAN_MO185_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A734u)




#define CAN_MODATAH185 (CAN_MO185_DATAH)


#define CAN_MO185_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A730u)




#define CAN_MODATAL185 (CAN_MO185_DATAL)


#define CAN_MO185_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A720u)




#define CAN_EMO185DATA0 (CAN_MO185_EDATA0)


#define CAN_MO185_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A724u)




#define CAN_EMO185DATA1 (CAN_MO185_EDATA1)


#define CAN_MO185_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A728u)




#define CAN_EMO185DATA2 (CAN_MO185_EDATA2)


#define CAN_MO185_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A72Cu)




#define CAN_EMO185DATA3 (CAN_MO185_EDATA3)


#define CAN_MO185_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A730u)




#define CAN_EMO185DATA4 (CAN_MO185_EDATA4)


#define CAN_MO185_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A734u)




#define CAN_EMO185DATA5 (CAN_MO185_EDATA5)


#define CAN_MO185_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A738u)




#define CAN_EMO185DATA6 (CAN_MO185_EDATA6)


#define CAN_MO185_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A720u)




#define CAN_MOFCR185 (CAN_MO185_FCR)


#define CAN_MO185_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A724u)




#define CAN_MOFGPR185 (CAN_MO185_FGPR)


#define CAN_MO185_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A728u)




#define CAN_MOIPR185 (CAN_MO185_IPR)


#define CAN_MO185_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A73Cu)




#define CAN_MOSTAT185 (CAN_MO185_STAT)


#define CAN_MO186_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A74Cu)




#define CAN_MOAMR186 (CAN_MO186_AMR)


#define CAN_MO186_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A758u)




#define CAN_MOAR186 (CAN_MO186_AR)


#define CAN_MO186_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A75Cu)




#define CAN_MOCTR186 (CAN_MO186_CTR)


#define CAN_MO186_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A754u)




#define CAN_MODATAH186 (CAN_MO186_DATAH)


#define CAN_MO186_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A750u)




#define CAN_MODATAL186 (CAN_MO186_DATAL)


#define CAN_MO186_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A740u)




#define CAN_EMO186DATA0 (CAN_MO186_EDATA0)


#define CAN_MO186_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A744u)




#define CAN_EMO186DATA1 (CAN_MO186_EDATA1)


#define CAN_MO186_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A748u)




#define CAN_EMO186DATA2 (CAN_MO186_EDATA2)


#define CAN_MO186_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A74Cu)




#define CAN_EMO186DATA3 (CAN_MO186_EDATA3)


#define CAN_MO186_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A750u)




#define CAN_EMO186DATA4 (CAN_MO186_EDATA4)


#define CAN_MO186_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A754u)




#define CAN_EMO186DATA5 (CAN_MO186_EDATA5)


#define CAN_MO186_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A758u)




#define CAN_EMO186DATA6 (CAN_MO186_EDATA6)


#define CAN_MO186_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A740u)




#define CAN_MOFCR186 (CAN_MO186_FCR)


#define CAN_MO186_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A744u)




#define CAN_MOFGPR186 (CAN_MO186_FGPR)


#define CAN_MO186_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A748u)




#define CAN_MOIPR186 (CAN_MO186_IPR)


#define CAN_MO186_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A75Cu)




#define CAN_MOSTAT186 (CAN_MO186_STAT)


#define CAN_MO187_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A76Cu)




#define CAN_MOAMR187 (CAN_MO187_AMR)


#define CAN_MO187_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A778u)




#define CAN_MOAR187 (CAN_MO187_AR)


#define CAN_MO187_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A77Cu)




#define CAN_MOCTR187 (CAN_MO187_CTR)


#define CAN_MO187_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A774u)




#define CAN_MODATAH187 (CAN_MO187_DATAH)


#define CAN_MO187_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A770u)




#define CAN_MODATAL187 (CAN_MO187_DATAL)


#define CAN_MO187_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A760u)




#define CAN_EMO187DATA0 (CAN_MO187_EDATA0)


#define CAN_MO187_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A764u)




#define CAN_EMO187DATA1 (CAN_MO187_EDATA1)


#define CAN_MO187_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A768u)




#define CAN_EMO187DATA2 (CAN_MO187_EDATA2)


#define CAN_MO187_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A76Cu)




#define CAN_EMO187DATA3 (CAN_MO187_EDATA3)


#define CAN_MO187_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A770u)




#define CAN_EMO187DATA4 (CAN_MO187_EDATA4)


#define CAN_MO187_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A774u)




#define CAN_EMO187DATA5 (CAN_MO187_EDATA5)


#define CAN_MO187_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A778u)




#define CAN_EMO187DATA6 (CAN_MO187_EDATA6)


#define CAN_MO187_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A760u)




#define CAN_MOFCR187 (CAN_MO187_FCR)


#define CAN_MO187_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A764u)




#define CAN_MOFGPR187 (CAN_MO187_FGPR)


#define CAN_MO187_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A768u)




#define CAN_MOIPR187 (CAN_MO187_IPR)


#define CAN_MO187_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A77Cu)




#define CAN_MOSTAT187 (CAN_MO187_STAT)


#define CAN_MO188_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A78Cu)




#define CAN_MOAMR188 (CAN_MO188_AMR)


#define CAN_MO188_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A798u)




#define CAN_MOAR188 (CAN_MO188_AR)


#define CAN_MO188_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A79Cu)




#define CAN_MOCTR188 (CAN_MO188_CTR)


#define CAN_MO188_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A794u)




#define CAN_MODATAH188 (CAN_MO188_DATAH)


#define CAN_MO188_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A790u)




#define CAN_MODATAL188 (CAN_MO188_DATAL)


#define CAN_MO188_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A780u)




#define CAN_EMO188DATA0 (CAN_MO188_EDATA0)


#define CAN_MO188_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A784u)




#define CAN_EMO188DATA1 (CAN_MO188_EDATA1)


#define CAN_MO188_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A788u)




#define CAN_EMO188DATA2 (CAN_MO188_EDATA2)


#define CAN_MO188_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A78Cu)




#define CAN_EMO188DATA3 (CAN_MO188_EDATA3)


#define CAN_MO188_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A790u)




#define CAN_EMO188DATA4 (CAN_MO188_EDATA4)


#define CAN_MO188_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A794u)




#define CAN_EMO188DATA5 (CAN_MO188_EDATA5)


#define CAN_MO188_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A798u)




#define CAN_EMO188DATA6 (CAN_MO188_EDATA6)


#define CAN_MO188_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A780u)




#define CAN_MOFCR188 (CAN_MO188_FCR)


#define CAN_MO188_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A784u)




#define CAN_MOFGPR188 (CAN_MO188_FGPR)


#define CAN_MO188_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A788u)




#define CAN_MOIPR188 (CAN_MO188_IPR)


#define CAN_MO188_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A79Cu)




#define CAN_MOSTAT188 (CAN_MO188_STAT)


#define CAN_MO189_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A7ACu)




#define CAN_MOAMR189 (CAN_MO189_AMR)


#define CAN_MO189_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A7B8u)




#define CAN_MOAR189 (CAN_MO189_AR)


#define CAN_MO189_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A7BCu)




#define CAN_MOCTR189 (CAN_MO189_CTR)


#define CAN_MO189_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A7B4u)




#define CAN_MODATAH189 (CAN_MO189_DATAH)


#define CAN_MO189_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A7B0u)




#define CAN_MODATAL189 (CAN_MO189_DATAL)


#define CAN_MO189_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A7A0u)




#define CAN_EMO189DATA0 (CAN_MO189_EDATA0)


#define CAN_MO189_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A7A4u)




#define CAN_EMO189DATA1 (CAN_MO189_EDATA1)


#define CAN_MO189_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A7A8u)




#define CAN_EMO189DATA2 (CAN_MO189_EDATA2)


#define CAN_MO189_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A7ACu)




#define CAN_EMO189DATA3 (CAN_MO189_EDATA3)


#define CAN_MO189_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A7B0u)




#define CAN_EMO189DATA4 (CAN_MO189_EDATA4)


#define CAN_MO189_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A7B4u)




#define CAN_EMO189DATA5 (CAN_MO189_EDATA5)


#define CAN_MO189_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A7B8u)




#define CAN_EMO189DATA6 (CAN_MO189_EDATA6)


#define CAN_MO189_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A7A0u)




#define CAN_MOFCR189 (CAN_MO189_FCR)


#define CAN_MO189_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A7A4u)




#define CAN_MOFGPR189 (CAN_MO189_FGPR)


#define CAN_MO189_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A7A8u)




#define CAN_MOIPR189 (CAN_MO189_IPR)


#define CAN_MO189_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A7BCu)




#define CAN_MOSTAT189 (CAN_MO189_STAT)


#define CAN_MO18_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001924Cu)




#define CAN_MOAMR18 (CAN_MO18_AMR)


#define CAN_MO18_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019258u)




#define CAN_MOAR18 (CAN_MO18_AR)


#define CAN_MO18_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001925Cu)




#define CAN_MOCTR18 (CAN_MO18_CTR)


#define CAN_MO18_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019254u)




#define CAN_MODATAH18 (CAN_MO18_DATAH)


#define CAN_MO18_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019250u)




#define CAN_MODATAL18 (CAN_MO18_DATAL)


#define CAN_MO18_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019240u)




#define CAN_EMO18DATA0 (CAN_MO18_EDATA0)


#define CAN_MO18_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019244u)




#define CAN_EMO18DATA1 (CAN_MO18_EDATA1)


#define CAN_MO18_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019248u)




#define CAN_EMO18DATA2 (CAN_MO18_EDATA2)


#define CAN_MO18_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001924Cu)




#define CAN_EMO18DATA3 (CAN_MO18_EDATA3)


#define CAN_MO18_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019250u)




#define CAN_EMO18DATA4 (CAN_MO18_EDATA4)


#define CAN_MO18_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019254u)




#define CAN_EMO18DATA5 (CAN_MO18_EDATA5)


#define CAN_MO18_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019258u)




#define CAN_EMO18DATA6 (CAN_MO18_EDATA6)


#define CAN_MO18_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019240u)




#define CAN_MOFCR18 (CAN_MO18_FCR)


#define CAN_MO18_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019244u)




#define CAN_MOFGPR18 (CAN_MO18_FGPR)


#define CAN_MO18_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019248u)




#define CAN_MOIPR18 (CAN_MO18_IPR)


#define CAN_MO18_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001925Cu)




#define CAN_MOSTAT18 (CAN_MO18_STAT)


#define CAN_MO190_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A7CCu)




#define CAN_MOAMR190 (CAN_MO190_AMR)


#define CAN_MO190_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A7D8u)




#define CAN_MOAR190 (CAN_MO190_AR)


#define CAN_MO190_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A7DCu)




#define CAN_MOCTR190 (CAN_MO190_CTR)


#define CAN_MO190_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A7D4u)




#define CAN_MODATAH190 (CAN_MO190_DATAH)


#define CAN_MO190_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A7D0u)




#define CAN_MODATAL190 (CAN_MO190_DATAL)


#define CAN_MO190_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A7C0u)




#define CAN_EMO190DATA0 (CAN_MO190_EDATA0)


#define CAN_MO190_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A7C4u)




#define CAN_EMO190DATA1 (CAN_MO190_EDATA1)


#define CAN_MO190_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A7C8u)




#define CAN_EMO190DATA2 (CAN_MO190_EDATA2)


#define CAN_MO190_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A7CCu)




#define CAN_EMO190DATA3 (CAN_MO190_EDATA3)


#define CAN_MO190_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A7D0u)




#define CAN_EMO190DATA4 (CAN_MO190_EDATA4)


#define CAN_MO190_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A7D4u)




#define CAN_EMO190DATA5 (CAN_MO190_EDATA5)


#define CAN_MO190_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A7D8u)




#define CAN_EMO190DATA6 (CAN_MO190_EDATA6)


#define CAN_MO190_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A7C0u)




#define CAN_MOFCR190 (CAN_MO190_FCR)


#define CAN_MO190_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A7C4u)




#define CAN_MOFGPR190 (CAN_MO190_FGPR)


#define CAN_MO190_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A7C8u)




#define CAN_MOIPR190 (CAN_MO190_IPR)


#define CAN_MO190_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A7DCu)




#define CAN_MOSTAT190 (CAN_MO190_STAT)


#define CAN_MO191_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A7ECu)




#define CAN_MOAMR191 (CAN_MO191_AMR)


#define CAN_MO191_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A7F8u)




#define CAN_MOAR191 (CAN_MO191_AR)


#define CAN_MO191_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A7FCu)




#define CAN_MOCTR191 (CAN_MO191_CTR)


#define CAN_MO191_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A7F4u)




#define CAN_MODATAH191 (CAN_MO191_DATAH)


#define CAN_MO191_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A7F0u)




#define CAN_MODATAL191 (CAN_MO191_DATAL)


#define CAN_MO191_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A7E0u)




#define CAN_EMO191DATA0 (CAN_MO191_EDATA0)


#define CAN_MO191_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A7E4u)




#define CAN_EMO191DATA1 (CAN_MO191_EDATA1)


#define CAN_MO191_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A7E8u)




#define CAN_EMO191DATA2 (CAN_MO191_EDATA2)


#define CAN_MO191_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A7ECu)




#define CAN_EMO191DATA3 (CAN_MO191_EDATA3)


#define CAN_MO191_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A7F0u)




#define CAN_EMO191DATA4 (CAN_MO191_EDATA4)


#define CAN_MO191_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A7F4u)




#define CAN_EMO191DATA5 (CAN_MO191_EDATA5)


#define CAN_MO191_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A7F8u)




#define CAN_EMO191DATA6 (CAN_MO191_EDATA6)


#define CAN_MO191_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A7E0u)




#define CAN_MOFCR191 (CAN_MO191_FCR)


#define CAN_MO191_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A7E4u)




#define CAN_MOFGPR191 (CAN_MO191_FGPR)


#define CAN_MO191_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A7E8u)




#define CAN_MOIPR191 (CAN_MO191_IPR)


#define CAN_MO191_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A7FCu)




#define CAN_MOSTAT191 (CAN_MO191_STAT)


#define CAN_MO192_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A80Cu)




#define CAN_MOAMR192 (CAN_MO192_AMR)


#define CAN_MO192_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A818u)




#define CAN_MOAR192 (CAN_MO192_AR)


#define CAN_MO192_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A81Cu)




#define CAN_MOCTR192 (CAN_MO192_CTR)


#define CAN_MO192_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A814u)




#define CAN_MODATAH192 (CAN_MO192_DATAH)


#define CAN_MO192_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A810u)




#define CAN_MODATAL192 (CAN_MO192_DATAL)


#define CAN_MO192_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A800u)




#define CAN_EMO192DATA0 (CAN_MO192_EDATA0)


#define CAN_MO192_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A804u)




#define CAN_EMO192DATA1 (CAN_MO192_EDATA1)


#define CAN_MO192_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A808u)




#define CAN_EMO192DATA2 (CAN_MO192_EDATA2)


#define CAN_MO192_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A80Cu)




#define CAN_EMO192DATA3 (CAN_MO192_EDATA3)


#define CAN_MO192_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A810u)




#define CAN_EMO192DATA4 (CAN_MO192_EDATA4)


#define CAN_MO192_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A814u)




#define CAN_EMO192DATA5 (CAN_MO192_EDATA5)


#define CAN_MO192_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A818u)




#define CAN_EMO192DATA6 (CAN_MO192_EDATA6)


#define CAN_MO192_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A800u)




#define CAN_MOFCR192 (CAN_MO192_FCR)


#define CAN_MO192_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A804u)




#define CAN_MOFGPR192 (CAN_MO192_FGPR)


#define CAN_MO192_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A808u)




#define CAN_MOIPR192 (CAN_MO192_IPR)


#define CAN_MO192_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A81Cu)




#define CAN_MOSTAT192 (CAN_MO192_STAT)


#define CAN_MO193_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A82Cu)




#define CAN_MOAMR193 (CAN_MO193_AMR)


#define CAN_MO193_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A838u)




#define CAN_MOAR193 (CAN_MO193_AR)


#define CAN_MO193_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A83Cu)




#define CAN_MOCTR193 (CAN_MO193_CTR)


#define CAN_MO193_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A834u)




#define CAN_MODATAH193 (CAN_MO193_DATAH)


#define CAN_MO193_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A830u)




#define CAN_MODATAL193 (CAN_MO193_DATAL)


#define CAN_MO193_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A820u)




#define CAN_EMO193DATA0 (CAN_MO193_EDATA0)


#define CAN_MO193_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A824u)




#define CAN_EMO193DATA1 (CAN_MO193_EDATA1)


#define CAN_MO193_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A828u)




#define CAN_EMO193DATA2 (CAN_MO193_EDATA2)


#define CAN_MO193_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A82Cu)




#define CAN_EMO193DATA3 (CAN_MO193_EDATA3)


#define CAN_MO193_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A830u)




#define CAN_EMO193DATA4 (CAN_MO193_EDATA4)


#define CAN_MO193_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A834u)




#define CAN_EMO193DATA5 (CAN_MO193_EDATA5)


#define CAN_MO193_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A838u)




#define CAN_EMO193DATA6 (CAN_MO193_EDATA6)


#define CAN_MO193_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A820u)




#define CAN_MOFCR193 (CAN_MO193_FCR)


#define CAN_MO193_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A824u)




#define CAN_MOFGPR193 (CAN_MO193_FGPR)


#define CAN_MO193_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A828u)




#define CAN_MOIPR193 (CAN_MO193_IPR)


#define CAN_MO193_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A83Cu)




#define CAN_MOSTAT193 (CAN_MO193_STAT)


#define CAN_MO194_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A84Cu)




#define CAN_MOAMR194 (CAN_MO194_AMR)


#define CAN_MO194_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A858u)




#define CAN_MOAR194 (CAN_MO194_AR)


#define CAN_MO194_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A85Cu)




#define CAN_MOCTR194 (CAN_MO194_CTR)


#define CAN_MO194_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A854u)




#define CAN_MODATAH194 (CAN_MO194_DATAH)


#define CAN_MO194_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A850u)




#define CAN_MODATAL194 (CAN_MO194_DATAL)


#define CAN_MO194_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A840u)




#define CAN_EMO194DATA0 (CAN_MO194_EDATA0)


#define CAN_MO194_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A844u)




#define CAN_EMO194DATA1 (CAN_MO194_EDATA1)


#define CAN_MO194_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A848u)




#define CAN_EMO194DATA2 (CAN_MO194_EDATA2)


#define CAN_MO194_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A84Cu)




#define CAN_EMO194DATA3 (CAN_MO194_EDATA3)


#define CAN_MO194_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A850u)




#define CAN_EMO194DATA4 (CAN_MO194_EDATA4)


#define CAN_MO194_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A854u)




#define CAN_EMO194DATA5 (CAN_MO194_EDATA5)


#define CAN_MO194_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A858u)




#define CAN_EMO194DATA6 (CAN_MO194_EDATA6)


#define CAN_MO194_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A840u)




#define CAN_MOFCR194 (CAN_MO194_FCR)


#define CAN_MO194_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A844u)




#define CAN_MOFGPR194 (CAN_MO194_FGPR)


#define CAN_MO194_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A848u)




#define CAN_MOIPR194 (CAN_MO194_IPR)


#define CAN_MO194_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A85Cu)




#define CAN_MOSTAT194 (CAN_MO194_STAT)


#define CAN_MO195_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A86Cu)




#define CAN_MOAMR195 (CAN_MO195_AMR)


#define CAN_MO195_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A878u)




#define CAN_MOAR195 (CAN_MO195_AR)


#define CAN_MO195_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A87Cu)




#define CAN_MOCTR195 (CAN_MO195_CTR)


#define CAN_MO195_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A874u)




#define CAN_MODATAH195 (CAN_MO195_DATAH)


#define CAN_MO195_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A870u)




#define CAN_MODATAL195 (CAN_MO195_DATAL)


#define CAN_MO195_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A860u)




#define CAN_EMO195DATA0 (CAN_MO195_EDATA0)


#define CAN_MO195_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A864u)




#define CAN_EMO195DATA1 (CAN_MO195_EDATA1)


#define CAN_MO195_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A868u)




#define CAN_EMO195DATA2 (CAN_MO195_EDATA2)


#define CAN_MO195_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A86Cu)




#define CAN_EMO195DATA3 (CAN_MO195_EDATA3)


#define CAN_MO195_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A870u)




#define CAN_EMO195DATA4 (CAN_MO195_EDATA4)


#define CAN_MO195_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A874u)




#define CAN_EMO195DATA5 (CAN_MO195_EDATA5)


#define CAN_MO195_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A878u)




#define CAN_EMO195DATA6 (CAN_MO195_EDATA6)


#define CAN_MO195_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A860u)




#define CAN_MOFCR195 (CAN_MO195_FCR)


#define CAN_MO195_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A864u)




#define CAN_MOFGPR195 (CAN_MO195_FGPR)


#define CAN_MO195_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A868u)




#define CAN_MOIPR195 (CAN_MO195_IPR)


#define CAN_MO195_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A87Cu)




#define CAN_MOSTAT195 (CAN_MO195_STAT)


#define CAN_MO196_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A88Cu)




#define CAN_MOAMR196 (CAN_MO196_AMR)


#define CAN_MO196_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A898u)




#define CAN_MOAR196 (CAN_MO196_AR)


#define CAN_MO196_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A89Cu)




#define CAN_MOCTR196 (CAN_MO196_CTR)


#define CAN_MO196_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A894u)




#define CAN_MODATAH196 (CAN_MO196_DATAH)


#define CAN_MO196_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A890u)




#define CAN_MODATAL196 (CAN_MO196_DATAL)


#define CAN_MO196_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A880u)




#define CAN_EMO196DATA0 (CAN_MO196_EDATA0)


#define CAN_MO196_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A884u)




#define CAN_EMO196DATA1 (CAN_MO196_EDATA1)


#define CAN_MO196_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A888u)




#define CAN_EMO196DATA2 (CAN_MO196_EDATA2)


#define CAN_MO196_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A88Cu)




#define CAN_EMO196DATA3 (CAN_MO196_EDATA3)


#define CAN_MO196_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A890u)




#define CAN_EMO196DATA4 (CAN_MO196_EDATA4)


#define CAN_MO196_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A894u)




#define CAN_EMO196DATA5 (CAN_MO196_EDATA5)


#define CAN_MO196_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A898u)




#define CAN_EMO196DATA6 (CAN_MO196_EDATA6)


#define CAN_MO196_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A880u)




#define CAN_MOFCR196 (CAN_MO196_FCR)


#define CAN_MO196_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A884u)




#define CAN_MOFGPR196 (CAN_MO196_FGPR)


#define CAN_MO196_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A888u)




#define CAN_MOIPR196 (CAN_MO196_IPR)


#define CAN_MO196_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A89Cu)




#define CAN_MOSTAT196 (CAN_MO196_STAT)


#define CAN_MO197_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A8ACu)




#define CAN_MOAMR197 (CAN_MO197_AMR)


#define CAN_MO197_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A8B8u)




#define CAN_MOAR197 (CAN_MO197_AR)


#define CAN_MO197_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A8BCu)




#define CAN_MOCTR197 (CAN_MO197_CTR)


#define CAN_MO197_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A8B4u)




#define CAN_MODATAH197 (CAN_MO197_DATAH)


#define CAN_MO197_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A8B0u)




#define CAN_MODATAL197 (CAN_MO197_DATAL)


#define CAN_MO197_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A8A0u)




#define CAN_EMO197DATA0 (CAN_MO197_EDATA0)


#define CAN_MO197_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A8A4u)




#define CAN_EMO197DATA1 (CAN_MO197_EDATA1)


#define CAN_MO197_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A8A8u)




#define CAN_EMO197DATA2 (CAN_MO197_EDATA2)


#define CAN_MO197_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A8ACu)




#define CAN_EMO197DATA3 (CAN_MO197_EDATA3)


#define CAN_MO197_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A8B0u)




#define CAN_EMO197DATA4 (CAN_MO197_EDATA4)


#define CAN_MO197_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A8B4u)




#define CAN_EMO197DATA5 (CAN_MO197_EDATA5)


#define CAN_MO197_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A8B8u)




#define CAN_EMO197DATA6 (CAN_MO197_EDATA6)


#define CAN_MO197_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A8A0u)




#define CAN_MOFCR197 (CAN_MO197_FCR)


#define CAN_MO197_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A8A4u)




#define CAN_MOFGPR197 (CAN_MO197_FGPR)


#define CAN_MO197_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A8A8u)




#define CAN_MOIPR197 (CAN_MO197_IPR)


#define CAN_MO197_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A8BCu)




#define CAN_MOSTAT197 (CAN_MO197_STAT)


#define CAN_MO198_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A8CCu)




#define CAN_MOAMR198 (CAN_MO198_AMR)


#define CAN_MO198_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A8D8u)




#define CAN_MOAR198 (CAN_MO198_AR)


#define CAN_MO198_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A8DCu)




#define CAN_MOCTR198 (CAN_MO198_CTR)


#define CAN_MO198_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A8D4u)




#define CAN_MODATAH198 (CAN_MO198_DATAH)


#define CAN_MO198_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A8D0u)




#define CAN_MODATAL198 (CAN_MO198_DATAL)


#define CAN_MO198_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A8C0u)




#define CAN_EMO198DATA0 (CAN_MO198_EDATA0)


#define CAN_MO198_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A8C4u)




#define CAN_EMO198DATA1 (CAN_MO198_EDATA1)


#define CAN_MO198_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A8C8u)




#define CAN_EMO198DATA2 (CAN_MO198_EDATA2)


#define CAN_MO198_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A8CCu)




#define CAN_EMO198DATA3 (CAN_MO198_EDATA3)


#define CAN_MO198_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A8D0u)




#define CAN_EMO198DATA4 (CAN_MO198_EDATA4)


#define CAN_MO198_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A8D4u)




#define CAN_EMO198DATA5 (CAN_MO198_EDATA5)


#define CAN_MO198_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A8D8u)




#define CAN_EMO198DATA6 (CAN_MO198_EDATA6)


#define CAN_MO198_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A8C0u)




#define CAN_MOFCR198 (CAN_MO198_FCR)


#define CAN_MO198_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A8C4u)




#define CAN_MOFGPR198 (CAN_MO198_FGPR)


#define CAN_MO198_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A8C8u)




#define CAN_MOIPR198 (CAN_MO198_IPR)


#define CAN_MO198_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A8DCu)




#define CAN_MOSTAT198 (CAN_MO198_STAT)


#define CAN_MO199_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A8ECu)




#define CAN_MOAMR199 (CAN_MO199_AMR)


#define CAN_MO199_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A8F8u)




#define CAN_MOAR199 (CAN_MO199_AR)


#define CAN_MO199_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A8FCu)




#define CAN_MOCTR199 (CAN_MO199_CTR)


#define CAN_MO199_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A8F4u)




#define CAN_MODATAH199 (CAN_MO199_DATAH)


#define CAN_MO199_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A8F0u)




#define CAN_MODATAL199 (CAN_MO199_DATAL)


#define CAN_MO199_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A8E0u)




#define CAN_EMO199DATA0 (CAN_MO199_EDATA0)


#define CAN_MO199_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A8E4u)




#define CAN_EMO199DATA1 (CAN_MO199_EDATA1)


#define CAN_MO199_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A8E8u)




#define CAN_EMO199DATA2 (CAN_MO199_EDATA2)


#define CAN_MO199_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A8ECu)




#define CAN_EMO199DATA3 (CAN_MO199_EDATA3)


#define CAN_MO199_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A8F0u)




#define CAN_EMO199DATA4 (CAN_MO199_EDATA4)


#define CAN_MO199_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A8F4u)




#define CAN_EMO199DATA5 (CAN_MO199_EDATA5)


#define CAN_MO199_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A8F8u)




#define CAN_EMO199DATA6 (CAN_MO199_EDATA6)


#define CAN_MO199_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A8E0u)




#define CAN_MOFCR199 (CAN_MO199_FCR)


#define CAN_MO199_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A8E4u)




#define CAN_MOFGPR199 (CAN_MO199_FGPR)


#define CAN_MO199_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A8E8u)




#define CAN_MOIPR199 (CAN_MO199_IPR)


#define CAN_MO199_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A8FCu)




#define CAN_MOSTAT199 (CAN_MO199_STAT)


#define CAN_MO19_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001926Cu)




#define CAN_MOAMR19 (CAN_MO19_AMR)


#define CAN_MO19_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019278u)




#define CAN_MOAR19 (CAN_MO19_AR)


#define CAN_MO19_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001927Cu)




#define CAN_MOCTR19 (CAN_MO19_CTR)


#define CAN_MO19_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019274u)




#define CAN_MODATAH19 (CAN_MO19_DATAH)


#define CAN_MO19_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019270u)




#define CAN_MODATAL19 (CAN_MO19_DATAL)


#define CAN_MO19_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019260u)




#define CAN_EMO19DATA0 (CAN_MO19_EDATA0)


#define CAN_MO19_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019264u)




#define CAN_EMO19DATA1 (CAN_MO19_EDATA1)


#define CAN_MO19_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019268u)




#define CAN_EMO19DATA2 (CAN_MO19_EDATA2)


#define CAN_MO19_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001926Cu)




#define CAN_EMO19DATA3 (CAN_MO19_EDATA3)


#define CAN_MO19_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019270u)




#define CAN_EMO19DATA4 (CAN_MO19_EDATA4)


#define CAN_MO19_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019274u)




#define CAN_EMO19DATA5 (CAN_MO19_EDATA5)


#define CAN_MO19_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019278u)




#define CAN_EMO19DATA6 (CAN_MO19_EDATA6)


#define CAN_MO19_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019260u)




#define CAN_MOFCR19 (CAN_MO19_FCR)


#define CAN_MO19_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019264u)




#define CAN_MOFGPR19 (CAN_MO19_FGPR)


#define CAN_MO19_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019268u)




#define CAN_MOIPR19 (CAN_MO19_IPR)


#define CAN_MO19_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001927Cu)




#define CAN_MOSTAT19 (CAN_MO19_STAT)


#define CAN_MO1_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001902Cu)




#define CAN_MOAMR1 (CAN_MO1_AMR)


#define CAN_MO1_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019038u)




#define CAN_MOAR1 (CAN_MO1_AR)


#define CAN_MO1_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001903Cu)




#define CAN_MOCTR1 (CAN_MO1_CTR)


#define CAN_MO1_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019034u)




#define CAN_MODATAH1 (CAN_MO1_DATAH)


#define CAN_MO1_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019030u)




#define CAN_MODATAL1 (CAN_MO1_DATAL)


#define CAN_MO1_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019020u)




#define CAN_EMO1DATA0 (CAN_MO1_EDATA0)


#define CAN_MO1_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019024u)




#define CAN_EMO1DATA1 (CAN_MO1_EDATA1)


#define CAN_MO1_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019028u)




#define CAN_EMO1DATA2 (CAN_MO1_EDATA2)


#define CAN_MO1_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001902Cu)




#define CAN_EMO1DATA3 (CAN_MO1_EDATA3)


#define CAN_MO1_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019030u)




#define CAN_EMO1DATA4 (CAN_MO1_EDATA4)


#define CAN_MO1_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019034u)




#define CAN_EMO1DATA5 (CAN_MO1_EDATA5)


#define CAN_MO1_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019038u)




#define CAN_EMO1DATA6 (CAN_MO1_EDATA6)


#define CAN_MO1_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019020u)




#define CAN_MOFCR1 (CAN_MO1_FCR)


#define CAN_MO1_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019024u)




#define CAN_MOFGPR1 (CAN_MO1_FGPR)


#define CAN_MO1_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019028u)




#define CAN_MOIPR1 (CAN_MO1_IPR)


#define CAN_MO1_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001903Cu)




#define CAN_MOSTAT1 (CAN_MO1_STAT)


#define CAN_MO200_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A90Cu)




#define CAN_MOAMR200 (CAN_MO200_AMR)


#define CAN_MO200_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A918u)




#define CAN_MOAR200 (CAN_MO200_AR)


#define CAN_MO200_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A91Cu)




#define CAN_MOCTR200 (CAN_MO200_CTR)


#define CAN_MO200_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A914u)




#define CAN_MODATAH200 (CAN_MO200_DATAH)


#define CAN_MO200_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A910u)




#define CAN_MODATAL200 (CAN_MO200_DATAL)


#define CAN_MO200_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A900u)




#define CAN_EMO200DATA0 (CAN_MO200_EDATA0)


#define CAN_MO200_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A904u)




#define CAN_EMO200DATA1 (CAN_MO200_EDATA1)


#define CAN_MO200_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A908u)




#define CAN_EMO200DATA2 (CAN_MO200_EDATA2)


#define CAN_MO200_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A90Cu)




#define CAN_EMO200DATA3 (CAN_MO200_EDATA3)


#define CAN_MO200_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A910u)




#define CAN_EMO200DATA4 (CAN_MO200_EDATA4)


#define CAN_MO200_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A914u)




#define CAN_EMO200DATA5 (CAN_MO200_EDATA5)


#define CAN_MO200_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A918u)




#define CAN_EMO200DATA6 (CAN_MO200_EDATA6)


#define CAN_MO200_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A900u)




#define CAN_MOFCR200 (CAN_MO200_FCR)


#define CAN_MO200_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A904u)




#define CAN_MOFGPR200 (CAN_MO200_FGPR)


#define CAN_MO200_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A908u)




#define CAN_MOIPR200 (CAN_MO200_IPR)


#define CAN_MO200_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A91Cu)




#define CAN_MOSTAT200 (CAN_MO200_STAT)


#define CAN_MO201_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A92Cu)




#define CAN_MOAMR201 (CAN_MO201_AMR)


#define CAN_MO201_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A938u)




#define CAN_MOAR201 (CAN_MO201_AR)


#define CAN_MO201_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A93Cu)




#define CAN_MOCTR201 (CAN_MO201_CTR)


#define CAN_MO201_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A934u)




#define CAN_MODATAH201 (CAN_MO201_DATAH)


#define CAN_MO201_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A930u)




#define CAN_MODATAL201 (CAN_MO201_DATAL)


#define CAN_MO201_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A920u)




#define CAN_EMO201DATA0 (CAN_MO201_EDATA0)


#define CAN_MO201_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A924u)




#define CAN_EMO201DATA1 (CAN_MO201_EDATA1)


#define CAN_MO201_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A928u)




#define CAN_EMO201DATA2 (CAN_MO201_EDATA2)


#define CAN_MO201_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A92Cu)




#define CAN_EMO201DATA3 (CAN_MO201_EDATA3)


#define CAN_MO201_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A930u)




#define CAN_EMO201DATA4 (CAN_MO201_EDATA4)


#define CAN_MO201_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A934u)




#define CAN_EMO201DATA5 (CAN_MO201_EDATA5)


#define CAN_MO201_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A938u)




#define CAN_EMO201DATA6 (CAN_MO201_EDATA6)


#define CAN_MO201_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A920u)




#define CAN_MOFCR201 (CAN_MO201_FCR)


#define CAN_MO201_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A924u)




#define CAN_MOFGPR201 (CAN_MO201_FGPR)


#define CAN_MO201_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A928u)




#define CAN_MOIPR201 (CAN_MO201_IPR)


#define CAN_MO201_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A93Cu)




#define CAN_MOSTAT201 (CAN_MO201_STAT)


#define CAN_MO202_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A94Cu)




#define CAN_MOAMR202 (CAN_MO202_AMR)


#define CAN_MO202_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A958u)




#define CAN_MOAR202 (CAN_MO202_AR)


#define CAN_MO202_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A95Cu)




#define CAN_MOCTR202 (CAN_MO202_CTR)


#define CAN_MO202_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A954u)




#define CAN_MODATAH202 (CAN_MO202_DATAH)


#define CAN_MO202_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A950u)




#define CAN_MODATAL202 (CAN_MO202_DATAL)


#define CAN_MO202_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A940u)




#define CAN_EMO202DATA0 (CAN_MO202_EDATA0)


#define CAN_MO202_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A944u)




#define CAN_EMO202DATA1 (CAN_MO202_EDATA1)


#define CAN_MO202_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A948u)




#define CAN_EMO202DATA2 (CAN_MO202_EDATA2)


#define CAN_MO202_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A94Cu)




#define CAN_EMO202DATA3 (CAN_MO202_EDATA3)


#define CAN_MO202_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A950u)




#define CAN_EMO202DATA4 (CAN_MO202_EDATA4)


#define CAN_MO202_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A954u)




#define CAN_EMO202DATA5 (CAN_MO202_EDATA5)


#define CAN_MO202_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A958u)




#define CAN_EMO202DATA6 (CAN_MO202_EDATA6)


#define CAN_MO202_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A940u)




#define CAN_MOFCR202 (CAN_MO202_FCR)


#define CAN_MO202_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A944u)




#define CAN_MOFGPR202 (CAN_MO202_FGPR)


#define CAN_MO202_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A948u)




#define CAN_MOIPR202 (CAN_MO202_IPR)


#define CAN_MO202_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A95Cu)




#define CAN_MOSTAT202 (CAN_MO202_STAT)


#define CAN_MO203_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A96Cu)




#define CAN_MOAMR203 (CAN_MO203_AMR)


#define CAN_MO203_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A978u)




#define CAN_MOAR203 (CAN_MO203_AR)


#define CAN_MO203_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A97Cu)




#define CAN_MOCTR203 (CAN_MO203_CTR)


#define CAN_MO203_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A974u)




#define CAN_MODATAH203 (CAN_MO203_DATAH)


#define CAN_MO203_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A970u)




#define CAN_MODATAL203 (CAN_MO203_DATAL)


#define CAN_MO203_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A960u)




#define CAN_EMO203DATA0 (CAN_MO203_EDATA0)


#define CAN_MO203_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A964u)




#define CAN_EMO203DATA1 (CAN_MO203_EDATA1)


#define CAN_MO203_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A968u)




#define CAN_EMO203DATA2 (CAN_MO203_EDATA2)


#define CAN_MO203_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A96Cu)




#define CAN_EMO203DATA3 (CAN_MO203_EDATA3)


#define CAN_MO203_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A970u)




#define CAN_EMO203DATA4 (CAN_MO203_EDATA4)


#define CAN_MO203_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A974u)




#define CAN_EMO203DATA5 (CAN_MO203_EDATA5)


#define CAN_MO203_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A978u)




#define CAN_EMO203DATA6 (CAN_MO203_EDATA6)


#define CAN_MO203_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A960u)




#define CAN_MOFCR203 (CAN_MO203_FCR)


#define CAN_MO203_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A964u)




#define CAN_MOFGPR203 (CAN_MO203_FGPR)


#define CAN_MO203_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A968u)




#define CAN_MOIPR203 (CAN_MO203_IPR)


#define CAN_MO203_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A97Cu)




#define CAN_MOSTAT203 (CAN_MO203_STAT)


#define CAN_MO204_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A98Cu)




#define CAN_MOAMR204 (CAN_MO204_AMR)


#define CAN_MO204_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A998u)




#define CAN_MOAR204 (CAN_MO204_AR)


#define CAN_MO204_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A99Cu)




#define CAN_MOCTR204 (CAN_MO204_CTR)


#define CAN_MO204_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A994u)




#define CAN_MODATAH204 (CAN_MO204_DATAH)


#define CAN_MO204_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A990u)




#define CAN_MODATAL204 (CAN_MO204_DATAL)


#define CAN_MO204_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A980u)




#define CAN_EMO204DATA0 (CAN_MO204_EDATA0)


#define CAN_MO204_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A984u)




#define CAN_EMO204DATA1 (CAN_MO204_EDATA1)


#define CAN_MO204_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A988u)




#define CAN_EMO204DATA2 (CAN_MO204_EDATA2)


#define CAN_MO204_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A98Cu)




#define CAN_EMO204DATA3 (CAN_MO204_EDATA3)


#define CAN_MO204_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A990u)




#define CAN_EMO204DATA4 (CAN_MO204_EDATA4)


#define CAN_MO204_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A994u)




#define CAN_EMO204DATA5 (CAN_MO204_EDATA5)


#define CAN_MO204_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A998u)




#define CAN_EMO204DATA6 (CAN_MO204_EDATA6)


#define CAN_MO204_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A980u)




#define CAN_MOFCR204 (CAN_MO204_FCR)


#define CAN_MO204_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A984u)




#define CAN_MOFGPR204 (CAN_MO204_FGPR)


#define CAN_MO204_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A988u)




#define CAN_MOIPR204 (CAN_MO204_IPR)


#define CAN_MO204_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A99Cu)




#define CAN_MOSTAT204 (CAN_MO204_STAT)


#define CAN_MO205_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A9ACu)




#define CAN_MOAMR205 (CAN_MO205_AMR)


#define CAN_MO205_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A9B8u)




#define CAN_MOAR205 (CAN_MO205_AR)


#define CAN_MO205_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A9BCu)




#define CAN_MOCTR205 (CAN_MO205_CTR)


#define CAN_MO205_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A9B4u)




#define CAN_MODATAH205 (CAN_MO205_DATAH)


#define CAN_MO205_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A9B0u)




#define CAN_MODATAL205 (CAN_MO205_DATAL)


#define CAN_MO205_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A9A0u)




#define CAN_EMO205DATA0 (CAN_MO205_EDATA0)


#define CAN_MO205_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A9A4u)




#define CAN_EMO205DATA1 (CAN_MO205_EDATA1)


#define CAN_MO205_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A9A8u)




#define CAN_EMO205DATA2 (CAN_MO205_EDATA2)


#define CAN_MO205_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A9ACu)




#define CAN_EMO205DATA3 (CAN_MO205_EDATA3)


#define CAN_MO205_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A9B0u)




#define CAN_EMO205DATA4 (CAN_MO205_EDATA4)


#define CAN_MO205_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A9B4u)




#define CAN_EMO205DATA5 (CAN_MO205_EDATA5)


#define CAN_MO205_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A9B8u)




#define CAN_EMO205DATA6 (CAN_MO205_EDATA6)


#define CAN_MO205_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A9A0u)




#define CAN_MOFCR205 (CAN_MO205_FCR)


#define CAN_MO205_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A9A4u)




#define CAN_MOFGPR205 (CAN_MO205_FGPR)


#define CAN_MO205_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A9A8u)




#define CAN_MOIPR205 (CAN_MO205_IPR)


#define CAN_MO205_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A9BCu)




#define CAN_MOSTAT205 (CAN_MO205_STAT)


#define CAN_MO206_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A9CCu)




#define CAN_MOAMR206 (CAN_MO206_AMR)


#define CAN_MO206_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A9D8u)




#define CAN_MOAR206 (CAN_MO206_AR)


#define CAN_MO206_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A9DCu)




#define CAN_MOCTR206 (CAN_MO206_CTR)


#define CAN_MO206_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A9D4u)




#define CAN_MODATAH206 (CAN_MO206_DATAH)


#define CAN_MO206_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A9D0u)




#define CAN_MODATAL206 (CAN_MO206_DATAL)


#define CAN_MO206_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A9C0u)




#define CAN_EMO206DATA0 (CAN_MO206_EDATA0)


#define CAN_MO206_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A9C4u)




#define CAN_EMO206DATA1 (CAN_MO206_EDATA1)


#define CAN_MO206_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A9C8u)




#define CAN_EMO206DATA2 (CAN_MO206_EDATA2)


#define CAN_MO206_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A9CCu)




#define CAN_EMO206DATA3 (CAN_MO206_EDATA3)


#define CAN_MO206_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A9D0u)




#define CAN_EMO206DATA4 (CAN_MO206_EDATA4)


#define CAN_MO206_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A9D4u)




#define CAN_EMO206DATA5 (CAN_MO206_EDATA5)


#define CAN_MO206_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A9D8u)




#define CAN_EMO206DATA6 (CAN_MO206_EDATA6)


#define CAN_MO206_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A9C0u)




#define CAN_MOFCR206 (CAN_MO206_FCR)


#define CAN_MO206_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A9C4u)




#define CAN_MOFGPR206 (CAN_MO206_FGPR)


#define CAN_MO206_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A9C8u)




#define CAN_MOIPR206 (CAN_MO206_IPR)


#define CAN_MO206_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A9DCu)




#define CAN_MOSTAT206 (CAN_MO206_STAT)


#define CAN_MO207_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001A9ECu)




#define CAN_MOAMR207 (CAN_MO207_AMR)


#define CAN_MO207_AR (*(volatile Ifx_CAN_MO_AR*)0xF001A9F8u)




#define CAN_MOAR207 (CAN_MO207_AR)


#define CAN_MO207_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001A9FCu)




#define CAN_MOCTR207 (CAN_MO207_CTR)


#define CAN_MO207_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001A9F4u)




#define CAN_MODATAH207 (CAN_MO207_DATAH)


#define CAN_MO207_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001A9F0u)




#define CAN_MODATAL207 (CAN_MO207_DATAL)


#define CAN_MO207_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001A9E0u)




#define CAN_EMO207DATA0 (CAN_MO207_EDATA0)


#define CAN_MO207_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001A9E4u)




#define CAN_EMO207DATA1 (CAN_MO207_EDATA1)


#define CAN_MO207_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001A9E8u)




#define CAN_EMO207DATA2 (CAN_MO207_EDATA2)


#define CAN_MO207_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001A9ECu)




#define CAN_EMO207DATA3 (CAN_MO207_EDATA3)


#define CAN_MO207_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001A9F0u)




#define CAN_EMO207DATA4 (CAN_MO207_EDATA4)


#define CAN_MO207_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001A9F4u)




#define CAN_EMO207DATA5 (CAN_MO207_EDATA5)


#define CAN_MO207_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001A9F8u)




#define CAN_EMO207DATA6 (CAN_MO207_EDATA6)


#define CAN_MO207_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001A9E0u)




#define CAN_MOFCR207 (CAN_MO207_FCR)


#define CAN_MO207_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001A9E4u)




#define CAN_MOFGPR207 (CAN_MO207_FGPR)


#define CAN_MO207_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001A9E8u)




#define CAN_MOIPR207 (CAN_MO207_IPR)


#define CAN_MO207_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001A9FCu)




#define CAN_MOSTAT207 (CAN_MO207_STAT)


#define CAN_MO208_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001AA0Cu)




#define CAN_MOAMR208 (CAN_MO208_AMR)


#define CAN_MO208_AR (*(volatile Ifx_CAN_MO_AR*)0xF001AA18u)




#define CAN_MOAR208 (CAN_MO208_AR)


#define CAN_MO208_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001AA1Cu)




#define CAN_MOCTR208 (CAN_MO208_CTR)


#define CAN_MO208_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001AA14u)




#define CAN_MODATAH208 (CAN_MO208_DATAH)


#define CAN_MO208_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001AA10u)




#define CAN_MODATAL208 (CAN_MO208_DATAL)


#define CAN_MO208_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001AA00u)




#define CAN_EMO208DATA0 (CAN_MO208_EDATA0)


#define CAN_MO208_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001AA04u)




#define CAN_EMO208DATA1 (CAN_MO208_EDATA1)


#define CAN_MO208_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001AA08u)




#define CAN_EMO208DATA2 (CAN_MO208_EDATA2)


#define CAN_MO208_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001AA0Cu)




#define CAN_EMO208DATA3 (CAN_MO208_EDATA3)


#define CAN_MO208_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001AA10u)




#define CAN_EMO208DATA4 (CAN_MO208_EDATA4)


#define CAN_MO208_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001AA14u)




#define CAN_EMO208DATA5 (CAN_MO208_EDATA5)


#define CAN_MO208_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001AA18u)




#define CAN_EMO208DATA6 (CAN_MO208_EDATA6)


#define CAN_MO208_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001AA00u)




#define CAN_MOFCR208 (CAN_MO208_FCR)


#define CAN_MO208_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001AA04u)




#define CAN_MOFGPR208 (CAN_MO208_FGPR)


#define CAN_MO208_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001AA08u)




#define CAN_MOIPR208 (CAN_MO208_IPR)


#define CAN_MO208_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001AA1Cu)




#define CAN_MOSTAT208 (CAN_MO208_STAT)


#define CAN_MO209_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001AA2Cu)




#define CAN_MOAMR209 (CAN_MO209_AMR)


#define CAN_MO209_AR (*(volatile Ifx_CAN_MO_AR*)0xF001AA38u)




#define CAN_MOAR209 (CAN_MO209_AR)


#define CAN_MO209_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001AA3Cu)




#define CAN_MOCTR209 (CAN_MO209_CTR)


#define CAN_MO209_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001AA34u)




#define CAN_MODATAH209 (CAN_MO209_DATAH)


#define CAN_MO209_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001AA30u)




#define CAN_MODATAL209 (CAN_MO209_DATAL)


#define CAN_MO209_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001AA20u)




#define CAN_EMO209DATA0 (CAN_MO209_EDATA0)


#define CAN_MO209_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001AA24u)




#define CAN_EMO209DATA1 (CAN_MO209_EDATA1)


#define CAN_MO209_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001AA28u)




#define CAN_EMO209DATA2 (CAN_MO209_EDATA2)


#define CAN_MO209_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001AA2Cu)




#define CAN_EMO209DATA3 (CAN_MO209_EDATA3)


#define CAN_MO209_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001AA30u)




#define CAN_EMO209DATA4 (CAN_MO209_EDATA4)


#define CAN_MO209_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001AA34u)




#define CAN_EMO209DATA5 (CAN_MO209_EDATA5)


#define CAN_MO209_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001AA38u)




#define CAN_EMO209DATA6 (CAN_MO209_EDATA6)


#define CAN_MO209_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001AA20u)




#define CAN_MOFCR209 (CAN_MO209_FCR)


#define CAN_MO209_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001AA24u)




#define CAN_MOFGPR209 (CAN_MO209_FGPR)


#define CAN_MO209_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001AA28u)




#define CAN_MOIPR209 (CAN_MO209_IPR)


#define CAN_MO209_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001AA3Cu)




#define CAN_MOSTAT209 (CAN_MO209_STAT)


#define CAN_MO20_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001928Cu)




#define CAN_MOAMR20 (CAN_MO20_AMR)


#define CAN_MO20_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019298u)




#define CAN_MOAR20 (CAN_MO20_AR)


#define CAN_MO20_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001929Cu)




#define CAN_MOCTR20 (CAN_MO20_CTR)


#define CAN_MO20_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019294u)




#define CAN_MODATAH20 (CAN_MO20_DATAH)


#define CAN_MO20_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019290u)




#define CAN_MODATAL20 (CAN_MO20_DATAL)


#define CAN_MO20_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019280u)




#define CAN_EMO20DATA0 (CAN_MO20_EDATA0)


#define CAN_MO20_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019284u)




#define CAN_EMO20DATA1 (CAN_MO20_EDATA1)


#define CAN_MO20_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019288u)




#define CAN_EMO20DATA2 (CAN_MO20_EDATA2)


#define CAN_MO20_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001928Cu)




#define CAN_EMO20DATA3 (CAN_MO20_EDATA3)


#define CAN_MO20_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019290u)




#define CAN_EMO20DATA4 (CAN_MO20_EDATA4)


#define CAN_MO20_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019294u)




#define CAN_EMO20DATA5 (CAN_MO20_EDATA5)


#define CAN_MO20_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019298u)




#define CAN_EMO20DATA6 (CAN_MO20_EDATA6)


#define CAN_MO20_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019280u)




#define CAN_MOFCR20 (CAN_MO20_FCR)


#define CAN_MO20_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019284u)




#define CAN_MOFGPR20 (CAN_MO20_FGPR)


#define CAN_MO20_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019288u)




#define CAN_MOIPR20 (CAN_MO20_IPR)


#define CAN_MO20_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001929Cu)




#define CAN_MOSTAT20 (CAN_MO20_STAT)


#define CAN_MO210_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001AA4Cu)




#define CAN_MOAMR210 (CAN_MO210_AMR)


#define CAN_MO210_AR (*(volatile Ifx_CAN_MO_AR*)0xF001AA58u)




#define CAN_MOAR210 (CAN_MO210_AR)


#define CAN_MO210_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001AA5Cu)




#define CAN_MOCTR210 (CAN_MO210_CTR)


#define CAN_MO210_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001AA54u)




#define CAN_MODATAH210 (CAN_MO210_DATAH)


#define CAN_MO210_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001AA50u)




#define CAN_MODATAL210 (CAN_MO210_DATAL)


#define CAN_MO210_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001AA40u)




#define CAN_EMO210DATA0 (CAN_MO210_EDATA0)


#define CAN_MO210_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001AA44u)




#define CAN_EMO210DATA1 (CAN_MO210_EDATA1)


#define CAN_MO210_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001AA48u)




#define CAN_EMO210DATA2 (CAN_MO210_EDATA2)


#define CAN_MO210_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001AA4Cu)




#define CAN_EMO210DATA3 (CAN_MO210_EDATA3)


#define CAN_MO210_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001AA50u)




#define CAN_EMO210DATA4 (CAN_MO210_EDATA4)


#define CAN_MO210_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001AA54u)




#define CAN_EMO210DATA5 (CAN_MO210_EDATA5)


#define CAN_MO210_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001AA58u)




#define CAN_EMO210DATA6 (CAN_MO210_EDATA6)


#define CAN_MO210_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001AA40u)




#define CAN_MOFCR210 (CAN_MO210_FCR)


#define CAN_MO210_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001AA44u)




#define CAN_MOFGPR210 (CAN_MO210_FGPR)


#define CAN_MO210_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001AA48u)




#define CAN_MOIPR210 (CAN_MO210_IPR)


#define CAN_MO210_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001AA5Cu)




#define CAN_MOSTAT210 (CAN_MO210_STAT)


#define CAN_MO211_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001AA6Cu)




#define CAN_MOAMR211 (CAN_MO211_AMR)


#define CAN_MO211_AR (*(volatile Ifx_CAN_MO_AR*)0xF001AA78u)




#define CAN_MOAR211 (CAN_MO211_AR)


#define CAN_MO211_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001AA7Cu)




#define CAN_MOCTR211 (CAN_MO211_CTR)


#define CAN_MO211_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001AA74u)




#define CAN_MODATAH211 (CAN_MO211_DATAH)


#define CAN_MO211_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001AA70u)




#define CAN_MODATAL211 (CAN_MO211_DATAL)


#define CAN_MO211_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001AA60u)




#define CAN_EMO211DATA0 (CAN_MO211_EDATA0)


#define CAN_MO211_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001AA64u)




#define CAN_EMO211DATA1 (CAN_MO211_EDATA1)


#define CAN_MO211_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001AA68u)




#define CAN_EMO211DATA2 (CAN_MO211_EDATA2)


#define CAN_MO211_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001AA6Cu)




#define CAN_EMO211DATA3 (CAN_MO211_EDATA3)


#define CAN_MO211_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001AA70u)




#define CAN_EMO211DATA4 (CAN_MO211_EDATA4)


#define CAN_MO211_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001AA74u)




#define CAN_EMO211DATA5 (CAN_MO211_EDATA5)


#define CAN_MO211_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001AA78u)




#define CAN_EMO211DATA6 (CAN_MO211_EDATA6)


#define CAN_MO211_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001AA60u)




#define CAN_MOFCR211 (CAN_MO211_FCR)


#define CAN_MO211_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001AA64u)




#define CAN_MOFGPR211 (CAN_MO211_FGPR)


#define CAN_MO211_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001AA68u)




#define CAN_MOIPR211 (CAN_MO211_IPR)


#define CAN_MO211_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001AA7Cu)




#define CAN_MOSTAT211 (CAN_MO211_STAT)


#define CAN_MO212_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001AA8Cu)




#define CAN_MOAMR212 (CAN_MO212_AMR)


#define CAN_MO212_AR (*(volatile Ifx_CAN_MO_AR*)0xF001AA98u)




#define CAN_MOAR212 (CAN_MO212_AR)


#define CAN_MO212_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001AA9Cu)




#define CAN_MOCTR212 (CAN_MO212_CTR)


#define CAN_MO212_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001AA94u)




#define CAN_MODATAH212 (CAN_MO212_DATAH)


#define CAN_MO212_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001AA90u)




#define CAN_MODATAL212 (CAN_MO212_DATAL)


#define CAN_MO212_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001AA80u)




#define CAN_EMO212DATA0 (CAN_MO212_EDATA0)


#define CAN_MO212_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001AA84u)




#define CAN_EMO212DATA1 (CAN_MO212_EDATA1)


#define CAN_MO212_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001AA88u)




#define CAN_EMO212DATA2 (CAN_MO212_EDATA2)


#define CAN_MO212_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001AA8Cu)




#define CAN_EMO212DATA3 (CAN_MO212_EDATA3)


#define CAN_MO212_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001AA90u)




#define CAN_EMO212DATA4 (CAN_MO212_EDATA4)


#define CAN_MO212_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001AA94u)




#define CAN_EMO212DATA5 (CAN_MO212_EDATA5)


#define CAN_MO212_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001AA98u)




#define CAN_EMO212DATA6 (CAN_MO212_EDATA6)


#define CAN_MO212_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001AA80u)




#define CAN_MOFCR212 (CAN_MO212_FCR)


#define CAN_MO212_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001AA84u)




#define CAN_MOFGPR212 (CAN_MO212_FGPR)


#define CAN_MO212_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001AA88u)




#define CAN_MOIPR212 (CAN_MO212_IPR)


#define CAN_MO212_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001AA9Cu)




#define CAN_MOSTAT212 (CAN_MO212_STAT)


#define CAN_MO213_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001AAACu)




#define CAN_MOAMR213 (CAN_MO213_AMR)


#define CAN_MO213_AR (*(volatile Ifx_CAN_MO_AR*)0xF001AAB8u)




#define CAN_MOAR213 (CAN_MO213_AR)


#define CAN_MO213_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001AABCu)




#define CAN_MOCTR213 (CAN_MO213_CTR)


#define CAN_MO213_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001AAB4u)




#define CAN_MODATAH213 (CAN_MO213_DATAH)


#define CAN_MO213_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001AAB0u)




#define CAN_MODATAL213 (CAN_MO213_DATAL)


#define CAN_MO213_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001AAA0u)




#define CAN_EMO213DATA0 (CAN_MO213_EDATA0)


#define CAN_MO213_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001AAA4u)




#define CAN_EMO213DATA1 (CAN_MO213_EDATA1)


#define CAN_MO213_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001AAA8u)




#define CAN_EMO213DATA2 (CAN_MO213_EDATA2)


#define CAN_MO213_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001AAACu)




#define CAN_EMO213DATA3 (CAN_MO213_EDATA3)


#define CAN_MO213_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001AAB0u)




#define CAN_EMO213DATA4 (CAN_MO213_EDATA4)


#define CAN_MO213_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001AAB4u)




#define CAN_EMO213DATA5 (CAN_MO213_EDATA5)


#define CAN_MO213_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001AAB8u)




#define CAN_EMO213DATA6 (CAN_MO213_EDATA6)


#define CAN_MO213_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001AAA0u)




#define CAN_MOFCR213 (CAN_MO213_FCR)


#define CAN_MO213_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001AAA4u)




#define CAN_MOFGPR213 (CAN_MO213_FGPR)


#define CAN_MO213_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001AAA8u)




#define CAN_MOIPR213 (CAN_MO213_IPR)


#define CAN_MO213_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001AABCu)




#define CAN_MOSTAT213 (CAN_MO213_STAT)


#define CAN_MO214_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001AACCu)




#define CAN_MOAMR214 (CAN_MO214_AMR)


#define CAN_MO214_AR (*(volatile Ifx_CAN_MO_AR*)0xF001AAD8u)




#define CAN_MOAR214 (CAN_MO214_AR)


#define CAN_MO214_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001AADCu)




#define CAN_MOCTR214 (CAN_MO214_CTR)


#define CAN_MO214_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001AAD4u)




#define CAN_MODATAH214 (CAN_MO214_DATAH)


#define CAN_MO214_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001AAD0u)




#define CAN_MODATAL214 (CAN_MO214_DATAL)


#define CAN_MO214_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001AAC0u)




#define CAN_EMO214DATA0 (CAN_MO214_EDATA0)


#define CAN_MO214_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001AAC4u)




#define CAN_EMO214DATA1 (CAN_MO214_EDATA1)


#define CAN_MO214_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001AAC8u)




#define CAN_EMO214DATA2 (CAN_MO214_EDATA2)


#define CAN_MO214_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001AACCu)




#define CAN_EMO214DATA3 (CAN_MO214_EDATA3)


#define CAN_MO214_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001AAD0u)




#define CAN_EMO214DATA4 (CAN_MO214_EDATA4)


#define CAN_MO214_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001AAD4u)




#define CAN_EMO214DATA5 (CAN_MO214_EDATA5)


#define CAN_MO214_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001AAD8u)




#define CAN_EMO214DATA6 (CAN_MO214_EDATA6)


#define CAN_MO214_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001AAC0u)




#define CAN_MOFCR214 (CAN_MO214_FCR)


#define CAN_MO214_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001AAC4u)




#define CAN_MOFGPR214 (CAN_MO214_FGPR)


#define CAN_MO214_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001AAC8u)




#define CAN_MOIPR214 (CAN_MO214_IPR)


#define CAN_MO214_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001AADCu)




#define CAN_MOSTAT214 (CAN_MO214_STAT)


#define CAN_MO215_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001AAECu)




#define CAN_MOAMR215 (CAN_MO215_AMR)


#define CAN_MO215_AR (*(volatile Ifx_CAN_MO_AR*)0xF001AAF8u)




#define CAN_MOAR215 (CAN_MO215_AR)


#define CAN_MO215_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001AAFCu)




#define CAN_MOCTR215 (CAN_MO215_CTR)


#define CAN_MO215_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001AAF4u)




#define CAN_MODATAH215 (CAN_MO215_DATAH)


#define CAN_MO215_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001AAF0u)




#define CAN_MODATAL215 (CAN_MO215_DATAL)


#define CAN_MO215_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001AAE0u)




#define CAN_EMO215DATA0 (CAN_MO215_EDATA0)


#define CAN_MO215_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001AAE4u)




#define CAN_EMO215DATA1 (CAN_MO215_EDATA1)


#define CAN_MO215_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001AAE8u)




#define CAN_EMO215DATA2 (CAN_MO215_EDATA2)


#define CAN_MO215_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001AAECu)




#define CAN_EMO215DATA3 (CAN_MO215_EDATA3)


#define CAN_MO215_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001AAF0u)




#define CAN_EMO215DATA4 (CAN_MO215_EDATA4)


#define CAN_MO215_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001AAF4u)




#define CAN_EMO215DATA5 (CAN_MO215_EDATA5)


#define CAN_MO215_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001AAF8u)




#define CAN_EMO215DATA6 (CAN_MO215_EDATA6)


#define CAN_MO215_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001AAE0u)




#define CAN_MOFCR215 (CAN_MO215_FCR)


#define CAN_MO215_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001AAE4u)




#define CAN_MOFGPR215 (CAN_MO215_FGPR)


#define CAN_MO215_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001AAE8u)




#define CAN_MOIPR215 (CAN_MO215_IPR)


#define CAN_MO215_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001AAFCu)




#define CAN_MOSTAT215 (CAN_MO215_STAT)


#define CAN_MO216_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001AB0Cu)




#define CAN_MOAMR216 (CAN_MO216_AMR)


#define CAN_MO216_AR (*(volatile Ifx_CAN_MO_AR*)0xF001AB18u)




#define CAN_MOAR216 (CAN_MO216_AR)


#define CAN_MO216_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001AB1Cu)




#define CAN_MOCTR216 (CAN_MO216_CTR)


#define CAN_MO216_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001AB14u)




#define CAN_MODATAH216 (CAN_MO216_DATAH)


#define CAN_MO216_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001AB10u)




#define CAN_MODATAL216 (CAN_MO216_DATAL)


#define CAN_MO216_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001AB00u)




#define CAN_EMO216DATA0 (CAN_MO216_EDATA0)


#define CAN_MO216_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001AB04u)




#define CAN_EMO216DATA1 (CAN_MO216_EDATA1)


#define CAN_MO216_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001AB08u)




#define CAN_EMO216DATA2 (CAN_MO216_EDATA2)


#define CAN_MO216_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001AB0Cu)




#define CAN_EMO216DATA3 (CAN_MO216_EDATA3)


#define CAN_MO216_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001AB10u)




#define CAN_EMO216DATA4 (CAN_MO216_EDATA4)


#define CAN_MO216_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001AB14u)




#define CAN_EMO216DATA5 (CAN_MO216_EDATA5)


#define CAN_MO216_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001AB18u)




#define CAN_EMO216DATA6 (CAN_MO216_EDATA6)


#define CAN_MO216_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001AB00u)




#define CAN_MOFCR216 (CAN_MO216_FCR)


#define CAN_MO216_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001AB04u)




#define CAN_MOFGPR216 (CAN_MO216_FGPR)


#define CAN_MO216_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001AB08u)




#define CAN_MOIPR216 (CAN_MO216_IPR)


#define CAN_MO216_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001AB1Cu)




#define CAN_MOSTAT216 (CAN_MO216_STAT)


#define CAN_MO217_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001AB2Cu)




#define CAN_MOAMR217 (CAN_MO217_AMR)


#define CAN_MO217_AR (*(volatile Ifx_CAN_MO_AR*)0xF001AB38u)




#define CAN_MOAR217 (CAN_MO217_AR)


#define CAN_MO217_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001AB3Cu)




#define CAN_MOCTR217 (CAN_MO217_CTR)


#define CAN_MO217_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001AB34u)




#define CAN_MODATAH217 (CAN_MO217_DATAH)


#define CAN_MO217_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001AB30u)




#define CAN_MODATAL217 (CAN_MO217_DATAL)


#define CAN_MO217_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001AB20u)




#define CAN_EMO217DATA0 (CAN_MO217_EDATA0)


#define CAN_MO217_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001AB24u)




#define CAN_EMO217DATA1 (CAN_MO217_EDATA1)


#define CAN_MO217_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001AB28u)




#define CAN_EMO217DATA2 (CAN_MO217_EDATA2)


#define CAN_MO217_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001AB2Cu)




#define CAN_EMO217DATA3 (CAN_MO217_EDATA3)


#define CAN_MO217_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001AB30u)




#define CAN_EMO217DATA4 (CAN_MO217_EDATA4)


#define CAN_MO217_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001AB34u)




#define CAN_EMO217DATA5 (CAN_MO217_EDATA5)


#define CAN_MO217_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001AB38u)




#define CAN_EMO217DATA6 (CAN_MO217_EDATA6)


#define CAN_MO217_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001AB20u)




#define CAN_MOFCR217 (CAN_MO217_FCR)


#define CAN_MO217_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001AB24u)




#define CAN_MOFGPR217 (CAN_MO217_FGPR)


#define CAN_MO217_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001AB28u)




#define CAN_MOIPR217 (CAN_MO217_IPR)


#define CAN_MO217_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001AB3Cu)




#define CAN_MOSTAT217 (CAN_MO217_STAT)


#define CAN_MO218_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001AB4Cu)




#define CAN_MOAMR218 (CAN_MO218_AMR)


#define CAN_MO218_AR (*(volatile Ifx_CAN_MO_AR*)0xF001AB58u)




#define CAN_MOAR218 (CAN_MO218_AR)


#define CAN_MO218_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001AB5Cu)




#define CAN_MOCTR218 (CAN_MO218_CTR)


#define CAN_MO218_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001AB54u)




#define CAN_MODATAH218 (CAN_MO218_DATAH)


#define CAN_MO218_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001AB50u)




#define CAN_MODATAL218 (CAN_MO218_DATAL)


#define CAN_MO218_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001AB40u)




#define CAN_EMO218DATA0 (CAN_MO218_EDATA0)


#define CAN_MO218_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001AB44u)




#define CAN_EMO218DATA1 (CAN_MO218_EDATA1)


#define CAN_MO218_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001AB48u)




#define CAN_EMO218DATA2 (CAN_MO218_EDATA2)


#define CAN_MO218_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001AB4Cu)




#define CAN_EMO218DATA3 (CAN_MO218_EDATA3)


#define CAN_MO218_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001AB50u)




#define CAN_EMO218DATA4 (CAN_MO218_EDATA4)


#define CAN_MO218_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001AB54u)




#define CAN_EMO218DATA5 (CAN_MO218_EDATA5)


#define CAN_MO218_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001AB58u)




#define CAN_EMO218DATA6 (CAN_MO218_EDATA6)


#define CAN_MO218_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001AB40u)




#define CAN_MOFCR218 (CAN_MO218_FCR)


#define CAN_MO218_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001AB44u)




#define CAN_MOFGPR218 (CAN_MO218_FGPR)


#define CAN_MO218_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001AB48u)




#define CAN_MOIPR218 (CAN_MO218_IPR)


#define CAN_MO218_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001AB5Cu)




#define CAN_MOSTAT218 (CAN_MO218_STAT)


#define CAN_MO219_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001AB6Cu)




#define CAN_MOAMR219 (CAN_MO219_AMR)


#define CAN_MO219_AR (*(volatile Ifx_CAN_MO_AR*)0xF001AB78u)




#define CAN_MOAR219 (CAN_MO219_AR)


#define CAN_MO219_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001AB7Cu)




#define CAN_MOCTR219 (CAN_MO219_CTR)


#define CAN_MO219_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001AB74u)




#define CAN_MODATAH219 (CAN_MO219_DATAH)


#define CAN_MO219_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001AB70u)




#define CAN_MODATAL219 (CAN_MO219_DATAL)


#define CAN_MO219_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001AB60u)




#define CAN_EMO219DATA0 (CAN_MO219_EDATA0)


#define CAN_MO219_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001AB64u)




#define CAN_EMO219DATA1 (CAN_MO219_EDATA1)


#define CAN_MO219_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001AB68u)




#define CAN_EMO219DATA2 (CAN_MO219_EDATA2)


#define CAN_MO219_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001AB6Cu)




#define CAN_EMO219DATA3 (CAN_MO219_EDATA3)


#define CAN_MO219_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001AB70u)




#define CAN_EMO219DATA4 (CAN_MO219_EDATA4)


#define CAN_MO219_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001AB74u)




#define CAN_EMO219DATA5 (CAN_MO219_EDATA5)


#define CAN_MO219_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001AB78u)




#define CAN_EMO219DATA6 (CAN_MO219_EDATA6)


#define CAN_MO219_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001AB60u)




#define CAN_MOFCR219 (CAN_MO219_FCR)


#define CAN_MO219_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001AB64u)




#define CAN_MOFGPR219 (CAN_MO219_FGPR)


#define CAN_MO219_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001AB68u)




#define CAN_MOIPR219 (CAN_MO219_IPR)


#define CAN_MO219_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001AB7Cu)




#define CAN_MOSTAT219 (CAN_MO219_STAT)


#define CAN_MO21_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF00192ACu)




#define CAN_MOAMR21 (CAN_MO21_AMR)


#define CAN_MO21_AR (*(volatile Ifx_CAN_MO_AR*)0xF00192B8u)




#define CAN_MOAR21 (CAN_MO21_AR)


#define CAN_MO21_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF00192BCu)




#define CAN_MOCTR21 (CAN_MO21_CTR)


#define CAN_MO21_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF00192B4u)




#define CAN_MODATAH21 (CAN_MO21_DATAH)


#define CAN_MO21_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF00192B0u)




#define CAN_MODATAL21 (CAN_MO21_DATAL)


#define CAN_MO21_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF00192A0u)




#define CAN_EMO21DATA0 (CAN_MO21_EDATA0)


#define CAN_MO21_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF00192A4u)




#define CAN_EMO21DATA1 (CAN_MO21_EDATA1)


#define CAN_MO21_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF00192A8u)




#define CAN_EMO21DATA2 (CAN_MO21_EDATA2)


#define CAN_MO21_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF00192ACu)




#define CAN_EMO21DATA3 (CAN_MO21_EDATA3)


#define CAN_MO21_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF00192B0u)




#define CAN_EMO21DATA4 (CAN_MO21_EDATA4)


#define CAN_MO21_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF00192B4u)




#define CAN_EMO21DATA5 (CAN_MO21_EDATA5)


#define CAN_MO21_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF00192B8u)




#define CAN_EMO21DATA6 (CAN_MO21_EDATA6)


#define CAN_MO21_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF00192A0u)




#define CAN_MOFCR21 (CAN_MO21_FCR)


#define CAN_MO21_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF00192A4u)




#define CAN_MOFGPR21 (CAN_MO21_FGPR)


#define CAN_MO21_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF00192A8u)




#define CAN_MOIPR21 (CAN_MO21_IPR)


#define CAN_MO21_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF00192BCu)




#define CAN_MOSTAT21 (CAN_MO21_STAT)


#define CAN_MO220_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001AB8Cu)




#define CAN_MOAMR220 (CAN_MO220_AMR)


#define CAN_MO220_AR (*(volatile Ifx_CAN_MO_AR*)0xF001AB98u)




#define CAN_MOAR220 (CAN_MO220_AR)


#define CAN_MO220_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001AB9Cu)




#define CAN_MOCTR220 (CAN_MO220_CTR)


#define CAN_MO220_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001AB94u)




#define CAN_MODATAH220 (CAN_MO220_DATAH)


#define CAN_MO220_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001AB90u)




#define CAN_MODATAL220 (CAN_MO220_DATAL)


#define CAN_MO220_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001AB80u)




#define CAN_EMO220DATA0 (CAN_MO220_EDATA0)


#define CAN_MO220_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001AB84u)




#define CAN_EMO220DATA1 (CAN_MO220_EDATA1)


#define CAN_MO220_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001AB88u)




#define CAN_EMO220DATA2 (CAN_MO220_EDATA2)


#define CAN_MO220_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001AB8Cu)




#define CAN_EMO220DATA3 (CAN_MO220_EDATA3)


#define CAN_MO220_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001AB90u)




#define CAN_EMO220DATA4 (CAN_MO220_EDATA4)


#define CAN_MO220_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001AB94u)




#define CAN_EMO220DATA5 (CAN_MO220_EDATA5)


#define CAN_MO220_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001AB98u)




#define CAN_EMO220DATA6 (CAN_MO220_EDATA6)


#define CAN_MO220_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001AB80u)




#define CAN_MOFCR220 (CAN_MO220_FCR)


#define CAN_MO220_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001AB84u)




#define CAN_MOFGPR220 (CAN_MO220_FGPR)


#define CAN_MO220_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001AB88u)




#define CAN_MOIPR220 (CAN_MO220_IPR)


#define CAN_MO220_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001AB9Cu)




#define CAN_MOSTAT220 (CAN_MO220_STAT)


#define CAN_MO221_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001ABACu)




#define CAN_MOAMR221 (CAN_MO221_AMR)


#define CAN_MO221_AR (*(volatile Ifx_CAN_MO_AR*)0xF001ABB8u)




#define CAN_MOAR221 (CAN_MO221_AR)


#define CAN_MO221_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001ABBCu)




#define CAN_MOCTR221 (CAN_MO221_CTR)


#define CAN_MO221_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001ABB4u)




#define CAN_MODATAH221 (CAN_MO221_DATAH)


#define CAN_MO221_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001ABB0u)




#define CAN_MODATAL221 (CAN_MO221_DATAL)


#define CAN_MO221_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001ABA0u)




#define CAN_EMO221DATA0 (CAN_MO221_EDATA0)


#define CAN_MO221_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001ABA4u)




#define CAN_EMO221DATA1 (CAN_MO221_EDATA1)


#define CAN_MO221_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001ABA8u)




#define CAN_EMO221DATA2 (CAN_MO221_EDATA2)


#define CAN_MO221_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001ABACu)




#define CAN_EMO221DATA3 (CAN_MO221_EDATA3)


#define CAN_MO221_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001ABB0u)




#define CAN_EMO221DATA4 (CAN_MO221_EDATA4)


#define CAN_MO221_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001ABB4u)




#define CAN_EMO221DATA5 (CAN_MO221_EDATA5)


#define CAN_MO221_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001ABB8u)




#define CAN_EMO221DATA6 (CAN_MO221_EDATA6)


#define CAN_MO221_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001ABA0u)




#define CAN_MOFCR221 (CAN_MO221_FCR)


#define CAN_MO221_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001ABA4u)




#define CAN_MOFGPR221 (CAN_MO221_FGPR)


#define CAN_MO221_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001ABA8u)




#define CAN_MOIPR221 (CAN_MO221_IPR)


#define CAN_MO221_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001ABBCu)




#define CAN_MOSTAT221 (CAN_MO221_STAT)


#define CAN_MO222_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001ABCCu)




#define CAN_MOAMR222 (CAN_MO222_AMR)


#define CAN_MO222_AR (*(volatile Ifx_CAN_MO_AR*)0xF001ABD8u)




#define CAN_MOAR222 (CAN_MO222_AR)


#define CAN_MO222_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001ABDCu)




#define CAN_MOCTR222 (CAN_MO222_CTR)


#define CAN_MO222_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001ABD4u)




#define CAN_MODATAH222 (CAN_MO222_DATAH)


#define CAN_MO222_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001ABD0u)




#define CAN_MODATAL222 (CAN_MO222_DATAL)


#define CAN_MO222_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001ABC0u)




#define CAN_EMO222DATA0 (CAN_MO222_EDATA0)


#define CAN_MO222_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001ABC4u)




#define CAN_EMO222DATA1 (CAN_MO222_EDATA1)


#define CAN_MO222_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001ABC8u)




#define CAN_EMO222DATA2 (CAN_MO222_EDATA2)


#define CAN_MO222_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001ABCCu)




#define CAN_EMO222DATA3 (CAN_MO222_EDATA3)


#define CAN_MO222_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001ABD0u)




#define CAN_EMO222DATA4 (CAN_MO222_EDATA4)


#define CAN_MO222_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001ABD4u)




#define CAN_EMO222DATA5 (CAN_MO222_EDATA5)


#define CAN_MO222_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001ABD8u)




#define CAN_EMO222DATA6 (CAN_MO222_EDATA6)


#define CAN_MO222_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001ABC0u)




#define CAN_MOFCR222 (CAN_MO222_FCR)


#define CAN_MO222_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001ABC4u)




#define CAN_MOFGPR222 (CAN_MO222_FGPR)


#define CAN_MO222_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001ABC8u)




#define CAN_MOIPR222 (CAN_MO222_IPR)


#define CAN_MO222_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001ABDCu)




#define CAN_MOSTAT222 (CAN_MO222_STAT)


#define CAN_MO223_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001ABECu)




#define CAN_MOAMR223 (CAN_MO223_AMR)


#define CAN_MO223_AR (*(volatile Ifx_CAN_MO_AR*)0xF001ABF8u)




#define CAN_MOAR223 (CAN_MO223_AR)


#define CAN_MO223_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001ABFCu)




#define CAN_MOCTR223 (CAN_MO223_CTR)


#define CAN_MO223_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001ABF4u)




#define CAN_MODATAH223 (CAN_MO223_DATAH)


#define CAN_MO223_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001ABF0u)




#define CAN_MODATAL223 (CAN_MO223_DATAL)


#define CAN_MO223_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001ABE0u)




#define CAN_EMO223DATA0 (CAN_MO223_EDATA0)


#define CAN_MO223_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001ABE4u)




#define CAN_EMO223DATA1 (CAN_MO223_EDATA1)


#define CAN_MO223_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001ABE8u)




#define CAN_EMO223DATA2 (CAN_MO223_EDATA2)


#define CAN_MO223_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001ABECu)




#define CAN_EMO223DATA3 (CAN_MO223_EDATA3)


#define CAN_MO223_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001ABF0u)




#define CAN_EMO223DATA4 (CAN_MO223_EDATA4)


#define CAN_MO223_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001ABF4u)




#define CAN_EMO223DATA5 (CAN_MO223_EDATA5)


#define CAN_MO223_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001ABF8u)




#define CAN_EMO223DATA6 (CAN_MO223_EDATA6)


#define CAN_MO223_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001ABE0u)




#define CAN_MOFCR223 (CAN_MO223_FCR)


#define CAN_MO223_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001ABE4u)




#define CAN_MOFGPR223 (CAN_MO223_FGPR)


#define CAN_MO223_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001ABE8u)




#define CAN_MOIPR223 (CAN_MO223_IPR)


#define CAN_MO223_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001ABFCu)




#define CAN_MOSTAT223 (CAN_MO223_STAT)


#define CAN_MO224_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001AC0Cu)




#define CAN_MOAMR224 (CAN_MO224_AMR)


#define CAN_MO224_AR (*(volatile Ifx_CAN_MO_AR*)0xF001AC18u)




#define CAN_MOAR224 (CAN_MO224_AR)


#define CAN_MO224_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001AC1Cu)




#define CAN_MOCTR224 (CAN_MO224_CTR)


#define CAN_MO224_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001AC14u)




#define CAN_MODATAH224 (CAN_MO224_DATAH)


#define CAN_MO224_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001AC10u)




#define CAN_MODATAL224 (CAN_MO224_DATAL)


#define CAN_MO224_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001AC00u)




#define CAN_EMO224DATA0 (CAN_MO224_EDATA0)


#define CAN_MO224_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001AC04u)




#define CAN_EMO224DATA1 (CAN_MO224_EDATA1)


#define CAN_MO224_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001AC08u)




#define CAN_EMO224DATA2 (CAN_MO224_EDATA2)


#define CAN_MO224_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001AC0Cu)




#define CAN_EMO224DATA3 (CAN_MO224_EDATA3)


#define CAN_MO224_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001AC10u)




#define CAN_EMO224DATA4 (CAN_MO224_EDATA4)


#define CAN_MO224_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001AC14u)




#define CAN_EMO224DATA5 (CAN_MO224_EDATA5)


#define CAN_MO224_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001AC18u)




#define CAN_EMO224DATA6 (CAN_MO224_EDATA6)


#define CAN_MO224_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001AC00u)




#define CAN_MOFCR224 (CAN_MO224_FCR)


#define CAN_MO224_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001AC04u)




#define CAN_MOFGPR224 (CAN_MO224_FGPR)


#define CAN_MO224_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001AC08u)




#define CAN_MOIPR224 (CAN_MO224_IPR)


#define CAN_MO224_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001AC1Cu)




#define CAN_MOSTAT224 (CAN_MO224_STAT)


#define CAN_MO225_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001AC2Cu)




#define CAN_MOAMR225 (CAN_MO225_AMR)


#define CAN_MO225_AR (*(volatile Ifx_CAN_MO_AR*)0xF001AC38u)




#define CAN_MOAR225 (CAN_MO225_AR)


#define CAN_MO225_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001AC3Cu)




#define CAN_MOCTR225 (CAN_MO225_CTR)


#define CAN_MO225_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001AC34u)




#define CAN_MODATAH225 (CAN_MO225_DATAH)


#define CAN_MO225_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001AC30u)




#define CAN_MODATAL225 (CAN_MO225_DATAL)


#define CAN_MO225_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001AC20u)




#define CAN_EMO225DATA0 (CAN_MO225_EDATA0)


#define CAN_MO225_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001AC24u)




#define CAN_EMO225DATA1 (CAN_MO225_EDATA1)


#define CAN_MO225_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001AC28u)




#define CAN_EMO225DATA2 (CAN_MO225_EDATA2)


#define CAN_MO225_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001AC2Cu)




#define CAN_EMO225DATA3 (CAN_MO225_EDATA3)


#define CAN_MO225_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001AC30u)




#define CAN_EMO225DATA4 (CAN_MO225_EDATA4)


#define CAN_MO225_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001AC34u)




#define CAN_EMO225DATA5 (CAN_MO225_EDATA5)


#define CAN_MO225_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001AC38u)




#define CAN_EMO225DATA6 (CAN_MO225_EDATA6)


#define CAN_MO225_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001AC20u)




#define CAN_MOFCR225 (CAN_MO225_FCR)


#define CAN_MO225_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001AC24u)




#define CAN_MOFGPR225 (CAN_MO225_FGPR)


#define CAN_MO225_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001AC28u)




#define CAN_MOIPR225 (CAN_MO225_IPR)


#define CAN_MO225_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001AC3Cu)




#define CAN_MOSTAT225 (CAN_MO225_STAT)


#define CAN_MO226_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001AC4Cu)




#define CAN_MOAMR226 (CAN_MO226_AMR)


#define CAN_MO226_AR (*(volatile Ifx_CAN_MO_AR*)0xF001AC58u)




#define CAN_MOAR226 (CAN_MO226_AR)


#define CAN_MO226_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001AC5Cu)




#define CAN_MOCTR226 (CAN_MO226_CTR)


#define CAN_MO226_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001AC54u)




#define CAN_MODATAH226 (CAN_MO226_DATAH)


#define CAN_MO226_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001AC50u)




#define CAN_MODATAL226 (CAN_MO226_DATAL)


#define CAN_MO226_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001AC40u)




#define CAN_EMO226DATA0 (CAN_MO226_EDATA0)


#define CAN_MO226_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001AC44u)




#define CAN_EMO226DATA1 (CAN_MO226_EDATA1)


#define CAN_MO226_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001AC48u)




#define CAN_EMO226DATA2 (CAN_MO226_EDATA2)


#define CAN_MO226_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001AC4Cu)




#define CAN_EMO226DATA3 (CAN_MO226_EDATA3)


#define CAN_MO226_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001AC50u)




#define CAN_EMO226DATA4 (CAN_MO226_EDATA4)


#define CAN_MO226_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001AC54u)




#define CAN_EMO226DATA5 (CAN_MO226_EDATA5)


#define CAN_MO226_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001AC58u)




#define CAN_EMO226DATA6 (CAN_MO226_EDATA6)


#define CAN_MO226_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001AC40u)




#define CAN_MOFCR226 (CAN_MO226_FCR)


#define CAN_MO226_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001AC44u)




#define CAN_MOFGPR226 (CAN_MO226_FGPR)


#define CAN_MO226_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001AC48u)




#define CAN_MOIPR226 (CAN_MO226_IPR)


#define CAN_MO226_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001AC5Cu)




#define CAN_MOSTAT226 (CAN_MO226_STAT)


#define CAN_MO227_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001AC6Cu)




#define CAN_MOAMR227 (CAN_MO227_AMR)


#define CAN_MO227_AR (*(volatile Ifx_CAN_MO_AR*)0xF001AC78u)




#define CAN_MOAR227 (CAN_MO227_AR)


#define CAN_MO227_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001AC7Cu)




#define CAN_MOCTR227 (CAN_MO227_CTR)


#define CAN_MO227_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001AC74u)




#define CAN_MODATAH227 (CAN_MO227_DATAH)


#define CAN_MO227_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001AC70u)




#define CAN_MODATAL227 (CAN_MO227_DATAL)


#define CAN_MO227_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001AC60u)




#define CAN_EMO227DATA0 (CAN_MO227_EDATA0)


#define CAN_MO227_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001AC64u)




#define CAN_EMO227DATA1 (CAN_MO227_EDATA1)


#define CAN_MO227_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001AC68u)




#define CAN_EMO227DATA2 (CAN_MO227_EDATA2)


#define CAN_MO227_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001AC6Cu)




#define CAN_EMO227DATA3 (CAN_MO227_EDATA3)


#define CAN_MO227_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001AC70u)




#define CAN_EMO227DATA4 (CAN_MO227_EDATA4)


#define CAN_MO227_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001AC74u)




#define CAN_EMO227DATA5 (CAN_MO227_EDATA5)


#define CAN_MO227_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001AC78u)




#define CAN_EMO227DATA6 (CAN_MO227_EDATA6)


#define CAN_MO227_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001AC60u)




#define CAN_MOFCR227 (CAN_MO227_FCR)


#define CAN_MO227_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001AC64u)




#define CAN_MOFGPR227 (CAN_MO227_FGPR)


#define CAN_MO227_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001AC68u)




#define CAN_MOIPR227 (CAN_MO227_IPR)


#define CAN_MO227_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001AC7Cu)




#define CAN_MOSTAT227 (CAN_MO227_STAT)


#define CAN_MO228_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001AC8Cu)




#define CAN_MOAMR228 (CAN_MO228_AMR)


#define CAN_MO228_AR (*(volatile Ifx_CAN_MO_AR*)0xF001AC98u)




#define CAN_MOAR228 (CAN_MO228_AR)


#define CAN_MO228_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001AC9Cu)




#define CAN_MOCTR228 (CAN_MO228_CTR)


#define CAN_MO228_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001AC94u)




#define CAN_MODATAH228 (CAN_MO228_DATAH)


#define CAN_MO228_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001AC90u)




#define CAN_MODATAL228 (CAN_MO228_DATAL)


#define CAN_MO228_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001AC80u)




#define CAN_EMO228DATA0 (CAN_MO228_EDATA0)


#define CAN_MO228_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001AC84u)




#define CAN_EMO228DATA1 (CAN_MO228_EDATA1)


#define CAN_MO228_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001AC88u)




#define CAN_EMO228DATA2 (CAN_MO228_EDATA2)


#define CAN_MO228_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001AC8Cu)




#define CAN_EMO228DATA3 (CAN_MO228_EDATA3)


#define CAN_MO228_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001AC90u)




#define CAN_EMO228DATA4 (CAN_MO228_EDATA4)


#define CAN_MO228_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001AC94u)




#define CAN_EMO228DATA5 (CAN_MO228_EDATA5)


#define CAN_MO228_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001AC98u)




#define CAN_EMO228DATA6 (CAN_MO228_EDATA6)


#define CAN_MO228_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001AC80u)




#define CAN_MOFCR228 (CAN_MO228_FCR)


#define CAN_MO228_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001AC84u)




#define CAN_MOFGPR228 (CAN_MO228_FGPR)


#define CAN_MO228_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001AC88u)




#define CAN_MOIPR228 (CAN_MO228_IPR)


#define CAN_MO228_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001AC9Cu)




#define CAN_MOSTAT228 (CAN_MO228_STAT)


#define CAN_MO229_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001ACACu)




#define CAN_MOAMR229 (CAN_MO229_AMR)


#define CAN_MO229_AR (*(volatile Ifx_CAN_MO_AR*)0xF001ACB8u)




#define CAN_MOAR229 (CAN_MO229_AR)


#define CAN_MO229_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001ACBCu)




#define CAN_MOCTR229 (CAN_MO229_CTR)


#define CAN_MO229_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001ACB4u)




#define CAN_MODATAH229 (CAN_MO229_DATAH)


#define CAN_MO229_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001ACB0u)




#define CAN_MODATAL229 (CAN_MO229_DATAL)


#define CAN_MO229_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001ACA0u)




#define CAN_EMO229DATA0 (CAN_MO229_EDATA0)


#define CAN_MO229_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001ACA4u)




#define CAN_EMO229DATA1 (CAN_MO229_EDATA1)


#define CAN_MO229_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001ACA8u)




#define CAN_EMO229DATA2 (CAN_MO229_EDATA2)


#define CAN_MO229_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001ACACu)




#define CAN_EMO229DATA3 (CAN_MO229_EDATA3)


#define CAN_MO229_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001ACB0u)




#define CAN_EMO229DATA4 (CAN_MO229_EDATA4)


#define CAN_MO229_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001ACB4u)




#define CAN_EMO229DATA5 (CAN_MO229_EDATA5)


#define CAN_MO229_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001ACB8u)




#define CAN_EMO229DATA6 (CAN_MO229_EDATA6)


#define CAN_MO229_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001ACA0u)




#define CAN_MOFCR229 (CAN_MO229_FCR)


#define CAN_MO229_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001ACA4u)




#define CAN_MOFGPR229 (CAN_MO229_FGPR)


#define CAN_MO229_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001ACA8u)




#define CAN_MOIPR229 (CAN_MO229_IPR)


#define CAN_MO229_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001ACBCu)




#define CAN_MOSTAT229 (CAN_MO229_STAT)


#define CAN_MO22_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF00192CCu)




#define CAN_MOAMR22 (CAN_MO22_AMR)


#define CAN_MO22_AR (*(volatile Ifx_CAN_MO_AR*)0xF00192D8u)




#define CAN_MOAR22 (CAN_MO22_AR)


#define CAN_MO22_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF00192DCu)




#define CAN_MOCTR22 (CAN_MO22_CTR)


#define CAN_MO22_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF00192D4u)




#define CAN_MODATAH22 (CAN_MO22_DATAH)


#define CAN_MO22_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF00192D0u)




#define CAN_MODATAL22 (CAN_MO22_DATAL)


#define CAN_MO22_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF00192C0u)




#define CAN_EMO22DATA0 (CAN_MO22_EDATA0)


#define CAN_MO22_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF00192C4u)




#define CAN_EMO22DATA1 (CAN_MO22_EDATA1)


#define CAN_MO22_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF00192C8u)




#define CAN_EMO22DATA2 (CAN_MO22_EDATA2)


#define CAN_MO22_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF00192CCu)




#define CAN_EMO22DATA3 (CAN_MO22_EDATA3)


#define CAN_MO22_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF00192D0u)




#define CAN_EMO22DATA4 (CAN_MO22_EDATA4)


#define CAN_MO22_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF00192D4u)




#define CAN_EMO22DATA5 (CAN_MO22_EDATA5)


#define CAN_MO22_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF00192D8u)




#define CAN_EMO22DATA6 (CAN_MO22_EDATA6)


#define CAN_MO22_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF00192C0u)




#define CAN_MOFCR22 (CAN_MO22_FCR)


#define CAN_MO22_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF00192C4u)




#define CAN_MOFGPR22 (CAN_MO22_FGPR)


#define CAN_MO22_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF00192C8u)




#define CAN_MOIPR22 (CAN_MO22_IPR)


#define CAN_MO22_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF00192DCu)




#define CAN_MOSTAT22 (CAN_MO22_STAT)


#define CAN_MO230_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001ACCCu)




#define CAN_MOAMR230 (CAN_MO230_AMR)


#define CAN_MO230_AR (*(volatile Ifx_CAN_MO_AR*)0xF001ACD8u)




#define CAN_MOAR230 (CAN_MO230_AR)


#define CAN_MO230_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001ACDCu)




#define CAN_MOCTR230 (CAN_MO230_CTR)


#define CAN_MO230_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001ACD4u)




#define CAN_MODATAH230 (CAN_MO230_DATAH)


#define CAN_MO230_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001ACD0u)




#define CAN_MODATAL230 (CAN_MO230_DATAL)


#define CAN_MO230_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001ACC0u)




#define CAN_EMO230DATA0 (CAN_MO230_EDATA0)


#define CAN_MO230_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001ACC4u)




#define CAN_EMO230DATA1 (CAN_MO230_EDATA1)


#define CAN_MO230_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001ACC8u)




#define CAN_EMO230DATA2 (CAN_MO230_EDATA2)


#define CAN_MO230_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001ACCCu)




#define CAN_EMO230DATA3 (CAN_MO230_EDATA3)


#define CAN_MO230_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001ACD0u)




#define CAN_EMO230DATA4 (CAN_MO230_EDATA4)


#define CAN_MO230_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001ACD4u)




#define CAN_EMO230DATA5 (CAN_MO230_EDATA5)


#define CAN_MO230_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001ACD8u)




#define CAN_EMO230DATA6 (CAN_MO230_EDATA6)


#define CAN_MO230_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001ACC0u)




#define CAN_MOFCR230 (CAN_MO230_FCR)


#define CAN_MO230_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001ACC4u)




#define CAN_MOFGPR230 (CAN_MO230_FGPR)


#define CAN_MO230_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001ACC8u)




#define CAN_MOIPR230 (CAN_MO230_IPR)


#define CAN_MO230_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001ACDCu)




#define CAN_MOSTAT230 (CAN_MO230_STAT)


#define CAN_MO231_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001ACECu)




#define CAN_MOAMR231 (CAN_MO231_AMR)


#define CAN_MO231_AR (*(volatile Ifx_CAN_MO_AR*)0xF001ACF8u)




#define CAN_MOAR231 (CAN_MO231_AR)


#define CAN_MO231_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001ACFCu)




#define CAN_MOCTR231 (CAN_MO231_CTR)


#define CAN_MO231_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001ACF4u)




#define CAN_MODATAH231 (CAN_MO231_DATAH)


#define CAN_MO231_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001ACF0u)




#define CAN_MODATAL231 (CAN_MO231_DATAL)


#define CAN_MO231_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001ACE0u)




#define CAN_EMO231DATA0 (CAN_MO231_EDATA0)


#define CAN_MO231_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001ACE4u)




#define CAN_EMO231DATA1 (CAN_MO231_EDATA1)


#define CAN_MO231_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001ACE8u)




#define CAN_EMO231DATA2 (CAN_MO231_EDATA2)


#define CAN_MO231_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001ACECu)




#define CAN_EMO231DATA3 (CAN_MO231_EDATA3)


#define CAN_MO231_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001ACF0u)




#define CAN_EMO231DATA4 (CAN_MO231_EDATA4)


#define CAN_MO231_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001ACF4u)




#define CAN_EMO231DATA5 (CAN_MO231_EDATA5)


#define CAN_MO231_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001ACF8u)




#define CAN_EMO231DATA6 (CAN_MO231_EDATA6)


#define CAN_MO231_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001ACE0u)




#define CAN_MOFCR231 (CAN_MO231_FCR)


#define CAN_MO231_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001ACE4u)




#define CAN_MOFGPR231 (CAN_MO231_FGPR)


#define CAN_MO231_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001ACE8u)




#define CAN_MOIPR231 (CAN_MO231_IPR)


#define CAN_MO231_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001ACFCu)




#define CAN_MOSTAT231 (CAN_MO231_STAT)


#define CAN_MO232_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001AD0Cu)




#define CAN_MOAMR232 (CAN_MO232_AMR)


#define CAN_MO232_AR (*(volatile Ifx_CAN_MO_AR*)0xF001AD18u)




#define CAN_MOAR232 (CAN_MO232_AR)


#define CAN_MO232_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001AD1Cu)




#define CAN_MOCTR232 (CAN_MO232_CTR)


#define CAN_MO232_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001AD14u)




#define CAN_MODATAH232 (CAN_MO232_DATAH)


#define CAN_MO232_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001AD10u)




#define CAN_MODATAL232 (CAN_MO232_DATAL)


#define CAN_MO232_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001AD00u)




#define CAN_EMO232DATA0 (CAN_MO232_EDATA0)


#define CAN_MO232_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001AD04u)




#define CAN_EMO232DATA1 (CAN_MO232_EDATA1)


#define CAN_MO232_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001AD08u)




#define CAN_EMO232DATA2 (CAN_MO232_EDATA2)


#define CAN_MO232_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001AD0Cu)




#define CAN_EMO232DATA3 (CAN_MO232_EDATA3)


#define CAN_MO232_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001AD10u)




#define CAN_EMO232DATA4 (CAN_MO232_EDATA4)


#define CAN_MO232_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001AD14u)




#define CAN_EMO232DATA5 (CAN_MO232_EDATA5)


#define CAN_MO232_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001AD18u)




#define CAN_EMO232DATA6 (CAN_MO232_EDATA6)


#define CAN_MO232_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001AD00u)




#define CAN_MOFCR232 (CAN_MO232_FCR)


#define CAN_MO232_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001AD04u)




#define CAN_MOFGPR232 (CAN_MO232_FGPR)


#define CAN_MO232_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001AD08u)




#define CAN_MOIPR232 (CAN_MO232_IPR)


#define CAN_MO232_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001AD1Cu)




#define CAN_MOSTAT232 (CAN_MO232_STAT)


#define CAN_MO233_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001AD2Cu)




#define CAN_MOAMR233 (CAN_MO233_AMR)


#define CAN_MO233_AR (*(volatile Ifx_CAN_MO_AR*)0xF001AD38u)




#define CAN_MOAR233 (CAN_MO233_AR)


#define CAN_MO233_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001AD3Cu)




#define CAN_MOCTR233 (CAN_MO233_CTR)


#define CAN_MO233_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001AD34u)




#define CAN_MODATAH233 (CAN_MO233_DATAH)


#define CAN_MO233_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001AD30u)




#define CAN_MODATAL233 (CAN_MO233_DATAL)


#define CAN_MO233_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001AD20u)




#define CAN_EMO233DATA0 (CAN_MO233_EDATA0)


#define CAN_MO233_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001AD24u)




#define CAN_EMO233DATA1 (CAN_MO233_EDATA1)


#define CAN_MO233_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001AD28u)




#define CAN_EMO233DATA2 (CAN_MO233_EDATA2)


#define CAN_MO233_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001AD2Cu)




#define CAN_EMO233DATA3 (CAN_MO233_EDATA3)


#define CAN_MO233_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001AD30u)




#define CAN_EMO233DATA4 (CAN_MO233_EDATA4)


#define CAN_MO233_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001AD34u)




#define CAN_EMO233DATA5 (CAN_MO233_EDATA5)


#define CAN_MO233_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001AD38u)




#define CAN_EMO233DATA6 (CAN_MO233_EDATA6)


#define CAN_MO233_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001AD20u)




#define CAN_MOFCR233 (CAN_MO233_FCR)


#define CAN_MO233_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001AD24u)




#define CAN_MOFGPR233 (CAN_MO233_FGPR)


#define CAN_MO233_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001AD28u)




#define CAN_MOIPR233 (CAN_MO233_IPR)


#define CAN_MO233_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001AD3Cu)




#define CAN_MOSTAT233 (CAN_MO233_STAT)


#define CAN_MO234_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001AD4Cu)




#define CAN_MOAMR234 (CAN_MO234_AMR)


#define CAN_MO234_AR (*(volatile Ifx_CAN_MO_AR*)0xF001AD58u)




#define CAN_MOAR234 (CAN_MO234_AR)


#define CAN_MO234_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001AD5Cu)




#define CAN_MOCTR234 (CAN_MO234_CTR)


#define CAN_MO234_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001AD54u)




#define CAN_MODATAH234 (CAN_MO234_DATAH)


#define CAN_MO234_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001AD50u)




#define CAN_MODATAL234 (CAN_MO234_DATAL)


#define CAN_MO234_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001AD40u)




#define CAN_EMO234DATA0 (CAN_MO234_EDATA0)


#define CAN_MO234_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001AD44u)




#define CAN_EMO234DATA1 (CAN_MO234_EDATA1)


#define CAN_MO234_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001AD48u)




#define CAN_EMO234DATA2 (CAN_MO234_EDATA2)


#define CAN_MO234_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001AD4Cu)




#define CAN_EMO234DATA3 (CAN_MO234_EDATA3)


#define CAN_MO234_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001AD50u)




#define CAN_EMO234DATA4 (CAN_MO234_EDATA4)


#define CAN_MO234_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001AD54u)




#define CAN_EMO234DATA5 (CAN_MO234_EDATA5)


#define CAN_MO234_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001AD58u)




#define CAN_EMO234DATA6 (CAN_MO234_EDATA6)


#define CAN_MO234_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001AD40u)




#define CAN_MOFCR234 (CAN_MO234_FCR)


#define CAN_MO234_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001AD44u)




#define CAN_MOFGPR234 (CAN_MO234_FGPR)


#define CAN_MO234_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001AD48u)




#define CAN_MOIPR234 (CAN_MO234_IPR)


#define CAN_MO234_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001AD5Cu)




#define CAN_MOSTAT234 (CAN_MO234_STAT)


#define CAN_MO235_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001AD6Cu)




#define CAN_MOAMR235 (CAN_MO235_AMR)


#define CAN_MO235_AR (*(volatile Ifx_CAN_MO_AR*)0xF001AD78u)




#define CAN_MOAR235 (CAN_MO235_AR)


#define CAN_MO235_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001AD7Cu)




#define CAN_MOCTR235 (CAN_MO235_CTR)


#define CAN_MO235_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001AD74u)




#define CAN_MODATAH235 (CAN_MO235_DATAH)


#define CAN_MO235_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001AD70u)




#define CAN_MODATAL235 (CAN_MO235_DATAL)


#define CAN_MO235_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001AD60u)




#define CAN_EMO235DATA0 (CAN_MO235_EDATA0)


#define CAN_MO235_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001AD64u)




#define CAN_EMO235DATA1 (CAN_MO235_EDATA1)


#define CAN_MO235_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001AD68u)




#define CAN_EMO235DATA2 (CAN_MO235_EDATA2)


#define CAN_MO235_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001AD6Cu)




#define CAN_EMO235DATA3 (CAN_MO235_EDATA3)


#define CAN_MO235_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001AD70u)




#define CAN_EMO235DATA4 (CAN_MO235_EDATA4)


#define CAN_MO235_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001AD74u)




#define CAN_EMO235DATA5 (CAN_MO235_EDATA5)


#define CAN_MO235_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001AD78u)




#define CAN_EMO235DATA6 (CAN_MO235_EDATA6)


#define CAN_MO235_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001AD60u)




#define CAN_MOFCR235 (CAN_MO235_FCR)


#define CAN_MO235_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001AD64u)




#define CAN_MOFGPR235 (CAN_MO235_FGPR)


#define CAN_MO235_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001AD68u)




#define CAN_MOIPR235 (CAN_MO235_IPR)


#define CAN_MO235_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001AD7Cu)




#define CAN_MOSTAT235 (CAN_MO235_STAT)


#define CAN_MO236_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001AD8Cu)




#define CAN_MOAMR236 (CAN_MO236_AMR)


#define CAN_MO236_AR (*(volatile Ifx_CAN_MO_AR*)0xF001AD98u)




#define CAN_MOAR236 (CAN_MO236_AR)


#define CAN_MO236_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001AD9Cu)




#define CAN_MOCTR236 (CAN_MO236_CTR)


#define CAN_MO236_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001AD94u)




#define CAN_MODATAH236 (CAN_MO236_DATAH)


#define CAN_MO236_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001AD90u)




#define CAN_MODATAL236 (CAN_MO236_DATAL)


#define CAN_MO236_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001AD80u)




#define CAN_EMO236DATA0 (CAN_MO236_EDATA0)


#define CAN_MO236_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001AD84u)




#define CAN_EMO236DATA1 (CAN_MO236_EDATA1)


#define CAN_MO236_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001AD88u)




#define CAN_EMO236DATA2 (CAN_MO236_EDATA2)


#define CAN_MO236_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001AD8Cu)




#define CAN_EMO236DATA3 (CAN_MO236_EDATA3)


#define CAN_MO236_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001AD90u)




#define CAN_EMO236DATA4 (CAN_MO236_EDATA4)


#define CAN_MO236_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001AD94u)




#define CAN_EMO236DATA5 (CAN_MO236_EDATA5)


#define CAN_MO236_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001AD98u)




#define CAN_EMO236DATA6 (CAN_MO236_EDATA6)


#define CAN_MO236_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001AD80u)




#define CAN_MOFCR236 (CAN_MO236_FCR)


#define CAN_MO236_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001AD84u)




#define CAN_MOFGPR236 (CAN_MO236_FGPR)


#define CAN_MO236_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001AD88u)




#define CAN_MOIPR236 (CAN_MO236_IPR)


#define CAN_MO236_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001AD9Cu)




#define CAN_MOSTAT236 (CAN_MO236_STAT)


#define CAN_MO237_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001ADACu)




#define CAN_MOAMR237 (CAN_MO237_AMR)


#define CAN_MO237_AR (*(volatile Ifx_CAN_MO_AR*)0xF001ADB8u)




#define CAN_MOAR237 (CAN_MO237_AR)


#define CAN_MO237_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001ADBCu)




#define CAN_MOCTR237 (CAN_MO237_CTR)


#define CAN_MO237_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001ADB4u)




#define CAN_MODATAH237 (CAN_MO237_DATAH)


#define CAN_MO237_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001ADB0u)




#define CAN_MODATAL237 (CAN_MO237_DATAL)


#define CAN_MO237_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001ADA0u)




#define CAN_EMO237DATA0 (CAN_MO237_EDATA0)


#define CAN_MO237_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001ADA4u)




#define CAN_EMO237DATA1 (CAN_MO237_EDATA1)


#define CAN_MO237_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001ADA8u)




#define CAN_EMO237DATA2 (CAN_MO237_EDATA2)


#define CAN_MO237_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001ADACu)




#define CAN_EMO237DATA3 (CAN_MO237_EDATA3)


#define CAN_MO237_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001ADB0u)




#define CAN_EMO237DATA4 (CAN_MO237_EDATA4)


#define CAN_MO237_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001ADB4u)




#define CAN_EMO237DATA5 (CAN_MO237_EDATA5)


#define CAN_MO237_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001ADB8u)




#define CAN_EMO237DATA6 (CAN_MO237_EDATA6)


#define CAN_MO237_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001ADA0u)




#define CAN_MOFCR237 (CAN_MO237_FCR)


#define CAN_MO237_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001ADA4u)




#define CAN_MOFGPR237 (CAN_MO237_FGPR)


#define CAN_MO237_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001ADA8u)




#define CAN_MOIPR237 (CAN_MO237_IPR)


#define CAN_MO237_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001ADBCu)




#define CAN_MOSTAT237 (CAN_MO237_STAT)


#define CAN_MO238_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001ADCCu)




#define CAN_MOAMR238 (CAN_MO238_AMR)


#define CAN_MO238_AR (*(volatile Ifx_CAN_MO_AR*)0xF001ADD8u)




#define CAN_MOAR238 (CAN_MO238_AR)


#define CAN_MO238_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001ADDCu)




#define CAN_MOCTR238 (CAN_MO238_CTR)


#define CAN_MO238_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001ADD4u)




#define CAN_MODATAH238 (CAN_MO238_DATAH)


#define CAN_MO238_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001ADD0u)




#define CAN_MODATAL238 (CAN_MO238_DATAL)


#define CAN_MO238_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001ADC0u)




#define CAN_EMO238DATA0 (CAN_MO238_EDATA0)


#define CAN_MO238_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001ADC4u)




#define CAN_EMO238DATA1 (CAN_MO238_EDATA1)


#define CAN_MO238_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001ADC8u)




#define CAN_EMO238DATA2 (CAN_MO238_EDATA2)


#define CAN_MO238_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001ADCCu)




#define CAN_EMO238DATA3 (CAN_MO238_EDATA3)


#define CAN_MO238_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001ADD0u)




#define CAN_EMO238DATA4 (CAN_MO238_EDATA4)


#define CAN_MO238_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001ADD4u)




#define CAN_EMO238DATA5 (CAN_MO238_EDATA5)


#define CAN_MO238_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001ADD8u)




#define CAN_EMO238DATA6 (CAN_MO238_EDATA6)


#define CAN_MO238_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001ADC0u)




#define CAN_MOFCR238 (CAN_MO238_FCR)


#define CAN_MO238_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001ADC4u)




#define CAN_MOFGPR238 (CAN_MO238_FGPR)


#define CAN_MO238_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001ADC8u)




#define CAN_MOIPR238 (CAN_MO238_IPR)


#define CAN_MO238_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001ADDCu)




#define CAN_MOSTAT238 (CAN_MO238_STAT)


#define CAN_MO239_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001ADECu)




#define CAN_MOAMR239 (CAN_MO239_AMR)


#define CAN_MO239_AR (*(volatile Ifx_CAN_MO_AR*)0xF001ADF8u)




#define CAN_MOAR239 (CAN_MO239_AR)


#define CAN_MO239_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001ADFCu)




#define CAN_MOCTR239 (CAN_MO239_CTR)


#define CAN_MO239_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001ADF4u)




#define CAN_MODATAH239 (CAN_MO239_DATAH)


#define CAN_MO239_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001ADF0u)




#define CAN_MODATAL239 (CAN_MO239_DATAL)


#define CAN_MO239_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001ADE0u)




#define CAN_EMO239DATA0 (CAN_MO239_EDATA0)


#define CAN_MO239_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001ADE4u)




#define CAN_EMO239DATA1 (CAN_MO239_EDATA1)


#define CAN_MO239_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001ADE8u)




#define CAN_EMO239DATA2 (CAN_MO239_EDATA2)


#define CAN_MO239_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001ADECu)




#define CAN_EMO239DATA3 (CAN_MO239_EDATA3)


#define CAN_MO239_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001ADF0u)




#define CAN_EMO239DATA4 (CAN_MO239_EDATA4)


#define CAN_MO239_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001ADF4u)




#define CAN_EMO239DATA5 (CAN_MO239_EDATA5)


#define CAN_MO239_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001ADF8u)




#define CAN_EMO239DATA6 (CAN_MO239_EDATA6)


#define CAN_MO239_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001ADE0u)




#define CAN_MOFCR239 (CAN_MO239_FCR)


#define CAN_MO239_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001ADE4u)




#define CAN_MOFGPR239 (CAN_MO239_FGPR)


#define CAN_MO239_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001ADE8u)




#define CAN_MOIPR239 (CAN_MO239_IPR)


#define CAN_MO239_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001ADFCu)




#define CAN_MOSTAT239 (CAN_MO239_STAT)


#define CAN_MO23_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF00192ECu)




#define CAN_MOAMR23 (CAN_MO23_AMR)


#define CAN_MO23_AR (*(volatile Ifx_CAN_MO_AR*)0xF00192F8u)




#define CAN_MOAR23 (CAN_MO23_AR)


#define CAN_MO23_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF00192FCu)




#define CAN_MOCTR23 (CAN_MO23_CTR)


#define CAN_MO23_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF00192F4u)




#define CAN_MODATAH23 (CAN_MO23_DATAH)


#define CAN_MO23_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF00192F0u)




#define CAN_MODATAL23 (CAN_MO23_DATAL)


#define CAN_MO23_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF00192E0u)




#define CAN_EMO23DATA0 (CAN_MO23_EDATA0)


#define CAN_MO23_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF00192E4u)




#define CAN_EMO23DATA1 (CAN_MO23_EDATA1)


#define CAN_MO23_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF00192E8u)




#define CAN_EMO23DATA2 (CAN_MO23_EDATA2)


#define CAN_MO23_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF00192ECu)




#define CAN_EMO23DATA3 (CAN_MO23_EDATA3)


#define CAN_MO23_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF00192F0u)




#define CAN_EMO23DATA4 (CAN_MO23_EDATA4)


#define CAN_MO23_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF00192F4u)




#define CAN_EMO23DATA5 (CAN_MO23_EDATA5)


#define CAN_MO23_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF00192F8u)




#define CAN_EMO23DATA6 (CAN_MO23_EDATA6)


#define CAN_MO23_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF00192E0u)




#define CAN_MOFCR23 (CAN_MO23_FCR)


#define CAN_MO23_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF00192E4u)




#define CAN_MOFGPR23 (CAN_MO23_FGPR)


#define CAN_MO23_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF00192E8u)




#define CAN_MOIPR23 (CAN_MO23_IPR)


#define CAN_MO23_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF00192FCu)




#define CAN_MOSTAT23 (CAN_MO23_STAT)


#define CAN_MO240_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001AE0Cu)




#define CAN_MOAMR240 (CAN_MO240_AMR)


#define CAN_MO240_AR (*(volatile Ifx_CAN_MO_AR*)0xF001AE18u)




#define CAN_MOAR240 (CAN_MO240_AR)


#define CAN_MO240_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001AE1Cu)




#define CAN_MOCTR240 (CAN_MO240_CTR)


#define CAN_MO240_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001AE14u)




#define CAN_MODATAH240 (CAN_MO240_DATAH)


#define CAN_MO240_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001AE10u)




#define CAN_MODATAL240 (CAN_MO240_DATAL)


#define CAN_MO240_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001AE00u)




#define CAN_EMO240DATA0 (CAN_MO240_EDATA0)


#define CAN_MO240_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001AE04u)




#define CAN_EMO240DATA1 (CAN_MO240_EDATA1)


#define CAN_MO240_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001AE08u)




#define CAN_EMO240DATA2 (CAN_MO240_EDATA2)


#define CAN_MO240_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001AE0Cu)




#define CAN_EMO240DATA3 (CAN_MO240_EDATA3)


#define CAN_MO240_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001AE10u)




#define CAN_EMO240DATA4 (CAN_MO240_EDATA4)


#define CAN_MO240_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001AE14u)




#define CAN_EMO240DATA5 (CAN_MO240_EDATA5)


#define CAN_MO240_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001AE18u)




#define CAN_EMO240DATA6 (CAN_MO240_EDATA6)


#define CAN_MO240_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001AE00u)




#define CAN_MOFCR240 (CAN_MO240_FCR)


#define CAN_MO240_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001AE04u)




#define CAN_MOFGPR240 (CAN_MO240_FGPR)


#define CAN_MO240_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001AE08u)




#define CAN_MOIPR240 (CAN_MO240_IPR)


#define CAN_MO240_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001AE1Cu)




#define CAN_MOSTAT240 (CAN_MO240_STAT)


#define CAN_MO241_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001AE2Cu)




#define CAN_MOAMR241 (CAN_MO241_AMR)


#define CAN_MO241_AR (*(volatile Ifx_CAN_MO_AR*)0xF001AE38u)




#define CAN_MOAR241 (CAN_MO241_AR)


#define CAN_MO241_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001AE3Cu)




#define CAN_MOCTR241 (CAN_MO241_CTR)


#define CAN_MO241_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001AE34u)




#define CAN_MODATAH241 (CAN_MO241_DATAH)


#define CAN_MO241_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001AE30u)




#define CAN_MODATAL241 (CAN_MO241_DATAL)


#define CAN_MO241_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001AE20u)




#define CAN_EMO241DATA0 (CAN_MO241_EDATA0)


#define CAN_MO241_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001AE24u)




#define CAN_EMO241DATA1 (CAN_MO241_EDATA1)


#define CAN_MO241_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001AE28u)




#define CAN_EMO241DATA2 (CAN_MO241_EDATA2)


#define CAN_MO241_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001AE2Cu)




#define CAN_EMO241DATA3 (CAN_MO241_EDATA3)


#define CAN_MO241_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001AE30u)




#define CAN_EMO241DATA4 (CAN_MO241_EDATA4)


#define CAN_MO241_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001AE34u)




#define CAN_EMO241DATA5 (CAN_MO241_EDATA5)


#define CAN_MO241_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001AE38u)




#define CAN_EMO241DATA6 (CAN_MO241_EDATA6)


#define CAN_MO241_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001AE20u)




#define CAN_MOFCR241 (CAN_MO241_FCR)


#define CAN_MO241_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001AE24u)




#define CAN_MOFGPR241 (CAN_MO241_FGPR)


#define CAN_MO241_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001AE28u)




#define CAN_MOIPR241 (CAN_MO241_IPR)


#define CAN_MO241_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001AE3Cu)




#define CAN_MOSTAT241 (CAN_MO241_STAT)


#define CAN_MO242_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001AE4Cu)




#define CAN_MOAMR242 (CAN_MO242_AMR)


#define CAN_MO242_AR (*(volatile Ifx_CAN_MO_AR*)0xF001AE58u)




#define CAN_MOAR242 (CAN_MO242_AR)


#define CAN_MO242_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001AE5Cu)




#define CAN_MOCTR242 (CAN_MO242_CTR)


#define CAN_MO242_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001AE54u)




#define CAN_MODATAH242 (CAN_MO242_DATAH)


#define CAN_MO242_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001AE50u)




#define CAN_MODATAL242 (CAN_MO242_DATAL)


#define CAN_MO242_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001AE40u)




#define CAN_EMO242DATA0 (CAN_MO242_EDATA0)


#define CAN_MO242_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001AE44u)




#define CAN_EMO242DATA1 (CAN_MO242_EDATA1)


#define CAN_MO242_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001AE48u)




#define CAN_EMO242DATA2 (CAN_MO242_EDATA2)


#define CAN_MO242_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001AE4Cu)




#define CAN_EMO242DATA3 (CAN_MO242_EDATA3)


#define CAN_MO242_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001AE50u)




#define CAN_EMO242DATA4 (CAN_MO242_EDATA4)


#define CAN_MO242_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001AE54u)




#define CAN_EMO242DATA5 (CAN_MO242_EDATA5)


#define CAN_MO242_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001AE58u)




#define CAN_EMO242DATA6 (CAN_MO242_EDATA6)


#define CAN_MO242_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001AE40u)




#define CAN_MOFCR242 (CAN_MO242_FCR)


#define CAN_MO242_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001AE44u)




#define CAN_MOFGPR242 (CAN_MO242_FGPR)


#define CAN_MO242_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001AE48u)




#define CAN_MOIPR242 (CAN_MO242_IPR)


#define CAN_MO242_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001AE5Cu)




#define CAN_MOSTAT242 (CAN_MO242_STAT)


#define CAN_MO243_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001AE6Cu)




#define CAN_MOAMR243 (CAN_MO243_AMR)


#define CAN_MO243_AR (*(volatile Ifx_CAN_MO_AR*)0xF001AE78u)




#define CAN_MOAR243 (CAN_MO243_AR)


#define CAN_MO243_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001AE7Cu)




#define CAN_MOCTR243 (CAN_MO243_CTR)


#define CAN_MO243_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001AE74u)




#define CAN_MODATAH243 (CAN_MO243_DATAH)


#define CAN_MO243_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001AE70u)




#define CAN_MODATAL243 (CAN_MO243_DATAL)


#define CAN_MO243_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001AE60u)




#define CAN_EMO243DATA0 (CAN_MO243_EDATA0)


#define CAN_MO243_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001AE64u)




#define CAN_EMO243DATA1 (CAN_MO243_EDATA1)


#define CAN_MO243_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001AE68u)




#define CAN_EMO243DATA2 (CAN_MO243_EDATA2)


#define CAN_MO243_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001AE6Cu)




#define CAN_EMO243DATA3 (CAN_MO243_EDATA3)


#define CAN_MO243_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001AE70u)




#define CAN_EMO243DATA4 (CAN_MO243_EDATA4)


#define CAN_MO243_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001AE74u)




#define CAN_EMO243DATA5 (CAN_MO243_EDATA5)


#define CAN_MO243_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001AE78u)




#define CAN_EMO243DATA6 (CAN_MO243_EDATA6)


#define CAN_MO243_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001AE60u)




#define CAN_MOFCR243 (CAN_MO243_FCR)


#define CAN_MO243_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001AE64u)




#define CAN_MOFGPR243 (CAN_MO243_FGPR)


#define CAN_MO243_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001AE68u)




#define CAN_MOIPR243 (CAN_MO243_IPR)


#define CAN_MO243_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001AE7Cu)




#define CAN_MOSTAT243 (CAN_MO243_STAT)


#define CAN_MO244_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001AE8Cu)




#define CAN_MOAMR244 (CAN_MO244_AMR)


#define CAN_MO244_AR (*(volatile Ifx_CAN_MO_AR*)0xF001AE98u)




#define CAN_MOAR244 (CAN_MO244_AR)


#define CAN_MO244_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001AE9Cu)




#define CAN_MOCTR244 (CAN_MO244_CTR)


#define CAN_MO244_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001AE94u)




#define CAN_MODATAH244 (CAN_MO244_DATAH)


#define CAN_MO244_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001AE90u)




#define CAN_MODATAL244 (CAN_MO244_DATAL)


#define CAN_MO244_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001AE80u)




#define CAN_EMO244DATA0 (CAN_MO244_EDATA0)


#define CAN_MO244_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001AE84u)




#define CAN_EMO244DATA1 (CAN_MO244_EDATA1)


#define CAN_MO244_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001AE88u)




#define CAN_EMO244DATA2 (CAN_MO244_EDATA2)


#define CAN_MO244_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001AE8Cu)




#define CAN_EMO244DATA3 (CAN_MO244_EDATA3)


#define CAN_MO244_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001AE90u)




#define CAN_EMO244DATA4 (CAN_MO244_EDATA4)


#define CAN_MO244_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001AE94u)




#define CAN_EMO244DATA5 (CAN_MO244_EDATA5)


#define CAN_MO244_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001AE98u)




#define CAN_EMO244DATA6 (CAN_MO244_EDATA6)


#define CAN_MO244_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001AE80u)




#define CAN_MOFCR244 (CAN_MO244_FCR)


#define CAN_MO244_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001AE84u)




#define CAN_MOFGPR244 (CAN_MO244_FGPR)


#define CAN_MO244_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001AE88u)




#define CAN_MOIPR244 (CAN_MO244_IPR)


#define CAN_MO244_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001AE9Cu)




#define CAN_MOSTAT244 (CAN_MO244_STAT)


#define CAN_MO245_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001AEACu)




#define CAN_MOAMR245 (CAN_MO245_AMR)


#define CAN_MO245_AR (*(volatile Ifx_CAN_MO_AR*)0xF001AEB8u)




#define CAN_MOAR245 (CAN_MO245_AR)


#define CAN_MO245_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001AEBCu)




#define CAN_MOCTR245 (CAN_MO245_CTR)


#define CAN_MO245_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001AEB4u)




#define CAN_MODATAH245 (CAN_MO245_DATAH)


#define CAN_MO245_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001AEB0u)




#define CAN_MODATAL245 (CAN_MO245_DATAL)


#define CAN_MO245_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001AEA0u)




#define CAN_EMO245DATA0 (CAN_MO245_EDATA0)


#define CAN_MO245_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001AEA4u)




#define CAN_EMO245DATA1 (CAN_MO245_EDATA1)


#define CAN_MO245_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001AEA8u)




#define CAN_EMO245DATA2 (CAN_MO245_EDATA2)


#define CAN_MO245_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001AEACu)




#define CAN_EMO245DATA3 (CAN_MO245_EDATA3)


#define CAN_MO245_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001AEB0u)




#define CAN_EMO245DATA4 (CAN_MO245_EDATA4)


#define CAN_MO245_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001AEB4u)




#define CAN_EMO245DATA5 (CAN_MO245_EDATA5)


#define CAN_MO245_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001AEB8u)




#define CAN_EMO245DATA6 (CAN_MO245_EDATA6)


#define CAN_MO245_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001AEA0u)




#define CAN_MOFCR245 (CAN_MO245_FCR)


#define CAN_MO245_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001AEA4u)




#define CAN_MOFGPR245 (CAN_MO245_FGPR)


#define CAN_MO245_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001AEA8u)




#define CAN_MOIPR245 (CAN_MO245_IPR)


#define CAN_MO245_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001AEBCu)




#define CAN_MOSTAT245 (CAN_MO245_STAT)


#define CAN_MO246_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001AECCu)




#define CAN_MOAMR246 (CAN_MO246_AMR)


#define CAN_MO246_AR (*(volatile Ifx_CAN_MO_AR*)0xF001AED8u)




#define CAN_MOAR246 (CAN_MO246_AR)


#define CAN_MO246_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001AEDCu)




#define CAN_MOCTR246 (CAN_MO246_CTR)


#define CAN_MO246_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001AED4u)




#define CAN_MODATAH246 (CAN_MO246_DATAH)


#define CAN_MO246_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001AED0u)




#define CAN_MODATAL246 (CAN_MO246_DATAL)


#define CAN_MO246_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001AEC0u)




#define CAN_EMO246DATA0 (CAN_MO246_EDATA0)


#define CAN_MO246_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001AEC4u)




#define CAN_EMO246DATA1 (CAN_MO246_EDATA1)


#define CAN_MO246_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001AEC8u)




#define CAN_EMO246DATA2 (CAN_MO246_EDATA2)


#define CAN_MO246_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001AECCu)




#define CAN_EMO246DATA3 (CAN_MO246_EDATA3)


#define CAN_MO246_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001AED0u)




#define CAN_EMO246DATA4 (CAN_MO246_EDATA4)


#define CAN_MO246_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001AED4u)




#define CAN_EMO246DATA5 (CAN_MO246_EDATA5)


#define CAN_MO246_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001AED8u)




#define CAN_EMO246DATA6 (CAN_MO246_EDATA6)


#define CAN_MO246_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001AEC0u)




#define CAN_MOFCR246 (CAN_MO246_FCR)


#define CAN_MO246_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001AEC4u)




#define CAN_MOFGPR246 (CAN_MO246_FGPR)


#define CAN_MO246_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001AEC8u)




#define CAN_MOIPR246 (CAN_MO246_IPR)


#define CAN_MO246_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001AEDCu)




#define CAN_MOSTAT246 (CAN_MO246_STAT)


#define CAN_MO247_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001AEECu)




#define CAN_MOAMR247 (CAN_MO247_AMR)


#define CAN_MO247_AR (*(volatile Ifx_CAN_MO_AR*)0xF001AEF8u)




#define CAN_MOAR247 (CAN_MO247_AR)


#define CAN_MO247_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001AEFCu)




#define CAN_MOCTR247 (CAN_MO247_CTR)


#define CAN_MO247_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001AEF4u)




#define CAN_MODATAH247 (CAN_MO247_DATAH)


#define CAN_MO247_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001AEF0u)




#define CAN_MODATAL247 (CAN_MO247_DATAL)


#define CAN_MO247_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001AEE0u)




#define CAN_EMO247DATA0 (CAN_MO247_EDATA0)


#define CAN_MO247_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001AEE4u)




#define CAN_EMO247DATA1 (CAN_MO247_EDATA1)


#define CAN_MO247_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001AEE8u)




#define CAN_EMO247DATA2 (CAN_MO247_EDATA2)


#define CAN_MO247_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001AEECu)




#define CAN_EMO247DATA3 (CAN_MO247_EDATA3)


#define CAN_MO247_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001AEF0u)




#define CAN_EMO247DATA4 (CAN_MO247_EDATA4)


#define CAN_MO247_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001AEF4u)




#define CAN_EMO247DATA5 (CAN_MO247_EDATA5)


#define CAN_MO247_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001AEF8u)




#define CAN_EMO247DATA6 (CAN_MO247_EDATA6)


#define CAN_MO247_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001AEE0u)




#define CAN_MOFCR247 (CAN_MO247_FCR)


#define CAN_MO247_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001AEE4u)




#define CAN_MOFGPR247 (CAN_MO247_FGPR)


#define CAN_MO247_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001AEE8u)




#define CAN_MOIPR247 (CAN_MO247_IPR)


#define CAN_MO247_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001AEFCu)




#define CAN_MOSTAT247 (CAN_MO247_STAT)


#define CAN_MO248_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001AF0Cu)




#define CAN_MOAMR248 (CAN_MO248_AMR)


#define CAN_MO248_AR (*(volatile Ifx_CAN_MO_AR*)0xF001AF18u)




#define CAN_MOAR248 (CAN_MO248_AR)


#define CAN_MO248_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001AF1Cu)




#define CAN_MOCTR248 (CAN_MO248_CTR)


#define CAN_MO248_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001AF14u)




#define CAN_MODATAH248 (CAN_MO248_DATAH)


#define CAN_MO248_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001AF10u)




#define CAN_MODATAL248 (CAN_MO248_DATAL)


#define CAN_MO248_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001AF00u)




#define CAN_EMO248DATA0 (CAN_MO248_EDATA0)


#define CAN_MO248_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001AF04u)




#define CAN_EMO248DATA1 (CAN_MO248_EDATA1)


#define CAN_MO248_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001AF08u)




#define CAN_EMO248DATA2 (CAN_MO248_EDATA2)


#define CAN_MO248_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001AF0Cu)




#define CAN_EMO248DATA3 (CAN_MO248_EDATA3)


#define CAN_MO248_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001AF10u)




#define CAN_EMO248DATA4 (CAN_MO248_EDATA4)


#define CAN_MO248_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001AF14u)




#define CAN_EMO248DATA5 (CAN_MO248_EDATA5)


#define CAN_MO248_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001AF18u)




#define CAN_EMO248DATA6 (CAN_MO248_EDATA6)


#define CAN_MO248_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001AF00u)




#define CAN_MOFCR248 (CAN_MO248_FCR)


#define CAN_MO248_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001AF04u)




#define CAN_MOFGPR248 (CAN_MO248_FGPR)


#define CAN_MO248_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001AF08u)




#define CAN_MOIPR248 (CAN_MO248_IPR)


#define CAN_MO248_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001AF1Cu)




#define CAN_MOSTAT248 (CAN_MO248_STAT)


#define CAN_MO249_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001AF2Cu)




#define CAN_MOAMR249 (CAN_MO249_AMR)


#define CAN_MO249_AR (*(volatile Ifx_CAN_MO_AR*)0xF001AF38u)




#define CAN_MOAR249 (CAN_MO249_AR)


#define CAN_MO249_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001AF3Cu)




#define CAN_MOCTR249 (CAN_MO249_CTR)


#define CAN_MO249_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001AF34u)




#define CAN_MODATAH249 (CAN_MO249_DATAH)


#define CAN_MO249_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001AF30u)




#define CAN_MODATAL249 (CAN_MO249_DATAL)


#define CAN_MO249_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001AF20u)




#define CAN_EMO249DATA0 (CAN_MO249_EDATA0)


#define CAN_MO249_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001AF24u)




#define CAN_EMO249DATA1 (CAN_MO249_EDATA1)


#define CAN_MO249_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001AF28u)




#define CAN_EMO249DATA2 (CAN_MO249_EDATA2)


#define CAN_MO249_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001AF2Cu)




#define CAN_EMO249DATA3 (CAN_MO249_EDATA3)


#define CAN_MO249_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001AF30u)




#define CAN_EMO249DATA4 (CAN_MO249_EDATA4)


#define CAN_MO249_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001AF34u)




#define CAN_EMO249DATA5 (CAN_MO249_EDATA5)


#define CAN_MO249_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001AF38u)




#define CAN_EMO249DATA6 (CAN_MO249_EDATA6)


#define CAN_MO249_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001AF20u)




#define CAN_MOFCR249 (CAN_MO249_FCR)


#define CAN_MO249_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001AF24u)




#define CAN_MOFGPR249 (CAN_MO249_FGPR)


#define CAN_MO249_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001AF28u)




#define CAN_MOIPR249 (CAN_MO249_IPR)


#define CAN_MO249_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001AF3Cu)




#define CAN_MOSTAT249 (CAN_MO249_STAT)


#define CAN_MO24_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001930Cu)




#define CAN_MOAMR24 (CAN_MO24_AMR)


#define CAN_MO24_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019318u)




#define CAN_MOAR24 (CAN_MO24_AR)


#define CAN_MO24_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001931Cu)




#define CAN_MOCTR24 (CAN_MO24_CTR)


#define CAN_MO24_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019314u)




#define CAN_MODATAH24 (CAN_MO24_DATAH)


#define CAN_MO24_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019310u)




#define CAN_MODATAL24 (CAN_MO24_DATAL)


#define CAN_MO24_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019300u)




#define CAN_EMO24DATA0 (CAN_MO24_EDATA0)


#define CAN_MO24_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019304u)




#define CAN_EMO24DATA1 (CAN_MO24_EDATA1)


#define CAN_MO24_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019308u)




#define CAN_EMO24DATA2 (CAN_MO24_EDATA2)


#define CAN_MO24_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001930Cu)




#define CAN_EMO24DATA3 (CAN_MO24_EDATA3)


#define CAN_MO24_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019310u)




#define CAN_EMO24DATA4 (CAN_MO24_EDATA4)


#define CAN_MO24_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019314u)




#define CAN_EMO24DATA5 (CAN_MO24_EDATA5)


#define CAN_MO24_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019318u)




#define CAN_EMO24DATA6 (CAN_MO24_EDATA6)


#define CAN_MO24_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019300u)




#define CAN_MOFCR24 (CAN_MO24_FCR)


#define CAN_MO24_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019304u)




#define CAN_MOFGPR24 (CAN_MO24_FGPR)


#define CAN_MO24_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019308u)




#define CAN_MOIPR24 (CAN_MO24_IPR)


#define CAN_MO24_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001931Cu)




#define CAN_MOSTAT24 (CAN_MO24_STAT)


#define CAN_MO250_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001AF4Cu)




#define CAN_MOAMR250 (CAN_MO250_AMR)


#define CAN_MO250_AR (*(volatile Ifx_CAN_MO_AR*)0xF001AF58u)




#define CAN_MOAR250 (CAN_MO250_AR)


#define CAN_MO250_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001AF5Cu)




#define CAN_MOCTR250 (CAN_MO250_CTR)


#define CAN_MO250_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001AF54u)




#define CAN_MODATAH250 (CAN_MO250_DATAH)


#define CAN_MO250_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001AF50u)




#define CAN_MODATAL250 (CAN_MO250_DATAL)


#define CAN_MO250_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001AF40u)




#define CAN_EMO250DATA0 (CAN_MO250_EDATA0)


#define CAN_MO250_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001AF44u)




#define CAN_EMO250DATA1 (CAN_MO250_EDATA1)


#define CAN_MO250_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001AF48u)




#define CAN_EMO250DATA2 (CAN_MO250_EDATA2)


#define CAN_MO250_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001AF4Cu)




#define CAN_EMO250DATA3 (CAN_MO250_EDATA3)


#define CAN_MO250_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001AF50u)




#define CAN_EMO250DATA4 (CAN_MO250_EDATA4)


#define CAN_MO250_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001AF54u)




#define CAN_EMO250DATA5 (CAN_MO250_EDATA5)


#define CAN_MO250_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001AF58u)




#define CAN_EMO250DATA6 (CAN_MO250_EDATA6)


#define CAN_MO250_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001AF40u)




#define CAN_MOFCR250 (CAN_MO250_FCR)


#define CAN_MO250_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001AF44u)




#define CAN_MOFGPR250 (CAN_MO250_FGPR)


#define CAN_MO250_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001AF48u)




#define CAN_MOIPR250 (CAN_MO250_IPR)


#define CAN_MO250_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001AF5Cu)




#define CAN_MOSTAT250 (CAN_MO250_STAT)


#define CAN_MO251_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001AF6Cu)




#define CAN_MOAMR251 (CAN_MO251_AMR)


#define CAN_MO251_AR (*(volatile Ifx_CAN_MO_AR*)0xF001AF78u)




#define CAN_MOAR251 (CAN_MO251_AR)


#define CAN_MO251_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001AF7Cu)




#define CAN_MOCTR251 (CAN_MO251_CTR)


#define CAN_MO251_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001AF74u)




#define CAN_MODATAH251 (CAN_MO251_DATAH)


#define CAN_MO251_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001AF70u)




#define CAN_MODATAL251 (CAN_MO251_DATAL)


#define CAN_MO251_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001AF60u)




#define CAN_EMO251DATA0 (CAN_MO251_EDATA0)


#define CAN_MO251_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001AF64u)




#define CAN_EMO251DATA1 (CAN_MO251_EDATA1)


#define CAN_MO251_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001AF68u)




#define CAN_EMO251DATA2 (CAN_MO251_EDATA2)


#define CAN_MO251_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001AF6Cu)




#define CAN_EMO251DATA3 (CAN_MO251_EDATA3)


#define CAN_MO251_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001AF70u)




#define CAN_EMO251DATA4 (CAN_MO251_EDATA4)


#define CAN_MO251_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001AF74u)




#define CAN_EMO251DATA5 (CAN_MO251_EDATA5)


#define CAN_MO251_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001AF78u)




#define CAN_EMO251DATA6 (CAN_MO251_EDATA6)


#define CAN_MO251_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001AF60u)




#define CAN_MOFCR251 (CAN_MO251_FCR)


#define CAN_MO251_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001AF64u)




#define CAN_MOFGPR251 (CAN_MO251_FGPR)


#define CAN_MO251_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001AF68u)




#define CAN_MOIPR251 (CAN_MO251_IPR)


#define CAN_MO251_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001AF7Cu)




#define CAN_MOSTAT251 (CAN_MO251_STAT)


#define CAN_MO252_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001AF8Cu)




#define CAN_MOAMR252 (CAN_MO252_AMR)


#define CAN_MO252_AR (*(volatile Ifx_CAN_MO_AR*)0xF001AF98u)




#define CAN_MOAR252 (CAN_MO252_AR)


#define CAN_MO252_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001AF9Cu)




#define CAN_MOCTR252 (CAN_MO252_CTR)


#define CAN_MO252_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001AF94u)




#define CAN_MODATAH252 (CAN_MO252_DATAH)


#define CAN_MO252_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001AF90u)




#define CAN_MODATAL252 (CAN_MO252_DATAL)


#define CAN_MO252_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001AF80u)




#define CAN_EMO252DATA0 (CAN_MO252_EDATA0)


#define CAN_MO252_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001AF84u)




#define CAN_EMO252DATA1 (CAN_MO252_EDATA1)


#define CAN_MO252_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001AF88u)




#define CAN_EMO252DATA2 (CAN_MO252_EDATA2)


#define CAN_MO252_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001AF8Cu)




#define CAN_EMO252DATA3 (CAN_MO252_EDATA3)


#define CAN_MO252_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001AF90u)




#define CAN_EMO252DATA4 (CAN_MO252_EDATA4)


#define CAN_MO252_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001AF94u)




#define CAN_EMO252DATA5 (CAN_MO252_EDATA5)


#define CAN_MO252_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001AF98u)




#define CAN_EMO252DATA6 (CAN_MO252_EDATA6)


#define CAN_MO252_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001AF80u)




#define CAN_MOFCR252 (CAN_MO252_FCR)


#define CAN_MO252_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001AF84u)




#define CAN_MOFGPR252 (CAN_MO252_FGPR)


#define CAN_MO252_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001AF88u)




#define CAN_MOIPR252 (CAN_MO252_IPR)


#define CAN_MO252_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001AF9Cu)




#define CAN_MOSTAT252 (CAN_MO252_STAT)


#define CAN_MO253_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001AFACu)




#define CAN_MOAMR253 (CAN_MO253_AMR)


#define CAN_MO253_AR (*(volatile Ifx_CAN_MO_AR*)0xF001AFB8u)




#define CAN_MOAR253 (CAN_MO253_AR)


#define CAN_MO253_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001AFBCu)




#define CAN_MOCTR253 (CAN_MO253_CTR)


#define CAN_MO253_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001AFB4u)




#define CAN_MODATAH253 (CAN_MO253_DATAH)


#define CAN_MO253_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001AFB0u)




#define CAN_MODATAL253 (CAN_MO253_DATAL)


#define CAN_MO253_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001AFA0u)




#define CAN_EMO253DATA0 (CAN_MO253_EDATA0)


#define CAN_MO253_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001AFA4u)




#define CAN_EMO253DATA1 (CAN_MO253_EDATA1)


#define CAN_MO253_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001AFA8u)




#define CAN_EMO253DATA2 (CAN_MO253_EDATA2)


#define CAN_MO253_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001AFACu)




#define CAN_EMO253DATA3 (CAN_MO253_EDATA3)


#define CAN_MO253_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001AFB0u)




#define CAN_EMO253DATA4 (CAN_MO253_EDATA4)


#define CAN_MO253_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001AFB4u)




#define CAN_EMO253DATA5 (CAN_MO253_EDATA5)


#define CAN_MO253_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001AFB8u)




#define CAN_EMO253DATA6 (CAN_MO253_EDATA6)


#define CAN_MO253_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001AFA0u)




#define CAN_MOFCR253 (CAN_MO253_FCR)


#define CAN_MO253_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001AFA4u)




#define CAN_MOFGPR253 (CAN_MO253_FGPR)


#define CAN_MO253_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001AFA8u)




#define CAN_MOIPR253 (CAN_MO253_IPR)


#define CAN_MO253_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001AFBCu)




#define CAN_MOSTAT253 (CAN_MO253_STAT)


#define CAN_MO254_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001AFCCu)




#define CAN_MOAMR254 (CAN_MO254_AMR)


#define CAN_MO254_AR (*(volatile Ifx_CAN_MO_AR*)0xF001AFD8u)




#define CAN_MOAR254 (CAN_MO254_AR)


#define CAN_MO254_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001AFDCu)




#define CAN_MOCTR254 (CAN_MO254_CTR)


#define CAN_MO254_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001AFD4u)




#define CAN_MODATAH254 (CAN_MO254_DATAH)


#define CAN_MO254_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001AFD0u)




#define CAN_MODATAL254 (CAN_MO254_DATAL)


#define CAN_MO254_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001AFC0u)




#define CAN_EMO254DATA0 (CAN_MO254_EDATA0)


#define CAN_MO254_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001AFC4u)




#define CAN_EMO254DATA1 (CAN_MO254_EDATA1)


#define CAN_MO254_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001AFC8u)




#define CAN_EMO254DATA2 (CAN_MO254_EDATA2)


#define CAN_MO254_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001AFCCu)




#define CAN_EMO254DATA3 (CAN_MO254_EDATA3)


#define CAN_MO254_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001AFD0u)




#define CAN_EMO254DATA4 (CAN_MO254_EDATA4)


#define CAN_MO254_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001AFD4u)




#define CAN_EMO254DATA5 (CAN_MO254_EDATA5)


#define CAN_MO254_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001AFD8u)




#define CAN_EMO254DATA6 (CAN_MO254_EDATA6)


#define CAN_MO254_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001AFC0u)




#define CAN_MOFCR254 (CAN_MO254_FCR)


#define CAN_MO254_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001AFC4u)




#define CAN_MOFGPR254 (CAN_MO254_FGPR)


#define CAN_MO254_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001AFC8u)




#define CAN_MOIPR254 (CAN_MO254_IPR)


#define CAN_MO254_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001AFDCu)




#define CAN_MOSTAT254 (CAN_MO254_STAT)


#define CAN_MO255_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001AFECu)




#define CAN_MOAMR255 (CAN_MO255_AMR)


#define CAN_MO255_AR (*(volatile Ifx_CAN_MO_AR*)0xF001AFF8u)




#define CAN_MOAR255 (CAN_MO255_AR)


#define CAN_MO255_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001AFFCu)




#define CAN_MOCTR255 (CAN_MO255_CTR)


#define CAN_MO255_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF001AFF4u)




#define CAN_MODATAH255 (CAN_MO255_DATAH)


#define CAN_MO255_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF001AFF0u)




#define CAN_MODATAL255 (CAN_MO255_DATAL)


#define CAN_MO255_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF001AFE0u)




#define CAN_EMO255DATA0 (CAN_MO255_EDATA0)


#define CAN_MO255_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF001AFE4u)




#define CAN_EMO255DATA1 (CAN_MO255_EDATA1)


#define CAN_MO255_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF001AFE8u)




#define CAN_EMO255DATA2 (CAN_MO255_EDATA2)


#define CAN_MO255_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001AFECu)




#define CAN_EMO255DATA3 (CAN_MO255_EDATA3)


#define CAN_MO255_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF001AFF0u)




#define CAN_EMO255DATA4 (CAN_MO255_EDATA4)


#define CAN_MO255_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF001AFF4u)




#define CAN_EMO255DATA5 (CAN_MO255_EDATA5)


#define CAN_MO255_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF001AFF8u)




#define CAN_EMO255DATA6 (CAN_MO255_EDATA6)


#define CAN_MO255_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF001AFE0u)




#define CAN_MOFCR255 (CAN_MO255_FCR)


#define CAN_MO255_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF001AFE4u)




#define CAN_MOFGPR255 (CAN_MO255_FGPR)


#define CAN_MO255_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF001AFE8u)




#define CAN_MOIPR255 (CAN_MO255_IPR)


#define CAN_MO255_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001AFFCu)




#define CAN_MOSTAT255 (CAN_MO255_STAT)


#define CAN_MO25_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001932Cu)




#define CAN_MOAMR25 (CAN_MO25_AMR)


#define CAN_MO25_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019338u)




#define CAN_MOAR25 (CAN_MO25_AR)


#define CAN_MO25_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001933Cu)




#define CAN_MOCTR25 (CAN_MO25_CTR)


#define CAN_MO25_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019334u)




#define CAN_MODATAH25 (CAN_MO25_DATAH)


#define CAN_MO25_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019330u)




#define CAN_MODATAL25 (CAN_MO25_DATAL)


#define CAN_MO25_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019320u)




#define CAN_EMO25DATA0 (CAN_MO25_EDATA0)


#define CAN_MO25_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019324u)




#define CAN_EMO25DATA1 (CAN_MO25_EDATA1)


#define CAN_MO25_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019328u)




#define CAN_EMO25DATA2 (CAN_MO25_EDATA2)


#define CAN_MO25_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001932Cu)




#define CAN_EMO25DATA3 (CAN_MO25_EDATA3)


#define CAN_MO25_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019330u)




#define CAN_EMO25DATA4 (CAN_MO25_EDATA4)


#define CAN_MO25_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019334u)




#define CAN_EMO25DATA5 (CAN_MO25_EDATA5)


#define CAN_MO25_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019338u)




#define CAN_EMO25DATA6 (CAN_MO25_EDATA6)


#define CAN_MO25_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019320u)




#define CAN_MOFCR25 (CAN_MO25_FCR)


#define CAN_MO25_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019324u)




#define CAN_MOFGPR25 (CAN_MO25_FGPR)


#define CAN_MO25_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019328u)




#define CAN_MOIPR25 (CAN_MO25_IPR)


#define CAN_MO25_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001933Cu)




#define CAN_MOSTAT25 (CAN_MO25_STAT)


#define CAN_MO26_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001934Cu)




#define CAN_MOAMR26 (CAN_MO26_AMR)


#define CAN_MO26_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019358u)




#define CAN_MOAR26 (CAN_MO26_AR)


#define CAN_MO26_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001935Cu)




#define CAN_MOCTR26 (CAN_MO26_CTR)


#define CAN_MO26_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019354u)




#define CAN_MODATAH26 (CAN_MO26_DATAH)


#define CAN_MO26_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019350u)




#define CAN_MODATAL26 (CAN_MO26_DATAL)


#define CAN_MO26_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019340u)




#define CAN_EMO26DATA0 (CAN_MO26_EDATA0)


#define CAN_MO26_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019344u)




#define CAN_EMO26DATA1 (CAN_MO26_EDATA1)


#define CAN_MO26_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019348u)




#define CAN_EMO26DATA2 (CAN_MO26_EDATA2)


#define CAN_MO26_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001934Cu)




#define CAN_EMO26DATA3 (CAN_MO26_EDATA3)


#define CAN_MO26_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019350u)




#define CAN_EMO26DATA4 (CAN_MO26_EDATA4)


#define CAN_MO26_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019354u)




#define CAN_EMO26DATA5 (CAN_MO26_EDATA5)


#define CAN_MO26_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019358u)




#define CAN_EMO26DATA6 (CAN_MO26_EDATA6)


#define CAN_MO26_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019340u)




#define CAN_MOFCR26 (CAN_MO26_FCR)


#define CAN_MO26_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019344u)




#define CAN_MOFGPR26 (CAN_MO26_FGPR)


#define CAN_MO26_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019348u)




#define CAN_MOIPR26 (CAN_MO26_IPR)


#define CAN_MO26_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001935Cu)




#define CAN_MOSTAT26 (CAN_MO26_STAT)


#define CAN_MO27_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001936Cu)




#define CAN_MOAMR27 (CAN_MO27_AMR)


#define CAN_MO27_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019378u)




#define CAN_MOAR27 (CAN_MO27_AR)


#define CAN_MO27_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001937Cu)




#define CAN_MOCTR27 (CAN_MO27_CTR)


#define CAN_MO27_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019374u)




#define CAN_MODATAH27 (CAN_MO27_DATAH)


#define CAN_MO27_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019370u)




#define CAN_MODATAL27 (CAN_MO27_DATAL)


#define CAN_MO27_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019360u)




#define CAN_EMO27DATA0 (CAN_MO27_EDATA0)


#define CAN_MO27_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019364u)




#define CAN_EMO27DATA1 (CAN_MO27_EDATA1)


#define CAN_MO27_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019368u)




#define CAN_EMO27DATA2 (CAN_MO27_EDATA2)


#define CAN_MO27_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001936Cu)




#define CAN_EMO27DATA3 (CAN_MO27_EDATA3)


#define CAN_MO27_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019370u)




#define CAN_EMO27DATA4 (CAN_MO27_EDATA4)


#define CAN_MO27_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019374u)




#define CAN_EMO27DATA5 (CAN_MO27_EDATA5)


#define CAN_MO27_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019378u)




#define CAN_EMO27DATA6 (CAN_MO27_EDATA6)


#define CAN_MO27_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019360u)




#define CAN_MOFCR27 (CAN_MO27_FCR)


#define CAN_MO27_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019364u)




#define CAN_MOFGPR27 (CAN_MO27_FGPR)


#define CAN_MO27_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019368u)




#define CAN_MOIPR27 (CAN_MO27_IPR)


#define CAN_MO27_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001937Cu)




#define CAN_MOSTAT27 (CAN_MO27_STAT)


#define CAN_MO28_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001938Cu)




#define CAN_MOAMR28 (CAN_MO28_AMR)


#define CAN_MO28_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019398u)




#define CAN_MOAR28 (CAN_MO28_AR)


#define CAN_MO28_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001939Cu)




#define CAN_MOCTR28 (CAN_MO28_CTR)


#define CAN_MO28_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019394u)




#define CAN_MODATAH28 (CAN_MO28_DATAH)


#define CAN_MO28_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019390u)




#define CAN_MODATAL28 (CAN_MO28_DATAL)


#define CAN_MO28_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019380u)




#define CAN_EMO28DATA0 (CAN_MO28_EDATA0)


#define CAN_MO28_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019384u)




#define CAN_EMO28DATA1 (CAN_MO28_EDATA1)


#define CAN_MO28_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019388u)




#define CAN_EMO28DATA2 (CAN_MO28_EDATA2)


#define CAN_MO28_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001938Cu)




#define CAN_EMO28DATA3 (CAN_MO28_EDATA3)


#define CAN_MO28_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019390u)




#define CAN_EMO28DATA4 (CAN_MO28_EDATA4)


#define CAN_MO28_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019394u)




#define CAN_EMO28DATA5 (CAN_MO28_EDATA5)


#define CAN_MO28_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019398u)




#define CAN_EMO28DATA6 (CAN_MO28_EDATA6)


#define CAN_MO28_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019380u)




#define CAN_MOFCR28 (CAN_MO28_FCR)


#define CAN_MO28_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019384u)




#define CAN_MOFGPR28 (CAN_MO28_FGPR)


#define CAN_MO28_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019388u)




#define CAN_MOIPR28 (CAN_MO28_IPR)


#define CAN_MO28_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001939Cu)




#define CAN_MOSTAT28 (CAN_MO28_STAT)


#define CAN_MO29_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF00193ACu)




#define CAN_MOAMR29 (CAN_MO29_AMR)


#define CAN_MO29_AR (*(volatile Ifx_CAN_MO_AR*)0xF00193B8u)




#define CAN_MOAR29 (CAN_MO29_AR)


#define CAN_MO29_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF00193BCu)




#define CAN_MOCTR29 (CAN_MO29_CTR)


#define CAN_MO29_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF00193B4u)




#define CAN_MODATAH29 (CAN_MO29_DATAH)


#define CAN_MO29_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF00193B0u)




#define CAN_MODATAL29 (CAN_MO29_DATAL)


#define CAN_MO29_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF00193A0u)




#define CAN_EMO29DATA0 (CAN_MO29_EDATA0)


#define CAN_MO29_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF00193A4u)




#define CAN_EMO29DATA1 (CAN_MO29_EDATA1)


#define CAN_MO29_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF00193A8u)




#define CAN_EMO29DATA2 (CAN_MO29_EDATA2)


#define CAN_MO29_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF00193ACu)




#define CAN_EMO29DATA3 (CAN_MO29_EDATA3)


#define CAN_MO29_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF00193B0u)




#define CAN_EMO29DATA4 (CAN_MO29_EDATA4)


#define CAN_MO29_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF00193B4u)




#define CAN_EMO29DATA5 (CAN_MO29_EDATA5)


#define CAN_MO29_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF00193B8u)




#define CAN_EMO29DATA6 (CAN_MO29_EDATA6)


#define CAN_MO29_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF00193A0u)




#define CAN_MOFCR29 (CAN_MO29_FCR)


#define CAN_MO29_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF00193A4u)




#define CAN_MOFGPR29 (CAN_MO29_FGPR)


#define CAN_MO29_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF00193A8u)




#define CAN_MOIPR29 (CAN_MO29_IPR)


#define CAN_MO29_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF00193BCu)




#define CAN_MOSTAT29 (CAN_MO29_STAT)


#define CAN_MO2_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001904Cu)




#define CAN_MOAMR2 (CAN_MO2_AMR)


#define CAN_MO2_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019058u)




#define CAN_MOAR2 (CAN_MO2_AR)


#define CAN_MO2_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001905Cu)




#define CAN_MOCTR2 (CAN_MO2_CTR)


#define CAN_MO2_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019054u)




#define CAN_MODATAH2 (CAN_MO2_DATAH)


#define CAN_MO2_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019050u)




#define CAN_MODATAL2 (CAN_MO2_DATAL)


#define CAN_MO2_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019040u)




#define CAN_EMO2DATA0 (CAN_MO2_EDATA0)


#define CAN_MO2_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019044u)




#define CAN_EMO2DATA1 (CAN_MO2_EDATA1)


#define CAN_MO2_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019048u)




#define CAN_EMO2DATA2 (CAN_MO2_EDATA2)


#define CAN_MO2_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001904Cu)




#define CAN_EMO2DATA3 (CAN_MO2_EDATA3)


#define CAN_MO2_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019050u)




#define CAN_EMO2DATA4 (CAN_MO2_EDATA4)


#define CAN_MO2_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019054u)




#define CAN_EMO2DATA5 (CAN_MO2_EDATA5)


#define CAN_MO2_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019058u)




#define CAN_EMO2DATA6 (CAN_MO2_EDATA6)


#define CAN_MO2_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019040u)




#define CAN_MOFCR2 (CAN_MO2_FCR)


#define CAN_MO2_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019044u)




#define CAN_MOFGPR2 (CAN_MO2_FGPR)


#define CAN_MO2_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019048u)




#define CAN_MOIPR2 (CAN_MO2_IPR)


#define CAN_MO2_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001905Cu)




#define CAN_MOSTAT2 (CAN_MO2_STAT)


#define CAN_MO30_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF00193CCu)




#define CAN_MOAMR30 (CAN_MO30_AMR)


#define CAN_MO30_AR (*(volatile Ifx_CAN_MO_AR*)0xF00193D8u)




#define CAN_MOAR30 (CAN_MO30_AR)


#define CAN_MO30_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF00193DCu)




#define CAN_MOCTR30 (CAN_MO30_CTR)


#define CAN_MO30_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF00193D4u)




#define CAN_MODATAH30 (CAN_MO30_DATAH)


#define CAN_MO30_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF00193D0u)




#define CAN_MODATAL30 (CAN_MO30_DATAL)


#define CAN_MO30_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF00193C0u)




#define CAN_EMO30DATA0 (CAN_MO30_EDATA0)


#define CAN_MO30_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF00193C4u)




#define CAN_EMO30DATA1 (CAN_MO30_EDATA1)


#define CAN_MO30_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF00193C8u)




#define CAN_EMO30DATA2 (CAN_MO30_EDATA2)


#define CAN_MO30_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF00193CCu)




#define CAN_EMO30DATA3 (CAN_MO30_EDATA3)


#define CAN_MO30_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF00193D0u)




#define CAN_EMO30DATA4 (CAN_MO30_EDATA4)


#define CAN_MO30_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF00193D4u)




#define CAN_EMO30DATA5 (CAN_MO30_EDATA5)


#define CAN_MO30_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF00193D8u)




#define CAN_EMO30DATA6 (CAN_MO30_EDATA6)


#define CAN_MO30_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF00193C0u)




#define CAN_MOFCR30 (CAN_MO30_FCR)


#define CAN_MO30_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF00193C4u)




#define CAN_MOFGPR30 (CAN_MO30_FGPR)


#define CAN_MO30_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF00193C8u)




#define CAN_MOIPR30 (CAN_MO30_IPR)


#define CAN_MO30_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF00193DCu)




#define CAN_MOSTAT30 (CAN_MO30_STAT)


#define CAN_MO31_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF00193ECu)




#define CAN_MOAMR31 (CAN_MO31_AMR)


#define CAN_MO31_AR (*(volatile Ifx_CAN_MO_AR*)0xF00193F8u)




#define CAN_MOAR31 (CAN_MO31_AR)


#define CAN_MO31_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF00193FCu)




#define CAN_MOCTR31 (CAN_MO31_CTR)


#define CAN_MO31_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF00193F4u)




#define CAN_MODATAH31 (CAN_MO31_DATAH)


#define CAN_MO31_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF00193F0u)




#define CAN_MODATAL31 (CAN_MO31_DATAL)


#define CAN_MO31_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF00193E0u)




#define CAN_EMO31DATA0 (CAN_MO31_EDATA0)


#define CAN_MO31_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF00193E4u)




#define CAN_EMO31DATA1 (CAN_MO31_EDATA1)


#define CAN_MO31_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF00193E8u)




#define CAN_EMO31DATA2 (CAN_MO31_EDATA2)


#define CAN_MO31_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF00193ECu)




#define CAN_EMO31DATA3 (CAN_MO31_EDATA3)


#define CAN_MO31_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF00193F0u)




#define CAN_EMO31DATA4 (CAN_MO31_EDATA4)


#define CAN_MO31_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF00193F4u)




#define CAN_EMO31DATA5 (CAN_MO31_EDATA5)


#define CAN_MO31_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF00193F8u)




#define CAN_EMO31DATA6 (CAN_MO31_EDATA6)


#define CAN_MO31_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF00193E0u)




#define CAN_MOFCR31 (CAN_MO31_FCR)


#define CAN_MO31_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF00193E4u)




#define CAN_MOFGPR31 (CAN_MO31_FGPR)


#define CAN_MO31_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF00193E8u)




#define CAN_MOIPR31 (CAN_MO31_IPR)


#define CAN_MO31_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF00193FCu)




#define CAN_MOSTAT31 (CAN_MO31_STAT)


#define CAN_MO32_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001940Cu)




#define CAN_MOAMR32 (CAN_MO32_AMR)


#define CAN_MO32_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019418u)




#define CAN_MOAR32 (CAN_MO32_AR)


#define CAN_MO32_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001941Cu)




#define CAN_MOCTR32 (CAN_MO32_CTR)


#define CAN_MO32_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019414u)




#define CAN_MODATAH32 (CAN_MO32_DATAH)


#define CAN_MO32_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019410u)




#define CAN_MODATAL32 (CAN_MO32_DATAL)


#define CAN_MO32_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019400u)




#define CAN_EMO32DATA0 (CAN_MO32_EDATA0)


#define CAN_MO32_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019404u)




#define CAN_EMO32DATA1 (CAN_MO32_EDATA1)


#define CAN_MO32_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019408u)




#define CAN_EMO32DATA2 (CAN_MO32_EDATA2)


#define CAN_MO32_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001940Cu)




#define CAN_EMO32DATA3 (CAN_MO32_EDATA3)


#define CAN_MO32_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019410u)




#define CAN_EMO32DATA4 (CAN_MO32_EDATA4)


#define CAN_MO32_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019414u)




#define CAN_EMO32DATA5 (CAN_MO32_EDATA5)


#define CAN_MO32_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019418u)




#define CAN_EMO32DATA6 (CAN_MO32_EDATA6)


#define CAN_MO32_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019400u)




#define CAN_MOFCR32 (CAN_MO32_FCR)


#define CAN_MO32_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019404u)




#define CAN_MOFGPR32 (CAN_MO32_FGPR)


#define CAN_MO32_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019408u)




#define CAN_MOIPR32 (CAN_MO32_IPR)


#define CAN_MO32_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001941Cu)




#define CAN_MOSTAT32 (CAN_MO32_STAT)


#define CAN_MO33_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001942Cu)




#define CAN_MOAMR33 (CAN_MO33_AMR)


#define CAN_MO33_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019438u)




#define CAN_MOAR33 (CAN_MO33_AR)


#define CAN_MO33_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001943Cu)




#define CAN_MOCTR33 (CAN_MO33_CTR)


#define CAN_MO33_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019434u)




#define CAN_MODATAH33 (CAN_MO33_DATAH)


#define CAN_MO33_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019430u)




#define CAN_MODATAL33 (CAN_MO33_DATAL)


#define CAN_MO33_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019420u)




#define CAN_EMO33DATA0 (CAN_MO33_EDATA0)


#define CAN_MO33_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019424u)




#define CAN_EMO33DATA1 (CAN_MO33_EDATA1)


#define CAN_MO33_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019428u)




#define CAN_EMO33DATA2 (CAN_MO33_EDATA2)


#define CAN_MO33_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001942Cu)




#define CAN_EMO33DATA3 (CAN_MO33_EDATA3)


#define CAN_MO33_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019430u)




#define CAN_EMO33DATA4 (CAN_MO33_EDATA4)


#define CAN_MO33_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019434u)




#define CAN_EMO33DATA5 (CAN_MO33_EDATA5)


#define CAN_MO33_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019438u)




#define CAN_EMO33DATA6 (CAN_MO33_EDATA6)


#define CAN_MO33_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019420u)




#define CAN_MOFCR33 (CAN_MO33_FCR)


#define CAN_MO33_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019424u)




#define CAN_MOFGPR33 (CAN_MO33_FGPR)


#define CAN_MO33_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019428u)




#define CAN_MOIPR33 (CAN_MO33_IPR)


#define CAN_MO33_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001943Cu)




#define CAN_MOSTAT33 (CAN_MO33_STAT)


#define CAN_MO34_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001944Cu)




#define CAN_MOAMR34 (CAN_MO34_AMR)


#define CAN_MO34_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019458u)




#define CAN_MOAR34 (CAN_MO34_AR)


#define CAN_MO34_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001945Cu)




#define CAN_MOCTR34 (CAN_MO34_CTR)


#define CAN_MO34_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019454u)




#define CAN_MODATAH34 (CAN_MO34_DATAH)


#define CAN_MO34_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019450u)




#define CAN_MODATAL34 (CAN_MO34_DATAL)


#define CAN_MO34_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019440u)




#define CAN_EMO34DATA0 (CAN_MO34_EDATA0)


#define CAN_MO34_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019444u)




#define CAN_EMO34DATA1 (CAN_MO34_EDATA1)


#define CAN_MO34_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019448u)




#define CAN_EMO34DATA2 (CAN_MO34_EDATA2)


#define CAN_MO34_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001944Cu)




#define CAN_EMO34DATA3 (CAN_MO34_EDATA3)


#define CAN_MO34_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019450u)




#define CAN_EMO34DATA4 (CAN_MO34_EDATA4)


#define CAN_MO34_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019454u)




#define CAN_EMO34DATA5 (CAN_MO34_EDATA5)


#define CAN_MO34_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019458u)




#define CAN_EMO34DATA6 (CAN_MO34_EDATA6)


#define CAN_MO34_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019440u)




#define CAN_MOFCR34 (CAN_MO34_FCR)


#define CAN_MO34_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019444u)




#define CAN_MOFGPR34 (CAN_MO34_FGPR)


#define CAN_MO34_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019448u)




#define CAN_MOIPR34 (CAN_MO34_IPR)


#define CAN_MO34_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001945Cu)




#define CAN_MOSTAT34 (CAN_MO34_STAT)


#define CAN_MO35_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001946Cu)




#define CAN_MOAMR35 (CAN_MO35_AMR)


#define CAN_MO35_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019478u)




#define CAN_MOAR35 (CAN_MO35_AR)


#define CAN_MO35_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001947Cu)




#define CAN_MOCTR35 (CAN_MO35_CTR)


#define CAN_MO35_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019474u)




#define CAN_MODATAH35 (CAN_MO35_DATAH)


#define CAN_MO35_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019470u)




#define CAN_MODATAL35 (CAN_MO35_DATAL)


#define CAN_MO35_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019460u)




#define CAN_EMO35DATA0 (CAN_MO35_EDATA0)


#define CAN_MO35_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019464u)




#define CAN_EMO35DATA1 (CAN_MO35_EDATA1)


#define CAN_MO35_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019468u)




#define CAN_EMO35DATA2 (CAN_MO35_EDATA2)


#define CAN_MO35_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001946Cu)




#define CAN_EMO35DATA3 (CAN_MO35_EDATA3)


#define CAN_MO35_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019470u)




#define CAN_EMO35DATA4 (CAN_MO35_EDATA4)


#define CAN_MO35_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019474u)




#define CAN_EMO35DATA5 (CAN_MO35_EDATA5)


#define CAN_MO35_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019478u)




#define CAN_EMO35DATA6 (CAN_MO35_EDATA6)


#define CAN_MO35_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019460u)




#define CAN_MOFCR35 (CAN_MO35_FCR)


#define CAN_MO35_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019464u)




#define CAN_MOFGPR35 (CAN_MO35_FGPR)


#define CAN_MO35_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019468u)




#define CAN_MOIPR35 (CAN_MO35_IPR)


#define CAN_MO35_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001947Cu)




#define CAN_MOSTAT35 (CAN_MO35_STAT)


#define CAN_MO36_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001948Cu)




#define CAN_MOAMR36 (CAN_MO36_AMR)


#define CAN_MO36_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019498u)




#define CAN_MOAR36 (CAN_MO36_AR)


#define CAN_MO36_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001949Cu)




#define CAN_MOCTR36 (CAN_MO36_CTR)


#define CAN_MO36_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019494u)




#define CAN_MODATAH36 (CAN_MO36_DATAH)


#define CAN_MO36_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019490u)




#define CAN_MODATAL36 (CAN_MO36_DATAL)


#define CAN_MO36_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019480u)




#define CAN_EMO36DATA0 (CAN_MO36_EDATA0)


#define CAN_MO36_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019484u)




#define CAN_EMO36DATA1 (CAN_MO36_EDATA1)


#define CAN_MO36_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019488u)




#define CAN_EMO36DATA2 (CAN_MO36_EDATA2)


#define CAN_MO36_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001948Cu)




#define CAN_EMO36DATA3 (CAN_MO36_EDATA3)


#define CAN_MO36_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019490u)




#define CAN_EMO36DATA4 (CAN_MO36_EDATA4)


#define CAN_MO36_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019494u)




#define CAN_EMO36DATA5 (CAN_MO36_EDATA5)


#define CAN_MO36_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019498u)




#define CAN_EMO36DATA6 (CAN_MO36_EDATA6)


#define CAN_MO36_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019480u)




#define CAN_MOFCR36 (CAN_MO36_FCR)


#define CAN_MO36_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019484u)




#define CAN_MOFGPR36 (CAN_MO36_FGPR)


#define CAN_MO36_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019488u)




#define CAN_MOIPR36 (CAN_MO36_IPR)


#define CAN_MO36_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001949Cu)




#define CAN_MOSTAT36 (CAN_MO36_STAT)


#define CAN_MO37_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF00194ACu)




#define CAN_MOAMR37 (CAN_MO37_AMR)


#define CAN_MO37_AR (*(volatile Ifx_CAN_MO_AR*)0xF00194B8u)




#define CAN_MOAR37 (CAN_MO37_AR)


#define CAN_MO37_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF00194BCu)




#define CAN_MOCTR37 (CAN_MO37_CTR)


#define CAN_MO37_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF00194B4u)




#define CAN_MODATAH37 (CAN_MO37_DATAH)


#define CAN_MO37_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF00194B0u)




#define CAN_MODATAL37 (CAN_MO37_DATAL)


#define CAN_MO37_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF00194A0u)




#define CAN_EMO37DATA0 (CAN_MO37_EDATA0)


#define CAN_MO37_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF00194A4u)




#define CAN_EMO37DATA1 (CAN_MO37_EDATA1)


#define CAN_MO37_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF00194A8u)




#define CAN_EMO37DATA2 (CAN_MO37_EDATA2)


#define CAN_MO37_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF00194ACu)




#define CAN_EMO37DATA3 (CAN_MO37_EDATA3)


#define CAN_MO37_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF00194B0u)




#define CAN_EMO37DATA4 (CAN_MO37_EDATA4)


#define CAN_MO37_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF00194B4u)




#define CAN_EMO37DATA5 (CAN_MO37_EDATA5)


#define CAN_MO37_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF00194B8u)




#define CAN_EMO37DATA6 (CAN_MO37_EDATA6)


#define CAN_MO37_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF00194A0u)




#define CAN_MOFCR37 (CAN_MO37_FCR)


#define CAN_MO37_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF00194A4u)




#define CAN_MOFGPR37 (CAN_MO37_FGPR)


#define CAN_MO37_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF00194A8u)




#define CAN_MOIPR37 (CAN_MO37_IPR)


#define CAN_MO37_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF00194BCu)




#define CAN_MOSTAT37 (CAN_MO37_STAT)


#define CAN_MO38_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF00194CCu)




#define CAN_MOAMR38 (CAN_MO38_AMR)


#define CAN_MO38_AR (*(volatile Ifx_CAN_MO_AR*)0xF00194D8u)




#define CAN_MOAR38 (CAN_MO38_AR)


#define CAN_MO38_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF00194DCu)




#define CAN_MOCTR38 (CAN_MO38_CTR)


#define CAN_MO38_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF00194D4u)




#define CAN_MODATAH38 (CAN_MO38_DATAH)


#define CAN_MO38_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF00194D0u)




#define CAN_MODATAL38 (CAN_MO38_DATAL)


#define CAN_MO38_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF00194C0u)




#define CAN_EMO38DATA0 (CAN_MO38_EDATA0)


#define CAN_MO38_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF00194C4u)




#define CAN_EMO38DATA1 (CAN_MO38_EDATA1)


#define CAN_MO38_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF00194C8u)




#define CAN_EMO38DATA2 (CAN_MO38_EDATA2)


#define CAN_MO38_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF00194CCu)




#define CAN_EMO38DATA3 (CAN_MO38_EDATA3)


#define CAN_MO38_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF00194D0u)




#define CAN_EMO38DATA4 (CAN_MO38_EDATA4)


#define CAN_MO38_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF00194D4u)




#define CAN_EMO38DATA5 (CAN_MO38_EDATA5)


#define CAN_MO38_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF00194D8u)




#define CAN_EMO38DATA6 (CAN_MO38_EDATA6)


#define CAN_MO38_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF00194C0u)




#define CAN_MOFCR38 (CAN_MO38_FCR)


#define CAN_MO38_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF00194C4u)




#define CAN_MOFGPR38 (CAN_MO38_FGPR)


#define CAN_MO38_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF00194C8u)




#define CAN_MOIPR38 (CAN_MO38_IPR)


#define CAN_MO38_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF00194DCu)




#define CAN_MOSTAT38 (CAN_MO38_STAT)


#define CAN_MO39_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF00194ECu)




#define CAN_MOAMR39 (CAN_MO39_AMR)


#define CAN_MO39_AR (*(volatile Ifx_CAN_MO_AR*)0xF00194F8u)




#define CAN_MOAR39 (CAN_MO39_AR)


#define CAN_MO39_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF00194FCu)




#define CAN_MOCTR39 (CAN_MO39_CTR)


#define CAN_MO39_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF00194F4u)




#define CAN_MODATAH39 (CAN_MO39_DATAH)


#define CAN_MO39_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF00194F0u)




#define CAN_MODATAL39 (CAN_MO39_DATAL)


#define CAN_MO39_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF00194E0u)




#define CAN_EMO39DATA0 (CAN_MO39_EDATA0)


#define CAN_MO39_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF00194E4u)




#define CAN_EMO39DATA1 (CAN_MO39_EDATA1)


#define CAN_MO39_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF00194E8u)




#define CAN_EMO39DATA2 (CAN_MO39_EDATA2)


#define CAN_MO39_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF00194ECu)




#define CAN_EMO39DATA3 (CAN_MO39_EDATA3)


#define CAN_MO39_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF00194F0u)




#define CAN_EMO39DATA4 (CAN_MO39_EDATA4)


#define CAN_MO39_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF00194F4u)




#define CAN_EMO39DATA5 (CAN_MO39_EDATA5)


#define CAN_MO39_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF00194F8u)




#define CAN_EMO39DATA6 (CAN_MO39_EDATA6)


#define CAN_MO39_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF00194E0u)




#define CAN_MOFCR39 (CAN_MO39_FCR)


#define CAN_MO39_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF00194E4u)




#define CAN_MOFGPR39 (CAN_MO39_FGPR)


#define CAN_MO39_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF00194E8u)




#define CAN_MOIPR39 (CAN_MO39_IPR)


#define CAN_MO39_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF00194FCu)




#define CAN_MOSTAT39 (CAN_MO39_STAT)


#define CAN_MO3_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001906Cu)




#define CAN_MOAMR3 (CAN_MO3_AMR)


#define CAN_MO3_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019078u)




#define CAN_MOAR3 (CAN_MO3_AR)


#define CAN_MO3_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001907Cu)




#define CAN_MOCTR3 (CAN_MO3_CTR)


#define CAN_MO3_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019074u)




#define CAN_MODATAH3 (CAN_MO3_DATAH)


#define CAN_MO3_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019070u)




#define CAN_MODATAL3 (CAN_MO3_DATAL)


#define CAN_MO3_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019060u)




#define CAN_EMO3DATA0 (CAN_MO3_EDATA0)


#define CAN_MO3_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019064u)




#define CAN_EMO3DATA1 (CAN_MO3_EDATA1)


#define CAN_MO3_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019068u)




#define CAN_EMO3DATA2 (CAN_MO3_EDATA2)


#define CAN_MO3_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001906Cu)




#define CAN_EMO3DATA3 (CAN_MO3_EDATA3)


#define CAN_MO3_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019070u)




#define CAN_EMO3DATA4 (CAN_MO3_EDATA4)


#define CAN_MO3_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019074u)




#define CAN_EMO3DATA5 (CAN_MO3_EDATA5)


#define CAN_MO3_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019078u)




#define CAN_EMO3DATA6 (CAN_MO3_EDATA6)


#define CAN_MO3_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019060u)




#define CAN_MOFCR3 (CAN_MO3_FCR)


#define CAN_MO3_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019064u)




#define CAN_MOFGPR3 (CAN_MO3_FGPR)


#define CAN_MO3_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019068u)




#define CAN_MOIPR3 (CAN_MO3_IPR)


#define CAN_MO3_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001907Cu)




#define CAN_MOSTAT3 (CAN_MO3_STAT)


#define CAN_MO40_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001950Cu)




#define CAN_MOAMR40 (CAN_MO40_AMR)


#define CAN_MO40_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019518u)




#define CAN_MOAR40 (CAN_MO40_AR)


#define CAN_MO40_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001951Cu)




#define CAN_MOCTR40 (CAN_MO40_CTR)


#define CAN_MO40_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019514u)




#define CAN_MODATAH40 (CAN_MO40_DATAH)


#define CAN_MO40_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019510u)




#define CAN_MODATAL40 (CAN_MO40_DATAL)


#define CAN_MO40_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019500u)




#define CAN_EMO40DATA0 (CAN_MO40_EDATA0)


#define CAN_MO40_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019504u)




#define CAN_EMO40DATA1 (CAN_MO40_EDATA1)


#define CAN_MO40_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019508u)




#define CAN_EMO40DATA2 (CAN_MO40_EDATA2)


#define CAN_MO40_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001950Cu)




#define CAN_EMO40DATA3 (CAN_MO40_EDATA3)


#define CAN_MO40_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019510u)




#define CAN_EMO40DATA4 (CAN_MO40_EDATA4)


#define CAN_MO40_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019514u)




#define CAN_EMO40DATA5 (CAN_MO40_EDATA5)


#define CAN_MO40_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019518u)




#define CAN_EMO40DATA6 (CAN_MO40_EDATA6)


#define CAN_MO40_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019500u)




#define CAN_MOFCR40 (CAN_MO40_FCR)


#define CAN_MO40_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019504u)




#define CAN_MOFGPR40 (CAN_MO40_FGPR)


#define CAN_MO40_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019508u)




#define CAN_MOIPR40 (CAN_MO40_IPR)


#define CAN_MO40_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001951Cu)




#define CAN_MOSTAT40 (CAN_MO40_STAT)


#define CAN_MO41_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001952Cu)




#define CAN_MOAMR41 (CAN_MO41_AMR)


#define CAN_MO41_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019538u)




#define CAN_MOAR41 (CAN_MO41_AR)


#define CAN_MO41_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001953Cu)




#define CAN_MOCTR41 (CAN_MO41_CTR)


#define CAN_MO41_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019534u)




#define CAN_MODATAH41 (CAN_MO41_DATAH)


#define CAN_MO41_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019530u)




#define CAN_MODATAL41 (CAN_MO41_DATAL)


#define CAN_MO41_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019520u)




#define CAN_EMO41DATA0 (CAN_MO41_EDATA0)


#define CAN_MO41_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019524u)




#define CAN_EMO41DATA1 (CAN_MO41_EDATA1)


#define CAN_MO41_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019528u)




#define CAN_EMO41DATA2 (CAN_MO41_EDATA2)


#define CAN_MO41_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001952Cu)




#define CAN_EMO41DATA3 (CAN_MO41_EDATA3)


#define CAN_MO41_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019530u)




#define CAN_EMO41DATA4 (CAN_MO41_EDATA4)


#define CAN_MO41_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019534u)




#define CAN_EMO41DATA5 (CAN_MO41_EDATA5)


#define CAN_MO41_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019538u)




#define CAN_EMO41DATA6 (CAN_MO41_EDATA6)


#define CAN_MO41_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019520u)




#define CAN_MOFCR41 (CAN_MO41_FCR)


#define CAN_MO41_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019524u)




#define CAN_MOFGPR41 (CAN_MO41_FGPR)


#define CAN_MO41_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019528u)




#define CAN_MOIPR41 (CAN_MO41_IPR)


#define CAN_MO41_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001953Cu)




#define CAN_MOSTAT41 (CAN_MO41_STAT)


#define CAN_MO42_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001954Cu)




#define CAN_MOAMR42 (CAN_MO42_AMR)


#define CAN_MO42_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019558u)




#define CAN_MOAR42 (CAN_MO42_AR)


#define CAN_MO42_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001955Cu)




#define CAN_MOCTR42 (CAN_MO42_CTR)


#define CAN_MO42_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019554u)




#define CAN_MODATAH42 (CAN_MO42_DATAH)


#define CAN_MO42_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019550u)




#define CAN_MODATAL42 (CAN_MO42_DATAL)


#define CAN_MO42_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019540u)




#define CAN_EMO42DATA0 (CAN_MO42_EDATA0)


#define CAN_MO42_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019544u)




#define CAN_EMO42DATA1 (CAN_MO42_EDATA1)


#define CAN_MO42_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019548u)




#define CAN_EMO42DATA2 (CAN_MO42_EDATA2)


#define CAN_MO42_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001954Cu)




#define CAN_EMO42DATA3 (CAN_MO42_EDATA3)


#define CAN_MO42_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019550u)




#define CAN_EMO42DATA4 (CAN_MO42_EDATA4)


#define CAN_MO42_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019554u)




#define CAN_EMO42DATA5 (CAN_MO42_EDATA5)


#define CAN_MO42_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019558u)




#define CAN_EMO42DATA6 (CAN_MO42_EDATA6)


#define CAN_MO42_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019540u)




#define CAN_MOFCR42 (CAN_MO42_FCR)


#define CAN_MO42_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019544u)




#define CAN_MOFGPR42 (CAN_MO42_FGPR)


#define CAN_MO42_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019548u)




#define CAN_MOIPR42 (CAN_MO42_IPR)


#define CAN_MO42_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001955Cu)




#define CAN_MOSTAT42 (CAN_MO42_STAT)


#define CAN_MO43_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001956Cu)




#define CAN_MOAMR43 (CAN_MO43_AMR)


#define CAN_MO43_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019578u)




#define CAN_MOAR43 (CAN_MO43_AR)


#define CAN_MO43_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001957Cu)




#define CAN_MOCTR43 (CAN_MO43_CTR)


#define CAN_MO43_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019574u)




#define CAN_MODATAH43 (CAN_MO43_DATAH)


#define CAN_MO43_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019570u)




#define CAN_MODATAL43 (CAN_MO43_DATAL)


#define CAN_MO43_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019560u)




#define CAN_EMO43DATA0 (CAN_MO43_EDATA0)


#define CAN_MO43_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019564u)




#define CAN_EMO43DATA1 (CAN_MO43_EDATA1)


#define CAN_MO43_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019568u)




#define CAN_EMO43DATA2 (CAN_MO43_EDATA2)


#define CAN_MO43_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001956Cu)




#define CAN_EMO43DATA3 (CAN_MO43_EDATA3)


#define CAN_MO43_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019570u)




#define CAN_EMO43DATA4 (CAN_MO43_EDATA4)


#define CAN_MO43_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019574u)




#define CAN_EMO43DATA5 (CAN_MO43_EDATA5)


#define CAN_MO43_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019578u)




#define CAN_EMO43DATA6 (CAN_MO43_EDATA6)


#define CAN_MO43_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019560u)




#define CAN_MOFCR43 (CAN_MO43_FCR)


#define CAN_MO43_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019564u)




#define CAN_MOFGPR43 (CAN_MO43_FGPR)


#define CAN_MO43_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019568u)




#define CAN_MOIPR43 (CAN_MO43_IPR)


#define CAN_MO43_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001957Cu)




#define CAN_MOSTAT43 (CAN_MO43_STAT)


#define CAN_MO44_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001958Cu)




#define CAN_MOAMR44 (CAN_MO44_AMR)


#define CAN_MO44_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019598u)




#define CAN_MOAR44 (CAN_MO44_AR)


#define CAN_MO44_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001959Cu)




#define CAN_MOCTR44 (CAN_MO44_CTR)


#define CAN_MO44_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019594u)




#define CAN_MODATAH44 (CAN_MO44_DATAH)


#define CAN_MO44_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019590u)




#define CAN_MODATAL44 (CAN_MO44_DATAL)


#define CAN_MO44_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019580u)




#define CAN_EMO44DATA0 (CAN_MO44_EDATA0)


#define CAN_MO44_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019584u)




#define CAN_EMO44DATA1 (CAN_MO44_EDATA1)


#define CAN_MO44_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019588u)




#define CAN_EMO44DATA2 (CAN_MO44_EDATA2)


#define CAN_MO44_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001958Cu)




#define CAN_EMO44DATA3 (CAN_MO44_EDATA3)


#define CAN_MO44_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019590u)




#define CAN_EMO44DATA4 (CAN_MO44_EDATA4)


#define CAN_MO44_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019594u)




#define CAN_EMO44DATA5 (CAN_MO44_EDATA5)


#define CAN_MO44_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019598u)




#define CAN_EMO44DATA6 (CAN_MO44_EDATA6)


#define CAN_MO44_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019580u)




#define CAN_MOFCR44 (CAN_MO44_FCR)


#define CAN_MO44_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019584u)




#define CAN_MOFGPR44 (CAN_MO44_FGPR)


#define CAN_MO44_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019588u)




#define CAN_MOIPR44 (CAN_MO44_IPR)


#define CAN_MO44_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001959Cu)




#define CAN_MOSTAT44 (CAN_MO44_STAT)


#define CAN_MO45_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF00195ACu)




#define CAN_MOAMR45 (CAN_MO45_AMR)


#define CAN_MO45_AR (*(volatile Ifx_CAN_MO_AR*)0xF00195B8u)




#define CAN_MOAR45 (CAN_MO45_AR)


#define CAN_MO45_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF00195BCu)




#define CAN_MOCTR45 (CAN_MO45_CTR)


#define CAN_MO45_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF00195B4u)




#define CAN_MODATAH45 (CAN_MO45_DATAH)


#define CAN_MO45_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF00195B0u)




#define CAN_MODATAL45 (CAN_MO45_DATAL)


#define CAN_MO45_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF00195A0u)




#define CAN_EMO45DATA0 (CAN_MO45_EDATA0)


#define CAN_MO45_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF00195A4u)




#define CAN_EMO45DATA1 (CAN_MO45_EDATA1)


#define CAN_MO45_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF00195A8u)




#define CAN_EMO45DATA2 (CAN_MO45_EDATA2)


#define CAN_MO45_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF00195ACu)




#define CAN_EMO45DATA3 (CAN_MO45_EDATA3)


#define CAN_MO45_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF00195B0u)




#define CAN_EMO45DATA4 (CAN_MO45_EDATA4)


#define CAN_MO45_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF00195B4u)




#define CAN_EMO45DATA5 (CAN_MO45_EDATA5)


#define CAN_MO45_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF00195B8u)




#define CAN_EMO45DATA6 (CAN_MO45_EDATA6)


#define CAN_MO45_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF00195A0u)




#define CAN_MOFCR45 (CAN_MO45_FCR)


#define CAN_MO45_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF00195A4u)




#define CAN_MOFGPR45 (CAN_MO45_FGPR)


#define CAN_MO45_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF00195A8u)




#define CAN_MOIPR45 (CAN_MO45_IPR)


#define CAN_MO45_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF00195BCu)




#define CAN_MOSTAT45 (CAN_MO45_STAT)


#define CAN_MO46_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF00195CCu)




#define CAN_MOAMR46 (CAN_MO46_AMR)


#define CAN_MO46_AR (*(volatile Ifx_CAN_MO_AR*)0xF00195D8u)




#define CAN_MOAR46 (CAN_MO46_AR)


#define CAN_MO46_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF00195DCu)




#define CAN_MOCTR46 (CAN_MO46_CTR)


#define CAN_MO46_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF00195D4u)




#define CAN_MODATAH46 (CAN_MO46_DATAH)


#define CAN_MO46_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF00195D0u)




#define CAN_MODATAL46 (CAN_MO46_DATAL)


#define CAN_MO46_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF00195C0u)




#define CAN_EMO46DATA0 (CAN_MO46_EDATA0)


#define CAN_MO46_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF00195C4u)




#define CAN_EMO46DATA1 (CAN_MO46_EDATA1)


#define CAN_MO46_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF00195C8u)




#define CAN_EMO46DATA2 (CAN_MO46_EDATA2)


#define CAN_MO46_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF00195CCu)




#define CAN_EMO46DATA3 (CAN_MO46_EDATA3)


#define CAN_MO46_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF00195D0u)




#define CAN_EMO46DATA4 (CAN_MO46_EDATA4)


#define CAN_MO46_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF00195D4u)




#define CAN_EMO46DATA5 (CAN_MO46_EDATA5)


#define CAN_MO46_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF00195D8u)




#define CAN_EMO46DATA6 (CAN_MO46_EDATA6)


#define CAN_MO46_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF00195C0u)




#define CAN_MOFCR46 (CAN_MO46_FCR)


#define CAN_MO46_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF00195C4u)




#define CAN_MOFGPR46 (CAN_MO46_FGPR)


#define CAN_MO46_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF00195C8u)




#define CAN_MOIPR46 (CAN_MO46_IPR)


#define CAN_MO46_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF00195DCu)




#define CAN_MOSTAT46 (CAN_MO46_STAT)


#define CAN_MO47_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF00195ECu)




#define CAN_MOAMR47 (CAN_MO47_AMR)


#define CAN_MO47_AR (*(volatile Ifx_CAN_MO_AR*)0xF00195F8u)




#define CAN_MOAR47 (CAN_MO47_AR)


#define CAN_MO47_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF00195FCu)




#define CAN_MOCTR47 (CAN_MO47_CTR)


#define CAN_MO47_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF00195F4u)




#define CAN_MODATAH47 (CAN_MO47_DATAH)


#define CAN_MO47_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF00195F0u)




#define CAN_MODATAL47 (CAN_MO47_DATAL)


#define CAN_MO47_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF00195E0u)




#define CAN_EMO47DATA0 (CAN_MO47_EDATA0)


#define CAN_MO47_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF00195E4u)




#define CAN_EMO47DATA1 (CAN_MO47_EDATA1)


#define CAN_MO47_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF00195E8u)




#define CAN_EMO47DATA2 (CAN_MO47_EDATA2)


#define CAN_MO47_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF00195ECu)




#define CAN_EMO47DATA3 (CAN_MO47_EDATA3)


#define CAN_MO47_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF00195F0u)




#define CAN_EMO47DATA4 (CAN_MO47_EDATA4)


#define CAN_MO47_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF00195F4u)




#define CAN_EMO47DATA5 (CAN_MO47_EDATA5)


#define CAN_MO47_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF00195F8u)




#define CAN_EMO47DATA6 (CAN_MO47_EDATA6)


#define CAN_MO47_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF00195E0u)




#define CAN_MOFCR47 (CAN_MO47_FCR)


#define CAN_MO47_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF00195E4u)




#define CAN_MOFGPR47 (CAN_MO47_FGPR)


#define CAN_MO47_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF00195E8u)




#define CAN_MOIPR47 (CAN_MO47_IPR)


#define CAN_MO47_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF00195FCu)




#define CAN_MOSTAT47 (CAN_MO47_STAT)


#define CAN_MO48_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001960Cu)




#define CAN_MOAMR48 (CAN_MO48_AMR)


#define CAN_MO48_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019618u)




#define CAN_MOAR48 (CAN_MO48_AR)


#define CAN_MO48_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001961Cu)




#define CAN_MOCTR48 (CAN_MO48_CTR)


#define CAN_MO48_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019614u)




#define CAN_MODATAH48 (CAN_MO48_DATAH)


#define CAN_MO48_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019610u)




#define CAN_MODATAL48 (CAN_MO48_DATAL)


#define CAN_MO48_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019600u)




#define CAN_EMO48DATA0 (CAN_MO48_EDATA0)


#define CAN_MO48_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019604u)




#define CAN_EMO48DATA1 (CAN_MO48_EDATA1)


#define CAN_MO48_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019608u)




#define CAN_EMO48DATA2 (CAN_MO48_EDATA2)


#define CAN_MO48_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001960Cu)




#define CAN_EMO48DATA3 (CAN_MO48_EDATA3)


#define CAN_MO48_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019610u)




#define CAN_EMO48DATA4 (CAN_MO48_EDATA4)


#define CAN_MO48_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019614u)




#define CAN_EMO48DATA5 (CAN_MO48_EDATA5)


#define CAN_MO48_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019618u)




#define CAN_EMO48DATA6 (CAN_MO48_EDATA6)


#define CAN_MO48_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019600u)




#define CAN_MOFCR48 (CAN_MO48_FCR)


#define CAN_MO48_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019604u)




#define CAN_MOFGPR48 (CAN_MO48_FGPR)


#define CAN_MO48_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019608u)




#define CAN_MOIPR48 (CAN_MO48_IPR)


#define CAN_MO48_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001961Cu)




#define CAN_MOSTAT48 (CAN_MO48_STAT)


#define CAN_MO49_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001962Cu)




#define CAN_MOAMR49 (CAN_MO49_AMR)


#define CAN_MO49_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019638u)




#define CAN_MOAR49 (CAN_MO49_AR)


#define CAN_MO49_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001963Cu)




#define CAN_MOCTR49 (CAN_MO49_CTR)


#define CAN_MO49_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019634u)




#define CAN_MODATAH49 (CAN_MO49_DATAH)


#define CAN_MO49_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019630u)




#define CAN_MODATAL49 (CAN_MO49_DATAL)


#define CAN_MO49_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019620u)




#define CAN_EMO49DATA0 (CAN_MO49_EDATA0)


#define CAN_MO49_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019624u)




#define CAN_EMO49DATA1 (CAN_MO49_EDATA1)


#define CAN_MO49_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019628u)




#define CAN_EMO49DATA2 (CAN_MO49_EDATA2)


#define CAN_MO49_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001962Cu)




#define CAN_EMO49DATA3 (CAN_MO49_EDATA3)


#define CAN_MO49_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019630u)




#define CAN_EMO49DATA4 (CAN_MO49_EDATA4)


#define CAN_MO49_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019634u)




#define CAN_EMO49DATA5 (CAN_MO49_EDATA5)


#define CAN_MO49_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019638u)




#define CAN_EMO49DATA6 (CAN_MO49_EDATA6)


#define CAN_MO49_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019620u)




#define CAN_MOFCR49 (CAN_MO49_FCR)


#define CAN_MO49_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019624u)




#define CAN_MOFGPR49 (CAN_MO49_FGPR)


#define CAN_MO49_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019628u)




#define CAN_MOIPR49 (CAN_MO49_IPR)


#define CAN_MO49_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001963Cu)




#define CAN_MOSTAT49 (CAN_MO49_STAT)


#define CAN_MO4_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001908Cu)




#define CAN_MOAMR4 (CAN_MO4_AMR)


#define CAN_MO4_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019098u)




#define CAN_MOAR4 (CAN_MO4_AR)


#define CAN_MO4_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001909Cu)




#define CAN_MOCTR4 (CAN_MO4_CTR)


#define CAN_MO4_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019094u)




#define CAN_MODATAH4 (CAN_MO4_DATAH)


#define CAN_MO4_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019090u)




#define CAN_MODATAL4 (CAN_MO4_DATAL)


#define CAN_MO4_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019080u)




#define CAN_EMO4DATA0 (CAN_MO4_EDATA0)


#define CAN_MO4_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019084u)




#define CAN_EMO4DATA1 (CAN_MO4_EDATA1)


#define CAN_MO4_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019088u)




#define CAN_EMO4DATA2 (CAN_MO4_EDATA2)


#define CAN_MO4_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001908Cu)




#define CAN_EMO4DATA3 (CAN_MO4_EDATA3)


#define CAN_MO4_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019090u)




#define CAN_EMO4DATA4 (CAN_MO4_EDATA4)


#define CAN_MO4_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019094u)




#define CAN_EMO4DATA5 (CAN_MO4_EDATA5)


#define CAN_MO4_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019098u)




#define CAN_EMO4DATA6 (CAN_MO4_EDATA6)


#define CAN_MO4_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019080u)




#define CAN_MOFCR4 (CAN_MO4_FCR)


#define CAN_MO4_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019084u)




#define CAN_MOFGPR4 (CAN_MO4_FGPR)


#define CAN_MO4_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019088u)




#define CAN_MOIPR4 (CAN_MO4_IPR)


#define CAN_MO4_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001909Cu)




#define CAN_MOSTAT4 (CAN_MO4_STAT)


#define CAN_MO50_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001964Cu)




#define CAN_MOAMR50 (CAN_MO50_AMR)


#define CAN_MO50_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019658u)




#define CAN_MOAR50 (CAN_MO50_AR)


#define CAN_MO50_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001965Cu)




#define CAN_MOCTR50 (CAN_MO50_CTR)


#define CAN_MO50_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019654u)




#define CAN_MODATAH50 (CAN_MO50_DATAH)


#define CAN_MO50_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019650u)




#define CAN_MODATAL50 (CAN_MO50_DATAL)


#define CAN_MO50_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019640u)




#define CAN_EMO50DATA0 (CAN_MO50_EDATA0)


#define CAN_MO50_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019644u)




#define CAN_EMO50DATA1 (CAN_MO50_EDATA1)


#define CAN_MO50_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019648u)




#define CAN_EMO50DATA2 (CAN_MO50_EDATA2)


#define CAN_MO50_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001964Cu)




#define CAN_EMO50DATA3 (CAN_MO50_EDATA3)


#define CAN_MO50_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019650u)




#define CAN_EMO50DATA4 (CAN_MO50_EDATA4)


#define CAN_MO50_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019654u)




#define CAN_EMO50DATA5 (CAN_MO50_EDATA5)


#define CAN_MO50_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019658u)




#define CAN_EMO50DATA6 (CAN_MO50_EDATA6)


#define CAN_MO50_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019640u)




#define CAN_MOFCR50 (CAN_MO50_FCR)


#define CAN_MO50_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019644u)




#define CAN_MOFGPR50 (CAN_MO50_FGPR)


#define CAN_MO50_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019648u)




#define CAN_MOIPR50 (CAN_MO50_IPR)


#define CAN_MO50_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001965Cu)




#define CAN_MOSTAT50 (CAN_MO50_STAT)


#define CAN_MO51_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001966Cu)




#define CAN_MOAMR51 (CAN_MO51_AMR)


#define CAN_MO51_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019678u)




#define CAN_MOAR51 (CAN_MO51_AR)


#define CAN_MO51_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001967Cu)




#define CAN_MOCTR51 (CAN_MO51_CTR)


#define CAN_MO51_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019674u)




#define CAN_MODATAH51 (CAN_MO51_DATAH)


#define CAN_MO51_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019670u)




#define CAN_MODATAL51 (CAN_MO51_DATAL)


#define CAN_MO51_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019660u)




#define CAN_EMO51DATA0 (CAN_MO51_EDATA0)


#define CAN_MO51_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019664u)




#define CAN_EMO51DATA1 (CAN_MO51_EDATA1)


#define CAN_MO51_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019668u)




#define CAN_EMO51DATA2 (CAN_MO51_EDATA2)


#define CAN_MO51_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001966Cu)




#define CAN_EMO51DATA3 (CAN_MO51_EDATA3)


#define CAN_MO51_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019670u)




#define CAN_EMO51DATA4 (CAN_MO51_EDATA4)


#define CAN_MO51_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019674u)




#define CAN_EMO51DATA5 (CAN_MO51_EDATA5)


#define CAN_MO51_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019678u)




#define CAN_EMO51DATA6 (CAN_MO51_EDATA6)


#define CAN_MO51_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019660u)




#define CAN_MOFCR51 (CAN_MO51_FCR)


#define CAN_MO51_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019664u)




#define CAN_MOFGPR51 (CAN_MO51_FGPR)


#define CAN_MO51_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019668u)




#define CAN_MOIPR51 (CAN_MO51_IPR)


#define CAN_MO51_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001967Cu)




#define CAN_MOSTAT51 (CAN_MO51_STAT)


#define CAN_MO52_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001968Cu)




#define CAN_MOAMR52 (CAN_MO52_AMR)


#define CAN_MO52_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019698u)




#define CAN_MOAR52 (CAN_MO52_AR)


#define CAN_MO52_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001969Cu)




#define CAN_MOCTR52 (CAN_MO52_CTR)


#define CAN_MO52_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019694u)




#define CAN_MODATAH52 (CAN_MO52_DATAH)


#define CAN_MO52_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019690u)




#define CAN_MODATAL52 (CAN_MO52_DATAL)


#define CAN_MO52_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019680u)




#define CAN_EMO52DATA0 (CAN_MO52_EDATA0)


#define CAN_MO52_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019684u)




#define CAN_EMO52DATA1 (CAN_MO52_EDATA1)


#define CAN_MO52_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019688u)




#define CAN_EMO52DATA2 (CAN_MO52_EDATA2)


#define CAN_MO52_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001968Cu)




#define CAN_EMO52DATA3 (CAN_MO52_EDATA3)


#define CAN_MO52_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019690u)




#define CAN_EMO52DATA4 (CAN_MO52_EDATA4)


#define CAN_MO52_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019694u)




#define CAN_EMO52DATA5 (CAN_MO52_EDATA5)


#define CAN_MO52_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019698u)




#define CAN_EMO52DATA6 (CAN_MO52_EDATA6)


#define CAN_MO52_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019680u)




#define CAN_MOFCR52 (CAN_MO52_FCR)


#define CAN_MO52_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019684u)




#define CAN_MOFGPR52 (CAN_MO52_FGPR)


#define CAN_MO52_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019688u)




#define CAN_MOIPR52 (CAN_MO52_IPR)


#define CAN_MO52_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001969Cu)




#define CAN_MOSTAT52 (CAN_MO52_STAT)


#define CAN_MO53_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF00196ACu)




#define CAN_MOAMR53 (CAN_MO53_AMR)


#define CAN_MO53_AR (*(volatile Ifx_CAN_MO_AR*)0xF00196B8u)




#define CAN_MOAR53 (CAN_MO53_AR)


#define CAN_MO53_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF00196BCu)




#define CAN_MOCTR53 (CAN_MO53_CTR)


#define CAN_MO53_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF00196B4u)




#define CAN_MODATAH53 (CAN_MO53_DATAH)


#define CAN_MO53_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF00196B0u)




#define CAN_MODATAL53 (CAN_MO53_DATAL)


#define CAN_MO53_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF00196A0u)




#define CAN_EMO53DATA0 (CAN_MO53_EDATA0)


#define CAN_MO53_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF00196A4u)




#define CAN_EMO53DATA1 (CAN_MO53_EDATA1)


#define CAN_MO53_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF00196A8u)




#define CAN_EMO53DATA2 (CAN_MO53_EDATA2)


#define CAN_MO53_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF00196ACu)




#define CAN_EMO53DATA3 (CAN_MO53_EDATA3)


#define CAN_MO53_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF00196B0u)




#define CAN_EMO53DATA4 (CAN_MO53_EDATA4)


#define CAN_MO53_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF00196B4u)




#define CAN_EMO53DATA5 (CAN_MO53_EDATA5)


#define CAN_MO53_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF00196B8u)




#define CAN_EMO53DATA6 (CAN_MO53_EDATA6)


#define CAN_MO53_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF00196A0u)




#define CAN_MOFCR53 (CAN_MO53_FCR)


#define CAN_MO53_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF00196A4u)




#define CAN_MOFGPR53 (CAN_MO53_FGPR)


#define CAN_MO53_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF00196A8u)




#define CAN_MOIPR53 (CAN_MO53_IPR)


#define CAN_MO53_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF00196BCu)




#define CAN_MOSTAT53 (CAN_MO53_STAT)


#define CAN_MO54_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF00196CCu)




#define CAN_MOAMR54 (CAN_MO54_AMR)


#define CAN_MO54_AR (*(volatile Ifx_CAN_MO_AR*)0xF00196D8u)




#define CAN_MOAR54 (CAN_MO54_AR)


#define CAN_MO54_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF00196DCu)




#define CAN_MOCTR54 (CAN_MO54_CTR)


#define CAN_MO54_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF00196D4u)




#define CAN_MODATAH54 (CAN_MO54_DATAH)


#define CAN_MO54_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF00196D0u)




#define CAN_MODATAL54 (CAN_MO54_DATAL)


#define CAN_MO54_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF00196C0u)




#define CAN_EMO54DATA0 (CAN_MO54_EDATA0)


#define CAN_MO54_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF00196C4u)




#define CAN_EMO54DATA1 (CAN_MO54_EDATA1)


#define CAN_MO54_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF00196C8u)




#define CAN_EMO54DATA2 (CAN_MO54_EDATA2)


#define CAN_MO54_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF00196CCu)




#define CAN_EMO54DATA3 (CAN_MO54_EDATA3)


#define CAN_MO54_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF00196D0u)




#define CAN_EMO54DATA4 (CAN_MO54_EDATA4)


#define CAN_MO54_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF00196D4u)




#define CAN_EMO54DATA5 (CAN_MO54_EDATA5)


#define CAN_MO54_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF00196D8u)




#define CAN_EMO54DATA6 (CAN_MO54_EDATA6)


#define CAN_MO54_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF00196C0u)




#define CAN_MOFCR54 (CAN_MO54_FCR)


#define CAN_MO54_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF00196C4u)




#define CAN_MOFGPR54 (CAN_MO54_FGPR)


#define CAN_MO54_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF00196C8u)




#define CAN_MOIPR54 (CAN_MO54_IPR)


#define CAN_MO54_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF00196DCu)




#define CAN_MOSTAT54 (CAN_MO54_STAT)


#define CAN_MO55_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF00196ECu)




#define CAN_MOAMR55 (CAN_MO55_AMR)


#define CAN_MO55_AR (*(volatile Ifx_CAN_MO_AR*)0xF00196F8u)




#define CAN_MOAR55 (CAN_MO55_AR)


#define CAN_MO55_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF00196FCu)




#define CAN_MOCTR55 (CAN_MO55_CTR)


#define CAN_MO55_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF00196F4u)




#define CAN_MODATAH55 (CAN_MO55_DATAH)


#define CAN_MO55_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF00196F0u)




#define CAN_MODATAL55 (CAN_MO55_DATAL)


#define CAN_MO55_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF00196E0u)




#define CAN_EMO55DATA0 (CAN_MO55_EDATA0)


#define CAN_MO55_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF00196E4u)




#define CAN_EMO55DATA1 (CAN_MO55_EDATA1)


#define CAN_MO55_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF00196E8u)




#define CAN_EMO55DATA2 (CAN_MO55_EDATA2)


#define CAN_MO55_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF00196ECu)




#define CAN_EMO55DATA3 (CAN_MO55_EDATA3)


#define CAN_MO55_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF00196F0u)




#define CAN_EMO55DATA4 (CAN_MO55_EDATA4)


#define CAN_MO55_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF00196F4u)




#define CAN_EMO55DATA5 (CAN_MO55_EDATA5)


#define CAN_MO55_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF00196F8u)




#define CAN_EMO55DATA6 (CAN_MO55_EDATA6)


#define CAN_MO55_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF00196E0u)




#define CAN_MOFCR55 (CAN_MO55_FCR)


#define CAN_MO55_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF00196E4u)




#define CAN_MOFGPR55 (CAN_MO55_FGPR)


#define CAN_MO55_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF00196E8u)




#define CAN_MOIPR55 (CAN_MO55_IPR)


#define CAN_MO55_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF00196FCu)




#define CAN_MOSTAT55 (CAN_MO55_STAT)


#define CAN_MO56_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001970Cu)




#define CAN_MOAMR56 (CAN_MO56_AMR)


#define CAN_MO56_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019718u)




#define CAN_MOAR56 (CAN_MO56_AR)


#define CAN_MO56_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001971Cu)




#define CAN_MOCTR56 (CAN_MO56_CTR)


#define CAN_MO56_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019714u)




#define CAN_MODATAH56 (CAN_MO56_DATAH)


#define CAN_MO56_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019710u)




#define CAN_MODATAL56 (CAN_MO56_DATAL)


#define CAN_MO56_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019700u)




#define CAN_EMO56DATA0 (CAN_MO56_EDATA0)


#define CAN_MO56_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019704u)




#define CAN_EMO56DATA1 (CAN_MO56_EDATA1)


#define CAN_MO56_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019708u)




#define CAN_EMO56DATA2 (CAN_MO56_EDATA2)


#define CAN_MO56_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001970Cu)




#define CAN_EMO56DATA3 (CAN_MO56_EDATA3)


#define CAN_MO56_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019710u)




#define CAN_EMO56DATA4 (CAN_MO56_EDATA4)


#define CAN_MO56_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019714u)




#define CAN_EMO56DATA5 (CAN_MO56_EDATA5)


#define CAN_MO56_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019718u)




#define CAN_EMO56DATA6 (CAN_MO56_EDATA6)


#define CAN_MO56_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019700u)




#define CAN_MOFCR56 (CAN_MO56_FCR)


#define CAN_MO56_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019704u)




#define CAN_MOFGPR56 (CAN_MO56_FGPR)


#define CAN_MO56_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019708u)




#define CAN_MOIPR56 (CAN_MO56_IPR)


#define CAN_MO56_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001971Cu)




#define CAN_MOSTAT56 (CAN_MO56_STAT)


#define CAN_MO57_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001972Cu)




#define CAN_MOAMR57 (CAN_MO57_AMR)


#define CAN_MO57_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019738u)




#define CAN_MOAR57 (CAN_MO57_AR)


#define CAN_MO57_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001973Cu)




#define CAN_MOCTR57 (CAN_MO57_CTR)


#define CAN_MO57_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019734u)




#define CAN_MODATAH57 (CAN_MO57_DATAH)


#define CAN_MO57_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019730u)




#define CAN_MODATAL57 (CAN_MO57_DATAL)


#define CAN_MO57_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019720u)




#define CAN_EMO57DATA0 (CAN_MO57_EDATA0)


#define CAN_MO57_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019724u)




#define CAN_EMO57DATA1 (CAN_MO57_EDATA1)


#define CAN_MO57_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019728u)




#define CAN_EMO57DATA2 (CAN_MO57_EDATA2)


#define CAN_MO57_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001972Cu)




#define CAN_EMO57DATA3 (CAN_MO57_EDATA3)


#define CAN_MO57_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019730u)




#define CAN_EMO57DATA4 (CAN_MO57_EDATA4)


#define CAN_MO57_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019734u)




#define CAN_EMO57DATA5 (CAN_MO57_EDATA5)


#define CAN_MO57_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019738u)




#define CAN_EMO57DATA6 (CAN_MO57_EDATA6)


#define CAN_MO57_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019720u)




#define CAN_MOFCR57 (CAN_MO57_FCR)


#define CAN_MO57_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019724u)




#define CAN_MOFGPR57 (CAN_MO57_FGPR)


#define CAN_MO57_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019728u)




#define CAN_MOIPR57 (CAN_MO57_IPR)


#define CAN_MO57_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001973Cu)




#define CAN_MOSTAT57 (CAN_MO57_STAT)


#define CAN_MO58_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001974Cu)




#define CAN_MOAMR58 (CAN_MO58_AMR)


#define CAN_MO58_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019758u)




#define CAN_MOAR58 (CAN_MO58_AR)


#define CAN_MO58_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001975Cu)




#define CAN_MOCTR58 (CAN_MO58_CTR)


#define CAN_MO58_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019754u)




#define CAN_MODATAH58 (CAN_MO58_DATAH)


#define CAN_MO58_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019750u)




#define CAN_MODATAL58 (CAN_MO58_DATAL)


#define CAN_MO58_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019740u)




#define CAN_EMO58DATA0 (CAN_MO58_EDATA0)


#define CAN_MO58_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019744u)




#define CAN_EMO58DATA1 (CAN_MO58_EDATA1)


#define CAN_MO58_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019748u)




#define CAN_EMO58DATA2 (CAN_MO58_EDATA2)


#define CAN_MO58_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001974Cu)




#define CAN_EMO58DATA3 (CAN_MO58_EDATA3)


#define CAN_MO58_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019750u)




#define CAN_EMO58DATA4 (CAN_MO58_EDATA4)


#define CAN_MO58_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019754u)




#define CAN_EMO58DATA5 (CAN_MO58_EDATA5)


#define CAN_MO58_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019758u)




#define CAN_EMO58DATA6 (CAN_MO58_EDATA6)


#define CAN_MO58_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019740u)




#define CAN_MOFCR58 (CAN_MO58_FCR)


#define CAN_MO58_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019744u)




#define CAN_MOFGPR58 (CAN_MO58_FGPR)


#define CAN_MO58_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019748u)




#define CAN_MOIPR58 (CAN_MO58_IPR)


#define CAN_MO58_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001975Cu)




#define CAN_MOSTAT58 (CAN_MO58_STAT)


#define CAN_MO59_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001976Cu)




#define CAN_MOAMR59 (CAN_MO59_AMR)


#define CAN_MO59_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019778u)




#define CAN_MOAR59 (CAN_MO59_AR)


#define CAN_MO59_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001977Cu)




#define CAN_MOCTR59 (CAN_MO59_CTR)


#define CAN_MO59_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019774u)




#define CAN_MODATAH59 (CAN_MO59_DATAH)


#define CAN_MO59_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019770u)




#define CAN_MODATAL59 (CAN_MO59_DATAL)


#define CAN_MO59_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019760u)




#define CAN_EMO59DATA0 (CAN_MO59_EDATA0)


#define CAN_MO59_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019764u)




#define CAN_EMO59DATA1 (CAN_MO59_EDATA1)


#define CAN_MO59_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019768u)




#define CAN_EMO59DATA2 (CAN_MO59_EDATA2)


#define CAN_MO59_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001976Cu)




#define CAN_EMO59DATA3 (CAN_MO59_EDATA3)


#define CAN_MO59_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019770u)




#define CAN_EMO59DATA4 (CAN_MO59_EDATA4)


#define CAN_MO59_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019774u)




#define CAN_EMO59DATA5 (CAN_MO59_EDATA5)


#define CAN_MO59_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019778u)




#define CAN_EMO59DATA6 (CAN_MO59_EDATA6)


#define CAN_MO59_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019760u)




#define CAN_MOFCR59 (CAN_MO59_FCR)


#define CAN_MO59_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019764u)




#define CAN_MOFGPR59 (CAN_MO59_FGPR)


#define CAN_MO59_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019768u)




#define CAN_MOIPR59 (CAN_MO59_IPR)


#define CAN_MO59_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001977Cu)




#define CAN_MOSTAT59 (CAN_MO59_STAT)


#define CAN_MO5_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF00190ACu)




#define CAN_MOAMR5 (CAN_MO5_AMR)


#define CAN_MO5_AR (*(volatile Ifx_CAN_MO_AR*)0xF00190B8u)




#define CAN_MOAR5 (CAN_MO5_AR)


#define CAN_MO5_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF00190BCu)




#define CAN_MOCTR5 (CAN_MO5_CTR)


#define CAN_MO5_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF00190B4u)




#define CAN_MODATAH5 (CAN_MO5_DATAH)


#define CAN_MO5_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF00190B0u)




#define CAN_MODATAL5 (CAN_MO5_DATAL)


#define CAN_MO5_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF00190A0u)




#define CAN_EMO5DATA0 (CAN_MO5_EDATA0)


#define CAN_MO5_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF00190A4u)




#define CAN_EMO5DATA1 (CAN_MO5_EDATA1)


#define CAN_MO5_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF00190A8u)




#define CAN_EMO5DATA2 (CAN_MO5_EDATA2)


#define CAN_MO5_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF00190ACu)




#define CAN_EMO5DATA3 (CAN_MO5_EDATA3)


#define CAN_MO5_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF00190B0u)




#define CAN_EMO5DATA4 (CAN_MO5_EDATA4)


#define CAN_MO5_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF00190B4u)




#define CAN_EMO5DATA5 (CAN_MO5_EDATA5)


#define CAN_MO5_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF00190B8u)




#define CAN_EMO5DATA6 (CAN_MO5_EDATA6)


#define CAN_MO5_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF00190A0u)




#define CAN_MOFCR5 (CAN_MO5_FCR)


#define CAN_MO5_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF00190A4u)




#define CAN_MOFGPR5 (CAN_MO5_FGPR)


#define CAN_MO5_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF00190A8u)




#define CAN_MOIPR5 (CAN_MO5_IPR)


#define CAN_MO5_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF00190BCu)




#define CAN_MOSTAT5 (CAN_MO5_STAT)


#define CAN_MO60_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001978Cu)




#define CAN_MOAMR60 (CAN_MO60_AMR)


#define CAN_MO60_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019798u)




#define CAN_MOAR60 (CAN_MO60_AR)


#define CAN_MO60_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001979Cu)




#define CAN_MOCTR60 (CAN_MO60_CTR)


#define CAN_MO60_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019794u)




#define CAN_MODATAH60 (CAN_MO60_DATAH)


#define CAN_MO60_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019790u)




#define CAN_MODATAL60 (CAN_MO60_DATAL)


#define CAN_MO60_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019780u)




#define CAN_EMO60DATA0 (CAN_MO60_EDATA0)


#define CAN_MO60_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019784u)




#define CAN_EMO60DATA1 (CAN_MO60_EDATA1)


#define CAN_MO60_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019788u)




#define CAN_EMO60DATA2 (CAN_MO60_EDATA2)


#define CAN_MO60_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001978Cu)




#define CAN_EMO60DATA3 (CAN_MO60_EDATA3)


#define CAN_MO60_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019790u)




#define CAN_EMO60DATA4 (CAN_MO60_EDATA4)


#define CAN_MO60_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019794u)




#define CAN_EMO60DATA5 (CAN_MO60_EDATA5)


#define CAN_MO60_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019798u)




#define CAN_EMO60DATA6 (CAN_MO60_EDATA6)


#define CAN_MO60_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019780u)




#define CAN_MOFCR60 (CAN_MO60_FCR)


#define CAN_MO60_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019784u)




#define CAN_MOFGPR60 (CAN_MO60_FGPR)


#define CAN_MO60_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019788u)




#define CAN_MOIPR60 (CAN_MO60_IPR)


#define CAN_MO60_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001979Cu)




#define CAN_MOSTAT60 (CAN_MO60_STAT)


#define CAN_MO61_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF00197ACu)




#define CAN_MOAMR61 (CAN_MO61_AMR)


#define CAN_MO61_AR (*(volatile Ifx_CAN_MO_AR*)0xF00197B8u)




#define CAN_MOAR61 (CAN_MO61_AR)


#define CAN_MO61_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF00197BCu)




#define CAN_MOCTR61 (CAN_MO61_CTR)


#define CAN_MO61_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF00197B4u)




#define CAN_MODATAH61 (CAN_MO61_DATAH)


#define CAN_MO61_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF00197B0u)




#define CAN_MODATAL61 (CAN_MO61_DATAL)


#define CAN_MO61_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF00197A0u)




#define CAN_EMO61DATA0 (CAN_MO61_EDATA0)


#define CAN_MO61_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF00197A4u)




#define CAN_EMO61DATA1 (CAN_MO61_EDATA1)


#define CAN_MO61_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF00197A8u)




#define CAN_EMO61DATA2 (CAN_MO61_EDATA2)


#define CAN_MO61_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF00197ACu)




#define CAN_EMO61DATA3 (CAN_MO61_EDATA3)


#define CAN_MO61_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF00197B0u)




#define CAN_EMO61DATA4 (CAN_MO61_EDATA4)


#define CAN_MO61_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF00197B4u)




#define CAN_EMO61DATA5 (CAN_MO61_EDATA5)


#define CAN_MO61_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF00197B8u)




#define CAN_EMO61DATA6 (CAN_MO61_EDATA6)


#define CAN_MO61_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF00197A0u)




#define CAN_MOFCR61 (CAN_MO61_FCR)


#define CAN_MO61_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF00197A4u)




#define CAN_MOFGPR61 (CAN_MO61_FGPR)


#define CAN_MO61_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF00197A8u)




#define CAN_MOIPR61 (CAN_MO61_IPR)


#define CAN_MO61_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF00197BCu)




#define CAN_MOSTAT61 (CAN_MO61_STAT)


#define CAN_MO62_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF00197CCu)




#define CAN_MOAMR62 (CAN_MO62_AMR)


#define CAN_MO62_AR (*(volatile Ifx_CAN_MO_AR*)0xF00197D8u)




#define CAN_MOAR62 (CAN_MO62_AR)


#define CAN_MO62_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF00197DCu)




#define CAN_MOCTR62 (CAN_MO62_CTR)


#define CAN_MO62_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF00197D4u)




#define CAN_MODATAH62 (CAN_MO62_DATAH)


#define CAN_MO62_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF00197D0u)




#define CAN_MODATAL62 (CAN_MO62_DATAL)


#define CAN_MO62_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF00197C0u)




#define CAN_EMO62DATA0 (CAN_MO62_EDATA0)


#define CAN_MO62_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF00197C4u)




#define CAN_EMO62DATA1 (CAN_MO62_EDATA1)


#define CAN_MO62_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF00197C8u)




#define CAN_EMO62DATA2 (CAN_MO62_EDATA2)


#define CAN_MO62_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF00197CCu)




#define CAN_EMO62DATA3 (CAN_MO62_EDATA3)


#define CAN_MO62_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF00197D0u)




#define CAN_EMO62DATA4 (CAN_MO62_EDATA4)


#define CAN_MO62_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF00197D4u)




#define CAN_EMO62DATA5 (CAN_MO62_EDATA5)


#define CAN_MO62_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF00197D8u)




#define CAN_EMO62DATA6 (CAN_MO62_EDATA6)


#define CAN_MO62_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF00197C0u)




#define CAN_MOFCR62 (CAN_MO62_FCR)


#define CAN_MO62_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF00197C4u)




#define CAN_MOFGPR62 (CAN_MO62_FGPR)


#define CAN_MO62_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF00197C8u)




#define CAN_MOIPR62 (CAN_MO62_IPR)


#define CAN_MO62_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF00197DCu)




#define CAN_MOSTAT62 (CAN_MO62_STAT)


#define CAN_MO63_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF00197ECu)




#define CAN_MOAMR63 (CAN_MO63_AMR)


#define CAN_MO63_AR (*(volatile Ifx_CAN_MO_AR*)0xF00197F8u)




#define CAN_MOAR63 (CAN_MO63_AR)


#define CAN_MO63_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF00197FCu)




#define CAN_MOCTR63 (CAN_MO63_CTR)


#define CAN_MO63_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF00197F4u)




#define CAN_MODATAH63 (CAN_MO63_DATAH)


#define CAN_MO63_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF00197F0u)




#define CAN_MODATAL63 (CAN_MO63_DATAL)


#define CAN_MO63_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF00197E0u)




#define CAN_EMO63DATA0 (CAN_MO63_EDATA0)


#define CAN_MO63_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF00197E4u)




#define CAN_EMO63DATA1 (CAN_MO63_EDATA1)


#define CAN_MO63_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF00197E8u)




#define CAN_EMO63DATA2 (CAN_MO63_EDATA2)


#define CAN_MO63_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF00197ECu)




#define CAN_EMO63DATA3 (CAN_MO63_EDATA3)


#define CAN_MO63_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF00197F0u)




#define CAN_EMO63DATA4 (CAN_MO63_EDATA4)


#define CAN_MO63_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF00197F4u)




#define CAN_EMO63DATA5 (CAN_MO63_EDATA5)


#define CAN_MO63_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF00197F8u)




#define CAN_EMO63DATA6 (CAN_MO63_EDATA6)


#define CAN_MO63_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF00197E0u)




#define CAN_MOFCR63 (CAN_MO63_FCR)


#define CAN_MO63_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF00197E4u)




#define CAN_MOFGPR63 (CAN_MO63_FGPR)


#define CAN_MO63_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF00197E8u)




#define CAN_MOIPR63 (CAN_MO63_IPR)


#define CAN_MO63_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF00197FCu)




#define CAN_MOSTAT63 (CAN_MO63_STAT)


#define CAN_MO64_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001980Cu)




#define CAN_MOAMR64 (CAN_MO64_AMR)


#define CAN_MO64_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019818u)




#define CAN_MOAR64 (CAN_MO64_AR)


#define CAN_MO64_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001981Cu)




#define CAN_MOCTR64 (CAN_MO64_CTR)


#define CAN_MO64_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019814u)




#define CAN_MODATAH64 (CAN_MO64_DATAH)


#define CAN_MO64_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019810u)




#define CAN_MODATAL64 (CAN_MO64_DATAL)


#define CAN_MO64_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019800u)




#define CAN_EMO64DATA0 (CAN_MO64_EDATA0)


#define CAN_MO64_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019804u)




#define CAN_EMO64DATA1 (CAN_MO64_EDATA1)


#define CAN_MO64_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019808u)




#define CAN_EMO64DATA2 (CAN_MO64_EDATA2)


#define CAN_MO64_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001980Cu)




#define CAN_EMO64DATA3 (CAN_MO64_EDATA3)


#define CAN_MO64_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019810u)




#define CAN_EMO64DATA4 (CAN_MO64_EDATA4)


#define CAN_MO64_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019814u)




#define CAN_EMO64DATA5 (CAN_MO64_EDATA5)


#define CAN_MO64_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019818u)




#define CAN_EMO64DATA6 (CAN_MO64_EDATA6)


#define CAN_MO64_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019800u)




#define CAN_MOFCR64 (CAN_MO64_FCR)


#define CAN_MO64_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019804u)




#define CAN_MOFGPR64 (CAN_MO64_FGPR)


#define CAN_MO64_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019808u)




#define CAN_MOIPR64 (CAN_MO64_IPR)


#define CAN_MO64_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001981Cu)




#define CAN_MOSTAT64 (CAN_MO64_STAT)


#define CAN_MO65_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001982Cu)




#define CAN_MOAMR65 (CAN_MO65_AMR)


#define CAN_MO65_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019838u)




#define CAN_MOAR65 (CAN_MO65_AR)


#define CAN_MO65_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001983Cu)




#define CAN_MOCTR65 (CAN_MO65_CTR)


#define CAN_MO65_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019834u)




#define CAN_MODATAH65 (CAN_MO65_DATAH)


#define CAN_MO65_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019830u)




#define CAN_MODATAL65 (CAN_MO65_DATAL)


#define CAN_MO65_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019820u)




#define CAN_EMO65DATA0 (CAN_MO65_EDATA0)


#define CAN_MO65_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019824u)




#define CAN_EMO65DATA1 (CAN_MO65_EDATA1)


#define CAN_MO65_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019828u)




#define CAN_EMO65DATA2 (CAN_MO65_EDATA2)


#define CAN_MO65_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001982Cu)




#define CAN_EMO65DATA3 (CAN_MO65_EDATA3)


#define CAN_MO65_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019830u)




#define CAN_EMO65DATA4 (CAN_MO65_EDATA4)


#define CAN_MO65_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019834u)




#define CAN_EMO65DATA5 (CAN_MO65_EDATA5)


#define CAN_MO65_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019838u)




#define CAN_EMO65DATA6 (CAN_MO65_EDATA6)


#define CAN_MO65_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019820u)




#define CAN_MOFCR65 (CAN_MO65_FCR)


#define CAN_MO65_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019824u)




#define CAN_MOFGPR65 (CAN_MO65_FGPR)


#define CAN_MO65_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019828u)




#define CAN_MOIPR65 (CAN_MO65_IPR)


#define CAN_MO65_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001983Cu)




#define CAN_MOSTAT65 (CAN_MO65_STAT)


#define CAN_MO66_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001984Cu)




#define CAN_MOAMR66 (CAN_MO66_AMR)


#define CAN_MO66_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019858u)




#define CAN_MOAR66 (CAN_MO66_AR)


#define CAN_MO66_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001985Cu)




#define CAN_MOCTR66 (CAN_MO66_CTR)


#define CAN_MO66_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019854u)




#define CAN_MODATAH66 (CAN_MO66_DATAH)


#define CAN_MO66_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019850u)




#define CAN_MODATAL66 (CAN_MO66_DATAL)


#define CAN_MO66_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019840u)




#define CAN_EMO66DATA0 (CAN_MO66_EDATA0)


#define CAN_MO66_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019844u)




#define CAN_EMO66DATA1 (CAN_MO66_EDATA1)


#define CAN_MO66_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019848u)




#define CAN_EMO66DATA2 (CAN_MO66_EDATA2)


#define CAN_MO66_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001984Cu)




#define CAN_EMO66DATA3 (CAN_MO66_EDATA3)


#define CAN_MO66_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019850u)




#define CAN_EMO66DATA4 (CAN_MO66_EDATA4)


#define CAN_MO66_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019854u)




#define CAN_EMO66DATA5 (CAN_MO66_EDATA5)


#define CAN_MO66_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019858u)




#define CAN_EMO66DATA6 (CAN_MO66_EDATA6)


#define CAN_MO66_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019840u)




#define CAN_MOFCR66 (CAN_MO66_FCR)


#define CAN_MO66_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019844u)




#define CAN_MOFGPR66 (CAN_MO66_FGPR)


#define CAN_MO66_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019848u)




#define CAN_MOIPR66 (CAN_MO66_IPR)


#define CAN_MO66_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001985Cu)




#define CAN_MOSTAT66 (CAN_MO66_STAT)


#define CAN_MO67_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001986Cu)




#define CAN_MOAMR67 (CAN_MO67_AMR)


#define CAN_MO67_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019878u)




#define CAN_MOAR67 (CAN_MO67_AR)


#define CAN_MO67_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001987Cu)




#define CAN_MOCTR67 (CAN_MO67_CTR)


#define CAN_MO67_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019874u)




#define CAN_MODATAH67 (CAN_MO67_DATAH)


#define CAN_MO67_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019870u)




#define CAN_MODATAL67 (CAN_MO67_DATAL)


#define CAN_MO67_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019860u)




#define CAN_EMO67DATA0 (CAN_MO67_EDATA0)


#define CAN_MO67_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019864u)




#define CAN_EMO67DATA1 (CAN_MO67_EDATA1)


#define CAN_MO67_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019868u)




#define CAN_EMO67DATA2 (CAN_MO67_EDATA2)


#define CAN_MO67_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001986Cu)




#define CAN_EMO67DATA3 (CAN_MO67_EDATA3)


#define CAN_MO67_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019870u)




#define CAN_EMO67DATA4 (CAN_MO67_EDATA4)


#define CAN_MO67_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019874u)




#define CAN_EMO67DATA5 (CAN_MO67_EDATA5)


#define CAN_MO67_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019878u)




#define CAN_EMO67DATA6 (CAN_MO67_EDATA6)


#define CAN_MO67_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019860u)




#define CAN_MOFCR67 (CAN_MO67_FCR)


#define CAN_MO67_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019864u)




#define CAN_MOFGPR67 (CAN_MO67_FGPR)


#define CAN_MO67_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019868u)




#define CAN_MOIPR67 (CAN_MO67_IPR)


#define CAN_MO67_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001987Cu)




#define CAN_MOSTAT67 (CAN_MO67_STAT)


#define CAN_MO68_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001988Cu)




#define CAN_MOAMR68 (CAN_MO68_AMR)


#define CAN_MO68_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019898u)




#define CAN_MOAR68 (CAN_MO68_AR)


#define CAN_MO68_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001989Cu)




#define CAN_MOCTR68 (CAN_MO68_CTR)


#define CAN_MO68_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019894u)




#define CAN_MODATAH68 (CAN_MO68_DATAH)


#define CAN_MO68_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019890u)




#define CAN_MODATAL68 (CAN_MO68_DATAL)


#define CAN_MO68_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019880u)




#define CAN_EMO68DATA0 (CAN_MO68_EDATA0)


#define CAN_MO68_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019884u)




#define CAN_EMO68DATA1 (CAN_MO68_EDATA1)


#define CAN_MO68_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019888u)




#define CAN_EMO68DATA2 (CAN_MO68_EDATA2)


#define CAN_MO68_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001988Cu)




#define CAN_EMO68DATA3 (CAN_MO68_EDATA3)


#define CAN_MO68_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019890u)




#define CAN_EMO68DATA4 (CAN_MO68_EDATA4)


#define CAN_MO68_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019894u)




#define CAN_EMO68DATA5 (CAN_MO68_EDATA5)


#define CAN_MO68_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019898u)




#define CAN_EMO68DATA6 (CAN_MO68_EDATA6)


#define CAN_MO68_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019880u)




#define CAN_MOFCR68 (CAN_MO68_FCR)


#define CAN_MO68_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019884u)




#define CAN_MOFGPR68 (CAN_MO68_FGPR)


#define CAN_MO68_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019888u)




#define CAN_MOIPR68 (CAN_MO68_IPR)


#define CAN_MO68_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001989Cu)




#define CAN_MOSTAT68 (CAN_MO68_STAT)


#define CAN_MO69_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF00198ACu)




#define CAN_MOAMR69 (CAN_MO69_AMR)


#define CAN_MO69_AR (*(volatile Ifx_CAN_MO_AR*)0xF00198B8u)




#define CAN_MOAR69 (CAN_MO69_AR)


#define CAN_MO69_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF00198BCu)




#define CAN_MOCTR69 (CAN_MO69_CTR)


#define CAN_MO69_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF00198B4u)




#define CAN_MODATAH69 (CAN_MO69_DATAH)


#define CAN_MO69_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF00198B0u)




#define CAN_MODATAL69 (CAN_MO69_DATAL)


#define CAN_MO69_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF00198A0u)




#define CAN_EMO69DATA0 (CAN_MO69_EDATA0)


#define CAN_MO69_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF00198A4u)




#define CAN_EMO69DATA1 (CAN_MO69_EDATA1)


#define CAN_MO69_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF00198A8u)




#define CAN_EMO69DATA2 (CAN_MO69_EDATA2)


#define CAN_MO69_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF00198ACu)




#define CAN_EMO69DATA3 (CAN_MO69_EDATA3)


#define CAN_MO69_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF00198B0u)




#define CAN_EMO69DATA4 (CAN_MO69_EDATA4)


#define CAN_MO69_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF00198B4u)




#define CAN_EMO69DATA5 (CAN_MO69_EDATA5)


#define CAN_MO69_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF00198B8u)




#define CAN_EMO69DATA6 (CAN_MO69_EDATA6)


#define CAN_MO69_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF00198A0u)




#define CAN_MOFCR69 (CAN_MO69_FCR)


#define CAN_MO69_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF00198A4u)




#define CAN_MOFGPR69 (CAN_MO69_FGPR)


#define CAN_MO69_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF00198A8u)




#define CAN_MOIPR69 (CAN_MO69_IPR)


#define CAN_MO69_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF00198BCu)




#define CAN_MOSTAT69 (CAN_MO69_STAT)


#define CAN_MO6_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF00190CCu)




#define CAN_MOAMR6 (CAN_MO6_AMR)


#define CAN_MO6_AR (*(volatile Ifx_CAN_MO_AR*)0xF00190D8u)




#define CAN_MOAR6 (CAN_MO6_AR)


#define CAN_MO6_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF00190DCu)




#define CAN_MOCTR6 (CAN_MO6_CTR)


#define CAN_MO6_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF00190D4u)




#define CAN_MODATAH6 (CAN_MO6_DATAH)


#define CAN_MO6_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF00190D0u)




#define CAN_MODATAL6 (CAN_MO6_DATAL)


#define CAN_MO6_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF00190C0u)




#define CAN_EMO6DATA0 (CAN_MO6_EDATA0)


#define CAN_MO6_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF00190C4u)




#define CAN_EMO6DATA1 (CAN_MO6_EDATA1)


#define CAN_MO6_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF00190C8u)




#define CAN_EMO6DATA2 (CAN_MO6_EDATA2)


#define CAN_MO6_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF00190CCu)




#define CAN_EMO6DATA3 (CAN_MO6_EDATA3)


#define CAN_MO6_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF00190D0u)




#define CAN_EMO6DATA4 (CAN_MO6_EDATA4)


#define CAN_MO6_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF00190D4u)




#define CAN_EMO6DATA5 (CAN_MO6_EDATA5)


#define CAN_MO6_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF00190D8u)




#define CAN_EMO6DATA6 (CAN_MO6_EDATA6)


#define CAN_MO6_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF00190C0u)




#define CAN_MOFCR6 (CAN_MO6_FCR)


#define CAN_MO6_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF00190C4u)




#define CAN_MOFGPR6 (CAN_MO6_FGPR)


#define CAN_MO6_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF00190C8u)




#define CAN_MOIPR6 (CAN_MO6_IPR)


#define CAN_MO6_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF00190DCu)




#define CAN_MOSTAT6 (CAN_MO6_STAT)


#define CAN_MO70_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF00198CCu)




#define CAN_MOAMR70 (CAN_MO70_AMR)


#define CAN_MO70_AR (*(volatile Ifx_CAN_MO_AR*)0xF00198D8u)




#define CAN_MOAR70 (CAN_MO70_AR)


#define CAN_MO70_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF00198DCu)




#define CAN_MOCTR70 (CAN_MO70_CTR)


#define CAN_MO70_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF00198D4u)




#define CAN_MODATAH70 (CAN_MO70_DATAH)


#define CAN_MO70_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF00198D0u)




#define CAN_MODATAL70 (CAN_MO70_DATAL)


#define CAN_MO70_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF00198C0u)




#define CAN_EMO70DATA0 (CAN_MO70_EDATA0)


#define CAN_MO70_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF00198C4u)




#define CAN_EMO70DATA1 (CAN_MO70_EDATA1)


#define CAN_MO70_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF00198C8u)




#define CAN_EMO70DATA2 (CAN_MO70_EDATA2)


#define CAN_MO70_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF00198CCu)




#define CAN_EMO70DATA3 (CAN_MO70_EDATA3)


#define CAN_MO70_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF00198D0u)




#define CAN_EMO70DATA4 (CAN_MO70_EDATA4)


#define CAN_MO70_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF00198D4u)




#define CAN_EMO70DATA5 (CAN_MO70_EDATA5)


#define CAN_MO70_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF00198D8u)




#define CAN_EMO70DATA6 (CAN_MO70_EDATA6)


#define CAN_MO70_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF00198C0u)




#define CAN_MOFCR70 (CAN_MO70_FCR)


#define CAN_MO70_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF00198C4u)




#define CAN_MOFGPR70 (CAN_MO70_FGPR)


#define CAN_MO70_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF00198C8u)




#define CAN_MOIPR70 (CAN_MO70_IPR)


#define CAN_MO70_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF00198DCu)




#define CAN_MOSTAT70 (CAN_MO70_STAT)


#define CAN_MO71_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF00198ECu)




#define CAN_MOAMR71 (CAN_MO71_AMR)


#define CAN_MO71_AR (*(volatile Ifx_CAN_MO_AR*)0xF00198F8u)




#define CAN_MOAR71 (CAN_MO71_AR)


#define CAN_MO71_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF00198FCu)




#define CAN_MOCTR71 (CAN_MO71_CTR)


#define CAN_MO71_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF00198F4u)




#define CAN_MODATAH71 (CAN_MO71_DATAH)


#define CAN_MO71_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF00198F0u)




#define CAN_MODATAL71 (CAN_MO71_DATAL)


#define CAN_MO71_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF00198E0u)




#define CAN_EMO71DATA0 (CAN_MO71_EDATA0)


#define CAN_MO71_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF00198E4u)




#define CAN_EMO71DATA1 (CAN_MO71_EDATA1)


#define CAN_MO71_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF00198E8u)




#define CAN_EMO71DATA2 (CAN_MO71_EDATA2)


#define CAN_MO71_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF00198ECu)




#define CAN_EMO71DATA3 (CAN_MO71_EDATA3)


#define CAN_MO71_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF00198F0u)




#define CAN_EMO71DATA4 (CAN_MO71_EDATA4)


#define CAN_MO71_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF00198F4u)




#define CAN_EMO71DATA5 (CAN_MO71_EDATA5)


#define CAN_MO71_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF00198F8u)




#define CAN_EMO71DATA6 (CAN_MO71_EDATA6)


#define CAN_MO71_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF00198E0u)




#define CAN_MOFCR71 (CAN_MO71_FCR)


#define CAN_MO71_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF00198E4u)




#define CAN_MOFGPR71 (CAN_MO71_FGPR)


#define CAN_MO71_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF00198E8u)




#define CAN_MOIPR71 (CAN_MO71_IPR)


#define CAN_MO71_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF00198FCu)




#define CAN_MOSTAT71 (CAN_MO71_STAT)


#define CAN_MO72_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001990Cu)




#define CAN_MOAMR72 (CAN_MO72_AMR)


#define CAN_MO72_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019918u)




#define CAN_MOAR72 (CAN_MO72_AR)


#define CAN_MO72_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001991Cu)




#define CAN_MOCTR72 (CAN_MO72_CTR)


#define CAN_MO72_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019914u)




#define CAN_MODATAH72 (CAN_MO72_DATAH)


#define CAN_MO72_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019910u)




#define CAN_MODATAL72 (CAN_MO72_DATAL)


#define CAN_MO72_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019900u)




#define CAN_EMO72DATA0 (CAN_MO72_EDATA0)


#define CAN_MO72_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019904u)




#define CAN_EMO72DATA1 (CAN_MO72_EDATA1)


#define CAN_MO72_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019908u)




#define CAN_EMO72DATA2 (CAN_MO72_EDATA2)


#define CAN_MO72_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001990Cu)




#define CAN_EMO72DATA3 (CAN_MO72_EDATA3)


#define CAN_MO72_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019910u)




#define CAN_EMO72DATA4 (CAN_MO72_EDATA4)


#define CAN_MO72_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019914u)




#define CAN_EMO72DATA5 (CAN_MO72_EDATA5)


#define CAN_MO72_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019918u)




#define CAN_EMO72DATA6 (CAN_MO72_EDATA6)


#define CAN_MO72_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019900u)




#define CAN_MOFCR72 (CAN_MO72_FCR)


#define CAN_MO72_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019904u)




#define CAN_MOFGPR72 (CAN_MO72_FGPR)


#define CAN_MO72_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019908u)




#define CAN_MOIPR72 (CAN_MO72_IPR)


#define CAN_MO72_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001991Cu)




#define CAN_MOSTAT72 (CAN_MO72_STAT)


#define CAN_MO73_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001992Cu)




#define CAN_MOAMR73 (CAN_MO73_AMR)


#define CAN_MO73_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019938u)




#define CAN_MOAR73 (CAN_MO73_AR)


#define CAN_MO73_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001993Cu)




#define CAN_MOCTR73 (CAN_MO73_CTR)


#define CAN_MO73_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019934u)




#define CAN_MODATAH73 (CAN_MO73_DATAH)


#define CAN_MO73_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019930u)




#define CAN_MODATAL73 (CAN_MO73_DATAL)


#define CAN_MO73_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019920u)




#define CAN_EMO73DATA0 (CAN_MO73_EDATA0)


#define CAN_MO73_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019924u)




#define CAN_EMO73DATA1 (CAN_MO73_EDATA1)


#define CAN_MO73_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019928u)




#define CAN_EMO73DATA2 (CAN_MO73_EDATA2)


#define CAN_MO73_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001992Cu)




#define CAN_EMO73DATA3 (CAN_MO73_EDATA3)


#define CAN_MO73_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019930u)




#define CAN_EMO73DATA4 (CAN_MO73_EDATA4)


#define CAN_MO73_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019934u)




#define CAN_EMO73DATA5 (CAN_MO73_EDATA5)


#define CAN_MO73_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019938u)




#define CAN_EMO73DATA6 (CAN_MO73_EDATA6)


#define CAN_MO73_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019920u)




#define CAN_MOFCR73 (CAN_MO73_FCR)


#define CAN_MO73_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019924u)




#define CAN_MOFGPR73 (CAN_MO73_FGPR)


#define CAN_MO73_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019928u)




#define CAN_MOIPR73 (CAN_MO73_IPR)


#define CAN_MO73_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001993Cu)




#define CAN_MOSTAT73 (CAN_MO73_STAT)


#define CAN_MO74_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001994Cu)




#define CAN_MOAMR74 (CAN_MO74_AMR)


#define CAN_MO74_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019958u)




#define CAN_MOAR74 (CAN_MO74_AR)


#define CAN_MO74_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001995Cu)




#define CAN_MOCTR74 (CAN_MO74_CTR)


#define CAN_MO74_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019954u)




#define CAN_MODATAH74 (CAN_MO74_DATAH)


#define CAN_MO74_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019950u)




#define CAN_MODATAL74 (CAN_MO74_DATAL)


#define CAN_MO74_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019940u)




#define CAN_EMO74DATA0 (CAN_MO74_EDATA0)


#define CAN_MO74_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019944u)




#define CAN_EMO74DATA1 (CAN_MO74_EDATA1)


#define CAN_MO74_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019948u)




#define CAN_EMO74DATA2 (CAN_MO74_EDATA2)


#define CAN_MO74_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001994Cu)




#define CAN_EMO74DATA3 (CAN_MO74_EDATA3)


#define CAN_MO74_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019950u)




#define CAN_EMO74DATA4 (CAN_MO74_EDATA4)


#define CAN_MO74_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019954u)




#define CAN_EMO74DATA5 (CAN_MO74_EDATA5)


#define CAN_MO74_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019958u)




#define CAN_EMO74DATA6 (CAN_MO74_EDATA6)


#define CAN_MO74_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019940u)




#define CAN_MOFCR74 (CAN_MO74_FCR)


#define CAN_MO74_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019944u)




#define CAN_MOFGPR74 (CAN_MO74_FGPR)


#define CAN_MO74_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019948u)




#define CAN_MOIPR74 (CAN_MO74_IPR)


#define CAN_MO74_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001995Cu)




#define CAN_MOSTAT74 (CAN_MO74_STAT)


#define CAN_MO75_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001996Cu)




#define CAN_MOAMR75 (CAN_MO75_AMR)


#define CAN_MO75_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019978u)




#define CAN_MOAR75 (CAN_MO75_AR)


#define CAN_MO75_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001997Cu)




#define CAN_MOCTR75 (CAN_MO75_CTR)


#define CAN_MO75_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019974u)




#define CAN_MODATAH75 (CAN_MO75_DATAH)


#define CAN_MO75_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019970u)




#define CAN_MODATAL75 (CAN_MO75_DATAL)


#define CAN_MO75_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019960u)




#define CAN_EMO75DATA0 (CAN_MO75_EDATA0)


#define CAN_MO75_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019964u)




#define CAN_EMO75DATA1 (CAN_MO75_EDATA1)


#define CAN_MO75_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019968u)




#define CAN_EMO75DATA2 (CAN_MO75_EDATA2)


#define CAN_MO75_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001996Cu)




#define CAN_EMO75DATA3 (CAN_MO75_EDATA3)


#define CAN_MO75_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019970u)




#define CAN_EMO75DATA4 (CAN_MO75_EDATA4)


#define CAN_MO75_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019974u)




#define CAN_EMO75DATA5 (CAN_MO75_EDATA5)


#define CAN_MO75_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019978u)




#define CAN_EMO75DATA6 (CAN_MO75_EDATA6)


#define CAN_MO75_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019960u)




#define CAN_MOFCR75 (CAN_MO75_FCR)


#define CAN_MO75_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019964u)




#define CAN_MOFGPR75 (CAN_MO75_FGPR)


#define CAN_MO75_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019968u)




#define CAN_MOIPR75 (CAN_MO75_IPR)


#define CAN_MO75_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001997Cu)




#define CAN_MOSTAT75 (CAN_MO75_STAT)


#define CAN_MO76_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001998Cu)




#define CAN_MOAMR76 (CAN_MO76_AMR)


#define CAN_MO76_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019998u)




#define CAN_MOAR76 (CAN_MO76_AR)


#define CAN_MO76_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001999Cu)




#define CAN_MOCTR76 (CAN_MO76_CTR)


#define CAN_MO76_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019994u)




#define CAN_MODATAH76 (CAN_MO76_DATAH)


#define CAN_MO76_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019990u)




#define CAN_MODATAL76 (CAN_MO76_DATAL)


#define CAN_MO76_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019980u)




#define CAN_EMO76DATA0 (CAN_MO76_EDATA0)


#define CAN_MO76_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019984u)




#define CAN_EMO76DATA1 (CAN_MO76_EDATA1)


#define CAN_MO76_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019988u)




#define CAN_EMO76DATA2 (CAN_MO76_EDATA2)


#define CAN_MO76_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001998Cu)




#define CAN_EMO76DATA3 (CAN_MO76_EDATA3)


#define CAN_MO76_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019990u)




#define CAN_EMO76DATA4 (CAN_MO76_EDATA4)


#define CAN_MO76_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019994u)




#define CAN_EMO76DATA5 (CAN_MO76_EDATA5)


#define CAN_MO76_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019998u)




#define CAN_EMO76DATA6 (CAN_MO76_EDATA6)


#define CAN_MO76_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019980u)




#define CAN_MOFCR76 (CAN_MO76_FCR)


#define CAN_MO76_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019984u)




#define CAN_MOFGPR76 (CAN_MO76_FGPR)


#define CAN_MO76_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019988u)




#define CAN_MOIPR76 (CAN_MO76_IPR)


#define CAN_MO76_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001999Cu)




#define CAN_MOSTAT76 (CAN_MO76_STAT)


#define CAN_MO77_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF00199ACu)




#define CAN_MOAMR77 (CAN_MO77_AMR)


#define CAN_MO77_AR (*(volatile Ifx_CAN_MO_AR*)0xF00199B8u)




#define CAN_MOAR77 (CAN_MO77_AR)


#define CAN_MO77_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF00199BCu)




#define CAN_MOCTR77 (CAN_MO77_CTR)


#define CAN_MO77_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF00199B4u)




#define CAN_MODATAH77 (CAN_MO77_DATAH)


#define CAN_MO77_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF00199B0u)




#define CAN_MODATAL77 (CAN_MO77_DATAL)


#define CAN_MO77_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF00199A0u)




#define CAN_EMO77DATA0 (CAN_MO77_EDATA0)


#define CAN_MO77_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF00199A4u)




#define CAN_EMO77DATA1 (CAN_MO77_EDATA1)


#define CAN_MO77_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF00199A8u)




#define CAN_EMO77DATA2 (CAN_MO77_EDATA2)


#define CAN_MO77_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF00199ACu)




#define CAN_EMO77DATA3 (CAN_MO77_EDATA3)


#define CAN_MO77_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF00199B0u)




#define CAN_EMO77DATA4 (CAN_MO77_EDATA4)


#define CAN_MO77_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF00199B4u)




#define CAN_EMO77DATA5 (CAN_MO77_EDATA5)


#define CAN_MO77_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF00199B8u)




#define CAN_EMO77DATA6 (CAN_MO77_EDATA6)


#define CAN_MO77_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF00199A0u)




#define CAN_MOFCR77 (CAN_MO77_FCR)


#define CAN_MO77_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF00199A4u)




#define CAN_MOFGPR77 (CAN_MO77_FGPR)


#define CAN_MO77_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF00199A8u)




#define CAN_MOIPR77 (CAN_MO77_IPR)


#define CAN_MO77_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF00199BCu)




#define CAN_MOSTAT77 (CAN_MO77_STAT)


#define CAN_MO78_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF00199CCu)




#define CAN_MOAMR78 (CAN_MO78_AMR)


#define CAN_MO78_AR (*(volatile Ifx_CAN_MO_AR*)0xF00199D8u)




#define CAN_MOAR78 (CAN_MO78_AR)


#define CAN_MO78_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF00199DCu)




#define CAN_MOCTR78 (CAN_MO78_CTR)


#define CAN_MO78_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF00199D4u)




#define CAN_MODATAH78 (CAN_MO78_DATAH)


#define CAN_MO78_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF00199D0u)




#define CAN_MODATAL78 (CAN_MO78_DATAL)


#define CAN_MO78_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF00199C0u)




#define CAN_EMO78DATA0 (CAN_MO78_EDATA0)


#define CAN_MO78_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF00199C4u)




#define CAN_EMO78DATA1 (CAN_MO78_EDATA1)


#define CAN_MO78_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF00199C8u)




#define CAN_EMO78DATA2 (CAN_MO78_EDATA2)


#define CAN_MO78_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF00199CCu)




#define CAN_EMO78DATA3 (CAN_MO78_EDATA3)


#define CAN_MO78_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF00199D0u)




#define CAN_EMO78DATA4 (CAN_MO78_EDATA4)


#define CAN_MO78_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF00199D4u)




#define CAN_EMO78DATA5 (CAN_MO78_EDATA5)


#define CAN_MO78_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF00199D8u)




#define CAN_EMO78DATA6 (CAN_MO78_EDATA6)


#define CAN_MO78_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF00199C0u)




#define CAN_MOFCR78 (CAN_MO78_FCR)


#define CAN_MO78_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF00199C4u)




#define CAN_MOFGPR78 (CAN_MO78_FGPR)


#define CAN_MO78_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF00199C8u)




#define CAN_MOIPR78 (CAN_MO78_IPR)


#define CAN_MO78_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF00199DCu)




#define CAN_MOSTAT78 (CAN_MO78_STAT)


#define CAN_MO79_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF00199ECu)




#define CAN_MOAMR79 (CAN_MO79_AMR)


#define CAN_MO79_AR (*(volatile Ifx_CAN_MO_AR*)0xF00199F8u)




#define CAN_MOAR79 (CAN_MO79_AR)


#define CAN_MO79_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF00199FCu)




#define CAN_MOCTR79 (CAN_MO79_CTR)


#define CAN_MO79_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF00199F4u)




#define CAN_MODATAH79 (CAN_MO79_DATAH)


#define CAN_MO79_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF00199F0u)




#define CAN_MODATAL79 (CAN_MO79_DATAL)


#define CAN_MO79_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF00199E0u)




#define CAN_EMO79DATA0 (CAN_MO79_EDATA0)


#define CAN_MO79_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF00199E4u)




#define CAN_EMO79DATA1 (CAN_MO79_EDATA1)


#define CAN_MO79_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF00199E8u)




#define CAN_EMO79DATA2 (CAN_MO79_EDATA2)


#define CAN_MO79_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF00199ECu)




#define CAN_EMO79DATA3 (CAN_MO79_EDATA3)


#define CAN_MO79_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF00199F0u)




#define CAN_EMO79DATA4 (CAN_MO79_EDATA4)


#define CAN_MO79_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF00199F4u)




#define CAN_EMO79DATA5 (CAN_MO79_EDATA5)


#define CAN_MO79_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF00199F8u)




#define CAN_EMO79DATA6 (CAN_MO79_EDATA6)


#define CAN_MO79_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF00199E0u)




#define CAN_MOFCR79 (CAN_MO79_FCR)


#define CAN_MO79_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF00199E4u)




#define CAN_MOFGPR79 (CAN_MO79_FGPR)


#define CAN_MO79_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF00199E8u)




#define CAN_MOIPR79 (CAN_MO79_IPR)


#define CAN_MO79_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF00199FCu)




#define CAN_MOSTAT79 (CAN_MO79_STAT)


#define CAN_MO7_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF00190ECu)




#define CAN_MOAMR7 (CAN_MO7_AMR)


#define CAN_MO7_AR (*(volatile Ifx_CAN_MO_AR*)0xF00190F8u)




#define CAN_MOAR7 (CAN_MO7_AR)


#define CAN_MO7_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF00190FCu)




#define CAN_MOCTR7 (CAN_MO7_CTR)


#define CAN_MO7_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF00190F4u)




#define CAN_MODATAH7 (CAN_MO7_DATAH)


#define CAN_MO7_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF00190F0u)




#define CAN_MODATAL7 (CAN_MO7_DATAL)


#define CAN_MO7_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF00190E0u)




#define CAN_EMO7DATA0 (CAN_MO7_EDATA0)


#define CAN_MO7_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF00190E4u)




#define CAN_EMO7DATA1 (CAN_MO7_EDATA1)


#define CAN_MO7_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF00190E8u)




#define CAN_EMO7DATA2 (CAN_MO7_EDATA2)


#define CAN_MO7_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF00190ECu)




#define CAN_EMO7DATA3 (CAN_MO7_EDATA3)


#define CAN_MO7_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF00190F0u)




#define CAN_EMO7DATA4 (CAN_MO7_EDATA4)


#define CAN_MO7_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF00190F4u)




#define CAN_EMO7DATA5 (CAN_MO7_EDATA5)


#define CAN_MO7_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF00190F8u)




#define CAN_EMO7DATA6 (CAN_MO7_EDATA6)


#define CAN_MO7_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF00190E0u)




#define CAN_MOFCR7 (CAN_MO7_FCR)


#define CAN_MO7_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF00190E4u)




#define CAN_MOFGPR7 (CAN_MO7_FGPR)


#define CAN_MO7_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF00190E8u)




#define CAN_MOIPR7 (CAN_MO7_IPR)


#define CAN_MO7_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF00190FCu)




#define CAN_MOSTAT7 (CAN_MO7_STAT)


#define CAN_MO80_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF0019A0Cu)




#define CAN_MOAMR80 (CAN_MO80_AMR)


#define CAN_MO80_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019A18u)




#define CAN_MOAR80 (CAN_MO80_AR)


#define CAN_MO80_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF0019A1Cu)




#define CAN_MOCTR80 (CAN_MO80_CTR)


#define CAN_MO80_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019A14u)




#define CAN_MODATAH80 (CAN_MO80_DATAH)


#define CAN_MO80_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019A10u)




#define CAN_MODATAL80 (CAN_MO80_DATAL)


#define CAN_MO80_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019A00u)




#define CAN_EMO80DATA0 (CAN_MO80_EDATA0)


#define CAN_MO80_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019A04u)




#define CAN_EMO80DATA1 (CAN_MO80_EDATA1)


#define CAN_MO80_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019A08u)




#define CAN_EMO80DATA2 (CAN_MO80_EDATA2)


#define CAN_MO80_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF0019A0Cu)




#define CAN_EMO80DATA3 (CAN_MO80_EDATA3)


#define CAN_MO80_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019A10u)




#define CAN_EMO80DATA4 (CAN_MO80_EDATA4)


#define CAN_MO80_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019A14u)




#define CAN_EMO80DATA5 (CAN_MO80_EDATA5)


#define CAN_MO80_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019A18u)




#define CAN_EMO80DATA6 (CAN_MO80_EDATA6)


#define CAN_MO80_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019A00u)




#define CAN_MOFCR80 (CAN_MO80_FCR)


#define CAN_MO80_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019A04u)




#define CAN_MOFGPR80 (CAN_MO80_FGPR)


#define CAN_MO80_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019A08u)




#define CAN_MOIPR80 (CAN_MO80_IPR)


#define CAN_MO80_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF0019A1Cu)




#define CAN_MOSTAT80 (CAN_MO80_STAT)


#define CAN_MO81_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF0019A2Cu)




#define CAN_MOAMR81 (CAN_MO81_AMR)


#define CAN_MO81_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019A38u)




#define CAN_MOAR81 (CAN_MO81_AR)


#define CAN_MO81_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF0019A3Cu)




#define CAN_MOCTR81 (CAN_MO81_CTR)


#define CAN_MO81_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019A34u)




#define CAN_MODATAH81 (CAN_MO81_DATAH)


#define CAN_MO81_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019A30u)




#define CAN_MODATAL81 (CAN_MO81_DATAL)


#define CAN_MO81_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019A20u)




#define CAN_EMO81DATA0 (CAN_MO81_EDATA0)


#define CAN_MO81_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019A24u)




#define CAN_EMO81DATA1 (CAN_MO81_EDATA1)


#define CAN_MO81_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019A28u)




#define CAN_EMO81DATA2 (CAN_MO81_EDATA2)


#define CAN_MO81_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF0019A2Cu)




#define CAN_EMO81DATA3 (CAN_MO81_EDATA3)


#define CAN_MO81_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019A30u)




#define CAN_EMO81DATA4 (CAN_MO81_EDATA4)


#define CAN_MO81_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019A34u)




#define CAN_EMO81DATA5 (CAN_MO81_EDATA5)


#define CAN_MO81_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019A38u)




#define CAN_EMO81DATA6 (CAN_MO81_EDATA6)


#define CAN_MO81_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019A20u)




#define CAN_MOFCR81 (CAN_MO81_FCR)


#define CAN_MO81_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019A24u)




#define CAN_MOFGPR81 (CAN_MO81_FGPR)


#define CAN_MO81_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019A28u)




#define CAN_MOIPR81 (CAN_MO81_IPR)


#define CAN_MO81_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF0019A3Cu)




#define CAN_MOSTAT81 (CAN_MO81_STAT)


#define CAN_MO82_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF0019A4Cu)




#define CAN_MOAMR82 (CAN_MO82_AMR)


#define CAN_MO82_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019A58u)




#define CAN_MOAR82 (CAN_MO82_AR)


#define CAN_MO82_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF0019A5Cu)




#define CAN_MOCTR82 (CAN_MO82_CTR)


#define CAN_MO82_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019A54u)




#define CAN_MODATAH82 (CAN_MO82_DATAH)


#define CAN_MO82_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019A50u)




#define CAN_MODATAL82 (CAN_MO82_DATAL)


#define CAN_MO82_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019A40u)




#define CAN_EMO82DATA0 (CAN_MO82_EDATA0)


#define CAN_MO82_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019A44u)




#define CAN_EMO82DATA1 (CAN_MO82_EDATA1)


#define CAN_MO82_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019A48u)




#define CAN_EMO82DATA2 (CAN_MO82_EDATA2)


#define CAN_MO82_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF0019A4Cu)




#define CAN_EMO82DATA3 (CAN_MO82_EDATA3)


#define CAN_MO82_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019A50u)




#define CAN_EMO82DATA4 (CAN_MO82_EDATA4)


#define CAN_MO82_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019A54u)




#define CAN_EMO82DATA5 (CAN_MO82_EDATA5)


#define CAN_MO82_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019A58u)




#define CAN_EMO82DATA6 (CAN_MO82_EDATA6)


#define CAN_MO82_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019A40u)




#define CAN_MOFCR82 (CAN_MO82_FCR)


#define CAN_MO82_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019A44u)




#define CAN_MOFGPR82 (CAN_MO82_FGPR)


#define CAN_MO82_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019A48u)




#define CAN_MOIPR82 (CAN_MO82_IPR)


#define CAN_MO82_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF0019A5Cu)




#define CAN_MOSTAT82 (CAN_MO82_STAT)


#define CAN_MO83_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF0019A6Cu)




#define CAN_MOAMR83 (CAN_MO83_AMR)


#define CAN_MO83_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019A78u)




#define CAN_MOAR83 (CAN_MO83_AR)


#define CAN_MO83_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF0019A7Cu)




#define CAN_MOCTR83 (CAN_MO83_CTR)


#define CAN_MO83_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019A74u)




#define CAN_MODATAH83 (CAN_MO83_DATAH)


#define CAN_MO83_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019A70u)




#define CAN_MODATAL83 (CAN_MO83_DATAL)


#define CAN_MO83_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019A60u)




#define CAN_EMO83DATA0 (CAN_MO83_EDATA0)


#define CAN_MO83_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019A64u)




#define CAN_EMO83DATA1 (CAN_MO83_EDATA1)


#define CAN_MO83_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019A68u)




#define CAN_EMO83DATA2 (CAN_MO83_EDATA2)


#define CAN_MO83_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF0019A6Cu)




#define CAN_EMO83DATA3 (CAN_MO83_EDATA3)


#define CAN_MO83_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019A70u)




#define CAN_EMO83DATA4 (CAN_MO83_EDATA4)


#define CAN_MO83_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019A74u)




#define CAN_EMO83DATA5 (CAN_MO83_EDATA5)


#define CAN_MO83_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019A78u)




#define CAN_EMO83DATA6 (CAN_MO83_EDATA6)


#define CAN_MO83_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019A60u)




#define CAN_MOFCR83 (CAN_MO83_FCR)


#define CAN_MO83_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019A64u)




#define CAN_MOFGPR83 (CAN_MO83_FGPR)


#define CAN_MO83_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019A68u)




#define CAN_MOIPR83 (CAN_MO83_IPR)


#define CAN_MO83_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF0019A7Cu)




#define CAN_MOSTAT83 (CAN_MO83_STAT)


#define CAN_MO84_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF0019A8Cu)




#define CAN_MOAMR84 (CAN_MO84_AMR)


#define CAN_MO84_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019A98u)




#define CAN_MOAR84 (CAN_MO84_AR)


#define CAN_MO84_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF0019A9Cu)




#define CAN_MOCTR84 (CAN_MO84_CTR)


#define CAN_MO84_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019A94u)




#define CAN_MODATAH84 (CAN_MO84_DATAH)


#define CAN_MO84_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019A90u)




#define CAN_MODATAL84 (CAN_MO84_DATAL)


#define CAN_MO84_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019A80u)




#define CAN_EMO84DATA0 (CAN_MO84_EDATA0)


#define CAN_MO84_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019A84u)




#define CAN_EMO84DATA1 (CAN_MO84_EDATA1)


#define CAN_MO84_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019A88u)




#define CAN_EMO84DATA2 (CAN_MO84_EDATA2)


#define CAN_MO84_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF0019A8Cu)




#define CAN_EMO84DATA3 (CAN_MO84_EDATA3)


#define CAN_MO84_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019A90u)




#define CAN_EMO84DATA4 (CAN_MO84_EDATA4)


#define CAN_MO84_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019A94u)




#define CAN_EMO84DATA5 (CAN_MO84_EDATA5)


#define CAN_MO84_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019A98u)




#define CAN_EMO84DATA6 (CAN_MO84_EDATA6)


#define CAN_MO84_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019A80u)




#define CAN_MOFCR84 (CAN_MO84_FCR)


#define CAN_MO84_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019A84u)




#define CAN_MOFGPR84 (CAN_MO84_FGPR)


#define CAN_MO84_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019A88u)




#define CAN_MOIPR84 (CAN_MO84_IPR)


#define CAN_MO84_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF0019A9Cu)




#define CAN_MOSTAT84 (CAN_MO84_STAT)


#define CAN_MO85_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF0019AACu)




#define CAN_MOAMR85 (CAN_MO85_AMR)


#define CAN_MO85_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019AB8u)




#define CAN_MOAR85 (CAN_MO85_AR)


#define CAN_MO85_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF0019ABCu)




#define CAN_MOCTR85 (CAN_MO85_CTR)


#define CAN_MO85_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019AB4u)




#define CAN_MODATAH85 (CAN_MO85_DATAH)


#define CAN_MO85_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019AB0u)




#define CAN_MODATAL85 (CAN_MO85_DATAL)


#define CAN_MO85_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019AA0u)




#define CAN_EMO85DATA0 (CAN_MO85_EDATA0)


#define CAN_MO85_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019AA4u)




#define CAN_EMO85DATA1 (CAN_MO85_EDATA1)


#define CAN_MO85_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019AA8u)




#define CAN_EMO85DATA2 (CAN_MO85_EDATA2)


#define CAN_MO85_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF0019AACu)




#define CAN_EMO85DATA3 (CAN_MO85_EDATA3)


#define CAN_MO85_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019AB0u)




#define CAN_EMO85DATA4 (CAN_MO85_EDATA4)


#define CAN_MO85_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019AB4u)




#define CAN_EMO85DATA5 (CAN_MO85_EDATA5)


#define CAN_MO85_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019AB8u)




#define CAN_EMO85DATA6 (CAN_MO85_EDATA6)


#define CAN_MO85_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019AA0u)




#define CAN_MOFCR85 (CAN_MO85_FCR)


#define CAN_MO85_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019AA4u)




#define CAN_MOFGPR85 (CAN_MO85_FGPR)


#define CAN_MO85_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019AA8u)




#define CAN_MOIPR85 (CAN_MO85_IPR)


#define CAN_MO85_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF0019ABCu)




#define CAN_MOSTAT85 (CAN_MO85_STAT)


#define CAN_MO86_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF0019ACCu)




#define CAN_MOAMR86 (CAN_MO86_AMR)


#define CAN_MO86_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019AD8u)




#define CAN_MOAR86 (CAN_MO86_AR)


#define CAN_MO86_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF0019ADCu)




#define CAN_MOCTR86 (CAN_MO86_CTR)


#define CAN_MO86_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019AD4u)




#define CAN_MODATAH86 (CAN_MO86_DATAH)


#define CAN_MO86_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019AD0u)




#define CAN_MODATAL86 (CAN_MO86_DATAL)


#define CAN_MO86_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019AC0u)




#define CAN_EMO86DATA0 (CAN_MO86_EDATA0)


#define CAN_MO86_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019AC4u)




#define CAN_EMO86DATA1 (CAN_MO86_EDATA1)


#define CAN_MO86_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019AC8u)




#define CAN_EMO86DATA2 (CAN_MO86_EDATA2)


#define CAN_MO86_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF0019ACCu)




#define CAN_EMO86DATA3 (CAN_MO86_EDATA3)


#define CAN_MO86_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019AD0u)




#define CAN_EMO86DATA4 (CAN_MO86_EDATA4)


#define CAN_MO86_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019AD4u)




#define CAN_EMO86DATA5 (CAN_MO86_EDATA5)


#define CAN_MO86_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019AD8u)




#define CAN_EMO86DATA6 (CAN_MO86_EDATA6)


#define CAN_MO86_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019AC0u)




#define CAN_MOFCR86 (CAN_MO86_FCR)


#define CAN_MO86_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019AC4u)




#define CAN_MOFGPR86 (CAN_MO86_FGPR)


#define CAN_MO86_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019AC8u)




#define CAN_MOIPR86 (CAN_MO86_IPR)


#define CAN_MO86_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF0019ADCu)




#define CAN_MOSTAT86 (CAN_MO86_STAT)


#define CAN_MO87_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF0019AECu)




#define CAN_MOAMR87 (CAN_MO87_AMR)


#define CAN_MO87_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019AF8u)




#define CAN_MOAR87 (CAN_MO87_AR)


#define CAN_MO87_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF0019AFCu)




#define CAN_MOCTR87 (CAN_MO87_CTR)


#define CAN_MO87_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019AF4u)




#define CAN_MODATAH87 (CAN_MO87_DATAH)


#define CAN_MO87_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019AF0u)




#define CAN_MODATAL87 (CAN_MO87_DATAL)


#define CAN_MO87_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019AE0u)




#define CAN_EMO87DATA0 (CAN_MO87_EDATA0)


#define CAN_MO87_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019AE4u)




#define CAN_EMO87DATA1 (CAN_MO87_EDATA1)


#define CAN_MO87_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019AE8u)




#define CAN_EMO87DATA2 (CAN_MO87_EDATA2)


#define CAN_MO87_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF0019AECu)




#define CAN_EMO87DATA3 (CAN_MO87_EDATA3)


#define CAN_MO87_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019AF0u)




#define CAN_EMO87DATA4 (CAN_MO87_EDATA4)


#define CAN_MO87_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019AF4u)




#define CAN_EMO87DATA5 (CAN_MO87_EDATA5)


#define CAN_MO87_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019AF8u)




#define CAN_EMO87DATA6 (CAN_MO87_EDATA6)


#define CAN_MO87_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019AE0u)




#define CAN_MOFCR87 (CAN_MO87_FCR)


#define CAN_MO87_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019AE4u)




#define CAN_MOFGPR87 (CAN_MO87_FGPR)


#define CAN_MO87_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019AE8u)




#define CAN_MOIPR87 (CAN_MO87_IPR)


#define CAN_MO87_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF0019AFCu)




#define CAN_MOSTAT87 (CAN_MO87_STAT)


#define CAN_MO88_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF0019B0Cu)




#define CAN_MOAMR88 (CAN_MO88_AMR)


#define CAN_MO88_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019B18u)




#define CAN_MOAR88 (CAN_MO88_AR)


#define CAN_MO88_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF0019B1Cu)




#define CAN_MOCTR88 (CAN_MO88_CTR)


#define CAN_MO88_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019B14u)




#define CAN_MODATAH88 (CAN_MO88_DATAH)


#define CAN_MO88_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019B10u)




#define CAN_MODATAL88 (CAN_MO88_DATAL)


#define CAN_MO88_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019B00u)




#define CAN_EMO88DATA0 (CAN_MO88_EDATA0)


#define CAN_MO88_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019B04u)




#define CAN_EMO88DATA1 (CAN_MO88_EDATA1)


#define CAN_MO88_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019B08u)




#define CAN_EMO88DATA2 (CAN_MO88_EDATA2)


#define CAN_MO88_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF0019B0Cu)




#define CAN_EMO88DATA3 (CAN_MO88_EDATA3)


#define CAN_MO88_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019B10u)




#define CAN_EMO88DATA4 (CAN_MO88_EDATA4)


#define CAN_MO88_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019B14u)




#define CAN_EMO88DATA5 (CAN_MO88_EDATA5)


#define CAN_MO88_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019B18u)




#define CAN_EMO88DATA6 (CAN_MO88_EDATA6)


#define CAN_MO88_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019B00u)




#define CAN_MOFCR88 (CAN_MO88_FCR)


#define CAN_MO88_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019B04u)




#define CAN_MOFGPR88 (CAN_MO88_FGPR)


#define CAN_MO88_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019B08u)




#define CAN_MOIPR88 (CAN_MO88_IPR)


#define CAN_MO88_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF0019B1Cu)




#define CAN_MOSTAT88 (CAN_MO88_STAT)


#define CAN_MO89_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF0019B2Cu)




#define CAN_MOAMR89 (CAN_MO89_AMR)


#define CAN_MO89_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019B38u)




#define CAN_MOAR89 (CAN_MO89_AR)


#define CAN_MO89_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF0019B3Cu)




#define CAN_MOCTR89 (CAN_MO89_CTR)


#define CAN_MO89_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019B34u)




#define CAN_MODATAH89 (CAN_MO89_DATAH)


#define CAN_MO89_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019B30u)




#define CAN_MODATAL89 (CAN_MO89_DATAL)


#define CAN_MO89_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019B20u)




#define CAN_EMO89DATA0 (CAN_MO89_EDATA0)


#define CAN_MO89_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019B24u)




#define CAN_EMO89DATA1 (CAN_MO89_EDATA1)


#define CAN_MO89_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019B28u)




#define CAN_EMO89DATA2 (CAN_MO89_EDATA2)


#define CAN_MO89_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF0019B2Cu)




#define CAN_EMO89DATA3 (CAN_MO89_EDATA3)


#define CAN_MO89_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019B30u)




#define CAN_EMO89DATA4 (CAN_MO89_EDATA4)


#define CAN_MO89_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019B34u)




#define CAN_EMO89DATA5 (CAN_MO89_EDATA5)


#define CAN_MO89_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019B38u)




#define CAN_EMO89DATA6 (CAN_MO89_EDATA6)


#define CAN_MO89_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019B20u)




#define CAN_MOFCR89 (CAN_MO89_FCR)


#define CAN_MO89_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019B24u)




#define CAN_MOFGPR89 (CAN_MO89_FGPR)


#define CAN_MO89_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019B28u)




#define CAN_MOIPR89 (CAN_MO89_IPR)


#define CAN_MO89_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF0019B3Cu)




#define CAN_MOSTAT89 (CAN_MO89_STAT)


#define CAN_MO8_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001910Cu)




#define CAN_MOAMR8 (CAN_MO8_AMR)


#define CAN_MO8_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019118u)




#define CAN_MOAR8 (CAN_MO8_AR)


#define CAN_MO8_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001911Cu)




#define CAN_MOCTR8 (CAN_MO8_CTR)


#define CAN_MO8_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019114u)




#define CAN_MODATAH8 (CAN_MO8_DATAH)


#define CAN_MO8_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019110u)




#define CAN_MODATAL8 (CAN_MO8_DATAL)


#define CAN_MO8_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019100u)




#define CAN_EMO8DATA0 (CAN_MO8_EDATA0)


#define CAN_MO8_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019104u)




#define CAN_EMO8DATA1 (CAN_MO8_EDATA1)


#define CAN_MO8_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019108u)




#define CAN_EMO8DATA2 (CAN_MO8_EDATA2)


#define CAN_MO8_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001910Cu)




#define CAN_EMO8DATA3 (CAN_MO8_EDATA3)


#define CAN_MO8_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019110u)




#define CAN_EMO8DATA4 (CAN_MO8_EDATA4)


#define CAN_MO8_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019114u)




#define CAN_EMO8DATA5 (CAN_MO8_EDATA5)


#define CAN_MO8_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019118u)




#define CAN_EMO8DATA6 (CAN_MO8_EDATA6)


#define CAN_MO8_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019100u)




#define CAN_MOFCR8 (CAN_MO8_FCR)


#define CAN_MO8_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019104u)




#define CAN_MOFGPR8 (CAN_MO8_FGPR)


#define CAN_MO8_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019108u)




#define CAN_MOIPR8 (CAN_MO8_IPR)


#define CAN_MO8_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001911Cu)




#define CAN_MOSTAT8 (CAN_MO8_STAT)


#define CAN_MO90_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF0019B4Cu)




#define CAN_MOAMR90 (CAN_MO90_AMR)


#define CAN_MO90_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019B58u)




#define CAN_MOAR90 (CAN_MO90_AR)


#define CAN_MO90_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF0019B5Cu)




#define CAN_MOCTR90 (CAN_MO90_CTR)


#define CAN_MO90_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019B54u)




#define CAN_MODATAH90 (CAN_MO90_DATAH)


#define CAN_MO90_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019B50u)




#define CAN_MODATAL90 (CAN_MO90_DATAL)


#define CAN_MO90_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019B40u)




#define CAN_EMO90DATA0 (CAN_MO90_EDATA0)


#define CAN_MO90_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019B44u)




#define CAN_EMO90DATA1 (CAN_MO90_EDATA1)


#define CAN_MO90_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019B48u)




#define CAN_EMO90DATA2 (CAN_MO90_EDATA2)


#define CAN_MO90_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF0019B4Cu)




#define CAN_EMO90DATA3 (CAN_MO90_EDATA3)


#define CAN_MO90_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019B50u)




#define CAN_EMO90DATA4 (CAN_MO90_EDATA4)


#define CAN_MO90_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019B54u)




#define CAN_EMO90DATA5 (CAN_MO90_EDATA5)


#define CAN_MO90_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019B58u)




#define CAN_EMO90DATA6 (CAN_MO90_EDATA6)


#define CAN_MO90_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019B40u)




#define CAN_MOFCR90 (CAN_MO90_FCR)


#define CAN_MO90_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019B44u)




#define CAN_MOFGPR90 (CAN_MO90_FGPR)


#define CAN_MO90_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019B48u)




#define CAN_MOIPR90 (CAN_MO90_IPR)


#define CAN_MO90_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF0019B5Cu)




#define CAN_MOSTAT90 (CAN_MO90_STAT)


#define CAN_MO91_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF0019B6Cu)




#define CAN_MOAMR91 (CAN_MO91_AMR)


#define CAN_MO91_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019B78u)




#define CAN_MOAR91 (CAN_MO91_AR)


#define CAN_MO91_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF0019B7Cu)




#define CAN_MOCTR91 (CAN_MO91_CTR)


#define CAN_MO91_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019B74u)




#define CAN_MODATAH91 (CAN_MO91_DATAH)


#define CAN_MO91_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019B70u)




#define CAN_MODATAL91 (CAN_MO91_DATAL)


#define CAN_MO91_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019B60u)




#define CAN_EMO91DATA0 (CAN_MO91_EDATA0)


#define CAN_MO91_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019B64u)




#define CAN_EMO91DATA1 (CAN_MO91_EDATA1)


#define CAN_MO91_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019B68u)




#define CAN_EMO91DATA2 (CAN_MO91_EDATA2)


#define CAN_MO91_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF0019B6Cu)




#define CAN_EMO91DATA3 (CAN_MO91_EDATA3)


#define CAN_MO91_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019B70u)




#define CAN_EMO91DATA4 (CAN_MO91_EDATA4)


#define CAN_MO91_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019B74u)




#define CAN_EMO91DATA5 (CAN_MO91_EDATA5)


#define CAN_MO91_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019B78u)




#define CAN_EMO91DATA6 (CAN_MO91_EDATA6)


#define CAN_MO91_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019B60u)




#define CAN_MOFCR91 (CAN_MO91_FCR)


#define CAN_MO91_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019B64u)




#define CAN_MOFGPR91 (CAN_MO91_FGPR)


#define CAN_MO91_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019B68u)




#define CAN_MOIPR91 (CAN_MO91_IPR)


#define CAN_MO91_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF0019B7Cu)




#define CAN_MOSTAT91 (CAN_MO91_STAT)


#define CAN_MO92_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF0019B8Cu)




#define CAN_MOAMR92 (CAN_MO92_AMR)


#define CAN_MO92_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019B98u)




#define CAN_MOAR92 (CAN_MO92_AR)


#define CAN_MO92_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF0019B9Cu)




#define CAN_MOCTR92 (CAN_MO92_CTR)


#define CAN_MO92_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019B94u)




#define CAN_MODATAH92 (CAN_MO92_DATAH)


#define CAN_MO92_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019B90u)




#define CAN_MODATAL92 (CAN_MO92_DATAL)


#define CAN_MO92_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019B80u)




#define CAN_EMO92DATA0 (CAN_MO92_EDATA0)


#define CAN_MO92_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019B84u)




#define CAN_EMO92DATA1 (CAN_MO92_EDATA1)


#define CAN_MO92_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019B88u)




#define CAN_EMO92DATA2 (CAN_MO92_EDATA2)


#define CAN_MO92_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF0019B8Cu)




#define CAN_EMO92DATA3 (CAN_MO92_EDATA3)


#define CAN_MO92_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019B90u)




#define CAN_EMO92DATA4 (CAN_MO92_EDATA4)


#define CAN_MO92_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019B94u)




#define CAN_EMO92DATA5 (CAN_MO92_EDATA5)


#define CAN_MO92_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019B98u)




#define CAN_EMO92DATA6 (CAN_MO92_EDATA6)


#define CAN_MO92_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019B80u)




#define CAN_MOFCR92 (CAN_MO92_FCR)


#define CAN_MO92_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019B84u)




#define CAN_MOFGPR92 (CAN_MO92_FGPR)


#define CAN_MO92_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019B88u)




#define CAN_MOIPR92 (CAN_MO92_IPR)


#define CAN_MO92_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF0019B9Cu)




#define CAN_MOSTAT92 (CAN_MO92_STAT)


#define CAN_MO93_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF0019BACu)




#define CAN_MOAMR93 (CAN_MO93_AMR)


#define CAN_MO93_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019BB8u)




#define CAN_MOAR93 (CAN_MO93_AR)


#define CAN_MO93_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF0019BBCu)




#define CAN_MOCTR93 (CAN_MO93_CTR)


#define CAN_MO93_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019BB4u)




#define CAN_MODATAH93 (CAN_MO93_DATAH)


#define CAN_MO93_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019BB0u)




#define CAN_MODATAL93 (CAN_MO93_DATAL)


#define CAN_MO93_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019BA0u)




#define CAN_EMO93DATA0 (CAN_MO93_EDATA0)


#define CAN_MO93_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019BA4u)




#define CAN_EMO93DATA1 (CAN_MO93_EDATA1)


#define CAN_MO93_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019BA8u)




#define CAN_EMO93DATA2 (CAN_MO93_EDATA2)


#define CAN_MO93_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF0019BACu)




#define CAN_EMO93DATA3 (CAN_MO93_EDATA3)


#define CAN_MO93_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019BB0u)




#define CAN_EMO93DATA4 (CAN_MO93_EDATA4)


#define CAN_MO93_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019BB4u)




#define CAN_EMO93DATA5 (CAN_MO93_EDATA5)


#define CAN_MO93_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019BB8u)




#define CAN_EMO93DATA6 (CAN_MO93_EDATA6)


#define CAN_MO93_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019BA0u)




#define CAN_MOFCR93 (CAN_MO93_FCR)


#define CAN_MO93_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019BA4u)




#define CAN_MOFGPR93 (CAN_MO93_FGPR)


#define CAN_MO93_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019BA8u)




#define CAN_MOIPR93 (CAN_MO93_IPR)


#define CAN_MO93_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF0019BBCu)




#define CAN_MOSTAT93 (CAN_MO93_STAT)


#define CAN_MO94_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF0019BCCu)




#define CAN_MOAMR94 (CAN_MO94_AMR)


#define CAN_MO94_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019BD8u)




#define CAN_MOAR94 (CAN_MO94_AR)


#define CAN_MO94_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF0019BDCu)




#define CAN_MOCTR94 (CAN_MO94_CTR)


#define CAN_MO94_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019BD4u)




#define CAN_MODATAH94 (CAN_MO94_DATAH)


#define CAN_MO94_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019BD0u)




#define CAN_MODATAL94 (CAN_MO94_DATAL)


#define CAN_MO94_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019BC0u)




#define CAN_EMO94DATA0 (CAN_MO94_EDATA0)


#define CAN_MO94_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019BC4u)




#define CAN_EMO94DATA1 (CAN_MO94_EDATA1)


#define CAN_MO94_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019BC8u)




#define CAN_EMO94DATA2 (CAN_MO94_EDATA2)


#define CAN_MO94_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF0019BCCu)




#define CAN_EMO94DATA3 (CAN_MO94_EDATA3)


#define CAN_MO94_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019BD0u)




#define CAN_EMO94DATA4 (CAN_MO94_EDATA4)


#define CAN_MO94_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019BD4u)




#define CAN_EMO94DATA5 (CAN_MO94_EDATA5)


#define CAN_MO94_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019BD8u)




#define CAN_EMO94DATA6 (CAN_MO94_EDATA6)


#define CAN_MO94_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019BC0u)




#define CAN_MOFCR94 (CAN_MO94_FCR)


#define CAN_MO94_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019BC4u)




#define CAN_MOFGPR94 (CAN_MO94_FGPR)


#define CAN_MO94_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019BC8u)




#define CAN_MOIPR94 (CAN_MO94_IPR)


#define CAN_MO94_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF0019BDCu)




#define CAN_MOSTAT94 (CAN_MO94_STAT)


#define CAN_MO95_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF0019BECu)




#define CAN_MOAMR95 (CAN_MO95_AMR)


#define CAN_MO95_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019BF8u)




#define CAN_MOAR95 (CAN_MO95_AR)


#define CAN_MO95_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF0019BFCu)




#define CAN_MOCTR95 (CAN_MO95_CTR)


#define CAN_MO95_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019BF4u)




#define CAN_MODATAH95 (CAN_MO95_DATAH)


#define CAN_MO95_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019BF0u)




#define CAN_MODATAL95 (CAN_MO95_DATAL)


#define CAN_MO95_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019BE0u)




#define CAN_EMO95DATA0 (CAN_MO95_EDATA0)


#define CAN_MO95_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019BE4u)




#define CAN_EMO95DATA1 (CAN_MO95_EDATA1)


#define CAN_MO95_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019BE8u)




#define CAN_EMO95DATA2 (CAN_MO95_EDATA2)


#define CAN_MO95_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF0019BECu)




#define CAN_EMO95DATA3 (CAN_MO95_EDATA3)


#define CAN_MO95_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019BF0u)




#define CAN_EMO95DATA4 (CAN_MO95_EDATA4)


#define CAN_MO95_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019BF4u)




#define CAN_EMO95DATA5 (CAN_MO95_EDATA5)


#define CAN_MO95_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019BF8u)




#define CAN_EMO95DATA6 (CAN_MO95_EDATA6)


#define CAN_MO95_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019BE0u)




#define CAN_MOFCR95 (CAN_MO95_FCR)


#define CAN_MO95_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019BE4u)




#define CAN_MOFGPR95 (CAN_MO95_FGPR)


#define CAN_MO95_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019BE8u)




#define CAN_MOIPR95 (CAN_MO95_IPR)


#define CAN_MO95_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF0019BFCu)




#define CAN_MOSTAT95 (CAN_MO95_STAT)


#define CAN_MO96_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF0019C0Cu)




#define CAN_MOAMR96 (CAN_MO96_AMR)


#define CAN_MO96_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019C18u)




#define CAN_MOAR96 (CAN_MO96_AR)


#define CAN_MO96_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF0019C1Cu)




#define CAN_MOCTR96 (CAN_MO96_CTR)


#define CAN_MO96_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019C14u)




#define CAN_MODATAH96 (CAN_MO96_DATAH)


#define CAN_MO96_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019C10u)




#define CAN_MODATAL96 (CAN_MO96_DATAL)


#define CAN_MO96_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019C00u)




#define CAN_EMO96DATA0 (CAN_MO96_EDATA0)


#define CAN_MO96_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019C04u)




#define CAN_EMO96DATA1 (CAN_MO96_EDATA1)


#define CAN_MO96_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019C08u)




#define CAN_EMO96DATA2 (CAN_MO96_EDATA2)


#define CAN_MO96_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF0019C0Cu)




#define CAN_EMO96DATA3 (CAN_MO96_EDATA3)


#define CAN_MO96_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019C10u)




#define CAN_EMO96DATA4 (CAN_MO96_EDATA4)


#define CAN_MO96_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019C14u)




#define CAN_EMO96DATA5 (CAN_MO96_EDATA5)


#define CAN_MO96_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019C18u)




#define CAN_EMO96DATA6 (CAN_MO96_EDATA6)


#define CAN_MO96_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019C00u)




#define CAN_MOFCR96 (CAN_MO96_FCR)


#define CAN_MO96_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019C04u)




#define CAN_MOFGPR96 (CAN_MO96_FGPR)


#define CAN_MO96_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019C08u)




#define CAN_MOIPR96 (CAN_MO96_IPR)


#define CAN_MO96_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF0019C1Cu)




#define CAN_MOSTAT96 (CAN_MO96_STAT)


#define CAN_MO97_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF0019C2Cu)




#define CAN_MOAMR97 (CAN_MO97_AMR)


#define CAN_MO97_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019C38u)




#define CAN_MOAR97 (CAN_MO97_AR)


#define CAN_MO97_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF0019C3Cu)




#define CAN_MOCTR97 (CAN_MO97_CTR)


#define CAN_MO97_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019C34u)




#define CAN_MODATAH97 (CAN_MO97_DATAH)


#define CAN_MO97_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019C30u)




#define CAN_MODATAL97 (CAN_MO97_DATAL)


#define CAN_MO97_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019C20u)




#define CAN_EMO97DATA0 (CAN_MO97_EDATA0)


#define CAN_MO97_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019C24u)




#define CAN_EMO97DATA1 (CAN_MO97_EDATA1)


#define CAN_MO97_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019C28u)




#define CAN_EMO97DATA2 (CAN_MO97_EDATA2)


#define CAN_MO97_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF0019C2Cu)




#define CAN_EMO97DATA3 (CAN_MO97_EDATA3)


#define CAN_MO97_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019C30u)




#define CAN_EMO97DATA4 (CAN_MO97_EDATA4)


#define CAN_MO97_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019C34u)




#define CAN_EMO97DATA5 (CAN_MO97_EDATA5)


#define CAN_MO97_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019C38u)




#define CAN_EMO97DATA6 (CAN_MO97_EDATA6)


#define CAN_MO97_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019C20u)




#define CAN_MOFCR97 (CAN_MO97_FCR)


#define CAN_MO97_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019C24u)




#define CAN_MOFGPR97 (CAN_MO97_FGPR)


#define CAN_MO97_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019C28u)




#define CAN_MOIPR97 (CAN_MO97_IPR)


#define CAN_MO97_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF0019C3Cu)




#define CAN_MOSTAT97 (CAN_MO97_STAT)


#define CAN_MO98_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF0019C4Cu)




#define CAN_MOAMR98 (CAN_MO98_AMR)


#define CAN_MO98_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019C58u)




#define CAN_MOAR98 (CAN_MO98_AR)


#define CAN_MO98_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF0019C5Cu)




#define CAN_MOCTR98 (CAN_MO98_CTR)


#define CAN_MO98_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019C54u)




#define CAN_MODATAH98 (CAN_MO98_DATAH)


#define CAN_MO98_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019C50u)




#define CAN_MODATAL98 (CAN_MO98_DATAL)


#define CAN_MO98_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019C40u)




#define CAN_EMO98DATA0 (CAN_MO98_EDATA0)


#define CAN_MO98_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019C44u)




#define CAN_EMO98DATA1 (CAN_MO98_EDATA1)


#define CAN_MO98_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019C48u)




#define CAN_EMO98DATA2 (CAN_MO98_EDATA2)


#define CAN_MO98_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF0019C4Cu)




#define CAN_EMO98DATA3 (CAN_MO98_EDATA3)


#define CAN_MO98_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019C50u)




#define CAN_EMO98DATA4 (CAN_MO98_EDATA4)


#define CAN_MO98_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019C54u)




#define CAN_EMO98DATA5 (CAN_MO98_EDATA5)


#define CAN_MO98_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019C58u)




#define CAN_EMO98DATA6 (CAN_MO98_EDATA6)


#define CAN_MO98_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019C40u)




#define CAN_MOFCR98 (CAN_MO98_FCR)


#define CAN_MO98_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019C44u)




#define CAN_MOFGPR98 (CAN_MO98_FGPR)


#define CAN_MO98_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019C48u)




#define CAN_MOIPR98 (CAN_MO98_IPR)


#define CAN_MO98_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF0019C5Cu)




#define CAN_MOSTAT98 (CAN_MO98_STAT)


#define CAN_MO99_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF0019C6Cu)




#define CAN_MOAMR99 (CAN_MO99_AMR)


#define CAN_MO99_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019C78u)




#define CAN_MOAR99 (CAN_MO99_AR)


#define CAN_MO99_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF0019C7Cu)




#define CAN_MOCTR99 (CAN_MO99_CTR)


#define CAN_MO99_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019C74u)




#define CAN_MODATAH99 (CAN_MO99_DATAH)


#define CAN_MO99_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019C70u)




#define CAN_MODATAL99 (CAN_MO99_DATAL)


#define CAN_MO99_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019C60u)




#define CAN_EMO99DATA0 (CAN_MO99_EDATA0)


#define CAN_MO99_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019C64u)




#define CAN_EMO99DATA1 (CAN_MO99_EDATA1)


#define CAN_MO99_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019C68u)




#define CAN_EMO99DATA2 (CAN_MO99_EDATA2)


#define CAN_MO99_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF0019C6Cu)




#define CAN_EMO99DATA3 (CAN_MO99_EDATA3)


#define CAN_MO99_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019C70u)




#define CAN_EMO99DATA4 (CAN_MO99_EDATA4)


#define CAN_MO99_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019C74u)




#define CAN_EMO99DATA5 (CAN_MO99_EDATA5)


#define CAN_MO99_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019C78u)




#define CAN_EMO99DATA6 (CAN_MO99_EDATA6)


#define CAN_MO99_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019C60u)




#define CAN_MOFCR99 (CAN_MO99_FCR)


#define CAN_MO99_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019C64u)




#define CAN_MOFGPR99 (CAN_MO99_FGPR)


#define CAN_MO99_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019C68u)




#define CAN_MOIPR99 (CAN_MO99_IPR)


#define CAN_MO99_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF0019C7Cu)




#define CAN_MOSTAT99 (CAN_MO99_STAT)


#define CAN_MO9_AMR (*(volatile Ifx_CAN_MO_AMR*)0xF001912Cu)




#define CAN_MOAMR9 (CAN_MO9_AMR)


#define CAN_MO9_AR (*(volatile Ifx_CAN_MO_AR*)0xF0019138u)




#define CAN_MOAR9 (CAN_MO9_AR)


#define CAN_MO9_CTR (*(volatile Ifx_CAN_MO_CTR*)0xF001913Cu)




#define CAN_MOCTR9 (CAN_MO9_CTR)


#define CAN_MO9_DATAH (*(volatile Ifx_CAN_MO_DATAH*)0xF0019134u)




#define CAN_MODATAH9 (CAN_MO9_DATAH)


#define CAN_MO9_DATAL (*(volatile Ifx_CAN_MO_DATAL*)0xF0019130u)




#define CAN_MODATAL9 (CAN_MO9_DATAL)


#define CAN_MO9_EDATA0 (*(volatile Ifx_CAN_MO_EDATA0*)0xF0019120u)




#define CAN_EMO9DATA0 (CAN_MO9_EDATA0)


#define CAN_MO9_EDATA1 (*(volatile Ifx_CAN_MO_EDATA1*)0xF0019124u)




#define CAN_EMO9DATA1 (CAN_MO9_EDATA1)


#define CAN_MO9_EDATA2 (*(volatile Ifx_CAN_MO_EDATA2*)0xF0019128u)




#define CAN_EMO9DATA2 (CAN_MO9_EDATA2)


#define CAN_MO9_EDATA3 (*(volatile Ifx_CAN_MO_EDATA3*)0xF001912Cu)




#define CAN_EMO9DATA3 (CAN_MO9_EDATA3)


#define CAN_MO9_EDATA4 (*(volatile Ifx_CAN_MO_EDATA4*)0xF0019130u)




#define CAN_EMO9DATA4 (CAN_MO9_EDATA4)


#define CAN_MO9_EDATA5 (*(volatile Ifx_CAN_MO_EDATA5*)0xF0019134u)




#define CAN_EMO9DATA5 (CAN_MO9_EDATA5)


#define CAN_MO9_EDATA6 (*(volatile Ifx_CAN_MO_EDATA6*)0xF0019138u)




#define CAN_EMO9DATA6 (CAN_MO9_EDATA6)


#define CAN_MO9_FCR (*(volatile Ifx_CAN_MO_FCR*)0xF0019120u)




#define CAN_MOFCR9 (CAN_MO9_FCR)


#define CAN_MO9_FGPR (*(volatile Ifx_CAN_MO_FGPR*)0xF0019124u)




#define CAN_MOFGPR9 (CAN_MO9_FGPR)


#define CAN_MO9_IPR (*(volatile Ifx_CAN_MO_IPR*)0xF0019128u)




#define CAN_MOIPR9 (CAN_MO9_IPR)


#define CAN_MO9_STAT (*(volatile Ifx_CAN_MO_STAT*)0xF001913Cu)




#define CAN_MOSTAT9 (CAN_MO9_STAT)


#define CAN_MSID0 (*(volatile Ifx_CAN_MSID*)0xF0018180u)


#define CAN_MSID1 (*(volatile Ifx_CAN_MSID*)0xF0018184u)


#define CAN_MSID2 (*(volatile Ifx_CAN_MSID*)0xF0018188u)


#define CAN_MSID3 (*(volatile Ifx_CAN_MSID*)0xF001818Cu)


#define CAN_MSID4 (*(volatile Ifx_CAN_MSID*)0xF0018190u)


#define CAN_MSID5 (*(volatile Ifx_CAN_MSID*)0xF0018194u)


#define CAN_MSID6 (*(volatile Ifx_CAN_MSID*)0xF0018198u)


#define CAN_MSID7 (*(volatile Ifx_CAN_MSID*)0xF001819Cu)


#define CAN_MSIMASK (*(volatile Ifx_CAN_MSIMASK*)0xF00181C0u)


#define CAN_MSPND0 (*(volatile Ifx_CAN_MSPND*)0xF0018140u)


#define CAN_MSPND1 (*(volatile Ifx_CAN_MSPND*)0xF0018144u)


#define CAN_MSPND2 (*(volatile Ifx_CAN_MSPND*)0xF0018148u)


#define CAN_MSPND3 (*(volatile Ifx_CAN_MSPND*)0xF001814Cu)


#define CAN_MSPND4 (*(volatile Ifx_CAN_MSPND*)0xF0018150u)


#define CAN_MSPND5 (*(volatile Ifx_CAN_MSPND*)0xF0018154u)


#define CAN_MSPND6 (*(volatile Ifx_CAN_MSPND*)0xF0018158u)


#define CAN_MSPND7 (*(volatile Ifx_CAN_MSPND*)0xF001815Cu)


#define CAN_N0_BTEVR (*(volatile Ifx_CAN_N_BTEVR*)0xF0018210u)




#define CAN_NBTEVR0 (CAN_N0_BTEVR)


#define CAN_N0_BTR (*(volatile Ifx_CAN_N_BTR*)0xF0018210u)




#define CAN_NBTR0 (CAN_N0_BTR)


#define CAN_N0_CR (*(volatile Ifx_CAN_N_CR*)0xF0018200u)




#define CAN_NCR0 (CAN_N0_CR)


#define CAN_N0_ECNT (*(volatile Ifx_CAN_N_ECNT*)0xF0018214u)




#define CAN_NECNT0 (CAN_N0_ECNT)


#define CAN_N0_FBTR (*(volatile Ifx_CAN_N_FBTR*)0xF0018238u)




#define CAN_FNBTR0 (CAN_N0_FBTR)


#define CAN_N0_FCR (*(volatile Ifx_CAN_N_FCR*)0xF0018218u)




#define CAN_NFCR0 (CAN_N0_FCR)


#define CAN_N0_IPR (*(volatile Ifx_CAN_N_IPR*)0xF0018208u)




#define CAN_NIPR0 (CAN_N0_IPR)


#define CAN_N0_PCR (*(volatile Ifx_CAN_N_PCR*)0xF001820Cu)




#define CAN_NPCR0 (CAN_N0_PCR)


#define CAN_N0_SR (*(volatile Ifx_CAN_N_SR*)0xF0018204u)




#define CAN_NSR0 (CAN_N0_SR)


#define CAN_N0_TATTR (*(volatile Ifx_CAN_N_TTTR*)0xF0018224u)




#define CAN_NTATTR0 (CAN_N0_TATTR)


#define CAN_N0_TBTTR (*(volatile Ifx_CAN_N_TTTR*)0xF0018228u)




#define CAN_NTBTTR0 (CAN_N0_TBTTR)


#define CAN_N0_TCCR (*(volatile Ifx_CAN_N_TCCR*)0xF001821Cu)




#define CAN_NTCCR0 (CAN_N0_TCCR)


#define CAN_N0_TCTTR (*(volatile Ifx_CAN_N_TTTR*)0xF001822Cu)




#define CAN_NTCTTR0 (CAN_N0_TCTTR)


#define CAN_N0_TDCR (*(volatile Ifx_CAN_N_TDCR*)0xF001823Cu)




#define CAN_NTDCR0 (CAN_N0_TDCR)


#define CAN_N0_TRTR (*(volatile Ifx_CAN_N_TRTR*)0xF0018220u)




#define CAN_NTRTR0 (CAN_N0_TRTR)


#define CAN_N1_BTEVR (*(volatile Ifx_CAN_N_BTEVR*)0xF0018310u)




#define CAN_NBTEVR1 (CAN_N1_BTEVR)


#define CAN_N1_BTR (*(volatile Ifx_CAN_N_BTR*)0xF0018310u)




#define CAN_NBTR1 (CAN_N1_BTR)


#define CAN_N1_CR (*(volatile Ifx_CAN_N_CR*)0xF0018300u)




#define CAN_NCR1 (CAN_N1_CR)


#define CAN_N1_ECNT (*(volatile Ifx_CAN_N_ECNT*)0xF0018314u)




#define CAN_NECNT1 (CAN_N1_ECNT)


#define CAN_N1_FBTR (*(volatile Ifx_CAN_N_FBTR*)0xF0018338u)




#define CAN_FNBTR1 (CAN_N1_FBTR)


#define CAN_N1_FCR (*(volatile Ifx_CAN_N_FCR*)0xF0018318u)




#define CAN_NFCR1 (CAN_N1_FCR)


#define CAN_N1_IPR (*(volatile Ifx_CAN_N_IPR*)0xF0018308u)




#define CAN_NIPR1 (CAN_N1_IPR)


#define CAN_N1_PCR (*(volatile Ifx_CAN_N_PCR*)0xF001830Cu)




#define CAN_NPCR1 (CAN_N1_PCR)


#define CAN_N1_SR (*(volatile Ifx_CAN_N_SR*)0xF0018304u)




#define CAN_NSR1 (CAN_N1_SR)


#define CAN_N1_TATTR (*(volatile Ifx_CAN_N_TTTR*)0xF0018324u)




#define CAN_NTATTR1 (CAN_N1_TATTR)


#define CAN_N1_TBTTR (*(volatile Ifx_CAN_N_TTTR*)0xF0018328u)




#define CAN_NTBTTR1 (CAN_N1_TBTTR)


#define CAN_N1_TCCR (*(volatile Ifx_CAN_N_TCCR*)0xF001831Cu)




#define CAN_NTCCR1 (CAN_N1_TCCR)


#define CAN_N1_TCTTR (*(volatile Ifx_CAN_N_TTTR*)0xF001832Cu)




#define CAN_NTCTTR1 (CAN_N1_TCTTR)


#define CAN_N1_TDCR (*(volatile Ifx_CAN_N_TDCR*)0xF001833Cu)




#define CAN_NTDCR1 (CAN_N1_TDCR)


#define CAN_N1_TRTR (*(volatile Ifx_CAN_N_TRTR*)0xF0018320u)




#define CAN_NTRTR1 (CAN_N1_TRTR)


#define CAN_N2_BTEVR (*(volatile Ifx_CAN_N_BTEVR*)0xF0018410u)




#define CAN_NBTEVR2 (CAN_N2_BTEVR)


#define CAN_N2_BTR (*(volatile Ifx_CAN_N_BTR*)0xF0018410u)




#define CAN_NBTR2 (CAN_N2_BTR)


#define CAN_N2_CR (*(volatile Ifx_CAN_N_CR*)0xF0018400u)




#define CAN_NCR2 (CAN_N2_CR)


#define CAN_N2_ECNT (*(volatile Ifx_CAN_N_ECNT*)0xF0018414u)




#define CAN_NECNT2 (CAN_N2_ECNT)


#define CAN_N2_FBTR (*(volatile Ifx_CAN_N_FBTR*)0xF0018438u)




#define CAN_FNBTR2 (CAN_N2_FBTR)


#define CAN_N2_FCR (*(volatile Ifx_CAN_N_FCR*)0xF0018418u)




#define CAN_NFCR2 (CAN_N2_FCR)


#define CAN_N2_IPR (*(volatile Ifx_CAN_N_IPR*)0xF0018408u)




#define CAN_NIPR2 (CAN_N2_IPR)


#define CAN_N2_PCR (*(volatile Ifx_CAN_N_PCR*)0xF001840Cu)




#define CAN_NPCR2 (CAN_N2_PCR)


#define CAN_N2_SR (*(volatile Ifx_CAN_N_SR*)0xF0018404u)




#define CAN_NSR2 (CAN_N2_SR)


#define CAN_N2_TATTR (*(volatile Ifx_CAN_N_TTTR*)0xF0018424u)




#define CAN_NTATTR2 (CAN_N2_TATTR)


#define CAN_N2_TBTTR (*(volatile Ifx_CAN_N_TTTR*)0xF0018428u)




#define CAN_NTBTTR2 (CAN_N2_TBTTR)


#define CAN_N2_TCCR (*(volatile Ifx_CAN_N_TCCR*)0xF001841Cu)




#define CAN_NTCCR2 (CAN_N2_TCCR)


#define CAN_N2_TCTTR (*(volatile Ifx_CAN_N_TTTR*)0xF001842Cu)




#define CAN_NTCTTR2 (CAN_N2_TCTTR)


#define CAN_N2_TDCR (*(volatile Ifx_CAN_N_TDCR*)0xF001843Cu)




#define CAN_NTDCR2 (CAN_N2_TDCR)


#define CAN_N2_TRTR (*(volatile Ifx_CAN_N_TRTR*)0xF0018420u)




#define CAN_NTRTR2 (CAN_N2_TRTR)


#define CAN_N3_BTEVR (*(volatile Ifx_CAN_N_BTEVR*)0xF0018510u)




#define CAN_NBTEVR3 (CAN_N3_BTEVR)


#define CAN_N3_BTR (*(volatile Ifx_CAN_N_BTR*)0xF0018510u)




#define CAN_NBTR3 (CAN_N3_BTR)


#define CAN_N3_CR (*(volatile Ifx_CAN_N_CR*)0xF0018500u)




#define CAN_NCR3 (CAN_N3_CR)


#define CAN_N3_ECNT (*(volatile Ifx_CAN_N_ECNT*)0xF0018514u)




#define CAN_NECNT3 (CAN_N3_ECNT)


#define CAN_N3_FBTR (*(volatile Ifx_CAN_N_FBTR*)0xF0018538u)




#define CAN_FNBTR3 (CAN_N3_FBTR)


#define CAN_N3_FCR (*(volatile Ifx_CAN_N_FCR*)0xF0018518u)




#define CAN_NFCR3 (CAN_N3_FCR)


#define CAN_N3_IPR (*(volatile Ifx_CAN_N_IPR*)0xF0018508u)




#define CAN_NIPR3 (CAN_N3_IPR)


#define CAN_N3_PCR (*(volatile Ifx_CAN_N_PCR*)0xF001850Cu)




#define CAN_NPCR3 (CAN_N3_PCR)


#define CAN_N3_SR (*(volatile Ifx_CAN_N_SR*)0xF0018504u)




#define CAN_NSR3 (CAN_N3_SR)


#define CAN_N3_TATTR (*(volatile Ifx_CAN_N_TTTR*)0xF0018524u)




#define CAN_NTATTR3 (CAN_N3_TATTR)


#define CAN_N3_TBTTR (*(volatile Ifx_CAN_N_TTTR*)0xF0018528u)




#define CAN_NTBTTR3 (CAN_N3_TBTTR)


#define CAN_N3_TCCR (*(volatile Ifx_CAN_N_TCCR*)0xF001851Cu)




#define CAN_NTCCR3 (CAN_N3_TCCR)


#define CAN_N3_TCTTR (*(volatile Ifx_CAN_N_TTTR*)0xF001852Cu)




#define CAN_NTCTTR3 (CAN_N3_TCTTR)


#define CAN_N3_TDCR (*(volatile Ifx_CAN_N_TDCR*)0xF001853Cu)




#define CAN_NTDCR3 (CAN_N3_TDCR)


#define CAN_N3_TRTR (*(volatile Ifx_CAN_N_TRTR*)0xF0018520u)




#define CAN_NTRTR3 (CAN_N3_TRTR)


#define CAN_OCS (*(volatile Ifx_CAN_OCS*)0xF00180E8u)


#define CAN_PANCTR (*(volatile Ifx_CAN_PANCTR*)0xF00181C4u)
# 31 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_reg.h" 2 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCcu6_reg.h" 1 3
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCcu6_reg.h" 3
#define IFXCCU6_REG_H 1

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCcu6_regdef.h" 1 3
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCcu6_regdef.h" 3
#define IFXCCU6_REGDEF_H 1







typedef struct _Ifx_CCU6_ACCEN0_Bits
{
    unsigned int EN0:1;
    unsigned int EN1:1;
    unsigned int EN2:1;
    unsigned int EN3:1;
    unsigned int EN4:1;
    unsigned int EN5:1;
    unsigned int EN6:1;
    unsigned int EN7:1;
    unsigned int EN8:1;
    unsigned int EN9:1;
    unsigned int EN10:1;
    unsigned int EN11:1;
    unsigned int EN12:1;
    unsigned int EN13:1;
    unsigned int EN14:1;
    unsigned int EN15:1;
    unsigned int EN16:1;
    unsigned int EN17:1;
    unsigned int EN18:1;
    unsigned int EN19:1;
    unsigned int EN20:1;
    unsigned int EN21:1;
    unsigned int EN22:1;
    unsigned int EN23:1;
    unsigned int EN24:1;
    unsigned int EN25:1;
    unsigned int EN26:1;
    unsigned int EN27:1;
    unsigned int EN28:1;
    unsigned int EN29:1;
    unsigned int EN30:1;
    unsigned int EN31:1;
} Ifx_CCU6_ACCEN0_Bits;


typedef struct _Ifx_CCU6_ACCEN1_Bits
{
    unsigned int reserved_0:32;
} Ifx_CCU6_ACCEN1_Bits;


typedef struct _Ifx_CCU6_CC60R_Bits
{
    unsigned int CCV:16;
    unsigned int reserved_16:16;
} Ifx_CCU6_CC60R_Bits;


typedef struct _Ifx_CCU6_CC60SR_Bits
{
    unsigned int CCS:16;
    unsigned int reserved_16:16;
} Ifx_CCU6_CC60SR_Bits;


typedef struct _Ifx_CCU6_CC61R_Bits
{
    unsigned int CCV:16;
    unsigned int reserved_16:16;
} Ifx_CCU6_CC61R_Bits;


typedef struct _Ifx_CCU6_CC61SR_Bits
{
    unsigned int CCS:16;
    unsigned int reserved_16:16;
} Ifx_CCU6_CC61SR_Bits;


typedef struct _Ifx_CCU6_CC62R_Bits
{
    unsigned int CCV:16;
    unsigned int reserved_16:16;
} Ifx_CCU6_CC62R_Bits;


typedef struct _Ifx_CCU6_CC62SR_Bits
{
    unsigned int CCS:16;
    unsigned int reserved_16:16;
} Ifx_CCU6_CC62SR_Bits;


typedef struct _Ifx_CCU6_CC63R_Bits
{
    unsigned int CCV:16;
    unsigned int reserved_16:16;
} Ifx_CCU6_CC63R_Bits;


typedef struct _Ifx_CCU6_CC63SR_Bits
{
    unsigned int CCS:16;
    unsigned int reserved_16:16;
} Ifx_CCU6_CC63SR_Bits;


typedef struct _Ifx_CCU6_CLC_Bits
{
    unsigned int DISR:1;
    unsigned int DISS:1;
    unsigned int reserved_2:1;
    unsigned int EDIS:1;
    unsigned int reserved_4:28;
} Ifx_CCU6_CLC_Bits;


typedef struct _Ifx_CCU6_CMPMODIF_Bits
{
    unsigned int MCC60S:1;
    unsigned int MCC61S:1;
    unsigned int MCC62S:1;
    unsigned int reserved_3:3;
    unsigned int MCC63S:1;
    unsigned int reserved_7:1;
    unsigned int MCC60R:1;
    unsigned int MCC61R:1;
    unsigned int MCC62R:1;
    unsigned int reserved_11:3;
    unsigned int MCC63R:1;
    unsigned int reserved_15:17;
} Ifx_CCU6_CMPMODIF_Bits;


typedef struct _Ifx_CCU6_CMPSTAT_Bits
{
    unsigned int CC60ST:1;
    unsigned int CC61ST:1;
    unsigned int CC62ST:1;
    unsigned int CCPOS60:1;
    unsigned int CCPOS61:1;
    unsigned int CCPOS62:1;
    unsigned int CC63ST:1;
    unsigned int reserved_7:1;
    unsigned int CC60PS:1;
    unsigned int COUT60PS:1;
    unsigned int CC61PS:1;
    unsigned int COUT61PS:1;
    unsigned int CC62PS:1;
    unsigned int COUT62PS:1;
    unsigned int COUT63PS:1;
    unsigned int T13IM:1;
    unsigned int reserved_16:16;
} Ifx_CCU6_CMPSTAT_Bits;


typedef struct _Ifx_CCU6_ID_Bits
{
    unsigned int MODREV:8;
    unsigned int MODNUMBER:8;
    unsigned int reserved_16:16;
} Ifx_CCU6_ID_Bits;


typedef struct _Ifx_CCU6_IEN_Bits
{
    unsigned int ENCC60R:1;
    unsigned int ENCC60F:1;
    unsigned int ENCC61R:1;
    unsigned int ENCC61F:1;
    unsigned int ENCC62R:1;
    unsigned int ENCC62F:1;
    unsigned int ENT12OM:1;
    unsigned int ENT12PM:1;
    unsigned int ENT13CM:1;
    unsigned int ENT13PM:1;
    unsigned int ENTRPF:1;
    unsigned int reserved_11:1;
    unsigned int ENCHE:1;
    unsigned int ENWHE:1;
    unsigned int ENIDLE:1;
    unsigned int ENSTR:1;
    unsigned int reserved_16:16;
} Ifx_CCU6_IEN_Bits;


typedef struct _Ifx_CCU6_IMON_Bits
{
    unsigned int LBE:1;
    unsigned int CCPOS0I:1;
    unsigned int CCPOS1I:1;
    unsigned int CCPOS2I:1;
    unsigned int CC60INI:1;
    unsigned int CC61INI:1;
    unsigned int CC62INI:1;
    unsigned int CTRAPI:1;
    unsigned int T12HRI:1;
    unsigned int T13HRI:1;
    unsigned int reserved_10:22;
} Ifx_CCU6_IMON_Bits;


typedef struct _Ifx_CCU6_INP_Bits
{
    unsigned int INPCC60:2;
    unsigned int INPCC61:2;
    unsigned int INPCC62:2;
    unsigned int INPCHE:2;
    unsigned int INPERR:2;
    unsigned int INPT12:2;
    unsigned int INPT13:2;
    unsigned int reserved_14:18;
} Ifx_CCU6_INP_Bits;


typedef struct _Ifx_CCU6_IS_Bits
{
    unsigned int ICC60R:1;
    unsigned int ICC60F:1;
    unsigned int ICC61R:1;
    unsigned int ICC61F:1;
    unsigned int ICC62R:1;
    unsigned int ICC62F:1;
    unsigned int T12OM:1;
    unsigned int T12PM:1;
    unsigned int T13CM:1;
    unsigned int T13PM:1;
    unsigned int TRPF:1;
    unsigned int TRPS:1;
    unsigned int CHE:1;
    unsigned int WHE:1;
    unsigned int IDLE:1;
    unsigned int STR:1;
    unsigned int reserved_16:16;
} Ifx_CCU6_IS_Bits;


typedef struct _Ifx_CCU6_ISR_Bits
{
    unsigned int RCC60R:1;
    unsigned int RCC60F:1;
    unsigned int RCC61R:1;
    unsigned int RCC61F:1;
    unsigned int RCC62R:1;
    unsigned int RCC62F:1;
    unsigned int RT12OM:1;
    unsigned int RT12PM:1;
    unsigned int RT13CM:1;
    unsigned int RT13PM:1;
    unsigned int RTRPF:1;
    unsigned int reserved_11:1;
    unsigned int RCHE:1;
    unsigned int RWHE:1;
    unsigned int RIDLE:1;
    unsigned int RSTR:1;
    unsigned int reserved_16:16;
} Ifx_CCU6_ISR_Bits;


typedef struct _Ifx_CCU6_ISS_Bits
{
    unsigned int SCC60R:1;
    unsigned int SCC60F:1;
    unsigned int SCC61R:1;
    unsigned int SCC61F:1;
    unsigned int SCC62R:1;
    unsigned int SCC62F:1;
    unsigned int ST12OM:1;
    unsigned int ST12PM:1;
    unsigned int ST13CM:1;
    unsigned int ST13PM:1;
    unsigned int STRPF:1;
    unsigned int SWHC:1;
    unsigned int SCHE:1;
    unsigned int SWHE:1;
    unsigned int SIDLE:1;
    unsigned int SSTR:1;
    unsigned int reserved_16:16;
} Ifx_CCU6_ISS_Bits;


typedef struct _Ifx_CCU6_KRST0_Bits
{
    unsigned int RST:1;
    unsigned int RSTSTAT:1;
    unsigned int reserved_2:30;
} Ifx_CCU6_KRST0_Bits;


typedef struct _Ifx_CCU6_KRST1_Bits
{
    unsigned int RST:1;
    unsigned int reserved_1:31;
} Ifx_CCU6_KRST1_Bits;


typedef struct _Ifx_CCU6_KRSTCLR_Bits
{
    unsigned int CLR:1;
    unsigned int reserved_1:31;
} Ifx_CCU6_KRSTCLR_Bits;


typedef struct _Ifx_CCU6_KSCSR_Bits
{
    unsigned int SB0:1;
    unsigned int SB1:1;
    unsigned int SB2:1;
    unsigned int SB3:1;
    unsigned int reserved_4:28;
} Ifx_CCU6_KSCSR_Bits;


typedef struct _Ifx_CCU6_LI_Bits
{
    unsigned int reserved_0:1;
    unsigned int CCPOS0EN:1;
    unsigned int CCPOS1EN:1;
    unsigned int CCPOS2EN:1;
    unsigned int CC60INEN:1;
    unsigned int CC61INEN:1;
    unsigned int CC62INEN:1;
    unsigned int CTRAPEN:1;
    unsigned int T12HREN:1;
    unsigned int T13HREN:1;
    unsigned int reserved_10:3;
    unsigned int LBEEN:1;
    unsigned int INPLBE:2;
    unsigned int reserved_16:16;
} Ifx_CCU6_LI_Bits;


typedef struct _Ifx_CCU6_MCFG_Bits
{
    unsigned int T12:1;
    unsigned int T13:1;
    unsigned int MCM:1;
    unsigned int reserved_3:29;
} Ifx_CCU6_MCFG_Bits;


typedef struct _Ifx_CCU6_MCMCTR_Bits
{
    unsigned int SWSEL:3;
    unsigned int reserved_3:1;
    unsigned int SWSYN:2;
    unsigned int reserved_6:2;
    unsigned int STE12U:1;
    unsigned int STE12D:1;
    unsigned int STE13U:1;
    unsigned int reserved_11:21;
} Ifx_CCU6_MCMCTR_Bits;


typedef struct _Ifx_CCU6_MCMOUT_Bits
{
    unsigned int MCMP:6;
    unsigned int R:1;
    unsigned int reserved_7:1;
    unsigned int EXPH:3;
    unsigned int CURH:3;
    unsigned int reserved_14:18;
} Ifx_CCU6_MCMOUT_Bits;


typedef struct _Ifx_CCU6_MCMOUTS_Bits
{
    unsigned int MCMPS:6;
    unsigned int reserved_6:1;
    unsigned int STRMCM:1;
    unsigned int EXPHS:3;
    unsigned int CURHS:3;
    unsigned int reserved_14:1;
    unsigned int STRHP:1;
    unsigned int reserved_16:16;
} Ifx_CCU6_MCMOUTS_Bits;


typedef struct _Ifx_CCU6_MODCTR_Bits
{
    unsigned int T12MODEN:6;
    unsigned int reserved_6:1;
    unsigned int MCMEN:1;
    unsigned int T13MODEN:6;
    unsigned int reserved_14:1;
    unsigned int ECT13O:1;
    unsigned int reserved_16:16;
} Ifx_CCU6_MODCTR_Bits;


typedef struct _Ifx_CCU6_MOSEL_Bits
{
    unsigned int TRIG0SEL:3;
    unsigned int TRIG1SEL:3;
    unsigned int TRIG2SEL:3;
    unsigned int reserved_9:23;
} Ifx_CCU6_MOSEL_Bits;


typedef struct _Ifx_CCU6_OCS_Bits
{
    unsigned int TGS:2;
    unsigned int TGB:1;
    unsigned int TG_P:1;
    unsigned int reserved_4:20;
    unsigned int SUS:4;
    unsigned int SUS_P:1;
    unsigned int SUSSTA:1;
    unsigned int reserved_30:2;
} Ifx_CCU6_OCS_Bits;


typedef struct _Ifx_CCU6_PISEL0_Bits
{
    unsigned int ISCC60:2;
    unsigned int ISCC61:2;
    unsigned int ISCC62:2;
    unsigned int ISTRP:2;
    unsigned int ISPOS0:2;
    unsigned int ISPOS1:2;
    unsigned int ISPOS2:2;
    unsigned int IST12HR:2;
    unsigned int reserved_16:16;
} Ifx_CCU6_PISEL0_Bits;


typedef struct _Ifx_CCU6_PISEL2_Bits
{
    unsigned int IST13HR:2;
    unsigned int ISCNT12:2;
    unsigned int ISCNT13:2;
    unsigned int T12EXT:1;
    unsigned int T13EXT:1;
    unsigned int reserved_8:24;
} Ifx_CCU6_PISEL2_Bits;


typedef struct _Ifx_CCU6_PSLR_Bits
{
    unsigned int PSL:6;
    unsigned int reserved_6:1;
    unsigned int PSL63:1;
    unsigned int reserved_8:24;
} Ifx_CCU6_PSLR_Bits;


typedef struct _Ifx_CCU6_T12_Bits
{
    unsigned int T12CV:16;
    unsigned int reserved_16:16;
} Ifx_CCU6_T12_Bits;


typedef struct _Ifx_CCU6_T12DTC_Bits
{
    unsigned int DTM:8;
    unsigned int DTE0:1;
    unsigned int DTE1:1;
    unsigned int DTE2:1;
    unsigned int reserved_11:1;
    unsigned int DTR0:1;
    unsigned int DTR1:1;
    unsigned int DTR2:1;
    unsigned int reserved_15:17;
} Ifx_CCU6_T12DTC_Bits;


typedef struct _Ifx_CCU6_T12MSEL_Bits
{
    unsigned int MSEL60:4;
    unsigned int MSEL61:4;
    unsigned int MSEL62:4;
    unsigned int HSYNC:3;
    unsigned int DBYP:1;
    unsigned int reserved_16:16;
} Ifx_CCU6_T12MSEL_Bits;


typedef struct _Ifx_CCU6_T12PR_Bits
{
    unsigned int T12PV:16;
    unsigned int reserved_16:16;
} Ifx_CCU6_T12PR_Bits;


typedef struct _Ifx_CCU6_T13_Bits
{
    unsigned int T13CV:16;
    unsigned int reserved_16:16;
} Ifx_CCU6_T13_Bits;


typedef struct _Ifx_CCU6_T13PR_Bits
{
    unsigned int T13PV:16;
    unsigned int reserved_16:16;
} Ifx_CCU6_T13PR_Bits;


typedef struct _Ifx_CCU6_TCTR0_Bits
{
    unsigned int T12CLK:3;
    unsigned int T12PRE:1;
    unsigned int T12R:1;
    unsigned int STE12:1;
    unsigned int CDIR:1;
    unsigned int CTM:1;
    unsigned int T13CLK:3;
    unsigned int T13PRE:1;
    unsigned int T13R:1;
    unsigned int STE13:1;
    unsigned int reserved_14:18;
} Ifx_CCU6_TCTR0_Bits;


typedef struct _Ifx_CCU6_TCTR2_Bits
{
    unsigned int T12SSC:1;
    unsigned int T13SSC:1;
    unsigned int T13TEC:3;
    unsigned int T13TED:2;
    unsigned int reserved_7:1;
    unsigned int T12RSEL:2;
    unsigned int T13RSEL:2;
    unsigned int reserved_12:20;
} Ifx_CCU6_TCTR2_Bits;


typedef struct _Ifx_CCU6_TCTR4_Bits
{
    unsigned int T12RR:1;
    unsigned int T12RS:1;
    unsigned int T12RES:1;
    unsigned int DTRES:1;
    unsigned int reserved_4:1;
    unsigned int T12CNT:1;
    unsigned int T12STR:1;
    unsigned int T12STD:1;
    unsigned int T13RR:1;
    unsigned int T13RS:1;
    unsigned int T13RES:1;
    unsigned int reserved_11:2;
    unsigned int T13CNT:1;
    unsigned int T13STR:1;
    unsigned int T13STD:1;
    unsigned int reserved_16:16;
} Ifx_CCU6_TCTR4_Bits;


typedef struct _Ifx_CCU6_TRPCTR_Bits
{
    unsigned int TRPM0:1;
    unsigned int TRPM1:1;
    unsigned int TRPM2:1;
    unsigned int reserved_3:5;
    unsigned int TRPEN:6;
    unsigned int TRPEN13:1;
    unsigned int TRPPEN:1;
    unsigned int reserved_16:16;
} Ifx_CCU6_TRPCTR_Bits;







typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CCU6_ACCEN0_Bits B;
} Ifx_CCU6_ACCEN0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CCU6_ACCEN1_Bits B;
} Ifx_CCU6_ACCEN1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CCU6_CC60R_Bits B;
} Ifx_CCU6_CC60R;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CCU6_CC60SR_Bits B;
} Ifx_CCU6_CC60SR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CCU6_CC61R_Bits B;
} Ifx_CCU6_CC61R;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CCU6_CC61SR_Bits B;
} Ifx_CCU6_CC61SR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CCU6_CC62R_Bits B;
} Ifx_CCU6_CC62R;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CCU6_CC62SR_Bits B;
} Ifx_CCU6_CC62SR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CCU6_CC63R_Bits B;
} Ifx_CCU6_CC63R;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CCU6_CC63SR_Bits B;
} Ifx_CCU6_CC63SR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CCU6_CLC_Bits B;
} Ifx_CCU6_CLC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CCU6_CMPMODIF_Bits B;
} Ifx_CCU6_CMPMODIF;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CCU6_CMPSTAT_Bits B;
} Ifx_CCU6_CMPSTAT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CCU6_ID_Bits B;
} Ifx_CCU6_ID;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CCU6_IEN_Bits B;
} Ifx_CCU6_IEN;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CCU6_IMON_Bits B;
} Ifx_CCU6_IMON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CCU6_INP_Bits B;
} Ifx_CCU6_INP;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CCU6_IS_Bits B;
} Ifx_CCU6_IS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CCU6_ISR_Bits B;
} Ifx_CCU6_ISR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CCU6_ISS_Bits B;
} Ifx_CCU6_ISS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CCU6_KRST0_Bits B;
} Ifx_CCU6_KRST0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CCU6_KRST1_Bits B;
} Ifx_CCU6_KRST1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CCU6_KRSTCLR_Bits B;
} Ifx_CCU6_KRSTCLR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CCU6_KSCSR_Bits B;
} Ifx_CCU6_KSCSR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CCU6_LI_Bits B;
} Ifx_CCU6_LI;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CCU6_MCFG_Bits B;
} Ifx_CCU6_MCFG;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CCU6_MCMCTR_Bits B;
} Ifx_CCU6_MCMCTR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CCU6_MCMOUT_Bits B;
} Ifx_CCU6_MCMOUT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CCU6_MCMOUTS_Bits B;
} Ifx_CCU6_MCMOUTS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CCU6_MODCTR_Bits B;
} Ifx_CCU6_MODCTR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CCU6_MOSEL_Bits B;
} Ifx_CCU6_MOSEL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CCU6_OCS_Bits B;
} Ifx_CCU6_OCS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CCU6_PISEL0_Bits B;
} Ifx_CCU6_PISEL0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CCU6_PISEL2_Bits B;
} Ifx_CCU6_PISEL2;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CCU6_PSLR_Bits B;
} Ifx_CCU6_PSLR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CCU6_T12_Bits B;
} Ifx_CCU6_T12;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CCU6_T12DTC_Bits B;
} Ifx_CCU6_T12DTC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CCU6_T12MSEL_Bits B;
} Ifx_CCU6_T12MSEL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CCU6_T12PR_Bits B;
} Ifx_CCU6_T12PR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CCU6_T13_Bits B;
} Ifx_CCU6_T13;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CCU6_T13PR_Bits B;
} Ifx_CCU6_T13PR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CCU6_TCTR0_Bits B;
} Ifx_CCU6_TCTR0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CCU6_TCTR2_Bits B;
} Ifx_CCU6_TCTR2;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CCU6_TCTR4_Bits B;
} Ifx_CCU6_TCTR4;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CCU6_TRPCTR_Bits B;
} Ifx_CCU6_TRPCTR;
# 972 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCcu6_regdef.h" 3
typedef volatile struct _Ifx_CCU6
{
    Ifx_CCU6_CLC CLC;
    Ifx_CCU6_MCFG MCFG;
    Ifx_CCU6_ID ID;
    Ifx_CCU6_MOSEL MOSEL;
    Ifx_CCU6_PISEL0 PISEL0;
    Ifx_CCU6_PISEL2 PISEL2;
    unsigned char reserved_18[4];
    Ifx_CCU6_KSCSR KSCSR;
    Ifx_CCU6_T12 T12;
    Ifx_CCU6_T12PR T12PR;
    Ifx_CCU6_T12DTC T12DTC;
    unsigned char reserved_2C[4];
    Ifx_CCU6_CC60R CC60R;
    Ifx_CCU6_CC61R CC61R;
    Ifx_CCU6_CC62R CC62R;
    unsigned char reserved_3C[4];
    Ifx_CCU6_CC60SR CC60SR;
    Ifx_CCU6_CC61SR CC61SR;
    Ifx_CCU6_CC62SR CC62SR;
    unsigned char reserved_4C[4];
    Ifx_CCU6_T13 T13;
    Ifx_CCU6_T13PR T13PR;
    Ifx_CCU6_CC63R CC63R;
    Ifx_CCU6_CC63SR CC63SR;
    Ifx_CCU6_CMPSTAT CMPSTAT;
    Ifx_CCU6_CMPMODIF CMPMODIF;
    Ifx_CCU6_T12MSEL T12MSEL;
    unsigned char reserved_6C[4];
    Ifx_CCU6_TCTR0 TCTR0;
    Ifx_CCU6_TCTR2 TCTR2;
    Ifx_CCU6_TCTR4 TCTR4;
    unsigned char reserved_7C[4];
    Ifx_CCU6_MODCTR MODCTR;
    Ifx_CCU6_TRPCTR TRPCTR;
    Ifx_CCU6_PSLR PSLR;
    Ifx_CCU6_MCMOUTS MCMOUTS;
    Ifx_CCU6_MCMOUT MCMOUT;
    Ifx_CCU6_MCMCTR MCMCTR;
    Ifx_CCU6_IMON IMON;
    Ifx_CCU6_LI LI;
    Ifx_CCU6_IS IS;
    Ifx_CCU6_ISS ISS;
    Ifx_CCU6_ISR ISR;
    Ifx_CCU6_INP INP;
    Ifx_CCU6_IEN IEN;
    unsigned char reserved_B4[52];
    Ifx_CCU6_OCS OCS;
    Ifx_CCU6_KRSTCLR KRSTCLR;
    Ifx_CCU6_KRST1 KRST1;
    Ifx_CCU6_KRST0 KRST0;
    Ifx_CCU6_ACCEN1 ACCEN1;
    Ifx_CCU6_ACCEN0 ACCEN0;
} Ifx_CCU6;
# 40 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCcu6_reg.h" 2 3





#define MODULE_CCU60 (*(Ifx_CCU6*)0xF0002A00u)


#define MODULE_CCU61 (*(Ifx_CCU6*)0xF0002B00u)







#define CCU60_ACCEN0 (*(volatile Ifx_CCU6_ACCEN0*)0xF0002AFCu)


#define CCU60_ACCEN1 (*(volatile Ifx_CCU6_ACCEN1*)0xF0002AF8u)


#define CCU60_CC60R (*(volatile Ifx_CCU6_CC60R*)0xF0002A30u)


#define CCU60_CC60SR (*(volatile Ifx_CCU6_CC60SR*)0xF0002A40u)


#define CCU60_CC61R (*(volatile Ifx_CCU6_CC61R*)0xF0002A34u)


#define CCU60_CC61SR (*(volatile Ifx_CCU6_CC61SR*)0xF0002A44u)


#define CCU60_CC62R (*(volatile Ifx_CCU6_CC62R*)0xF0002A38u)


#define CCU60_CC62SR (*(volatile Ifx_CCU6_CC62SR*)0xF0002A48u)


#define CCU60_CC63R (*(volatile Ifx_CCU6_CC63R*)0xF0002A58u)


#define CCU60_CC63SR (*(volatile Ifx_CCU6_CC63SR*)0xF0002A5Cu)


#define CCU60_CLC (*(volatile Ifx_CCU6_CLC*)0xF0002A00u)


#define CCU60_CMPMODIF (*(volatile Ifx_CCU6_CMPMODIF*)0xF0002A64u)


#define CCU60_CMPSTAT (*(volatile Ifx_CCU6_CMPSTAT*)0xF0002A60u)


#define CCU60_ID (*(volatile Ifx_CCU6_ID*)0xF0002A08u)


#define CCU60_IEN (*(volatile Ifx_CCU6_IEN*)0xF0002AB0u)


#define CCU60_IMON (*(volatile Ifx_CCU6_IMON*)0xF0002A98u)


#define CCU60_INP (*(volatile Ifx_CCU6_INP*)0xF0002AACu)


#define CCU60_IS (*(volatile Ifx_CCU6_IS*)0xF0002AA0u)


#define CCU60_ISR (*(volatile Ifx_CCU6_ISR*)0xF0002AA8u)


#define CCU60_ISS (*(volatile Ifx_CCU6_ISS*)0xF0002AA4u)


#define CCU60_KRST0 (*(volatile Ifx_CCU6_KRST0*)0xF0002AF4u)


#define CCU60_KRST1 (*(volatile Ifx_CCU6_KRST1*)0xF0002AF0u)


#define CCU60_KRSTCLR (*(volatile Ifx_CCU6_KRSTCLR*)0xF0002AECu)


#define CCU60_KSCSR (*(volatile Ifx_CCU6_KSCSR*)0xF0002A1Cu)


#define CCU60_LI (*(volatile Ifx_CCU6_LI*)0xF0002A9Cu)


#define CCU60_MCFG (*(volatile Ifx_CCU6_MCFG*)0xF0002A04u)


#define CCU60_MCMCTR (*(volatile Ifx_CCU6_MCMCTR*)0xF0002A94u)


#define CCU60_MCMOUT (*(volatile Ifx_CCU6_MCMOUT*)0xF0002A90u)


#define CCU60_MCMOUTS (*(volatile Ifx_CCU6_MCMOUTS*)0xF0002A8Cu)


#define CCU60_MODCTR (*(volatile Ifx_CCU6_MODCTR*)0xF0002A80u)


#define CCU60_MOSEL (*(volatile Ifx_CCU6_MOSEL*)0xF0002A0Cu)


#define CCU60_OCS (*(volatile Ifx_CCU6_OCS*)0xF0002AE8u)


#define CCU60_PISEL0 (*(volatile Ifx_CCU6_PISEL0*)0xF0002A10u)


#define CCU60_PISEL2 (*(volatile Ifx_CCU6_PISEL2*)0xF0002A14u)


#define CCU60_PSLR (*(volatile Ifx_CCU6_PSLR*)0xF0002A88u)


#define CCU60_T12 (*(volatile Ifx_CCU6_T12*)0xF0002A20u)


#define CCU60_T12DTC (*(volatile Ifx_CCU6_T12DTC*)0xF0002A28u)


#define CCU60_T12MSEL (*(volatile Ifx_CCU6_T12MSEL*)0xF0002A68u)


#define CCU60_T12PR (*(volatile Ifx_CCU6_T12PR*)0xF0002A24u)


#define CCU60_T13 (*(volatile Ifx_CCU6_T13*)0xF0002A50u)


#define CCU60_T13PR (*(volatile Ifx_CCU6_T13PR*)0xF0002A54u)


#define CCU60_TCTR0 (*(volatile Ifx_CCU6_TCTR0*)0xF0002A70u)


#define CCU60_TCTR2 (*(volatile Ifx_CCU6_TCTR2*)0xF0002A74u)


#define CCU60_TCTR4 (*(volatile Ifx_CCU6_TCTR4*)0xF0002A78u)


#define CCU60_TRPCTR (*(volatile Ifx_CCU6_TRPCTR*)0xF0002A84u)







#define CCU61_ACCEN0 (*(volatile Ifx_CCU6_ACCEN0*)0xF0002BFCu)


#define CCU61_ACCEN1 (*(volatile Ifx_CCU6_ACCEN1*)0xF0002BF8u)


#define CCU61_CC60R (*(volatile Ifx_CCU6_CC60R*)0xF0002B30u)


#define CCU61_CC60SR (*(volatile Ifx_CCU6_CC60SR*)0xF0002B40u)


#define CCU61_CC61R (*(volatile Ifx_CCU6_CC61R*)0xF0002B34u)


#define CCU61_CC61SR (*(volatile Ifx_CCU6_CC61SR*)0xF0002B44u)


#define CCU61_CC62R (*(volatile Ifx_CCU6_CC62R*)0xF0002B38u)


#define CCU61_CC62SR (*(volatile Ifx_CCU6_CC62SR*)0xF0002B48u)


#define CCU61_CC63R (*(volatile Ifx_CCU6_CC63R*)0xF0002B58u)


#define CCU61_CC63SR (*(volatile Ifx_CCU6_CC63SR*)0xF0002B5Cu)


#define CCU61_CLC (*(volatile Ifx_CCU6_CLC*)0xF0002B00u)


#define CCU61_CMPMODIF (*(volatile Ifx_CCU6_CMPMODIF*)0xF0002B64u)


#define CCU61_CMPSTAT (*(volatile Ifx_CCU6_CMPSTAT*)0xF0002B60u)


#define CCU61_ID (*(volatile Ifx_CCU6_ID*)0xF0002B08u)


#define CCU61_IEN (*(volatile Ifx_CCU6_IEN*)0xF0002BB0u)


#define CCU61_IMON (*(volatile Ifx_CCU6_IMON*)0xF0002B98u)


#define CCU61_INP (*(volatile Ifx_CCU6_INP*)0xF0002BACu)


#define CCU61_IS (*(volatile Ifx_CCU6_IS*)0xF0002BA0u)


#define CCU61_ISR (*(volatile Ifx_CCU6_ISR*)0xF0002BA8u)


#define CCU61_ISS (*(volatile Ifx_CCU6_ISS*)0xF0002BA4u)


#define CCU61_KRST0 (*(volatile Ifx_CCU6_KRST0*)0xF0002BF4u)


#define CCU61_KRST1 (*(volatile Ifx_CCU6_KRST1*)0xF0002BF0u)


#define CCU61_KRSTCLR (*(volatile Ifx_CCU6_KRSTCLR*)0xF0002BECu)


#define CCU61_KSCSR (*(volatile Ifx_CCU6_KSCSR*)0xF0002B1Cu)


#define CCU61_LI (*(volatile Ifx_CCU6_LI*)0xF0002B9Cu)


#define CCU61_MCFG (*(volatile Ifx_CCU6_MCFG*)0xF0002B04u)


#define CCU61_MCMCTR (*(volatile Ifx_CCU6_MCMCTR*)0xF0002B94u)


#define CCU61_MCMOUT (*(volatile Ifx_CCU6_MCMOUT*)0xF0002B90u)


#define CCU61_MCMOUTS (*(volatile Ifx_CCU6_MCMOUTS*)0xF0002B8Cu)


#define CCU61_MODCTR (*(volatile Ifx_CCU6_MODCTR*)0xF0002B80u)


#define CCU61_OCS (*(volatile Ifx_CCU6_OCS*)0xF0002BE8u)


#define CCU61_PISEL0 (*(volatile Ifx_CCU6_PISEL0*)0xF0002B10u)


#define CCU61_PISEL2 (*(volatile Ifx_CCU6_PISEL2*)0xF0002B14u)


#define CCU61_PSLR (*(volatile Ifx_CCU6_PSLR*)0xF0002B88u)


#define CCU61_T12 (*(volatile Ifx_CCU6_T12*)0xF0002B20u)


#define CCU61_T12DTC (*(volatile Ifx_CCU6_T12DTC*)0xF0002B28u)


#define CCU61_T12MSEL (*(volatile Ifx_CCU6_T12MSEL*)0xF0002B68u)


#define CCU61_T12PR (*(volatile Ifx_CCU6_T12PR*)0xF0002B24u)


#define CCU61_T13 (*(volatile Ifx_CCU6_T13*)0xF0002B50u)


#define CCU61_T13PR (*(volatile Ifx_CCU6_T13PR*)0xF0002B54u)


#define CCU61_TCTR0 (*(volatile Ifx_CCU6_TCTR0*)0xF0002B70u)


#define CCU61_TCTR2 (*(volatile Ifx_CCU6_TCTR2*)0xF0002B74u)


#define CCU61_TCTR4 (*(volatile Ifx_CCU6_TCTR4*)0xF0002B78u)


#define CCU61_TRPCTR (*(volatile Ifx_CCU6_TRPCTR*)0xF0002B84u)
# 32 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_reg.h" 2 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCif_reg.h" 1 3
# 34 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCif_reg.h" 3
#define IFXCIF_REG_H 1

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCif_regdef.h" 1 3
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCif_regdef.h" 3
#define IFXCIF_REGDEF_H 1







typedef struct _Ifx_CIF_BBB_ACCEN0_Bits
{
    volatile unsigned int EN0:1;
    volatile unsigned int EN1:1;
    volatile unsigned int EN2:1;
    volatile unsigned int EN3:1;
    volatile unsigned int EN4:1;
    volatile unsigned int EN5:1;
    volatile unsigned int EN6:1;
    volatile unsigned int EN7:1;
    volatile unsigned int EN8:1;
    volatile unsigned int EN9:1;
    volatile unsigned int EN10:1;
    volatile unsigned int EN11:1;
    volatile unsigned int EN12:1;
    volatile unsigned int EN13:1;
    volatile unsigned int EN14:1;
    volatile unsigned int EN15:1;
    volatile unsigned int EN16:1;
    volatile unsigned int EN17:1;
    volatile unsigned int EN18:1;
    volatile unsigned int EN19:1;
    volatile unsigned int EN20:1;
    volatile unsigned int EN21:1;
    volatile unsigned int EN22:1;
    volatile unsigned int EN23:1;
    volatile unsigned int EN24:1;
    volatile unsigned int EN25:1;
    volatile unsigned int EN26:1;
    volatile unsigned int EN27:1;
    volatile unsigned int EN28:1;
    volatile unsigned int EN29:1;
    volatile unsigned int EN30:1;
    volatile unsigned int EN31:1;
} Ifx_CIF_BBB_ACCEN0_Bits;


typedef struct _Ifx_CIF_BBB_ACCEN1_Bits
{
    volatile unsigned int reserved_0:32;
} Ifx_CIF_BBB_ACCEN1_Bits;


typedef struct _Ifx_CIF_BBB_CLC_Bits
{
    volatile unsigned int DISR:1;
    volatile unsigned int DISS:1;
    volatile unsigned int reserved_2:30;
} Ifx_CIF_BBB_CLC_Bits;


typedef struct _Ifx_CIF_BBB_GPCTL_Bits
{
    volatile unsigned int PISEL:1;
    volatile unsigned int reserved_1:31;
} Ifx_CIF_BBB_GPCTL_Bits;


typedef struct _Ifx_CIF_BBB_KRST0_Bits
{
    volatile unsigned int RST:1;
    volatile unsigned int RSTSTAT:1;
    volatile unsigned int reserved_2:30;
} Ifx_CIF_BBB_KRST0_Bits;


typedef struct _Ifx_CIF_BBB_KRST1_Bits
{
    volatile unsigned int RST:1;
    volatile unsigned int reserved_1:31;
} Ifx_CIF_BBB_KRST1_Bits;


typedef struct _Ifx_CIF_BBB_KRSTCLR_Bits
{
    volatile unsigned int CLR:1;
    volatile unsigned int reserved_1:31;
} Ifx_CIF_BBB_KRSTCLR_Bits;


typedef struct _Ifx_CIF_BBB_MODID_Bits
{
    volatile unsigned int MOD_REV:8;
    volatile unsigned int MOD_TYPE:8;
    volatile unsigned int MODNUMBER:16;
} Ifx_CIF_BBB_MODID_Bits;


typedef struct _Ifx_CIF_CCL_Bits
{
    volatile unsigned int reserved_0:1;
    volatile unsigned int CIF_CCLDISS:1;
    volatile unsigned int CIF_CCLFDIS:1;
    volatile unsigned int reserved_3:29;
} Ifx_CIF_CCL_Bits;


typedef struct _Ifx_CIF_DP_CTRL_Bits
{
    volatile unsigned int DP_EN:1;
    volatile unsigned int DP_SEL:3;
    volatile unsigned int reserved_4:4;
    volatile unsigned int RST_FNC:1;
    volatile unsigned int RST_LNC:1;
    volatile unsigned int RST_TSC:1;
    volatile unsigned int RST_PD:1;
    volatile unsigned int reserved_12:1;
    volatile unsigned int FNC_EN:1;
    volatile unsigned int LNC_EN:1;
    volatile unsigned int TSC_EN:1;
    volatile unsigned int UDS1:1;
    volatile unsigned int UDS2:1;
    volatile unsigned int UDS3:1;
    volatile unsigned int UDS4:1;
    volatile unsigned int UDS5:1;
    volatile unsigned int UDS6:1;
    volatile unsigned int UDS7:1;
    volatile unsigned int UDS8:1;
    volatile unsigned int reserved_24:8;
} Ifx_CIF_DP_CTRL_Bits;


typedef struct _Ifx_CIF_DP_FLC_STAT_Bits
{
    volatile unsigned int FNC_VAL:15;
    volatile unsigned int reserved_15:1;
    volatile unsigned int LNC_VAL:15;
    volatile unsigned int reserved_31:1;
} Ifx_CIF_DP_FLC_STAT_Bits;


typedef struct _Ifx_CIF_DP_PDIV_CTRL_Bits
{
    volatile unsigned int PDIV_VAL:32;
} Ifx_CIF_DP_PDIV_CTRL_Bits;


typedef struct _Ifx_CIF_DP_PDIV_STAT_Bits
{
    volatile unsigned int PDIV_VAL:32;
} Ifx_CIF_DP_PDIV_STAT_Bits;


typedef struct _Ifx_CIF_DP_TSC_STAT_Bits
{
    volatile unsigned int TSC_VAL:30;
    volatile unsigned int reserved_30:2;
} Ifx_CIF_DP_TSC_STAT_Bits;


typedef struct _Ifx_CIF_DP_UDS_Bits
{
    volatile unsigned int UDS:15;
    volatile unsigned int reserved_15:17;
} Ifx_CIF_DP_UDS_Bits;


typedef struct _Ifx_CIF_DPCL_Bits
{
    volatile unsigned int CIF_MP_MUX:2;
    volatile unsigned int CIF_CHAN_MODE:2;
    volatile unsigned int reserved_4:4;
    volatile unsigned int IF_SELECT:2;
    volatile unsigned int reserved_10:22;
} Ifx_CIF_DPCL_Bits;


typedef struct _Ifx_CIF_EP_IC_CTRL_Bits
{
    volatile unsigned int IC_EN:1;
    volatile unsigned int reserved_1:31;
} Ifx_CIF_EP_IC_CTRL_Bits;


typedef struct _Ifx_CIF_EP_IC_DISPLACE_Bits
{
    volatile unsigned int DX:12;
    volatile unsigned int reserved_12:4;
    volatile unsigned int DY:12;
    volatile unsigned int reserved_28:4;
} Ifx_CIF_EP_IC_DISPLACE_Bits;



typedef struct _Ifx_CIF_EP_IC_H_OFFS_Bits
{
    volatile unsigned int H_OFFS:12;
    volatile unsigned int reserved_12:20;
} Ifx_CIF_EP_IC_H_OFFS_Bits;



typedef struct _Ifx_CIF_EP_IC_H_OFFS_SHD_Bits
{
    volatile unsigned int H_OFFS_SHD:13;
    volatile unsigned int reserved_13:19;
} Ifx_CIF_EP_IC_H_OFFS_SHD_Bits;


typedef struct _Ifx_CIF_EP_IC_H_SIZE_Bits
{
    volatile unsigned int H_SIZE:12;
    volatile unsigned int reserved_12:20;
} Ifx_CIF_EP_IC_H_SIZE_Bits;



typedef struct _Ifx_CIF_EP_IC_H_SIZE_SHD_Bits
{
    volatile unsigned int H_SIZE_SHD:13;
    volatile unsigned int reserved_13:19;
} Ifx_CIF_EP_IC_H_SIZE_SHD_Bits;


typedef struct _Ifx_CIF_EP_IC_MAX_DX_Bits
{
    volatile unsigned int MAX_DX:12;
    volatile unsigned int reserved_12:20;
} Ifx_CIF_EP_IC_MAX_DX_Bits;


typedef struct _Ifx_CIF_EP_IC_MAX_DY_Bits
{
    volatile unsigned int MAX_DY:12;
    volatile unsigned int reserved_12:20;
} Ifx_CIF_EP_IC_MAX_DY_Bits;


typedef struct _Ifx_CIF_EP_IC_RECENTER_Bits
{
    volatile unsigned int RECENTER:3;
    volatile unsigned int reserved_3:29;
} Ifx_CIF_EP_IC_RECENTER_Bits;


typedef struct _Ifx_CIF_EP_IC_V_OFFS_Bits
{
    volatile unsigned int V_OFFS:12;
    volatile unsigned int reserved_12:20;
} Ifx_CIF_EP_IC_V_OFFS_Bits;



typedef struct _Ifx_CIF_EP_IC_V_OFFS_SHD_Bits
{
    volatile unsigned int V_OFFS_SHD:12;
    volatile unsigned int reserved_12:20;
} Ifx_CIF_EP_IC_V_OFFS_SHD_Bits;


typedef struct _Ifx_CIF_EP_IC_V_SIZE_Bits
{
    volatile unsigned int V_SIZE:12;
    volatile unsigned int reserved_12:20;
} Ifx_CIF_EP_IC_V_SIZE_Bits;



typedef struct _Ifx_CIF_EP_IC_V_SIZE_SHD_Bits
{
    volatile unsigned int V_SIZE_SHD:12;
    volatile unsigned int reserved_12:20;
} Ifx_CIF_EP_IC_V_SIZE_SHD_Bits;


typedef struct _Ifx_CIF_ICCL_Bits
{
    volatile unsigned int CIF_ISP_CLK_ENABLE:1;
    volatile unsigned int reserved_1:4;
    volatile unsigned int CIF_JPEG_CLK_ENABLE:1;
    volatile unsigned int CIF_MI_CLK_ENABLE:1;
    volatile unsigned int reserved_7:9;
    volatile unsigned int CIF_WATCHDOG_CLK_ENABLE:1;
    volatile unsigned int CIF_LIN_DSCALER_CLK_ENABLE:1;
    volatile unsigned int CIF_EXTRA_PATHS_CLK_ENABLE:1;
    volatile unsigned int CIF_DEBUG_PATH_CLK_EN:1;
    volatile unsigned int reserved_20:12;
} Ifx_CIF_ICCL_Bits;


typedef struct _Ifx_CIF_ID_Bits
{
    volatile unsigned int MODREV:8;
    volatile unsigned int MODTYPE:8;
    volatile unsigned int MODNUMBER:16;
} Ifx_CIF_ID_Bits;


typedef struct _Ifx_CIF_IRCL_Bits
{
    volatile unsigned int CIF_ISP_SOFT_RST:1;
    volatile unsigned int reserved_1:1;
    volatile unsigned int CIF_YCS_SOFT_RST:1;
    volatile unsigned int reserved_3:2;
    volatile unsigned int CIF_JPEG_SOFT_RST:1;
    volatile unsigned int CIF_MI_SOFT_RST:1;
    volatile unsigned int CIF_GLOBAL_RST:1;
    volatile unsigned int reserved_8:8;
    volatile unsigned int CIF_WATCHDOG_RST:1;
    volatile unsigned int CIF_LIN_DSCALER_RST:1;
    volatile unsigned int CIF_EXTRA_PATHS_RST:1;
    volatile unsigned int CIF_DEBUG_PATH_RST:1;
    volatile unsigned int reserved_20:12;
} Ifx_CIF_IRCL_Bits;


typedef struct _Ifx_CIF_ISP_ACQ_H_OFFS_Bits
{
    volatile unsigned int ACQ_H_OFFS:13;
    volatile unsigned int reserved_13:19;
} Ifx_CIF_ISP_ACQ_H_OFFS_Bits;


typedef struct _Ifx_CIF_ISP_ACQ_H_SIZE_Bits
{
    volatile unsigned int ACQ_H_SIZE:13;
    volatile unsigned int reserved_13:19;
} Ifx_CIF_ISP_ACQ_H_SIZE_Bits;


typedef struct _Ifx_CIF_ISP_ACQ_NR_FRAMES_Bits
{
    volatile unsigned int ACQ_NR_FRAMES:10;
    volatile unsigned int reserved_10:22;
} Ifx_CIF_ISP_ACQ_NR_FRAMES_Bits;


typedef struct _Ifx_CIF_ISP_ACQ_PROP_Bits
{
    volatile unsigned int SAMPLE_EDGE:1;
    volatile unsigned int HSYNC_POL:1;
    volatile unsigned int VSYNC_POL:1;
    volatile unsigned int reserved_3:4;
    volatile unsigned int CCIR_SEQ:2;
    volatile unsigned int FIELD_SELECTION:2;
    volatile unsigned int FIELD_INVERT:1;
    volatile unsigned int INPUT_SELECTION:4;
    volatile unsigned int reserved_16:4;
    volatile unsigned int INPUT_SELECTION_NO_APP:1;
    volatile unsigned int reserved_21:11;
} Ifx_CIF_ISP_ACQ_PROP_Bits;


typedef struct _Ifx_CIF_ISP_ACQ_V_OFFS_Bits
{
    volatile unsigned int ACQ_V_OFFS:12;
    volatile unsigned int reserved_12:20;
} Ifx_CIF_ISP_ACQ_V_OFFS_Bits;


typedef struct _Ifx_CIF_ISP_ACQ_V_SIZE_Bits
{
    volatile unsigned int ACQ_V_SIZE:12;
    volatile unsigned int reserved_12:20;
} Ifx_CIF_ISP_ACQ_V_SIZE_Bits;


typedef struct _Ifx_CIF_ISP_CTRL_Bits
{
    volatile unsigned int ISP_ENABLE:1;
    volatile unsigned int ISP_MODE:3;
    volatile unsigned int ISP_INFORM_ENABLE:1;
    volatile unsigned int reserved_5:4;
    volatile unsigned int ISP_CFG_UPD:1;
    volatile unsigned int ISP_GEN_CFG_UPD:1;
    volatile unsigned int reserved_11:2;
    volatile unsigned int ISP_CSM_Y_RANGE:1;
    volatile unsigned int ISP_CSM_C_RANGE:1;
    volatile unsigned int reserved_15:17;
} Ifx_CIF_ISP_CTRL_Bits;


typedef struct _Ifx_CIF_ISP_ERR_Bits
{
    volatile unsigned int INFORM_SIZE_ERR:1;
    volatile unsigned int IS_SIZE_ERR:1;
    volatile unsigned int OUTFORM_SIZE_ERR:1;
    volatile unsigned int reserved_3:29;
} Ifx_CIF_ISP_ERR_Bits;


typedef struct _Ifx_CIF_ISP_ERR_CLR_Bits
{
    volatile unsigned int INFORM_SIZE_ERR_CLR:1;
    volatile unsigned int IS_SIZE_ERR_CLR:1;
    volatile unsigned int OUTFORM_SIZE_ERR_CLR:1;
    volatile unsigned int reserved_3:29;
} Ifx_CIF_ISP_ERR_CLR_Bits;


typedef struct _Ifx_CIF_ISP_FLAGS_SHD_Bits
{
    volatile unsigned int ISP_ENABLE_SHD:1;
    volatile unsigned int ISP_INFORM_ENABLE_SHD:1;
    volatile unsigned int INFORM_FIELD:1;
    volatile unsigned int reserved_3:11;
    volatile unsigned int S_DATA:16;
    volatile unsigned int S_VSYNC:1;
    volatile unsigned int S_HSYNC:1;
} Ifx_CIF_ISP_FLAGS_SHD_Bits;


typedef struct _Ifx_CIF_ISP_FRAME_COUNT_Bits
{
    volatile unsigned int FRAME_COUNTER:10;
    volatile unsigned int reserved_10:22;
} Ifx_CIF_ISP_FRAME_COUNT_Bits;


typedef struct _Ifx_CIF_ISP_ICR_Bits
{
    volatile unsigned int ICR_ISP_OFF:1;
    volatile unsigned int ICR_FRAME:1;
    volatile unsigned int ICR_DATA_LOSS:1;
    volatile unsigned int ICR_PIC_SIZE_ERR:1;
    volatile unsigned int reserved_4:1;
    volatile unsigned int ICR_FRAME_IN:1;
    volatile unsigned int ICR_V_START:1;
    volatile unsigned int ICR_H_START:1;
    volatile unsigned int reserved_8:11;
    volatile unsigned int ICR_WD_TRIG:1;
    volatile unsigned int reserved_20:12;
} Ifx_CIF_ISP_ICR_Bits;


typedef struct _Ifx_CIF_ISP_IMSC_Bits
{
    volatile unsigned int IMSC_ISP_OFF:1;
    volatile unsigned int IMSC_FRAME:1;
    volatile unsigned int IMSC_DATA_LOSS:1;
    volatile unsigned int IMSC_PIC_SIZE_ERR:1;
    volatile unsigned int reserved_4:1;
    volatile unsigned int IMSC_FRAME_IN:1;
    volatile unsigned int IMSC_V_START:1;
    volatile unsigned int IMSC_H_START:1;
    volatile unsigned int reserved_8:11;
    volatile unsigned int IMSC_WD_TRIG:1;
    volatile unsigned int reserved_20:12;
} Ifx_CIF_ISP_IMSC_Bits;


typedef struct _Ifx_CIF_ISP_ISR_Bits
{
    volatile unsigned int ISR_ISP_OFF:1;
    volatile unsigned int ISR_FRAME:1;
    volatile unsigned int ISR_DATA_LOSS:1;
    volatile unsigned int ISR_PIC_SIZE_ERR:1;
    volatile unsigned int reserved_4:1;
    volatile unsigned int ISR_FRAME_IN:1;
    volatile unsigned int ISR_V_START:1;
    volatile unsigned int ISR_H_START:1;
    volatile unsigned int reserved_8:11;
    volatile unsigned int ISR_WD_TRIG:1;
    volatile unsigned int reserved_20:12;
} Ifx_CIF_ISP_ISR_Bits;


typedef struct _Ifx_CIF_ISP_MIS_Bits
{
    volatile unsigned int MIS_ISP_OFF:1;
    volatile unsigned int MIS_FRAME:1;
    volatile unsigned int MIS_DATA_LOSS:1;
    volatile unsigned int MIS_PIC_SIZE_ERR:1;
    volatile unsigned int reserved_4:1;
    volatile unsigned int MIS_FRAME_IN:1;
    volatile unsigned int MIS_V_START:1;
    volatile unsigned int MIS_H_START:1;
    volatile unsigned int reserved_8:11;
    volatile unsigned int MIS_WD_TRIG:1;
    volatile unsigned int reserved_20:12;
} Ifx_CIF_ISP_MIS_Bits;


typedef struct _Ifx_CIF_ISP_OUT_H_OFFS_Bits
{
    volatile unsigned int ISP_OUT_H_OFFS:12;
    volatile unsigned int reserved_12:20;
} Ifx_CIF_ISP_OUT_H_OFFS_Bits;


typedef struct _Ifx_CIF_ISP_OUT_H_OFFS_SHD_Bits
{
    volatile unsigned int ISP_OUT_H_OFFS_SHD:12;
    volatile unsigned int reserved_12:20;
} Ifx_CIF_ISP_OUT_H_OFFS_SHD_Bits;


typedef struct _Ifx_CIF_ISP_OUT_H_SIZE_Bits
{
    volatile unsigned int ISP_OUT_H_SIZE:12;
    volatile unsigned int reserved_12:20;
} Ifx_CIF_ISP_OUT_H_SIZE_Bits;


typedef struct _Ifx_CIF_ISP_OUT_H_SIZE_SHD_Bits
{
    volatile unsigned int ISP_OUT_H_SIZE_SHD:13;
    volatile unsigned int reserved_13:19;
} Ifx_CIF_ISP_OUT_H_SIZE_SHD_Bits;


typedef struct _Ifx_CIF_ISP_OUT_V_OFFS_Bits
{
    volatile unsigned int ISP_OUT_V_OFFS:12;
    volatile unsigned int reserved_12:20;
} Ifx_CIF_ISP_OUT_V_OFFS_Bits;


typedef struct _Ifx_CIF_ISP_OUT_V_OFFS_SHD_Bits
{
    volatile unsigned int ISP_OUT_V_OFFS_SHD:12;
    volatile unsigned int reserved_12:20;
} Ifx_CIF_ISP_OUT_V_OFFS_SHD_Bits;


typedef struct _Ifx_CIF_ISP_OUT_V_SIZE_Bits
{
    volatile unsigned int ISP_OUT_V_SIZE:12;
    volatile unsigned int reserved_12:20;
} Ifx_CIF_ISP_OUT_V_SIZE_Bits;


typedef struct _Ifx_CIF_ISP_OUT_V_SIZE_SHD_Bits
{
    volatile unsigned int ISP_OUT_V_SIZE_SHD:12;
    volatile unsigned int reserved_12:20;
} Ifx_CIF_ISP_OUT_V_SIZE_SHD_Bits;


typedef struct _Ifx_CIF_ISP_RIS_Bits
{
    volatile unsigned int RIS_ISP_OFF:1;
    volatile unsigned int RIS_FRAME:1;
    volatile unsigned int RIS_DATA_LOSS:1;
    volatile unsigned int RIS_PIC_SIZE_ERR:1;
    volatile unsigned int reserved_4:1;
    volatile unsigned int RIS_FRAME_IN:1;
    volatile unsigned int RIS_V_START:1;
    volatile unsigned int RIS_H_START:1;
    volatile unsigned int reserved_8:11;
    volatile unsigned int RIS_WD_TRIG:1;
    volatile unsigned int reserved_20:12;
} Ifx_CIF_ISP_RIS_Bits;


typedef struct _Ifx_CIF_ISPIS_CTRL_Bits
{
    volatile unsigned int IS_EN:1;
    volatile unsigned int reserved_1:31;
} Ifx_CIF_ISPIS_CTRL_Bits;


typedef struct _Ifx_CIF_ISPIS_DISPLACE_Bits
{
    volatile unsigned int DX:12;
    volatile unsigned int reserved_12:4;
    volatile unsigned int DY:12;
    volatile unsigned int reserved_28:4;
} Ifx_CIF_ISPIS_DISPLACE_Bits;


typedef struct _Ifx_CIF_ISPIS_H_OFFS_Bits
{
    volatile unsigned int IS_H_OFFS:12;
    volatile unsigned int reserved_12:20;
} Ifx_CIF_ISPIS_H_OFFS_Bits;


typedef struct _Ifx_CIF_ISPIS_H_OFFS_SHD_Bits
{
    volatile unsigned int IS_H_OFFS_SHD:13;
    volatile unsigned int reserved_13:19;
} Ifx_CIF_ISPIS_H_OFFS_SHD_Bits;


typedef struct _Ifx_CIF_ISPIS_H_SIZE_Bits
{
    volatile unsigned int IS_H_SIZE:12;
    volatile unsigned int reserved_12:20;
} Ifx_CIF_ISPIS_H_SIZE_Bits;


typedef struct _Ifx_CIF_ISPIS_H_SIZE_SHD_Bits
{
    volatile unsigned int ISP_H_SIZE_SHD:13;
    volatile unsigned int reserved_13:19;
} Ifx_CIF_ISPIS_H_SIZE_SHD_Bits;


typedef struct _Ifx_CIF_ISPIS_MAX_DX_Bits
{
    volatile unsigned int IS_MAX_DX:12;
    volatile unsigned int reserved_12:20;
} Ifx_CIF_ISPIS_MAX_DX_Bits;


typedef struct _Ifx_CIF_ISPIS_MAX_DY_Bits
{
    volatile unsigned int IS_MAX_DY:12;
    volatile unsigned int reserved_12:20;
} Ifx_CIF_ISPIS_MAX_DY_Bits;


typedef struct _Ifx_CIF_ISPIS_RECENTER_Bits
{
    volatile unsigned int RECENTER:3;
    volatile unsigned int reserved_3:29;
} Ifx_CIF_ISPIS_RECENTER_Bits;


typedef struct _Ifx_CIF_ISPIS_V_OFFS_Bits
{
    volatile unsigned int IS_V_OFFS:12;
    volatile unsigned int reserved_12:20;
} Ifx_CIF_ISPIS_V_OFFS_Bits;


typedef struct _Ifx_CIF_ISPIS_V_OFFS_SHD_Bits
{
    volatile unsigned int IS_V_OFFS_SHD:12;
    volatile unsigned int reserved_12:20;
} Ifx_CIF_ISPIS_V_OFFS_SHD_Bits;


typedef struct _Ifx_CIF_ISPIS_V_SIZE_Bits
{
    volatile unsigned int IS_V_SIZE:12;
    volatile unsigned int reserved_12:20;
} Ifx_CIF_ISPIS_V_SIZE_Bits;


typedef struct _Ifx_CIF_ISPIS_V_SIZE_SHD_Bits
{
    volatile unsigned int ISP_V_SIZE_SHD:12;
    volatile unsigned int reserved_12:20;
} Ifx_CIF_ISPIS_V_SIZE_SHD_Bits;


typedef struct _Ifx_CIF_JPE_AC_TABLE_SELECT_Bits
{
    volatile unsigned int AC_TABLE_SELECT:3;
    volatile unsigned int reserved_3:29;
} Ifx_CIF_JPE_AC_TABLE_SELECT_Bits;


typedef struct _Ifx_CIF_JPE_CBCR_SCALE_EN_Bits
{
    volatile unsigned int CBCR_SCALE_EN:1;
    volatile unsigned int reserved_1:31;
} Ifx_CIF_JPE_CBCR_SCALE_EN_Bits;


typedef struct _Ifx_CIF_JPE_DC_TABLE_SELECT_Bits
{
    volatile unsigned int DC_TABLE_SELECT:3;
    volatile unsigned int reserved_3:29;
} Ifx_CIF_JPE_DC_TABLE_SELECT_Bits;


typedef struct _Ifx_CIF_JPE_DEBUG_Bits
{
    volatile unsigned int reserved_0:2;
    volatile unsigned int DEB_QIQ_TABLE_ACC:1;
    volatile unsigned int DEB_VLC_ENCODE_BUSY:1;
    volatile unsigned int DEB_R2B_MEMORY_FULL:1;
    volatile unsigned int DEB_VLC_TABLE_BUSY:1;
    volatile unsigned int reserved_6:2;
    volatile unsigned int DEB_BAD_TABLE_ACCESS:1;
    volatile unsigned int reserved_9:23;
} Ifx_CIF_JPE_DEBUG_Bits;


typedef struct _Ifx_CIF_JPE_ENC_HSIZE_Bits
{
    volatile unsigned int ENC_HSIZE:12;
    volatile unsigned int reserved_12:20;
} Ifx_CIF_JPE_ENC_HSIZE_Bits;


typedef struct _Ifx_CIF_JPE_ENC_VSIZE_Bits
{
    volatile unsigned int ENC_VSIZE:12;
    volatile unsigned int reserved_12:20;
} Ifx_CIF_JPE_ENC_VSIZE_Bits;


typedef struct _Ifx_CIF_JPE_ENCODE_Bits
{
    volatile unsigned int ENCODE:1;
    volatile unsigned int reserved_1:3;
    volatile unsigned int CONT_MODE:2;
    volatile unsigned int reserved_6:26;
} Ifx_CIF_JPE_ENCODE_Bits;


typedef struct _Ifx_CIF_JPE_ENCODE_MODE_Bits
{
    volatile unsigned int ENCODE_MODE:1;
    volatile unsigned int reserved_1:31;
} Ifx_CIF_JPE_ENCODE_MODE_Bits;


typedef struct _Ifx_CIF_JPE_ENCODER_BUSY_Bits
{
    volatile unsigned int CODEC_BUSY:1;
    volatile unsigned int reserved_1:31;
} Ifx_CIF_JPE_ENCODER_BUSY_Bits;


typedef struct _Ifx_CIF_JPE_ERROR_ICR_Bits
{
    volatile unsigned int reserved_0:4;
    volatile unsigned int VLC_SYMBOL_ERR:1;
    volatile unsigned int reserved_5:2;
    volatile unsigned int DCT_ERR:1;
    volatile unsigned int reserved_8:1;
    volatile unsigned int R2B_IMG_SIZE_ERR:1;
    volatile unsigned int VLC_TABLE_ERR:1;
    volatile unsigned int reserved_11:21;
} Ifx_CIF_JPE_ERROR_ICR_Bits;


typedef struct _Ifx_CIF_JPE_ERROR_IMR_Bits
{
    volatile unsigned int reserved_0:4;
    volatile unsigned int VLC_SYMBOL_ERR:1;
    volatile unsigned int reserved_5:2;
    volatile unsigned int DCT_ERR:1;
    volatile unsigned int reserved_8:1;
    volatile unsigned int R2B_IMG_SIZE_ERR:1;
    volatile unsigned int VLC_TABLE_ERR:1;
    volatile unsigned int reserved_11:21;
} Ifx_CIF_JPE_ERROR_IMR_Bits;


typedef struct _Ifx_CIF_JPE_ERROR_ISR_Bits
{
    volatile unsigned int reserved_0:4;
    volatile unsigned int VLC_SYMBOL_ERR:1;
    volatile unsigned int reserved_5:2;
    volatile unsigned int DCT_ERR:1;
    volatile unsigned int reserved_8:1;
    volatile unsigned int R2B_IMG_SIZE_ERR:1;
    volatile unsigned int VLC_TABLE_ERR:1;
    volatile unsigned int reserved_11:21;
} Ifx_CIF_JPE_ERROR_ISR_Bits;


typedef struct _Ifx_CIF_JPE_ERROR_MIS_Bits
{
    volatile unsigned int reserved_0:4;
    volatile unsigned int VLC_SYMBOL_ERR:1;
    volatile unsigned int reserved_5:2;
    volatile unsigned int DCT_ERR:1;
    volatile unsigned int reserved_8:1;
    volatile unsigned int R2B_IMG_SIZE_ERR:1;
    volatile unsigned int VLC_TABLE_ERR:1;
    volatile unsigned int reserved_11:21;
} Ifx_CIF_JPE_ERROR_MIS_Bits;


typedef struct _Ifx_CIF_JPE_ERROR_RIS_Bits
{
    volatile unsigned int reserved_0:4;
    volatile unsigned int VLC_SYMBOL_ERR:1;
    volatile unsigned int reserved_5:2;
    volatile unsigned int DCT_ERR:1;
    volatile unsigned int reserved_8:1;
    volatile unsigned int R2B_IMG_SIZE_ERR:1;
    volatile unsigned int VLC_TABLE_ERR:1;
    volatile unsigned int reserved_11:21;
} Ifx_CIF_JPE_ERROR_RIS_Bits;


typedef struct _Ifx_CIF_JPE_GEN_HEADER_Bits
{
    volatile unsigned int GEN_HEADER:1;
    volatile unsigned int reserved_1:31;
} Ifx_CIF_JPE_GEN_HEADER_Bits;


typedef struct _Ifx_CIF_JPE_HEADER_MODE_Bits
{
    volatile unsigned int HEADER_MODE:2;
    volatile unsigned int reserved_2:30;
} Ifx_CIF_JPE_HEADER_MODE_Bits;


typedef struct _Ifx_CIF_JPE_INIT_Bits
{
    volatile unsigned int JP_INIT:1;
    volatile unsigned int reserved_1:31;
} Ifx_CIF_JPE_INIT_Bits;


typedef struct _Ifx_CIF_JPE_PIC_FORMAT_Bits
{
    volatile unsigned int ENC_PIC_FORMAT:3;
    volatile unsigned int reserved_3:29;
} Ifx_CIF_JPE_PIC_FORMAT_Bits;


typedef struct _Ifx_CIF_JPE_RESTART_INTERVAL_Bits
{
    volatile unsigned int RESTART_INTERVAL:16;
    volatile unsigned int reserved_16:16;
} Ifx_CIF_JPE_RESTART_INTERVAL_Bits;


typedef struct _Ifx_CIF_JPE_STATUS_ICR_Bits
{
    volatile unsigned int reserved_0:4;
    volatile unsigned int ENCODE_DONE:1;
    volatile unsigned int GEN_HEADER_DONE:1;
    volatile unsigned int reserved_6:26;
} Ifx_CIF_JPE_STATUS_ICR_Bits;


typedef struct _Ifx_CIF_JPE_STATUS_IMR_Bits
{
    volatile unsigned int reserved_0:4;
    volatile unsigned int ENCODE_DONE:1;
    volatile unsigned int GEN_HEADER_DONE:1;
    volatile unsigned int reserved_6:26;
} Ifx_CIF_JPE_STATUS_IMR_Bits;


typedef struct _Ifx_CIF_JPE_STATUS_ISR_Bits
{
    volatile unsigned int reserved_0:4;
    volatile unsigned int ENCODE_DONE:1;
    volatile unsigned int GEN_HEADER_DONE:1;
    volatile unsigned int reserved_6:26;
} Ifx_CIF_JPE_STATUS_ISR_Bits;


typedef struct _Ifx_CIF_JPE_STATUS_MIS_Bits
{
    volatile unsigned int reserved_0:4;
    volatile unsigned int ENCODE_DONE:1;
    volatile unsigned int GEN_HEADER_DONE:1;
    volatile unsigned int reserved_6:26;
} Ifx_CIF_JPE_STATUS_MIS_Bits;


typedef struct _Ifx_CIF_JPE_STATUS_RIS_Bits
{
    volatile unsigned int reserved_0:4;
    volatile unsigned int ENCODE_DONE:1;
    volatile unsigned int GEN_HEADER_DONE:1;
    volatile unsigned int reserved_6:26;
} Ifx_CIF_JPE_STATUS_RIS_Bits;


typedef struct _Ifx_CIF_JPE_TABLE_DATA_Bits
{
    volatile unsigned int TABLE_WDATA_L:8;
    volatile unsigned int TABLE_WDATA_H:8;
    volatile unsigned int reserved_16:16;
} Ifx_CIF_JPE_TABLE_DATA_Bits;


typedef struct _Ifx_CIF_JPE_TABLE_FLUSH_Bits
{
    volatile unsigned int TABLE_FLUSH:1;
    volatile unsigned int reserved_1:31;
} Ifx_CIF_JPE_TABLE_FLUSH_Bits;


typedef struct _Ifx_CIF_JPE_TABLE_ID_Bits
{
    volatile unsigned int TABLE_ID:4;
    volatile unsigned int reserved_4:28;
} Ifx_CIF_JPE_TABLE_ID_Bits;


typedef struct _Ifx_CIF_JPE_TAC0_LEN_Bits
{
    volatile unsigned int TAC0_LEN:8;
    volatile unsigned int reserved_8:24;
} Ifx_CIF_JPE_TAC0_LEN_Bits;


typedef struct _Ifx_CIF_JPE_TAC1_LEN_Bits
{
    volatile unsigned int TAC1_LEN:8;
    volatile unsigned int reserved_8:24;
} Ifx_CIF_JPE_TAC1_LEN_Bits;


typedef struct _Ifx_CIF_JPE_TDC0_LEN_Bits
{
    volatile unsigned int TDC0_LEN:8;
    volatile unsigned int reserved_8:24;
} Ifx_CIF_JPE_TDC0_LEN_Bits;


typedef struct _Ifx_CIF_JPE_TDC1_LEN_Bits
{
    volatile unsigned int TDC1_LEN:8;
    volatile unsigned int reserved_8:24;
} Ifx_CIF_JPE_TDC1_LEN_Bits;


typedef struct _Ifx_CIF_JPE_TQ_U_SELECT_Bits
{
    volatile unsigned int TQ1_SELECT:2;
    volatile unsigned int reserved_2:30;
} Ifx_CIF_JPE_TQ_U_SELECT_Bits;


typedef struct _Ifx_CIF_JPE_TQ_V_SELECT_Bits
{
    volatile unsigned int TQ2_SELECT:2;
    volatile unsigned int reserved_2:30;
} Ifx_CIF_JPE_TQ_V_SELECT_Bits;


typedef struct _Ifx_CIF_JPE_TQ_Y_SELECT_Bits
{
    volatile unsigned int TQ0_SELECT:2;
    volatile unsigned int reserved_2:30;
} Ifx_CIF_JPE_TQ_Y_SELECT_Bits;


typedef struct _Ifx_CIF_JPE_Y_SCALE_EN_Bits
{
    volatile unsigned int Y_SCALE_EN:1;
    volatile unsigned int reserved_1:31;
} Ifx_CIF_JPE_Y_SCALE_EN_Bits;


typedef struct _Ifx_CIF_LDS_CTRL_Bits
{
    volatile unsigned int LDS_V_EN:1;
    volatile unsigned int LDS_H_EN:1;
    volatile unsigned int reserved_2:2;
    volatile unsigned int LDS_V_MODE:2;
    volatile unsigned int reserved_6:2;
    volatile unsigned int LDS_H_MODE:2;
    volatile unsigned int reserved_10:22;
} Ifx_CIF_LDS_CTRL_Bits;


typedef struct _Ifx_CIF_LDS_FAC_Bits
{
    volatile unsigned int LDS_V_FAC:8;
    volatile unsigned int reserved_8:8;
    volatile unsigned int LDS_H_FAC:8;
    volatile unsigned int reserved_24:8;
} Ifx_CIF_LDS_FAC_Bits;


typedef struct _Ifx_CIF_MI_BYTE_CNT_Bits
{
    volatile unsigned int BYTE_CNT:24;
    volatile unsigned int reserved_24:8;
} Ifx_CIF_MI_BYTE_CNT_Bits;


typedef struct _Ifx_CIF_MI_CTRL_Bits
{
    volatile unsigned int MP_ENABLE:1;
    volatile unsigned int reserved_1:1;
    volatile unsigned int JPEG_ENABLE:1;
    volatile unsigned int RAW_ENABLE:1;
    volatile unsigned int reserved_4:3;
    volatile unsigned int BYTE_SWAP:1;
    volatile unsigned int reserved_8:8;
    volatile unsigned int BURST_LEN_LUM:1;
    volatile unsigned int reserved_17:1;
    volatile unsigned int BURST_LEN_CHROM:1;
    volatile unsigned int reserved_19:1;
    volatile unsigned int INIT_BASE_EN:1;
    volatile unsigned int INIT_OFFSET_EN:1;
    volatile unsigned int MP_WRITE_FORMAT:2;
    volatile unsigned int reserved_24:8;
} Ifx_CIF_MI_CTRL_Bits;


typedef struct _Ifx_CIF_MI_CTRL_SHD_Bits
{
    volatile unsigned int MP_ENABLE_IN:1;
    volatile unsigned int reserved_1:3;
    volatile unsigned int JPEG_ENABLE_IN:1;
    volatile unsigned int RAW_ENABLE_IN:1;
    volatile unsigned int reserved_6:10;
    volatile unsigned int MP_ENABLE_OUT:1;
    volatile unsigned int reserved_17:1;
    volatile unsigned int JPEG_ENABLE_OUT:1;
    volatile unsigned int RAW_ENABLE_OUT:1;
    volatile unsigned int reserved_20:12;
} Ifx_CIF_MI_CTRL_SHD_Bits;


typedef struct _Ifx_CIF_MI_ICR_Bits
{
    volatile unsigned int MP_FRAME_END:1;
    volatile unsigned int reserved_1:1;
    volatile unsigned int MBLK_LINE:1;
    volatile unsigned int FILL_MPY:1;
    volatile unsigned int WRAP_MP_Y:1;
    volatile unsigned int WRAP_MP_CB:1;
    volatile unsigned int WRAP_MP_CR:1;
    volatile unsigned int reserved_7:3;
    volatile unsigned int BUS_ERROR:1;
    volatile unsigned int reserved_11:21;
} Ifx_CIF_MI_ICR_Bits;


typedef struct _Ifx_CIF_MI_IMSC_Bits
{
    volatile unsigned int MP_FRAME_END:1;
    volatile unsigned int reserved_1:1;
    volatile unsigned int MBLK_LINE:1;
    volatile unsigned int FILL_MP_Y:1;
    volatile unsigned int WRAP_MP_Y:1;
    volatile unsigned int WRAP_MP_CB:1;
    volatile unsigned int WRAP_MP_CR:1;
    volatile unsigned int reserved_7:3;
    volatile unsigned int BUS_ERROR:1;
    volatile unsigned int reserved_11:21;
} Ifx_CIF_MI_IMSC_Bits;



typedef struct _Ifx_CIF_MI_INIT_Bits
{
    volatile unsigned int reserved_0:2;
    volatile unsigned int MI_SKIP:1;
    volatile unsigned int reserved_3:1;
    volatile unsigned int MI_CFG_UPD:1;
    volatile unsigned int reserved_5:27;
} Ifx_CIF_MI_INIT_Bits;


typedef struct _Ifx_CIF_MI_ISR_Bits
{
    volatile unsigned int MP_FRAME_END:1;
    volatile unsigned int reserved_1:1;
    volatile unsigned int MBLK_LINE:1;
    volatile unsigned int FILL_MP_Y:1;
    volatile unsigned int WRAP_MP_Y:1;
    volatile unsigned int WRAP_MP_CB:1;
    volatile unsigned int WRAP_MP_CR:1;
    volatile unsigned int reserved_7:3;
    volatile unsigned int Bus_ERROR:1;
    volatile unsigned int reserved_11:21;
} Ifx_CIF_MI_ISR_Bits;


typedef struct _Ifx_CIF_MI_MIS_Bits
{
    volatile unsigned int MP_FRAME_END:1;
    volatile unsigned int reserved_1:1;
    volatile unsigned int MBLK_LINE:1;
    volatile unsigned int FILL_MP_Y:1;
    volatile unsigned int WRAP_MP_Y:1;
    volatile unsigned int WRAP_MP_CB:1;
    volatile unsigned int WRAP_MP_CR:1;
    volatile unsigned int reserved_7:3;
    volatile unsigned int BUS_ERROR:1;
    volatile unsigned int reserved_11:21;
} Ifx_CIF_MI_MIS_Bits;



typedef struct _Ifx_CIF_MI_MP_CB_BASE_AD_INIT_Bits
{
    volatile unsigned int FIXED_TO_00:2;
    volatile unsigned int MP_CB_BASEAD_INIT:30;
} Ifx_CIF_MI_MP_CB_BASE_AD_INIT_Bits;



typedef struct _Ifx_CIF_MI_MP_CB_BASE_AD_SHD_Bits
{
    volatile unsigned int FIXED_TO_00:2;
    volatile unsigned int MP_CB_BASE_AD:30;
} Ifx_CIF_MI_MP_CB_BASE_AD_SHD_Bits;



typedef struct _Ifx_CIF_MI_MP_CB_OFFS_CNT_INIT_Bits
{
    volatile unsigned int FIXED_TO_00:2;
    volatile unsigned int MP_CB_OFFS_CNT_INIT:22;
    volatile unsigned int reserved_24:8;
} Ifx_CIF_MI_MP_CB_OFFS_CNT_INIT_Bits;



typedef struct _Ifx_CIF_MI_MP_CB_OFFS_CNT_SHD_Bits
{
    volatile unsigned int FIXED_TO_00:2;
    volatile unsigned int MP_CB_OFFS_CNT:22;
    volatile unsigned int reserved_24:8;
} Ifx_CIF_MI_MP_CB_OFFS_CNT_SHD_Bits;



typedef struct _Ifx_CIF_MI_MP_CB_OFFS_CNT_START_Bits
{
    volatile unsigned int FIXED_TO_00:2;
    volatile unsigned int MP_CB_OFFS_CNT_START:22;
    volatile unsigned int reserved_24:8;
} Ifx_CIF_MI_MP_CB_OFFS_CNT_START_Bits;



typedef struct _Ifx_CIF_MI_MP_CB_SIZE_INIT_Bits
{
    volatile unsigned int FIXED_TO_00:2;
    volatile unsigned int MP_CB_SIZE_INIT:22;
    volatile unsigned int reserved_24:8;
} Ifx_CIF_MI_MP_CB_SIZE_INIT_Bits;



typedef struct _Ifx_CIF_MI_MP_CB_SIZE_SHD_Bits
{
    volatile unsigned int FIXED_TO_00:2;
    volatile unsigned int MP_CB_SIZE:22;
    volatile unsigned int reserved_24:8;
} Ifx_CIF_MI_MP_CB_SIZE_SHD_Bits;



typedef struct _Ifx_CIF_MI_MP_CR_BASE_AD_INIT_Bits
{
    volatile unsigned int FIXED_TO_00:2;
    volatile unsigned int MP_CR_BASE_AD_INIT:30;
} Ifx_CIF_MI_MP_CR_BASE_AD_INIT_Bits;



typedef struct _Ifx_CIF_MI_MP_CR_BASE_AD_SHD_Bits
{
    volatile unsigned int FIXED_TO_00:2;
    volatile unsigned int MP_CR_BASE_AD:30;
} Ifx_CIF_MI_MP_CR_BASE_AD_SHD_Bits;



typedef struct _Ifx_CIF_MI_MP_CR_OFFS_CNT_INIT_Bits
{
    volatile unsigned int FIXED_TO_00:2;
    volatile unsigned int MP_CR_OFFS_CNT_INIT:22;
    volatile unsigned int reserved_24:8;
} Ifx_CIF_MI_MP_CR_OFFS_CNT_INIT_Bits;



typedef struct _Ifx_CIF_MI_MP_CR_OFFS_CNT_SHD_Bits
{
    volatile unsigned int FIXED_TO_00:2;
    volatile unsigned int MP_CR_OFFS_CNT:22;
    volatile unsigned int reserved_24:8;
} Ifx_CIF_MI_MP_CR_OFFS_CNT_SHD_Bits;



typedef struct _Ifx_CIF_MI_MP_CR_OFFS_CNT_START_Bits
{
    volatile unsigned int FIXED_TO_00:2;
    volatile unsigned int MP_CR_OFFS_CNT_START:22;
    volatile unsigned int reserved_24:8;
} Ifx_CIF_MI_MP_CR_OFFS_CNT_START_Bits;



typedef struct _Ifx_CIF_MI_MP_CR_SIZE_INIT_Bits
{
    volatile unsigned int FIXED_TO_00:2;
    volatile unsigned int MP_CR_SIZE_INIT:22;
    volatile unsigned int reserved_24:8;
} Ifx_CIF_MI_MP_CR_SIZE_INIT_Bits;



typedef struct _Ifx_CIF_MI_MP_CR_SIZE_SHD_Bits
{
    volatile unsigned int FIXED_TO_00:2;
    volatile unsigned int MP_CR_SIZE:22;
    volatile unsigned int reserved_24:8;
} Ifx_CIF_MI_MP_CR_SIZE_SHD_Bits;



typedef struct _Ifx_CIF_MI_MP_Y_BASE_AD_INIT_Bits
{
    volatile unsigned int FIXED_TO_00:2;
    volatile unsigned int MP_Y_BASE_AD_INIT:30;
} Ifx_CIF_MI_MP_Y_BASE_AD_INIT_Bits;



typedef struct _Ifx_CIF_MI_MP_Y_BASE_AD_SHD_Bits
{
    volatile unsigned int FIXED_TO_00:2;
    volatile unsigned int MP_Y_BASE_AD:30;
} Ifx_CIF_MI_MP_Y_BASE_AD_SHD_Bits;



typedef struct _Ifx_CIF_MI_MP_Y_IRQ_OFFS_INIT_Bits
{
    volatile unsigned int FIXED_TO_00:2;
    volatile unsigned int MP_Y_IRQ_OFFS_INIT:22;
    volatile unsigned int reserved_24:8;
} Ifx_CIF_MI_MP_Y_IRQ_OFFS_INIT_Bits;



typedef struct _Ifx_CIF_MI_MP_Y_IRQ_OFFS_SHD_Bits
{
    volatile unsigned int FIXED_TO_00:2;
    volatile unsigned int MP_Y_IRQ_OFFS:22;
    volatile unsigned int reserved_24:8;
} Ifx_CIF_MI_MP_Y_IRQ_OFFS_SHD_Bits;



typedef struct _Ifx_CIF_MI_MP_Y_OFFS_CNT_INIT_Bits
{
    volatile unsigned int FIXED_TO_00:2;
    volatile unsigned int MP_Y_OFFS_CNT_INIT:22;
    volatile unsigned int reserved_24:8;
} Ifx_CIF_MI_MP_Y_OFFS_CNT_INIT_Bits;



typedef struct _Ifx_CIF_MI_MP_Y_OFFS_CNT_SHD_Bits
{
    volatile unsigned int FIXED_TO_00:2;
    volatile unsigned int MP_Y_OFFS_CNT:22;
    volatile unsigned int reserved_24:8;
} Ifx_CIF_MI_MP_Y_OFFS_CNT_SHD_Bits;



typedef struct _Ifx_CIF_MI_MP_Y_OFFS_CNT_START_Bits
{
    volatile unsigned int FIXED_TO_00:2;
    volatile unsigned int MP_Y_OFFS_CNT_START:22;
    volatile unsigned int reserved_24:8;
} Ifx_CIF_MI_MP_Y_OFFS_CNT_START_Bits;



typedef struct _Ifx_CIF_MI_MP_Y_SIZE_INIT_Bits
{
    volatile unsigned int FIXED_TO_00:2;
    volatile unsigned int MP_Y_SIZE_INIT:22;
    volatile unsigned int reserved_24:8;
} Ifx_CIF_MI_MP_Y_SIZE_INIT_Bits;



typedef struct _Ifx_CIF_MI_MP_Y_SIZE_SHD_Bits
{
    volatile unsigned int FIXED_TO_00:2;
    volatile unsigned int MP_Y_SIZE:22;
    volatile unsigned int reserved_24:8;
} Ifx_CIF_MI_MP_Y_SIZE_SHD_Bits;


typedef struct _Ifx_CIF_MI_RIS_Bits
{
    volatile unsigned int MP_FRAME_END:1;
    volatile unsigned int reserved_1:1;
    volatile unsigned int MBLK_LINE:1;
    volatile unsigned int FILL_MP_Y:1;
    volatile unsigned int WRAP_MP_Y:1;
    volatile unsigned int WRAP_MP_CB:1;
    volatile unsigned int WRAP_MP_CR:1;
    volatile unsigned int reserved_7:3;
    volatile unsigned int BUS_ERROR:1;
    volatile unsigned int reserved_11:21;
} Ifx_CIF_MI_RIS_Bits;


typedef struct _Ifx_CIF_MI_STATUS_Bits
{
    volatile unsigned int MP_Y_FIFO_FULL:1;
    volatile unsigned int MP_CB_FIFO_FULL:1;
    volatile unsigned int MP_CR_FIFO_FULL:1;
    volatile unsigned int reserved_3:5;
    volatile unsigned int BUS_WRITE_ERROR:1;
    volatile unsigned int reserved_9:23;
} Ifx_CIF_MI_STATUS_Bits;


typedef struct _Ifx_CIF_MI_STATUS_CLR_Bits
{
    volatile unsigned int MP_Y_FIFO_FULL:1;
    volatile unsigned int MP_CB_FIFO_FULL:1;
    volatile unsigned int MP_CR_FIFO_FULL:1;
    volatile unsigned int reserved_3:5;
    volatile unsigned int BUS_WRITE_ERROR:1;
    volatile unsigned int reserved_9:15;
    volatile unsigned int EP_1_FIFO_FULL:1;
    volatile unsigned int EP_2_FIFO_FULL:1;
    volatile unsigned int EP_3_FIFO_FULL:1;
    volatile unsigned int EP_4_FIFO_FULL:1;
    volatile unsigned int EP_5_FIFO_FULL:1;
    volatile unsigned int reserved_29:3;
} Ifx_CIF_MI_STATUS_CLR_Bits;


typedef struct _Ifx_CIF_MIEP_CH_BASE_AD_INIT_Bits
{
    volatile unsigned int FIXED_TO_00:2;
    volatile unsigned int EP_BASE_AD_INIT:30;
} Ifx_CIF_MIEP_CH_BASE_AD_INIT_Bits;



typedef struct _Ifx_CIF_MIEP_CH_BASE_AD_SHD_Bits
{
    volatile unsigned int FIXED_TO_00:2;
    volatile unsigned int EP_BASE_AD:30;
} Ifx_CIF_MIEP_CH_BASE_AD_SHD_Bits;


typedef struct _Ifx_CIF_MIEP_CH_CTRL_Bits
{
    volatile unsigned int EP_ENABLE:1;
    volatile unsigned int reserved_1:6;
    volatile unsigned int BYTE_SWAP:1;
    volatile unsigned int reserved_8:12;
    volatile unsigned int INIT_BASE_EN:1;
    volatile unsigned int INIT_OFFSET_EN:1;
    volatile unsigned int EP_WRITE_FORMAT:2;
    volatile unsigned int reserved_24:8;
} Ifx_CIF_MIEP_CH_CTRL_Bits;


typedef struct _Ifx_CIF_MIEP_CH_CTRL_SHD_Bits
{
    volatile unsigned int EP_ENABLE_IN:1;
    volatile unsigned int reserved_1:15;
    volatile unsigned int EP_ENABLE_OUT:1;
    volatile unsigned int reserved_17:15;
} Ifx_CIF_MIEP_CH_CTRL_SHD_Bits;



typedef struct _Ifx_CIF_MIEP_CH_INIT_Bits
{
    volatile unsigned int reserved_0:2;
    volatile unsigned int MI_EP_SKIP:1;
    volatile unsigned int reserved_3:1;
    volatile unsigned int MI_EP_CFG_UPD:1;
    volatile unsigned int reserved_5:27;
} Ifx_CIF_MIEP_CH_INIT_Bits;



typedef struct _Ifx_CIF_MIEP_CH_IRQ_OFFS_INIT_Bits
{
    volatile unsigned int FIXED_TO_00:2;
    volatile unsigned int EP_IRQ_OFFS_INIT:22;
    volatile unsigned int reserved_24:8;
} Ifx_CIF_MIEP_CH_IRQ_OFFS_INIT_Bits;



typedef struct _Ifx_CIF_MIEP_CH_IRQ_OFFS_SHD_Bits
{
    volatile unsigned int FIXED_TO_00:2;
    volatile unsigned int EP_IRQ_OFFS:22;
    volatile unsigned int reserved_24:8;
} Ifx_CIF_MIEP_CH_IRQ_OFFS_SHD_Bits;



typedef struct _Ifx_CIF_MIEP_CH_OFFS_CNT_INIT_Bits
{
    volatile unsigned int FIXED_TO_00:2;
    volatile unsigned int EP_OFFS_CNT_INIT:22;
    volatile unsigned int reserved_24:8;
} Ifx_CIF_MIEP_CH_OFFS_CNT_INIT_Bits;



typedef struct _Ifx_CIF_MIEP_CH_OFFS_CNT_SHD_Bits
{
    volatile unsigned int FIXED_TO_00:2;
    volatile unsigned int EP_OFFS_CNT:22;
    volatile unsigned int reserved_24:8;
} Ifx_CIF_MIEP_CH_OFFS_CNT_SHD_Bits;


typedef struct _Ifx_CIF_MIEP_CH_OFFS_CNT_START_Bits
{
    volatile unsigned int FIXED_TO_00:2;
    volatile unsigned int EP_OFFS_CNT_START:22;
    volatile unsigned int reserved_24:8;
} Ifx_CIF_MIEP_CH_OFFS_CNT_START_Bits;


typedef struct _Ifx_CIF_MIEP_CH_SIZE_INIT_Bits
{
    volatile unsigned int FIXED_TO_00:2;
    volatile unsigned int EP_SIZE_INIT:22;
    volatile unsigned int reserved_24:8;
} Ifx_CIF_MIEP_CH_SIZE_INIT_Bits;


typedef struct _Ifx_CIF_MIEP_CH_SIZE_SHD_Bits
{
    volatile unsigned int FIXED_TO_00:2;
    volatile unsigned int EP_SIZE:22;
    volatile unsigned int reserved_24:8;
} Ifx_CIF_MIEP_CH_SIZE_SHD_Bits;


typedef struct _Ifx_CIF_MIEP_ICR_Bits
{
    volatile unsigned int FRAME_END_EP_1:1;
    volatile unsigned int FILL_EP_1:1;
    volatile unsigned int WRAP_EP_1:1;
    volatile unsigned int MBLK_LINE_EP_1:1;
    volatile unsigned int FRAME_END_EP_2:1;
    volatile unsigned int FILL_EP_2:1;
    volatile unsigned int WRAP_EP_2:1;
    volatile unsigned int reserved_7:1;
    volatile unsigned int FRAME_END_EP_3:1;
    volatile unsigned int FILL_EP_3:1;
    volatile unsigned int WRAP_EP_3:1;
    volatile unsigned int MBLK_LINE_EP_3:1;
    volatile unsigned int FRAME_END_EP_4:1;
    volatile unsigned int FILL_EP_4:1;
    volatile unsigned int WRAP_EP_4:1;
    volatile unsigned int MBLK_LINE_EP_4:1;
    volatile unsigned int FRAME_END_EP_5:1;
    volatile unsigned int FILL_EP_5:1;
    volatile unsigned int WRAP_EP_5:1;
    volatile unsigned int MBLK_LINE_EP_5:1;
    volatile unsigned int reserved_20:12;
} Ifx_CIF_MIEP_ICR_Bits;



typedef struct _Ifx_CIF_MIEP_IMSC_Bits
{
    volatile unsigned int FRAME_END_EP_1:1;
    volatile unsigned int FILL_EP_1:1;
    volatile unsigned int WRAP_EP_1:1;
    volatile unsigned int MBLK_LINE_EP_1:1;
    volatile unsigned int FRAME_END_EP_2:1;
    volatile unsigned int FILL_EP_2:1;
    volatile unsigned int WRAP_EP_2:1;
    volatile unsigned int MBLK_LINE_EP_2:1;
    volatile unsigned int FRAME_END_EP_3:1;
    volatile unsigned int FILL_EP_3:1;
    volatile unsigned int WRAP_EP_3:1;
    volatile unsigned int MBLK_LINE_EP_3:1;
    volatile unsigned int FRAME_END_EP_4:1;
    volatile unsigned int FILL_EP_4:1;
    volatile unsigned int WRAP_EP_4:1;
    volatile unsigned int MBLK_LINE_EP_4:1;
    volatile unsigned int FRAME_END_EP_5:1;
    volatile unsigned int FILL_EP_5:1;
    volatile unsigned int WRAP_EP_5:1;
    volatile unsigned int MBLK_LINE_EP_5:1;
    volatile unsigned int reserved_20:12;
} Ifx_CIF_MIEP_IMSC_Bits;


typedef struct _Ifx_CIF_MIEP_ISR_Bits
{
    volatile unsigned int FRAME_END_EP_1:1;
    volatile unsigned int FILL_EP_1:1;
    volatile unsigned int WRAP_EP_1:1;
    volatile unsigned int MBLK_LINE_EP_1:1;
    volatile unsigned int FRAME_END_EP_2:1;
    volatile unsigned int FILL_EP_2:1;
    volatile unsigned int WRAP_EP_2:1;
    volatile unsigned int MBLK_LINE_EP_2:1;
    volatile unsigned int FRAME_END_EP_3:1;
    volatile unsigned int FILL_EP_3:1;
    volatile unsigned int WRAP_EP_3:1;
    volatile unsigned int MBLK_LINE_EP_3:1;
    volatile unsigned int FRAME_END_EP_4:1;
    volatile unsigned int FILL_EP_4:1;
    volatile unsigned int WRAP_EP_4:1;
    volatile unsigned int MBLK_LINE_EP_4:1;
    volatile unsigned int FRAME_END_EP_5:1;
    volatile unsigned int FILL_EP_5:1;
    volatile unsigned int WRAP_EP_5:1;
    volatile unsigned int MBLK_LINE_EP_5:1;
    volatile unsigned int reserved_20:12;
} Ifx_CIF_MIEP_ISR_Bits;


typedef struct _Ifx_CIF_MIEP_MIS_Bits
{
    volatile unsigned int FRAME_END_EP_1:1;
    volatile unsigned int FILL_EP_1:1;
    volatile unsigned int WRAP_EP_1:1;
    volatile unsigned int MBLK_LINE_EP_1:1;
    volatile unsigned int FRAME_END_EP_2:1;
    volatile unsigned int FILL_EP_2:1;
    volatile unsigned int WRAP_EP_2:1;
    volatile unsigned int MBLK_LINE_EP_2:1;
    volatile unsigned int FRAME_END_EP_3:1;
    volatile unsigned int FILL_EP_3:1;
    volatile unsigned int WRAP_EP_3:1;
    volatile unsigned int MBLK_LINE_EP_3:1;
    volatile unsigned int FRAME_END_EP_4:1;
    volatile unsigned int FILL_EP_4:1;
    volatile unsigned int WRAP_EP_4:1;
    volatile unsigned int MBLK_LINE_EP_4:1;
    volatile unsigned int FRAME_END_EP_5:1;
    volatile unsigned int FILL_EP_5:1;
    volatile unsigned int WRAP_EP_5:1;
    volatile unsigned int MBLK_LINE_EP_5:1;
    volatile unsigned int reserved_20:12;
} Ifx_CIF_MIEP_MIS_Bits;


typedef struct _Ifx_CIF_MIEP_RIS_Bits
{
    volatile unsigned int FRAME_END_EP_1:1;
    volatile unsigned int FILL_EP_1:1;
    volatile unsigned int WRAP_EP_1:1;
    volatile unsigned int MBLK_LINE_EP_1:1;
    volatile unsigned int FRAME_END_EP_2:1;
    volatile unsigned int FILL_EP_2:1;
    volatile unsigned int WRAP_EP_2:1;
    volatile unsigned int MBLK_LINE_EP_2:1;
    volatile unsigned int FRAME_END_EP_3:1;
    volatile unsigned int FILL_EP_3:1;
    volatile unsigned int WRAP_EP_3:1;
    volatile unsigned int MBLK_LINE_EP_3:1;
    volatile unsigned int FRAME_END_EP_4:1;
    volatile unsigned int FILL_EP_4:1;
    volatile unsigned int WRAP_EP_4:1;
    volatile unsigned int MBLK_LINE_EP_4:1;
    volatile unsigned int FRAME_END_EP_5:1;
    volatile unsigned int FILL_EP_5:1;
    volatile unsigned int WRAP_EP_5:1;
    volatile unsigned int MBLK_LINE_EP_5:1;
    volatile unsigned int reserved_20:12;
} Ifx_CIF_MIEP_RIS_Bits;


typedef struct _Ifx_CIF_MIEP_STA_ERR_Bits
{
    volatile unsigned int reserved_0:1;
    volatile unsigned int EP_1_IC_SIZE_ERR:1;
    volatile unsigned int EP_2_IC_SIZE_ERR:1;
    volatile unsigned int EP_3_IC_SIZE_ERR:1;
    volatile unsigned int EP_4_IC_SIZE_ERR:1;
    volatile unsigned int EP_5_IC_SIZE_ERR:1;
    volatile unsigned int reserved_6:11;
    volatile unsigned int EP_1_FIFO_FULL:1;
    volatile unsigned int EP_2_FIFO_FULL:1;
    volatile unsigned int EP_3_FIFO_FULL:1;
    volatile unsigned int EP_4_FIFO_FULL:1;
    volatile unsigned int EP_5_FIFO_FULL:1;
    volatile unsigned int reserved_22:10;
} Ifx_CIF_MIEP_STA_ERR_Bits;


typedef struct _Ifx_CIF_MIEP_STA_ERR_CLR_Bits
{
    volatile unsigned int reserved_0:1;
    volatile unsigned int EP_1_IC_SIZE_ERR_CLR:1;
    volatile unsigned int EP_2_IC_SIZE_ERR_CLR:1;
    volatile unsigned int EP_3_IC_SIZE_ERR_CLR:1;
    volatile unsigned int EP_4_IC_SIZE_ERR_CLR:1;
    volatile unsigned int EP_5_IC_SIZE_ERR_CLR:1;
    volatile unsigned int reserved_6:26;
} Ifx_CIF_MIEP_STA_ERR_CLR_Bits;


typedef struct _Ifx_CIF_WD_CTRL_Bits
{
    volatile unsigned int WD_EN:1;
    volatile unsigned int RST_H_CNT:1;
    volatile unsigned int RST_V_CNT:1;
    volatile unsigned int RST_PD_CNT:1;
    volatile unsigned int reserved_4:12;
    volatile unsigned int WD_PREDIV:16;
} Ifx_CIF_WD_CTRL_Bits;


typedef struct _Ifx_CIF_WD_H_TIMEOUT_Bits
{
    volatile unsigned int WD_HSE_TO:16;
    volatile unsigned int WD_HES_TO:16;
} Ifx_CIF_WD_H_TIMEOUT_Bits;


typedef struct _Ifx_CIF_WD_ICR_Bits
{
    volatile unsigned int ICR_WD_HSE_TO:1;
    volatile unsigned int ICR_WD_HES_TO:1;
    volatile unsigned int ICR_WD_VSE_TO:1;
    volatile unsigned int ICR_WD_VES_TO:1;
    volatile unsigned int reserved_4:28;
} Ifx_CIF_WD_ICR_Bits;


typedef struct _Ifx_CIF_WD_IMSC_Bits
{
    volatile unsigned int IMSC_WD_HSE_TO:1;
    volatile unsigned int IMSC_WD_HES_TO:1;
    volatile unsigned int IMSC_WD_VSE_TO:1;
    volatile unsigned int IMSC_WD_VES_TO:1;
    volatile unsigned int reserved_4:28;
} Ifx_CIF_WD_IMSC_Bits;


typedef struct _Ifx_CIF_WD_ISR_Bits
{
    volatile unsigned int ISR_WD_HSE_TO:1;
    volatile unsigned int ISR_WD_HES_TO:1;
    volatile unsigned int ISR_WD_VSE_TO:1;
    volatile unsigned int ISR_WD_VES_TO:1;
    volatile unsigned int reserved_4:28;
} Ifx_CIF_WD_ISR_Bits;


typedef struct _Ifx_CIF_WD_MIS_Bits
{
    volatile unsigned int MIS_WD_HSE_TO:1;
    volatile unsigned int MIS_WD_HES_TO:1;
    volatile unsigned int MIS_WD_VSE_TO:1;
    volatile unsigned int MIS_WD_VES_TO:1;
    volatile unsigned int reserved_4:28;
} Ifx_CIF_WD_MIS_Bits;


typedef struct _Ifx_CIF_WD_RIS_Bits
{
    volatile unsigned int RIS_WD_HSE_TO:1;
    volatile unsigned int RIS_WD_HES_TO:1;
    volatile unsigned int RIS_WD_VSE_TO:1;
    volatile unsigned int RIS_WD_VES_TO:1;
    volatile unsigned int reserved_4:28;
} Ifx_CIF_WD_RIS_Bits;


typedef struct _Ifx_CIF_WD_V_TIMEOUT_Bits
{
    volatile unsigned int WD_VSE_TO:16;
    volatile unsigned int WD_VES_TO:16;
} Ifx_CIF_WD_V_TIMEOUT_Bits;







typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_BBB_ACCEN0_Bits B;
} Ifx_CIF_BBB_ACCEN0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_BBB_ACCEN1_Bits B;
} Ifx_CIF_BBB_ACCEN1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_BBB_CLC_Bits B;
} Ifx_CIF_BBB_CLC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_BBB_GPCTL_Bits B;
} Ifx_CIF_BBB_GPCTL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_BBB_KRST0_Bits B;
} Ifx_CIF_BBB_KRST0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_BBB_KRST1_Bits B;
} Ifx_CIF_BBB_KRST1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_BBB_KRSTCLR_Bits B;
} Ifx_CIF_BBB_KRSTCLR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_BBB_MODID_Bits B;
} Ifx_CIF_BBB_MODID;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_CCL_Bits B;
} Ifx_CIF_CCL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_DP_CTRL_Bits B;
} Ifx_CIF_DP_CTRL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_DP_FLC_STAT_Bits B;
} Ifx_CIF_DP_FLC_STAT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_DP_PDIV_CTRL_Bits B;
} Ifx_CIF_DP_PDIV_CTRL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_DP_PDIV_STAT_Bits B;
} Ifx_CIF_DP_PDIV_STAT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_DP_TSC_STAT_Bits B;
} Ifx_CIF_DP_TSC_STAT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_DP_UDS_Bits B;
} Ifx_CIF_DP_UDS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_DPCL_Bits B;
} Ifx_CIF_DPCL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_EP_IC_CTRL_Bits B;
} Ifx_CIF_EP_IC_CTRL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_EP_IC_DISPLACE_Bits B;
} Ifx_CIF_EP_IC_DISPLACE;



typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_EP_IC_H_OFFS_Bits B;
} Ifx_CIF_EP_IC_H_OFFS;



typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_EP_IC_H_OFFS_SHD_Bits B;
} Ifx_CIF_EP_IC_H_OFFS_SHD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_EP_IC_H_SIZE_Bits B;
} Ifx_CIF_EP_IC_H_SIZE;



typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_EP_IC_H_SIZE_SHD_Bits B;
} Ifx_CIF_EP_IC_H_SIZE_SHD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_EP_IC_MAX_DX_Bits B;
} Ifx_CIF_EP_IC_MAX_DX;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_EP_IC_MAX_DY_Bits B;
} Ifx_CIF_EP_IC_MAX_DY;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_EP_IC_RECENTER_Bits B;
} Ifx_CIF_EP_IC_RECENTER;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_EP_IC_V_OFFS_Bits B;
} Ifx_CIF_EP_IC_V_OFFS;



typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_EP_IC_V_OFFS_SHD_Bits B;
} Ifx_CIF_EP_IC_V_OFFS_SHD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_EP_IC_V_SIZE_Bits B;
} Ifx_CIF_EP_IC_V_SIZE;



typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_EP_IC_V_SIZE_SHD_Bits B;
} Ifx_CIF_EP_IC_V_SIZE_SHD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_ICCL_Bits B;
} Ifx_CIF_ICCL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_ID_Bits B;
} Ifx_CIF_ID;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_IRCL_Bits B;
} Ifx_CIF_IRCL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_ISP_ACQ_H_OFFS_Bits B;
} Ifx_CIF_ISP_ACQ_H_OFFS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_ISP_ACQ_H_SIZE_Bits B;
} Ifx_CIF_ISP_ACQ_H_SIZE;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_ISP_ACQ_NR_FRAMES_Bits B;
} Ifx_CIF_ISP_ACQ_NR_FRAMES;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_ISP_ACQ_PROP_Bits B;
} Ifx_CIF_ISP_ACQ_PROP;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_ISP_ACQ_V_OFFS_Bits B;
} Ifx_CIF_ISP_ACQ_V_OFFS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_ISP_ACQ_V_SIZE_Bits B;
} Ifx_CIF_ISP_ACQ_V_SIZE;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_ISP_CTRL_Bits B;
} Ifx_CIF_ISP_CTRL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_ISP_ERR_Bits B;
} Ifx_CIF_ISP_ERR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_ISP_ERR_CLR_Bits B;
} Ifx_CIF_ISP_ERR_CLR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_ISP_FLAGS_SHD_Bits B;
} Ifx_CIF_ISP_FLAGS_SHD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_ISP_FRAME_COUNT_Bits B;
} Ifx_CIF_ISP_FRAME_COUNT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_ISP_ICR_Bits B;
} Ifx_CIF_ISP_ICR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_ISP_IMSC_Bits B;
} Ifx_CIF_ISP_IMSC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_ISP_ISR_Bits B;
} Ifx_CIF_ISP_ISR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_ISP_MIS_Bits B;
} Ifx_CIF_ISP_MIS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_ISP_OUT_H_OFFS_Bits B;
} Ifx_CIF_ISP_OUT_H_OFFS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_ISP_OUT_H_OFFS_SHD_Bits B;
} Ifx_CIF_ISP_OUT_H_OFFS_SHD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_ISP_OUT_H_SIZE_Bits B;
} Ifx_CIF_ISP_OUT_H_SIZE;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_ISP_OUT_H_SIZE_SHD_Bits B;
} Ifx_CIF_ISP_OUT_H_SIZE_SHD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_ISP_OUT_V_OFFS_Bits B;
} Ifx_CIF_ISP_OUT_V_OFFS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_ISP_OUT_V_OFFS_SHD_Bits B;
} Ifx_CIF_ISP_OUT_V_OFFS_SHD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_ISP_OUT_V_SIZE_Bits B;
} Ifx_CIF_ISP_OUT_V_SIZE;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_ISP_OUT_V_SIZE_SHD_Bits B;
} Ifx_CIF_ISP_OUT_V_SIZE_SHD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_ISP_RIS_Bits B;
} Ifx_CIF_ISP_RIS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_ISPIS_CTRL_Bits B;
} Ifx_CIF_ISPIS_CTRL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_ISPIS_DISPLACE_Bits B;
} Ifx_CIF_ISPIS_DISPLACE;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_ISPIS_H_OFFS_Bits B;
} Ifx_CIF_ISPIS_H_OFFS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_ISPIS_H_OFFS_SHD_Bits B;
} Ifx_CIF_ISPIS_H_OFFS_SHD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_ISPIS_H_SIZE_Bits B;
} Ifx_CIF_ISPIS_H_SIZE;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_ISPIS_H_SIZE_SHD_Bits B;
} Ifx_CIF_ISPIS_H_SIZE_SHD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_ISPIS_MAX_DX_Bits B;
} Ifx_CIF_ISPIS_MAX_DX;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_ISPIS_MAX_DY_Bits B;
} Ifx_CIF_ISPIS_MAX_DY;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_ISPIS_RECENTER_Bits B;
} Ifx_CIF_ISPIS_RECENTER;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_ISPIS_V_OFFS_Bits B;
} Ifx_CIF_ISPIS_V_OFFS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_ISPIS_V_OFFS_SHD_Bits B;
} Ifx_CIF_ISPIS_V_OFFS_SHD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_ISPIS_V_SIZE_Bits B;
} Ifx_CIF_ISPIS_V_SIZE;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_ISPIS_V_SIZE_SHD_Bits B;
} Ifx_CIF_ISPIS_V_SIZE_SHD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_JPE_AC_TABLE_SELECT_Bits B;
} Ifx_CIF_JPE_AC_TABLE_SELECT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_JPE_CBCR_SCALE_EN_Bits B;
} Ifx_CIF_JPE_CBCR_SCALE_EN;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_JPE_DC_TABLE_SELECT_Bits B;
} Ifx_CIF_JPE_DC_TABLE_SELECT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_JPE_DEBUG_Bits B;
} Ifx_CIF_JPE_DEBUG;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_JPE_ENC_HSIZE_Bits B;
} Ifx_CIF_JPE_ENC_HSIZE;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_JPE_ENC_VSIZE_Bits B;
} Ifx_CIF_JPE_ENC_VSIZE;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_JPE_ENCODE_Bits B;
} Ifx_CIF_JPE_ENCODE;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_JPE_ENCODE_MODE_Bits B;
} Ifx_CIF_JPE_ENCODE_MODE;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_JPE_ENCODER_BUSY_Bits B;
} Ifx_CIF_JPE_ENCODER_BUSY;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_JPE_ERROR_ICR_Bits B;
} Ifx_CIF_JPE_ERROR_ICR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_JPE_ERROR_IMR_Bits B;
} Ifx_CIF_JPE_ERROR_IMR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_JPE_ERROR_ISR_Bits B;
} Ifx_CIF_JPE_ERROR_ISR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_JPE_ERROR_MIS_Bits B;
} Ifx_CIF_JPE_ERROR_MIS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_JPE_ERROR_RIS_Bits B;
} Ifx_CIF_JPE_ERROR_RIS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_JPE_GEN_HEADER_Bits B;
} Ifx_CIF_JPE_GEN_HEADER;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_JPE_HEADER_MODE_Bits B;
} Ifx_CIF_JPE_HEADER_MODE;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_JPE_INIT_Bits B;
} Ifx_CIF_JPE_INIT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_JPE_PIC_FORMAT_Bits B;
} Ifx_CIF_JPE_PIC_FORMAT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_JPE_RESTART_INTERVAL_Bits B;
} Ifx_CIF_JPE_RESTART_INTERVAL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_JPE_STATUS_ICR_Bits B;
} Ifx_CIF_JPE_STATUS_ICR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_JPE_STATUS_IMR_Bits B;
} Ifx_CIF_JPE_STATUS_IMR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_JPE_STATUS_ISR_Bits B;
} Ifx_CIF_JPE_STATUS_ISR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_JPE_STATUS_MIS_Bits B;
} Ifx_CIF_JPE_STATUS_MIS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_JPE_STATUS_RIS_Bits B;
} Ifx_CIF_JPE_STATUS_RIS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_JPE_TABLE_DATA_Bits B;
} Ifx_CIF_JPE_TABLE_DATA;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_JPE_TABLE_FLUSH_Bits B;
} Ifx_CIF_JPE_TABLE_FLUSH;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_JPE_TABLE_ID_Bits B;
} Ifx_CIF_JPE_TABLE_ID;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_JPE_TAC0_LEN_Bits B;
} Ifx_CIF_JPE_TAC0_LEN;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_JPE_TAC1_LEN_Bits B;
} Ifx_CIF_JPE_TAC1_LEN;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_JPE_TDC0_LEN_Bits B;
} Ifx_CIF_JPE_TDC0_LEN;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_JPE_TDC1_LEN_Bits B;
} Ifx_CIF_JPE_TDC1_LEN;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_JPE_TQ_U_SELECT_Bits B;
} Ifx_CIF_JPE_TQ_U_SELECT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_JPE_TQ_V_SELECT_Bits B;
} Ifx_CIF_JPE_TQ_V_SELECT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_JPE_TQ_Y_SELECT_Bits B;
} Ifx_CIF_JPE_TQ_Y_SELECT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_JPE_Y_SCALE_EN_Bits B;
} Ifx_CIF_JPE_Y_SCALE_EN;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_LDS_CTRL_Bits B;
} Ifx_CIF_LDS_CTRL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_LDS_FAC_Bits B;
} Ifx_CIF_LDS_FAC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_MI_BYTE_CNT_Bits B;
} Ifx_CIF_MI_BYTE_CNT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_MI_CTRL_Bits B;
} Ifx_CIF_MI_CTRL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_MI_CTRL_SHD_Bits B;
} Ifx_CIF_MI_CTRL_SHD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_MI_ICR_Bits B;
} Ifx_CIF_MI_ICR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_MI_IMSC_Bits B;
} Ifx_CIF_MI_IMSC;



typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_MI_INIT_Bits B;
} Ifx_CIF_MI_INIT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_MI_ISR_Bits B;
} Ifx_CIF_MI_ISR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_MI_MIS_Bits B;
} Ifx_CIF_MI_MIS;



typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_MI_MP_CB_BASE_AD_INIT_Bits B;
} Ifx_CIF_MI_MP_CB_BASE_AD_INIT;



typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_MI_MP_CB_BASE_AD_SHD_Bits B;
} Ifx_CIF_MI_MP_CB_BASE_AD_SHD;



typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_MI_MP_CB_OFFS_CNT_INIT_Bits B;
} Ifx_CIF_MI_MP_CB_OFFS_CNT_INIT;



typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_MI_MP_CB_OFFS_CNT_SHD_Bits B;
} Ifx_CIF_MI_MP_CB_OFFS_CNT_SHD;



typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_MI_MP_CB_OFFS_CNT_START_Bits B;
} Ifx_CIF_MI_MP_CB_OFFS_CNT_START;



typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_MI_MP_CB_SIZE_INIT_Bits B;
} Ifx_CIF_MI_MP_CB_SIZE_INIT;



typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_MI_MP_CB_SIZE_SHD_Bits B;
} Ifx_CIF_MI_MP_CB_SIZE_SHD;



typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_MI_MP_CR_BASE_AD_INIT_Bits B;
} Ifx_CIF_MI_MP_CR_BASE_AD_INIT;



typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_MI_MP_CR_BASE_AD_SHD_Bits B;
} Ifx_CIF_MI_MP_CR_BASE_AD_SHD;



typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_MI_MP_CR_OFFS_CNT_INIT_Bits B;
} Ifx_CIF_MI_MP_CR_OFFS_CNT_INIT;



typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_MI_MP_CR_OFFS_CNT_SHD_Bits B;
} Ifx_CIF_MI_MP_CR_OFFS_CNT_SHD;



typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_MI_MP_CR_OFFS_CNT_START_Bits B;
} Ifx_CIF_MI_MP_CR_OFFS_CNT_START;



typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_MI_MP_CR_SIZE_INIT_Bits B;
} Ifx_CIF_MI_MP_CR_SIZE_INIT;



typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_MI_MP_CR_SIZE_SHD_Bits B;
} Ifx_CIF_MI_MP_CR_SIZE_SHD;



typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_MI_MP_Y_BASE_AD_INIT_Bits B;
} Ifx_CIF_MI_MP_Y_BASE_AD_INIT;



typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_MI_MP_Y_BASE_AD_SHD_Bits B;
} Ifx_CIF_MI_MP_Y_BASE_AD_SHD;



typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_MI_MP_Y_IRQ_OFFS_INIT_Bits B;
} Ifx_CIF_MI_MP_Y_IRQ_OFFS_INIT;



typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_MI_MP_Y_IRQ_OFFS_SHD_Bits B;
} Ifx_CIF_MI_MP_Y_IRQ_OFFS_SHD;



typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_MI_MP_Y_OFFS_CNT_INIT_Bits B;
} Ifx_CIF_MI_MP_Y_OFFS_CNT_INIT;



typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_MI_MP_Y_OFFS_CNT_SHD_Bits B;
} Ifx_CIF_MI_MP_Y_OFFS_CNT_SHD;



typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_MI_MP_Y_OFFS_CNT_START_Bits B;
} Ifx_CIF_MI_MP_Y_OFFS_CNT_START;



typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_MI_MP_Y_SIZE_INIT_Bits B;
} Ifx_CIF_MI_MP_Y_SIZE_INIT;



typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_MI_MP_Y_SIZE_SHD_Bits B;
} Ifx_CIF_MI_MP_Y_SIZE_SHD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_MI_RIS_Bits B;
} Ifx_CIF_MI_RIS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_MI_STATUS_Bits B;
} Ifx_CIF_MI_STATUS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_MI_STATUS_CLR_Bits B;
} Ifx_CIF_MI_STATUS_CLR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_MIEP_CH_BASE_AD_INIT_Bits B;
} Ifx_CIF_MIEP_CH_BASE_AD_INIT;



typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_MIEP_CH_BASE_AD_SHD_Bits B;
} Ifx_CIF_MIEP_CH_BASE_AD_SHD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_MIEP_CH_CTRL_Bits B;
} Ifx_CIF_MIEP_CH_CTRL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_MIEP_CH_CTRL_SHD_Bits B;
} Ifx_CIF_MIEP_CH_CTRL_SHD;



typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_MIEP_CH_INIT_Bits B;
} Ifx_CIF_MIEP_CH_INIT;



typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_MIEP_CH_IRQ_OFFS_INIT_Bits B;
} Ifx_CIF_MIEP_CH_IRQ_OFFS_INIT;



typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_MIEP_CH_IRQ_OFFS_SHD_Bits B;
} Ifx_CIF_MIEP_CH_IRQ_OFFS_SHD;



typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_MIEP_CH_OFFS_CNT_INIT_Bits B;
} Ifx_CIF_MIEP_CH_OFFS_CNT_INIT;



typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_MIEP_CH_OFFS_CNT_SHD_Bits B;
} Ifx_CIF_MIEP_CH_OFFS_CNT_SHD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_MIEP_CH_OFFS_CNT_START_Bits B;
} Ifx_CIF_MIEP_CH_OFFS_CNT_START;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_MIEP_CH_SIZE_INIT_Bits B;
} Ifx_CIF_MIEP_CH_SIZE_INIT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_MIEP_CH_SIZE_SHD_Bits B;
} Ifx_CIF_MIEP_CH_SIZE_SHD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_MIEP_ICR_Bits B;
} Ifx_CIF_MIEP_ICR;



typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_MIEP_IMSC_Bits B;
} Ifx_CIF_MIEP_IMSC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_MIEP_ISR_Bits B;
} Ifx_CIF_MIEP_ISR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_MIEP_MIS_Bits B;
} Ifx_CIF_MIEP_MIS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_MIEP_RIS_Bits B;
} Ifx_CIF_MIEP_RIS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_MIEP_STA_ERR_Bits B;
} Ifx_CIF_MIEP_STA_ERR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_MIEP_STA_ERR_CLR_Bits B;
} Ifx_CIF_MIEP_STA_ERR_CLR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_WD_CTRL_Bits B;
} Ifx_CIF_WD_CTRL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_WD_H_TIMEOUT_Bits B;
} Ifx_CIF_WD_H_TIMEOUT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_WD_ICR_Bits B;
} Ifx_CIF_WD_ICR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_WD_IMSC_Bits B;
} Ifx_CIF_WD_IMSC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_WD_ISR_Bits B;
} Ifx_CIF_WD_ISR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_WD_MIS_Bits B;
} Ifx_CIF_WD_MIS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_WD_RIS_Bits B;
} Ifx_CIF_WD_RIS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CIF_WD_V_TIMEOUT_Bits B;
} Ifx_CIF_WD_V_TIMEOUT;
# 3084 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCif_regdef.h" 3
typedef volatile struct _Ifx_CIF_MIEP_CH
{
    Ifx_CIF_MIEP_CH_CTRL CTRL;
    Ifx_CIF_MIEP_CH_INIT INIT;
    Ifx_CIF_MIEP_CH_BASE_AD_INIT BASE_AD_INIT;
    Ifx_CIF_MIEP_CH_SIZE_INIT SIZE_INIT;
    Ifx_CIF_MIEP_CH_OFFS_CNT_INIT OFFS_CNT_INIT;
    Ifx_CIF_MIEP_CH_OFFS_CNT_START OFFS_CNT_START;
    Ifx_CIF_MIEP_CH_IRQ_OFFS_INIT IRQ_OFFS_INIT;
    Ifx_CIF_MIEP_CH_CTRL_SHD CTRL_SHD;
    Ifx_CIF_MIEP_CH_BASE_AD_SHD BASE_AD_SHD;
    Ifx_CIF_MIEP_CH_SIZE_SHD SIZE_SHD;
    Ifx_CIF_MIEP_CH_OFFS_CNT_SHD OFFS_CNT_SHD;
    Ifx_CIF_MIEP_CH_IRQ_OFFS_SHD IRQ_OFFS_SHD;
    unsigned char reserved_30[208];
} Ifx_CIF_MIEP_CH;
# 3112 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCif_regdef.h" 3
typedef volatile struct _Ifx_CIF_BBB
{
    Ifx_CIF_BBB_CLC CLC;
    Ifx_CIF_BBB_MODID MODID;
    Ifx_CIF_BBB_GPCTL GPCTL;
    Ifx_CIF_BBB_ACCEN0 ACCEN0;
    Ifx_CIF_BBB_ACCEN1 ACCEN1;
    Ifx_CIF_BBB_KRST0 KRST0;
    Ifx_CIF_BBB_KRST1 KRST1;
    Ifx_CIF_BBB_KRSTCLR KRSTCLR;
} Ifx_CIF_BBB;


typedef volatile struct _Ifx_CIF_DP
{
    Ifx_CIF_DP_CTRL CTRL;
    Ifx_CIF_DP_PDIV_CTRL PDIV_CTRL;
    Ifx_CIF_DP_FLC_STAT FLC_STAT;
    Ifx_CIF_DP_PDIV_STAT PDIV_STAT;
    Ifx_CIF_DP_TSC_STAT TSC_STAT;
    Ifx_CIF_DP_UDS UDS_1S[8];
} Ifx_CIF_DP;


typedef volatile struct _Ifx_CIF_EP_IC
{
    Ifx_CIF_EP_IC_CTRL CTRL;
    Ifx_CIF_EP_IC_RECENTER RECENTER;
    Ifx_CIF_EP_IC_H_OFFS H_OFFS;
    Ifx_CIF_EP_IC_V_OFFS V_OFFS;
    Ifx_CIF_EP_IC_H_SIZE H_SIZE;
    Ifx_CIF_EP_IC_V_SIZE V_SIZE;
    Ifx_CIF_EP_IC_MAX_DX MAX_DX;
    Ifx_CIF_EP_IC_MAX_DY MAX_DY;
    Ifx_CIF_EP_IC_DISPLACE DISPLACE;
    Ifx_CIF_EP_IC_H_OFFS_SHD H_OFFS_SHD;
    Ifx_CIF_EP_IC_V_OFFS_SHD V_OFFS_SHD;
    Ifx_CIF_EP_IC_H_SIZE_SHD H_SIZE_SHD;
    Ifx_CIF_EP_IC_V_SIZE_SHD V_SIZE_SHD;
    unsigned char reserved_34[204];
} Ifx_CIF_EP_IC;


typedef volatile struct _Ifx_CIF_ISP
{
    Ifx_CIF_ISP_CTRL CTRL;
    Ifx_CIF_ISP_ACQ_PROP ACQ_PROP;
    Ifx_CIF_ISP_ACQ_H_OFFS ACQ_H_OFFS;
    Ifx_CIF_ISP_ACQ_V_OFFS ACQ_V_OFFS;
    Ifx_CIF_ISP_ACQ_H_SIZE ACQ_H_SIZE;
    Ifx_CIF_ISP_ACQ_V_SIZE ACQ_V_SIZE;
    Ifx_CIF_ISP_ACQ_NR_FRAMES ACQ_NR_FRAMES;
    unsigned char reserved_1C[376];
    Ifx_CIF_ISP_OUT_H_OFFS OUT_H_OFFS;
    Ifx_CIF_ISP_OUT_V_OFFS OUT_V_OFFS;
    Ifx_CIF_ISP_OUT_H_SIZE OUT_H_SIZE;
    Ifx_CIF_ISP_OUT_V_SIZE OUT_V_SIZE;
    unsigned char reserved_1A4[4];
    Ifx_CIF_ISP_FLAGS_SHD FLAGS_SHD;
    Ifx_CIF_ISP_OUT_H_OFFS_SHD OUT_H_OFFS_SHD;
    Ifx_CIF_ISP_OUT_V_OFFS_SHD OUT_V_OFFS_SHD;
    Ifx_CIF_ISP_OUT_H_SIZE_SHD OUT_H_SIZE_SHD;
    Ifx_CIF_ISP_OUT_V_SIZE_SHD OUT_V_SIZE_SHD;
    Ifx_CIF_ISP_IMSC IMSC;
    Ifx_CIF_ISP_RIS RIS;
    Ifx_CIF_ISP_MIS MIS;
    Ifx_CIF_ISP_ICR ICR;
    Ifx_CIF_ISP_ISR ISR;
    unsigned char reserved_1D0[108];
    Ifx_CIF_ISP_ERR ERR;
    Ifx_CIF_ISP_ERR_CLR ERR_CLR;
    Ifx_CIF_ISP_FRAME_COUNT FRAME_COUNT;
} Ifx_CIF_ISP;


typedef volatile struct _Ifx_CIF_ISPIS
{
    Ifx_CIF_ISPIS_CTRL CTRL;
    Ifx_CIF_ISPIS_RECENTER RECENTER;
    Ifx_CIF_ISPIS_H_OFFS H_OFFS;
    Ifx_CIF_ISPIS_V_OFFS V_OFFS;
    Ifx_CIF_ISPIS_H_SIZE H_SIZE;
    Ifx_CIF_ISPIS_V_SIZE V_SIZE;
    Ifx_CIF_ISPIS_MAX_DX MAX_DX;
    Ifx_CIF_ISPIS_MAX_DY MAX_DY;
    Ifx_CIF_ISPIS_DISPLACE DISPLACE;
    Ifx_CIF_ISPIS_H_OFFS_SHD H_OFFS_SHD;
    Ifx_CIF_ISPIS_V_OFFS_SHD V_OFFS_SHD;
    Ifx_CIF_ISPIS_H_SIZE_SHD H_SIZE_SHD;
    Ifx_CIF_ISPIS_V_SIZE_SHD V_SIZE_SHD;
} Ifx_CIF_ISPIS;


typedef volatile struct _Ifx_CIF_JPE
{
    Ifx_CIF_JPE_GEN_HEADER GEN_HEADER;
    Ifx_CIF_JPE_ENCODE ENCODE;
    Ifx_CIF_JPE_INIT INIT;
    Ifx_CIF_JPE_Y_SCALE_EN Y_SCALE_EN;
    Ifx_CIF_JPE_CBCR_SCALE_EN CBCR_SCALE_EN;
    Ifx_CIF_JPE_TABLE_FLUSH TABLE_FLUSH;
    Ifx_CIF_JPE_ENC_HSIZE ENC_HSIZE;
    Ifx_CIF_JPE_ENC_VSIZE ENC_VSIZE;
    Ifx_CIF_JPE_PIC_FORMAT PIC_FORMAT;
    Ifx_CIF_JPE_RESTART_INTERVAL RESTART_INTERVAL;
    Ifx_CIF_JPE_TQ_Y_SELECT TQ_Y_SELECT;
    Ifx_CIF_JPE_TQ_U_SELECT TQ_U_SELECT;
    Ifx_CIF_JPE_TQ_V_SELECT TQ_V_SELECT;
    Ifx_CIF_JPE_DC_TABLE_SELECT DC_TABLE_SELECT;
    Ifx_CIF_JPE_AC_TABLE_SELECT AC_TABLE_SELECT;
    Ifx_CIF_JPE_TABLE_DATA TABLE_DATA;
    Ifx_CIF_JPE_TABLE_ID TABLE_ID;
    Ifx_CIF_JPE_TAC0_LEN TAC0_LEN;
    Ifx_CIF_JPE_TDC0_LEN TDC0_LEN;
    Ifx_CIF_JPE_TAC1_LEN TAC1_LEN;
    Ifx_CIF_JPE_TDC1_LEN TDC1_LEN;
    unsigned char reserved_54[4];
    Ifx_CIF_JPE_ENCODER_BUSY ENCODER_BUSY;
    Ifx_CIF_JPE_HEADER_MODE HEADER_MODE;
    Ifx_CIF_JPE_ENCODE_MODE ENCODE_MODE;
    Ifx_CIF_JPE_DEBUG DEBUG;
    Ifx_CIF_JPE_ERROR_IMR ERROR_IMR;
    Ifx_CIF_JPE_ERROR_RIS ERROR_RIS;
    Ifx_CIF_JPE_ERROR_MIS ERROR_MIS;
    Ifx_CIF_JPE_ERROR_ICR ERROR_ICR;
    Ifx_CIF_JPE_ERROR_ISR ERROR_ISR;
    Ifx_CIF_JPE_STATUS_IMR STATUS_IMR;
    Ifx_CIF_JPE_STATUS_RIS STATUS_RIS;
    Ifx_CIF_JPE_STATUS_MIS STATUS_MIS;
    Ifx_CIF_JPE_STATUS_ICR STATUS_ICR;
    Ifx_CIF_JPE_STATUS_ISR STATUS_ISR;
} Ifx_CIF_JPE;


typedef volatile struct _Ifx_CIF_LDS
{
    Ifx_CIF_LDS_CTRL CTRL;
    Ifx_CIF_LDS_FAC FAC;
} Ifx_CIF_LDS;


typedef volatile struct _Ifx_CIF_MI
{
    Ifx_CIF_MI_CTRL CTRL;
    Ifx_CIF_MI_INIT INIT;
    Ifx_CIF_MI_MP_Y_BASE_AD_INIT MP_Y_BASE_AD_INIT;
    Ifx_CIF_MI_MP_Y_SIZE_INIT MP_Y_SIZE_INIT;
    Ifx_CIF_MI_MP_Y_OFFS_CNT_INIT MP_Y_OFFS_CNT_INIT;
    Ifx_CIF_MI_MP_Y_OFFS_CNT_START MP_Y_OFFS_CNT_START;
    Ifx_CIF_MI_MP_Y_IRQ_OFFS_INIT MP_Y_IRQ_OFFS_INIT;
    Ifx_CIF_MI_MP_CB_BASE_AD_INIT MP_CB_BASE_AD_INIT;
    Ifx_CIF_MI_MP_CB_SIZE_INIT MP_CB_SIZE_INIT;
    Ifx_CIF_MI_MP_CB_OFFS_CNT_INIT MP_CB_OFFS_CNT_INIT;
    Ifx_CIF_MI_MP_CB_OFFS_CNT_START MP_CB_OFFS_CNT_START;
    Ifx_CIF_MI_MP_CR_BASE_AD_INIT MP_CR_BASE_AD_INIT;
    Ifx_CIF_MI_MP_CR_SIZE_INIT MP_CR_SIZE_INIT;
    Ifx_CIF_MI_MP_CR_OFFS_CNT_INIT MP_CR_OFFS_CNT_INIT;
    Ifx_CIF_MI_MP_CR_OFFS_CNT_START MP_CR_OFFS_CNT_START;
    unsigned char reserved_3C[52];
    Ifx_CIF_MI_BYTE_CNT BYTE_CNT;
    Ifx_CIF_MI_CTRL_SHD CTRL_SHD;
    Ifx_CIF_MI_MP_Y_BASE_AD_SHD MP_Y_BASE_AD_SHD;
    Ifx_CIF_MI_MP_Y_SIZE_SHD MP_Y_SIZE_SHD;
    Ifx_CIF_MI_MP_Y_OFFS_CNT_SHD MP_Y_OFFS_CNT_SHD;
    Ifx_CIF_MI_MP_Y_IRQ_OFFS_SHD MP_Y_IRQ_OFFS_SHD;
    Ifx_CIF_MI_MP_CB_BASE_AD_SHD MP_CB_BASE_AD_SHD;
    Ifx_CIF_MI_MP_CB_SIZE_SHD MP_CB_SIZE_SHD;
    Ifx_CIF_MI_MP_CB_OFFS_CNT_SHD MP_CB_OFFS_CNT_SHD;
    Ifx_CIF_MI_MP_CR_BASE_AD_SHD MP_CR_BASE_AD_SHD;
    Ifx_CIF_MI_MP_CR_SIZE_SHD MP_CR_SIZE_SHD;
    Ifx_CIF_MI_MP_CR_OFFS_CNT_SHD MP_CR_OFFS_CNT_SHD;
    unsigned char reserved_A0[88];
    Ifx_CIF_MI_IMSC IMSC;
    Ifx_CIF_MI_RIS RIS;
    Ifx_CIF_MI_MIS MIS;
    Ifx_CIF_MI_ICR ICR;
    Ifx_CIF_MI_ISR ISR;
    Ifx_CIF_MI_STATUS STATUS;
    Ifx_CIF_MI_STATUS_CLR STATUS_CLR;
} Ifx_CIF_MI;


typedef volatile struct _Ifx_CIF_MIEP
{
    Ifx_CIF_MIEP_STA_ERR STA_ERR;
    Ifx_CIF_MIEP_STA_ERR_CLR STA_ERR_CLR;
    Ifx_CIF_MIEP_IMSC IMSC;
    Ifx_CIF_MIEP_RIS RIS;
    Ifx_CIF_MIEP_MIS MIS;
    Ifx_CIF_MIEP_ICR ICR;
    Ifx_CIF_MIEP_ISR ISR;
    unsigned char reserved_1C[228];
    Ifx_CIF_MIEP_CH CH_1S[5];
} Ifx_CIF_MIEP;


typedef volatile struct _Ifx_CIF_WD
{
    Ifx_CIF_WD_CTRL CTRL;
    Ifx_CIF_WD_V_TIMEOUT V_TIMEOUT;
    Ifx_CIF_WD_H_TIMEOUT H_TIMEOUT;
    Ifx_CIF_WD_IMSC IMSC;
    Ifx_CIF_WD_RIS RIS;
    Ifx_CIF_WD_MIS MIS;
    Ifx_CIF_WD_ICR ICR;
    Ifx_CIF_WD_ISR ISR;
} Ifx_CIF_WD;
# 3331 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCif_regdef.h" 3
typedef volatile struct _Ifx_CIF
{
    Ifx_CIF_BBB BBB;
    unsigned char reserved_20[224];
    Ifx_CIF_CCL CCL;
    unsigned char reserved_104[4];
    Ifx_CIF_ID ID;
    unsigned char reserved_10C[4];
    Ifx_CIF_ICCL ICCL;
    Ifx_CIF_IRCL IRCL;
    Ifx_CIF_DPCL DPCL;
    unsigned char reserved_11C[996];
    Ifx_CIF_ISP ISP;
    unsigned char reserved_748[3512];
    Ifx_CIF_MI MI;
    unsigned char reserved_1614[748];
    Ifx_CIF_JPE JPE;
    unsigned char reserved_1990[2672];
    Ifx_CIF_ISPIS ISPIS;
    unsigned char reserved_2434[204];
    Ifx_CIF_WD WD;
    unsigned char reserved_2520[224];
    Ifx_CIF_LDS LDS;
    unsigned char reserved_2608[504];
    Ifx_CIF_DP DP;
    unsigned char reserved_2834[460];
    Ifx_CIF_EP_IC EP_IC_1S[5];
    unsigned char reserved_2F00[1536];
    Ifx_CIF_MIEP MIEP;
    unsigned char reserved_3B00[1];
} Ifx_CIF;
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCif_reg.h" 2 3





#define MODULE_CIF (*(Ifx_CIF*)0xF90E1F00u)







#define CIF_BBB_ACCEN0 (*(volatile Ifx_CIF_BBB_ACCEN0*)0xF90E1F0Cu)




#define CIFBBB_ACCEN0 (CIF_BBB_ACCEN0)


#define CIF_BBB_ACCEN1 (*(volatile Ifx_CIF_BBB_ACCEN1*)0xF90E1F10u)




#define CIFBBB_ACCEN1 (CIF_BBB_ACCEN1)


#define CIF_BBB_CLC (*(volatile Ifx_CIF_BBB_CLC*)0xF90E1F00u)




#define CIFBBB_CLC (CIF_BBB_CLC)


#define CIF_BBB_GPCTL (*(volatile Ifx_CIF_BBB_GPCTL*)0xF90E1F08u)




#define CIFBBB_GPCTL (CIF_BBB_GPCTL)


#define CIF_BBB_KRST0 (*(volatile Ifx_CIF_BBB_KRST0*)0xF90E1F14u)




#define CIFBBB_KRST0 (CIF_BBB_KRST0)


#define CIF_BBB_KRST1 (*(volatile Ifx_CIF_BBB_KRST1*)0xF90E1F18u)




#define CIFBBB_KRST1 (CIF_BBB_KRST1)


#define CIF_BBB_KRSTCLR (*(volatile Ifx_CIF_BBB_KRSTCLR*)0xF90E1F1Cu)




#define CIFBBB_KRSTCLR (CIF_BBB_KRSTCLR)


#define CIF_BBB_MODID (*(volatile Ifx_CIF_BBB_MODID*)0xF90E1F04u)




#define CIFBBB_MODID (CIF_BBB_MODID)


#define CIF_CCL (*(volatile Ifx_CIF_CCL*)0xF90E2000u)


#define CIF_DP_CTRL (*(volatile Ifx_CIF_DP_CTRL*)0xF90E4700u)




#define CIFDP_CTRL (CIF_DP_CTRL)


#define CIF_DP_FLC_STAT (*(volatile Ifx_CIF_DP_FLC_STAT*)0xF90E4708u)




#define CIFDP_FLC_STAT (CIF_DP_FLC_STAT)


#define CIF_DP_PDIV_CTRL (*(volatile Ifx_CIF_DP_PDIV_CTRL*)0xF90E4704u)




#define CIFDP_PDIV_CTRL (CIF_DP_PDIV_CTRL)


#define CIF_DP_PDIV_STAT (*(volatile Ifx_CIF_DP_PDIV_STAT*)0xF90E470Cu)




#define CIFDP_PDIV_STAT (CIF_DP_PDIV_STAT)


#define CIF_DP_TSC_STAT (*(volatile Ifx_CIF_DP_TSC_STAT*)0xF90E4710u)




#define CIFDP_TSC_STAT (CIF_DP_TSC_STAT)




#define CIF_DP_UDS_1S0 (*(volatile Ifx_CIF_DP_UDS*)0xF90E4714u)




#define CIFDP_UDS_1 (CIF_DP_UDS_1S0)




#define CIF_DP_UDS_1S1 (*(volatile Ifx_CIF_DP_UDS*)0xF90E4718u)




#define CIFDP_UDS_2 (CIF_DP_UDS_1S1)




#define CIF_DP_UDS_1S2 (*(volatile Ifx_CIF_DP_UDS*)0xF90E471Cu)




#define CIFDP_UDS_3 (CIF_DP_UDS_1S2)




#define CIF_DP_UDS_1S3 (*(volatile Ifx_CIF_DP_UDS*)0xF90E4720u)




#define CIFDP_UDS_4 (CIF_DP_UDS_1S3)




#define CIF_DP_UDS_1S4 (*(volatile Ifx_CIF_DP_UDS*)0xF90E4724u)




#define CIFDP_UDS_5 (CIF_DP_UDS_1S4)




#define CIF_DP_UDS_1S5 (*(volatile Ifx_CIF_DP_UDS*)0xF90E4728u)




#define CIFDP_UDS_6 (CIF_DP_UDS_1S5)




#define CIF_DP_UDS_1S6 (*(volatile Ifx_CIF_DP_UDS*)0xF90E472Cu)




#define CIFDP_UDS_7 (CIF_DP_UDS_1S6)




#define CIF_DP_UDS_1S7 (*(volatile Ifx_CIF_DP_UDS*)0xF90E4730u)




#define CIFDP_UDS_8 (CIF_DP_UDS_1S7)


#define CIF_DPCL (*(volatile Ifx_CIF_DPCL*)0xF90E2018u)


#define CIF_EP_IC_1S0_CTRL (*(volatile Ifx_CIF_EP_IC_CTRL*)0xF90E4900u)




#define CIFEP_1_IC_CTRL (CIF_EP_IC_1S0_CTRL)


#define CIF_EP_IC_1S0_DISPLACE (*(volatile Ifx_CIF_EP_IC_DISPLACE*)0xF90E4920u)




#define CIFEP_1_IC_DISPLACE (CIF_EP_IC_1S0_DISPLACE)



#define CIF_EP_IC_1S0_H_OFFS (*(volatile Ifx_CIF_EP_IC_H_OFFS*)0xF90E4908u)




#define CIFEP_1_IC_H_OFFS (CIF_EP_IC_1S0_H_OFFS)



#define CIF_EP_IC_1S0_H_OFFS_SHD (*(volatile Ifx_CIF_EP_IC_H_OFFS_SHD*)0xF90E4924u)




#define CIFEP_1_IC_H_OFFS_SHD (CIF_EP_IC_1S0_H_OFFS_SHD)



#define CIF_EP_IC_1S0_H_SIZE (*(volatile Ifx_CIF_EP_IC_H_SIZE*)0xF90E4910u)




#define CIFEP_1_IC_H_SIZE (CIF_EP_IC_1S0_H_SIZE)



#define CIF_EP_IC_1S0_H_SIZE_SHD (*(volatile Ifx_CIF_EP_IC_H_SIZE_SHD*)0xF90E492Cu)




#define CIFEP_1_IC_H_SIZE_SHD (CIF_EP_IC_1S0_H_SIZE_SHD)



#define CIF_EP_IC_1S0_MAX_DX (*(volatile Ifx_CIF_EP_IC_MAX_DX*)0xF90E4918u)




#define CIFEP_1_IC_MAX_DX (CIF_EP_IC_1S0_MAX_DX)



#define CIF_EP_IC_1S0_MAX_DY (*(volatile Ifx_CIF_EP_IC_MAX_DY*)0xF90E491Cu)




#define CIFEP_1_IC_MAX_DY (CIF_EP_IC_1S0_MAX_DY)


#define CIF_EP_IC_1S0_RECENTER (*(volatile Ifx_CIF_EP_IC_RECENTER*)0xF90E4904u)




#define CIFEP_1_IC_RECENTER (CIF_EP_IC_1S0_RECENTER)



#define CIF_EP_IC_1S0_V_OFFS (*(volatile Ifx_CIF_EP_IC_V_OFFS*)0xF90E490Cu)




#define CIFEP_1_IC_V_OFFS (CIF_EP_IC_1S0_V_OFFS)



#define CIF_EP_IC_1S0_V_OFFS_SHD (*(volatile Ifx_CIF_EP_IC_V_OFFS_SHD*)0xF90E4928u)




#define CIFEP_1_IC_V_OFFS_SHD (CIF_EP_IC_1S0_V_OFFS_SHD)



#define CIF_EP_IC_1S0_V_SIZE (*(volatile Ifx_CIF_EP_IC_V_SIZE*)0xF90E4914u)




#define CIFEP_1_IC_V_SIZE (CIF_EP_IC_1S0_V_SIZE)



#define CIF_EP_IC_1S0_V_SIZE_SHD (*(volatile Ifx_CIF_EP_IC_V_SIZE_SHD*)0xF90E4930u)




#define CIFEP_1_IC_V_SIZE_SHD (CIF_EP_IC_1S0_V_SIZE_SHD)


#define CIF_EP_IC_1S1_CTRL (*(volatile Ifx_CIF_EP_IC_CTRL*)0xF90E4A00u)




#define CIFEP_2_IC_CTRL (CIF_EP_IC_1S1_CTRL)


#define CIF_EP_IC_1S1_DISPLACE (*(volatile Ifx_CIF_EP_IC_DISPLACE*)0xF90E4A20u)




#define CIFEP_2_IC_DISPLACE (CIF_EP_IC_1S1_DISPLACE)



#define CIF_EP_IC_1S1_H_OFFS (*(volatile Ifx_CIF_EP_IC_H_OFFS*)0xF90E4A08u)




#define CIFEP_2_IC_H_OFFS (CIF_EP_IC_1S1_H_OFFS)



#define CIF_EP_IC_1S1_H_OFFS_SHD (*(volatile Ifx_CIF_EP_IC_H_OFFS_SHD*)0xF90E4A24u)




#define CIFEP_2_IC_H_OFFS_SHD (CIF_EP_IC_1S1_H_OFFS_SHD)



#define CIF_EP_IC_1S1_H_SIZE (*(volatile Ifx_CIF_EP_IC_H_SIZE*)0xF90E4A10u)




#define CIFEP_2_IC_H_SIZE (CIF_EP_IC_1S1_H_SIZE)



#define CIF_EP_IC_1S1_H_SIZE_SHD (*(volatile Ifx_CIF_EP_IC_H_SIZE_SHD*)0xF90E4A2Cu)




#define CIFEP_2_IC_H_SIZE_SHD (CIF_EP_IC_1S1_H_SIZE_SHD)



#define CIF_EP_IC_1S1_MAX_DX (*(volatile Ifx_CIF_EP_IC_MAX_DX*)0xF90E4A18u)




#define CIFEP_2_IC_MAX_DX (CIF_EP_IC_1S1_MAX_DX)



#define CIF_EP_IC_1S1_MAX_DY (*(volatile Ifx_CIF_EP_IC_MAX_DY*)0xF90E4A1Cu)




#define CIFEP_2_IC_MAX_DY (CIF_EP_IC_1S1_MAX_DY)


#define CIF_EP_IC_1S1_RECENTER (*(volatile Ifx_CIF_EP_IC_RECENTER*)0xF90E4A04u)




#define CIFEP_2_IC_RECENTER (CIF_EP_IC_1S1_RECENTER)



#define CIF_EP_IC_1S1_V_OFFS (*(volatile Ifx_CIF_EP_IC_V_OFFS*)0xF90E4A0Cu)




#define CIFEP_2_IC_V_OFFS (CIF_EP_IC_1S1_V_OFFS)



#define CIF_EP_IC_1S1_V_OFFS_SHD (*(volatile Ifx_CIF_EP_IC_V_OFFS_SHD*)0xF90E4A28u)




#define CIFEP_2_IC_V_OFFS_SHD (CIF_EP_IC_1S1_V_OFFS_SHD)



#define CIF_EP_IC_1S1_V_SIZE (*(volatile Ifx_CIF_EP_IC_V_SIZE*)0xF90E4A14u)




#define CIFEP_2_IC_V_SIZE (CIF_EP_IC_1S1_V_SIZE)



#define CIF_EP_IC_1S1_V_SIZE_SHD (*(volatile Ifx_CIF_EP_IC_V_SIZE_SHD*)0xF90E4A30u)




#define CIFEP_2_IC_V_SIZE_SHD (CIF_EP_IC_1S1_V_SIZE_SHD)


#define CIF_EP_IC_1S2_CTRL (*(volatile Ifx_CIF_EP_IC_CTRL*)0xF90E4B00u)




#define CIFEP_3_IC_CTRL (CIF_EP_IC_1S2_CTRL)


#define CIF_EP_IC_1S2_DISPLACE (*(volatile Ifx_CIF_EP_IC_DISPLACE*)0xF90E4B20u)




#define CIFEP_3_IC_DISPLACE (CIF_EP_IC_1S2_DISPLACE)



#define CIF_EP_IC_1S2_H_OFFS (*(volatile Ifx_CIF_EP_IC_H_OFFS*)0xF90E4B08u)




#define CIFEP_3_IC_H_OFFS (CIF_EP_IC_1S2_H_OFFS)



#define CIF_EP_IC_1S2_H_OFFS_SHD (*(volatile Ifx_CIF_EP_IC_H_OFFS_SHD*)0xF90E4B24u)




#define CIFEP_3_IC_H_OFFS_SHD (CIF_EP_IC_1S2_H_OFFS_SHD)



#define CIF_EP_IC_1S2_H_SIZE (*(volatile Ifx_CIF_EP_IC_H_SIZE*)0xF90E4B10u)




#define CIFEP_3_IC_H_SIZE (CIF_EP_IC_1S2_H_SIZE)



#define CIF_EP_IC_1S2_H_SIZE_SHD (*(volatile Ifx_CIF_EP_IC_H_SIZE_SHD*)0xF90E4B2Cu)




#define CIFEP_3_IC_H_SIZE_SHD (CIF_EP_IC_1S2_H_SIZE_SHD)



#define CIF_EP_IC_1S2_MAX_DX (*(volatile Ifx_CIF_EP_IC_MAX_DX*)0xF90E4B18u)




#define CIFEP_3_IC_MAX_DX (CIF_EP_IC_1S2_MAX_DX)



#define CIF_EP_IC_1S2_MAX_DY (*(volatile Ifx_CIF_EP_IC_MAX_DY*)0xF90E4B1Cu)




#define CIFEP_3_IC_MAX_DY (CIF_EP_IC_1S2_MAX_DY)


#define CIF_EP_IC_1S2_RECENTER (*(volatile Ifx_CIF_EP_IC_RECENTER*)0xF90E4B04u)




#define CIFEP_3_IC_RECENTER (CIF_EP_IC_1S2_RECENTER)



#define CIF_EP_IC_1S2_V_OFFS (*(volatile Ifx_CIF_EP_IC_V_OFFS*)0xF90E4B0Cu)




#define CIFEP_3_IC_V_OFFS (CIF_EP_IC_1S2_V_OFFS)



#define CIF_EP_IC_1S2_V_OFFS_SHD (*(volatile Ifx_CIF_EP_IC_V_OFFS_SHD*)0xF90E4B28u)




#define CIFEP_3_IC_V_OFFS_SHD (CIF_EP_IC_1S2_V_OFFS_SHD)



#define CIF_EP_IC_1S2_V_SIZE (*(volatile Ifx_CIF_EP_IC_V_SIZE*)0xF90E4B14u)




#define CIFEP_3_IC_V_SIZE (CIF_EP_IC_1S2_V_SIZE)



#define CIF_EP_IC_1S2_V_SIZE_SHD (*(volatile Ifx_CIF_EP_IC_V_SIZE_SHD*)0xF90E4B30u)




#define CIFEP_3_IC_V_SIZE_SHD (CIF_EP_IC_1S2_V_SIZE_SHD)


#define CIF_EP_IC_1S3_CTRL (*(volatile Ifx_CIF_EP_IC_CTRL*)0xF90E4C00u)




#define CIFEP_4_IC_CTRL (CIF_EP_IC_1S3_CTRL)


#define CIF_EP_IC_1S3_DISPLACE (*(volatile Ifx_CIF_EP_IC_DISPLACE*)0xF90E4C20u)




#define CIFEP_4_IC_DISPLACE (CIF_EP_IC_1S3_DISPLACE)



#define CIF_EP_IC_1S3_H_OFFS (*(volatile Ifx_CIF_EP_IC_H_OFFS*)0xF90E4C08u)




#define CIFEP_4_IC_H_OFFS (CIF_EP_IC_1S3_H_OFFS)



#define CIF_EP_IC_1S3_H_OFFS_SHD (*(volatile Ifx_CIF_EP_IC_H_OFFS_SHD*)0xF90E4C24u)




#define CIFEP_4_IC_H_OFFS_SHD (CIF_EP_IC_1S3_H_OFFS_SHD)



#define CIF_EP_IC_1S3_H_SIZE (*(volatile Ifx_CIF_EP_IC_H_SIZE*)0xF90E4C10u)




#define CIFEP_4_IC_H_SIZE (CIF_EP_IC_1S3_H_SIZE)



#define CIF_EP_IC_1S3_H_SIZE_SHD (*(volatile Ifx_CIF_EP_IC_H_SIZE_SHD*)0xF90E4C2Cu)




#define CIFEP_4_IC_H_SIZE_SHD (CIF_EP_IC_1S3_H_SIZE_SHD)



#define CIF_EP_IC_1S3_MAX_DX (*(volatile Ifx_CIF_EP_IC_MAX_DX*)0xF90E4C18u)




#define CIFEP_4_IC_MAX_DX (CIF_EP_IC_1S3_MAX_DX)



#define CIF_EP_IC_1S3_MAX_DY (*(volatile Ifx_CIF_EP_IC_MAX_DY*)0xF90E4C1Cu)




#define CIFEP_4_IC_MAX_DY (CIF_EP_IC_1S3_MAX_DY)


#define CIF_EP_IC_1S3_RECENTER (*(volatile Ifx_CIF_EP_IC_RECENTER*)0xF90E4C04u)




#define CIFEP_4_IC_RECENTER (CIF_EP_IC_1S3_RECENTER)



#define CIF_EP_IC_1S3_V_OFFS (*(volatile Ifx_CIF_EP_IC_V_OFFS*)0xF90E4C0Cu)




#define CIFEP_4_IC_V_OFFS (CIF_EP_IC_1S3_V_OFFS)



#define CIF_EP_IC_1S3_V_OFFS_SHD (*(volatile Ifx_CIF_EP_IC_V_OFFS_SHD*)0xF90E4C28u)




#define CIFEP_4_IC_V_OFFS_SHD (CIF_EP_IC_1S3_V_OFFS_SHD)



#define CIF_EP_IC_1S3_V_SIZE (*(volatile Ifx_CIF_EP_IC_V_SIZE*)0xF90E4C14u)




#define CIFEP_4_IC_V_SIZE (CIF_EP_IC_1S3_V_SIZE)



#define CIF_EP_IC_1S3_V_SIZE_SHD (*(volatile Ifx_CIF_EP_IC_V_SIZE_SHD*)0xF90E4C30u)




#define CIFEP_4_IC_V_SIZE_SHD (CIF_EP_IC_1S3_V_SIZE_SHD)


#define CIF_EP_IC_1S4_CTRL (*(volatile Ifx_CIF_EP_IC_CTRL*)0xF90E4D00u)




#define CIFEP_5_IC_CTRL (CIF_EP_IC_1S4_CTRL)


#define CIF_EP_IC_1S4_DISPLACE (*(volatile Ifx_CIF_EP_IC_DISPLACE*)0xF90E4D20u)




#define CIFEP_5_IC_DISPLACE (CIF_EP_IC_1S4_DISPLACE)



#define CIF_EP_IC_1S4_H_OFFS (*(volatile Ifx_CIF_EP_IC_H_OFFS*)0xF90E4D08u)




#define CIFEP_5_IC_H_OFFS (CIF_EP_IC_1S4_H_OFFS)



#define CIF_EP_IC_1S4_H_OFFS_SHD (*(volatile Ifx_CIF_EP_IC_H_OFFS_SHD*)0xF90E4D24u)




#define CIFEP_5_IC_H_OFFS_SHD (CIF_EP_IC_1S4_H_OFFS_SHD)



#define CIF_EP_IC_1S4_H_SIZE (*(volatile Ifx_CIF_EP_IC_H_SIZE*)0xF90E4D10u)




#define CIFEP_5_IC_H_SIZE (CIF_EP_IC_1S4_H_SIZE)



#define CIF_EP_IC_1S4_H_SIZE_SHD (*(volatile Ifx_CIF_EP_IC_H_SIZE_SHD*)0xF90E4D2Cu)




#define CIFEP_5_IC_H_SIZE_SHD (CIF_EP_IC_1S4_H_SIZE_SHD)



#define CIF_EP_IC_1S4_MAX_DX (*(volatile Ifx_CIF_EP_IC_MAX_DX*)0xF90E4D18u)




#define CIFEP_5_IC_MAX_DX (CIF_EP_IC_1S4_MAX_DX)



#define CIF_EP_IC_1S4_MAX_DY (*(volatile Ifx_CIF_EP_IC_MAX_DY*)0xF90E4D1Cu)




#define CIFEP_5_IC_MAX_DY (CIF_EP_IC_1S4_MAX_DY)


#define CIF_EP_IC_1S4_RECENTER (*(volatile Ifx_CIF_EP_IC_RECENTER*)0xF90E4D04u)




#define CIFEP_5_IC_RECENTER (CIF_EP_IC_1S4_RECENTER)



#define CIF_EP_IC_1S4_V_OFFS (*(volatile Ifx_CIF_EP_IC_V_OFFS*)0xF90E4D0Cu)




#define CIFEP_5_IC_V_OFFS (CIF_EP_IC_1S4_V_OFFS)



#define CIF_EP_IC_1S4_V_OFFS_SHD (*(volatile Ifx_CIF_EP_IC_V_OFFS_SHD*)0xF90E4D28u)




#define CIFEP_5_IC_V_OFFS_SHD (CIF_EP_IC_1S4_V_OFFS_SHD)



#define CIF_EP_IC_1S4_V_SIZE (*(volatile Ifx_CIF_EP_IC_V_SIZE*)0xF90E4D14u)




#define CIFEP_5_IC_V_SIZE (CIF_EP_IC_1S4_V_SIZE)



#define CIF_EP_IC_1S4_V_SIZE_SHD (*(volatile Ifx_CIF_EP_IC_V_SIZE_SHD*)0xF90E4D30u)




#define CIFEP_5_IC_V_SIZE_SHD (CIF_EP_IC_1S4_V_SIZE_SHD)


#define CIF_ICCL (*(volatile Ifx_CIF_ICCL*)0xF90E2010u)


#define CIF_ID (*(volatile Ifx_CIF_ID*)0xF90E2008u)


#define CIF_IRCL (*(volatile Ifx_CIF_IRCL*)0xF90E2014u)


#define CIF_ISP_ACQ_H_OFFS (*(volatile Ifx_CIF_ISP_ACQ_H_OFFS*)0xF90E2408u)




#define CIFISP_ACQ_H_OFFS (CIF_ISP_ACQ_H_OFFS)


#define CIF_ISP_ACQ_H_SIZE (*(volatile Ifx_CIF_ISP_ACQ_H_SIZE*)0xF90E2410u)




#define CIFISP_ACQ_H_SIZE (CIF_ISP_ACQ_H_SIZE)


#define CIF_ISP_ACQ_NR_FRAMES (*(volatile Ifx_CIF_ISP_ACQ_NR_FRAMES*)0xF90E2418u)




#define CIFISP_ACQ_NR_FRAMES (CIF_ISP_ACQ_NR_FRAMES)


#define CIF_ISP_ACQ_PROP (*(volatile Ifx_CIF_ISP_ACQ_PROP*)0xF90E2404u)




#define CIFISP_ACQ_PROP (CIF_ISP_ACQ_PROP)


#define CIF_ISP_ACQ_V_OFFS (*(volatile Ifx_CIF_ISP_ACQ_V_OFFS*)0xF90E240Cu)




#define CIFISP_ACQ_V_OFFS (CIF_ISP_ACQ_V_OFFS)


#define CIF_ISP_ACQ_V_SIZE (*(volatile Ifx_CIF_ISP_ACQ_V_SIZE*)0xF90E2414u)




#define CIFISP_ACQ_V_SIZE (CIF_ISP_ACQ_V_SIZE)


#define CIF_ISP_CTRL (*(volatile Ifx_CIF_ISP_CTRL*)0xF90E2400u)




#define CIFISP_CTRL (CIF_ISP_CTRL)


#define CIF_ISP_ERR (*(volatile Ifx_CIF_ISP_ERR*)0xF90E263Cu)




#define CIFISP_ERR (CIF_ISP_ERR)


#define CIF_ISP_ERR_CLR (*(volatile Ifx_CIF_ISP_ERR_CLR*)0xF90E2640u)




#define CIFISP_ERR_CLR (CIF_ISP_ERR_CLR)


#define CIF_ISP_FLAGS_SHD (*(volatile Ifx_CIF_ISP_FLAGS_SHD*)0xF90E25A8u)




#define CIFISP_FLAGS_SHD (CIF_ISP_FLAGS_SHD)


#define CIF_ISP_FRAME_COUNT (*(volatile Ifx_CIF_ISP_FRAME_COUNT*)0xF90E2644u)




#define CIFISP_FRAME_COUNT (CIF_ISP_FRAME_COUNT)


#define CIF_ISP_ICR (*(volatile Ifx_CIF_ISP_ICR*)0xF90E25C8u)




#define CIFISP_ICR (CIF_ISP_ICR)


#define CIF_ISP_IMSC (*(volatile Ifx_CIF_ISP_IMSC*)0xF90E25BCu)




#define CIFISP_IMSC (CIF_ISP_IMSC)


#define CIF_ISP_ISR (*(volatile Ifx_CIF_ISP_ISR*)0xF90E25CCu)




#define CIFISP_ISR (CIF_ISP_ISR)


#define CIF_ISP_MIS (*(volatile Ifx_CIF_ISP_MIS*)0xF90E25C4u)




#define CIFISP_MIS (CIF_ISP_MIS)


#define CIF_ISP_OUT_H_OFFS (*(volatile Ifx_CIF_ISP_OUT_H_OFFS*)0xF90E2594u)




#define CIFISP_OUT_H_OFFS (CIF_ISP_OUT_H_OFFS)


#define CIF_ISP_OUT_H_OFFS_SHD (*(volatile Ifx_CIF_ISP_OUT_H_OFFS_SHD*)0xF90E25ACu)




#define CIFISP_OUT_H_OFFS_SHD (CIF_ISP_OUT_H_OFFS_SHD)


#define CIF_ISP_OUT_H_SIZE (*(volatile Ifx_CIF_ISP_OUT_H_SIZE*)0xF90E259Cu)




#define CIFISP_OUT_H_SIZE (CIF_ISP_OUT_H_SIZE)


#define CIF_ISP_OUT_H_SIZE_SHD (*(volatile Ifx_CIF_ISP_OUT_H_SIZE_SHD*)0xF90E25B4u)




#define CIFISP_OUT_H_SIZE_SHD (CIF_ISP_OUT_H_SIZE_SHD)


#define CIF_ISP_OUT_V_OFFS (*(volatile Ifx_CIF_ISP_OUT_V_OFFS*)0xF90E2598u)




#define CIFISP_OUT_V_OFFS (CIF_ISP_OUT_V_OFFS)


#define CIF_ISP_OUT_V_OFFS_SHD (*(volatile Ifx_CIF_ISP_OUT_V_OFFS_SHD*)0xF90E25B0u)




#define CIFISP_OUT_V_OFFS_SHD (CIF_ISP_OUT_V_OFFS_SHD)


#define CIF_ISP_OUT_V_SIZE (*(volatile Ifx_CIF_ISP_OUT_V_SIZE*)0xF90E25A0u)




#define CIFISP_OUT_V_SIZE (CIF_ISP_OUT_V_SIZE)


#define CIF_ISP_OUT_V_SIZE_SHD (*(volatile Ifx_CIF_ISP_OUT_V_SIZE_SHD*)0xF90E25B8u)




#define CIFISP_OUT_V_SIZE_SHD (CIF_ISP_OUT_V_SIZE_SHD)


#define CIF_ISP_RIS (*(volatile Ifx_CIF_ISP_RIS*)0xF90E25C0u)




#define CIFISP_RIS (CIF_ISP_RIS)


#define CIF_ISPIS_CTRL (*(volatile Ifx_CIF_ISPIS_CTRL*)0xF90E4300u)




#define CIFISPIS_CTRL (CIF_ISPIS_CTRL)


#define CIF_ISPIS_DISPLACE (*(volatile Ifx_CIF_ISPIS_DISPLACE*)0xF90E4320u)




#define CIFISPIS_DISPLACE (CIF_ISPIS_DISPLACE)



#define CIF_ISPIS_H_OFFS (*(volatile Ifx_CIF_ISPIS_H_OFFS*)0xF90E4308u)




#define CIFISPIS_H_OFFS (CIF_ISPIS_H_OFFS)



#define CIF_ISPIS_H_OFFS_SHD (*(volatile Ifx_CIF_ISPIS_H_OFFS_SHD*)0xF90E4324u)




#define CIFISPIS_H_OFFS_SHD (CIF_ISPIS_H_OFFS_SHD)



#define CIF_ISPIS_H_SIZE (*(volatile Ifx_CIF_ISPIS_H_SIZE*)0xF90E4310u)




#define CIFISPIS_H_SIZE (CIF_ISPIS_H_SIZE)



#define CIF_ISPIS_H_SIZE_SHD (*(volatile Ifx_CIF_ISPIS_H_SIZE_SHD*)0xF90E432Cu)




#define CIFISPIS_H_SIZE_SHD (CIF_ISPIS_H_SIZE_SHD)



#define CIF_ISPIS_MAX_DX (*(volatile Ifx_CIF_ISPIS_MAX_DX*)0xF90E4318u)




#define CIFISPIS_MAX_DX (CIF_ISPIS_MAX_DX)


#define CIF_ISPIS_MAX_DY (*(volatile Ifx_CIF_ISPIS_MAX_DY*)0xF90E431Cu)




#define CIFISPIS_MAX_DY (CIF_ISPIS_MAX_DY)


#define CIF_ISPIS_RECENTER (*(volatile Ifx_CIF_ISPIS_RECENTER*)0xF90E4304u)




#define CIFISPIS_RECENTER (CIF_ISPIS_RECENTER)



#define CIF_ISPIS_V_OFFS (*(volatile Ifx_CIF_ISPIS_V_OFFS*)0xF90E430Cu)




#define CIFISPIS_V_OFFS (CIF_ISPIS_V_OFFS)



#define CIF_ISPIS_V_OFFS_SHD (*(volatile Ifx_CIF_ISPIS_V_OFFS_SHD*)0xF90E4328u)




#define CIFISPIS_V_OFFS_SHD (CIF_ISPIS_V_OFFS_SHD)


#define CIF_ISPIS_V_SIZE (*(volatile Ifx_CIF_ISPIS_V_SIZE*)0xF90E4314u)




#define CIFISPIS_V_SIZE (CIF_ISPIS_V_SIZE)


#define CIF_ISPIS_V_SIZE_SHD (*(volatile Ifx_CIF_ISPIS_V_SIZE_SHD*)0xF90E4330u)




#define CIFISPIS_V_SIZE_SHD (CIF_ISPIS_V_SIZE_SHD)


#define CIF_JPE_AC_TABLE_SELECT (*(volatile Ifx_CIF_JPE_AC_TABLE_SELECT*)0xF90E3838u)




#define CIFJPE_AC_TABLE_SELECT (CIF_JPE_AC_TABLE_SELECT)


#define CIF_JPE_CBCR_SCALE_EN (*(volatile Ifx_CIF_JPE_CBCR_SCALE_EN*)0xF90E3810u)




#define CIFJPE_CBCR_SCALE_EN (CIF_JPE_CBCR_SCALE_EN)


#define CIF_JPE_DC_TABLE_SELECT (*(volatile Ifx_CIF_JPE_DC_TABLE_SELECT*)0xF90E3834u)




#define CIFJPE_DC_TABLE_SELECT (CIF_JPE_DC_TABLE_SELECT)


#define CIF_JPE_DEBUG (*(volatile Ifx_CIF_JPE_DEBUG*)0xF90E3864u)




#define CIFJPE_DEBUG (CIF_JPE_DEBUG)


#define CIF_JPE_ENC_HSIZE (*(volatile Ifx_CIF_JPE_ENC_HSIZE*)0xF90E3818u)




#define CIFJPE_ENC_HSIZE (CIF_JPE_ENC_HSIZE)


#define CIF_JPE_ENC_VSIZE (*(volatile Ifx_CIF_JPE_ENC_VSIZE*)0xF90E381Cu)




#define CIFJPE_ENC_VSIZE (CIF_JPE_ENC_VSIZE)


#define CIF_JPE_ENCODE (*(volatile Ifx_CIF_JPE_ENCODE*)0xF90E3804u)




#define CIFJPE_ENCODE (CIF_JPE_ENCODE)


#define CIF_JPE_ENCODE_MODE (*(volatile Ifx_CIF_JPE_ENCODE_MODE*)0xF90E3860u)




#define CIFJPE_ENCODE_MODE (CIF_JPE_ENCODE_MODE)


#define CIF_JPE_ENCODER_BUSY (*(volatile Ifx_CIF_JPE_ENCODER_BUSY*)0xF90E3858u)




#define CIFJPE_ENCODER_BUSY (CIF_JPE_ENCODER_BUSY)


#define CIF_JPE_ERROR_ICR (*(volatile Ifx_CIF_JPE_ERROR_ICR*)0xF90E3874u)




#define CIFJPE_ERROR_ICR (CIF_JPE_ERROR_ICR)


#define CIF_JPE_ERROR_IMR (*(volatile Ifx_CIF_JPE_ERROR_IMR*)0xF90E3868u)




#define CIFJPE_ERROR_IMR (CIF_JPE_ERROR_IMR)


#define CIF_JPE_ERROR_ISR (*(volatile Ifx_CIF_JPE_ERROR_ISR*)0xF90E3878u)




#define CIFJPE_ERROR_ISR (CIF_JPE_ERROR_ISR)


#define CIF_JPE_ERROR_MIS (*(volatile Ifx_CIF_JPE_ERROR_MIS*)0xF90E3870u)




#define CIFJPE_ERROR_MIS (CIF_JPE_ERROR_MIS)


#define CIF_JPE_ERROR_RIS (*(volatile Ifx_CIF_JPE_ERROR_RIS*)0xF90E386Cu)




#define CIFJPE_ERROR_RIS (CIF_JPE_ERROR_RIS)


#define CIF_JPE_GEN_HEADER (*(volatile Ifx_CIF_JPE_GEN_HEADER*)0xF90E3800u)




#define CIFJPE_GEN_HEADER (CIF_JPE_GEN_HEADER)


#define CIF_JPE_HEADER_MODE (*(volatile Ifx_CIF_JPE_HEADER_MODE*)0xF90E385Cu)




#define CIFJPE_HEADER_MODE (CIF_JPE_HEADER_MODE)


#define CIF_JPE_INIT (*(volatile Ifx_CIF_JPE_INIT*)0xF90E3808u)




#define CIFJPE_INIT (CIF_JPE_INIT)


#define CIF_JPE_PIC_FORMAT (*(volatile Ifx_CIF_JPE_PIC_FORMAT*)0xF90E3820u)




#define CIFJPE_PIC_FORMAT (CIF_JPE_PIC_FORMAT)


#define CIF_JPE_RESTART_INTERVAL (*(volatile Ifx_CIF_JPE_RESTART_INTERVAL*)0xF90E3824u)




#define CIFJPE_RESTART_INTERVAL (CIF_JPE_RESTART_INTERVAL)


#define CIF_JPE_STATUS_ICR (*(volatile Ifx_CIF_JPE_STATUS_ICR*)0xF90E3888u)




#define CIFJPE_STATUS_ICR (CIF_JPE_STATUS_ICR)


#define CIF_JPE_STATUS_IMR (*(volatile Ifx_CIF_JPE_STATUS_IMR*)0xF90E387Cu)




#define CIFJPE_STATUS_IMR (CIF_JPE_STATUS_IMR)


#define CIF_JPE_STATUS_ISR (*(volatile Ifx_CIF_JPE_STATUS_ISR*)0xF90E388Cu)




#define CIFJPE_STATUS_ISR (CIF_JPE_STATUS_ISR)


#define CIF_JPE_STATUS_MIS (*(volatile Ifx_CIF_JPE_STATUS_MIS*)0xF90E3884u)




#define CIFJPE_STATUS_MIS (CIF_JPE_STATUS_MIS)


#define CIF_JPE_STATUS_RIS (*(volatile Ifx_CIF_JPE_STATUS_RIS*)0xF90E3880u)




#define CIFJPE_STATUS_RIS (CIF_JPE_STATUS_RIS)


#define CIF_JPE_TABLE_DATA (*(volatile Ifx_CIF_JPE_TABLE_DATA*)0xF90E383Cu)




#define CIFJPE_TABLE_DATA (CIF_JPE_TABLE_DATA)


#define CIF_JPE_TABLE_FLUSH (*(volatile Ifx_CIF_JPE_TABLE_FLUSH*)0xF90E3814u)




#define CIFJPE_TABLE_FLUSH (CIF_JPE_TABLE_FLUSH)


#define CIF_JPE_TABLE_ID (*(volatile Ifx_CIF_JPE_TABLE_ID*)0xF90E3840u)




#define CIFJPE_TABLE_ID (CIF_JPE_TABLE_ID)


#define CIF_JPE_TAC0_LEN (*(volatile Ifx_CIF_JPE_TAC0_LEN*)0xF90E3844u)




#define CIFJPE_TAC0_LEN (CIF_JPE_TAC0_LEN)


#define CIF_JPE_TAC1_LEN (*(volatile Ifx_CIF_JPE_TAC1_LEN*)0xF90E384Cu)




#define CIFJPE_TAC1_LEN (CIF_JPE_TAC1_LEN)


#define CIF_JPE_TDC0_LEN (*(volatile Ifx_CIF_JPE_TDC0_LEN*)0xF90E3848u)




#define CIFJPE_TDC0_LEN (CIF_JPE_TDC0_LEN)


#define CIF_JPE_TDC1_LEN (*(volatile Ifx_CIF_JPE_TDC1_LEN*)0xF90E3850u)




#define CIFJPE_TDC1_LEN (CIF_JPE_TDC1_LEN)


#define CIF_JPE_TQ_U_SELECT (*(volatile Ifx_CIF_JPE_TQ_U_SELECT*)0xF90E382Cu)




#define CIFJPE_TQ_U_SELECT (CIF_JPE_TQ_U_SELECT)


#define CIF_JPE_TQ_V_SELECT (*(volatile Ifx_CIF_JPE_TQ_V_SELECT*)0xF90E3830u)




#define CIFJPE_TQ_V_SELECT (CIF_JPE_TQ_V_SELECT)


#define CIF_JPE_TQ_Y_SELECT (*(volatile Ifx_CIF_JPE_TQ_Y_SELECT*)0xF90E3828u)




#define CIFJPE_TQ_Y_SELECT (CIF_JPE_TQ_Y_SELECT)


#define CIF_JPE_Y_SCALE_EN (*(volatile Ifx_CIF_JPE_Y_SCALE_EN*)0xF90E380Cu)




#define CIFJPE_Y_SCALE_EN (CIF_JPE_Y_SCALE_EN)


#define CIF_LDS_CTRL (*(volatile Ifx_CIF_LDS_CTRL*)0xF90E4500u)




#define CIFLDS_CTRL (CIF_LDS_CTRL)


#define CIF_LDS_FAC (*(volatile Ifx_CIF_LDS_FAC*)0xF90E4504u)




#define CIFLDS_FAC (CIF_LDS_FAC)



#define CIF_MI_BYTE_CNT (*(volatile Ifx_CIF_MI_BYTE_CNT*)0xF90E3470u)




#define CIFMI_BYTE_CNT (CIF_MI_BYTE_CNT)


#define CIF_MI_CTRL (*(volatile Ifx_CIF_MI_CTRL*)0xF90E3400u)




#define CIFMI_CTRL (CIF_MI_CTRL)


#define CIF_MI_CTRL_SHD (*(volatile Ifx_CIF_MI_CTRL_SHD*)0xF90E3474u)




#define CIFMI_CTRL_SHD (CIF_MI_CTRL_SHD)


#define CIF_MI_ICR (*(volatile Ifx_CIF_MI_ICR*)0xF90E3504u)




#define CIFMI_ICR (CIF_MI_ICR)


#define CIF_MI_IMSC (*(volatile Ifx_CIF_MI_IMSC*)0xF90E34F8u)




#define CIFMI_IMSC (CIF_MI_IMSC)



#define CIF_MI_INIT (*(volatile Ifx_CIF_MI_INIT*)0xF90E3404u)




#define CIFMI_INIT (CIF_MI_INIT)


#define CIF_MI_ISR (*(volatile Ifx_CIF_MI_ISR*)0xF90E3508u)




#define CIFMI_ISR (CIF_MI_ISR)


#define CIF_MI_MIS (*(volatile Ifx_CIF_MI_MIS*)0xF90E3500u)




#define CIFMI_MIS (CIF_MI_MIS)



#define CIF_MI_MP_CB_BASE_AD_INIT (*(volatile Ifx_CIF_MI_MP_CB_BASE_AD_INIT*)0xF90E341Cu)




#define CIFMI_MP_CB_BASE_AD_INIT (CIF_MI_MP_CB_BASE_AD_INIT)



#define CIF_MI_MP_CB_BASE_AD_SHD (*(volatile Ifx_CIF_MI_MP_CB_BASE_AD_SHD*)0xF90E3488u)




#define CIFMI_MP_CB_BASE_AD_SHD (CIF_MI_MP_CB_BASE_AD_SHD)



#define CIF_MI_MP_CB_OFFS_CNT_INIT (*(volatile Ifx_CIF_MI_MP_CB_OFFS_CNT_INIT*)0xF90E3424u)




#define CIFMI_MP_CB_OFFS_CNT_INIT (CIF_MI_MP_CB_OFFS_CNT_INIT)



#define CIF_MI_MP_CB_OFFS_CNT_SHD (*(volatile Ifx_CIF_MI_MP_CB_OFFS_CNT_SHD*)0xF90E3490u)




#define CIFMI_MP_CB_OFFS_CNT_SHD (CIF_MI_MP_CB_OFFS_CNT_SHD)



#define CIF_MI_MP_CB_OFFS_CNT_START (*(volatile Ifx_CIF_MI_MP_CB_OFFS_CNT_START*)0xF90E3428u)




#define CIFMI_MP_CB_OFFS_CNT_START (CIF_MI_MP_CB_OFFS_CNT_START)



#define CIF_MI_MP_CB_SIZE_INIT (*(volatile Ifx_CIF_MI_MP_CB_SIZE_INIT*)0xF90E3420u)




#define CIFMI_MP_CB_SIZE_INIT (CIF_MI_MP_CB_SIZE_INIT)



#define CIF_MI_MP_CB_SIZE_SHD (*(volatile Ifx_CIF_MI_MP_CB_SIZE_SHD*)0xF90E348Cu)




#define CIFMI_MP_CB_SIZE_SHD (CIF_MI_MP_CB_SIZE_SHD)



#define CIF_MI_MP_CR_BASE_AD_INIT (*(volatile Ifx_CIF_MI_MP_CR_BASE_AD_INIT*)0xF90E342Cu)




#define CIFMI_MP_CR_BASE_AD_INIT (CIF_MI_MP_CR_BASE_AD_INIT)



#define CIF_MI_MP_CR_BASE_AD_SHD (*(volatile Ifx_CIF_MI_MP_CR_BASE_AD_SHD*)0xF90E3494u)




#define CIFMI_MP_CR_BASE_AD_SHD (CIF_MI_MP_CR_BASE_AD_SHD)



#define CIF_MI_MP_CR_OFFS_CNT_INIT (*(volatile Ifx_CIF_MI_MP_CR_OFFS_CNT_INIT*)0xF90E3434u)




#define CIFMI_MP_CR_OFFS_CNT_INIT (CIF_MI_MP_CR_OFFS_CNT_INIT)



#define CIF_MI_MP_CR_OFFS_CNT_SHD (*(volatile Ifx_CIF_MI_MP_CR_OFFS_CNT_SHD*)0xF90E349Cu)




#define CIFMI_MP_CR_OFFS_CNT_SHD (CIF_MI_MP_CR_OFFS_CNT_SHD)



#define CIF_MI_MP_CR_OFFS_CNT_START (*(volatile Ifx_CIF_MI_MP_CR_OFFS_CNT_START*)0xF90E3438u)




#define CIFMI_MP_CR_OFFS_CNT_START (CIF_MI_MP_CR_OFFS_CNT_START)



#define CIF_MI_MP_CR_SIZE_INIT (*(volatile Ifx_CIF_MI_MP_CR_SIZE_INIT*)0xF90E3430u)




#define CIFMI_MP_CR_SIZE_INIT (CIF_MI_MP_CR_SIZE_INIT)



#define CIF_MI_MP_CR_SIZE_SHD (*(volatile Ifx_CIF_MI_MP_CR_SIZE_SHD*)0xF90E3498u)




#define CIFMI_MP_CR_SIZE_SHD (CIF_MI_MP_CR_SIZE_SHD)



#define CIF_MI_MP_Y_BASE_AD_INIT (*(volatile Ifx_CIF_MI_MP_Y_BASE_AD_INIT*)0xF90E3408u)




#define CIFMI_MP_Y_BASE_AD_INIT (CIF_MI_MP_Y_BASE_AD_INIT)



#define CIF_MI_MP_Y_BASE_AD_SHD (*(volatile Ifx_CIF_MI_MP_Y_BASE_AD_SHD*)0xF90E3478u)




#define CIFMI_MP_Y_BASE_AD_SHD (CIF_MI_MP_Y_BASE_AD_SHD)



#define CIF_MI_MP_Y_IRQ_OFFS_INIT (*(volatile Ifx_CIF_MI_MP_Y_IRQ_OFFS_INIT*)0xF90E3418u)




#define CIFMI_MP_Y_IRQ_OFFS_INIT (CIF_MI_MP_Y_IRQ_OFFS_INIT)



#define CIF_MI_MP_Y_IRQ_OFFS_SHD (*(volatile Ifx_CIF_MI_MP_Y_IRQ_OFFS_SHD*)0xF90E3484u)




#define CIFMI_MP_Y_IRQ_OFFS_SHD (CIF_MI_MP_Y_IRQ_OFFS_SHD)



#define CIF_MI_MP_Y_OFFS_CNT_INIT (*(volatile Ifx_CIF_MI_MP_Y_OFFS_CNT_INIT*)0xF90E3410u)




#define CIFMI_MP_Y_OFFS_CNT_INIT (CIF_MI_MP_Y_OFFS_CNT_INIT)



#define CIF_MI_MP_Y_OFFS_CNT_SHD (*(volatile Ifx_CIF_MI_MP_Y_OFFS_CNT_SHD*)0xF90E3480u)




#define CIFMI_MP_Y_OFFS_CNT_SHD (CIF_MI_MP_Y_OFFS_CNT_SHD)



#define CIF_MI_MP_Y_OFFS_CNT_START (*(volatile Ifx_CIF_MI_MP_Y_OFFS_CNT_START*)0xF90E3414u)




#define CIFMI_MP_Y_OFFS_CNT_START (CIF_MI_MP_Y_OFFS_CNT_START)



#define CIF_MI_MP_Y_SIZE_INIT (*(volatile Ifx_CIF_MI_MP_Y_SIZE_INIT*)0xF90E340Cu)




#define CIFMI_MP_Y_SIZE_INIT (CIF_MI_MP_Y_SIZE_INIT)



#define CIF_MI_MP_Y_SIZE_SHD (*(volatile Ifx_CIF_MI_MP_Y_SIZE_SHD*)0xF90E347Cu)




#define CIFMI_MP_Y_SIZE_SHD (CIF_MI_MP_Y_SIZE_SHD)


#define CIF_MI_RIS (*(volatile Ifx_CIF_MI_RIS*)0xF90E34FCu)




#define CIFMI_RIS (CIF_MI_RIS)


#define CIF_MI_STATUS (*(volatile Ifx_CIF_MI_STATUS*)0xF90E350Cu)




#define CIFMI_STATUS (CIF_MI_STATUS)


#define CIF_MI_STATUS_CLR (*(volatile Ifx_CIF_MI_STATUS_CLR*)0xF90E3510u)




#define CIFMI_STATUS_CLR (CIF_MI_STATUS_CLR)



#define CIF_MIEP_CH_1S0_BASE_AD_INIT (*(volatile Ifx_CIF_MIEP_CH_BASE_AD_INIT*)0xF90E5508u)




#define CIFMIEP_1_BASE_AD_INIT (CIF_MIEP_CH_1S0_BASE_AD_INIT)



#define CIF_MIEP_CH_1S0_BASE_AD_SHD (*(volatile Ifx_CIF_MIEP_CH_BASE_AD_SHD*)0xF90E5520u)




#define CIFMIEP_1_BASE_AD_SHD (CIF_MIEP_CH_1S0_BASE_AD_SHD)


#define CIF_MIEP_CH_1S0_CTRL (*(volatile Ifx_CIF_MIEP_CH_CTRL*)0xF90E5500u)




#define CIFMIEP_1_CTRL (CIF_MIEP_CH_1S0_CTRL)


#define CIF_MIEP_CH_1S0_CTRL_SHD (*(volatile Ifx_CIF_MIEP_CH_CTRL_SHD*)0xF90E551Cu)




#define CIFMIEP_1_CTRL_SHD (CIF_MIEP_CH_1S0_CTRL_SHD)



#define CIF_MIEP_CH_1S0_INIT (*(volatile Ifx_CIF_MIEP_CH_INIT*)0xF90E5504u)




#define CIFMIEP_1_INIT (CIF_MIEP_CH_1S0_INIT)



#define CIF_MIEP_CH_1S0_IRQ_OFFS_INIT (*(volatile Ifx_CIF_MIEP_CH_IRQ_OFFS_INIT*)0xF90E5518u)




#define CIFMIEP_1_IRQ_OFFS_INIT (CIF_MIEP_CH_1S0_IRQ_OFFS_INIT)



#define CIF_MIEP_CH_1S0_IRQ_OFFS_SHD (*(volatile Ifx_CIF_MIEP_CH_IRQ_OFFS_SHD*)0xF90E552Cu)




#define CIFMIEP_1_IRQ_OFFS_SHD (CIF_MIEP_CH_1S0_IRQ_OFFS_SHD)



#define CIF_MIEP_CH_1S0_OFFS_CNT_INIT (*(volatile Ifx_CIF_MIEP_CH_OFFS_CNT_INIT*)0xF90E5510u)




#define CIFMIEP_1_OFFS_CNT_INIT (CIF_MIEP_CH_1S0_OFFS_CNT_INIT)



#define CIF_MIEP_CH_1S0_OFFS_CNT_SHD (*(volatile Ifx_CIF_MIEP_CH_OFFS_CNT_SHD*)0xF90E5528u)




#define CIFMIEP_1_OFFS_CNT_SHD (CIF_MIEP_CH_1S0_OFFS_CNT_SHD)



#define CIF_MIEP_CH_1S0_OFFS_CNT_START (*(volatile Ifx_CIF_MIEP_CH_OFFS_CNT_START*)0xF90E5514u)




#define CIFMIEP_1_OFFS_CNT_START (CIF_MIEP_CH_1S0_OFFS_CNT_START)


#define CIF_MIEP_CH_1S0_SIZE_INIT (*(volatile Ifx_CIF_MIEP_CH_SIZE_INIT*)0xF90E550Cu)




#define CIFMIEP_1_SIZE_INIT (CIF_MIEP_CH_1S0_SIZE_INIT)



#define CIF_MIEP_CH_1S0_SIZE_SHD (*(volatile Ifx_CIF_MIEP_CH_SIZE_SHD*)0xF90E5524u)




#define CIFMIEP_1_SIZE_SHD (CIF_MIEP_CH_1S0_SIZE_SHD)



#define CIF_MIEP_CH_1S1_BASE_AD_INIT (*(volatile Ifx_CIF_MIEP_CH_BASE_AD_INIT*)0xF90E5608u)




#define CIFMIEP_2_BASE_AD_INIT (CIF_MIEP_CH_1S1_BASE_AD_INIT)



#define CIF_MIEP_CH_1S1_BASE_AD_SHD (*(volatile Ifx_CIF_MIEP_CH_BASE_AD_SHD*)0xF90E5620u)




#define CIFMIEP_2_BASE_AD_SHD (CIF_MIEP_CH_1S1_BASE_AD_SHD)


#define CIF_MIEP_CH_1S1_CTRL (*(volatile Ifx_CIF_MIEP_CH_CTRL*)0xF90E5600u)




#define CIFMIEP_2_CTRL (CIF_MIEP_CH_1S1_CTRL)


#define CIF_MIEP_CH_1S1_CTRL_SHD (*(volatile Ifx_CIF_MIEP_CH_CTRL_SHD*)0xF90E561Cu)




#define CIFMIEP_2_CTRL_SHD (CIF_MIEP_CH_1S1_CTRL_SHD)



#define CIF_MIEP_CH_1S1_INIT (*(volatile Ifx_CIF_MIEP_CH_INIT*)0xF90E5604u)




#define CIFMIEP_2_INIT (CIF_MIEP_CH_1S1_INIT)



#define CIF_MIEP_CH_1S1_IRQ_OFFS_INIT (*(volatile Ifx_CIF_MIEP_CH_IRQ_OFFS_INIT*)0xF90E5618u)




#define CIFMIEP_2_IRQ_OFFS_INIT (CIF_MIEP_CH_1S1_IRQ_OFFS_INIT)



#define CIF_MIEP_CH_1S1_IRQ_OFFS_SHD (*(volatile Ifx_CIF_MIEP_CH_IRQ_OFFS_SHD*)0xF90E562Cu)




#define CIFMIEP_2_IRQ_OFFS_SHD (CIF_MIEP_CH_1S1_IRQ_OFFS_SHD)



#define CIF_MIEP_CH_1S1_OFFS_CNT_INIT (*(volatile Ifx_CIF_MIEP_CH_OFFS_CNT_INIT*)0xF90E5610u)




#define CIFMIEP_2_OFFS_CNT_INIT (CIF_MIEP_CH_1S1_OFFS_CNT_INIT)



#define CIF_MIEP_CH_1S1_OFFS_CNT_SHD (*(volatile Ifx_CIF_MIEP_CH_OFFS_CNT_SHD*)0xF90E5628u)




#define CIFMIEP_2_OFFS_CNT_SHD (CIF_MIEP_CH_1S1_OFFS_CNT_SHD)



#define CIF_MIEP_CH_1S1_OFFS_CNT_START (*(volatile Ifx_CIF_MIEP_CH_OFFS_CNT_START*)0xF90E5614u)




#define CIFMIEP_2_OFFS_CNT_START (CIF_MIEP_CH_1S1_OFFS_CNT_START)


#define CIF_MIEP_CH_1S1_SIZE_INIT (*(volatile Ifx_CIF_MIEP_CH_SIZE_INIT*)0xF90E560Cu)




#define CIFMIEP_2_SIZE_INIT (CIF_MIEP_CH_1S1_SIZE_INIT)



#define CIF_MIEP_CH_1S1_SIZE_SHD (*(volatile Ifx_CIF_MIEP_CH_SIZE_SHD*)0xF90E5624u)




#define CIFMIEP_2_SIZE_SHD (CIF_MIEP_CH_1S1_SIZE_SHD)



#define CIF_MIEP_CH_1S2_BASE_AD_INIT (*(volatile Ifx_CIF_MIEP_CH_BASE_AD_INIT*)0xF90E5708u)




#define CIFMIEP_3_BASE_AD_INIT (CIF_MIEP_CH_1S2_BASE_AD_INIT)



#define CIF_MIEP_CH_1S2_BASE_AD_SHD (*(volatile Ifx_CIF_MIEP_CH_BASE_AD_SHD*)0xF90E5720u)




#define CIFMIEP_3_BASE_AD_SHD (CIF_MIEP_CH_1S2_BASE_AD_SHD)


#define CIF_MIEP_CH_1S2_CTRL (*(volatile Ifx_CIF_MIEP_CH_CTRL*)0xF90E5700u)




#define CIFMIEP_3_CTRL (CIF_MIEP_CH_1S2_CTRL)


#define CIF_MIEP_CH_1S2_CTRL_SHD (*(volatile Ifx_CIF_MIEP_CH_CTRL_SHD*)0xF90E571Cu)




#define CIFMIEP_3_CTRL_SHD (CIF_MIEP_CH_1S2_CTRL_SHD)



#define CIF_MIEP_CH_1S2_INIT (*(volatile Ifx_CIF_MIEP_CH_INIT*)0xF90E5704u)




#define CIFMIEP_3_INIT (CIF_MIEP_CH_1S2_INIT)



#define CIF_MIEP_CH_1S2_IRQ_OFFS_INIT (*(volatile Ifx_CIF_MIEP_CH_IRQ_OFFS_INIT*)0xF90E5718u)




#define CIFMIEP_3_IRQ_OFFS_INIT (CIF_MIEP_CH_1S2_IRQ_OFFS_INIT)



#define CIF_MIEP_CH_1S2_IRQ_OFFS_SHD (*(volatile Ifx_CIF_MIEP_CH_IRQ_OFFS_SHD*)0xF90E572Cu)




#define CIFMIEP_3_IRQ_OFFS_SHD (CIF_MIEP_CH_1S2_IRQ_OFFS_SHD)



#define CIF_MIEP_CH_1S2_OFFS_CNT_INIT (*(volatile Ifx_CIF_MIEP_CH_OFFS_CNT_INIT*)0xF90E5710u)




#define CIFMIEP_3_OFFS_CNT_INIT (CIF_MIEP_CH_1S2_OFFS_CNT_INIT)



#define CIF_MIEP_CH_1S2_OFFS_CNT_SHD (*(volatile Ifx_CIF_MIEP_CH_OFFS_CNT_SHD*)0xF90E5728u)




#define CIFMIEP_3_OFFS_CNT_SHD (CIF_MIEP_CH_1S2_OFFS_CNT_SHD)



#define CIF_MIEP_CH_1S2_OFFS_CNT_START (*(volatile Ifx_CIF_MIEP_CH_OFFS_CNT_START*)0xF90E5714u)




#define CIFMIEP_3_OFFS_CNT_START (CIF_MIEP_CH_1S2_OFFS_CNT_START)


#define CIF_MIEP_CH_1S2_SIZE_INIT (*(volatile Ifx_CIF_MIEP_CH_SIZE_INIT*)0xF90E570Cu)




#define CIFMIEP_3_SIZE_INIT (CIF_MIEP_CH_1S2_SIZE_INIT)



#define CIF_MIEP_CH_1S2_SIZE_SHD (*(volatile Ifx_CIF_MIEP_CH_SIZE_SHD*)0xF90E5724u)




#define CIFMIEP_3_SIZE_SHD (CIF_MIEP_CH_1S2_SIZE_SHD)



#define CIF_MIEP_CH_1S3_BASE_AD_INIT (*(volatile Ifx_CIF_MIEP_CH_BASE_AD_INIT*)0xF90E5808u)




#define CIFMIEP_4_BASE_AD_INIT (CIF_MIEP_CH_1S3_BASE_AD_INIT)



#define CIF_MIEP_CH_1S3_BASE_AD_SHD (*(volatile Ifx_CIF_MIEP_CH_BASE_AD_SHD*)0xF90E5820u)




#define CIFMIEP_4_BASE_AD_SHD (CIF_MIEP_CH_1S3_BASE_AD_SHD)


#define CIF_MIEP_CH_1S3_CTRL (*(volatile Ifx_CIF_MIEP_CH_CTRL*)0xF90E5800u)




#define CIFMIEP_4_CTRL (CIF_MIEP_CH_1S3_CTRL)


#define CIF_MIEP_CH_1S3_CTRL_SHD (*(volatile Ifx_CIF_MIEP_CH_CTRL_SHD*)0xF90E581Cu)




#define CIFMIEP_4_CTRL_SHD (CIF_MIEP_CH_1S3_CTRL_SHD)



#define CIF_MIEP_CH_1S3_INIT (*(volatile Ifx_CIF_MIEP_CH_INIT*)0xF90E5804u)




#define CIFMIEP_4_INIT (CIF_MIEP_CH_1S3_INIT)



#define CIF_MIEP_CH_1S3_IRQ_OFFS_INIT (*(volatile Ifx_CIF_MIEP_CH_IRQ_OFFS_INIT*)0xF90E5818u)




#define CIFMIEP_4_IRQ_OFFS_INIT (CIF_MIEP_CH_1S3_IRQ_OFFS_INIT)



#define CIF_MIEP_CH_1S3_IRQ_OFFS_SHD (*(volatile Ifx_CIF_MIEP_CH_IRQ_OFFS_SHD*)0xF90E582Cu)




#define CIFMIEP_4_IRQ_OFFS_SHD (CIF_MIEP_CH_1S3_IRQ_OFFS_SHD)



#define CIF_MIEP_CH_1S3_OFFS_CNT_INIT (*(volatile Ifx_CIF_MIEP_CH_OFFS_CNT_INIT*)0xF90E5810u)




#define CIFMIEP_4_OFFS_CNT_INIT (CIF_MIEP_CH_1S3_OFFS_CNT_INIT)



#define CIF_MIEP_CH_1S3_OFFS_CNT_SHD (*(volatile Ifx_CIF_MIEP_CH_OFFS_CNT_SHD*)0xF90E5828u)




#define CIFMIEP_4_OFFS_CNT_SHD (CIF_MIEP_CH_1S3_OFFS_CNT_SHD)



#define CIF_MIEP_CH_1S3_OFFS_CNT_START (*(volatile Ifx_CIF_MIEP_CH_OFFS_CNT_START*)0xF90E5814u)




#define CIFMIEP_4_OFFS_CNT_START (CIF_MIEP_CH_1S3_OFFS_CNT_START)


#define CIF_MIEP_CH_1S3_SIZE_INIT (*(volatile Ifx_CIF_MIEP_CH_SIZE_INIT*)0xF90E580Cu)




#define CIFMIEP_4_SIZE_INIT (CIF_MIEP_CH_1S3_SIZE_INIT)



#define CIF_MIEP_CH_1S3_SIZE_SHD (*(volatile Ifx_CIF_MIEP_CH_SIZE_SHD*)0xF90E5824u)




#define CIFMIEP_4_SIZE_SHD (CIF_MIEP_CH_1S3_SIZE_SHD)



#define CIF_MIEP_CH_1S4_BASE_AD_INIT (*(volatile Ifx_CIF_MIEP_CH_BASE_AD_INIT*)0xF90E5908u)




#define CIFMIEP_5_BASE_AD_INIT (CIF_MIEP_CH_1S4_BASE_AD_INIT)



#define CIF_MIEP_CH_1S4_BASE_AD_SHD (*(volatile Ifx_CIF_MIEP_CH_BASE_AD_SHD*)0xF90E5920u)




#define CIFMIEP_5_BASE_AD_SHD (CIF_MIEP_CH_1S4_BASE_AD_SHD)


#define CIF_MIEP_CH_1S4_CTRL (*(volatile Ifx_CIF_MIEP_CH_CTRL*)0xF90E5900u)




#define CIFMIEP_5_CTRL (CIF_MIEP_CH_1S4_CTRL)


#define CIF_MIEP_CH_1S4_CTRL_SHD (*(volatile Ifx_CIF_MIEP_CH_CTRL_SHD*)0xF90E591Cu)




#define CIFMIEP_5_CTRL_SHD (CIF_MIEP_CH_1S4_CTRL_SHD)



#define CIF_MIEP_CH_1S4_INIT (*(volatile Ifx_CIF_MIEP_CH_INIT*)0xF90E5904u)




#define CIFMIEP_5_INIT (CIF_MIEP_CH_1S4_INIT)



#define CIF_MIEP_CH_1S4_IRQ_OFFS_INIT (*(volatile Ifx_CIF_MIEP_CH_IRQ_OFFS_INIT*)0xF90E5918u)




#define CIFMIEP_5_IRQ_OFFS_INIT (CIF_MIEP_CH_1S4_IRQ_OFFS_INIT)



#define CIF_MIEP_CH_1S4_IRQ_OFFS_SHD (*(volatile Ifx_CIF_MIEP_CH_IRQ_OFFS_SHD*)0xF90E592Cu)




#define CIFMIEP_5_IRQ_OFFS_SHD (CIF_MIEP_CH_1S4_IRQ_OFFS_SHD)



#define CIF_MIEP_CH_1S4_OFFS_CNT_INIT (*(volatile Ifx_CIF_MIEP_CH_OFFS_CNT_INIT*)0xF90E5910u)




#define CIFMIEP_5_OFFS_CNT_INIT (CIF_MIEP_CH_1S4_OFFS_CNT_INIT)



#define CIF_MIEP_CH_1S4_OFFS_CNT_SHD (*(volatile Ifx_CIF_MIEP_CH_OFFS_CNT_SHD*)0xF90E5928u)




#define CIFMIEP_5_OFFS_CNT_SHD (CIF_MIEP_CH_1S4_OFFS_CNT_SHD)



#define CIF_MIEP_CH_1S4_OFFS_CNT_START (*(volatile Ifx_CIF_MIEP_CH_OFFS_CNT_START*)0xF90E5914u)




#define CIFMIEP_5_OFFS_CNT_START (CIF_MIEP_CH_1S4_OFFS_CNT_START)


#define CIF_MIEP_CH_1S4_SIZE_INIT (*(volatile Ifx_CIF_MIEP_CH_SIZE_INIT*)0xF90E590Cu)




#define CIFMIEP_5_SIZE_INIT (CIF_MIEP_CH_1S4_SIZE_INIT)



#define CIF_MIEP_CH_1S4_SIZE_SHD (*(volatile Ifx_CIF_MIEP_CH_SIZE_SHD*)0xF90E5924u)




#define CIFMIEP_5_SIZE_SHD (CIF_MIEP_CH_1S4_SIZE_SHD)


#define CIF_MIEP_ICR (*(volatile Ifx_CIF_MIEP_ICR*)0xF90E5414u)




#define CIFMIEP_ICR (CIF_MIEP_ICR)



#define CIF_MIEP_IMSC (*(volatile Ifx_CIF_MIEP_IMSC*)0xF90E5408u)




#define CIFMIEP_IMSC (CIF_MIEP_IMSC)


#define CIF_MIEP_ISR (*(volatile Ifx_CIF_MIEP_ISR*)0xF90E5418u)




#define CIFMIEP_ISR (CIF_MIEP_ISR)


#define CIF_MIEP_MIS (*(volatile Ifx_CIF_MIEP_MIS*)0xF90E5410u)




#define CIFMIEP_MIS (CIF_MIEP_MIS)


#define CIF_MIEP_RIS (*(volatile Ifx_CIF_MIEP_RIS*)0xF90E540Cu)




#define CIFMIEP_RIS (CIF_MIEP_RIS)


#define CIF_MIEP_STA_ERR (*(volatile Ifx_CIF_MIEP_STA_ERR*)0xF90E5400u)




#define CIFMIEP_STA_ERR (CIF_MIEP_STA_ERR)


#define CIF_MIEP_STA_ERR_CLR (*(volatile Ifx_CIF_MIEP_STA_ERR_CLR*)0xF90E5404u)




#define CIFMIEP_STA_ERR_CLR (CIF_MIEP_STA_ERR_CLR)


#define CIF_WD_CTRL (*(volatile Ifx_CIF_WD_CTRL*)0xF90E4400u)




#define CIFWD_CTRL (CIF_WD_CTRL)


#define CIF_WD_H_TIMEOUT (*(volatile Ifx_CIF_WD_H_TIMEOUT*)0xF90E4408u)




#define CIFWD_H_TIMEOUT (CIF_WD_H_TIMEOUT)


#define CIF_WD_ICR (*(volatile Ifx_CIF_WD_ICR*)0xF90E4418u)




#define CIFWD_ICR (CIF_WD_ICR)


#define CIF_WD_IMSC (*(volatile Ifx_CIF_WD_IMSC*)0xF90E440Cu)




#define CIFWD_IMSC (CIF_WD_IMSC)


#define CIF_WD_ISR (*(volatile Ifx_CIF_WD_ISR*)0xF90E441Cu)




#define CIFWD_ISR (CIF_WD_ISR)


#define CIF_WD_MIS (*(volatile Ifx_CIF_WD_MIS*)0xF90E4414u)




#define CIFWD_MIS (CIF_WD_MIS)


#define CIF_WD_RIS (*(volatile Ifx_CIF_WD_RIS*)0xF90E4410u)




#define CIFWD_RIS (CIF_WD_RIS)


#define CIF_WD_V_TIMEOUT (*(volatile Ifx_CIF_WD_V_TIMEOUT*)0xF90E4404u)




#define CIFWD_V_TIMEOUT (CIF_WD_V_TIMEOUT)
# 33 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_reg.h" 2 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCpu_reg.h" 1 3
# 52 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCpu_reg.h" 3
#define IFXCPU_REG_H 1

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCpu_regdef.h" 1 3
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCpu_regdef.h" 3
#define IFXCPU_REGDEF_H 1







typedef struct _Ifx_CPU_A_Bits
{
    volatile unsigned int ADDR:32;
} Ifx_CPU_A_Bits;


typedef struct _Ifx_CPU_BIV_Bits
{
    volatile unsigned int VSS:1;
    volatile unsigned int BIV:31;
} Ifx_CPU_BIV_Bits;


typedef struct _Ifx_CPU_BTV_Bits
{
    volatile unsigned int reserved_0:1;
    volatile unsigned int BTV:31;
} Ifx_CPU_BTV_Bits;


typedef struct _Ifx_CPU_CCNT_Bits
{
    volatile unsigned int CountValue:31;
    volatile unsigned int SOvf:1;
} Ifx_CPU_CCNT_Bits;


typedef struct _Ifx_CPU_CCTRL_Bits
{
    volatile unsigned int CM:1;
    volatile unsigned int CE:1;
    volatile unsigned int M1:3;
    volatile unsigned int M2:3;
    volatile unsigned int M3:3;
    volatile unsigned int reserved_11:21;
} Ifx_CPU_CCTRL_Bits;


typedef struct _Ifx_CPU_COMPAT_Bits
{
    volatile unsigned int reserved_0:3;
    volatile unsigned int RM:1;
    volatile unsigned int SP:1;
    volatile unsigned int reserved_5:27;
} Ifx_CPU_COMPAT_Bits;


typedef struct _Ifx_CPU_CORE_ID_Bits
{
    volatile unsigned int CORE_ID:3;
    volatile unsigned int reserved_3:29;
} Ifx_CPU_CORE_ID_Bits;


typedef struct _Ifx_CPU_CPR_L_Bits
{
    volatile unsigned int reserved_0:3;
    volatile unsigned int LOWBND:29;
} Ifx_CPU_CPR_L_Bits;


typedef struct _Ifx_CPU_CPR_U_Bits
{
    volatile unsigned int reserved_0:3;
    volatile unsigned int UPPBND:29;
} Ifx_CPU_CPR_U_Bits;


typedef struct _Ifx_CPU_CPU_ID_Bits
{
    volatile unsigned int MOD_REV:8;
    volatile unsigned int MOD_32B:8;
    volatile unsigned int MOD:16;
} Ifx_CPU_CPU_ID_Bits;


typedef struct _Ifx_CPU_CPXE_Bits
{
    volatile unsigned int XE:8;
    volatile unsigned int reserved_8:24;
} Ifx_CPU_CPXE_Bits;


typedef struct _Ifx_CPU_CREVT_Bits
{
    volatile unsigned int EVTA:3;
    volatile unsigned int BBM:1;
    volatile unsigned int BOD:1;
    volatile unsigned int SUSP:1;
    volatile unsigned int CNT:2;
    volatile unsigned int reserved_8:24;
} Ifx_CPU_CREVT_Bits;


typedef struct _Ifx_CPU_CUS_ID_Bits
{
    volatile unsigned int CID:3;
    volatile unsigned int reserved_3:29;
} Ifx_CPU_CUS_ID_Bits;


typedef struct _Ifx_CPU_D_Bits
{
    volatile unsigned int DATA:32;
} Ifx_CPU_D_Bits;


typedef struct _Ifx_CPU_DATR_Bits
{
    volatile unsigned int reserved_0:3;
    volatile unsigned int SBE:1;
    volatile unsigned int reserved_4:5;
    volatile unsigned int CWE:1;
    volatile unsigned int CFE:1;
    volatile unsigned int reserved_11:3;
    volatile unsigned int SOE:1;
    volatile unsigned int SME:1;
    volatile unsigned int reserved_16:16;
} Ifx_CPU_DATR_Bits;


typedef struct _Ifx_CPU_DBGSR_Bits
{
    volatile unsigned int DE:1;
    volatile unsigned int HALT:2;
    volatile unsigned int SIH:1;
    volatile unsigned int SUSP:1;
    volatile unsigned int reserved_5:1;
    volatile unsigned int PREVSUSP:1;
    volatile unsigned int PEVT:1;
    volatile unsigned int EVTSRC:5;
    volatile unsigned int reserved_13:19;
} Ifx_CPU_DBGSR_Bits;


typedef struct _Ifx_CPU_DBGTCR_Bits
{
    volatile unsigned int DTA:1;
    volatile unsigned int reserved_1:31;
} Ifx_CPU_DBGTCR_Bits;


typedef struct _Ifx_CPU_DCON0_Bits
{
    volatile unsigned int reserved_0:1;
    volatile unsigned int DCBYP:1;
    volatile unsigned int reserved_2:30;
} Ifx_CPU_DCON0_Bits;


typedef struct _Ifx_CPU_DCON2_Bits
{
    volatile unsigned int DCACHE_SZE:16;
    volatile unsigned int DSCRATCH_SZE:16;
} Ifx_CPU_DCON2_Bits;


typedef struct _Ifx_CPU_DCX_Bits
{
    volatile unsigned int reserved_0:6;
    volatile unsigned int DCXValue:26;
} Ifx_CPU_DCX_Bits;


typedef struct _Ifx_CPU_DEADD_Bits
{
    volatile unsigned int ERROR_ADDRESS:32;
} Ifx_CPU_DEADD_Bits;


typedef struct _Ifx_CPU_DIEAR_Bits
{
    volatile unsigned int TA:32;
} Ifx_CPU_DIEAR_Bits;


typedef struct _Ifx_CPU_DIETR_Bits
{
    volatile unsigned int IED:1;
    volatile unsigned int IE_T:1;
    volatile unsigned int IE_C:1;
    volatile unsigned int IE_S:1;
    volatile unsigned int IE_BI:1;
    volatile unsigned int E_INFO:6;
    volatile unsigned int IE_DUAL:1;
    volatile unsigned int IE_SP:1;
    volatile unsigned int IE_BS:1;
    volatile unsigned int reserved_14:18;
} Ifx_CPU_DIETR_Bits;


typedef struct _Ifx_CPU_DMS_Bits
{
    volatile unsigned int reserved_0:1;
    volatile unsigned int DMSValue:31;
} Ifx_CPU_DMS_Bits;


typedef struct _Ifx_CPU_DPR_L_Bits
{
    volatile unsigned int reserved_0:3;
    volatile unsigned int LOWBND:29;
} Ifx_CPU_DPR_L_Bits;


typedef struct _Ifx_CPU_DPR_U_Bits
{
    volatile unsigned int reserved_0:3;
    volatile unsigned int UPPBND:29;
} Ifx_CPU_DPR_U_Bits;


typedef struct _Ifx_CPU_DPRE_Bits
{
    volatile unsigned int RE:16;
    volatile unsigned int reserved_16:16;
} Ifx_CPU_DPRE_Bits;


typedef struct _Ifx_CPU_DPWE_Bits
{
    volatile unsigned int WE:16;
    volatile unsigned int reserved_16:16;
} Ifx_CPU_DPWE_Bits;


typedef struct _Ifx_CPU_DSTR_Bits
{
    volatile unsigned int SRE:1;
    volatile unsigned int GAE:1;
    volatile unsigned int LBE:1;
    volatile unsigned int reserved_3:3;
    volatile unsigned int CRE:1;
    volatile unsigned int reserved_7:7;
    volatile unsigned int DTME:1;
    volatile unsigned int LOE:1;
    volatile unsigned int SDE:1;
    volatile unsigned int SCE:1;
    volatile unsigned int CAC:1;
    volatile unsigned int MPE:1;
    volatile unsigned int CLE:1;
    volatile unsigned int reserved_21:3;
    volatile unsigned int ALN:1;
    volatile unsigned int reserved_25:7;
} Ifx_CPU_DSTR_Bits;


typedef struct _Ifx_CPU_EXEVT_Bits
{
    volatile unsigned int EVTA:3;
    volatile unsigned int BBM:1;
    volatile unsigned int BOD:1;
    volatile unsigned int SUSP:1;
    volatile unsigned int CNT:2;
    volatile unsigned int reserved_8:24;
} Ifx_CPU_EXEVT_Bits;


typedef struct _Ifx_CPU_FCX_Bits
{
    volatile unsigned int FCXO:16;
    volatile unsigned int FCXS:4;
    volatile unsigned int reserved_20:12;
} Ifx_CPU_FCX_Bits;


typedef struct _Ifx_CPU_FPU_TRAP_CON_Bits
{
    volatile unsigned int TST:1;
    volatile unsigned int TCL:1;
    volatile unsigned int reserved_2:6;
    volatile unsigned int RM:2;
    volatile unsigned int reserved_10:8;
    volatile unsigned int FXE:1;
    volatile unsigned int FUE:1;
    volatile unsigned int FZE:1;
    volatile unsigned int FVE:1;
    volatile unsigned int FIE:1;
    volatile unsigned int reserved_23:3;
    volatile unsigned int FX:1;
    volatile unsigned int FU:1;
    volatile unsigned int FZ:1;
    volatile unsigned int FV:1;
    volatile unsigned int FI:1;
    volatile unsigned int reserved_31:1;
} Ifx_CPU_FPU_TRAP_CON_Bits;


typedef struct _Ifx_CPU_FPU_TRAP_OPC_Bits
{
    volatile unsigned int OPC:8;
    volatile unsigned int FMT:1;
    volatile unsigned int reserved_9:7;
    volatile unsigned int DREG:4;
    volatile unsigned int reserved_20:12;
} Ifx_CPU_FPU_TRAP_OPC_Bits;


typedef struct _Ifx_CPU_FPU_TRAP_PC_Bits
{
    volatile unsigned int PC:32;
} Ifx_CPU_FPU_TRAP_PC_Bits;


typedef struct _Ifx_CPU_FPU_TRAP_SRC1_Bits
{
    volatile unsigned int SRC1:32;
} Ifx_CPU_FPU_TRAP_SRC1_Bits;


typedef struct _Ifx_CPU_FPU_TRAP_SRC2_Bits
{
    volatile unsigned int SRC2:32;
} Ifx_CPU_FPU_TRAP_SRC2_Bits;


typedef struct _Ifx_CPU_FPU_TRAP_SRC3_Bits
{
    volatile unsigned int SRC3:32;
} Ifx_CPU_FPU_TRAP_SRC3_Bits;


typedef struct _Ifx_CPU_ICNT_Bits
{
    volatile unsigned int CountValue:31;
    volatile unsigned int SOvf:1;
} Ifx_CPU_ICNT_Bits;


typedef struct _Ifx_CPU_ICR_Bits
{
    volatile unsigned int CCPN:10;
    volatile unsigned int reserved_10:5;
    volatile unsigned int IE:1;
    volatile unsigned int PIPN:10;
    volatile unsigned int reserved_26:6;
} Ifx_CPU_ICR_Bits;


typedef struct _Ifx_CPU_ISP_Bits
{
    volatile unsigned int ISP:32;
} Ifx_CPU_ISP_Bits;


typedef struct _Ifx_CPU_LCX_Bits
{
    volatile unsigned int LCXO:16;
    volatile unsigned int LCXS:4;
    volatile unsigned int reserved_20:12;
} Ifx_CPU_LCX_Bits;


typedef struct _Ifx_CPU_M1CNT_Bits
{
    volatile unsigned int CountValue:31;
    volatile unsigned int SOvf:1;
} Ifx_CPU_M1CNT_Bits;


typedef struct _Ifx_CPU_M2CNT_Bits
{
    volatile unsigned int CountValue:31;
    volatile unsigned int SOvf:1;
} Ifx_CPU_M2CNT_Bits;


typedef struct _Ifx_CPU_M3CNT_Bits
{
    volatile unsigned int CountValue:31;
    volatile unsigned int SOvf:1;
} Ifx_CPU_M3CNT_Bits;


typedef struct _Ifx_CPU_PC_Bits
{
    volatile unsigned int reserved_0:1;
    volatile unsigned int PC:31;
} Ifx_CPU_PC_Bits;


typedef struct _Ifx_CPU_PCON0_Bits
{
    volatile unsigned int reserved_0:1;
    volatile unsigned int PCBYP:1;
    volatile unsigned int reserved_2:30;
} Ifx_CPU_PCON0_Bits;


typedef struct _Ifx_CPU_PCON1_Bits
{
    volatile unsigned int PCINV:1;
    volatile unsigned int PBINV:1;
    volatile unsigned int reserved_2:30;
} Ifx_CPU_PCON1_Bits;


typedef struct _Ifx_CPU_PCON2_Bits
{
    volatile unsigned int PCACHE_SZE:16;
    volatile unsigned int PSCRATCH_SZE:16;
} Ifx_CPU_PCON2_Bits;


typedef struct _Ifx_CPU_PCXI_Bits
{
    volatile unsigned int PCXO:16;
    volatile unsigned int PCXS:4;
    volatile unsigned int UL:1;
    volatile unsigned int PIE:1;
    volatile unsigned int PCPN:10;
} Ifx_CPU_PCXI_Bits;


typedef struct _Ifx_CPU_PIEAR_Bits
{
    volatile unsigned int TA:32;
} Ifx_CPU_PIEAR_Bits;


typedef struct _Ifx_CPU_PIETR_Bits
{
    volatile unsigned int IED:1;
    volatile unsigned int IE_T:1;
    volatile unsigned int IE_C:1;
    volatile unsigned int IE_S:1;
    volatile unsigned int IE_BI:1;
    volatile unsigned int E_INFO:6;
    volatile unsigned int IE_DUAL:1;
    volatile unsigned int IE_SP:1;
    volatile unsigned int IE_BS:1;
    volatile unsigned int reserved_14:18;
} Ifx_CPU_PIETR_Bits;


typedef struct _Ifx_CPU_PMA0_Bits
{
    volatile unsigned int reserved_0:13;
    volatile unsigned int DAC:3;
    volatile unsigned int reserved_16:16;
} Ifx_CPU_PMA0_Bits;


typedef struct _Ifx_CPU_PMA1_Bits
{
    volatile unsigned int reserved_0:14;
    volatile unsigned int CAC:2;
    volatile unsigned int reserved_16:16;
} Ifx_CPU_PMA1_Bits;


typedef struct _Ifx_CPU_PMA2_Bits
{
    volatile unsigned int PSI:16;
    volatile unsigned int reserved_16:16;
} Ifx_CPU_PMA2_Bits;


typedef struct _Ifx_CPU_PSTR_Bits
{
    volatile unsigned int FRE:1;
    volatile unsigned int reserved_1:1;
    volatile unsigned int FBE:1;
    volatile unsigned int reserved_3:9;
    volatile unsigned int FPE:1;
    volatile unsigned int reserved_13:1;
    volatile unsigned int FME:1;
    volatile unsigned int reserved_15:17;
} Ifx_CPU_PSTR_Bits;


typedef struct _Ifx_CPU_PSW_Bits
{
    volatile unsigned int CDC:7;
    volatile unsigned int CDE:1;
    volatile unsigned int GW:1;
    volatile unsigned int IS:1;
    volatile unsigned int IO:2;
    volatile unsigned int PRS:2;
    volatile unsigned int S:1;
    volatile unsigned int reserved_15:12;
    volatile unsigned int SAV:1;
    volatile unsigned int AV:1;
    volatile unsigned int SV:1;
    volatile unsigned int V:1;
    volatile unsigned int C:1;
} Ifx_CPU_PSW_Bits;


typedef struct _Ifx_CPU_SEGEN_Bits
{
    volatile unsigned int ADFLIP:8;
    volatile unsigned int ADTYPE:2;
    volatile unsigned int reserved_10:21;
    volatile unsigned int AE:1;
} Ifx_CPU_SEGEN_Bits;


typedef struct _Ifx_CPU_SMACON_Bits
{
    volatile unsigned int PC:1;
    volatile unsigned int reserved_1:1;
    volatile unsigned int PT:1;
    volatile unsigned int reserved_3:5;
    volatile unsigned int DC:1;
    volatile unsigned int reserved_9:1;
    volatile unsigned int DT:1;
    volatile unsigned int reserved_11:13;
    volatile unsigned int IODT:1;
    volatile unsigned int reserved_25:7;
} Ifx_CPU_SMACON_Bits;


typedef struct _Ifx_CPU_SPROT_ACCENA_Bits
{
    volatile unsigned int EN:32;
} Ifx_CPU_SPROT_ACCENA_Bits;


typedef struct _Ifx_CPU_SPROT_ACCENB_Bits
{
    volatile unsigned int reserved_0:32;
} Ifx_CPU_SPROT_ACCENB_Bits;


typedef struct _Ifx_CPU_SPROT_RGN_ACCENA_Bits
{
    volatile unsigned int EN:32;
} Ifx_CPU_SPROT_RGN_ACCENA_Bits;


typedef struct _Ifx_CPU_SPROT_RGN_ACCENB_Bits
{
    volatile unsigned int reserved_0:32;
} Ifx_CPU_SPROT_RGN_ACCENB_Bits;


typedef struct _Ifx_CPU_SPROT_RGN_LA_Bits
{
    volatile unsigned int reserved_0:5;
    volatile unsigned int ADDR:27;
} Ifx_CPU_SPROT_RGN_LA_Bits;


typedef struct _Ifx_CPU_SPROT_RGN_UA_Bits
{
    volatile unsigned int reserved_0:5;
    volatile unsigned int ADDR:27;
} Ifx_CPU_SPROT_RGN_UA_Bits;


typedef struct _Ifx_CPU_SWEVT_Bits
{
    volatile unsigned int EVTA:3;
    volatile unsigned int BBM:1;
    volatile unsigned int BOD:1;
    volatile unsigned int SUSP:1;
    volatile unsigned int CNT:2;
    volatile unsigned int reserved_8:24;
} Ifx_CPU_SWEVT_Bits;


typedef struct _Ifx_CPU_SYSCON_Bits
{
    volatile unsigned int FCDSF:1;
    volatile unsigned int PROTEN:1;
    volatile unsigned int TPROTEN:1;
    volatile unsigned int IS:1;
    volatile unsigned int IT:1;
    volatile unsigned int RES:11;
    volatile unsigned int U1_IED:1;
    volatile unsigned int U1_IOS:1;
    volatile unsigned int reserved_18:14;
} Ifx_CPU_SYSCON_Bits;


typedef struct _Ifx_CPU_TASK_ASI_Bits
{
    volatile unsigned int ASI:5;
    volatile unsigned int reserved_5:27;
} Ifx_CPU_TASK_ASI_Bits;


typedef struct _Ifx_CPU_TPS_CON_Bits
{
    volatile unsigned int TEXP0:1;
    volatile unsigned int TEXP1:1;
    volatile unsigned int TEXP2:1;
    volatile unsigned int reserved_3:13;
    volatile unsigned int TTRAP:1;
    volatile unsigned int reserved_17:15;
} Ifx_CPU_TPS_CON_Bits;


typedef struct _Ifx_CPU_TPS_TIMER_Bits
{
    volatile unsigned int Timer:32;
} Ifx_CPU_TPS_TIMER_Bits;


typedef struct _Ifx_CPU_TR_ADR_Bits
{
    volatile unsigned int ADDR:32;
} Ifx_CPU_TR_ADR_Bits;


typedef struct _Ifx_CPU_TR_EVT_Bits
{
    volatile unsigned int EVTA:3;
    volatile unsigned int BBM:1;
    volatile unsigned int BOD:1;
    volatile unsigned int SUSP:1;
    volatile unsigned int CNT:2;
    volatile unsigned int reserved_8:4;
    volatile unsigned int TYP:1;
    volatile unsigned int RNG:1;
    volatile unsigned int reserved_14:1;
    volatile unsigned int ASI_EN:1;
    volatile unsigned int ASI:5;
    volatile unsigned int reserved_21:6;
    volatile unsigned int AST:1;
    volatile unsigned int ALD:1;
    volatile unsigned int reserved_29:3;
} Ifx_CPU_TR_EVT_Bits;


typedef struct _Ifx_CPU_TRIG_ACC_Bits
{
    volatile unsigned int T0:1;
    volatile unsigned int T1:1;
    volatile unsigned int T2:1;
    volatile unsigned int T3:1;
    volatile unsigned int T4:1;
    volatile unsigned int T5:1;
    volatile unsigned int T6:1;
    volatile unsigned int T7:1;
    volatile unsigned int reserved_8:24;
} Ifx_CPU_TRIG_ACC_Bits;







typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_A_Bits B;
} Ifx_CPU_A;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_BIV_Bits B;
} Ifx_CPU_BIV;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_BTV_Bits B;
} Ifx_CPU_BTV;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_CCNT_Bits B;
} Ifx_CPU_CCNT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_CCTRL_Bits B;
} Ifx_CPU_CCTRL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_COMPAT_Bits B;
} Ifx_CPU_COMPAT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_CORE_ID_Bits B;
} Ifx_CPU_CORE_ID;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_CPR_L_Bits B;
} Ifx_CPU_CPR_L;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_CPR_U_Bits B;
} Ifx_CPU_CPR_U;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_CPU_ID_Bits B;
} Ifx_CPU_CPU_ID;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_CPXE_Bits B;
} Ifx_CPU_CPXE;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_CREVT_Bits B;
} Ifx_CPU_CREVT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_CUS_ID_Bits B;
} Ifx_CPU_CUS_ID;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_D_Bits B;
} Ifx_CPU_D;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_DATR_Bits B;
} Ifx_CPU_DATR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_DBGSR_Bits B;
} Ifx_CPU_DBGSR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_DBGTCR_Bits B;
} Ifx_CPU_DBGTCR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_DCON0_Bits B;
} Ifx_CPU_DCON0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_DCON2_Bits B;
} Ifx_CPU_DCON2;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_DCX_Bits B;
} Ifx_CPU_DCX;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_DEADD_Bits B;
} Ifx_CPU_DEADD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_DIEAR_Bits B;
} Ifx_CPU_DIEAR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_DIETR_Bits B;
} Ifx_CPU_DIETR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_DMS_Bits B;
} Ifx_CPU_DMS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_DPR_L_Bits B;
} Ifx_CPU_DPR_L;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_DPR_U_Bits B;
} Ifx_CPU_DPR_U;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_DPRE_Bits B;
} Ifx_CPU_DPRE;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_DPWE_Bits B;
} Ifx_CPU_DPWE;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_DSTR_Bits B;
} Ifx_CPU_DSTR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_EXEVT_Bits B;
} Ifx_CPU_EXEVT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_FCX_Bits B;
} Ifx_CPU_FCX;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_FPU_TRAP_CON_Bits B;
} Ifx_CPU_FPU_TRAP_CON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_FPU_TRAP_OPC_Bits B;
} Ifx_CPU_FPU_TRAP_OPC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_FPU_TRAP_PC_Bits B;
} Ifx_CPU_FPU_TRAP_PC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_FPU_TRAP_SRC1_Bits B;
} Ifx_CPU_FPU_TRAP_SRC1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_FPU_TRAP_SRC2_Bits B;
} Ifx_CPU_FPU_TRAP_SRC2;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_FPU_TRAP_SRC3_Bits B;
} Ifx_CPU_FPU_TRAP_SRC3;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_ICNT_Bits B;
} Ifx_CPU_ICNT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_ICR_Bits B;
} Ifx_CPU_ICR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_ISP_Bits B;
} Ifx_CPU_ISP;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_LCX_Bits B;
} Ifx_CPU_LCX;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_M1CNT_Bits B;
} Ifx_CPU_M1CNT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_M2CNT_Bits B;
} Ifx_CPU_M2CNT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_M3CNT_Bits B;
} Ifx_CPU_M3CNT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_PC_Bits B;
} Ifx_CPU_PC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_PCON0_Bits B;
} Ifx_CPU_PCON0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_PCON1_Bits B;
} Ifx_CPU_PCON1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_PCON2_Bits B;
} Ifx_CPU_PCON2;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_PCXI_Bits B;
} Ifx_CPU_PCXI;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_PIEAR_Bits B;
} Ifx_CPU_PIEAR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_PIETR_Bits B;
} Ifx_CPU_PIETR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_PMA0_Bits B;
} Ifx_CPU_PMA0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_PMA1_Bits B;
} Ifx_CPU_PMA1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_PMA2_Bits B;
} Ifx_CPU_PMA2;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_PSTR_Bits B;
} Ifx_CPU_PSTR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_PSW_Bits B;
} Ifx_CPU_PSW;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_SEGEN_Bits B;
} Ifx_CPU_SEGEN;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_SMACON_Bits B;
} Ifx_CPU_SMACON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_SPROT_ACCENA_Bits B;
} Ifx_CPU_SPROT_ACCENA;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_SPROT_ACCENB_Bits B;
} Ifx_CPU_SPROT_ACCENB;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_SPROT_RGN_ACCENA_Bits B;
} Ifx_CPU_SPROT_RGN_ACCENA;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_SPROT_RGN_ACCENB_Bits B;
} Ifx_CPU_SPROT_RGN_ACCENB;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_SPROT_RGN_LA_Bits B;
} Ifx_CPU_SPROT_RGN_LA;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_SPROT_RGN_UA_Bits B;
} Ifx_CPU_SPROT_RGN_UA;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_SWEVT_Bits B;
} Ifx_CPU_SWEVT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_SYSCON_Bits B;
} Ifx_CPU_SYSCON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_TASK_ASI_Bits B;
} Ifx_CPU_TASK_ASI;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_TPS_CON_Bits B;
} Ifx_CPU_TPS_CON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_TPS_TIMER_Bits B;
} Ifx_CPU_TPS_TIMER;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_TR_ADR_Bits B;
} Ifx_CPU_TR_ADR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_TR_EVT_Bits B;
} Ifx_CPU_TR_EVT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_TRIG_ACC_Bits B;
} Ifx_CPU_TRIG_ACC;
# 1274 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCpu_regdef.h" 3
typedef volatile struct _Ifx_CPU_CPR
{
    Ifx_CPU_CPR_L L;
    Ifx_CPU_CPR_U U;
} Ifx_CPU_CPR;


typedef volatile struct _Ifx_CPU_DPR
{
    Ifx_CPU_DPR_L L;
    Ifx_CPU_DPR_U U;
} Ifx_CPU_DPR;


typedef volatile struct _Ifx_CPU_SPROT_RGN
{
    Ifx_CPU_SPROT_RGN_LA LA;
    Ifx_CPU_SPROT_RGN_UA UA;
    Ifx_CPU_SPROT_RGN_ACCENA ACCENA;
    Ifx_CPU_SPROT_RGN_ACCENB ACCENB;
} Ifx_CPU_SPROT_RGN;


typedef volatile struct _Ifx_CPU_TPS
{
    Ifx_CPU_TPS_CON CON;
    Ifx_CPU_TPS_TIMER TIMER[3];
} Ifx_CPU_TPS;


typedef volatile struct _Ifx_CPU_TR
{
    Ifx_CPU_TR_EVT EVT;
    Ifx_CPU_TR_ADR ADR;
} Ifx_CPU_TR;
# 1321 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCpu_regdef.h" 3
typedef volatile struct _Ifx_CPU
{
    unsigned char reserved_0[4144];
    Ifx_CPU_SEGEN SEGEN;
    unsigned char reserved_1034[28624];
    Ifx_CPU_TASK_ASI TASK_ASI;
    unsigned char reserved_8008[248];
    Ifx_CPU_PMA0 PMA0;
    Ifx_CPU_PMA1 PMA1;
    Ifx_CPU_PMA2 PMA2;
    unsigned char reserved_810C[3828];
    Ifx_CPU_DCON2 DCON2;
    unsigned char reserved_9004[8];
    Ifx_CPU_SMACON SMACON;
    Ifx_CPU_DSTR DSTR;
    unsigned char reserved_9014[4];
    Ifx_CPU_DATR DATR;
    Ifx_CPU_DEADD DEADD;
    Ifx_CPU_DIEAR DIEAR;
    Ifx_CPU_DIETR DIETR;
    unsigned char reserved_9028[24];
    Ifx_CPU_DCON0 DCON0;
    unsigned char reserved_9044[444];
    Ifx_CPU_PSTR PSTR;
    Ifx_CPU_PCON1 PCON1;
    Ifx_CPU_PCON2 PCON2;
    Ifx_CPU_PCON0 PCON0;
    Ifx_CPU_PIEAR PIEAR;
    Ifx_CPU_PIETR PIETR;
    unsigned char reserved_9218[488];
    Ifx_CPU_COMPAT COMPAT;
    unsigned char reserved_9404[3068];
    Ifx_CPU_FPU_TRAP_CON FPU_TRAP_CON;
    Ifx_CPU_FPU_TRAP_PC FPU_TRAP_PC;
    Ifx_CPU_FPU_TRAP_OPC FPU_TRAP_OPC;
    unsigned char reserved_A00C[4];
    Ifx_CPU_FPU_TRAP_SRC1 FPU_TRAP_SRC1;
    Ifx_CPU_FPU_TRAP_SRC2 FPU_TRAP_SRC2;
    Ifx_CPU_FPU_TRAP_SRC3 FPU_TRAP_SRC3;
    unsigned char reserved_A01C[8164];
    Ifx_CPU_DPR DPR[16];
    unsigned char reserved_C080[3968];
    Ifx_CPU_CPR CPR[8];
    unsigned char reserved_D040[4032];
    Ifx_CPU_CPXE CPXE[4];
    Ifx_CPU_DPRE DPRE[4];
    Ifx_CPU_DPWE DPWE[4];
    unsigned char reserved_E030[976];
    Ifx_CPU_TPS TPS;
    unsigned char reserved_E410[3056];
    Ifx_CPU_TR TR[8];
    unsigned char reserved_F040[3008];
    Ifx_CPU_CCTRL CCTRL;
    Ifx_CPU_CCNT CCNT;
    Ifx_CPU_ICNT ICNT;
    Ifx_CPU_M1CNT M1CNT;
    Ifx_CPU_M2CNT M2CNT;
    Ifx_CPU_M3CNT M3CNT;
    unsigned char reserved_FC18[232];
    Ifx_CPU_DBGSR DBGSR;
    unsigned char reserved_FD04[4];
    Ifx_CPU_EXEVT EXEVT;
    Ifx_CPU_CREVT CREVT;
    Ifx_CPU_SWEVT SWEVT;
    unsigned char reserved_FD14[28];
    Ifx_CPU_TRIG_ACC TRIG_ACC;
    unsigned char reserved_FD34[12];
    Ifx_CPU_DMS DMS;
    Ifx_CPU_DCX DCX;
    Ifx_CPU_DBGTCR DBGTCR;
    unsigned char reserved_FD4C[180];
    Ifx_CPU_PCXI PCXI;
    Ifx_CPU_PSW PSW;
    Ifx_CPU_PC PC;
    unsigned char reserved_FE0C[8];
    Ifx_CPU_SYSCON SYSCON;
    Ifx_CPU_CPU_ID CPU_ID;
    Ifx_CPU_CORE_ID CORE_ID;
    Ifx_CPU_BIV BIV;
    Ifx_CPU_BTV BTV;
    Ifx_CPU_ISP ISP;
    Ifx_CPU_ICR ICR;
    unsigned char reserved_FE30[8];
    Ifx_CPU_FCX FCX;
    Ifx_CPU_LCX LCX;
    unsigned char reserved_FE40[16];
    Ifx_CPU_CUS_ID CUS_ID;
    unsigned char reserved_FE54[172];
    Ifx_CPU_D D[16];
    unsigned char reserved_FF40[64];
    Ifx_CPU_A A[16];
    unsigned char reserved_FFC0[64];
} Ifx_CPU;


typedef volatile struct _Ifx_CPU_SPROT
{
    unsigned char reserved_0[57344];
    Ifx_CPU_SPROT_RGN RGN[8];
    unsigned char reserved_E080[128];
    Ifx_CPU_SPROT_ACCENA ACCENA;
    Ifx_CPU_SPROT_ACCENB ACCENB;
    unsigned char reserved_E108[7928];
} Ifx_CPU_SPROT;
# 55 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCpu_reg.h" 2 3





#define MODULE_CPU0 (*(Ifx_CPU*)0xF8810000u)


#define MODULE_CPU0_SPROT (*(Ifx_CPU_SPROT*)0xF8800000u)


#define MODULE_CPU1 (*(Ifx_CPU*)0xF8830000u)


#define MODULE_CPU1_SPROT (*(Ifx_CPU_SPROT*)0xF8820000u)


#define MODULE_CPU2 (*(Ifx_CPU*)0xF8850000u)


#define MODULE_CPU2_SPROT (*(Ifx_CPU_SPROT*)0xF8840000u)







#define CPU0_A0 (*(volatile Ifx_CPU_A*)0xF881FF80u)


#define CPU0_A1 (*(volatile Ifx_CPU_A*)0xF881FF84u)


#define CPU0_A10 (*(volatile Ifx_CPU_A*)0xF881FFA8u)


#define CPU0_A11 (*(volatile Ifx_CPU_A*)0xF881FFACu)


#define CPU0_A12 (*(volatile Ifx_CPU_A*)0xF881FFB0u)


#define CPU0_A13 (*(volatile Ifx_CPU_A*)0xF881FFB4u)


#define CPU0_A14 (*(volatile Ifx_CPU_A*)0xF881FFB8u)


#define CPU0_A15 (*(volatile Ifx_CPU_A*)0xF881FFBCu)


#define CPU0_A2 (*(volatile Ifx_CPU_A*)0xF881FF88u)


#define CPU0_A3 (*(volatile Ifx_CPU_A*)0xF881FF8Cu)


#define CPU0_A4 (*(volatile Ifx_CPU_A*)0xF881FF90u)


#define CPU0_A5 (*(volatile Ifx_CPU_A*)0xF881FF94u)


#define CPU0_A6 (*(volatile Ifx_CPU_A*)0xF881FF98u)


#define CPU0_A7 (*(volatile Ifx_CPU_A*)0xF881FF9Cu)


#define CPU0_A8 (*(volatile Ifx_CPU_A*)0xF881FFA0u)


#define CPU0_A9 (*(volatile Ifx_CPU_A*)0xF881FFA4u)


#define CPU0_BIV (*(volatile Ifx_CPU_BIV*)0xF881FE20u)


#define CPU0_BTV (*(volatile Ifx_CPU_BTV*)0xF881FE24u)


#define CPU0_CCNT (*(volatile Ifx_CPU_CCNT*)0xF881FC04u)


#define CPU0_CCTRL (*(volatile Ifx_CPU_CCTRL*)0xF881FC00u)


#define CPU0_COMPAT (*(volatile Ifx_CPU_COMPAT*)0xF8819400u)


#define CPU0_CORE_ID (*(volatile Ifx_CPU_CORE_ID*)0xF881FE1Cu)


#define CPU0_CPR0_L (*(volatile Ifx_CPU_CPR_L*)0xF881D000u)


#define CPU0_CPR0_U (*(volatile Ifx_CPU_CPR_U*)0xF881D004u)


#define CPU0_CPR1_L (*(volatile Ifx_CPU_CPR_L*)0xF881D008u)


#define CPU0_CPR1_U (*(volatile Ifx_CPU_CPR_U*)0xF881D00Cu)


#define CPU0_CPR2_L (*(volatile Ifx_CPU_CPR_L*)0xF881D010u)


#define CPU0_CPR2_U (*(volatile Ifx_CPU_CPR_U*)0xF881D014u)


#define CPU0_CPR3_L (*(volatile Ifx_CPU_CPR_L*)0xF881D018u)


#define CPU0_CPR3_U (*(volatile Ifx_CPU_CPR_U*)0xF881D01Cu)


#define CPU0_CPR4_L (*(volatile Ifx_CPU_CPR_L*)0xF881D020u)


#define CPU0_CPR4_U (*(volatile Ifx_CPU_CPR_U*)0xF881D024u)


#define CPU0_CPR5_L (*(volatile Ifx_CPU_CPR_L*)0xF881D028u)


#define CPU0_CPR5_U (*(volatile Ifx_CPU_CPR_U*)0xF881D02Cu)


#define CPU0_CPR6_L (*(volatile Ifx_CPU_CPR_L*)0xF881D030u)


#define CPU0_CPR6_U (*(volatile Ifx_CPU_CPR_U*)0xF881D034u)


#define CPU0_CPR7_L (*(volatile Ifx_CPU_CPR_L*)0xF881D038u)


#define CPU0_CPR7_U (*(volatile Ifx_CPU_CPR_U*)0xF881D03Cu)


#define CPU0_CPU_ID (*(volatile Ifx_CPU_CPU_ID*)0xF881FE18u)


#define CPU0_CPXE0 (*(volatile Ifx_CPU_CPXE*)0xF881E000u)




#define CPU0_CPXE_0 (CPU0_CPXE0)


#define CPU0_CPXE1 (*(volatile Ifx_CPU_CPXE*)0xF881E004u)




#define CPU0_CPXE_1 (CPU0_CPXE1)


#define CPU0_CPXE2 (*(volatile Ifx_CPU_CPXE*)0xF881E008u)




#define CPU0_CPXE_2 (CPU0_CPXE2)


#define CPU0_CPXE3 (*(volatile Ifx_CPU_CPXE*)0xF881E00Cu)




#define CPU0_CPXE_3 (CPU0_CPXE3)


#define CPU0_CREVT (*(volatile Ifx_CPU_CREVT*)0xF881FD0Cu)


#define CPU0_CUS_ID (*(volatile Ifx_CPU_CUS_ID*)0xF881FE50u)


#define CPU0_D0 (*(volatile Ifx_CPU_D*)0xF881FF00u)


#define CPU0_D1 (*(volatile Ifx_CPU_D*)0xF881FF04u)


#define CPU0_D10 (*(volatile Ifx_CPU_D*)0xF881FF28u)


#define CPU0_D11 (*(volatile Ifx_CPU_D*)0xF881FF2Cu)


#define CPU0_D12 (*(volatile Ifx_CPU_D*)0xF881FF30u)


#define CPU0_D13 (*(volatile Ifx_CPU_D*)0xF881FF34u)


#define CPU0_D14 (*(volatile Ifx_CPU_D*)0xF881FF38u)


#define CPU0_D15 (*(volatile Ifx_CPU_D*)0xF881FF3Cu)


#define CPU0_D2 (*(volatile Ifx_CPU_D*)0xF881FF08u)


#define CPU0_D3 (*(volatile Ifx_CPU_D*)0xF881FF0Cu)


#define CPU0_D4 (*(volatile Ifx_CPU_D*)0xF881FF10u)


#define CPU0_D5 (*(volatile Ifx_CPU_D*)0xF881FF14u)


#define CPU0_D6 (*(volatile Ifx_CPU_D*)0xF881FF18u)


#define CPU0_D7 (*(volatile Ifx_CPU_D*)0xF881FF1Cu)


#define CPU0_D8 (*(volatile Ifx_CPU_D*)0xF881FF20u)


#define CPU0_D9 (*(volatile Ifx_CPU_D*)0xF881FF24u)


#define CPU0_DATR (*(volatile Ifx_CPU_DATR*)0xF8819018u)


#define CPU0_DBGSR (*(volatile Ifx_CPU_DBGSR*)0xF881FD00u)


#define CPU0_DBGTCR (*(volatile Ifx_CPU_DBGTCR*)0xF881FD48u)


#define CPU0_DCON0 (*(volatile Ifx_CPU_DCON0*)0xF8819040u)


#define CPU0_DCON2 (*(volatile Ifx_CPU_DCON2*)0xF8819000u)


#define CPU0_DCX (*(volatile Ifx_CPU_DCX*)0xF881FD44u)


#define CPU0_DEADD (*(volatile Ifx_CPU_DEADD*)0xF881901Cu)


#define CPU0_DIEAR (*(volatile Ifx_CPU_DIEAR*)0xF8819020u)


#define CPU0_DIETR (*(volatile Ifx_CPU_DIETR*)0xF8819024u)


#define CPU0_DMS (*(volatile Ifx_CPU_DMS*)0xF881FD40u)


#define CPU0_DPR0_L (*(volatile Ifx_CPU_DPR_L*)0xF881C000u)


#define CPU0_DPR0_U (*(volatile Ifx_CPU_DPR_U*)0xF881C004u)


#define CPU0_DPR10_L (*(volatile Ifx_CPU_DPR_L*)0xF881C050u)


#define CPU0_DPR10_U (*(volatile Ifx_CPU_DPR_U*)0xF881C054u)


#define CPU0_DPR11_L (*(volatile Ifx_CPU_DPR_L*)0xF881C058u)


#define CPU0_DPR11_U (*(volatile Ifx_CPU_DPR_U*)0xF881C05Cu)


#define CPU0_DPR12_L (*(volatile Ifx_CPU_DPR_L*)0xF881C060u)


#define CPU0_DPR12_U (*(volatile Ifx_CPU_DPR_U*)0xF881C064u)


#define CPU0_DPR13_L (*(volatile Ifx_CPU_DPR_L*)0xF881C068u)


#define CPU0_DPR13_U (*(volatile Ifx_CPU_DPR_U*)0xF881C06Cu)


#define CPU0_DPR14_L (*(volatile Ifx_CPU_DPR_L*)0xF881C070u)


#define CPU0_DPR14_U (*(volatile Ifx_CPU_DPR_U*)0xF881C074u)


#define CPU0_DPR15_L (*(volatile Ifx_CPU_DPR_L*)0xF881C078u)


#define CPU0_DPR15_U (*(volatile Ifx_CPU_DPR_U*)0xF881C07Cu)


#define CPU0_DPR1_L (*(volatile Ifx_CPU_DPR_L*)0xF881C008u)


#define CPU0_DPR1_U (*(volatile Ifx_CPU_DPR_U*)0xF881C00Cu)


#define CPU0_DPR2_L (*(volatile Ifx_CPU_DPR_L*)0xF881C010u)


#define CPU0_DPR2_U (*(volatile Ifx_CPU_DPR_U*)0xF881C014u)


#define CPU0_DPR3_L (*(volatile Ifx_CPU_DPR_L*)0xF881C018u)


#define CPU0_DPR3_U (*(volatile Ifx_CPU_DPR_U*)0xF881C01Cu)


#define CPU0_DPR4_L (*(volatile Ifx_CPU_DPR_L*)0xF881C020u)


#define CPU0_DPR4_U (*(volatile Ifx_CPU_DPR_U*)0xF881C024u)


#define CPU0_DPR5_L (*(volatile Ifx_CPU_DPR_L*)0xF881C028u)


#define CPU0_DPR5_U (*(volatile Ifx_CPU_DPR_U*)0xF881C02Cu)


#define CPU0_DPR6_L (*(volatile Ifx_CPU_DPR_L*)0xF881C030u)


#define CPU0_DPR6_U (*(volatile Ifx_CPU_DPR_U*)0xF881C034u)


#define CPU0_DPR7_L (*(volatile Ifx_CPU_DPR_L*)0xF881C038u)


#define CPU0_DPR7_U (*(volatile Ifx_CPU_DPR_U*)0xF881C03Cu)


#define CPU0_DPR8_L (*(volatile Ifx_CPU_DPR_L*)0xF881C040u)


#define CPU0_DPR8_U (*(volatile Ifx_CPU_DPR_U*)0xF881C044u)


#define CPU0_DPR9_L (*(volatile Ifx_CPU_DPR_L*)0xF881C048u)


#define CPU0_DPR9_U (*(volatile Ifx_CPU_DPR_U*)0xF881C04Cu)


#define CPU0_DPRE0 (*(volatile Ifx_CPU_DPRE*)0xF881E010u)




#define CPU0_DPRE_0 (CPU0_DPRE0)


#define CPU0_DPRE1 (*(volatile Ifx_CPU_DPRE*)0xF881E014u)




#define CPU0_DPRE_1 (CPU0_DPRE1)


#define CPU0_DPRE2 (*(volatile Ifx_CPU_DPRE*)0xF881E018u)




#define CPU0_DPRE_2 (CPU0_DPRE2)


#define CPU0_DPRE3 (*(volatile Ifx_CPU_DPRE*)0xF881E01Cu)




#define CPU0_DPRE_3 (CPU0_DPRE3)


#define CPU0_DPWE0 (*(volatile Ifx_CPU_DPWE*)0xF881E020u)




#define CPU0_DPWE_0 (CPU0_DPWE0)


#define CPU0_DPWE1 (*(volatile Ifx_CPU_DPWE*)0xF881E024u)




#define CPU0_DPWE_1 (CPU0_DPWE1)


#define CPU0_DPWE2 (*(volatile Ifx_CPU_DPWE*)0xF881E028u)




#define CPU0_DPWE_2 (CPU0_DPWE2)


#define CPU0_DPWE3 (*(volatile Ifx_CPU_DPWE*)0xF881E02Cu)




#define CPU0_DPWE_3 (CPU0_DPWE3)


#define CPU0_DSTR (*(volatile Ifx_CPU_DSTR*)0xF8819010u)


#define CPU0_EXEVT (*(volatile Ifx_CPU_EXEVT*)0xF881FD08u)


#define CPU0_FCX (*(volatile Ifx_CPU_FCX*)0xF881FE38u)


#define CPU0_FPU_TRAP_CON (*(volatile Ifx_CPU_FPU_TRAP_CON*)0xF881A000u)


#define CPU0_FPU_TRAP_OPC (*(volatile Ifx_CPU_FPU_TRAP_OPC*)0xF881A008u)


#define CPU0_FPU_TRAP_PC (*(volatile Ifx_CPU_FPU_TRAP_PC*)0xF881A004u)


#define CPU0_FPU_TRAP_SRC1 (*(volatile Ifx_CPU_FPU_TRAP_SRC1*)0xF881A010u)


#define CPU0_FPU_TRAP_SRC2 (*(volatile Ifx_CPU_FPU_TRAP_SRC2*)0xF881A014u)


#define CPU0_FPU_TRAP_SRC3 (*(volatile Ifx_CPU_FPU_TRAP_SRC3*)0xF881A018u)


#define CPU0_ICNT (*(volatile Ifx_CPU_ICNT*)0xF881FC08u)


#define CPU0_ICR (*(volatile Ifx_CPU_ICR*)0xF881FE2Cu)


#define CPU0_ISP (*(volatile Ifx_CPU_ISP*)0xF881FE28u)


#define CPU0_LCX (*(volatile Ifx_CPU_LCX*)0xF881FE3Cu)


#define CPU0_M1CNT (*(volatile Ifx_CPU_M1CNT*)0xF881FC0Cu)


#define CPU0_M2CNT (*(volatile Ifx_CPU_M2CNT*)0xF881FC10u)


#define CPU0_M3CNT (*(volatile Ifx_CPU_M3CNT*)0xF881FC14u)


#define CPU0_PC (*(volatile Ifx_CPU_PC*)0xF881FE08u)


#define CPU0_PCON0 (*(volatile Ifx_CPU_PCON0*)0xF881920Cu)


#define CPU0_PCON1 (*(volatile Ifx_CPU_PCON1*)0xF8819204u)


#define CPU0_PCON2 (*(volatile Ifx_CPU_PCON2*)0xF8819208u)


#define CPU0_PCXI (*(volatile Ifx_CPU_PCXI*)0xF881FE00u)


#define CPU0_PIEAR (*(volatile Ifx_CPU_PIEAR*)0xF8819210u)


#define CPU0_PIETR (*(volatile Ifx_CPU_PIETR*)0xF8819214u)


#define CPU0_PMA0 (*(volatile Ifx_CPU_PMA0*)0xF8818100u)


#define CPU0_PMA1 (*(volatile Ifx_CPU_PMA1*)0xF8818104u)


#define CPU0_PMA2 (*(volatile Ifx_CPU_PMA2*)0xF8818108u)


#define CPU0_PSTR (*(volatile Ifx_CPU_PSTR*)0xF8819200u)


#define CPU0_PSW (*(volatile Ifx_CPU_PSW*)0xF881FE04u)


#define CPU0_SEGEN (*(volatile Ifx_CPU_SEGEN*)0xF8811030u)


#define CPU0_SMACON (*(volatile Ifx_CPU_SMACON*)0xF881900Cu)


#define CPU0_SWEVT (*(volatile Ifx_CPU_SWEVT*)0xF881FD10u)


#define CPU0_SYSCON (*(volatile Ifx_CPU_SYSCON*)0xF881FE14u)


#define CPU0_TASK_ASI (*(volatile Ifx_CPU_TASK_ASI*)0xF8818004u)


#define CPU0_TPS_CON (*(volatile Ifx_CPU_TPS_CON*)0xF881E400u)


#define CPU0_TPS_TIMER0 (*(volatile Ifx_CPU_TPS_TIMER*)0xF881E404u)


#define CPU0_TPS_TIMER1 (*(volatile Ifx_CPU_TPS_TIMER*)0xF881E408u)


#define CPU0_TPS_TIMER2 (*(volatile Ifx_CPU_TPS_TIMER*)0xF881E40Cu)


#define CPU0_TR0_ADR (*(volatile Ifx_CPU_TR_ADR*)0xF881F004u)




#define CPU0_TR0ADR (CPU0_TR0_ADR)


#define CPU0_TR0_EVT (*(volatile Ifx_CPU_TR_EVT*)0xF881F000u)




#define CPU0_TR0EVT (CPU0_TR0_EVT)


#define CPU0_TR1_ADR (*(volatile Ifx_CPU_TR_ADR*)0xF881F00Cu)




#define CPU0_TR1ADR (CPU0_TR1_ADR)


#define CPU0_TR1_EVT (*(volatile Ifx_CPU_TR_EVT*)0xF881F008u)




#define CPU0_TR1EVT (CPU0_TR1_EVT)


#define CPU0_TR2_ADR (*(volatile Ifx_CPU_TR_ADR*)0xF881F014u)




#define CPU0_TR2ADR (CPU0_TR2_ADR)


#define CPU0_TR2_EVT (*(volatile Ifx_CPU_TR_EVT*)0xF881F010u)




#define CPU0_TR2EVT (CPU0_TR2_EVT)


#define CPU0_TR3_ADR (*(volatile Ifx_CPU_TR_ADR*)0xF881F01Cu)




#define CPU0_TR3ADR (CPU0_TR3_ADR)


#define CPU0_TR3_EVT (*(volatile Ifx_CPU_TR_EVT*)0xF881F018u)




#define CPU0_TR3EVT (CPU0_TR3_EVT)


#define CPU0_TR4_ADR (*(volatile Ifx_CPU_TR_ADR*)0xF881F024u)




#define CPU0_TR4ADR (CPU0_TR4_ADR)


#define CPU0_TR4_EVT (*(volatile Ifx_CPU_TR_EVT*)0xF881F020u)




#define CPU0_TR4EVT (CPU0_TR4_EVT)


#define CPU0_TR5_ADR (*(volatile Ifx_CPU_TR_ADR*)0xF881F02Cu)




#define CPU0_TR5ADR (CPU0_TR5_ADR)


#define CPU0_TR5_EVT (*(volatile Ifx_CPU_TR_EVT*)0xF881F028u)




#define CPU0_TR5EVT (CPU0_TR5_EVT)


#define CPU0_TR6_ADR (*(volatile Ifx_CPU_TR_ADR*)0xF881F034u)




#define CPU0_TR6ADR (CPU0_TR6_ADR)


#define CPU0_TR6_EVT (*(volatile Ifx_CPU_TR_EVT*)0xF881F030u)




#define CPU0_TR6EVT (CPU0_TR6_EVT)


#define CPU0_TR7_ADR (*(volatile Ifx_CPU_TR_ADR*)0xF881F03Cu)




#define CPU0_TR7ADR (CPU0_TR7_ADR)


#define CPU0_TR7_EVT (*(volatile Ifx_CPU_TR_EVT*)0xF881F038u)




#define CPU0_TR7EVT (CPU0_TR7_EVT)


#define CPU0_TRIG_ACC (*(volatile Ifx_CPU_TRIG_ACC*)0xF881FD30u)







#define CPU1_A0 (*(volatile Ifx_CPU_A*)0xF883FF80u)


#define CPU1_A1 (*(volatile Ifx_CPU_A*)0xF883FF84u)


#define CPU1_A10 (*(volatile Ifx_CPU_A*)0xF883FFA8u)


#define CPU1_A11 (*(volatile Ifx_CPU_A*)0xF883FFACu)


#define CPU1_A12 (*(volatile Ifx_CPU_A*)0xF883FFB0u)


#define CPU1_A13 (*(volatile Ifx_CPU_A*)0xF883FFB4u)


#define CPU1_A14 (*(volatile Ifx_CPU_A*)0xF883FFB8u)


#define CPU1_A15 (*(volatile Ifx_CPU_A*)0xF883FFBCu)


#define CPU1_A2 (*(volatile Ifx_CPU_A*)0xF883FF88u)


#define CPU1_A3 (*(volatile Ifx_CPU_A*)0xF883FF8Cu)


#define CPU1_A4 (*(volatile Ifx_CPU_A*)0xF883FF90u)


#define CPU1_A5 (*(volatile Ifx_CPU_A*)0xF883FF94u)


#define CPU1_A6 (*(volatile Ifx_CPU_A*)0xF883FF98u)


#define CPU1_A7 (*(volatile Ifx_CPU_A*)0xF883FF9Cu)


#define CPU1_A8 (*(volatile Ifx_CPU_A*)0xF883FFA0u)


#define CPU1_A9 (*(volatile Ifx_CPU_A*)0xF883FFA4u)


#define CPU1_BIV (*(volatile Ifx_CPU_BIV*)0xF883FE20u)


#define CPU1_BTV (*(volatile Ifx_CPU_BTV*)0xF883FE24u)


#define CPU1_CCNT (*(volatile Ifx_CPU_CCNT*)0xF883FC04u)


#define CPU1_CCTRL (*(volatile Ifx_CPU_CCTRL*)0xF883FC00u)


#define CPU1_COMPAT (*(volatile Ifx_CPU_COMPAT*)0xF8839400u)


#define CPU1_CORE_ID (*(volatile Ifx_CPU_CORE_ID*)0xF883FE1Cu)


#define CPU1_CPR0_L (*(volatile Ifx_CPU_CPR_L*)0xF883D000u)


#define CPU1_CPR0_U (*(volatile Ifx_CPU_CPR_U*)0xF883D004u)


#define CPU1_CPR1_L (*(volatile Ifx_CPU_CPR_L*)0xF883D008u)


#define CPU1_CPR1_U (*(volatile Ifx_CPU_CPR_U*)0xF883D00Cu)


#define CPU1_CPR2_L (*(volatile Ifx_CPU_CPR_L*)0xF883D010u)


#define CPU1_CPR2_U (*(volatile Ifx_CPU_CPR_U*)0xF883D014u)


#define CPU1_CPR3_L (*(volatile Ifx_CPU_CPR_L*)0xF883D018u)


#define CPU1_CPR3_U (*(volatile Ifx_CPU_CPR_U*)0xF883D01Cu)


#define CPU1_CPR4_L (*(volatile Ifx_CPU_CPR_L*)0xF883D020u)


#define CPU1_CPR4_U (*(volatile Ifx_CPU_CPR_U*)0xF883D024u)


#define CPU1_CPR5_L (*(volatile Ifx_CPU_CPR_L*)0xF883D028u)


#define CPU1_CPR5_U (*(volatile Ifx_CPU_CPR_U*)0xF883D02Cu)


#define CPU1_CPR6_L (*(volatile Ifx_CPU_CPR_L*)0xF883D030u)


#define CPU1_CPR6_U (*(volatile Ifx_CPU_CPR_U*)0xF883D034u)


#define CPU1_CPR7_L (*(volatile Ifx_CPU_CPR_L*)0xF883D038u)


#define CPU1_CPR7_U (*(volatile Ifx_CPU_CPR_U*)0xF883D03Cu)


#define CPU1_CPU_ID (*(volatile Ifx_CPU_CPU_ID*)0xF883FE18u)


#define CPU1_CPXE0 (*(volatile Ifx_CPU_CPXE*)0xF883E000u)




#define CPU1_CPXE_0 (CPU1_CPXE0)


#define CPU1_CPXE1 (*(volatile Ifx_CPU_CPXE*)0xF883E004u)




#define CPU1_CPXE_1 (CPU1_CPXE1)


#define CPU1_CPXE2 (*(volatile Ifx_CPU_CPXE*)0xF883E008u)




#define CPU1_CPXE_2 (CPU1_CPXE2)


#define CPU1_CPXE3 (*(volatile Ifx_CPU_CPXE*)0xF883E00Cu)




#define CPU1_CPXE_3 (CPU1_CPXE3)


#define CPU1_CREVT (*(volatile Ifx_CPU_CREVT*)0xF883FD0Cu)


#define CPU1_CUS_ID (*(volatile Ifx_CPU_CUS_ID*)0xF883FE50u)


#define CPU1_D0 (*(volatile Ifx_CPU_D*)0xF883FF00u)


#define CPU1_D1 (*(volatile Ifx_CPU_D*)0xF883FF04u)


#define CPU1_D10 (*(volatile Ifx_CPU_D*)0xF883FF28u)


#define CPU1_D11 (*(volatile Ifx_CPU_D*)0xF883FF2Cu)


#define CPU1_D12 (*(volatile Ifx_CPU_D*)0xF883FF30u)


#define CPU1_D13 (*(volatile Ifx_CPU_D*)0xF883FF34u)


#define CPU1_D14 (*(volatile Ifx_CPU_D*)0xF883FF38u)


#define CPU1_D15 (*(volatile Ifx_CPU_D*)0xF883FF3Cu)


#define CPU1_D2 (*(volatile Ifx_CPU_D*)0xF883FF08u)


#define CPU1_D3 (*(volatile Ifx_CPU_D*)0xF883FF0Cu)


#define CPU1_D4 (*(volatile Ifx_CPU_D*)0xF883FF10u)


#define CPU1_D5 (*(volatile Ifx_CPU_D*)0xF883FF14u)


#define CPU1_D6 (*(volatile Ifx_CPU_D*)0xF883FF18u)


#define CPU1_D7 (*(volatile Ifx_CPU_D*)0xF883FF1Cu)


#define CPU1_D8 (*(volatile Ifx_CPU_D*)0xF883FF20u)


#define CPU1_D9 (*(volatile Ifx_CPU_D*)0xF883FF24u)


#define CPU1_DATR (*(volatile Ifx_CPU_DATR*)0xF8839018u)


#define CPU1_DBGSR (*(volatile Ifx_CPU_DBGSR*)0xF883FD00u)


#define CPU1_DBGTCR (*(volatile Ifx_CPU_DBGTCR*)0xF883FD48u)


#define CPU1_DCON0 (*(volatile Ifx_CPU_DCON0*)0xF8839040u)


#define CPU1_DCON2 (*(volatile Ifx_CPU_DCON2*)0xF8839000u)


#define CPU1_DCX (*(volatile Ifx_CPU_DCX*)0xF883FD44u)


#define CPU1_DEADD (*(volatile Ifx_CPU_DEADD*)0xF883901Cu)


#define CPU1_DIEAR (*(volatile Ifx_CPU_DIEAR*)0xF8839020u)


#define CPU1_DIETR (*(volatile Ifx_CPU_DIETR*)0xF8839024u)


#define CPU1_DMS (*(volatile Ifx_CPU_DMS*)0xF883FD40u)


#define CPU1_DPR0_L (*(volatile Ifx_CPU_DPR_L*)0xF883C000u)


#define CPU1_DPR0_U (*(volatile Ifx_CPU_DPR_U*)0xF883C004u)


#define CPU1_DPR10_L (*(volatile Ifx_CPU_DPR_L*)0xF883C050u)


#define CPU1_DPR10_U (*(volatile Ifx_CPU_DPR_U*)0xF883C054u)


#define CPU1_DPR11_L (*(volatile Ifx_CPU_DPR_L*)0xF883C058u)


#define CPU1_DPR11_U (*(volatile Ifx_CPU_DPR_U*)0xF883C05Cu)


#define CPU1_DPR12_L (*(volatile Ifx_CPU_DPR_L*)0xF883C060u)


#define CPU1_DPR12_U (*(volatile Ifx_CPU_DPR_U*)0xF883C064u)


#define CPU1_DPR13_L (*(volatile Ifx_CPU_DPR_L*)0xF883C068u)


#define CPU1_DPR13_U (*(volatile Ifx_CPU_DPR_U*)0xF883C06Cu)


#define CPU1_DPR14_L (*(volatile Ifx_CPU_DPR_L*)0xF883C070u)


#define CPU1_DPR14_U (*(volatile Ifx_CPU_DPR_U*)0xF883C074u)


#define CPU1_DPR15_L (*(volatile Ifx_CPU_DPR_L*)0xF883C078u)


#define CPU1_DPR15_U (*(volatile Ifx_CPU_DPR_U*)0xF883C07Cu)


#define CPU1_DPR1_L (*(volatile Ifx_CPU_DPR_L*)0xF883C008u)


#define CPU1_DPR1_U (*(volatile Ifx_CPU_DPR_U*)0xF883C00Cu)


#define CPU1_DPR2_L (*(volatile Ifx_CPU_DPR_L*)0xF883C010u)


#define CPU1_DPR2_U (*(volatile Ifx_CPU_DPR_U*)0xF883C014u)


#define CPU1_DPR3_L (*(volatile Ifx_CPU_DPR_L*)0xF883C018u)


#define CPU1_DPR3_U (*(volatile Ifx_CPU_DPR_U*)0xF883C01Cu)


#define CPU1_DPR4_L (*(volatile Ifx_CPU_DPR_L*)0xF883C020u)


#define CPU1_DPR4_U (*(volatile Ifx_CPU_DPR_U*)0xF883C024u)


#define CPU1_DPR5_L (*(volatile Ifx_CPU_DPR_L*)0xF883C028u)


#define CPU1_DPR5_U (*(volatile Ifx_CPU_DPR_U*)0xF883C02Cu)


#define CPU1_DPR6_L (*(volatile Ifx_CPU_DPR_L*)0xF883C030u)


#define CPU1_DPR6_U (*(volatile Ifx_CPU_DPR_U*)0xF883C034u)


#define CPU1_DPR7_L (*(volatile Ifx_CPU_DPR_L*)0xF883C038u)


#define CPU1_DPR7_U (*(volatile Ifx_CPU_DPR_U*)0xF883C03Cu)


#define CPU1_DPR8_L (*(volatile Ifx_CPU_DPR_L*)0xF883C040u)


#define CPU1_DPR8_U (*(volatile Ifx_CPU_DPR_U*)0xF883C044u)


#define CPU1_DPR9_L (*(volatile Ifx_CPU_DPR_L*)0xF883C048u)


#define CPU1_DPR9_U (*(volatile Ifx_CPU_DPR_U*)0xF883C04Cu)


#define CPU1_DPRE0 (*(volatile Ifx_CPU_DPRE*)0xF883E010u)




#define CPU1_DPRE_0 (CPU1_DPRE0)


#define CPU1_DPRE1 (*(volatile Ifx_CPU_DPRE*)0xF883E014u)




#define CPU1_DPRE_1 (CPU1_DPRE1)


#define CPU1_DPRE2 (*(volatile Ifx_CPU_DPRE*)0xF883E018u)




#define CPU1_DPRE_2 (CPU1_DPRE2)


#define CPU1_DPRE3 (*(volatile Ifx_CPU_DPRE*)0xF883E01Cu)




#define CPU1_DPRE_3 (CPU1_DPRE3)


#define CPU1_DPWE0 (*(volatile Ifx_CPU_DPWE*)0xF883E020u)




#define CPU1_DPWE_0 (CPU1_DPWE0)


#define CPU1_DPWE1 (*(volatile Ifx_CPU_DPWE*)0xF883E024u)




#define CPU1_DPWE_1 (CPU1_DPWE1)


#define CPU1_DPWE2 (*(volatile Ifx_CPU_DPWE*)0xF883E028u)




#define CPU1_DPWE_2 (CPU1_DPWE2)


#define CPU1_DPWE3 (*(volatile Ifx_CPU_DPWE*)0xF883E02Cu)




#define CPU1_DPWE_3 (CPU1_DPWE3)


#define CPU1_DSTR (*(volatile Ifx_CPU_DSTR*)0xF8839010u)


#define CPU1_EXEVT (*(volatile Ifx_CPU_EXEVT*)0xF883FD08u)


#define CPU1_FCX (*(volatile Ifx_CPU_FCX*)0xF883FE38u)


#define CPU1_FPU_TRAP_CON (*(volatile Ifx_CPU_FPU_TRAP_CON*)0xF883A000u)


#define CPU1_FPU_TRAP_OPC (*(volatile Ifx_CPU_FPU_TRAP_OPC*)0xF883A008u)


#define CPU1_FPU_TRAP_PC (*(volatile Ifx_CPU_FPU_TRAP_PC*)0xF883A004u)


#define CPU1_FPU_TRAP_SRC1 (*(volatile Ifx_CPU_FPU_TRAP_SRC1*)0xF883A010u)


#define CPU1_FPU_TRAP_SRC2 (*(volatile Ifx_CPU_FPU_TRAP_SRC2*)0xF883A014u)


#define CPU1_FPU_TRAP_SRC3 (*(volatile Ifx_CPU_FPU_TRAP_SRC3*)0xF883A018u)


#define CPU1_ICNT (*(volatile Ifx_CPU_ICNT*)0xF883FC08u)


#define CPU1_ICR (*(volatile Ifx_CPU_ICR*)0xF883FE2Cu)


#define CPU1_ISP (*(volatile Ifx_CPU_ISP*)0xF883FE28u)


#define CPU1_LCX (*(volatile Ifx_CPU_LCX*)0xF883FE3Cu)


#define CPU1_M1CNT (*(volatile Ifx_CPU_M1CNT*)0xF883FC0Cu)


#define CPU1_M2CNT (*(volatile Ifx_CPU_M2CNT*)0xF883FC10u)


#define CPU1_M3CNT (*(volatile Ifx_CPU_M3CNT*)0xF883FC14u)


#define CPU1_PC (*(volatile Ifx_CPU_PC*)0xF883FE08u)


#define CPU1_PCON0 (*(volatile Ifx_CPU_PCON0*)0xF883920Cu)


#define CPU1_PCON1 (*(volatile Ifx_CPU_PCON1*)0xF8839204u)


#define CPU1_PCON2 (*(volatile Ifx_CPU_PCON2*)0xF8839208u)


#define CPU1_PCXI (*(volatile Ifx_CPU_PCXI*)0xF883FE00u)


#define CPU1_PIEAR (*(volatile Ifx_CPU_PIEAR*)0xF8839210u)


#define CPU1_PIETR (*(volatile Ifx_CPU_PIETR*)0xF8839214u)


#define CPU1_PMA0 (*(volatile Ifx_CPU_PMA0*)0xF8838100u)


#define CPU1_PMA1 (*(volatile Ifx_CPU_PMA1*)0xF8838104u)


#define CPU1_PMA2 (*(volatile Ifx_CPU_PMA2*)0xF8838108u)


#define CPU1_PSTR (*(volatile Ifx_CPU_PSTR*)0xF8839200u)


#define CPU1_PSW (*(volatile Ifx_CPU_PSW*)0xF883FE04u)


#define CPU1_SEGEN (*(volatile Ifx_CPU_SEGEN*)0xF8831030u)


#define CPU1_SMACON (*(volatile Ifx_CPU_SMACON*)0xF883900Cu)


#define CPU1_SWEVT (*(volatile Ifx_CPU_SWEVT*)0xF883FD10u)


#define CPU1_SYSCON (*(volatile Ifx_CPU_SYSCON*)0xF883FE14u)


#define CPU1_TASK_ASI (*(volatile Ifx_CPU_TASK_ASI*)0xF8838004u)


#define CPU1_TPS_CON (*(volatile Ifx_CPU_TPS_CON*)0xF883E400u)


#define CPU1_TPS_TIMER0 (*(volatile Ifx_CPU_TPS_TIMER*)0xF883E404u)


#define CPU1_TPS_TIMER1 (*(volatile Ifx_CPU_TPS_TIMER*)0xF883E408u)


#define CPU1_TPS_TIMER2 (*(volatile Ifx_CPU_TPS_TIMER*)0xF883E40Cu)


#define CPU1_TR0_ADR (*(volatile Ifx_CPU_TR_ADR*)0xF883F004u)




#define CPU1_TR0ADR (CPU1_TR0_ADR)


#define CPU1_TR0_EVT (*(volatile Ifx_CPU_TR_EVT*)0xF883F000u)




#define CPU1_TR0EVT (CPU1_TR0_EVT)


#define CPU1_TR1_ADR (*(volatile Ifx_CPU_TR_ADR*)0xF883F00Cu)




#define CPU1_TR1ADR (CPU1_TR1_ADR)


#define CPU1_TR1_EVT (*(volatile Ifx_CPU_TR_EVT*)0xF883F008u)




#define CPU1_TR1EVT (CPU1_TR1_EVT)


#define CPU1_TR2_ADR (*(volatile Ifx_CPU_TR_ADR*)0xF883F014u)




#define CPU1_TR2ADR (CPU1_TR2_ADR)


#define CPU1_TR2_EVT (*(volatile Ifx_CPU_TR_EVT*)0xF883F010u)




#define CPU1_TR2EVT (CPU1_TR2_EVT)


#define CPU1_TR3_ADR (*(volatile Ifx_CPU_TR_ADR*)0xF883F01Cu)




#define CPU1_TR3ADR (CPU1_TR3_ADR)


#define CPU1_TR3_EVT (*(volatile Ifx_CPU_TR_EVT*)0xF883F018u)




#define CPU1_TR3EVT (CPU1_TR3_EVT)


#define CPU1_TR4_ADR (*(volatile Ifx_CPU_TR_ADR*)0xF883F024u)




#define CPU1_TR4ADR (CPU1_TR4_ADR)


#define CPU1_TR4_EVT (*(volatile Ifx_CPU_TR_EVT*)0xF883F020u)




#define CPU1_TR4EVT (CPU1_TR4_EVT)


#define CPU1_TR5_ADR (*(volatile Ifx_CPU_TR_ADR*)0xF883F02Cu)




#define CPU1_TR5ADR (CPU1_TR5_ADR)


#define CPU1_TR5_EVT (*(volatile Ifx_CPU_TR_EVT*)0xF883F028u)




#define CPU1_TR5EVT (CPU1_TR5_EVT)


#define CPU1_TR6_ADR (*(volatile Ifx_CPU_TR_ADR*)0xF883F034u)




#define CPU1_TR6ADR (CPU1_TR6_ADR)


#define CPU1_TR6_EVT (*(volatile Ifx_CPU_TR_EVT*)0xF883F030u)




#define CPU1_TR6EVT (CPU1_TR6_EVT)


#define CPU1_TR7_ADR (*(volatile Ifx_CPU_TR_ADR*)0xF883F03Cu)




#define CPU1_TR7ADR (CPU1_TR7_ADR)


#define CPU1_TR7_EVT (*(volatile Ifx_CPU_TR_EVT*)0xF883F038u)




#define CPU1_TR7EVT (CPU1_TR7_EVT)


#define CPU1_TRIG_ACC (*(volatile Ifx_CPU_TRIG_ACC*)0xF883FD30u)







#define CPU2_A0 (*(volatile Ifx_CPU_A*)0xF885FF80u)


#define CPU2_A1 (*(volatile Ifx_CPU_A*)0xF885FF84u)


#define CPU2_A10 (*(volatile Ifx_CPU_A*)0xF885FFA8u)


#define CPU2_A11 (*(volatile Ifx_CPU_A*)0xF885FFACu)


#define CPU2_A12 (*(volatile Ifx_CPU_A*)0xF885FFB0u)


#define CPU2_A13 (*(volatile Ifx_CPU_A*)0xF885FFB4u)


#define CPU2_A14 (*(volatile Ifx_CPU_A*)0xF885FFB8u)


#define CPU2_A15 (*(volatile Ifx_CPU_A*)0xF885FFBCu)


#define CPU2_A2 (*(volatile Ifx_CPU_A*)0xF885FF88u)


#define CPU2_A3 (*(volatile Ifx_CPU_A*)0xF885FF8Cu)


#define CPU2_A4 (*(volatile Ifx_CPU_A*)0xF885FF90u)


#define CPU2_A5 (*(volatile Ifx_CPU_A*)0xF885FF94u)


#define CPU2_A6 (*(volatile Ifx_CPU_A*)0xF885FF98u)


#define CPU2_A7 (*(volatile Ifx_CPU_A*)0xF885FF9Cu)


#define CPU2_A8 (*(volatile Ifx_CPU_A*)0xF885FFA0u)


#define CPU2_A9 (*(volatile Ifx_CPU_A*)0xF885FFA4u)


#define CPU2_BIV (*(volatile Ifx_CPU_BIV*)0xF885FE20u)


#define CPU2_BTV (*(volatile Ifx_CPU_BTV*)0xF885FE24u)


#define CPU2_CCNT (*(volatile Ifx_CPU_CCNT*)0xF885FC04u)


#define CPU2_CCTRL (*(volatile Ifx_CPU_CCTRL*)0xF885FC00u)


#define CPU2_COMPAT (*(volatile Ifx_CPU_COMPAT*)0xF8859400u)


#define CPU2_CORE_ID (*(volatile Ifx_CPU_CORE_ID*)0xF885FE1Cu)


#define CPU2_CPR0_L (*(volatile Ifx_CPU_CPR_L*)0xF885D000u)


#define CPU2_CPR0_U (*(volatile Ifx_CPU_CPR_U*)0xF885D004u)


#define CPU2_CPR1_L (*(volatile Ifx_CPU_CPR_L*)0xF885D008u)


#define CPU2_CPR1_U (*(volatile Ifx_CPU_CPR_U*)0xF885D00Cu)


#define CPU2_CPR2_L (*(volatile Ifx_CPU_CPR_L*)0xF885D010u)


#define CPU2_CPR2_U (*(volatile Ifx_CPU_CPR_U*)0xF885D014u)


#define CPU2_CPR3_L (*(volatile Ifx_CPU_CPR_L*)0xF885D018u)


#define CPU2_CPR3_U (*(volatile Ifx_CPU_CPR_U*)0xF885D01Cu)


#define CPU2_CPR4_L (*(volatile Ifx_CPU_CPR_L*)0xF885D020u)


#define CPU2_CPR4_U (*(volatile Ifx_CPU_CPR_U*)0xF885D024u)


#define CPU2_CPR5_L (*(volatile Ifx_CPU_CPR_L*)0xF885D028u)


#define CPU2_CPR5_U (*(volatile Ifx_CPU_CPR_U*)0xF885D02Cu)


#define CPU2_CPR6_L (*(volatile Ifx_CPU_CPR_L*)0xF885D030u)


#define CPU2_CPR6_U (*(volatile Ifx_CPU_CPR_U*)0xF885D034u)


#define CPU2_CPR7_L (*(volatile Ifx_CPU_CPR_L*)0xF885D038u)


#define CPU2_CPR7_U (*(volatile Ifx_CPU_CPR_U*)0xF885D03Cu)


#define CPU2_CPU_ID (*(volatile Ifx_CPU_CPU_ID*)0xF885FE18u)


#define CPU2_CPXE0 (*(volatile Ifx_CPU_CPXE*)0xF885E000u)




#define CPU2_CPXE_0 (CPU2_CPXE0)


#define CPU2_CPXE1 (*(volatile Ifx_CPU_CPXE*)0xF885E004u)




#define CPU2_CPXE_1 (CPU2_CPXE1)


#define CPU2_CPXE2 (*(volatile Ifx_CPU_CPXE*)0xF885E008u)




#define CPU2_CPXE_2 (CPU2_CPXE2)


#define CPU2_CPXE3 (*(volatile Ifx_CPU_CPXE*)0xF885E00Cu)




#define CPU2_CPXE_3 (CPU2_CPXE3)


#define CPU2_CREVT (*(volatile Ifx_CPU_CREVT*)0xF885FD0Cu)


#define CPU2_CUS_ID (*(volatile Ifx_CPU_CUS_ID*)0xF885FE50u)


#define CPU2_D0 (*(volatile Ifx_CPU_D*)0xF885FF00u)


#define CPU2_D1 (*(volatile Ifx_CPU_D*)0xF885FF04u)


#define CPU2_D10 (*(volatile Ifx_CPU_D*)0xF885FF28u)


#define CPU2_D11 (*(volatile Ifx_CPU_D*)0xF885FF2Cu)


#define CPU2_D12 (*(volatile Ifx_CPU_D*)0xF885FF30u)


#define CPU2_D13 (*(volatile Ifx_CPU_D*)0xF885FF34u)


#define CPU2_D14 (*(volatile Ifx_CPU_D*)0xF885FF38u)


#define CPU2_D15 (*(volatile Ifx_CPU_D*)0xF885FF3Cu)


#define CPU2_D2 (*(volatile Ifx_CPU_D*)0xF885FF08u)


#define CPU2_D3 (*(volatile Ifx_CPU_D*)0xF885FF0Cu)


#define CPU2_D4 (*(volatile Ifx_CPU_D*)0xF885FF10u)


#define CPU2_D5 (*(volatile Ifx_CPU_D*)0xF885FF14u)


#define CPU2_D6 (*(volatile Ifx_CPU_D*)0xF885FF18u)


#define CPU2_D7 (*(volatile Ifx_CPU_D*)0xF885FF1Cu)


#define CPU2_D8 (*(volatile Ifx_CPU_D*)0xF885FF20u)


#define CPU2_D9 (*(volatile Ifx_CPU_D*)0xF885FF24u)


#define CPU2_DATR (*(volatile Ifx_CPU_DATR*)0xF8859018u)


#define CPU2_DBGSR (*(volatile Ifx_CPU_DBGSR*)0xF885FD00u)


#define CPU2_DBGTCR (*(volatile Ifx_CPU_DBGTCR*)0xF885FD48u)


#define CPU2_DCON0 (*(volatile Ifx_CPU_DCON0*)0xF8859040u)


#define CPU2_DCON2 (*(volatile Ifx_CPU_DCON2*)0xF8859000u)


#define CPU2_DCX (*(volatile Ifx_CPU_DCX*)0xF885FD44u)


#define CPU2_DEADD (*(volatile Ifx_CPU_DEADD*)0xF885901Cu)


#define CPU2_DIEAR (*(volatile Ifx_CPU_DIEAR*)0xF8859020u)


#define CPU2_DIETR (*(volatile Ifx_CPU_DIETR*)0xF8859024u)


#define CPU2_DMS (*(volatile Ifx_CPU_DMS*)0xF885FD40u)


#define CPU2_DPR0_L (*(volatile Ifx_CPU_DPR_L*)0xF885C000u)


#define CPU2_DPR0_U (*(volatile Ifx_CPU_DPR_U*)0xF885C004u)


#define CPU2_DPR10_L (*(volatile Ifx_CPU_DPR_L*)0xF885C050u)


#define CPU2_DPR10_U (*(volatile Ifx_CPU_DPR_U*)0xF885C054u)


#define CPU2_DPR11_L (*(volatile Ifx_CPU_DPR_L*)0xF885C058u)


#define CPU2_DPR11_U (*(volatile Ifx_CPU_DPR_U*)0xF885C05Cu)


#define CPU2_DPR12_L (*(volatile Ifx_CPU_DPR_L*)0xF885C060u)


#define CPU2_DPR12_U (*(volatile Ifx_CPU_DPR_U*)0xF885C064u)


#define CPU2_DPR13_L (*(volatile Ifx_CPU_DPR_L*)0xF885C068u)


#define CPU2_DPR13_U (*(volatile Ifx_CPU_DPR_U*)0xF885C06Cu)


#define CPU2_DPR14_L (*(volatile Ifx_CPU_DPR_L*)0xF885C070u)


#define CPU2_DPR14_U (*(volatile Ifx_CPU_DPR_U*)0xF885C074u)


#define CPU2_DPR15_L (*(volatile Ifx_CPU_DPR_L*)0xF885C078u)


#define CPU2_DPR15_U (*(volatile Ifx_CPU_DPR_U*)0xF885C07Cu)


#define CPU2_DPR1_L (*(volatile Ifx_CPU_DPR_L*)0xF885C008u)


#define CPU2_DPR1_U (*(volatile Ifx_CPU_DPR_U*)0xF885C00Cu)


#define CPU2_DPR2_L (*(volatile Ifx_CPU_DPR_L*)0xF885C010u)


#define CPU2_DPR2_U (*(volatile Ifx_CPU_DPR_U*)0xF885C014u)


#define CPU2_DPR3_L (*(volatile Ifx_CPU_DPR_L*)0xF885C018u)


#define CPU2_DPR3_U (*(volatile Ifx_CPU_DPR_U*)0xF885C01Cu)


#define CPU2_DPR4_L (*(volatile Ifx_CPU_DPR_L*)0xF885C020u)


#define CPU2_DPR4_U (*(volatile Ifx_CPU_DPR_U*)0xF885C024u)


#define CPU2_DPR5_L (*(volatile Ifx_CPU_DPR_L*)0xF885C028u)


#define CPU2_DPR5_U (*(volatile Ifx_CPU_DPR_U*)0xF885C02Cu)


#define CPU2_DPR6_L (*(volatile Ifx_CPU_DPR_L*)0xF885C030u)


#define CPU2_DPR6_U (*(volatile Ifx_CPU_DPR_U*)0xF885C034u)


#define CPU2_DPR7_L (*(volatile Ifx_CPU_DPR_L*)0xF885C038u)


#define CPU2_DPR7_U (*(volatile Ifx_CPU_DPR_U*)0xF885C03Cu)


#define CPU2_DPR8_L (*(volatile Ifx_CPU_DPR_L*)0xF885C040u)


#define CPU2_DPR8_U (*(volatile Ifx_CPU_DPR_U*)0xF885C044u)


#define CPU2_DPR9_L (*(volatile Ifx_CPU_DPR_L*)0xF885C048u)


#define CPU2_DPR9_U (*(volatile Ifx_CPU_DPR_U*)0xF885C04Cu)


#define CPU2_DPRE0 (*(volatile Ifx_CPU_DPRE*)0xF885E010u)




#define CPU2_DPRE_0 (CPU2_DPRE0)


#define CPU2_DPRE1 (*(volatile Ifx_CPU_DPRE*)0xF885E014u)




#define CPU2_DPRE_1 (CPU2_DPRE1)


#define CPU2_DPRE2 (*(volatile Ifx_CPU_DPRE*)0xF885E018u)




#define CPU2_DPRE_2 (CPU2_DPRE2)


#define CPU2_DPRE3 (*(volatile Ifx_CPU_DPRE*)0xF885E01Cu)




#define CPU2_DPRE_3 (CPU2_DPRE3)


#define CPU2_DPWE0 (*(volatile Ifx_CPU_DPWE*)0xF885E020u)




#define CPU2_DPWE_0 (CPU2_DPWE0)


#define CPU2_DPWE1 (*(volatile Ifx_CPU_DPWE*)0xF885E024u)




#define CPU2_DPWE_1 (CPU2_DPWE1)


#define CPU2_DPWE2 (*(volatile Ifx_CPU_DPWE*)0xF885E028u)




#define CPU2_DPWE_2 (CPU2_DPWE2)


#define CPU2_DPWE3 (*(volatile Ifx_CPU_DPWE*)0xF885E02Cu)




#define CPU2_DPWE_3 (CPU2_DPWE3)


#define CPU2_DSTR (*(volatile Ifx_CPU_DSTR*)0xF8859010u)


#define CPU2_EXEVT (*(volatile Ifx_CPU_EXEVT*)0xF885FD08u)


#define CPU2_FCX (*(volatile Ifx_CPU_FCX*)0xF885FE38u)


#define CPU2_FPU_TRAP_CON (*(volatile Ifx_CPU_FPU_TRAP_CON*)0xF885A000u)


#define CPU2_FPU_TRAP_OPC (*(volatile Ifx_CPU_FPU_TRAP_OPC*)0xF885A008u)


#define CPU2_FPU_TRAP_PC (*(volatile Ifx_CPU_FPU_TRAP_PC*)0xF885A004u)


#define CPU2_FPU_TRAP_SRC1 (*(volatile Ifx_CPU_FPU_TRAP_SRC1*)0xF885A010u)


#define CPU2_FPU_TRAP_SRC2 (*(volatile Ifx_CPU_FPU_TRAP_SRC2*)0xF885A014u)


#define CPU2_FPU_TRAP_SRC3 (*(volatile Ifx_CPU_FPU_TRAP_SRC3*)0xF885A018u)


#define CPU2_ICNT (*(volatile Ifx_CPU_ICNT*)0xF885FC08u)


#define CPU2_ICR (*(volatile Ifx_CPU_ICR*)0xF885FE2Cu)


#define CPU2_ISP (*(volatile Ifx_CPU_ISP*)0xF885FE28u)


#define CPU2_LCX (*(volatile Ifx_CPU_LCX*)0xF885FE3Cu)


#define CPU2_M1CNT (*(volatile Ifx_CPU_M1CNT*)0xF885FC0Cu)


#define CPU2_M2CNT (*(volatile Ifx_CPU_M2CNT*)0xF885FC10u)


#define CPU2_M3CNT (*(volatile Ifx_CPU_M3CNT*)0xF885FC14u)


#define CPU2_PC (*(volatile Ifx_CPU_PC*)0xF885FE08u)


#define CPU2_PCON0 (*(volatile Ifx_CPU_PCON0*)0xF885920Cu)


#define CPU2_PCON1 (*(volatile Ifx_CPU_PCON1*)0xF8859204u)


#define CPU2_PCON2 (*(volatile Ifx_CPU_PCON2*)0xF8859208u)


#define CPU2_PCXI (*(volatile Ifx_CPU_PCXI*)0xF885FE00u)


#define CPU2_PIEAR (*(volatile Ifx_CPU_PIEAR*)0xF8859210u)


#define CPU2_PIETR (*(volatile Ifx_CPU_PIETR*)0xF8859214u)


#define CPU2_PMA0 (*(volatile Ifx_CPU_PMA0*)0xF8858100u)


#define CPU2_PMA1 (*(volatile Ifx_CPU_PMA1*)0xF8858104u)


#define CPU2_PMA2 (*(volatile Ifx_CPU_PMA2*)0xF8858108u)


#define CPU2_PSTR (*(volatile Ifx_CPU_PSTR*)0xF8859200u)


#define CPU2_PSW (*(volatile Ifx_CPU_PSW*)0xF885FE04u)


#define CPU2_SEGEN (*(volatile Ifx_CPU_SEGEN*)0xF8851030u)


#define CPU2_SMACON (*(volatile Ifx_CPU_SMACON*)0xF885900Cu)


#define CPU2_SWEVT (*(volatile Ifx_CPU_SWEVT*)0xF885FD10u)


#define CPU2_SYSCON (*(volatile Ifx_CPU_SYSCON*)0xF885FE14u)


#define CPU2_TASK_ASI (*(volatile Ifx_CPU_TASK_ASI*)0xF8858004u)


#define CPU2_TPS_CON (*(volatile Ifx_CPU_TPS_CON*)0xF885E400u)


#define CPU2_TPS_TIMER0 (*(volatile Ifx_CPU_TPS_TIMER*)0xF885E404u)


#define CPU2_TPS_TIMER1 (*(volatile Ifx_CPU_TPS_TIMER*)0xF885E408u)


#define CPU2_TPS_TIMER2 (*(volatile Ifx_CPU_TPS_TIMER*)0xF885E40Cu)


#define CPU2_TR0_ADR (*(volatile Ifx_CPU_TR_ADR*)0xF885F004u)




#define CPU2_TR0ADR (CPU2_TR0_ADR)


#define CPU2_TR0_EVT (*(volatile Ifx_CPU_TR_EVT*)0xF885F000u)




#define CPU2_TR0EVT (CPU2_TR0_EVT)


#define CPU2_TR1_ADR (*(volatile Ifx_CPU_TR_ADR*)0xF885F00Cu)




#define CPU2_TR1ADR (CPU2_TR1_ADR)


#define CPU2_TR1_EVT (*(volatile Ifx_CPU_TR_EVT*)0xF885F008u)




#define CPU2_TR1EVT (CPU2_TR1_EVT)


#define CPU2_TR2_ADR (*(volatile Ifx_CPU_TR_ADR*)0xF885F014u)




#define CPU2_TR2ADR (CPU2_TR2_ADR)


#define CPU2_TR2_EVT (*(volatile Ifx_CPU_TR_EVT*)0xF885F010u)




#define CPU2_TR2EVT (CPU2_TR2_EVT)


#define CPU2_TR3_ADR (*(volatile Ifx_CPU_TR_ADR*)0xF885F01Cu)




#define CPU2_TR3ADR (CPU2_TR3_ADR)


#define CPU2_TR3_EVT (*(volatile Ifx_CPU_TR_EVT*)0xF885F018u)




#define CPU2_TR3EVT (CPU2_TR3_EVT)


#define CPU2_TR4_ADR (*(volatile Ifx_CPU_TR_ADR*)0xF885F024u)




#define CPU2_TR4ADR (CPU2_TR4_ADR)


#define CPU2_TR4_EVT (*(volatile Ifx_CPU_TR_EVT*)0xF885F020u)




#define CPU2_TR4EVT (CPU2_TR4_EVT)


#define CPU2_TR5_ADR (*(volatile Ifx_CPU_TR_ADR*)0xF885F02Cu)




#define CPU2_TR5ADR (CPU2_TR5_ADR)


#define CPU2_TR5_EVT (*(volatile Ifx_CPU_TR_EVT*)0xF885F028u)




#define CPU2_TR5EVT (CPU2_TR5_EVT)


#define CPU2_TR6_ADR (*(volatile Ifx_CPU_TR_ADR*)0xF885F034u)




#define CPU2_TR6ADR (CPU2_TR6_ADR)


#define CPU2_TR6_EVT (*(volatile Ifx_CPU_TR_EVT*)0xF885F030u)




#define CPU2_TR6EVT (CPU2_TR6_EVT)


#define CPU2_TR7_ADR (*(volatile Ifx_CPU_TR_ADR*)0xF885F03Cu)




#define CPU2_TR7ADR (CPU2_TR7_ADR)


#define CPU2_TR7_EVT (*(volatile Ifx_CPU_TR_EVT*)0xF885F038u)




#define CPU2_TR7EVT (CPU2_TR7_EVT)


#define CPU2_TRIG_ACC (*(volatile Ifx_CPU_TRIG_ACC*)0xF885FD30u)







#define CPU_A0 0xFF80


#define CPU_A1 0xFF84


#define CPU_A10 0xFFA8


#define CPU_A11 0xFFAC


#define CPU_A12 0xFFB0


#define CPU_A13 0xFFB4


#define CPU_A14 0xFFB8


#define CPU_A15 0xFFBC


#define CPU_A2 0xFF88


#define CPU_A3 0xFF8C


#define CPU_A4 0xFF90


#define CPU_A5 0xFF94


#define CPU_A6 0xFF98


#define CPU_A7 0xFF9C


#define CPU_A8 0xFFA0


#define CPU_A9 0xFFA4


#define CPU_BIV 0xFE20


#define CPU_BTV 0xFE24


#define CPU_CCNT 0xFC04


#define CPU_CCTRL 0xFC00


#define CPU_COMPAT 0x9400


#define CPU_CORE_ID 0xFE1C



#define CPU_CPR0_L 0xD000



#define CPU_CPR0_U 0xD004



#define CPU_CPR1_L 0xD008



#define CPU_CPR1_U 0xD00C



#define CPU_CPR2_L 0xD010



#define CPU_CPR2_U 0xD014



#define CPU_CPR3_L 0xD018



#define CPU_CPR3_U 0xD01C



#define CPU_CPR4_L 0xD020



#define CPU_CPR4_U 0xD024



#define CPU_CPR5_L 0xD028



#define CPU_CPR5_U 0xD02C



#define CPU_CPR6_L 0xD030



#define CPU_CPR6_U 0xD034



#define CPU_CPR7_L 0xD038



#define CPU_CPR7_U 0xD03C


#define CPU_CPU_ID 0xFE18



#define CPU_CPXE0 0xE000



#define CPU_CPXE1 0xE004



#define CPU_CPXE2 0xE008



#define CPU_CPXE3 0xE00C


#define CPU_CREVT 0xFD0C


#define CPU_CUS_ID 0xFE50


#define CPU_D0 0xFF00


#define CPU_D1 0xFF04


#define CPU_D10 0xFF28


#define CPU_D11 0xFF2C


#define CPU_D12 0xFF30


#define CPU_D13 0xFF34


#define CPU_D14 0xFF38


#define CPU_D15 0xFF3C


#define CPU_D2 0xFF08


#define CPU_D3 0xFF0C


#define CPU_D4 0xFF10


#define CPU_D5 0xFF14


#define CPU_D6 0xFF18


#define CPU_D7 0xFF1C


#define CPU_D8 0xFF20


#define CPU_D9 0xFF24


#define CPU_DATR 0x9018


#define CPU_DBGSR 0xFD00


#define CPU_DBGTCR 0xFD48


#define CPU_DCON0 0x9040


#define CPU_DCON2 0x9000


#define CPU_DCX 0xFD44


#define CPU_DEADD 0x901C


#define CPU_DIEAR 0x9020


#define CPU_DIETR 0x9024


#define CPU_DMS 0xFD40



#define CPU_DPR0_L 0xC000



#define CPU_DPR0_U 0xC004



#define CPU_DPR10_L 0xC050



#define CPU_DPR10_U 0xC054



#define CPU_DPR11_L 0xC058



#define CPU_DPR11_U 0xC05C



#define CPU_DPR12_L 0xC060



#define CPU_DPR12_U 0xC064



#define CPU_DPR13_L 0xC068



#define CPU_DPR13_U 0xC06C



#define CPU_DPR14_L 0xC070



#define CPU_DPR14_U 0xC074



#define CPU_DPR15_L 0xC078



#define CPU_DPR15_U 0xC07C



#define CPU_DPR1_L 0xC008



#define CPU_DPR1_U 0xC00C



#define CPU_DPR2_L 0xC010



#define CPU_DPR2_U 0xC014



#define CPU_DPR3_L 0xC018



#define CPU_DPR3_U 0xC01C



#define CPU_DPR4_L 0xC020



#define CPU_DPR4_U 0xC024



#define CPU_DPR5_L 0xC028



#define CPU_DPR5_U 0xC02C



#define CPU_DPR6_L 0xC030



#define CPU_DPR6_U 0xC034



#define CPU_DPR7_L 0xC038



#define CPU_DPR7_U 0xC03C



#define CPU_DPR8_L 0xC040



#define CPU_DPR8_U 0xC044



#define CPU_DPR9_L 0xC048



#define CPU_DPR9_U 0xC04C



#define CPU_DPRE0 0xE010



#define CPU_DPRE1 0xE014



#define CPU_DPRE2 0xE018



#define CPU_DPRE3 0xE01C



#define CPU_DPWE0 0xE020



#define CPU_DPWE1 0xE024



#define CPU_DPWE2 0xE028



#define CPU_DPWE3 0xE02C


#define CPU_DSTR 0x9010


#define CPU_EXEVT 0xFD08


#define CPU_FCX 0xFE38


#define CPU_FPU_TRAP_CON 0xA000



#define CPU_FPU_TRAP_OPC 0xA008



#define CPU_FPU_TRAP_PC 0xA004



#define CPU_FPU_TRAP_SRC1 0xA010



#define CPU_FPU_TRAP_SRC2 0xA014



#define CPU_FPU_TRAP_SRC3 0xA018


#define CPU_ICNT 0xFC08


#define CPU_ICR 0xFE2C


#define CPU_ISP 0xFE28


#define CPU_LCX 0xFE3C


#define CPU_M1CNT 0xFC0C


#define CPU_M2CNT 0xFC10


#define CPU_M3CNT 0xFC14


#define CPU_PC 0xFE08


#define CPU_PCON0 0x920C


#define CPU_PCON1 0x9204


#define CPU_PCON2 0x9208


#define CPU_PCXI 0xFE00



#define CPU_PIEAR 0x9210


#define CPU_PIETR 0x9214


#define CPU_PMA0 0x8100


#define CPU_PMA1 0x8104


#define CPU_PMA2 0x8108


#define CPU_PSTR 0x9200


#define CPU_PSW 0xFE04


#define CPU_SEGEN 0x1030


#define CPU_SMACON 0x900C


#define CPU_SWEVT 0xFD10


#define CPU_SYSCON 0xFE14



#define CPU_TASK_ASI 0x8004



#define CPU_TPS_CON 0xE400



#define CPU_TPS_TIMER0 0xE404



#define CPU_TPS_TIMER1 0xE408



#define CPU_TPS_TIMER2 0xE40C


#define CPU_TR0_ADR 0xF004


#define CPU_TR0_EVT 0xF000


#define CPU_TR1_ADR 0xF00C


#define CPU_TR1_EVT 0xF008


#define CPU_TR2_ADR 0xF014


#define CPU_TR2_EVT 0xF010


#define CPU_TR3_ADR 0xF01C


#define CPU_TR3_EVT 0xF018


#define CPU_TR4_ADR 0xF024


#define CPU_TR4_EVT 0xF020


#define CPU_TR5_ADR 0xF02C


#define CPU_TR5_EVT 0xF028


#define CPU_TR6_ADR 0xF034


#define CPU_TR6_EVT 0xF030


#define CPU_TR7_ADR 0xF03C


#define CPU_TR7_EVT 0xF038


#define CPU_TRIG_ACC 0xFD30







#define CPU0_SPROT_ACCENA (*(volatile Ifx_CPU_SPROT_ACCENA*)0xF880E100u)


#define CPU0_SPROT_ACCENB (*(volatile Ifx_CPU_SPROT_ACCENB*)0xF880E104u)


#define CPU0_SPROT_RGN0_ACCENA (*(volatile Ifx_CPU_SPROT_RGN_ACCENA*)0xF880E008u)




#define CPU0_SPROT_RGNACCENA0 (CPU0_SPROT_RGN0_ACCENA)


#define CPU0_SPROT_RGN0_ACCENB (*(volatile Ifx_CPU_SPROT_RGN_ACCENB*)0xF880E00Cu)




#define CPU0_SPROT_RGNACCENB0 (CPU0_SPROT_RGN0_ACCENB)


#define CPU0_SPROT_RGN0_LA (*(volatile Ifx_CPU_SPROT_RGN_LA*)0xF880E000u)




#define CPU0_SPROT_RGNLA0 (CPU0_SPROT_RGN0_LA)


#define CPU0_SPROT_RGN0_UA (*(volatile Ifx_CPU_SPROT_RGN_UA*)0xF880E004u)




#define CPU0_SPROT_RGNUA0 (CPU0_SPROT_RGN0_UA)


#define CPU0_SPROT_RGN1_ACCENA (*(volatile Ifx_CPU_SPROT_RGN_ACCENA*)0xF880E018u)




#define CPU0_SPROT_RGNACCENA1 (CPU0_SPROT_RGN1_ACCENA)


#define CPU0_SPROT_RGN1_ACCENB (*(volatile Ifx_CPU_SPROT_RGN_ACCENB*)0xF880E01Cu)




#define CPU0_SPROT_RGNACCENB1 (CPU0_SPROT_RGN1_ACCENB)


#define CPU0_SPROT_RGN1_LA (*(volatile Ifx_CPU_SPROT_RGN_LA*)0xF880E010u)




#define CPU0_SPROT_RGNLA1 (CPU0_SPROT_RGN1_LA)


#define CPU0_SPROT_RGN1_UA (*(volatile Ifx_CPU_SPROT_RGN_UA*)0xF880E014u)




#define CPU0_SPROT_RGNUA1 (CPU0_SPROT_RGN1_UA)


#define CPU0_SPROT_RGN2_ACCENA (*(volatile Ifx_CPU_SPROT_RGN_ACCENA*)0xF880E028u)




#define CPU0_SPROT_RGNACCENA2 (CPU0_SPROT_RGN2_ACCENA)


#define CPU0_SPROT_RGN2_ACCENB (*(volatile Ifx_CPU_SPROT_RGN_ACCENB*)0xF880E02Cu)




#define CPU0_SPROT_RGNACCENB2 (CPU0_SPROT_RGN2_ACCENB)


#define CPU0_SPROT_RGN2_LA (*(volatile Ifx_CPU_SPROT_RGN_LA*)0xF880E020u)




#define CPU0_SPROT_RGNLA2 (CPU0_SPROT_RGN2_LA)


#define CPU0_SPROT_RGN2_UA (*(volatile Ifx_CPU_SPROT_RGN_UA*)0xF880E024u)




#define CPU0_SPROT_RGNUA2 (CPU0_SPROT_RGN2_UA)


#define CPU0_SPROT_RGN3_ACCENA (*(volatile Ifx_CPU_SPROT_RGN_ACCENA*)0xF880E038u)




#define CPU0_SPROT_RGNACCENA3 (CPU0_SPROT_RGN3_ACCENA)


#define CPU0_SPROT_RGN3_ACCENB (*(volatile Ifx_CPU_SPROT_RGN_ACCENB*)0xF880E03Cu)




#define CPU0_SPROT_RGNACCENB3 (CPU0_SPROT_RGN3_ACCENB)


#define CPU0_SPROT_RGN3_LA (*(volatile Ifx_CPU_SPROT_RGN_LA*)0xF880E030u)




#define CPU0_SPROT_RGNLA3 (CPU0_SPROT_RGN3_LA)


#define CPU0_SPROT_RGN3_UA (*(volatile Ifx_CPU_SPROT_RGN_UA*)0xF880E034u)




#define CPU0_SPROT_RGNUA3 (CPU0_SPROT_RGN3_UA)


#define CPU0_SPROT_RGN4_ACCENA (*(volatile Ifx_CPU_SPROT_RGN_ACCENA*)0xF880E048u)




#define CPU0_SPROT_RGNACCENA4 (CPU0_SPROT_RGN4_ACCENA)


#define CPU0_SPROT_RGN4_ACCENB (*(volatile Ifx_CPU_SPROT_RGN_ACCENB*)0xF880E04Cu)




#define CPU0_SPROT_RGNACCENB4 (CPU0_SPROT_RGN4_ACCENB)


#define CPU0_SPROT_RGN4_LA (*(volatile Ifx_CPU_SPROT_RGN_LA*)0xF880E040u)




#define CPU0_SPROT_RGNLA4 (CPU0_SPROT_RGN4_LA)


#define CPU0_SPROT_RGN4_UA (*(volatile Ifx_CPU_SPROT_RGN_UA*)0xF880E044u)




#define CPU0_SPROT_RGNUA4 (CPU0_SPROT_RGN4_UA)


#define CPU0_SPROT_RGN5_ACCENA (*(volatile Ifx_CPU_SPROT_RGN_ACCENA*)0xF880E058u)




#define CPU0_SPROT_RGNACCENA5 (CPU0_SPROT_RGN5_ACCENA)


#define CPU0_SPROT_RGN5_ACCENB (*(volatile Ifx_CPU_SPROT_RGN_ACCENB*)0xF880E05Cu)




#define CPU0_SPROT_RGNACCENB5 (CPU0_SPROT_RGN5_ACCENB)


#define CPU0_SPROT_RGN5_LA (*(volatile Ifx_CPU_SPROT_RGN_LA*)0xF880E050u)




#define CPU0_SPROT_RGNLA5 (CPU0_SPROT_RGN5_LA)


#define CPU0_SPROT_RGN5_UA (*(volatile Ifx_CPU_SPROT_RGN_UA*)0xF880E054u)




#define CPU0_SPROT_RGNUA5 (CPU0_SPROT_RGN5_UA)


#define CPU0_SPROT_RGN6_ACCENA (*(volatile Ifx_CPU_SPROT_RGN_ACCENA*)0xF880E068u)




#define CPU0_SPROT_RGNACCENA6 (CPU0_SPROT_RGN6_ACCENA)


#define CPU0_SPROT_RGN6_ACCENB (*(volatile Ifx_CPU_SPROT_RGN_ACCENB*)0xF880E06Cu)




#define CPU0_SPROT_RGNACCENB6 (CPU0_SPROT_RGN6_ACCENB)


#define CPU0_SPROT_RGN6_LA (*(volatile Ifx_CPU_SPROT_RGN_LA*)0xF880E060u)




#define CPU0_SPROT_RGNLA6 (CPU0_SPROT_RGN6_LA)


#define CPU0_SPROT_RGN6_UA (*(volatile Ifx_CPU_SPROT_RGN_UA*)0xF880E064u)




#define CPU0_SPROT_RGNUA6 (CPU0_SPROT_RGN6_UA)


#define CPU0_SPROT_RGN7_ACCENA (*(volatile Ifx_CPU_SPROT_RGN_ACCENA*)0xF880E078u)




#define CPU0_SPROT_RGNACCENA7 (CPU0_SPROT_RGN7_ACCENA)


#define CPU0_SPROT_RGN7_ACCENB (*(volatile Ifx_CPU_SPROT_RGN_ACCENB*)0xF880E07Cu)




#define CPU0_SPROT_RGNACCENB7 (CPU0_SPROT_RGN7_ACCENB)


#define CPU0_SPROT_RGN7_LA (*(volatile Ifx_CPU_SPROT_RGN_LA*)0xF880E070u)




#define CPU0_SPROT_RGNLA7 (CPU0_SPROT_RGN7_LA)


#define CPU0_SPROT_RGN7_UA (*(volatile Ifx_CPU_SPROT_RGN_UA*)0xF880E074u)




#define CPU0_SPROT_RGNUA7 (CPU0_SPROT_RGN7_UA)







#define CPU1_SPROT_ACCENA (*(volatile Ifx_CPU_SPROT_ACCENA*)0xF882E100u)


#define CPU1_SPROT_ACCENB (*(volatile Ifx_CPU_SPROT_ACCENB*)0xF882E104u)


#define CPU1_SPROT_RGN0_ACCENA (*(volatile Ifx_CPU_SPROT_RGN_ACCENA*)0xF882E008u)




#define CPU1_SPROT_RGNACCENA0 (CPU1_SPROT_RGN0_ACCENA)


#define CPU1_SPROT_RGN0_ACCENB (*(volatile Ifx_CPU_SPROT_RGN_ACCENB*)0xF882E00Cu)




#define CPU1_SPROT_RGNACCENB0 (CPU1_SPROT_RGN0_ACCENB)


#define CPU1_SPROT_RGN0_LA (*(volatile Ifx_CPU_SPROT_RGN_LA*)0xF882E000u)




#define CPU1_SPROT_RGNLA0 (CPU1_SPROT_RGN0_LA)


#define CPU1_SPROT_RGN0_UA (*(volatile Ifx_CPU_SPROT_RGN_UA*)0xF882E004u)




#define CPU1_SPROT_RGNUA0 (CPU1_SPROT_RGN0_UA)


#define CPU1_SPROT_RGN1_ACCENA (*(volatile Ifx_CPU_SPROT_RGN_ACCENA*)0xF882E018u)




#define CPU1_SPROT_RGNACCENA1 (CPU1_SPROT_RGN1_ACCENA)


#define CPU1_SPROT_RGN1_ACCENB (*(volatile Ifx_CPU_SPROT_RGN_ACCENB*)0xF882E01Cu)




#define CPU1_SPROT_RGNACCENB1 (CPU1_SPROT_RGN1_ACCENB)


#define CPU1_SPROT_RGN1_LA (*(volatile Ifx_CPU_SPROT_RGN_LA*)0xF882E010u)




#define CPU1_SPROT_RGNLA1 (CPU1_SPROT_RGN1_LA)


#define CPU1_SPROT_RGN1_UA (*(volatile Ifx_CPU_SPROT_RGN_UA*)0xF882E014u)




#define CPU1_SPROT_RGNUA1 (CPU1_SPROT_RGN1_UA)


#define CPU1_SPROT_RGN2_ACCENA (*(volatile Ifx_CPU_SPROT_RGN_ACCENA*)0xF882E028u)




#define CPU1_SPROT_RGNACCENA2 (CPU1_SPROT_RGN2_ACCENA)


#define CPU1_SPROT_RGN2_ACCENB (*(volatile Ifx_CPU_SPROT_RGN_ACCENB*)0xF882E02Cu)




#define CPU1_SPROT_RGNACCENB2 (CPU1_SPROT_RGN2_ACCENB)


#define CPU1_SPROT_RGN2_LA (*(volatile Ifx_CPU_SPROT_RGN_LA*)0xF882E020u)




#define CPU1_SPROT_RGNLA2 (CPU1_SPROT_RGN2_LA)


#define CPU1_SPROT_RGN2_UA (*(volatile Ifx_CPU_SPROT_RGN_UA*)0xF882E024u)




#define CPU1_SPROT_RGNUA2 (CPU1_SPROT_RGN2_UA)


#define CPU1_SPROT_RGN3_ACCENA (*(volatile Ifx_CPU_SPROT_RGN_ACCENA*)0xF882E038u)




#define CPU1_SPROT_RGNACCENA3 (CPU1_SPROT_RGN3_ACCENA)


#define CPU1_SPROT_RGN3_ACCENB (*(volatile Ifx_CPU_SPROT_RGN_ACCENB*)0xF882E03Cu)




#define CPU1_SPROT_RGNACCENB3 (CPU1_SPROT_RGN3_ACCENB)


#define CPU1_SPROT_RGN3_LA (*(volatile Ifx_CPU_SPROT_RGN_LA*)0xF882E030u)




#define CPU1_SPROT_RGNLA3 (CPU1_SPROT_RGN3_LA)


#define CPU1_SPROT_RGN3_UA (*(volatile Ifx_CPU_SPROT_RGN_UA*)0xF882E034u)




#define CPU1_SPROT_RGNUA3 (CPU1_SPROT_RGN3_UA)


#define CPU1_SPROT_RGN4_ACCENA (*(volatile Ifx_CPU_SPROT_RGN_ACCENA*)0xF882E048u)




#define CPU1_SPROT_RGNACCENA4 (CPU1_SPROT_RGN4_ACCENA)


#define CPU1_SPROT_RGN4_ACCENB (*(volatile Ifx_CPU_SPROT_RGN_ACCENB*)0xF882E04Cu)




#define CPU1_SPROT_RGNACCENB4 (CPU1_SPROT_RGN4_ACCENB)


#define CPU1_SPROT_RGN4_LA (*(volatile Ifx_CPU_SPROT_RGN_LA*)0xF882E040u)




#define CPU1_SPROT_RGNLA4 (CPU1_SPROT_RGN4_LA)


#define CPU1_SPROT_RGN4_UA (*(volatile Ifx_CPU_SPROT_RGN_UA*)0xF882E044u)




#define CPU1_SPROT_RGNUA4 (CPU1_SPROT_RGN4_UA)


#define CPU1_SPROT_RGN5_ACCENA (*(volatile Ifx_CPU_SPROT_RGN_ACCENA*)0xF882E058u)




#define CPU1_SPROT_RGNACCENA5 (CPU1_SPROT_RGN5_ACCENA)


#define CPU1_SPROT_RGN5_ACCENB (*(volatile Ifx_CPU_SPROT_RGN_ACCENB*)0xF882E05Cu)




#define CPU1_SPROT_RGNACCENB5 (CPU1_SPROT_RGN5_ACCENB)


#define CPU1_SPROT_RGN5_LA (*(volatile Ifx_CPU_SPROT_RGN_LA*)0xF882E050u)




#define CPU1_SPROT_RGNLA5 (CPU1_SPROT_RGN5_LA)


#define CPU1_SPROT_RGN5_UA (*(volatile Ifx_CPU_SPROT_RGN_UA*)0xF882E054u)




#define CPU1_SPROT_RGNUA5 (CPU1_SPROT_RGN5_UA)


#define CPU1_SPROT_RGN6_ACCENA (*(volatile Ifx_CPU_SPROT_RGN_ACCENA*)0xF882E068u)




#define CPU1_SPROT_RGNACCENA6 (CPU1_SPROT_RGN6_ACCENA)


#define CPU1_SPROT_RGN6_ACCENB (*(volatile Ifx_CPU_SPROT_RGN_ACCENB*)0xF882E06Cu)




#define CPU1_SPROT_RGNACCENB6 (CPU1_SPROT_RGN6_ACCENB)


#define CPU1_SPROT_RGN6_LA (*(volatile Ifx_CPU_SPROT_RGN_LA*)0xF882E060u)




#define CPU1_SPROT_RGNLA6 (CPU1_SPROT_RGN6_LA)


#define CPU1_SPROT_RGN6_UA (*(volatile Ifx_CPU_SPROT_RGN_UA*)0xF882E064u)




#define CPU1_SPROT_RGNUA6 (CPU1_SPROT_RGN6_UA)


#define CPU1_SPROT_RGN7_ACCENA (*(volatile Ifx_CPU_SPROT_RGN_ACCENA*)0xF882E078u)




#define CPU1_SPROT_RGNACCENA7 (CPU1_SPROT_RGN7_ACCENA)


#define CPU1_SPROT_RGN7_ACCENB (*(volatile Ifx_CPU_SPROT_RGN_ACCENB*)0xF882E07Cu)




#define CPU1_SPROT_RGNACCENB7 (CPU1_SPROT_RGN7_ACCENB)


#define CPU1_SPROT_RGN7_LA (*(volatile Ifx_CPU_SPROT_RGN_LA*)0xF882E070u)




#define CPU1_SPROT_RGNLA7 (CPU1_SPROT_RGN7_LA)


#define CPU1_SPROT_RGN7_UA (*(volatile Ifx_CPU_SPROT_RGN_UA*)0xF882E074u)




#define CPU1_SPROT_RGNUA7 (CPU1_SPROT_RGN7_UA)







#define CPU2_SPROT_ACCENA (*(volatile Ifx_CPU_SPROT_ACCENA*)0xF884E100u)


#define CPU2_SPROT_ACCENB (*(volatile Ifx_CPU_SPROT_ACCENB*)0xF884E104u)


#define CPU2_SPROT_RGN0_ACCENA (*(volatile Ifx_CPU_SPROT_RGN_ACCENA*)0xF884E008u)




#define CPU2_SPROT_RGNACCENA0 (CPU2_SPROT_RGN0_ACCENA)


#define CPU2_SPROT_RGN0_ACCENB (*(volatile Ifx_CPU_SPROT_RGN_ACCENB*)0xF884E00Cu)




#define CPU2_SPROT_RGNACCENB0 (CPU2_SPROT_RGN0_ACCENB)


#define CPU2_SPROT_RGN0_LA (*(volatile Ifx_CPU_SPROT_RGN_LA*)0xF884E000u)




#define CPU2_SPROT_RGNLA0 (CPU2_SPROT_RGN0_LA)


#define CPU2_SPROT_RGN0_UA (*(volatile Ifx_CPU_SPROT_RGN_UA*)0xF884E004u)




#define CPU2_SPROT_RGNUA0 (CPU2_SPROT_RGN0_UA)


#define CPU2_SPROT_RGN1_ACCENA (*(volatile Ifx_CPU_SPROT_RGN_ACCENA*)0xF884E018u)




#define CPU2_SPROT_RGNACCENA1 (CPU2_SPROT_RGN1_ACCENA)


#define CPU2_SPROT_RGN1_ACCENB (*(volatile Ifx_CPU_SPROT_RGN_ACCENB*)0xF884E01Cu)




#define CPU2_SPROT_RGNACCENB1 (CPU2_SPROT_RGN1_ACCENB)


#define CPU2_SPROT_RGN1_LA (*(volatile Ifx_CPU_SPROT_RGN_LA*)0xF884E010u)




#define CPU2_SPROT_RGNLA1 (CPU2_SPROT_RGN1_LA)


#define CPU2_SPROT_RGN1_UA (*(volatile Ifx_CPU_SPROT_RGN_UA*)0xF884E014u)




#define CPU2_SPROT_RGNUA1 (CPU2_SPROT_RGN1_UA)


#define CPU2_SPROT_RGN2_ACCENA (*(volatile Ifx_CPU_SPROT_RGN_ACCENA*)0xF884E028u)




#define CPU2_SPROT_RGNACCENA2 (CPU2_SPROT_RGN2_ACCENA)


#define CPU2_SPROT_RGN2_ACCENB (*(volatile Ifx_CPU_SPROT_RGN_ACCENB*)0xF884E02Cu)




#define CPU2_SPROT_RGNACCENB2 (CPU2_SPROT_RGN2_ACCENB)


#define CPU2_SPROT_RGN2_LA (*(volatile Ifx_CPU_SPROT_RGN_LA*)0xF884E020u)




#define CPU2_SPROT_RGNLA2 (CPU2_SPROT_RGN2_LA)


#define CPU2_SPROT_RGN2_UA (*(volatile Ifx_CPU_SPROT_RGN_UA*)0xF884E024u)




#define CPU2_SPROT_RGNUA2 (CPU2_SPROT_RGN2_UA)


#define CPU2_SPROT_RGN3_ACCENA (*(volatile Ifx_CPU_SPROT_RGN_ACCENA*)0xF884E038u)




#define CPU2_SPROT_RGNACCENA3 (CPU2_SPROT_RGN3_ACCENA)


#define CPU2_SPROT_RGN3_ACCENB (*(volatile Ifx_CPU_SPROT_RGN_ACCENB*)0xF884E03Cu)




#define CPU2_SPROT_RGNACCENB3 (CPU2_SPROT_RGN3_ACCENB)


#define CPU2_SPROT_RGN3_LA (*(volatile Ifx_CPU_SPROT_RGN_LA*)0xF884E030u)




#define CPU2_SPROT_RGNLA3 (CPU2_SPROT_RGN3_LA)


#define CPU2_SPROT_RGN3_UA (*(volatile Ifx_CPU_SPROT_RGN_UA*)0xF884E034u)




#define CPU2_SPROT_RGNUA3 (CPU2_SPROT_RGN3_UA)


#define CPU2_SPROT_RGN4_ACCENA (*(volatile Ifx_CPU_SPROT_RGN_ACCENA*)0xF884E048u)




#define CPU2_SPROT_RGNACCENA4 (CPU2_SPROT_RGN4_ACCENA)


#define CPU2_SPROT_RGN4_ACCENB (*(volatile Ifx_CPU_SPROT_RGN_ACCENB*)0xF884E04Cu)




#define CPU2_SPROT_RGNACCENB4 (CPU2_SPROT_RGN4_ACCENB)


#define CPU2_SPROT_RGN4_LA (*(volatile Ifx_CPU_SPROT_RGN_LA*)0xF884E040u)




#define CPU2_SPROT_RGNLA4 (CPU2_SPROT_RGN4_LA)


#define CPU2_SPROT_RGN4_UA (*(volatile Ifx_CPU_SPROT_RGN_UA*)0xF884E044u)




#define CPU2_SPROT_RGNUA4 (CPU2_SPROT_RGN4_UA)


#define CPU2_SPROT_RGN5_ACCENA (*(volatile Ifx_CPU_SPROT_RGN_ACCENA*)0xF884E058u)




#define CPU2_SPROT_RGNACCENA5 (CPU2_SPROT_RGN5_ACCENA)


#define CPU2_SPROT_RGN5_ACCENB (*(volatile Ifx_CPU_SPROT_RGN_ACCENB*)0xF884E05Cu)




#define CPU2_SPROT_RGNACCENB5 (CPU2_SPROT_RGN5_ACCENB)


#define CPU2_SPROT_RGN5_LA (*(volatile Ifx_CPU_SPROT_RGN_LA*)0xF884E050u)




#define CPU2_SPROT_RGNLA5 (CPU2_SPROT_RGN5_LA)


#define CPU2_SPROT_RGN5_UA (*(volatile Ifx_CPU_SPROT_RGN_UA*)0xF884E054u)




#define CPU2_SPROT_RGNUA5 (CPU2_SPROT_RGN5_UA)


#define CPU2_SPROT_RGN6_ACCENA (*(volatile Ifx_CPU_SPROT_RGN_ACCENA*)0xF884E068u)




#define CPU2_SPROT_RGNACCENA6 (CPU2_SPROT_RGN6_ACCENA)


#define CPU2_SPROT_RGN6_ACCENB (*(volatile Ifx_CPU_SPROT_RGN_ACCENB*)0xF884E06Cu)




#define CPU2_SPROT_RGNACCENB6 (CPU2_SPROT_RGN6_ACCENB)


#define CPU2_SPROT_RGN6_LA (*(volatile Ifx_CPU_SPROT_RGN_LA*)0xF884E060u)




#define CPU2_SPROT_RGNLA6 (CPU2_SPROT_RGN6_LA)


#define CPU2_SPROT_RGN6_UA (*(volatile Ifx_CPU_SPROT_RGN_UA*)0xF884E064u)




#define CPU2_SPROT_RGNUA6 (CPU2_SPROT_RGN6_UA)


#define CPU2_SPROT_RGN7_ACCENA (*(volatile Ifx_CPU_SPROT_RGN_ACCENA*)0xF884E078u)




#define CPU2_SPROT_RGNACCENA7 (CPU2_SPROT_RGN7_ACCENA)


#define CPU2_SPROT_RGN7_ACCENB (*(volatile Ifx_CPU_SPROT_RGN_ACCENB*)0xF884E07Cu)




#define CPU2_SPROT_RGNACCENB7 (CPU2_SPROT_RGN7_ACCENB)


#define CPU2_SPROT_RGN7_LA (*(volatile Ifx_CPU_SPROT_RGN_LA*)0xF884E070u)




#define CPU2_SPROT_RGNLA7 (CPU2_SPROT_RGN7_LA)


#define CPU2_SPROT_RGN7_UA (*(volatile Ifx_CPU_SPROT_RGN_UA*)0xF884E074u)




#define CPU2_SPROT_RGNUA7 (CPU2_SPROT_RGN7_UA)
# 34 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_reg.h" 2 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxDma_reg.h" 1 3
# 34 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxDma_reg.h" 3
#define IFXDMA_REG_H 1

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxDma_regdef.h" 1 3
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxDma_regdef.h" 3
#define IFXDMA_REGDEF_H 1







typedef struct _Ifx_DMA_ACCEN00_Bits
{
    unsigned int EN0:1;
    unsigned int EN1:1;
    unsigned int EN2:1;
    unsigned int EN3:1;
    unsigned int EN4:1;
    unsigned int EN5:1;
    unsigned int EN6:1;
    unsigned int EN7:1;
    unsigned int EN8:1;
    unsigned int EN9:1;
    unsigned int EN10:1;
    unsigned int EN11:1;
    unsigned int EN12:1;
    unsigned int EN13:1;
    unsigned int EN14:1;
    unsigned int EN15:1;
    unsigned int EN16:1;
    unsigned int EN17:1;
    unsigned int EN18:1;
    unsigned int EN19:1;
    unsigned int EN20:1;
    unsigned int EN21:1;
    unsigned int EN22:1;
    unsigned int EN23:1;
    unsigned int EN24:1;
    unsigned int EN25:1;
    unsigned int EN26:1;
    unsigned int EN27:1;
    unsigned int EN28:1;
    unsigned int EN29:1;
    unsigned int EN30:1;
    unsigned int EN31:1;
} Ifx_DMA_ACCEN00_Bits;


typedef struct _Ifx_DMA_ACCEN01_Bits
{
    unsigned int reserved_0:32;
} Ifx_DMA_ACCEN01_Bits;


typedef struct _Ifx_DMA_ACCEN10_Bits
{
    unsigned int EN0:1;
    unsigned int EN1:1;
    unsigned int EN2:1;
    unsigned int EN3:1;
    unsigned int EN4:1;
    unsigned int EN5:1;
    unsigned int EN6:1;
    unsigned int EN7:1;
    unsigned int EN8:1;
    unsigned int EN9:1;
    unsigned int EN10:1;
    unsigned int EN11:1;
    unsigned int EN12:1;
    unsigned int EN13:1;
    unsigned int EN14:1;
    unsigned int EN15:1;
    unsigned int EN16:1;
    unsigned int EN17:1;
    unsigned int EN18:1;
    unsigned int EN19:1;
    unsigned int EN20:1;
    unsigned int EN21:1;
    unsigned int EN22:1;
    unsigned int EN23:1;
    unsigned int EN24:1;
    unsigned int EN25:1;
    unsigned int EN26:1;
    unsigned int EN27:1;
    unsigned int EN28:1;
    unsigned int EN29:1;
    unsigned int EN30:1;
    unsigned int EN31:1;
} Ifx_DMA_ACCEN10_Bits;


typedef struct _Ifx_DMA_ACCEN11_Bits
{
    unsigned int reserved_0:32;
} Ifx_DMA_ACCEN11_Bits;


typedef struct _Ifx_DMA_ACCEN20_Bits
{
    unsigned int EN0:1;
    unsigned int EN1:1;
    unsigned int EN2:1;
    unsigned int EN3:1;
    unsigned int EN4:1;
    unsigned int EN5:1;
    unsigned int EN6:1;
    unsigned int EN7:1;
    unsigned int EN8:1;
    unsigned int EN9:1;
    unsigned int EN10:1;
    unsigned int EN11:1;
    unsigned int EN12:1;
    unsigned int EN13:1;
    unsigned int EN14:1;
    unsigned int EN15:1;
    unsigned int EN16:1;
    unsigned int EN17:1;
    unsigned int EN18:1;
    unsigned int EN19:1;
    unsigned int EN20:1;
    unsigned int EN21:1;
    unsigned int EN22:1;
    unsigned int EN23:1;
    unsigned int EN24:1;
    unsigned int EN25:1;
    unsigned int EN26:1;
    unsigned int EN27:1;
    unsigned int EN28:1;
    unsigned int EN29:1;
    unsigned int EN30:1;
    unsigned int EN31:1;
} Ifx_DMA_ACCEN20_Bits;


typedef struct _Ifx_DMA_ACCEN21_Bits
{
    unsigned int reserved_0:32;
} Ifx_DMA_ACCEN21_Bits;


typedef struct _Ifx_DMA_ACCEN30_Bits
{
    unsigned int EN0:1;
    unsigned int EN1:1;
    unsigned int EN2:1;
    unsigned int EN3:1;
    unsigned int EN4:1;
    unsigned int EN5:1;
    unsigned int EN6:1;
    unsigned int EN7:1;
    unsigned int EN8:1;
    unsigned int EN9:1;
    unsigned int EN10:1;
    unsigned int EN11:1;
    unsigned int EN12:1;
    unsigned int EN13:1;
    unsigned int EN14:1;
    unsigned int EN15:1;
    unsigned int EN16:1;
    unsigned int EN17:1;
    unsigned int EN18:1;
    unsigned int EN19:1;
    unsigned int EN20:1;
    unsigned int EN21:1;
    unsigned int EN22:1;
    unsigned int EN23:1;
    unsigned int EN24:1;
    unsigned int EN25:1;
    unsigned int EN26:1;
    unsigned int EN27:1;
    unsigned int EN28:1;
    unsigned int EN29:1;
    unsigned int EN30:1;
    unsigned int EN31:1;
} Ifx_DMA_ACCEN30_Bits;


typedef struct _Ifx_DMA_ACCEN31_Bits
{
    unsigned int reserved_0:32;
} Ifx_DMA_ACCEN31_Bits;


typedef struct _Ifx_DMA_BLK_CLRE_Bits
{
    unsigned int reserved_0:16;
    unsigned int CSER:1;
    unsigned int CDER:1;
    unsigned int reserved_18:2;
    unsigned int CSPBER:1;
    unsigned int CSRIER:1;
    unsigned int reserved_22:2;
    unsigned int CRAMER:1;
    unsigned int CSLLER:1;
    unsigned int CDLLER:1;
    unsigned int reserved_27:5;
} Ifx_DMA_BLK_CLRE_Bits;


typedef struct _Ifx_DMA_BLK_EER_Bits
{
    unsigned int reserved_0:16;
    unsigned int ESER:1;
    unsigned int EDER:1;
    unsigned int reserved_18:6;
    unsigned int ERER:1;
    unsigned int reserved_25:1;
    unsigned int ELER:1;
    unsigned int reserved_27:5;
} Ifx_DMA_BLK_EER_Bits;


typedef struct _Ifx_DMA_BLK_ERRSR_Bits
{
    unsigned int LEC:7;
    unsigned int reserved_7:9;
    unsigned int SER:1;
    unsigned int DER:1;
    unsigned int reserved_18:2;
    unsigned int SPBER:1;
    unsigned int SRIER:1;
    unsigned int reserved_22:2;
    unsigned int RAMER:1;
    unsigned int SLLER:1;
    unsigned int DLLER:1;
    unsigned int reserved_27:5;
} Ifx_DMA_BLK_ERRSR_Bits;


typedef struct _Ifx_DMA_BLK_ME_ADICR_Bits
{
    unsigned int SMF:3;
    unsigned int INCS:1;
    unsigned int DMF:3;
    unsigned int INCD:1;
    unsigned int CBLS:4;
    unsigned int CBLD:4;
    unsigned int SHCT:4;
    unsigned int SCBE:1;
    unsigned int DCBE:1;
    unsigned int STAMP:1;
    unsigned int ETRL:1;
    unsigned int WRPSE:1;
    unsigned int WRPDE:1;
    unsigned int INTCT:2;
    unsigned int IRDV:4;
} Ifx_DMA_BLK_ME_ADICR_Bits;


typedef struct _Ifx_DMA_BLK_ME_CHCR_Bits
{
    unsigned int TREL:14;
    unsigned int reserved_14:2;
    unsigned int BLKM:3;
    unsigned int RROAT:1;
    unsigned int CHMODE:1;
    unsigned int CHDW:3;
    unsigned int PATSEL:3;
    unsigned int reserved_27:1;
    unsigned int PRSEL:1;
    unsigned int reserved_29:1;
    unsigned int DMAPRIO:2;
} Ifx_DMA_BLK_ME_CHCR_Bits;


typedef struct _Ifx_DMA_BLK_ME_CHSR_Bits
{
    unsigned int TCOUNT:14;
    unsigned int reserved_14:1;
    unsigned int LXO:1;
    unsigned int WRPS:1;
    unsigned int WRPD:1;
    unsigned int ICH:1;
    unsigned int IPM:1;
    unsigned int reserved_20:2;
    unsigned int BUFFER:1;
    unsigned int FROZEN:1;
    unsigned int reserved_24:8;
} Ifx_DMA_BLK_ME_CHSR_Bits;


typedef struct _Ifx_DMA_BLK_ME_DADR_Bits
{
    unsigned int DADR:32;
} Ifx_DMA_BLK_ME_DADR_Bits;


typedef struct _Ifx_DMA_BLK_ME_R0_Bits
{
    unsigned int RD00:8;
    unsigned int RD01:8;
    unsigned int RD02:8;
    unsigned int RD03:8;
} Ifx_DMA_BLK_ME_R0_Bits;


typedef struct _Ifx_DMA_BLK_ME_R1_Bits
{
    unsigned int RD10:8;
    unsigned int RD11:8;
    unsigned int RD12:8;
    unsigned int RD13:8;
} Ifx_DMA_BLK_ME_R1_Bits;


typedef struct _Ifx_DMA_BLK_ME_R2_Bits
{
    unsigned int RD20:8;
    unsigned int RD21:8;
    unsigned int RD22:8;
    unsigned int RD23:8;
} Ifx_DMA_BLK_ME_R2_Bits;


typedef struct _Ifx_DMA_BLK_ME_R3_Bits
{
    unsigned int RD30:8;
    unsigned int RD31:8;
    unsigned int RD32:8;
    unsigned int RD33:8;
} Ifx_DMA_BLK_ME_R3_Bits;


typedef struct _Ifx_DMA_BLK_ME_R4_Bits
{
    unsigned int RD40:8;
    unsigned int RD41:8;
    unsigned int RD42:8;
    unsigned int RD43:8;
} Ifx_DMA_BLK_ME_R4_Bits;


typedef struct _Ifx_DMA_BLK_ME_R5_Bits
{
    unsigned int RD50:8;
    unsigned int RD51:8;
    unsigned int RD52:8;
    unsigned int RD53:8;
} Ifx_DMA_BLK_ME_R5_Bits;


typedef struct _Ifx_DMA_BLK_ME_R6_Bits
{
    unsigned int RD60:8;
    unsigned int RD61:8;
    unsigned int RD62:8;
    unsigned int RD63:8;
} Ifx_DMA_BLK_ME_R6_Bits;


typedef struct _Ifx_DMA_BLK_ME_R7_Bits
{
    unsigned int RD70:8;
    unsigned int RD71:8;
    unsigned int RD72:8;
    unsigned int RD73:8;
} Ifx_DMA_BLK_ME_R7_Bits;


typedef struct _Ifx_DMA_BLK_ME_RDCRC_Bits
{
    unsigned int RDCRC:32;
} Ifx_DMA_BLK_ME_RDCRC_Bits;


typedef struct _Ifx_DMA_BLK_ME_SADR_Bits
{
    unsigned int SADR:32;
} Ifx_DMA_BLK_ME_SADR_Bits;


typedef struct _Ifx_DMA_BLK_ME_SDCRC_Bits
{
    unsigned int SDCRC:32;
} Ifx_DMA_BLK_ME_SDCRC_Bits;


typedef struct _Ifx_DMA_BLK_ME_SHADR_Bits
{
    unsigned int SHADR:32;
} Ifx_DMA_BLK_ME_SHADR_Bits;


typedef struct _Ifx_DMA_BLK_ME_SR_Bits
{
    unsigned int RS:1;
    unsigned int reserved_1:3;
    unsigned int WS:1;
    unsigned int reserved_5:11;
    unsigned int CH:7;
    unsigned int reserved_23:9;
} Ifx_DMA_BLK_ME_SR_Bits;


typedef struct _Ifx_DMA_CH_ADICR_Bits
{
    unsigned int SMF:3;
    unsigned int INCS:1;
    unsigned int DMF:3;
    unsigned int INCD:1;
    unsigned int CBLS:4;
    unsigned int CBLD:4;
    unsigned int SHCT:4;
    unsigned int SCBE:1;
    unsigned int DCBE:1;
    unsigned int STAMP:1;
    unsigned int ETRL:1;
    unsigned int WRPSE:1;
    unsigned int WRPDE:1;
    unsigned int INTCT:2;
    unsigned int IRDV:4;
} Ifx_DMA_CH_ADICR_Bits;


typedef struct _Ifx_DMA_CH_CHCFGR_Bits
{
    unsigned int TREL:14;
    unsigned int reserved_14:2;
    unsigned int BLKM:3;
    unsigned int RROAT:1;
    unsigned int CHMODE:1;
    unsigned int CHDW:3;
    unsigned int PATSEL:3;
    unsigned int reserved_27:1;
    unsigned int PRSEL:1;
    unsigned int reserved_29:1;
    unsigned int DMAPRIO:2;
} Ifx_DMA_CH_CHCFGR_Bits;


typedef struct _Ifx_DMA_CH_CHCSR_Bits
{
    unsigned int TCOUNT:14;
    unsigned int reserved_14:1;
    unsigned int LXO:1;
    unsigned int WRPS:1;
    unsigned int WRPD:1;
    unsigned int ICH:1;
    unsigned int IPM:1;
    unsigned int reserved_20:2;
    unsigned int BUFFER:1;
    unsigned int FROZEN:1;
    unsigned int SWB:1;
    unsigned int CWRP:1;
    unsigned int CICH:1;
    unsigned int SIT:1;
    unsigned int reserved_28:3;
    unsigned int SCH:1;
} Ifx_DMA_CH_CHCSR_Bits;


typedef struct _Ifx_DMA_CH_DADR_Bits
{
    unsigned int DADR:32;
} Ifx_DMA_CH_DADR_Bits;


typedef struct _Ifx_DMA_CH_RDCRCR_Bits
{
    unsigned int RDCRC:32;
} Ifx_DMA_CH_RDCRCR_Bits;


typedef struct _Ifx_DMA_CH_SADR_Bits
{
    unsigned int SADR:32;
} Ifx_DMA_CH_SADR_Bits;


typedef struct _Ifx_DMA_CH_SDCRCR_Bits
{
    unsigned int SDCRC:32;
} Ifx_DMA_CH_SDCRCR_Bits;


typedef struct _Ifx_DMA_CH_SHADR_Bits
{
    unsigned int SHADR:32;
} Ifx_DMA_CH_SHADR_Bits;


typedef struct _Ifx_DMA_CLC_Bits
{
    unsigned int DISR:1;
    unsigned int DISS:1;
    unsigned int reserved_2:1;
    unsigned int EDIS:1;
    unsigned int reserved_4:28;
} Ifx_DMA_CLC_Bits;


typedef struct _Ifx_DMA_ERRINTR_Bits
{
    unsigned int SIT:1;
    unsigned int reserved_1:31;
} Ifx_DMA_ERRINTR_Bits;


typedef struct _Ifx_DMA_HRR_Bits
{
    unsigned int HRP:2;
    unsigned int reserved_2:30;
} Ifx_DMA_HRR_Bits;


typedef struct _Ifx_DMA_ID_Bits
{
    unsigned int MOD_REV:8;
    unsigned int MOD_TYPE:8;
    unsigned int MODNUMBER:16;
} Ifx_DMA_ID_Bits;


typedef struct _Ifx_DMA_MEMCON_Bits
{
    volatile unsigned int reserved_0:2;
    volatile unsigned int INTERR:1;
    volatile unsigned int reserved_3:1;
    volatile unsigned int RMWERR:1;
    volatile unsigned int reserved_5:1;
    volatile unsigned int DATAERR:1;
    volatile unsigned int reserved_7:1;
    volatile unsigned int PMIC:1;
    volatile unsigned int ERRDIS:1;
    volatile unsigned int reserved_10:22;
} Ifx_DMA_MEMCON_Bits;


typedef struct _Ifx_DMA_MODE_Bits
{
    unsigned int MODE:1;
    unsigned int reserved_1:31;
} Ifx_DMA_MODE_Bits;


typedef struct _Ifx_DMA_OTSS_Bits
{
    unsigned int TGS:4;
    unsigned int reserved_4:3;
    unsigned int BS:1;
    unsigned int reserved_8:24;
} Ifx_DMA_OTSS_Bits;


typedef struct _Ifx_DMA_PRR0_Bits
{
    unsigned int PAT00:8;
    unsigned int PAT01:8;
    unsigned int PAT02:8;
    unsigned int PAT03:8;
} Ifx_DMA_PRR0_Bits;


typedef struct _Ifx_DMA_PRR1_Bits
{
    unsigned int PAT10:8;
    unsigned int PAT11:8;
    unsigned int PAT12:8;
    unsigned int PAT13:8;
} Ifx_DMA_PRR1_Bits;


typedef struct _Ifx_DMA_SUSACR_Bits
{
    unsigned int SUSAC:1;
    unsigned int reserved_1:31;
} Ifx_DMA_SUSACR_Bits;


typedef struct _Ifx_DMA_SUSENR_Bits
{
    unsigned int SUSEN:1;
    unsigned int reserved_1:31;
} Ifx_DMA_SUSENR_Bits;


typedef struct _Ifx_DMA_TIME_Bits
{
    unsigned int COUNT:32;
} Ifx_DMA_TIME_Bits;


typedef struct _Ifx_DMA_TSR_Bits
{
    unsigned int RST:1;
    unsigned int HTRE:1;
    unsigned int TRL:1;
    unsigned int CH:1;
    unsigned int reserved_4:4;
    unsigned int HLTREQ:1;
    unsigned int HLTACK:1;
    unsigned int reserved_10:6;
    unsigned int ECH:1;
    unsigned int DCH:1;
    unsigned int CTL:1;
    unsigned int reserved_19:5;
    unsigned int HLTCLR:1;
    unsigned int reserved_25:7;
} Ifx_DMA_TSR_Bits;







typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DMA_ACCEN00_Bits B;
} Ifx_DMA_ACCEN00;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DMA_ACCEN01_Bits B;
} Ifx_DMA_ACCEN01;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DMA_ACCEN10_Bits B;
} Ifx_DMA_ACCEN10;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DMA_ACCEN11_Bits B;
} Ifx_DMA_ACCEN11;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DMA_ACCEN20_Bits B;
} Ifx_DMA_ACCEN20;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DMA_ACCEN21_Bits B;
} Ifx_DMA_ACCEN21;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DMA_ACCEN30_Bits B;
} Ifx_DMA_ACCEN30;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DMA_ACCEN31_Bits B;
} Ifx_DMA_ACCEN31;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DMA_BLK_CLRE_Bits B;
} Ifx_DMA_BLK_CLRE;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DMA_BLK_EER_Bits B;
} Ifx_DMA_BLK_EER;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DMA_BLK_ERRSR_Bits B;
} Ifx_DMA_BLK_ERRSR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DMA_BLK_ME_ADICR_Bits B;
} Ifx_DMA_BLK_ME_ADICR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DMA_BLK_ME_CHCR_Bits B;
} Ifx_DMA_BLK_ME_CHCR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DMA_BLK_ME_CHSR_Bits B;
} Ifx_DMA_BLK_ME_CHSR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DMA_BLK_ME_DADR_Bits B;
} Ifx_DMA_BLK_ME_DADR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DMA_BLK_ME_R0_Bits B;
} Ifx_DMA_BLK_ME_R0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DMA_BLK_ME_R1_Bits B;
} Ifx_DMA_BLK_ME_R1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DMA_BLK_ME_R2_Bits B;
} Ifx_DMA_BLK_ME_R2;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DMA_BLK_ME_R3_Bits B;
} Ifx_DMA_BLK_ME_R3;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DMA_BLK_ME_R4_Bits B;
} Ifx_DMA_BLK_ME_R4;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DMA_BLK_ME_R5_Bits B;
} Ifx_DMA_BLK_ME_R5;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DMA_BLK_ME_R6_Bits B;
} Ifx_DMA_BLK_ME_R6;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DMA_BLK_ME_R7_Bits B;
} Ifx_DMA_BLK_ME_R7;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DMA_BLK_ME_RDCRC_Bits B;
} Ifx_DMA_BLK_ME_RDCRC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DMA_BLK_ME_SADR_Bits B;
} Ifx_DMA_BLK_ME_SADR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DMA_BLK_ME_SDCRC_Bits B;
} Ifx_DMA_BLK_ME_SDCRC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DMA_BLK_ME_SHADR_Bits B;
} Ifx_DMA_BLK_ME_SHADR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DMA_BLK_ME_SR_Bits B;
} Ifx_DMA_BLK_ME_SR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DMA_CH_ADICR_Bits B;
} Ifx_DMA_CH_ADICR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DMA_CH_CHCFGR_Bits B;
} Ifx_DMA_CH_CHCFGR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DMA_CH_CHCSR_Bits B;
} Ifx_DMA_CH_CHCSR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DMA_CH_DADR_Bits B;
} Ifx_DMA_CH_DADR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DMA_CH_RDCRCR_Bits B;
} Ifx_DMA_CH_RDCRCR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DMA_CH_SADR_Bits B;
} Ifx_DMA_CH_SADR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DMA_CH_SDCRCR_Bits B;
} Ifx_DMA_CH_SDCRCR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DMA_CH_SHADR_Bits B;
} Ifx_DMA_CH_SHADR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DMA_CLC_Bits B;
} Ifx_DMA_CLC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DMA_ERRINTR_Bits B;
} Ifx_DMA_ERRINTR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DMA_HRR_Bits B;
} Ifx_DMA_HRR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DMA_ID_Bits B;
} Ifx_DMA_ID;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DMA_MEMCON_Bits B;
} Ifx_DMA_MEMCON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DMA_MODE_Bits B;
} Ifx_DMA_MODE;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DMA_OTSS_Bits B;
} Ifx_DMA_OTSS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DMA_PRR0_Bits B;
} Ifx_DMA_PRR0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DMA_PRR1_Bits B;
} Ifx_DMA_PRR1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DMA_SUSACR_Bits B;
} Ifx_DMA_SUSACR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DMA_SUSENR_Bits B;
} Ifx_DMA_SUSENR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DMA_TIME_Bits B;
} Ifx_DMA_TIME;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DMA_TSR_Bits B;
} Ifx_DMA_TSR;
# 1040 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxDma_regdef.h" 3
typedef volatile struct _Ifx_DMA_BLK_ME
{
    Ifx_DMA_BLK_ME_SR SR;
    unsigned char reserved_4[12];
    Ifx_DMA_BLK_ME_R0 R0;
    Ifx_DMA_BLK_ME_R1 R1;
    Ifx_DMA_BLK_ME_R2 R2;
    Ifx_DMA_BLK_ME_R3 R3;
    Ifx_DMA_BLK_ME_R4 R4;
    Ifx_DMA_BLK_ME_R5 R5;
    Ifx_DMA_BLK_ME_R6 R6;
    Ifx_DMA_BLK_ME_R7 R7;
    unsigned char reserved_30[32];
    Ifx_DMA_BLK_ME_RDCRC RDCRC;
    Ifx_DMA_BLK_ME_SDCRC SDCRC;
    Ifx_DMA_BLK_ME_SADR SADR;
    Ifx_DMA_BLK_ME_DADR DADR;
    Ifx_DMA_BLK_ME_ADICR ADICR;
    Ifx_DMA_BLK_ME_CHCR CHCR;
    Ifx_DMA_BLK_ME_SHADR SHADR;
    Ifx_DMA_BLK_ME_CHSR CHSR;
} Ifx_DMA_BLK_ME;
# 1074 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxDma_regdef.h" 3
typedef volatile struct _Ifx_DMA_BLK
{
    Ifx_DMA_BLK_EER EER;
    Ifx_DMA_BLK_ERRSR ERRSR;
    Ifx_DMA_BLK_CLRE CLRE;
    unsigned char reserved_C[4];
    Ifx_DMA_BLK_ME ME;
} Ifx_DMA_BLK;


typedef volatile struct _Ifx_DMA_CH
{
    Ifx_DMA_CH_RDCRCR RDCRCR;
    Ifx_DMA_CH_SDCRCR SDCRCR;
    Ifx_DMA_CH_SADR SADR;
    Ifx_DMA_CH_DADR DADR;
    Ifx_DMA_CH_ADICR ADICR;
    Ifx_DMA_CH_CHCFGR CHCFGR;
    Ifx_DMA_CH_SHADR SHADR;
    Ifx_DMA_CH_CHCSR CHCSR;
} Ifx_DMA_CH;
# 1107 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxDma_regdef.h" 3
typedef volatile struct _Ifx_DMA
{
    Ifx_DMA_CLC CLC;
    unsigned char reserved_4[4];
    Ifx_DMA_ID ID;
    unsigned char reserved_C[20];
    Ifx_DMA_MEMCON MEMCON;
    unsigned char reserved_24[28];
    Ifx_DMA_ACCEN00 ACCEN00;
    Ifx_DMA_ACCEN01 ACCEN01;
    Ifx_DMA_ACCEN10 ACCEN10;
    Ifx_DMA_ACCEN11 ACCEN11;
    Ifx_DMA_ACCEN20 ACCEN20;
    Ifx_DMA_ACCEN21 ACCEN21;
    Ifx_DMA_ACCEN30 ACCEN30;
    Ifx_DMA_ACCEN31 ACCEN31;
    unsigned char reserved_60[192];
    Ifx_DMA_BLK BLK0;
    unsigned char reserved_1A0[3968];
    Ifx_DMA_BLK BLK1;
    unsigned char reserved_11A0[96];
    Ifx_DMA_OTSS OTSS;
    Ifx_DMA_ERRINTR ERRINTR;
    Ifx_DMA_PRR0 PRR0;
    Ifx_DMA_PRR1 PRR1;
    Ifx_DMA_TIME TIME;
    unsigned char reserved_1214[236];
    Ifx_DMA_MODE MODE[4];
    unsigned char reserved_1310[1264];
    Ifx_DMA_HRR HRR[64];
    unsigned char reserved_1900[256];
    Ifx_DMA_SUSENR SUSENR[64];
    unsigned char reserved_1B00[256];
    Ifx_DMA_SUSACR SUSACR[64];
    unsigned char reserved_1D00[256];
    Ifx_DMA_TSR TSR[64];
    unsigned char reserved_1F00[256];
    Ifx_DMA_CH CH[64];
    unsigned char reserved_2800[6144];
} Ifx_DMA;
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxDma_reg.h" 2 3





#define MODULE_DMA (*(Ifx_DMA*)0xF0010000u)







#define DMA_ACCEN00 (*(volatile Ifx_DMA_ACCEN00*)0xF0010040u)


#define DMA_ACCEN01 (*(volatile Ifx_DMA_ACCEN01*)0xF0010044u)


#define DMA_ACCEN10 (*(volatile Ifx_DMA_ACCEN10*)0xF0010048u)


#define DMA_ACCEN11 (*(volatile Ifx_DMA_ACCEN11*)0xF001004Cu)


#define DMA_ACCEN20 (*(volatile Ifx_DMA_ACCEN20*)0xF0010050u)


#define DMA_ACCEN21 (*(volatile Ifx_DMA_ACCEN21*)0xF0010054u)


#define DMA_ACCEN30 (*(volatile Ifx_DMA_ACCEN30*)0xF0010058u)


#define DMA_ACCEN31 (*(volatile Ifx_DMA_ACCEN31*)0xF001005Cu)


#define DMA_BLK0_CLRE (*(volatile Ifx_DMA_BLK_CLRE*)0xF0010128u)




#define DMA_CLRE0 (DMA_BLK0_CLRE)


#define DMA_BLK0_EER (*(volatile Ifx_DMA_BLK_EER*)0xF0010120u)




#define DMA_EER0 (DMA_BLK0_EER)


#define DMA_BLK0_ERRSR (*(volatile Ifx_DMA_BLK_ERRSR*)0xF0010124u)




#define DMA_ERRSR0 (DMA_BLK0_ERRSR)


#define DMA_BLK0_ME_ADICR (*(volatile Ifx_DMA_BLK_ME_ADICR*)0xF0010190u)




#define DMA_ME0ADICR (DMA_BLK0_ME_ADICR)


#define DMA_BLK0_ME_CHCR (*(volatile Ifx_DMA_BLK_ME_CHCR*)0xF0010194u)




#define DMA_ME0CHCR (DMA_BLK0_ME_CHCR)


#define DMA_BLK0_ME_CHSR (*(volatile Ifx_DMA_BLK_ME_CHSR*)0xF001019Cu)




#define DMA_ME0CHSR (DMA_BLK0_ME_CHSR)


#define DMA_BLK0_ME_DADR (*(volatile Ifx_DMA_BLK_ME_DADR*)0xF001018Cu)




#define DMA_ME0DADR (DMA_BLK0_ME_DADR)


#define DMA_BLK0_ME_R0 (*(volatile Ifx_DMA_BLK_ME_R0*)0xF0010140u)




#define DMA_ME00R (DMA_BLK0_ME_R0)


#define DMA_BLK0_ME_R1 (*(volatile Ifx_DMA_BLK_ME_R1*)0xF0010144u)




#define DMA_ME01R (DMA_BLK0_ME_R1)


#define DMA_BLK0_ME_R2 (*(volatile Ifx_DMA_BLK_ME_R2*)0xF0010148u)




#define DMA_ME02R (DMA_BLK0_ME_R2)


#define DMA_BLK0_ME_R3 (*(volatile Ifx_DMA_BLK_ME_R3*)0xF001014Cu)




#define DMA_ME03R (DMA_BLK0_ME_R3)


#define DMA_BLK0_ME_R4 (*(volatile Ifx_DMA_BLK_ME_R4*)0xF0010150u)




#define DMA_ME04R (DMA_BLK0_ME_R4)


#define DMA_BLK0_ME_R5 (*(volatile Ifx_DMA_BLK_ME_R5*)0xF0010154u)




#define DMA_ME05R (DMA_BLK0_ME_R5)


#define DMA_BLK0_ME_R6 (*(volatile Ifx_DMA_BLK_ME_R6*)0xF0010158u)




#define DMA_ME06R (DMA_BLK0_ME_R6)


#define DMA_BLK0_ME_R7 (*(volatile Ifx_DMA_BLK_ME_R7*)0xF001015Cu)




#define DMA_ME07R (DMA_BLK0_ME_R7)


#define DMA_BLK0_ME_RDCRC (*(volatile Ifx_DMA_BLK_ME_RDCRC*)0xF0010180u)




#define DMA_ME0RDCRC (DMA_BLK0_ME_RDCRC)


#define DMA_BLK0_ME_SADR (*(volatile Ifx_DMA_BLK_ME_SADR*)0xF0010188u)




#define DMA_ME0SADR (DMA_BLK0_ME_SADR)



#define DMA_BLK0_ME_SDCRC (*(volatile Ifx_DMA_BLK_ME_SDCRC*)0xF0010184u)




#define DMA_ME0SDCRC (DMA_BLK0_ME_SDCRC)


#define DMA_BLK0_ME_SHADR (*(volatile Ifx_DMA_BLK_ME_SHADR*)0xF0010198u)




#define DMA_ME0SHADR (DMA_BLK0_ME_SHADR)


#define DMA_BLK0_ME_SR (*(volatile Ifx_DMA_BLK_ME_SR*)0xF0010130u)




#define DMA_ME0SR (DMA_BLK0_ME_SR)


#define DMA_BLK1_CLRE (*(volatile Ifx_DMA_BLK_CLRE*)0xF0011128u)




#define DMA_CLRE1 (DMA_BLK1_CLRE)


#define DMA_BLK1_EER (*(volatile Ifx_DMA_BLK_EER*)0xF0011120u)




#define DMA_EER1 (DMA_BLK1_EER)


#define DMA_BLK1_ERRSR (*(volatile Ifx_DMA_BLK_ERRSR*)0xF0011124u)




#define DMA_ERRSR1 (DMA_BLK1_ERRSR)


#define DMA_BLK1_ME_ADICR (*(volatile Ifx_DMA_BLK_ME_ADICR*)0xF0011190u)




#define DMA_ME1ADICR (DMA_BLK1_ME_ADICR)


#define DMA_BLK1_ME_CHCR (*(volatile Ifx_DMA_BLK_ME_CHCR*)0xF0011194u)




#define DMA_ME1CHCR (DMA_BLK1_ME_CHCR)


#define DMA_BLK1_ME_CHSR (*(volatile Ifx_DMA_BLK_ME_CHSR*)0xF001119Cu)




#define DMA_ME1CHSR (DMA_BLK1_ME_CHSR)


#define DMA_BLK1_ME_DADR (*(volatile Ifx_DMA_BLK_ME_DADR*)0xF001118Cu)




#define DMA_ME1DADR (DMA_BLK1_ME_DADR)


#define DMA_BLK1_ME_R0 (*(volatile Ifx_DMA_BLK_ME_R0*)0xF0011140u)




#define DMA_ME10R (DMA_BLK1_ME_R0)


#define DMA_BLK1_ME_R1 (*(volatile Ifx_DMA_BLK_ME_R1*)0xF0011144u)




#define DMA_ME11R (DMA_BLK1_ME_R1)


#define DMA_BLK1_ME_R2 (*(volatile Ifx_DMA_BLK_ME_R2*)0xF0011148u)




#define DMA_ME12R (DMA_BLK1_ME_R2)


#define DMA_BLK1_ME_R3 (*(volatile Ifx_DMA_BLK_ME_R3*)0xF001114Cu)




#define DMA_ME13R (DMA_BLK1_ME_R3)


#define DMA_BLK1_ME_R4 (*(volatile Ifx_DMA_BLK_ME_R4*)0xF0011150u)




#define DMA_ME14R (DMA_BLK1_ME_R4)


#define DMA_BLK1_ME_R5 (*(volatile Ifx_DMA_BLK_ME_R5*)0xF0011154u)




#define DMA_ME15R (DMA_BLK1_ME_R5)


#define DMA_BLK1_ME_R6 (*(volatile Ifx_DMA_BLK_ME_R6*)0xF0011158u)




#define DMA_ME16R (DMA_BLK1_ME_R6)


#define DMA_BLK1_ME_R7 (*(volatile Ifx_DMA_BLK_ME_R7*)0xF001115Cu)




#define DMA_ME17R (DMA_BLK1_ME_R7)


#define DMA_BLK1_ME_RDCRC (*(volatile Ifx_DMA_BLK_ME_RDCRC*)0xF0011180u)




#define DMA_ME1RDCRC (DMA_BLK1_ME_RDCRC)


#define DMA_BLK1_ME_SADR (*(volatile Ifx_DMA_BLK_ME_SADR*)0xF0011188u)




#define DMA_ME1SADR (DMA_BLK1_ME_SADR)



#define DMA_BLK1_ME_SDCRC (*(volatile Ifx_DMA_BLK_ME_SDCRC*)0xF0011184u)




#define DMA_ME1SDCRC (DMA_BLK1_ME_SDCRC)


#define DMA_BLK1_ME_SHADR (*(volatile Ifx_DMA_BLK_ME_SHADR*)0xF0011198u)




#define DMA_ME1SHADR (DMA_BLK1_ME_SHADR)


#define DMA_BLK1_ME_SR (*(volatile Ifx_DMA_BLK_ME_SR*)0xF0011130u)




#define DMA_ME1SR (DMA_BLK1_ME_SR)


#define DMA_CH0_ADICR (*(volatile Ifx_DMA_CH_ADICR*)0xF0012010u)




#define DMA_ADICR000 (DMA_CH0_ADICR)


#define DMA_CH0_CHCFGR (*(volatile Ifx_DMA_CH_CHCFGR*)0xF0012014u)




#define DMA_CHCFGR000 (DMA_CH0_CHCFGR)


#define DMA_CH0_CHCSR (*(volatile Ifx_DMA_CH_CHCSR*)0xF001201Cu)




#define DMA_CHCSR000 (DMA_CH0_CHCSR)


#define DMA_CH0_DADR (*(volatile Ifx_DMA_CH_DADR*)0xF001200Cu)




#define DMA_DADR000 (DMA_CH0_DADR)


#define DMA_CH0_RDCRCR (*(volatile Ifx_DMA_CH_RDCRCR*)0xF0012000u)




#define DMA_RDCRCR000 (DMA_CH0_RDCRCR)


#define DMA_CH0_SADR (*(volatile Ifx_DMA_CH_SADR*)0xF0012008u)




#define DMA_SADR000 (DMA_CH0_SADR)


#define DMA_CH0_SDCRCR (*(volatile Ifx_DMA_CH_SDCRCR*)0xF0012004u)




#define DMA_SDCRCR000 (DMA_CH0_SDCRCR)


#define DMA_CH0_SHADR (*(volatile Ifx_DMA_CH_SHADR*)0xF0012018u)




#define DMA_SHADR000 (DMA_CH0_SHADR)


#define DMA_CH10_ADICR (*(volatile Ifx_DMA_CH_ADICR*)0xF0012150u)




#define DMA_ADICR010 (DMA_CH10_ADICR)


#define DMA_CH10_CHCFGR (*(volatile Ifx_DMA_CH_CHCFGR*)0xF0012154u)




#define DMA_CHCFGR010 (DMA_CH10_CHCFGR)


#define DMA_CH10_CHCSR (*(volatile Ifx_DMA_CH_CHCSR*)0xF001215Cu)




#define DMA_CHCSR010 (DMA_CH10_CHCSR)


#define DMA_CH10_DADR (*(volatile Ifx_DMA_CH_DADR*)0xF001214Cu)




#define DMA_DADR010 (DMA_CH10_DADR)


#define DMA_CH10_RDCRCR (*(volatile Ifx_DMA_CH_RDCRCR*)0xF0012140u)




#define DMA_RDCRCR010 (DMA_CH10_RDCRCR)


#define DMA_CH10_SADR (*(volatile Ifx_DMA_CH_SADR*)0xF0012148u)




#define DMA_SADR010 (DMA_CH10_SADR)


#define DMA_CH10_SDCRCR (*(volatile Ifx_DMA_CH_SDCRCR*)0xF0012144u)




#define DMA_SDCRCR010 (DMA_CH10_SDCRCR)


#define DMA_CH10_SHADR (*(volatile Ifx_DMA_CH_SHADR*)0xF0012158u)




#define DMA_SHADR010 (DMA_CH10_SHADR)


#define DMA_CH11_ADICR (*(volatile Ifx_DMA_CH_ADICR*)0xF0012170u)




#define DMA_ADICR011 (DMA_CH11_ADICR)


#define DMA_CH11_CHCFGR (*(volatile Ifx_DMA_CH_CHCFGR*)0xF0012174u)




#define DMA_CHCFGR011 (DMA_CH11_CHCFGR)


#define DMA_CH11_CHCSR (*(volatile Ifx_DMA_CH_CHCSR*)0xF001217Cu)




#define DMA_CHCSR011 (DMA_CH11_CHCSR)


#define DMA_CH11_DADR (*(volatile Ifx_DMA_CH_DADR*)0xF001216Cu)




#define DMA_DADR011 (DMA_CH11_DADR)


#define DMA_CH11_RDCRCR (*(volatile Ifx_DMA_CH_RDCRCR*)0xF0012160u)




#define DMA_RDCRCR011 (DMA_CH11_RDCRCR)


#define DMA_CH11_SADR (*(volatile Ifx_DMA_CH_SADR*)0xF0012168u)




#define DMA_SADR011 (DMA_CH11_SADR)


#define DMA_CH11_SDCRCR (*(volatile Ifx_DMA_CH_SDCRCR*)0xF0012164u)




#define DMA_SDCRCR011 (DMA_CH11_SDCRCR)


#define DMA_CH11_SHADR (*(volatile Ifx_DMA_CH_SHADR*)0xF0012178u)




#define DMA_SHADR011 (DMA_CH11_SHADR)


#define DMA_CH12_ADICR (*(volatile Ifx_DMA_CH_ADICR*)0xF0012190u)




#define DMA_ADICR012 (DMA_CH12_ADICR)


#define DMA_CH12_CHCFGR (*(volatile Ifx_DMA_CH_CHCFGR*)0xF0012194u)




#define DMA_CHCFGR012 (DMA_CH12_CHCFGR)


#define DMA_CH12_CHCSR (*(volatile Ifx_DMA_CH_CHCSR*)0xF001219Cu)




#define DMA_CHCSR012 (DMA_CH12_CHCSR)


#define DMA_CH12_DADR (*(volatile Ifx_DMA_CH_DADR*)0xF001218Cu)




#define DMA_DADR012 (DMA_CH12_DADR)


#define DMA_CH12_RDCRCR (*(volatile Ifx_DMA_CH_RDCRCR*)0xF0012180u)




#define DMA_RDCRCR012 (DMA_CH12_RDCRCR)


#define DMA_CH12_SADR (*(volatile Ifx_DMA_CH_SADR*)0xF0012188u)




#define DMA_SADR012 (DMA_CH12_SADR)


#define DMA_CH12_SDCRCR (*(volatile Ifx_DMA_CH_SDCRCR*)0xF0012184u)




#define DMA_SDCRCR012 (DMA_CH12_SDCRCR)


#define DMA_CH12_SHADR (*(volatile Ifx_DMA_CH_SHADR*)0xF0012198u)




#define DMA_SHADR012 (DMA_CH12_SHADR)


#define DMA_CH13_ADICR (*(volatile Ifx_DMA_CH_ADICR*)0xF00121B0u)




#define DMA_ADICR013 (DMA_CH13_ADICR)


#define DMA_CH13_CHCFGR (*(volatile Ifx_DMA_CH_CHCFGR*)0xF00121B4u)




#define DMA_CHCFGR013 (DMA_CH13_CHCFGR)


#define DMA_CH13_CHCSR (*(volatile Ifx_DMA_CH_CHCSR*)0xF00121BCu)




#define DMA_CHCSR013 (DMA_CH13_CHCSR)


#define DMA_CH13_DADR (*(volatile Ifx_DMA_CH_DADR*)0xF00121ACu)




#define DMA_DADR013 (DMA_CH13_DADR)


#define DMA_CH13_RDCRCR (*(volatile Ifx_DMA_CH_RDCRCR*)0xF00121A0u)




#define DMA_RDCRCR013 (DMA_CH13_RDCRCR)


#define DMA_CH13_SADR (*(volatile Ifx_DMA_CH_SADR*)0xF00121A8u)




#define DMA_SADR013 (DMA_CH13_SADR)


#define DMA_CH13_SDCRCR (*(volatile Ifx_DMA_CH_SDCRCR*)0xF00121A4u)




#define DMA_SDCRCR013 (DMA_CH13_SDCRCR)


#define DMA_CH13_SHADR (*(volatile Ifx_DMA_CH_SHADR*)0xF00121B8u)




#define DMA_SHADR013 (DMA_CH13_SHADR)


#define DMA_CH14_ADICR (*(volatile Ifx_DMA_CH_ADICR*)0xF00121D0u)




#define DMA_ADICR014 (DMA_CH14_ADICR)


#define DMA_CH14_CHCFGR (*(volatile Ifx_DMA_CH_CHCFGR*)0xF00121D4u)




#define DMA_CHCFGR014 (DMA_CH14_CHCFGR)


#define DMA_CH14_CHCSR (*(volatile Ifx_DMA_CH_CHCSR*)0xF00121DCu)




#define DMA_CHCSR014 (DMA_CH14_CHCSR)


#define DMA_CH14_DADR (*(volatile Ifx_DMA_CH_DADR*)0xF00121CCu)




#define DMA_DADR014 (DMA_CH14_DADR)


#define DMA_CH14_RDCRCR (*(volatile Ifx_DMA_CH_RDCRCR*)0xF00121C0u)




#define DMA_RDCRCR014 (DMA_CH14_RDCRCR)


#define DMA_CH14_SADR (*(volatile Ifx_DMA_CH_SADR*)0xF00121C8u)




#define DMA_SADR014 (DMA_CH14_SADR)


#define DMA_CH14_SDCRCR (*(volatile Ifx_DMA_CH_SDCRCR*)0xF00121C4u)




#define DMA_SDCRCR014 (DMA_CH14_SDCRCR)


#define DMA_CH14_SHADR (*(volatile Ifx_DMA_CH_SHADR*)0xF00121D8u)




#define DMA_SHADR014 (DMA_CH14_SHADR)


#define DMA_CH15_ADICR (*(volatile Ifx_DMA_CH_ADICR*)0xF00121F0u)




#define DMA_ADICR015 (DMA_CH15_ADICR)


#define DMA_CH15_CHCFGR (*(volatile Ifx_DMA_CH_CHCFGR*)0xF00121F4u)




#define DMA_CHCFGR015 (DMA_CH15_CHCFGR)


#define DMA_CH15_CHCSR (*(volatile Ifx_DMA_CH_CHCSR*)0xF00121FCu)




#define DMA_CHCSR015 (DMA_CH15_CHCSR)


#define DMA_CH15_DADR (*(volatile Ifx_DMA_CH_DADR*)0xF00121ECu)




#define DMA_DADR015 (DMA_CH15_DADR)


#define DMA_CH15_RDCRCR (*(volatile Ifx_DMA_CH_RDCRCR*)0xF00121E0u)




#define DMA_RDCRCR015 (DMA_CH15_RDCRCR)


#define DMA_CH15_SADR (*(volatile Ifx_DMA_CH_SADR*)0xF00121E8u)




#define DMA_SADR015 (DMA_CH15_SADR)


#define DMA_CH15_SDCRCR (*(volatile Ifx_DMA_CH_SDCRCR*)0xF00121E4u)




#define DMA_SDCRCR015 (DMA_CH15_SDCRCR)


#define DMA_CH15_SHADR (*(volatile Ifx_DMA_CH_SHADR*)0xF00121F8u)




#define DMA_SHADR015 (DMA_CH15_SHADR)


#define DMA_CH16_ADICR (*(volatile Ifx_DMA_CH_ADICR*)0xF0012210u)




#define DMA_ADICR016 (DMA_CH16_ADICR)


#define DMA_CH16_CHCFGR (*(volatile Ifx_DMA_CH_CHCFGR*)0xF0012214u)




#define DMA_CHCFGR016 (DMA_CH16_CHCFGR)


#define DMA_CH16_CHCSR (*(volatile Ifx_DMA_CH_CHCSR*)0xF001221Cu)




#define DMA_CHCSR016 (DMA_CH16_CHCSR)


#define DMA_CH16_DADR (*(volatile Ifx_DMA_CH_DADR*)0xF001220Cu)




#define DMA_DADR016 (DMA_CH16_DADR)


#define DMA_CH16_RDCRCR (*(volatile Ifx_DMA_CH_RDCRCR*)0xF0012200u)




#define DMA_RDCRCR016 (DMA_CH16_RDCRCR)


#define DMA_CH16_SADR (*(volatile Ifx_DMA_CH_SADR*)0xF0012208u)




#define DMA_SADR016 (DMA_CH16_SADR)


#define DMA_CH16_SDCRCR (*(volatile Ifx_DMA_CH_SDCRCR*)0xF0012204u)




#define DMA_SDCRCR016 (DMA_CH16_SDCRCR)


#define DMA_CH16_SHADR (*(volatile Ifx_DMA_CH_SHADR*)0xF0012218u)




#define DMA_SHADR016 (DMA_CH16_SHADR)


#define DMA_CH17_ADICR (*(volatile Ifx_DMA_CH_ADICR*)0xF0012230u)




#define DMA_ADICR017 (DMA_CH17_ADICR)


#define DMA_CH17_CHCFGR (*(volatile Ifx_DMA_CH_CHCFGR*)0xF0012234u)




#define DMA_CHCFGR017 (DMA_CH17_CHCFGR)


#define DMA_CH17_CHCSR (*(volatile Ifx_DMA_CH_CHCSR*)0xF001223Cu)




#define DMA_CHCSR017 (DMA_CH17_CHCSR)


#define DMA_CH17_DADR (*(volatile Ifx_DMA_CH_DADR*)0xF001222Cu)




#define DMA_DADR017 (DMA_CH17_DADR)


#define DMA_CH17_RDCRCR (*(volatile Ifx_DMA_CH_RDCRCR*)0xF0012220u)




#define DMA_RDCRCR017 (DMA_CH17_RDCRCR)


#define DMA_CH17_SADR (*(volatile Ifx_DMA_CH_SADR*)0xF0012228u)




#define DMA_SADR017 (DMA_CH17_SADR)


#define DMA_CH17_SDCRCR (*(volatile Ifx_DMA_CH_SDCRCR*)0xF0012224u)




#define DMA_SDCRCR017 (DMA_CH17_SDCRCR)


#define DMA_CH17_SHADR (*(volatile Ifx_DMA_CH_SHADR*)0xF0012238u)




#define DMA_SHADR017 (DMA_CH17_SHADR)


#define DMA_CH18_ADICR (*(volatile Ifx_DMA_CH_ADICR*)0xF0012250u)




#define DMA_ADICR018 (DMA_CH18_ADICR)


#define DMA_CH18_CHCFGR (*(volatile Ifx_DMA_CH_CHCFGR*)0xF0012254u)




#define DMA_CHCFGR018 (DMA_CH18_CHCFGR)


#define DMA_CH18_CHCSR (*(volatile Ifx_DMA_CH_CHCSR*)0xF001225Cu)




#define DMA_CHCSR018 (DMA_CH18_CHCSR)


#define DMA_CH18_DADR (*(volatile Ifx_DMA_CH_DADR*)0xF001224Cu)




#define DMA_DADR018 (DMA_CH18_DADR)


#define DMA_CH18_RDCRCR (*(volatile Ifx_DMA_CH_RDCRCR*)0xF0012240u)




#define DMA_RDCRCR018 (DMA_CH18_RDCRCR)


#define DMA_CH18_SADR (*(volatile Ifx_DMA_CH_SADR*)0xF0012248u)




#define DMA_SADR018 (DMA_CH18_SADR)


#define DMA_CH18_SDCRCR (*(volatile Ifx_DMA_CH_SDCRCR*)0xF0012244u)




#define DMA_SDCRCR018 (DMA_CH18_SDCRCR)


#define DMA_CH18_SHADR (*(volatile Ifx_DMA_CH_SHADR*)0xF0012258u)




#define DMA_SHADR018 (DMA_CH18_SHADR)


#define DMA_CH19_ADICR (*(volatile Ifx_DMA_CH_ADICR*)0xF0012270u)




#define DMA_ADICR019 (DMA_CH19_ADICR)


#define DMA_CH19_CHCFGR (*(volatile Ifx_DMA_CH_CHCFGR*)0xF0012274u)




#define DMA_CHCFGR019 (DMA_CH19_CHCFGR)


#define DMA_CH19_CHCSR (*(volatile Ifx_DMA_CH_CHCSR*)0xF001227Cu)




#define DMA_CHCSR019 (DMA_CH19_CHCSR)


#define DMA_CH19_DADR (*(volatile Ifx_DMA_CH_DADR*)0xF001226Cu)




#define DMA_DADR019 (DMA_CH19_DADR)


#define DMA_CH19_RDCRCR (*(volatile Ifx_DMA_CH_RDCRCR*)0xF0012260u)




#define DMA_RDCRCR019 (DMA_CH19_RDCRCR)


#define DMA_CH19_SADR (*(volatile Ifx_DMA_CH_SADR*)0xF0012268u)




#define DMA_SADR019 (DMA_CH19_SADR)


#define DMA_CH19_SDCRCR (*(volatile Ifx_DMA_CH_SDCRCR*)0xF0012264u)




#define DMA_SDCRCR019 (DMA_CH19_SDCRCR)


#define DMA_CH19_SHADR (*(volatile Ifx_DMA_CH_SHADR*)0xF0012278u)




#define DMA_SHADR019 (DMA_CH19_SHADR)


#define DMA_CH1_ADICR (*(volatile Ifx_DMA_CH_ADICR*)0xF0012030u)




#define DMA_ADICR001 (DMA_CH1_ADICR)


#define DMA_CH1_CHCFGR (*(volatile Ifx_DMA_CH_CHCFGR*)0xF0012034u)




#define DMA_CHCFGR001 (DMA_CH1_CHCFGR)


#define DMA_CH1_CHCSR (*(volatile Ifx_DMA_CH_CHCSR*)0xF001203Cu)




#define DMA_CHCSR001 (DMA_CH1_CHCSR)


#define DMA_CH1_DADR (*(volatile Ifx_DMA_CH_DADR*)0xF001202Cu)




#define DMA_DADR001 (DMA_CH1_DADR)


#define DMA_CH1_RDCRCR (*(volatile Ifx_DMA_CH_RDCRCR*)0xF0012020u)




#define DMA_RDCRCR001 (DMA_CH1_RDCRCR)


#define DMA_CH1_SADR (*(volatile Ifx_DMA_CH_SADR*)0xF0012028u)




#define DMA_SADR001 (DMA_CH1_SADR)


#define DMA_CH1_SDCRCR (*(volatile Ifx_DMA_CH_SDCRCR*)0xF0012024u)




#define DMA_SDCRCR001 (DMA_CH1_SDCRCR)


#define DMA_CH1_SHADR (*(volatile Ifx_DMA_CH_SHADR*)0xF0012038u)




#define DMA_SHADR001 (DMA_CH1_SHADR)


#define DMA_CH20_ADICR (*(volatile Ifx_DMA_CH_ADICR*)0xF0012290u)




#define DMA_ADICR020 (DMA_CH20_ADICR)


#define DMA_CH20_CHCFGR (*(volatile Ifx_DMA_CH_CHCFGR*)0xF0012294u)




#define DMA_CHCFGR020 (DMA_CH20_CHCFGR)


#define DMA_CH20_CHCSR (*(volatile Ifx_DMA_CH_CHCSR*)0xF001229Cu)




#define DMA_CHCSR020 (DMA_CH20_CHCSR)


#define DMA_CH20_DADR (*(volatile Ifx_DMA_CH_DADR*)0xF001228Cu)




#define DMA_DADR020 (DMA_CH20_DADR)


#define DMA_CH20_RDCRCR (*(volatile Ifx_DMA_CH_RDCRCR*)0xF0012280u)




#define DMA_RDCRCR020 (DMA_CH20_RDCRCR)


#define DMA_CH20_SADR (*(volatile Ifx_DMA_CH_SADR*)0xF0012288u)




#define DMA_SADR020 (DMA_CH20_SADR)


#define DMA_CH20_SDCRCR (*(volatile Ifx_DMA_CH_SDCRCR*)0xF0012284u)




#define DMA_SDCRCR020 (DMA_CH20_SDCRCR)


#define DMA_CH20_SHADR (*(volatile Ifx_DMA_CH_SHADR*)0xF0012298u)




#define DMA_SHADR020 (DMA_CH20_SHADR)


#define DMA_CH21_ADICR (*(volatile Ifx_DMA_CH_ADICR*)0xF00122B0u)




#define DMA_ADICR021 (DMA_CH21_ADICR)


#define DMA_CH21_CHCFGR (*(volatile Ifx_DMA_CH_CHCFGR*)0xF00122B4u)




#define DMA_CHCFGR021 (DMA_CH21_CHCFGR)


#define DMA_CH21_CHCSR (*(volatile Ifx_DMA_CH_CHCSR*)0xF00122BCu)




#define DMA_CHCSR021 (DMA_CH21_CHCSR)


#define DMA_CH21_DADR (*(volatile Ifx_DMA_CH_DADR*)0xF00122ACu)




#define DMA_DADR021 (DMA_CH21_DADR)


#define DMA_CH21_RDCRCR (*(volatile Ifx_DMA_CH_RDCRCR*)0xF00122A0u)




#define DMA_RDCRCR021 (DMA_CH21_RDCRCR)


#define DMA_CH21_SADR (*(volatile Ifx_DMA_CH_SADR*)0xF00122A8u)




#define DMA_SADR021 (DMA_CH21_SADR)


#define DMA_CH21_SDCRCR (*(volatile Ifx_DMA_CH_SDCRCR*)0xF00122A4u)




#define DMA_SDCRCR021 (DMA_CH21_SDCRCR)


#define DMA_CH21_SHADR (*(volatile Ifx_DMA_CH_SHADR*)0xF00122B8u)




#define DMA_SHADR021 (DMA_CH21_SHADR)


#define DMA_CH22_ADICR (*(volatile Ifx_DMA_CH_ADICR*)0xF00122D0u)




#define DMA_ADICR022 (DMA_CH22_ADICR)


#define DMA_CH22_CHCFGR (*(volatile Ifx_DMA_CH_CHCFGR*)0xF00122D4u)




#define DMA_CHCFGR022 (DMA_CH22_CHCFGR)


#define DMA_CH22_CHCSR (*(volatile Ifx_DMA_CH_CHCSR*)0xF00122DCu)




#define DMA_CHCSR022 (DMA_CH22_CHCSR)


#define DMA_CH22_DADR (*(volatile Ifx_DMA_CH_DADR*)0xF00122CCu)




#define DMA_DADR022 (DMA_CH22_DADR)


#define DMA_CH22_RDCRCR (*(volatile Ifx_DMA_CH_RDCRCR*)0xF00122C0u)




#define DMA_RDCRCR022 (DMA_CH22_RDCRCR)


#define DMA_CH22_SADR (*(volatile Ifx_DMA_CH_SADR*)0xF00122C8u)




#define DMA_SADR022 (DMA_CH22_SADR)


#define DMA_CH22_SDCRCR (*(volatile Ifx_DMA_CH_SDCRCR*)0xF00122C4u)




#define DMA_SDCRCR022 (DMA_CH22_SDCRCR)


#define DMA_CH22_SHADR (*(volatile Ifx_DMA_CH_SHADR*)0xF00122D8u)




#define DMA_SHADR022 (DMA_CH22_SHADR)


#define DMA_CH23_ADICR (*(volatile Ifx_DMA_CH_ADICR*)0xF00122F0u)




#define DMA_ADICR023 (DMA_CH23_ADICR)


#define DMA_CH23_CHCFGR (*(volatile Ifx_DMA_CH_CHCFGR*)0xF00122F4u)




#define DMA_CHCFGR023 (DMA_CH23_CHCFGR)


#define DMA_CH23_CHCSR (*(volatile Ifx_DMA_CH_CHCSR*)0xF00122FCu)




#define DMA_CHCSR023 (DMA_CH23_CHCSR)


#define DMA_CH23_DADR (*(volatile Ifx_DMA_CH_DADR*)0xF00122ECu)




#define DMA_DADR023 (DMA_CH23_DADR)


#define DMA_CH23_RDCRCR (*(volatile Ifx_DMA_CH_RDCRCR*)0xF00122E0u)




#define DMA_RDCRCR023 (DMA_CH23_RDCRCR)


#define DMA_CH23_SADR (*(volatile Ifx_DMA_CH_SADR*)0xF00122E8u)




#define DMA_SADR023 (DMA_CH23_SADR)


#define DMA_CH23_SDCRCR (*(volatile Ifx_DMA_CH_SDCRCR*)0xF00122E4u)




#define DMA_SDCRCR023 (DMA_CH23_SDCRCR)


#define DMA_CH23_SHADR (*(volatile Ifx_DMA_CH_SHADR*)0xF00122F8u)




#define DMA_SHADR023 (DMA_CH23_SHADR)


#define DMA_CH24_ADICR (*(volatile Ifx_DMA_CH_ADICR*)0xF0012310u)




#define DMA_ADICR024 (DMA_CH24_ADICR)


#define DMA_CH24_CHCFGR (*(volatile Ifx_DMA_CH_CHCFGR*)0xF0012314u)




#define DMA_CHCFGR024 (DMA_CH24_CHCFGR)


#define DMA_CH24_CHCSR (*(volatile Ifx_DMA_CH_CHCSR*)0xF001231Cu)




#define DMA_CHCSR024 (DMA_CH24_CHCSR)


#define DMA_CH24_DADR (*(volatile Ifx_DMA_CH_DADR*)0xF001230Cu)




#define DMA_DADR024 (DMA_CH24_DADR)


#define DMA_CH24_RDCRCR (*(volatile Ifx_DMA_CH_RDCRCR*)0xF0012300u)




#define DMA_RDCRCR024 (DMA_CH24_RDCRCR)


#define DMA_CH24_SADR (*(volatile Ifx_DMA_CH_SADR*)0xF0012308u)




#define DMA_SADR024 (DMA_CH24_SADR)


#define DMA_CH24_SDCRCR (*(volatile Ifx_DMA_CH_SDCRCR*)0xF0012304u)




#define DMA_SDCRCR024 (DMA_CH24_SDCRCR)


#define DMA_CH24_SHADR (*(volatile Ifx_DMA_CH_SHADR*)0xF0012318u)




#define DMA_SHADR024 (DMA_CH24_SHADR)


#define DMA_CH25_ADICR (*(volatile Ifx_DMA_CH_ADICR*)0xF0012330u)




#define DMA_ADICR025 (DMA_CH25_ADICR)


#define DMA_CH25_CHCFGR (*(volatile Ifx_DMA_CH_CHCFGR*)0xF0012334u)




#define DMA_CHCFGR025 (DMA_CH25_CHCFGR)


#define DMA_CH25_CHCSR (*(volatile Ifx_DMA_CH_CHCSR*)0xF001233Cu)




#define DMA_CHCSR025 (DMA_CH25_CHCSR)


#define DMA_CH25_DADR (*(volatile Ifx_DMA_CH_DADR*)0xF001232Cu)




#define DMA_DADR025 (DMA_CH25_DADR)


#define DMA_CH25_RDCRCR (*(volatile Ifx_DMA_CH_RDCRCR*)0xF0012320u)




#define DMA_RDCRCR025 (DMA_CH25_RDCRCR)


#define DMA_CH25_SADR (*(volatile Ifx_DMA_CH_SADR*)0xF0012328u)




#define DMA_SADR025 (DMA_CH25_SADR)


#define DMA_CH25_SDCRCR (*(volatile Ifx_DMA_CH_SDCRCR*)0xF0012324u)




#define DMA_SDCRCR025 (DMA_CH25_SDCRCR)


#define DMA_CH25_SHADR (*(volatile Ifx_DMA_CH_SHADR*)0xF0012338u)




#define DMA_SHADR025 (DMA_CH25_SHADR)


#define DMA_CH26_ADICR (*(volatile Ifx_DMA_CH_ADICR*)0xF0012350u)




#define DMA_ADICR026 (DMA_CH26_ADICR)


#define DMA_CH26_CHCFGR (*(volatile Ifx_DMA_CH_CHCFGR*)0xF0012354u)




#define DMA_CHCFGR026 (DMA_CH26_CHCFGR)


#define DMA_CH26_CHCSR (*(volatile Ifx_DMA_CH_CHCSR*)0xF001235Cu)




#define DMA_CHCSR026 (DMA_CH26_CHCSR)


#define DMA_CH26_DADR (*(volatile Ifx_DMA_CH_DADR*)0xF001234Cu)




#define DMA_DADR026 (DMA_CH26_DADR)


#define DMA_CH26_RDCRCR (*(volatile Ifx_DMA_CH_RDCRCR*)0xF0012340u)




#define DMA_RDCRCR026 (DMA_CH26_RDCRCR)


#define DMA_CH26_SADR (*(volatile Ifx_DMA_CH_SADR*)0xF0012348u)




#define DMA_SADR026 (DMA_CH26_SADR)


#define DMA_CH26_SDCRCR (*(volatile Ifx_DMA_CH_SDCRCR*)0xF0012344u)




#define DMA_SDCRCR026 (DMA_CH26_SDCRCR)


#define DMA_CH26_SHADR (*(volatile Ifx_DMA_CH_SHADR*)0xF0012358u)




#define DMA_SHADR026 (DMA_CH26_SHADR)


#define DMA_CH27_ADICR (*(volatile Ifx_DMA_CH_ADICR*)0xF0012370u)




#define DMA_ADICR027 (DMA_CH27_ADICR)


#define DMA_CH27_CHCFGR (*(volatile Ifx_DMA_CH_CHCFGR*)0xF0012374u)




#define DMA_CHCFGR027 (DMA_CH27_CHCFGR)


#define DMA_CH27_CHCSR (*(volatile Ifx_DMA_CH_CHCSR*)0xF001237Cu)




#define DMA_CHCSR027 (DMA_CH27_CHCSR)


#define DMA_CH27_DADR (*(volatile Ifx_DMA_CH_DADR*)0xF001236Cu)




#define DMA_DADR027 (DMA_CH27_DADR)


#define DMA_CH27_RDCRCR (*(volatile Ifx_DMA_CH_RDCRCR*)0xF0012360u)




#define DMA_RDCRCR027 (DMA_CH27_RDCRCR)


#define DMA_CH27_SADR (*(volatile Ifx_DMA_CH_SADR*)0xF0012368u)




#define DMA_SADR027 (DMA_CH27_SADR)


#define DMA_CH27_SDCRCR (*(volatile Ifx_DMA_CH_SDCRCR*)0xF0012364u)




#define DMA_SDCRCR027 (DMA_CH27_SDCRCR)


#define DMA_CH27_SHADR (*(volatile Ifx_DMA_CH_SHADR*)0xF0012378u)




#define DMA_SHADR027 (DMA_CH27_SHADR)


#define DMA_CH28_ADICR (*(volatile Ifx_DMA_CH_ADICR*)0xF0012390u)




#define DMA_ADICR028 (DMA_CH28_ADICR)


#define DMA_CH28_CHCFGR (*(volatile Ifx_DMA_CH_CHCFGR*)0xF0012394u)




#define DMA_CHCFGR028 (DMA_CH28_CHCFGR)


#define DMA_CH28_CHCSR (*(volatile Ifx_DMA_CH_CHCSR*)0xF001239Cu)




#define DMA_CHCSR028 (DMA_CH28_CHCSR)


#define DMA_CH28_DADR (*(volatile Ifx_DMA_CH_DADR*)0xF001238Cu)




#define DMA_DADR028 (DMA_CH28_DADR)


#define DMA_CH28_RDCRCR (*(volatile Ifx_DMA_CH_RDCRCR*)0xF0012380u)




#define DMA_RDCRCR028 (DMA_CH28_RDCRCR)


#define DMA_CH28_SADR (*(volatile Ifx_DMA_CH_SADR*)0xF0012388u)




#define DMA_SADR028 (DMA_CH28_SADR)


#define DMA_CH28_SDCRCR (*(volatile Ifx_DMA_CH_SDCRCR*)0xF0012384u)




#define DMA_SDCRCR028 (DMA_CH28_SDCRCR)


#define DMA_CH28_SHADR (*(volatile Ifx_DMA_CH_SHADR*)0xF0012398u)




#define DMA_SHADR028 (DMA_CH28_SHADR)


#define DMA_CH29_ADICR (*(volatile Ifx_DMA_CH_ADICR*)0xF00123B0u)




#define DMA_ADICR029 (DMA_CH29_ADICR)


#define DMA_CH29_CHCFGR (*(volatile Ifx_DMA_CH_CHCFGR*)0xF00123B4u)




#define DMA_CHCFGR029 (DMA_CH29_CHCFGR)


#define DMA_CH29_CHCSR (*(volatile Ifx_DMA_CH_CHCSR*)0xF00123BCu)




#define DMA_CHCSR029 (DMA_CH29_CHCSR)


#define DMA_CH29_DADR (*(volatile Ifx_DMA_CH_DADR*)0xF00123ACu)




#define DMA_DADR029 (DMA_CH29_DADR)


#define DMA_CH29_RDCRCR (*(volatile Ifx_DMA_CH_RDCRCR*)0xF00123A0u)




#define DMA_RDCRCR029 (DMA_CH29_RDCRCR)


#define DMA_CH29_SADR (*(volatile Ifx_DMA_CH_SADR*)0xF00123A8u)




#define DMA_SADR029 (DMA_CH29_SADR)


#define DMA_CH29_SDCRCR (*(volatile Ifx_DMA_CH_SDCRCR*)0xF00123A4u)




#define DMA_SDCRCR029 (DMA_CH29_SDCRCR)


#define DMA_CH29_SHADR (*(volatile Ifx_DMA_CH_SHADR*)0xF00123B8u)




#define DMA_SHADR029 (DMA_CH29_SHADR)


#define DMA_CH2_ADICR (*(volatile Ifx_DMA_CH_ADICR*)0xF0012050u)




#define DMA_ADICR002 (DMA_CH2_ADICR)


#define DMA_CH2_CHCFGR (*(volatile Ifx_DMA_CH_CHCFGR*)0xF0012054u)




#define DMA_CHCFGR002 (DMA_CH2_CHCFGR)


#define DMA_CH2_CHCSR (*(volatile Ifx_DMA_CH_CHCSR*)0xF001205Cu)




#define DMA_CHCSR002 (DMA_CH2_CHCSR)


#define DMA_CH2_DADR (*(volatile Ifx_DMA_CH_DADR*)0xF001204Cu)




#define DMA_DADR002 (DMA_CH2_DADR)


#define DMA_CH2_RDCRCR (*(volatile Ifx_DMA_CH_RDCRCR*)0xF0012040u)




#define DMA_RDCRCR002 (DMA_CH2_RDCRCR)


#define DMA_CH2_SADR (*(volatile Ifx_DMA_CH_SADR*)0xF0012048u)




#define DMA_SADR002 (DMA_CH2_SADR)


#define DMA_CH2_SDCRCR (*(volatile Ifx_DMA_CH_SDCRCR*)0xF0012044u)




#define DMA_SDCRCR002 (DMA_CH2_SDCRCR)


#define DMA_CH2_SHADR (*(volatile Ifx_DMA_CH_SHADR*)0xF0012058u)




#define DMA_SHADR002 (DMA_CH2_SHADR)


#define DMA_CH30_ADICR (*(volatile Ifx_DMA_CH_ADICR*)0xF00123D0u)




#define DMA_ADICR030 (DMA_CH30_ADICR)


#define DMA_CH30_CHCFGR (*(volatile Ifx_DMA_CH_CHCFGR*)0xF00123D4u)




#define DMA_CHCFGR030 (DMA_CH30_CHCFGR)


#define DMA_CH30_CHCSR (*(volatile Ifx_DMA_CH_CHCSR*)0xF00123DCu)




#define DMA_CHCSR030 (DMA_CH30_CHCSR)


#define DMA_CH30_DADR (*(volatile Ifx_DMA_CH_DADR*)0xF00123CCu)




#define DMA_DADR030 (DMA_CH30_DADR)


#define DMA_CH30_RDCRCR (*(volatile Ifx_DMA_CH_RDCRCR*)0xF00123C0u)




#define DMA_RDCRCR030 (DMA_CH30_RDCRCR)


#define DMA_CH30_SADR (*(volatile Ifx_DMA_CH_SADR*)0xF00123C8u)




#define DMA_SADR030 (DMA_CH30_SADR)


#define DMA_CH30_SDCRCR (*(volatile Ifx_DMA_CH_SDCRCR*)0xF00123C4u)




#define DMA_SDCRCR030 (DMA_CH30_SDCRCR)


#define DMA_CH30_SHADR (*(volatile Ifx_DMA_CH_SHADR*)0xF00123D8u)




#define DMA_SHADR030 (DMA_CH30_SHADR)


#define DMA_CH31_ADICR (*(volatile Ifx_DMA_CH_ADICR*)0xF00123F0u)




#define DMA_ADICR031 (DMA_CH31_ADICR)


#define DMA_CH31_CHCFGR (*(volatile Ifx_DMA_CH_CHCFGR*)0xF00123F4u)




#define DMA_CHCFGR031 (DMA_CH31_CHCFGR)


#define DMA_CH31_CHCSR (*(volatile Ifx_DMA_CH_CHCSR*)0xF00123FCu)




#define DMA_CHCSR031 (DMA_CH31_CHCSR)


#define DMA_CH31_DADR (*(volatile Ifx_DMA_CH_DADR*)0xF00123ECu)




#define DMA_DADR031 (DMA_CH31_DADR)


#define DMA_CH31_RDCRCR (*(volatile Ifx_DMA_CH_RDCRCR*)0xF00123E0u)




#define DMA_RDCRCR031 (DMA_CH31_RDCRCR)


#define DMA_CH31_SADR (*(volatile Ifx_DMA_CH_SADR*)0xF00123E8u)




#define DMA_SADR031 (DMA_CH31_SADR)


#define DMA_CH31_SDCRCR (*(volatile Ifx_DMA_CH_SDCRCR*)0xF00123E4u)




#define DMA_SDCRCR031 (DMA_CH31_SDCRCR)


#define DMA_CH31_SHADR (*(volatile Ifx_DMA_CH_SHADR*)0xF00123F8u)




#define DMA_SHADR031 (DMA_CH31_SHADR)


#define DMA_CH32_ADICR (*(volatile Ifx_DMA_CH_ADICR*)0xF0012410u)




#define DMA_ADICR032 (DMA_CH32_ADICR)


#define DMA_CH32_CHCFGR (*(volatile Ifx_DMA_CH_CHCFGR*)0xF0012414u)




#define DMA_CHCFGR032 (DMA_CH32_CHCFGR)


#define DMA_CH32_CHCSR (*(volatile Ifx_DMA_CH_CHCSR*)0xF001241Cu)




#define DMA_CHCSR032 (DMA_CH32_CHCSR)


#define DMA_CH32_DADR (*(volatile Ifx_DMA_CH_DADR*)0xF001240Cu)




#define DMA_DADR032 (DMA_CH32_DADR)


#define DMA_CH32_RDCRCR (*(volatile Ifx_DMA_CH_RDCRCR*)0xF0012400u)




#define DMA_RDCRCR032 (DMA_CH32_RDCRCR)


#define DMA_CH32_SADR (*(volatile Ifx_DMA_CH_SADR*)0xF0012408u)




#define DMA_SADR032 (DMA_CH32_SADR)


#define DMA_CH32_SDCRCR (*(volatile Ifx_DMA_CH_SDCRCR*)0xF0012404u)




#define DMA_SDCRCR032 (DMA_CH32_SDCRCR)


#define DMA_CH32_SHADR (*(volatile Ifx_DMA_CH_SHADR*)0xF0012418u)




#define DMA_SHADR032 (DMA_CH32_SHADR)


#define DMA_CH33_ADICR (*(volatile Ifx_DMA_CH_ADICR*)0xF0012430u)




#define DMA_ADICR033 (DMA_CH33_ADICR)


#define DMA_CH33_CHCFGR (*(volatile Ifx_DMA_CH_CHCFGR*)0xF0012434u)




#define DMA_CHCFGR033 (DMA_CH33_CHCFGR)


#define DMA_CH33_CHCSR (*(volatile Ifx_DMA_CH_CHCSR*)0xF001243Cu)




#define DMA_CHCSR033 (DMA_CH33_CHCSR)


#define DMA_CH33_DADR (*(volatile Ifx_DMA_CH_DADR*)0xF001242Cu)




#define DMA_DADR033 (DMA_CH33_DADR)


#define DMA_CH33_RDCRCR (*(volatile Ifx_DMA_CH_RDCRCR*)0xF0012420u)




#define DMA_RDCRCR033 (DMA_CH33_RDCRCR)


#define DMA_CH33_SADR (*(volatile Ifx_DMA_CH_SADR*)0xF0012428u)




#define DMA_SADR033 (DMA_CH33_SADR)


#define DMA_CH33_SDCRCR (*(volatile Ifx_DMA_CH_SDCRCR*)0xF0012424u)




#define DMA_SDCRCR033 (DMA_CH33_SDCRCR)


#define DMA_CH33_SHADR (*(volatile Ifx_DMA_CH_SHADR*)0xF0012438u)




#define DMA_SHADR033 (DMA_CH33_SHADR)


#define DMA_CH34_ADICR (*(volatile Ifx_DMA_CH_ADICR*)0xF0012450u)




#define DMA_ADICR034 (DMA_CH34_ADICR)


#define DMA_CH34_CHCFGR (*(volatile Ifx_DMA_CH_CHCFGR*)0xF0012454u)




#define DMA_CHCFGR034 (DMA_CH34_CHCFGR)


#define DMA_CH34_CHCSR (*(volatile Ifx_DMA_CH_CHCSR*)0xF001245Cu)




#define DMA_CHCSR034 (DMA_CH34_CHCSR)


#define DMA_CH34_DADR (*(volatile Ifx_DMA_CH_DADR*)0xF001244Cu)




#define DMA_DADR034 (DMA_CH34_DADR)


#define DMA_CH34_RDCRCR (*(volatile Ifx_DMA_CH_RDCRCR*)0xF0012440u)




#define DMA_RDCRCR034 (DMA_CH34_RDCRCR)


#define DMA_CH34_SADR (*(volatile Ifx_DMA_CH_SADR*)0xF0012448u)




#define DMA_SADR034 (DMA_CH34_SADR)


#define DMA_CH34_SDCRCR (*(volatile Ifx_DMA_CH_SDCRCR*)0xF0012444u)




#define DMA_SDCRCR034 (DMA_CH34_SDCRCR)


#define DMA_CH34_SHADR (*(volatile Ifx_DMA_CH_SHADR*)0xF0012458u)




#define DMA_SHADR034 (DMA_CH34_SHADR)


#define DMA_CH35_ADICR (*(volatile Ifx_DMA_CH_ADICR*)0xF0012470u)




#define DMA_ADICR035 (DMA_CH35_ADICR)


#define DMA_CH35_CHCFGR (*(volatile Ifx_DMA_CH_CHCFGR*)0xF0012474u)




#define DMA_CHCFGR035 (DMA_CH35_CHCFGR)


#define DMA_CH35_CHCSR (*(volatile Ifx_DMA_CH_CHCSR*)0xF001247Cu)




#define DMA_CHCSR035 (DMA_CH35_CHCSR)


#define DMA_CH35_DADR (*(volatile Ifx_DMA_CH_DADR*)0xF001246Cu)




#define DMA_DADR035 (DMA_CH35_DADR)


#define DMA_CH35_RDCRCR (*(volatile Ifx_DMA_CH_RDCRCR*)0xF0012460u)




#define DMA_RDCRCR035 (DMA_CH35_RDCRCR)


#define DMA_CH35_SADR (*(volatile Ifx_DMA_CH_SADR*)0xF0012468u)




#define DMA_SADR035 (DMA_CH35_SADR)


#define DMA_CH35_SDCRCR (*(volatile Ifx_DMA_CH_SDCRCR*)0xF0012464u)




#define DMA_SDCRCR035 (DMA_CH35_SDCRCR)


#define DMA_CH35_SHADR (*(volatile Ifx_DMA_CH_SHADR*)0xF0012478u)




#define DMA_SHADR035 (DMA_CH35_SHADR)


#define DMA_CH36_ADICR (*(volatile Ifx_DMA_CH_ADICR*)0xF0012490u)




#define DMA_ADICR036 (DMA_CH36_ADICR)


#define DMA_CH36_CHCFGR (*(volatile Ifx_DMA_CH_CHCFGR*)0xF0012494u)




#define DMA_CHCFGR036 (DMA_CH36_CHCFGR)


#define DMA_CH36_CHCSR (*(volatile Ifx_DMA_CH_CHCSR*)0xF001249Cu)




#define DMA_CHCSR036 (DMA_CH36_CHCSR)


#define DMA_CH36_DADR (*(volatile Ifx_DMA_CH_DADR*)0xF001248Cu)




#define DMA_DADR036 (DMA_CH36_DADR)


#define DMA_CH36_RDCRCR (*(volatile Ifx_DMA_CH_RDCRCR*)0xF0012480u)




#define DMA_RDCRCR036 (DMA_CH36_RDCRCR)


#define DMA_CH36_SADR (*(volatile Ifx_DMA_CH_SADR*)0xF0012488u)




#define DMA_SADR036 (DMA_CH36_SADR)


#define DMA_CH36_SDCRCR (*(volatile Ifx_DMA_CH_SDCRCR*)0xF0012484u)




#define DMA_SDCRCR036 (DMA_CH36_SDCRCR)


#define DMA_CH36_SHADR (*(volatile Ifx_DMA_CH_SHADR*)0xF0012498u)




#define DMA_SHADR036 (DMA_CH36_SHADR)


#define DMA_CH37_ADICR (*(volatile Ifx_DMA_CH_ADICR*)0xF00124B0u)




#define DMA_ADICR037 (DMA_CH37_ADICR)


#define DMA_CH37_CHCFGR (*(volatile Ifx_DMA_CH_CHCFGR*)0xF00124B4u)




#define DMA_CHCFGR037 (DMA_CH37_CHCFGR)


#define DMA_CH37_CHCSR (*(volatile Ifx_DMA_CH_CHCSR*)0xF00124BCu)




#define DMA_CHCSR037 (DMA_CH37_CHCSR)


#define DMA_CH37_DADR (*(volatile Ifx_DMA_CH_DADR*)0xF00124ACu)




#define DMA_DADR037 (DMA_CH37_DADR)


#define DMA_CH37_RDCRCR (*(volatile Ifx_DMA_CH_RDCRCR*)0xF00124A0u)




#define DMA_RDCRCR037 (DMA_CH37_RDCRCR)


#define DMA_CH37_SADR (*(volatile Ifx_DMA_CH_SADR*)0xF00124A8u)




#define DMA_SADR037 (DMA_CH37_SADR)


#define DMA_CH37_SDCRCR (*(volatile Ifx_DMA_CH_SDCRCR*)0xF00124A4u)




#define DMA_SDCRCR037 (DMA_CH37_SDCRCR)


#define DMA_CH37_SHADR (*(volatile Ifx_DMA_CH_SHADR*)0xF00124B8u)




#define DMA_SHADR037 (DMA_CH37_SHADR)


#define DMA_CH38_ADICR (*(volatile Ifx_DMA_CH_ADICR*)0xF00124D0u)




#define DMA_ADICR038 (DMA_CH38_ADICR)


#define DMA_CH38_CHCFGR (*(volatile Ifx_DMA_CH_CHCFGR*)0xF00124D4u)




#define DMA_CHCFGR038 (DMA_CH38_CHCFGR)


#define DMA_CH38_CHCSR (*(volatile Ifx_DMA_CH_CHCSR*)0xF00124DCu)




#define DMA_CHCSR038 (DMA_CH38_CHCSR)


#define DMA_CH38_DADR (*(volatile Ifx_DMA_CH_DADR*)0xF00124CCu)




#define DMA_DADR038 (DMA_CH38_DADR)


#define DMA_CH38_RDCRCR (*(volatile Ifx_DMA_CH_RDCRCR*)0xF00124C0u)




#define DMA_RDCRCR038 (DMA_CH38_RDCRCR)


#define DMA_CH38_SADR (*(volatile Ifx_DMA_CH_SADR*)0xF00124C8u)




#define DMA_SADR038 (DMA_CH38_SADR)


#define DMA_CH38_SDCRCR (*(volatile Ifx_DMA_CH_SDCRCR*)0xF00124C4u)




#define DMA_SDCRCR038 (DMA_CH38_SDCRCR)


#define DMA_CH38_SHADR (*(volatile Ifx_DMA_CH_SHADR*)0xF00124D8u)




#define DMA_SHADR038 (DMA_CH38_SHADR)


#define DMA_CH39_ADICR (*(volatile Ifx_DMA_CH_ADICR*)0xF00124F0u)




#define DMA_ADICR039 (DMA_CH39_ADICR)


#define DMA_CH39_CHCFGR (*(volatile Ifx_DMA_CH_CHCFGR*)0xF00124F4u)




#define DMA_CHCFGR039 (DMA_CH39_CHCFGR)


#define DMA_CH39_CHCSR (*(volatile Ifx_DMA_CH_CHCSR*)0xF00124FCu)




#define DMA_CHCSR039 (DMA_CH39_CHCSR)


#define DMA_CH39_DADR (*(volatile Ifx_DMA_CH_DADR*)0xF00124ECu)




#define DMA_DADR039 (DMA_CH39_DADR)


#define DMA_CH39_RDCRCR (*(volatile Ifx_DMA_CH_RDCRCR*)0xF00124E0u)




#define DMA_RDCRCR039 (DMA_CH39_RDCRCR)


#define DMA_CH39_SADR (*(volatile Ifx_DMA_CH_SADR*)0xF00124E8u)




#define DMA_SADR039 (DMA_CH39_SADR)


#define DMA_CH39_SDCRCR (*(volatile Ifx_DMA_CH_SDCRCR*)0xF00124E4u)




#define DMA_SDCRCR039 (DMA_CH39_SDCRCR)


#define DMA_CH39_SHADR (*(volatile Ifx_DMA_CH_SHADR*)0xF00124F8u)




#define DMA_SHADR039 (DMA_CH39_SHADR)


#define DMA_CH3_ADICR (*(volatile Ifx_DMA_CH_ADICR*)0xF0012070u)




#define DMA_ADICR003 (DMA_CH3_ADICR)


#define DMA_CH3_CHCFGR (*(volatile Ifx_DMA_CH_CHCFGR*)0xF0012074u)




#define DMA_CHCFGR003 (DMA_CH3_CHCFGR)


#define DMA_CH3_CHCSR (*(volatile Ifx_DMA_CH_CHCSR*)0xF001207Cu)




#define DMA_CHCSR003 (DMA_CH3_CHCSR)


#define DMA_CH3_DADR (*(volatile Ifx_DMA_CH_DADR*)0xF001206Cu)




#define DMA_DADR003 (DMA_CH3_DADR)


#define DMA_CH3_RDCRCR (*(volatile Ifx_DMA_CH_RDCRCR*)0xF0012060u)




#define DMA_RDCRCR003 (DMA_CH3_RDCRCR)


#define DMA_CH3_SADR (*(volatile Ifx_DMA_CH_SADR*)0xF0012068u)




#define DMA_SADR003 (DMA_CH3_SADR)


#define DMA_CH3_SDCRCR (*(volatile Ifx_DMA_CH_SDCRCR*)0xF0012064u)




#define DMA_SDCRCR003 (DMA_CH3_SDCRCR)


#define DMA_CH3_SHADR (*(volatile Ifx_DMA_CH_SHADR*)0xF0012078u)




#define DMA_SHADR003 (DMA_CH3_SHADR)


#define DMA_CH40_ADICR (*(volatile Ifx_DMA_CH_ADICR*)0xF0012510u)




#define DMA_ADICR040 (DMA_CH40_ADICR)


#define DMA_CH40_CHCFGR (*(volatile Ifx_DMA_CH_CHCFGR*)0xF0012514u)




#define DMA_CHCFGR040 (DMA_CH40_CHCFGR)


#define DMA_CH40_CHCSR (*(volatile Ifx_DMA_CH_CHCSR*)0xF001251Cu)




#define DMA_CHCSR040 (DMA_CH40_CHCSR)


#define DMA_CH40_DADR (*(volatile Ifx_DMA_CH_DADR*)0xF001250Cu)




#define DMA_DADR040 (DMA_CH40_DADR)


#define DMA_CH40_RDCRCR (*(volatile Ifx_DMA_CH_RDCRCR*)0xF0012500u)




#define DMA_RDCRCR040 (DMA_CH40_RDCRCR)


#define DMA_CH40_SADR (*(volatile Ifx_DMA_CH_SADR*)0xF0012508u)




#define DMA_SADR040 (DMA_CH40_SADR)


#define DMA_CH40_SDCRCR (*(volatile Ifx_DMA_CH_SDCRCR*)0xF0012504u)




#define DMA_SDCRCR040 (DMA_CH40_SDCRCR)


#define DMA_CH40_SHADR (*(volatile Ifx_DMA_CH_SHADR*)0xF0012518u)




#define DMA_SHADR040 (DMA_CH40_SHADR)


#define DMA_CH41_ADICR (*(volatile Ifx_DMA_CH_ADICR*)0xF0012530u)




#define DMA_ADICR041 (DMA_CH41_ADICR)


#define DMA_CH41_CHCFGR (*(volatile Ifx_DMA_CH_CHCFGR*)0xF0012534u)




#define DMA_CHCFGR041 (DMA_CH41_CHCFGR)


#define DMA_CH41_CHCSR (*(volatile Ifx_DMA_CH_CHCSR*)0xF001253Cu)




#define DMA_CHCSR041 (DMA_CH41_CHCSR)


#define DMA_CH41_DADR (*(volatile Ifx_DMA_CH_DADR*)0xF001252Cu)




#define DMA_DADR041 (DMA_CH41_DADR)


#define DMA_CH41_RDCRCR (*(volatile Ifx_DMA_CH_RDCRCR*)0xF0012520u)




#define DMA_RDCRCR041 (DMA_CH41_RDCRCR)


#define DMA_CH41_SADR (*(volatile Ifx_DMA_CH_SADR*)0xF0012528u)




#define DMA_SADR041 (DMA_CH41_SADR)


#define DMA_CH41_SDCRCR (*(volatile Ifx_DMA_CH_SDCRCR*)0xF0012524u)




#define DMA_SDCRCR041 (DMA_CH41_SDCRCR)


#define DMA_CH41_SHADR (*(volatile Ifx_DMA_CH_SHADR*)0xF0012538u)




#define DMA_SHADR041 (DMA_CH41_SHADR)


#define DMA_CH42_ADICR (*(volatile Ifx_DMA_CH_ADICR*)0xF0012550u)




#define DMA_ADICR042 (DMA_CH42_ADICR)


#define DMA_CH42_CHCFGR (*(volatile Ifx_DMA_CH_CHCFGR*)0xF0012554u)




#define DMA_CHCFGR042 (DMA_CH42_CHCFGR)


#define DMA_CH42_CHCSR (*(volatile Ifx_DMA_CH_CHCSR*)0xF001255Cu)




#define DMA_CHCSR042 (DMA_CH42_CHCSR)


#define DMA_CH42_DADR (*(volatile Ifx_DMA_CH_DADR*)0xF001254Cu)




#define DMA_DADR042 (DMA_CH42_DADR)


#define DMA_CH42_RDCRCR (*(volatile Ifx_DMA_CH_RDCRCR*)0xF0012540u)




#define DMA_RDCRCR042 (DMA_CH42_RDCRCR)


#define DMA_CH42_SADR (*(volatile Ifx_DMA_CH_SADR*)0xF0012548u)




#define DMA_SADR042 (DMA_CH42_SADR)


#define DMA_CH42_SDCRCR (*(volatile Ifx_DMA_CH_SDCRCR*)0xF0012544u)




#define DMA_SDCRCR042 (DMA_CH42_SDCRCR)


#define DMA_CH42_SHADR (*(volatile Ifx_DMA_CH_SHADR*)0xF0012558u)




#define DMA_SHADR042 (DMA_CH42_SHADR)


#define DMA_CH43_ADICR (*(volatile Ifx_DMA_CH_ADICR*)0xF0012570u)




#define DMA_ADICR043 (DMA_CH43_ADICR)


#define DMA_CH43_CHCFGR (*(volatile Ifx_DMA_CH_CHCFGR*)0xF0012574u)




#define DMA_CHCFGR043 (DMA_CH43_CHCFGR)


#define DMA_CH43_CHCSR (*(volatile Ifx_DMA_CH_CHCSR*)0xF001257Cu)




#define DMA_CHCSR043 (DMA_CH43_CHCSR)


#define DMA_CH43_DADR (*(volatile Ifx_DMA_CH_DADR*)0xF001256Cu)




#define DMA_DADR043 (DMA_CH43_DADR)


#define DMA_CH43_RDCRCR (*(volatile Ifx_DMA_CH_RDCRCR*)0xF0012560u)




#define DMA_RDCRCR043 (DMA_CH43_RDCRCR)


#define DMA_CH43_SADR (*(volatile Ifx_DMA_CH_SADR*)0xF0012568u)




#define DMA_SADR043 (DMA_CH43_SADR)


#define DMA_CH43_SDCRCR (*(volatile Ifx_DMA_CH_SDCRCR*)0xF0012564u)




#define DMA_SDCRCR043 (DMA_CH43_SDCRCR)


#define DMA_CH43_SHADR (*(volatile Ifx_DMA_CH_SHADR*)0xF0012578u)




#define DMA_SHADR043 (DMA_CH43_SHADR)


#define DMA_CH44_ADICR (*(volatile Ifx_DMA_CH_ADICR*)0xF0012590u)




#define DMA_ADICR044 (DMA_CH44_ADICR)


#define DMA_CH44_CHCFGR (*(volatile Ifx_DMA_CH_CHCFGR*)0xF0012594u)




#define DMA_CHCFGR044 (DMA_CH44_CHCFGR)


#define DMA_CH44_CHCSR (*(volatile Ifx_DMA_CH_CHCSR*)0xF001259Cu)




#define DMA_CHCSR044 (DMA_CH44_CHCSR)


#define DMA_CH44_DADR (*(volatile Ifx_DMA_CH_DADR*)0xF001258Cu)




#define DMA_DADR044 (DMA_CH44_DADR)


#define DMA_CH44_RDCRCR (*(volatile Ifx_DMA_CH_RDCRCR*)0xF0012580u)




#define DMA_RDCRCR044 (DMA_CH44_RDCRCR)


#define DMA_CH44_SADR (*(volatile Ifx_DMA_CH_SADR*)0xF0012588u)




#define DMA_SADR044 (DMA_CH44_SADR)


#define DMA_CH44_SDCRCR (*(volatile Ifx_DMA_CH_SDCRCR*)0xF0012584u)




#define DMA_SDCRCR044 (DMA_CH44_SDCRCR)


#define DMA_CH44_SHADR (*(volatile Ifx_DMA_CH_SHADR*)0xF0012598u)




#define DMA_SHADR044 (DMA_CH44_SHADR)


#define DMA_CH45_ADICR (*(volatile Ifx_DMA_CH_ADICR*)0xF00125B0u)




#define DMA_ADICR045 (DMA_CH45_ADICR)


#define DMA_CH45_CHCFGR (*(volatile Ifx_DMA_CH_CHCFGR*)0xF00125B4u)




#define DMA_CHCFGR045 (DMA_CH45_CHCFGR)


#define DMA_CH45_CHCSR (*(volatile Ifx_DMA_CH_CHCSR*)0xF00125BCu)




#define DMA_CHCSR045 (DMA_CH45_CHCSR)


#define DMA_CH45_DADR (*(volatile Ifx_DMA_CH_DADR*)0xF00125ACu)




#define DMA_DADR045 (DMA_CH45_DADR)


#define DMA_CH45_RDCRCR (*(volatile Ifx_DMA_CH_RDCRCR*)0xF00125A0u)




#define DMA_RDCRCR045 (DMA_CH45_RDCRCR)


#define DMA_CH45_SADR (*(volatile Ifx_DMA_CH_SADR*)0xF00125A8u)




#define DMA_SADR045 (DMA_CH45_SADR)


#define DMA_CH45_SDCRCR (*(volatile Ifx_DMA_CH_SDCRCR*)0xF00125A4u)




#define DMA_SDCRCR045 (DMA_CH45_SDCRCR)


#define DMA_CH45_SHADR (*(volatile Ifx_DMA_CH_SHADR*)0xF00125B8u)




#define DMA_SHADR045 (DMA_CH45_SHADR)


#define DMA_CH46_ADICR (*(volatile Ifx_DMA_CH_ADICR*)0xF00125D0u)




#define DMA_ADICR046 (DMA_CH46_ADICR)


#define DMA_CH46_CHCFGR (*(volatile Ifx_DMA_CH_CHCFGR*)0xF00125D4u)




#define DMA_CHCFGR046 (DMA_CH46_CHCFGR)


#define DMA_CH46_CHCSR (*(volatile Ifx_DMA_CH_CHCSR*)0xF00125DCu)




#define DMA_CHCSR046 (DMA_CH46_CHCSR)


#define DMA_CH46_DADR (*(volatile Ifx_DMA_CH_DADR*)0xF00125CCu)




#define DMA_DADR046 (DMA_CH46_DADR)


#define DMA_CH46_RDCRCR (*(volatile Ifx_DMA_CH_RDCRCR*)0xF00125C0u)




#define DMA_RDCRCR046 (DMA_CH46_RDCRCR)


#define DMA_CH46_SADR (*(volatile Ifx_DMA_CH_SADR*)0xF00125C8u)




#define DMA_SADR046 (DMA_CH46_SADR)


#define DMA_CH46_SDCRCR (*(volatile Ifx_DMA_CH_SDCRCR*)0xF00125C4u)




#define DMA_SDCRCR046 (DMA_CH46_SDCRCR)


#define DMA_CH46_SHADR (*(volatile Ifx_DMA_CH_SHADR*)0xF00125D8u)




#define DMA_SHADR046 (DMA_CH46_SHADR)


#define DMA_CH47_ADICR (*(volatile Ifx_DMA_CH_ADICR*)0xF00125F0u)




#define DMA_ADICR047 (DMA_CH47_ADICR)


#define DMA_CH47_CHCFGR (*(volatile Ifx_DMA_CH_CHCFGR*)0xF00125F4u)




#define DMA_CHCFGR047 (DMA_CH47_CHCFGR)


#define DMA_CH47_CHCSR (*(volatile Ifx_DMA_CH_CHCSR*)0xF00125FCu)




#define DMA_CHCSR047 (DMA_CH47_CHCSR)


#define DMA_CH47_DADR (*(volatile Ifx_DMA_CH_DADR*)0xF00125ECu)




#define DMA_DADR047 (DMA_CH47_DADR)


#define DMA_CH47_RDCRCR (*(volatile Ifx_DMA_CH_RDCRCR*)0xF00125E0u)




#define DMA_RDCRCR047 (DMA_CH47_RDCRCR)


#define DMA_CH47_SADR (*(volatile Ifx_DMA_CH_SADR*)0xF00125E8u)




#define DMA_SADR047 (DMA_CH47_SADR)


#define DMA_CH47_SDCRCR (*(volatile Ifx_DMA_CH_SDCRCR*)0xF00125E4u)




#define DMA_SDCRCR047 (DMA_CH47_SDCRCR)


#define DMA_CH47_SHADR (*(volatile Ifx_DMA_CH_SHADR*)0xF00125F8u)




#define DMA_SHADR047 (DMA_CH47_SHADR)


#define DMA_CH48_ADICR (*(volatile Ifx_DMA_CH_ADICR*)0xF0012610u)




#define DMA_ADICR048 (DMA_CH48_ADICR)


#define DMA_CH48_CHCFGR (*(volatile Ifx_DMA_CH_CHCFGR*)0xF0012614u)




#define DMA_CHCFGR048 (DMA_CH48_CHCFGR)


#define DMA_CH48_CHCSR (*(volatile Ifx_DMA_CH_CHCSR*)0xF001261Cu)




#define DMA_CHCSR048 (DMA_CH48_CHCSR)


#define DMA_CH48_DADR (*(volatile Ifx_DMA_CH_DADR*)0xF001260Cu)




#define DMA_DADR048 (DMA_CH48_DADR)


#define DMA_CH48_RDCRCR (*(volatile Ifx_DMA_CH_RDCRCR*)0xF0012600u)




#define DMA_RDCRCR048 (DMA_CH48_RDCRCR)


#define DMA_CH48_SADR (*(volatile Ifx_DMA_CH_SADR*)0xF0012608u)




#define DMA_SADR048 (DMA_CH48_SADR)


#define DMA_CH48_SDCRCR (*(volatile Ifx_DMA_CH_SDCRCR*)0xF0012604u)




#define DMA_SDCRCR048 (DMA_CH48_SDCRCR)


#define DMA_CH48_SHADR (*(volatile Ifx_DMA_CH_SHADR*)0xF0012618u)




#define DMA_SHADR048 (DMA_CH48_SHADR)


#define DMA_CH49_ADICR (*(volatile Ifx_DMA_CH_ADICR*)0xF0012630u)




#define DMA_ADICR049 (DMA_CH49_ADICR)


#define DMA_CH49_CHCFGR (*(volatile Ifx_DMA_CH_CHCFGR*)0xF0012634u)




#define DMA_CHCFGR049 (DMA_CH49_CHCFGR)


#define DMA_CH49_CHCSR (*(volatile Ifx_DMA_CH_CHCSR*)0xF001263Cu)




#define DMA_CHCSR049 (DMA_CH49_CHCSR)


#define DMA_CH49_DADR (*(volatile Ifx_DMA_CH_DADR*)0xF001262Cu)




#define DMA_DADR049 (DMA_CH49_DADR)


#define DMA_CH49_RDCRCR (*(volatile Ifx_DMA_CH_RDCRCR*)0xF0012620u)




#define DMA_RDCRCR049 (DMA_CH49_RDCRCR)


#define DMA_CH49_SADR (*(volatile Ifx_DMA_CH_SADR*)0xF0012628u)




#define DMA_SADR049 (DMA_CH49_SADR)


#define DMA_CH49_SDCRCR (*(volatile Ifx_DMA_CH_SDCRCR*)0xF0012624u)




#define DMA_SDCRCR049 (DMA_CH49_SDCRCR)


#define DMA_CH49_SHADR (*(volatile Ifx_DMA_CH_SHADR*)0xF0012638u)




#define DMA_SHADR049 (DMA_CH49_SHADR)


#define DMA_CH4_ADICR (*(volatile Ifx_DMA_CH_ADICR*)0xF0012090u)




#define DMA_ADICR004 (DMA_CH4_ADICR)


#define DMA_CH4_CHCFGR (*(volatile Ifx_DMA_CH_CHCFGR*)0xF0012094u)




#define DMA_CHCFGR004 (DMA_CH4_CHCFGR)


#define DMA_CH4_CHCSR (*(volatile Ifx_DMA_CH_CHCSR*)0xF001209Cu)




#define DMA_CHCSR004 (DMA_CH4_CHCSR)


#define DMA_CH4_DADR (*(volatile Ifx_DMA_CH_DADR*)0xF001208Cu)




#define DMA_DADR004 (DMA_CH4_DADR)


#define DMA_CH4_RDCRCR (*(volatile Ifx_DMA_CH_RDCRCR*)0xF0012080u)




#define DMA_RDCRCR004 (DMA_CH4_RDCRCR)


#define DMA_CH4_SADR (*(volatile Ifx_DMA_CH_SADR*)0xF0012088u)




#define DMA_SADR004 (DMA_CH4_SADR)


#define DMA_CH4_SDCRCR (*(volatile Ifx_DMA_CH_SDCRCR*)0xF0012084u)




#define DMA_SDCRCR004 (DMA_CH4_SDCRCR)


#define DMA_CH4_SHADR (*(volatile Ifx_DMA_CH_SHADR*)0xF0012098u)




#define DMA_SHADR004 (DMA_CH4_SHADR)


#define DMA_CH50_ADICR (*(volatile Ifx_DMA_CH_ADICR*)0xF0012650u)




#define DMA_ADICR050 (DMA_CH50_ADICR)


#define DMA_CH50_CHCFGR (*(volatile Ifx_DMA_CH_CHCFGR*)0xF0012654u)




#define DMA_CHCFGR050 (DMA_CH50_CHCFGR)


#define DMA_CH50_CHCSR (*(volatile Ifx_DMA_CH_CHCSR*)0xF001265Cu)




#define DMA_CHCSR050 (DMA_CH50_CHCSR)


#define DMA_CH50_DADR (*(volatile Ifx_DMA_CH_DADR*)0xF001264Cu)




#define DMA_DADR050 (DMA_CH50_DADR)


#define DMA_CH50_RDCRCR (*(volatile Ifx_DMA_CH_RDCRCR*)0xF0012640u)




#define DMA_RDCRCR050 (DMA_CH50_RDCRCR)


#define DMA_CH50_SADR (*(volatile Ifx_DMA_CH_SADR*)0xF0012648u)




#define DMA_SADR050 (DMA_CH50_SADR)


#define DMA_CH50_SDCRCR (*(volatile Ifx_DMA_CH_SDCRCR*)0xF0012644u)




#define DMA_SDCRCR050 (DMA_CH50_SDCRCR)


#define DMA_CH50_SHADR (*(volatile Ifx_DMA_CH_SHADR*)0xF0012658u)




#define DMA_SHADR050 (DMA_CH50_SHADR)


#define DMA_CH51_ADICR (*(volatile Ifx_DMA_CH_ADICR*)0xF0012670u)




#define DMA_ADICR051 (DMA_CH51_ADICR)


#define DMA_CH51_CHCFGR (*(volatile Ifx_DMA_CH_CHCFGR*)0xF0012674u)




#define DMA_CHCFGR051 (DMA_CH51_CHCFGR)


#define DMA_CH51_CHCSR (*(volatile Ifx_DMA_CH_CHCSR*)0xF001267Cu)




#define DMA_CHCSR051 (DMA_CH51_CHCSR)


#define DMA_CH51_DADR (*(volatile Ifx_DMA_CH_DADR*)0xF001266Cu)




#define DMA_DADR051 (DMA_CH51_DADR)


#define DMA_CH51_RDCRCR (*(volatile Ifx_DMA_CH_RDCRCR*)0xF0012660u)




#define DMA_RDCRCR051 (DMA_CH51_RDCRCR)


#define DMA_CH51_SADR (*(volatile Ifx_DMA_CH_SADR*)0xF0012668u)




#define DMA_SADR051 (DMA_CH51_SADR)


#define DMA_CH51_SDCRCR (*(volatile Ifx_DMA_CH_SDCRCR*)0xF0012664u)




#define DMA_SDCRCR051 (DMA_CH51_SDCRCR)


#define DMA_CH51_SHADR (*(volatile Ifx_DMA_CH_SHADR*)0xF0012678u)




#define DMA_SHADR051 (DMA_CH51_SHADR)


#define DMA_CH52_ADICR (*(volatile Ifx_DMA_CH_ADICR*)0xF0012690u)




#define DMA_ADICR052 (DMA_CH52_ADICR)


#define DMA_CH52_CHCFGR (*(volatile Ifx_DMA_CH_CHCFGR*)0xF0012694u)




#define DMA_CHCFGR052 (DMA_CH52_CHCFGR)


#define DMA_CH52_CHCSR (*(volatile Ifx_DMA_CH_CHCSR*)0xF001269Cu)




#define DMA_CHCSR052 (DMA_CH52_CHCSR)


#define DMA_CH52_DADR (*(volatile Ifx_DMA_CH_DADR*)0xF001268Cu)




#define DMA_DADR052 (DMA_CH52_DADR)


#define DMA_CH52_RDCRCR (*(volatile Ifx_DMA_CH_RDCRCR*)0xF0012680u)




#define DMA_RDCRCR052 (DMA_CH52_RDCRCR)


#define DMA_CH52_SADR (*(volatile Ifx_DMA_CH_SADR*)0xF0012688u)




#define DMA_SADR052 (DMA_CH52_SADR)


#define DMA_CH52_SDCRCR (*(volatile Ifx_DMA_CH_SDCRCR*)0xF0012684u)




#define DMA_SDCRCR052 (DMA_CH52_SDCRCR)


#define DMA_CH52_SHADR (*(volatile Ifx_DMA_CH_SHADR*)0xF0012698u)




#define DMA_SHADR052 (DMA_CH52_SHADR)


#define DMA_CH53_ADICR (*(volatile Ifx_DMA_CH_ADICR*)0xF00126B0u)




#define DMA_ADICR053 (DMA_CH53_ADICR)


#define DMA_CH53_CHCFGR (*(volatile Ifx_DMA_CH_CHCFGR*)0xF00126B4u)




#define DMA_CHCFGR053 (DMA_CH53_CHCFGR)


#define DMA_CH53_CHCSR (*(volatile Ifx_DMA_CH_CHCSR*)0xF00126BCu)




#define DMA_CHCSR053 (DMA_CH53_CHCSR)


#define DMA_CH53_DADR (*(volatile Ifx_DMA_CH_DADR*)0xF00126ACu)




#define DMA_DADR053 (DMA_CH53_DADR)


#define DMA_CH53_RDCRCR (*(volatile Ifx_DMA_CH_RDCRCR*)0xF00126A0u)




#define DMA_RDCRCR053 (DMA_CH53_RDCRCR)


#define DMA_CH53_SADR (*(volatile Ifx_DMA_CH_SADR*)0xF00126A8u)




#define DMA_SADR053 (DMA_CH53_SADR)


#define DMA_CH53_SDCRCR (*(volatile Ifx_DMA_CH_SDCRCR*)0xF00126A4u)




#define DMA_SDCRCR053 (DMA_CH53_SDCRCR)


#define DMA_CH53_SHADR (*(volatile Ifx_DMA_CH_SHADR*)0xF00126B8u)




#define DMA_SHADR053 (DMA_CH53_SHADR)


#define DMA_CH54_ADICR (*(volatile Ifx_DMA_CH_ADICR*)0xF00126D0u)




#define DMA_ADICR054 (DMA_CH54_ADICR)


#define DMA_CH54_CHCFGR (*(volatile Ifx_DMA_CH_CHCFGR*)0xF00126D4u)




#define DMA_CHCFGR054 (DMA_CH54_CHCFGR)


#define DMA_CH54_CHCSR (*(volatile Ifx_DMA_CH_CHCSR*)0xF00126DCu)




#define DMA_CHCSR054 (DMA_CH54_CHCSR)


#define DMA_CH54_DADR (*(volatile Ifx_DMA_CH_DADR*)0xF00126CCu)




#define DMA_DADR054 (DMA_CH54_DADR)


#define DMA_CH54_RDCRCR (*(volatile Ifx_DMA_CH_RDCRCR*)0xF00126C0u)




#define DMA_RDCRCR054 (DMA_CH54_RDCRCR)


#define DMA_CH54_SADR (*(volatile Ifx_DMA_CH_SADR*)0xF00126C8u)




#define DMA_SADR054 (DMA_CH54_SADR)


#define DMA_CH54_SDCRCR (*(volatile Ifx_DMA_CH_SDCRCR*)0xF00126C4u)




#define DMA_SDCRCR054 (DMA_CH54_SDCRCR)


#define DMA_CH54_SHADR (*(volatile Ifx_DMA_CH_SHADR*)0xF00126D8u)




#define DMA_SHADR054 (DMA_CH54_SHADR)


#define DMA_CH55_ADICR (*(volatile Ifx_DMA_CH_ADICR*)0xF00126F0u)




#define DMA_ADICR055 (DMA_CH55_ADICR)


#define DMA_CH55_CHCFGR (*(volatile Ifx_DMA_CH_CHCFGR*)0xF00126F4u)




#define DMA_CHCFGR055 (DMA_CH55_CHCFGR)


#define DMA_CH55_CHCSR (*(volatile Ifx_DMA_CH_CHCSR*)0xF00126FCu)




#define DMA_CHCSR055 (DMA_CH55_CHCSR)


#define DMA_CH55_DADR (*(volatile Ifx_DMA_CH_DADR*)0xF00126ECu)




#define DMA_DADR055 (DMA_CH55_DADR)


#define DMA_CH55_RDCRCR (*(volatile Ifx_DMA_CH_RDCRCR*)0xF00126E0u)




#define DMA_RDCRCR055 (DMA_CH55_RDCRCR)


#define DMA_CH55_SADR (*(volatile Ifx_DMA_CH_SADR*)0xF00126E8u)




#define DMA_SADR055 (DMA_CH55_SADR)


#define DMA_CH55_SDCRCR (*(volatile Ifx_DMA_CH_SDCRCR*)0xF00126E4u)




#define DMA_SDCRCR055 (DMA_CH55_SDCRCR)


#define DMA_CH55_SHADR (*(volatile Ifx_DMA_CH_SHADR*)0xF00126F8u)




#define DMA_SHADR055 (DMA_CH55_SHADR)


#define DMA_CH56_ADICR (*(volatile Ifx_DMA_CH_ADICR*)0xF0012710u)




#define DMA_ADICR056 (DMA_CH56_ADICR)


#define DMA_CH56_CHCFGR (*(volatile Ifx_DMA_CH_CHCFGR*)0xF0012714u)




#define DMA_CHCFGR056 (DMA_CH56_CHCFGR)


#define DMA_CH56_CHCSR (*(volatile Ifx_DMA_CH_CHCSR*)0xF001271Cu)




#define DMA_CHCSR056 (DMA_CH56_CHCSR)


#define DMA_CH56_DADR (*(volatile Ifx_DMA_CH_DADR*)0xF001270Cu)




#define DMA_DADR056 (DMA_CH56_DADR)


#define DMA_CH56_RDCRCR (*(volatile Ifx_DMA_CH_RDCRCR*)0xF0012700u)




#define DMA_RDCRCR056 (DMA_CH56_RDCRCR)


#define DMA_CH56_SADR (*(volatile Ifx_DMA_CH_SADR*)0xF0012708u)




#define DMA_SADR056 (DMA_CH56_SADR)


#define DMA_CH56_SDCRCR (*(volatile Ifx_DMA_CH_SDCRCR*)0xF0012704u)




#define DMA_SDCRCR056 (DMA_CH56_SDCRCR)


#define DMA_CH56_SHADR (*(volatile Ifx_DMA_CH_SHADR*)0xF0012718u)




#define DMA_SHADR056 (DMA_CH56_SHADR)


#define DMA_CH57_ADICR (*(volatile Ifx_DMA_CH_ADICR*)0xF0012730u)




#define DMA_ADICR057 (DMA_CH57_ADICR)


#define DMA_CH57_CHCFGR (*(volatile Ifx_DMA_CH_CHCFGR*)0xF0012734u)




#define DMA_CHCFGR057 (DMA_CH57_CHCFGR)


#define DMA_CH57_CHCSR (*(volatile Ifx_DMA_CH_CHCSR*)0xF001273Cu)




#define DMA_CHCSR057 (DMA_CH57_CHCSR)


#define DMA_CH57_DADR (*(volatile Ifx_DMA_CH_DADR*)0xF001272Cu)




#define DMA_DADR057 (DMA_CH57_DADR)


#define DMA_CH57_RDCRCR (*(volatile Ifx_DMA_CH_RDCRCR*)0xF0012720u)




#define DMA_RDCRCR057 (DMA_CH57_RDCRCR)


#define DMA_CH57_SADR (*(volatile Ifx_DMA_CH_SADR*)0xF0012728u)




#define DMA_SADR057 (DMA_CH57_SADR)


#define DMA_CH57_SDCRCR (*(volatile Ifx_DMA_CH_SDCRCR*)0xF0012724u)




#define DMA_SDCRCR057 (DMA_CH57_SDCRCR)


#define DMA_CH57_SHADR (*(volatile Ifx_DMA_CH_SHADR*)0xF0012738u)




#define DMA_SHADR057 (DMA_CH57_SHADR)


#define DMA_CH58_ADICR (*(volatile Ifx_DMA_CH_ADICR*)0xF0012750u)




#define DMA_ADICR058 (DMA_CH58_ADICR)


#define DMA_CH58_CHCFGR (*(volatile Ifx_DMA_CH_CHCFGR*)0xF0012754u)




#define DMA_CHCFGR058 (DMA_CH58_CHCFGR)


#define DMA_CH58_CHCSR (*(volatile Ifx_DMA_CH_CHCSR*)0xF001275Cu)




#define DMA_CHCSR058 (DMA_CH58_CHCSR)


#define DMA_CH58_DADR (*(volatile Ifx_DMA_CH_DADR*)0xF001274Cu)




#define DMA_DADR058 (DMA_CH58_DADR)


#define DMA_CH58_RDCRCR (*(volatile Ifx_DMA_CH_RDCRCR*)0xF0012740u)




#define DMA_RDCRCR058 (DMA_CH58_RDCRCR)


#define DMA_CH58_SADR (*(volatile Ifx_DMA_CH_SADR*)0xF0012748u)




#define DMA_SADR058 (DMA_CH58_SADR)


#define DMA_CH58_SDCRCR (*(volatile Ifx_DMA_CH_SDCRCR*)0xF0012744u)




#define DMA_SDCRCR058 (DMA_CH58_SDCRCR)


#define DMA_CH58_SHADR (*(volatile Ifx_DMA_CH_SHADR*)0xF0012758u)




#define DMA_SHADR058 (DMA_CH58_SHADR)


#define DMA_CH59_ADICR (*(volatile Ifx_DMA_CH_ADICR*)0xF0012770u)




#define DMA_ADICR059 (DMA_CH59_ADICR)


#define DMA_CH59_CHCFGR (*(volatile Ifx_DMA_CH_CHCFGR*)0xF0012774u)




#define DMA_CHCFGR059 (DMA_CH59_CHCFGR)


#define DMA_CH59_CHCSR (*(volatile Ifx_DMA_CH_CHCSR*)0xF001277Cu)




#define DMA_CHCSR059 (DMA_CH59_CHCSR)


#define DMA_CH59_DADR (*(volatile Ifx_DMA_CH_DADR*)0xF001276Cu)




#define DMA_DADR059 (DMA_CH59_DADR)


#define DMA_CH59_RDCRCR (*(volatile Ifx_DMA_CH_RDCRCR*)0xF0012760u)




#define DMA_RDCRCR059 (DMA_CH59_RDCRCR)


#define DMA_CH59_SADR (*(volatile Ifx_DMA_CH_SADR*)0xF0012768u)




#define DMA_SADR059 (DMA_CH59_SADR)


#define DMA_CH59_SDCRCR (*(volatile Ifx_DMA_CH_SDCRCR*)0xF0012764u)




#define DMA_SDCRCR059 (DMA_CH59_SDCRCR)


#define DMA_CH59_SHADR (*(volatile Ifx_DMA_CH_SHADR*)0xF0012778u)




#define DMA_SHADR059 (DMA_CH59_SHADR)


#define DMA_CH5_ADICR (*(volatile Ifx_DMA_CH_ADICR*)0xF00120B0u)




#define DMA_ADICR005 (DMA_CH5_ADICR)


#define DMA_CH5_CHCFGR (*(volatile Ifx_DMA_CH_CHCFGR*)0xF00120B4u)




#define DMA_CHCFGR005 (DMA_CH5_CHCFGR)


#define DMA_CH5_CHCSR (*(volatile Ifx_DMA_CH_CHCSR*)0xF00120BCu)




#define DMA_CHCSR005 (DMA_CH5_CHCSR)


#define DMA_CH5_DADR (*(volatile Ifx_DMA_CH_DADR*)0xF00120ACu)




#define DMA_DADR005 (DMA_CH5_DADR)


#define DMA_CH5_RDCRCR (*(volatile Ifx_DMA_CH_RDCRCR*)0xF00120A0u)




#define DMA_RDCRCR005 (DMA_CH5_RDCRCR)


#define DMA_CH5_SADR (*(volatile Ifx_DMA_CH_SADR*)0xF00120A8u)




#define DMA_SADR005 (DMA_CH5_SADR)


#define DMA_CH5_SDCRCR (*(volatile Ifx_DMA_CH_SDCRCR*)0xF00120A4u)




#define DMA_SDCRCR005 (DMA_CH5_SDCRCR)


#define DMA_CH5_SHADR (*(volatile Ifx_DMA_CH_SHADR*)0xF00120B8u)




#define DMA_SHADR005 (DMA_CH5_SHADR)


#define DMA_CH60_ADICR (*(volatile Ifx_DMA_CH_ADICR*)0xF0012790u)




#define DMA_ADICR060 (DMA_CH60_ADICR)


#define DMA_CH60_CHCFGR (*(volatile Ifx_DMA_CH_CHCFGR*)0xF0012794u)




#define DMA_CHCFGR060 (DMA_CH60_CHCFGR)


#define DMA_CH60_CHCSR (*(volatile Ifx_DMA_CH_CHCSR*)0xF001279Cu)




#define DMA_CHCSR060 (DMA_CH60_CHCSR)


#define DMA_CH60_DADR (*(volatile Ifx_DMA_CH_DADR*)0xF001278Cu)




#define DMA_DADR060 (DMA_CH60_DADR)


#define DMA_CH60_RDCRCR (*(volatile Ifx_DMA_CH_RDCRCR*)0xF0012780u)




#define DMA_RDCRCR060 (DMA_CH60_RDCRCR)


#define DMA_CH60_SADR (*(volatile Ifx_DMA_CH_SADR*)0xF0012788u)




#define DMA_SADR060 (DMA_CH60_SADR)


#define DMA_CH60_SDCRCR (*(volatile Ifx_DMA_CH_SDCRCR*)0xF0012784u)




#define DMA_SDCRCR060 (DMA_CH60_SDCRCR)


#define DMA_CH60_SHADR (*(volatile Ifx_DMA_CH_SHADR*)0xF0012798u)




#define DMA_SHADR060 (DMA_CH60_SHADR)


#define DMA_CH61_ADICR (*(volatile Ifx_DMA_CH_ADICR*)0xF00127B0u)




#define DMA_ADICR061 (DMA_CH61_ADICR)


#define DMA_CH61_CHCFGR (*(volatile Ifx_DMA_CH_CHCFGR*)0xF00127B4u)




#define DMA_CHCFGR061 (DMA_CH61_CHCFGR)


#define DMA_CH61_CHCSR (*(volatile Ifx_DMA_CH_CHCSR*)0xF00127BCu)




#define DMA_CHCSR061 (DMA_CH61_CHCSR)


#define DMA_CH61_DADR (*(volatile Ifx_DMA_CH_DADR*)0xF00127ACu)




#define DMA_DADR061 (DMA_CH61_DADR)


#define DMA_CH61_RDCRCR (*(volatile Ifx_DMA_CH_RDCRCR*)0xF00127A0u)




#define DMA_RDCRCR061 (DMA_CH61_RDCRCR)


#define DMA_CH61_SADR (*(volatile Ifx_DMA_CH_SADR*)0xF00127A8u)




#define DMA_SADR061 (DMA_CH61_SADR)


#define DMA_CH61_SDCRCR (*(volatile Ifx_DMA_CH_SDCRCR*)0xF00127A4u)




#define DMA_SDCRCR061 (DMA_CH61_SDCRCR)


#define DMA_CH61_SHADR (*(volatile Ifx_DMA_CH_SHADR*)0xF00127B8u)




#define DMA_SHADR061 (DMA_CH61_SHADR)


#define DMA_CH62_ADICR (*(volatile Ifx_DMA_CH_ADICR*)0xF00127D0u)




#define DMA_ADICR062 (DMA_CH62_ADICR)


#define DMA_CH62_CHCFGR (*(volatile Ifx_DMA_CH_CHCFGR*)0xF00127D4u)




#define DMA_CHCFGR062 (DMA_CH62_CHCFGR)


#define DMA_CH62_CHCSR (*(volatile Ifx_DMA_CH_CHCSR*)0xF00127DCu)




#define DMA_CHCSR062 (DMA_CH62_CHCSR)


#define DMA_CH62_DADR (*(volatile Ifx_DMA_CH_DADR*)0xF00127CCu)




#define DMA_DADR062 (DMA_CH62_DADR)


#define DMA_CH62_RDCRCR (*(volatile Ifx_DMA_CH_RDCRCR*)0xF00127C0u)




#define DMA_RDCRCR062 (DMA_CH62_RDCRCR)


#define DMA_CH62_SADR (*(volatile Ifx_DMA_CH_SADR*)0xF00127C8u)




#define DMA_SADR062 (DMA_CH62_SADR)


#define DMA_CH62_SDCRCR (*(volatile Ifx_DMA_CH_SDCRCR*)0xF00127C4u)




#define DMA_SDCRCR062 (DMA_CH62_SDCRCR)


#define DMA_CH62_SHADR (*(volatile Ifx_DMA_CH_SHADR*)0xF00127D8u)




#define DMA_SHADR062 (DMA_CH62_SHADR)


#define DMA_CH63_ADICR (*(volatile Ifx_DMA_CH_ADICR*)0xF00127F0u)




#define DMA_ADICR063 (DMA_CH63_ADICR)


#define DMA_CH63_CHCFGR (*(volatile Ifx_DMA_CH_CHCFGR*)0xF00127F4u)




#define DMA_CHCFGR063 (DMA_CH63_CHCFGR)


#define DMA_CH63_CHCSR (*(volatile Ifx_DMA_CH_CHCSR*)0xF00127FCu)




#define DMA_CHCSR063 (DMA_CH63_CHCSR)


#define DMA_CH63_DADR (*(volatile Ifx_DMA_CH_DADR*)0xF00127ECu)




#define DMA_DADR063 (DMA_CH63_DADR)


#define DMA_CH63_RDCRCR (*(volatile Ifx_DMA_CH_RDCRCR*)0xF00127E0u)




#define DMA_RDCRCR063 (DMA_CH63_RDCRCR)


#define DMA_CH63_SADR (*(volatile Ifx_DMA_CH_SADR*)0xF00127E8u)




#define DMA_SADR063 (DMA_CH63_SADR)


#define DMA_CH63_SDCRCR (*(volatile Ifx_DMA_CH_SDCRCR*)0xF00127E4u)




#define DMA_SDCRCR063 (DMA_CH63_SDCRCR)


#define DMA_CH63_SHADR (*(volatile Ifx_DMA_CH_SHADR*)0xF00127F8u)




#define DMA_SHADR063 (DMA_CH63_SHADR)


#define DMA_CH6_ADICR (*(volatile Ifx_DMA_CH_ADICR*)0xF00120D0u)




#define DMA_ADICR006 (DMA_CH6_ADICR)


#define DMA_CH6_CHCFGR (*(volatile Ifx_DMA_CH_CHCFGR*)0xF00120D4u)




#define DMA_CHCFGR006 (DMA_CH6_CHCFGR)


#define DMA_CH6_CHCSR (*(volatile Ifx_DMA_CH_CHCSR*)0xF00120DCu)




#define DMA_CHCSR006 (DMA_CH6_CHCSR)


#define DMA_CH6_DADR (*(volatile Ifx_DMA_CH_DADR*)0xF00120CCu)




#define DMA_DADR006 (DMA_CH6_DADR)


#define DMA_CH6_RDCRCR (*(volatile Ifx_DMA_CH_RDCRCR*)0xF00120C0u)




#define DMA_RDCRCR006 (DMA_CH6_RDCRCR)


#define DMA_CH6_SADR (*(volatile Ifx_DMA_CH_SADR*)0xF00120C8u)




#define DMA_SADR006 (DMA_CH6_SADR)


#define DMA_CH6_SDCRCR (*(volatile Ifx_DMA_CH_SDCRCR*)0xF00120C4u)




#define DMA_SDCRCR006 (DMA_CH6_SDCRCR)


#define DMA_CH6_SHADR (*(volatile Ifx_DMA_CH_SHADR*)0xF00120D8u)




#define DMA_SHADR006 (DMA_CH6_SHADR)


#define DMA_CH7_ADICR (*(volatile Ifx_DMA_CH_ADICR*)0xF00120F0u)




#define DMA_ADICR007 (DMA_CH7_ADICR)


#define DMA_CH7_CHCFGR (*(volatile Ifx_DMA_CH_CHCFGR*)0xF00120F4u)




#define DMA_CHCFGR007 (DMA_CH7_CHCFGR)


#define DMA_CH7_CHCSR (*(volatile Ifx_DMA_CH_CHCSR*)0xF00120FCu)




#define DMA_CHCSR007 (DMA_CH7_CHCSR)


#define DMA_CH7_DADR (*(volatile Ifx_DMA_CH_DADR*)0xF00120ECu)




#define DMA_DADR007 (DMA_CH7_DADR)


#define DMA_CH7_RDCRCR (*(volatile Ifx_DMA_CH_RDCRCR*)0xF00120E0u)




#define DMA_RDCRCR007 (DMA_CH7_RDCRCR)


#define DMA_CH7_SADR (*(volatile Ifx_DMA_CH_SADR*)0xF00120E8u)




#define DMA_SADR007 (DMA_CH7_SADR)


#define DMA_CH7_SDCRCR (*(volatile Ifx_DMA_CH_SDCRCR*)0xF00120E4u)




#define DMA_SDCRCR007 (DMA_CH7_SDCRCR)


#define DMA_CH7_SHADR (*(volatile Ifx_DMA_CH_SHADR*)0xF00120F8u)




#define DMA_SHADR007 (DMA_CH7_SHADR)


#define DMA_CH8_ADICR (*(volatile Ifx_DMA_CH_ADICR*)0xF0012110u)




#define DMA_ADICR008 (DMA_CH8_ADICR)


#define DMA_CH8_CHCFGR (*(volatile Ifx_DMA_CH_CHCFGR*)0xF0012114u)




#define DMA_CHCFGR008 (DMA_CH8_CHCFGR)


#define DMA_CH8_CHCSR (*(volatile Ifx_DMA_CH_CHCSR*)0xF001211Cu)




#define DMA_CHCSR008 (DMA_CH8_CHCSR)


#define DMA_CH8_DADR (*(volatile Ifx_DMA_CH_DADR*)0xF001210Cu)




#define DMA_DADR008 (DMA_CH8_DADR)


#define DMA_CH8_RDCRCR (*(volatile Ifx_DMA_CH_RDCRCR*)0xF0012100u)




#define DMA_RDCRCR008 (DMA_CH8_RDCRCR)


#define DMA_CH8_SADR (*(volatile Ifx_DMA_CH_SADR*)0xF0012108u)




#define DMA_SADR008 (DMA_CH8_SADR)


#define DMA_CH8_SDCRCR (*(volatile Ifx_DMA_CH_SDCRCR*)0xF0012104u)




#define DMA_SDCRCR008 (DMA_CH8_SDCRCR)


#define DMA_CH8_SHADR (*(volatile Ifx_DMA_CH_SHADR*)0xF0012118u)




#define DMA_SHADR008 (DMA_CH8_SHADR)


#define DMA_CH9_ADICR (*(volatile Ifx_DMA_CH_ADICR*)0xF0012130u)




#define DMA_ADICR009 (DMA_CH9_ADICR)


#define DMA_CH9_CHCFGR (*(volatile Ifx_DMA_CH_CHCFGR*)0xF0012134u)




#define DMA_CHCFGR009 (DMA_CH9_CHCFGR)


#define DMA_CH9_CHCSR (*(volatile Ifx_DMA_CH_CHCSR*)0xF001213Cu)




#define DMA_CHCSR009 (DMA_CH9_CHCSR)


#define DMA_CH9_DADR (*(volatile Ifx_DMA_CH_DADR*)0xF001212Cu)




#define DMA_DADR009 (DMA_CH9_DADR)


#define DMA_CH9_RDCRCR (*(volatile Ifx_DMA_CH_RDCRCR*)0xF0012120u)




#define DMA_RDCRCR009 (DMA_CH9_RDCRCR)


#define DMA_CH9_SADR (*(volatile Ifx_DMA_CH_SADR*)0xF0012128u)




#define DMA_SADR009 (DMA_CH9_SADR)


#define DMA_CH9_SDCRCR (*(volatile Ifx_DMA_CH_SDCRCR*)0xF0012124u)




#define DMA_SDCRCR009 (DMA_CH9_SDCRCR)


#define DMA_CH9_SHADR (*(volatile Ifx_DMA_CH_SHADR*)0xF0012138u)




#define DMA_SHADR009 (DMA_CH9_SHADR)


#define DMA_CLC (*(volatile Ifx_DMA_CLC*)0xF0010000u)


#define DMA_ERRINTR (*(volatile Ifx_DMA_ERRINTR*)0xF0011204u)


#define DMA_HRR0 (*(volatile Ifx_DMA_HRR*)0xF0011800u)




#define DMA_HRR000 (DMA_HRR0)


#define DMA_HRR1 (*(volatile Ifx_DMA_HRR*)0xF0011804u)




#define DMA_HRR001 (DMA_HRR1)


#define DMA_HRR10 (*(volatile Ifx_DMA_HRR*)0xF0011828u)




#define DMA_HRR010 (DMA_HRR10)


#define DMA_HRR11 (*(volatile Ifx_DMA_HRR*)0xF001182Cu)




#define DMA_HRR011 (DMA_HRR11)


#define DMA_HRR12 (*(volatile Ifx_DMA_HRR*)0xF0011830u)




#define DMA_HRR012 (DMA_HRR12)


#define DMA_HRR13 (*(volatile Ifx_DMA_HRR*)0xF0011834u)




#define DMA_HRR013 (DMA_HRR13)


#define DMA_HRR14 (*(volatile Ifx_DMA_HRR*)0xF0011838u)




#define DMA_HRR014 (DMA_HRR14)


#define DMA_HRR15 (*(volatile Ifx_DMA_HRR*)0xF001183Cu)




#define DMA_HRR015 (DMA_HRR15)


#define DMA_HRR16 (*(volatile Ifx_DMA_HRR*)0xF0011840u)




#define DMA_HRR016 (DMA_HRR16)


#define DMA_HRR17 (*(volatile Ifx_DMA_HRR*)0xF0011844u)




#define DMA_HRR017 (DMA_HRR17)


#define DMA_HRR18 (*(volatile Ifx_DMA_HRR*)0xF0011848u)




#define DMA_HRR018 (DMA_HRR18)


#define DMA_HRR19 (*(volatile Ifx_DMA_HRR*)0xF001184Cu)




#define DMA_HRR019 (DMA_HRR19)


#define DMA_HRR2 (*(volatile Ifx_DMA_HRR*)0xF0011808u)




#define DMA_HRR002 (DMA_HRR2)


#define DMA_HRR20 (*(volatile Ifx_DMA_HRR*)0xF0011850u)




#define DMA_HRR020 (DMA_HRR20)


#define DMA_HRR21 (*(volatile Ifx_DMA_HRR*)0xF0011854u)




#define DMA_HRR021 (DMA_HRR21)


#define DMA_HRR22 (*(volatile Ifx_DMA_HRR*)0xF0011858u)




#define DMA_HRR022 (DMA_HRR22)


#define DMA_HRR23 (*(volatile Ifx_DMA_HRR*)0xF001185Cu)




#define DMA_HRR023 (DMA_HRR23)


#define DMA_HRR24 (*(volatile Ifx_DMA_HRR*)0xF0011860u)




#define DMA_HRR024 (DMA_HRR24)


#define DMA_HRR25 (*(volatile Ifx_DMA_HRR*)0xF0011864u)




#define DMA_HRR025 (DMA_HRR25)


#define DMA_HRR26 (*(volatile Ifx_DMA_HRR*)0xF0011868u)




#define DMA_HRR026 (DMA_HRR26)


#define DMA_HRR27 (*(volatile Ifx_DMA_HRR*)0xF001186Cu)




#define DMA_HRR027 (DMA_HRR27)


#define DMA_HRR28 (*(volatile Ifx_DMA_HRR*)0xF0011870u)




#define DMA_HRR028 (DMA_HRR28)


#define DMA_HRR29 (*(volatile Ifx_DMA_HRR*)0xF0011874u)




#define DMA_HRR029 (DMA_HRR29)


#define DMA_HRR3 (*(volatile Ifx_DMA_HRR*)0xF001180Cu)




#define DMA_HRR003 (DMA_HRR3)


#define DMA_HRR30 (*(volatile Ifx_DMA_HRR*)0xF0011878u)




#define DMA_HRR030 (DMA_HRR30)


#define DMA_HRR31 (*(volatile Ifx_DMA_HRR*)0xF001187Cu)




#define DMA_HRR031 (DMA_HRR31)


#define DMA_HRR32 (*(volatile Ifx_DMA_HRR*)0xF0011880u)




#define DMA_HRR032 (DMA_HRR32)


#define DMA_HRR33 (*(volatile Ifx_DMA_HRR*)0xF0011884u)




#define DMA_HRR033 (DMA_HRR33)


#define DMA_HRR34 (*(volatile Ifx_DMA_HRR*)0xF0011888u)




#define DMA_HRR034 (DMA_HRR34)


#define DMA_HRR35 (*(volatile Ifx_DMA_HRR*)0xF001188Cu)




#define DMA_HRR035 (DMA_HRR35)


#define DMA_HRR36 (*(volatile Ifx_DMA_HRR*)0xF0011890u)




#define DMA_HRR036 (DMA_HRR36)


#define DMA_HRR37 (*(volatile Ifx_DMA_HRR*)0xF0011894u)




#define DMA_HRR037 (DMA_HRR37)


#define DMA_HRR38 (*(volatile Ifx_DMA_HRR*)0xF0011898u)




#define DMA_HRR038 (DMA_HRR38)


#define DMA_HRR39 (*(volatile Ifx_DMA_HRR*)0xF001189Cu)




#define DMA_HRR039 (DMA_HRR39)


#define DMA_HRR4 (*(volatile Ifx_DMA_HRR*)0xF0011810u)




#define DMA_HRR004 (DMA_HRR4)


#define DMA_HRR40 (*(volatile Ifx_DMA_HRR*)0xF00118A0u)




#define DMA_HRR040 (DMA_HRR40)


#define DMA_HRR41 (*(volatile Ifx_DMA_HRR*)0xF00118A4u)




#define DMA_HRR041 (DMA_HRR41)


#define DMA_HRR42 (*(volatile Ifx_DMA_HRR*)0xF00118A8u)




#define DMA_HRR042 (DMA_HRR42)


#define DMA_HRR43 (*(volatile Ifx_DMA_HRR*)0xF00118ACu)




#define DMA_HRR043 (DMA_HRR43)


#define DMA_HRR44 (*(volatile Ifx_DMA_HRR*)0xF00118B0u)




#define DMA_HRR044 (DMA_HRR44)


#define DMA_HRR45 (*(volatile Ifx_DMA_HRR*)0xF00118B4u)




#define DMA_HRR045 (DMA_HRR45)


#define DMA_HRR46 (*(volatile Ifx_DMA_HRR*)0xF00118B8u)




#define DMA_HRR046 (DMA_HRR46)


#define DMA_HRR47 (*(volatile Ifx_DMA_HRR*)0xF00118BCu)




#define DMA_HRR047 (DMA_HRR47)


#define DMA_HRR48 (*(volatile Ifx_DMA_HRR*)0xF00118C0u)




#define DMA_HRR048 (DMA_HRR48)


#define DMA_HRR49 (*(volatile Ifx_DMA_HRR*)0xF00118C4u)




#define DMA_HRR049 (DMA_HRR49)


#define DMA_HRR5 (*(volatile Ifx_DMA_HRR*)0xF0011814u)




#define DMA_HRR005 (DMA_HRR5)


#define DMA_HRR50 (*(volatile Ifx_DMA_HRR*)0xF00118C8u)




#define DMA_HRR050 (DMA_HRR50)


#define DMA_HRR51 (*(volatile Ifx_DMA_HRR*)0xF00118CCu)




#define DMA_HRR051 (DMA_HRR51)


#define DMA_HRR52 (*(volatile Ifx_DMA_HRR*)0xF00118D0u)




#define DMA_HRR052 (DMA_HRR52)


#define DMA_HRR53 (*(volatile Ifx_DMA_HRR*)0xF00118D4u)




#define DMA_HRR053 (DMA_HRR53)


#define DMA_HRR54 (*(volatile Ifx_DMA_HRR*)0xF00118D8u)




#define DMA_HRR054 (DMA_HRR54)


#define DMA_HRR55 (*(volatile Ifx_DMA_HRR*)0xF00118DCu)




#define DMA_HRR055 (DMA_HRR55)


#define DMA_HRR56 (*(volatile Ifx_DMA_HRR*)0xF00118E0u)




#define DMA_HRR056 (DMA_HRR56)


#define DMA_HRR57 (*(volatile Ifx_DMA_HRR*)0xF00118E4u)




#define DMA_HRR057 (DMA_HRR57)


#define DMA_HRR58 (*(volatile Ifx_DMA_HRR*)0xF00118E8u)




#define DMA_HRR058 (DMA_HRR58)


#define DMA_HRR59 (*(volatile Ifx_DMA_HRR*)0xF00118ECu)




#define DMA_HRR059 (DMA_HRR59)


#define DMA_HRR6 (*(volatile Ifx_DMA_HRR*)0xF0011818u)




#define DMA_HRR006 (DMA_HRR6)


#define DMA_HRR60 (*(volatile Ifx_DMA_HRR*)0xF00118F0u)




#define DMA_HRR060 (DMA_HRR60)


#define DMA_HRR61 (*(volatile Ifx_DMA_HRR*)0xF00118F4u)




#define DMA_HRR061 (DMA_HRR61)


#define DMA_HRR62 (*(volatile Ifx_DMA_HRR*)0xF00118F8u)




#define DMA_HRR062 (DMA_HRR62)


#define DMA_HRR63 (*(volatile Ifx_DMA_HRR*)0xF00118FCu)




#define DMA_HRR063 (DMA_HRR63)


#define DMA_HRR7 (*(volatile Ifx_DMA_HRR*)0xF001181Cu)




#define DMA_HRR007 (DMA_HRR7)


#define DMA_HRR8 (*(volatile Ifx_DMA_HRR*)0xF0011820u)




#define DMA_HRR008 (DMA_HRR8)


#define DMA_HRR9 (*(volatile Ifx_DMA_HRR*)0xF0011824u)




#define DMA_HRR009 (DMA_HRR9)


#define DMA_ID (*(volatile Ifx_DMA_ID*)0xF0010008u)


#define DMA_MEMCON (*(volatile Ifx_DMA_MEMCON*)0xF0010020u)


#define DMA_MODE0 (*(volatile Ifx_DMA_MODE*)0xF0011300u)


#define DMA_MODE1 (*(volatile Ifx_DMA_MODE*)0xF0011304u)


#define DMA_MODE2 (*(volatile Ifx_DMA_MODE*)0xF0011308u)


#define DMA_MODE3 (*(volatile Ifx_DMA_MODE*)0xF001130Cu)


#define DMA_OTSS (*(volatile Ifx_DMA_OTSS*)0xF0011200u)


#define DMA_PRR0 (*(volatile Ifx_DMA_PRR0*)0xF0011208u)


#define DMA_PRR1 (*(volatile Ifx_DMA_PRR1*)0xF001120Cu)


#define DMA_SUSACR0 (*(volatile Ifx_DMA_SUSACR*)0xF0011C00u)




#define DMA_SUSACR000 (DMA_SUSACR0)


#define DMA_SUSACR1 (*(volatile Ifx_DMA_SUSACR*)0xF0011C04u)




#define DMA_SUSACR001 (DMA_SUSACR1)


#define DMA_SUSACR10 (*(volatile Ifx_DMA_SUSACR*)0xF0011C28u)




#define DMA_SUSACR010 (DMA_SUSACR10)


#define DMA_SUSACR11 (*(volatile Ifx_DMA_SUSACR*)0xF0011C2Cu)




#define DMA_SUSACR011 (DMA_SUSACR11)


#define DMA_SUSACR12 (*(volatile Ifx_DMA_SUSACR*)0xF0011C30u)




#define DMA_SUSACR012 (DMA_SUSACR12)


#define DMA_SUSACR13 (*(volatile Ifx_DMA_SUSACR*)0xF0011C34u)




#define DMA_SUSACR013 (DMA_SUSACR13)


#define DMA_SUSACR14 (*(volatile Ifx_DMA_SUSACR*)0xF0011C38u)




#define DMA_SUSACR014 (DMA_SUSACR14)


#define DMA_SUSACR15 (*(volatile Ifx_DMA_SUSACR*)0xF0011C3Cu)




#define DMA_SUSACR015 (DMA_SUSACR15)


#define DMA_SUSACR16 (*(volatile Ifx_DMA_SUSACR*)0xF0011C40u)




#define DMA_SUSACR016 (DMA_SUSACR16)


#define DMA_SUSACR17 (*(volatile Ifx_DMA_SUSACR*)0xF0011C44u)




#define DMA_SUSACR017 (DMA_SUSACR17)


#define DMA_SUSACR18 (*(volatile Ifx_DMA_SUSACR*)0xF0011C48u)




#define DMA_SUSACR018 (DMA_SUSACR18)


#define DMA_SUSACR19 (*(volatile Ifx_DMA_SUSACR*)0xF0011C4Cu)




#define DMA_SUSACR019 (DMA_SUSACR19)


#define DMA_SUSACR2 (*(volatile Ifx_DMA_SUSACR*)0xF0011C08u)




#define DMA_SUSACR002 (DMA_SUSACR2)


#define DMA_SUSACR20 (*(volatile Ifx_DMA_SUSACR*)0xF0011C50u)




#define DMA_SUSACR020 (DMA_SUSACR20)


#define DMA_SUSACR21 (*(volatile Ifx_DMA_SUSACR*)0xF0011C54u)




#define DMA_SUSACR021 (DMA_SUSACR21)


#define DMA_SUSACR22 (*(volatile Ifx_DMA_SUSACR*)0xF0011C58u)




#define DMA_SUSACR022 (DMA_SUSACR22)


#define DMA_SUSACR23 (*(volatile Ifx_DMA_SUSACR*)0xF0011C5Cu)




#define DMA_SUSACR023 (DMA_SUSACR23)


#define DMA_SUSACR24 (*(volatile Ifx_DMA_SUSACR*)0xF0011C60u)




#define DMA_SUSACR024 (DMA_SUSACR24)


#define DMA_SUSACR25 (*(volatile Ifx_DMA_SUSACR*)0xF0011C64u)




#define DMA_SUSACR025 (DMA_SUSACR25)


#define DMA_SUSACR26 (*(volatile Ifx_DMA_SUSACR*)0xF0011C68u)




#define DMA_SUSACR026 (DMA_SUSACR26)


#define DMA_SUSACR27 (*(volatile Ifx_DMA_SUSACR*)0xF0011C6Cu)




#define DMA_SUSACR027 (DMA_SUSACR27)


#define DMA_SUSACR28 (*(volatile Ifx_DMA_SUSACR*)0xF0011C70u)




#define DMA_SUSACR028 (DMA_SUSACR28)


#define DMA_SUSACR29 (*(volatile Ifx_DMA_SUSACR*)0xF0011C74u)




#define DMA_SUSACR029 (DMA_SUSACR29)


#define DMA_SUSACR3 (*(volatile Ifx_DMA_SUSACR*)0xF0011C0Cu)




#define DMA_SUSACR003 (DMA_SUSACR3)


#define DMA_SUSACR30 (*(volatile Ifx_DMA_SUSACR*)0xF0011C78u)




#define DMA_SUSACR030 (DMA_SUSACR30)


#define DMA_SUSACR31 (*(volatile Ifx_DMA_SUSACR*)0xF0011C7Cu)




#define DMA_SUSACR031 (DMA_SUSACR31)


#define DMA_SUSACR32 (*(volatile Ifx_DMA_SUSACR*)0xF0011C80u)




#define DMA_SUSACR032 (DMA_SUSACR32)


#define DMA_SUSACR33 (*(volatile Ifx_DMA_SUSACR*)0xF0011C84u)




#define DMA_SUSACR033 (DMA_SUSACR33)


#define DMA_SUSACR34 (*(volatile Ifx_DMA_SUSACR*)0xF0011C88u)




#define DMA_SUSACR034 (DMA_SUSACR34)


#define DMA_SUSACR35 (*(volatile Ifx_DMA_SUSACR*)0xF0011C8Cu)




#define DMA_SUSACR035 (DMA_SUSACR35)


#define DMA_SUSACR36 (*(volatile Ifx_DMA_SUSACR*)0xF0011C90u)




#define DMA_SUSACR036 (DMA_SUSACR36)


#define DMA_SUSACR37 (*(volatile Ifx_DMA_SUSACR*)0xF0011C94u)




#define DMA_SUSACR037 (DMA_SUSACR37)


#define DMA_SUSACR38 (*(volatile Ifx_DMA_SUSACR*)0xF0011C98u)




#define DMA_SUSACR038 (DMA_SUSACR38)


#define DMA_SUSACR39 (*(volatile Ifx_DMA_SUSACR*)0xF0011C9Cu)




#define DMA_SUSACR039 (DMA_SUSACR39)


#define DMA_SUSACR4 (*(volatile Ifx_DMA_SUSACR*)0xF0011C10u)




#define DMA_SUSACR004 (DMA_SUSACR4)


#define DMA_SUSACR40 (*(volatile Ifx_DMA_SUSACR*)0xF0011CA0u)




#define DMA_SUSACR040 (DMA_SUSACR40)


#define DMA_SUSACR41 (*(volatile Ifx_DMA_SUSACR*)0xF0011CA4u)




#define DMA_SUSACR041 (DMA_SUSACR41)


#define DMA_SUSACR42 (*(volatile Ifx_DMA_SUSACR*)0xF0011CA8u)




#define DMA_SUSACR042 (DMA_SUSACR42)


#define DMA_SUSACR43 (*(volatile Ifx_DMA_SUSACR*)0xF0011CACu)




#define DMA_SUSACR043 (DMA_SUSACR43)


#define DMA_SUSACR44 (*(volatile Ifx_DMA_SUSACR*)0xF0011CB0u)




#define DMA_SUSACR044 (DMA_SUSACR44)


#define DMA_SUSACR45 (*(volatile Ifx_DMA_SUSACR*)0xF0011CB4u)




#define DMA_SUSACR045 (DMA_SUSACR45)


#define DMA_SUSACR46 (*(volatile Ifx_DMA_SUSACR*)0xF0011CB8u)




#define DMA_SUSACR046 (DMA_SUSACR46)


#define DMA_SUSACR47 (*(volatile Ifx_DMA_SUSACR*)0xF0011CBCu)




#define DMA_SUSACR047 (DMA_SUSACR47)


#define DMA_SUSACR48 (*(volatile Ifx_DMA_SUSACR*)0xF0011CC0u)




#define DMA_SUSACR048 (DMA_SUSACR48)


#define DMA_SUSACR49 (*(volatile Ifx_DMA_SUSACR*)0xF0011CC4u)




#define DMA_SUSACR049 (DMA_SUSACR49)


#define DMA_SUSACR5 (*(volatile Ifx_DMA_SUSACR*)0xF0011C14u)




#define DMA_SUSACR005 (DMA_SUSACR5)


#define DMA_SUSACR50 (*(volatile Ifx_DMA_SUSACR*)0xF0011CC8u)




#define DMA_SUSACR050 (DMA_SUSACR50)


#define DMA_SUSACR51 (*(volatile Ifx_DMA_SUSACR*)0xF0011CCCu)




#define DMA_SUSACR051 (DMA_SUSACR51)


#define DMA_SUSACR52 (*(volatile Ifx_DMA_SUSACR*)0xF0011CD0u)




#define DMA_SUSACR052 (DMA_SUSACR52)


#define DMA_SUSACR53 (*(volatile Ifx_DMA_SUSACR*)0xF0011CD4u)




#define DMA_SUSACR053 (DMA_SUSACR53)


#define DMA_SUSACR54 (*(volatile Ifx_DMA_SUSACR*)0xF0011CD8u)




#define DMA_SUSACR054 (DMA_SUSACR54)


#define DMA_SUSACR55 (*(volatile Ifx_DMA_SUSACR*)0xF0011CDCu)




#define DMA_SUSACR055 (DMA_SUSACR55)


#define DMA_SUSACR56 (*(volatile Ifx_DMA_SUSACR*)0xF0011CE0u)




#define DMA_SUSACR056 (DMA_SUSACR56)


#define DMA_SUSACR57 (*(volatile Ifx_DMA_SUSACR*)0xF0011CE4u)




#define DMA_SUSACR057 (DMA_SUSACR57)


#define DMA_SUSACR58 (*(volatile Ifx_DMA_SUSACR*)0xF0011CE8u)




#define DMA_SUSACR058 (DMA_SUSACR58)


#define DMA_SUSACR59 (*(volatile Ifx_DMA_SUSACR*)0xF0011CECu)




#define DMA_SUSACR059 (DMA_SUSACR59)


#define DMA_SUSACR6 (*(volatile Ifx_DMA_SUSACR*)0xF0011C18u)




#define DMA_SUSACR006 (DMA_SUSACR6)


#define DMA_SUSACR60 (*(volatile Ifx_DMA_SUSACR*)0xF0011CF0u)




#define DMA_SUSACR060 (DMA_SUSACR60)


#define DMA_SUSACR61 (*(volatile Ifx_DMA_SUSACR*)0xF0011CF4u)




#define DMA_SUSACR061 (DMA_SUSACR61)


#define DMA_SUSACR62 (*(volatile Ifx_DMA_SUSACR*)0xF0011CF8u)




#define DMA_SUSACR062 (DMA_SUSACR62)


#define DMA_SUSACR63 (*(volatile Ifx_DMA_SUSACR*)0xF0011CFCu)




#define DMA_SUSACR063 (DMA_SUSACR63)


#define DMA_SUSACR7 (*(volatile Ifx_DMA_SUSACR*)0xF0011C1Cu)




#define DMA_SUSACR007 (DMA_SUSACR7)


#define DMA_SUSACR8 (*(volatile Ifx_DMA_SUSACR*)0xF0011C20u)




#define DMA_SUSACR008 (DMA_SUSACR8)


#define DMA_SUSACR9 (*(volatile Ifx_DMA_SUSACR*)0xF0011C24u)




#define DMA_SUSACR009 (DMA_SUSACR9)


#define DMA_SUSENR0 (*(volatile Ifx_DMA_SUSENR*)0xF0011A00u)




#define DMA_SUSENR000 (DMA_SUSENR0)


#define DMA_SUSENR1 (*(volatile Ifx_DMA_SUSENR*)0xF0011A04u)




#define DMA_SUSENR001 (DMA_SUSENR1)


#define DMA_SUSENR10 (*(volatile Ifx_DMA_SUSENR*)0xF0011A28u)




#define DMA_SUSENR010 (DMA_SUSENR10)


#define DMA_SUSENR11 (*(volatile Ifx_DMA_SUSENR*)0xF0011A2Cu)




#define DMA_SUSENR011 (DMA_SUSENR11)


#define DMA_SUSENR12 (*(volatile Ifx_DMA_SUSENR*)0xF0011A30u)




#define DMA_SUSENR012 (DMA_SUSENR12)


#define DMA_SUSENR13 (*(volatile Ifx_DMA_SUSENR*)0xF0011A34u)




#define DMA_SUSENR013 (DMA_SUSENR13)


#define DMA_SUSENR14 (*(volatile Ifx_DMA_SUSENR*)0xF0011A38u)




#define DMA_SUSENR014 (DMA_SUSENR14)


#define DMA_SUSENR15 (*(volatile Ifx_DMA_SUSENR*)0xF0011A3Cu)




#define DMA_SUSENR015 (DMA_SUSENR15)


#define DMA_SUSENR16 (*(volatile Ifx_DMA_SUSENR*)0xF0011A40u)




#define DMA_SUSENR016 (DMA_SUSENR16)


#define DMA_SUSENR17 (*(volatile Ifx_DMA_SUSENR*)0xF0011A44u)




#define DMA_SUSENR017 (DMA_SUSENR17)


#define DMA_SUSENR18 (*(volatile Ifx_DMA_SUSENR*)0xF0011A48u)




#define DMA_SUSENR018 (DMA_SUSENR18)


#define DMA_SUSENR19 (*(volatile Ifx_DMA_SUSENR*)0xF0011A4Cu)




#define DMA_SUSENR019 (DMA_SUSENR19)


#define DMA_SUSENR2 (*(volatile Ifx_DMA_SUSENR*)0xF0011A08u)




#define DMA_SUSENR002 (DMA_SUSENR2)


#define DMA_SUSENR20 (*(volatile Ifx_DMA_SUSENR*)0xF0011A50u)




#define DMA_SUSENR020 (DMA_SUSENR20)


#define DMA_SUSENR21 (*(volatile Ifx_DMA_SUSENR*)0xF0011A54u)




#define DMA_SUSENR021 (DMA_SUSENR21)


#define DMA_SUSENR22 (*(volatile Ifx_DMA_SUSENR*)0xF0011A58u)




#define DMA_SUSENR022 (DMA_SUSENR22)


#define DMA_SUSENR23 (*(volatile Ifx_DMA_SUSENR*)0xF0011A5Cu)




#define DMA_SUSENR023 (DMA_SUSENR23)


#define DMA_SUSENR24 (*(volatile Ifx_DMA_SUSENR*)0xF0011A60u)




#define DMA_SUSENR024 (DMA_SUSENR24)


#define DMA_SUSENR25 (*(volatile Ifx_DMA_SUSENR*)0xF0011A64u)




#define DMA_SUSENR025 (DMA_SUSENR25)


#define DMA_SUSENR26 (*(volatile Ifx_DMA_SUSENR*)0xF0011A68u)




#define DMA_SUSENR026 (DMA_SUSENR26)


#define DMA_SUSENR27 (*(volatile Ifx_DMA_SUSENR*)0xF0011A6Cu)




#define DMA_SUSENR027 (DMA_SUSENR27)


#define DMA_SUSENR28 (*(volatile Ifx_DMA_SUSENR*)0xF0011A70u)




#define DMA_SUSENR028 (DMA_SUSENR28)


#define DMA_SUSENR29 (*(volatile Ifx_DMA_SUSENR*)0xF0011A74u)




#define DMA_SUSENR029 (DMA_SUSENR29)


#define DMA_SUSENR3 (*(volatile Ifx_DMA_SUSENR*)0xF0011A0Cu)




#define DMA_SUSENR003 (DMA_SUSENR3)


#define DMA_SUSENR30 (*(volatile Ifx_DMA_SUSENR*)0xF0011A78u)




#define DMA_SUSENR030 (DMA_SUSENR30)


#define DMA_SUSENR31 (*(volatile Ifx_DMA_SUSENR*)0xF0011A7Cu)




#define DMA_SUSENR031 (DMA_SUSENR31)


#define DMA_SUSENR32 (*(volatile Ifx_DMA_SUSENR*)0xF0011A80u)




#define DMA_SUSENR032 (DMA_SUSENR32)


#define DMA_SUSENR33 (*(volatile Ifx_DMA_SUSENR*)0xF0011A84u)




#define DMA_SUSENR033 (DMA_SUSENR33)


#define DMA_SUSENR34 (*(volatile Ifx_DMA_SUSENR*)0xF0011A88u)




#define DMA_SUSENR034 (DMA_SUSENR34)


#define DMA_SUSENR35 (*(volatile Ifx_DMA_SUSENR*)0xF0011A8Cu)




#define DMA_SUSENR035 (DMA_SUSENR35)


#define DMA_SUSENR36 (*(volatile Ifx_DMA_SUSENR*)0xF0011A90u)




#define DMA_SUSENR036 (DMA_SUSENR36)


#define DMA_SUSENR37 (*(volatile Ifx_DMA_SUSENR*)0xF0011A94u)




#define DMA_SUSENR037 (DMA_SUSENR37)


#define DMA_SUSENR38 (*(volatile Ifx_DMA_SUSENR*)0xF0011A98u)




#define DMA_SUSENR038 (DMA_SUSENR38)


#define DMA_SUSENR39 (*(volatile Ifx_DMA_SUSENR*)0xF0011A9Cu)




#define DMA_SUSENR039 (DMA_SUSENR39)


#define DMA_SUSENR4 (*(volatile Ifx_DMA_SUSENR*)0xF0011A10u)




#define DMA_SUSENR004 (DMA_SUSENR4)


#define DMA_SUSENR40 (*(volatile Ifx_DMA_SUSENR*)0xF0011AA0u)




#define DMA_SUSENR040 (DMA_SUSENR40)


#define DMA_SUSENR41 (*(volatile Ifx_DMA_SUSENR*)0xF0011AA4u)




#define DMA_SUSENR041 (DMA_SUSENR41)


#define DMA_SUSENR42 (*(volatile Ifx_DMA_SUSENR*)0xF0011AA8u)




#define DMA_SUSENR042 (DMA_SUSENR42)


#define DMA_SUSENR43 (*(volatile Ifx_DMA_SUSENR*)0xF0011AACu)




#define DMA_SUSENR043 (DMA_SUSENR43)


#define DMA_SUSENR44 (*(volatile Ifx_DMA_SUSENR*)0xF0011AB0u)




#define DMA_SUSENR044 (DMA_SUSENR44)


#define DMA_SUSENR45 (*(volatile Ifx_DMA_SUSENR*)0xF0011AB4u)




#define DMA_SUSENR045 (DMA_SUSENR45)


#define DMA_SUSENR46 (*(volatile Ifx_DMA_SUSENR*)0xF0011AB8u)




#define DMA_SUSENR046 (DMA_SUSENR46)


#define DMA_SUSENR47 (*(volatile Ifx_DMA_SUSENR*)0xF0011ABCu)




#define DMA_SUSENR047 (DMA_SUSENR47)


#define DMA_SUSENR48 (*(volatile Ifx_DMA_SUSENR*)0xF0011AC0u)




#define DMA_SUSENR048 (DMA_SUSENR48)


#define DMA_SUSENR49 (*(volatile Ifx_DMA_SUSENR*)0xF0011AC4u)




#define DMA_SUSENR049 (DMA_SUSENR49)


#define DMA_SUSENR5 (*(volatile Ifx_DMA_SUSENR*)0xF0011A14u)




#define DMA_SUSENR005 (DMA_SUSENR5)


#define DMA_SUSENR50 (*(volatile Ifx_DMA_SUSENR*)0xF0011AC8u)




#define DMA_SUSENR050 (DMA_SUSENR50)


#define DMA_SUSENR51 (*(volatile Ifx_DMA_SUSENR*)0xF0011ACCu)




#define DMA_SUSENR051 (DMA_SUSENR51)


#define DMA_SUSENR52 (*(volatile Ifx_DMA_SUSENR*)0xF0011AD0u)




#define DMA_SUSENR052 (DMA_SUSENR52)


#define DMA_SUSENR53 (*(volatile Ifx_DMA_SUSENR*)0xF0011AD4u)




#define DMA_SUSENR053 (DMA_SUSENR53)


#define DMA_SUSENR54 (*(volatile Ifx_DMA_SUSENR*)0xF0011AD8u)




#define DMA_SUSENR054 (DMA_SUSENR54)


#define DMA_SUSENR55 (*(volatile Ifx_DMA_SUSENR*)0xF0011ADCu)




#define DMA_SUSENR055 (DMA_SUSENR55)


#define DMA_SUSENR56 (*(volatile Ifx_DMA_SUSENR*)0xF0011AE0u)




#define DMA_SUSENR056 (DMA_SUSENR56)


#define DMA_SUSENR57 (*(volatile Ifx_DMA_SUSENR*)0xF0011AE4u)




#define DMA_SUSENR057 (DMA_SUSENR57)


#define DMA_SUSENR58 (*(volatile Ifx_DMA_SUSENR*)0xF0011AE8u)




#define DMA_SUSENR058 (DMA_SUSENR58)


#define DMA_SUSENR59 (*(volatile Ifx_DMA_SUSENR*)0xF0011AECu)




#define DMA_SUSENR059 (DMA_SUSENR59)


#define DMA_SUSENR6 (*(volatile Ifx_DMA_SUSENR*)0xF0011A18u)




#define DMA_SUSENR006 (DMA_SUSENR6)


#define DMA_SUSENR60 (*(volatile Ifx_DMA_SUSENR*)0xF0011AF0u)




#define DMA_SUSENR060 (DMA_SUSENR60)


#define DMA_SUSENR61 (*(volatile Ifx_DMA_SUSENR*)0xF0011AF4u)




#define DMA_SUSENR061 (DMA_SUSENR61)


#define DMA_SUSENR62 (*(volatile Ifx_DMA_SUSENR*)0xF0011AF8u)




#define DMA_SUSENR062 (DMA_SUSENR62)


#define DMA_SUSENR63 (*(volatile Ifx_DMA_SUSENR*)0xF0011AFCu)




#define DMA_SUSENR063 (DMA_SUSENR63)


#define DMA_SUSENR7 (*(volatile Ifx_DMA_SUSENR*)0xF0011A1Cu)




#define DMA_SUSENR007 (DMA_SUSENR7)


#define DMA_SUSENR8 (*(volatile Ifx_DMA_SUSENR*)0xF0011A20u)




#define DMA_SUSENR008 (DMA_SUSENR8)


#define DMA_SUSENR9 (*(volatile Ifx_DMA_SUSENR*)0xF0011A24u)




#define DMA_SUSENR009 (DMA_SUSENR9)


#define DMA_TIME (*(volatile Ifx_DMA_TIME*)0xF0011210u)


#define DMA_TSR0 (*(volatile Ifx_DMA_TSR*)0xF0011E00u)




#define DMA_TSR000 (DMA_TSR0)


#define DMA_TSR1 (*(volatile Ifx_DMA_TSR*)0xF0011E04u)




#define DMA_TSR001 (DMA_TSR1)


#define DMA_TSR10 (*(volatile Ifx_DMA_TSR*)0xF0011E28u)




#define DMA_TSR010 (DMA_TSR10)


#define DMA_TSR11 (*(volatile Ifx_DMA_TSR*)0xF0011E2Cu)




#define DMA_TSR011 (DMA_TSR11)


#define DMA_TSR12 (*(volatile Ifx_DMA_TSR*)0xF0011E30u)




#define DMA_TSR012 (DMA_TSR12)


#define DMA_TSR13 (*(volatile Ifx_DMA_TSR*)0xF0011E34u)




#define DMA_TSR013 (DMA_TSR13)


#define DMA_TSR14 (*(volatile Ifx_DMA_TSR*)0xF0011E38u)




#define DMA_TSR014 (DMA_TSR14)


#define DMA_TSR15 (*(volatile Ifx_DMA_TSR*)0xF0011E3Cu)




#define DMA_TSR015 (DMA_TSR15)


#define DMA_TSR16 (*(volatile Ifx_DMA_TSR*)0xF0011E40u)




#define DMA_TSR016 (DMA_TSR16)


#define DMA_TSR17 (*(volatile Ifx_DMA_TSR*)0xF0011E44u)




#define DMA_TSR017 (DMA_TSR17)


#define DMA_TSR18 (*(volatile Ifx_DMA_TSR*)0xF0011E48u)




#define DMA_TSR018 (DMA_TSR18)


#define DMA_TSR19 (*(volatile Ifx_DMA_TSR*)0xF0011E4Cu)




#define DMA_TSR019 (DMA_TSR19)


#define DMA_TSR2 (*(volatile Ifx_DMA_TSR*)0xF0011E08u)




#define DMA_TSR002 (DMA_TSR2)


#define DMA_TSR20 (*(volatile Ifx_DMA_TSR*)0xF0011E50u)




#define DMA_TSR020 (DMA_TSR20)


#define DMA_TSR21 (*(volatile Ifx_DMA_TSR*)0xF0011E54u)




#define DMA_TSR021 (DMA_TSR21)


#define DMA_TSR22 (*(volatile Ifx_DMA_TSR*)0xF0011E58u)




#define DMA_TSR022 (DMA_TSR22)


#define DMA_TSR23 (*(volatile Ifx_DMA_TSR*)0xF0011E5Cu)




#define DMA_TSR023 (DMA_TSR23)


#define DMA_TSR24 (*(volatile Ifx_DMA_TSR*)0xF0011E60u)




#define DMA_TSR024 (DMA_TSR24)


#define DMA_TSR25 (*(volatile Ifx_DMA_TSR*)0xF0011E64u)




#define DMA_TSR025 (DMA_TSR25)


#define DMA_TSR26 (*(volatile Ifx_DMA_TSR*)0xF0011E68u)




#define DMA_TSR026 (DMA_TSR26)


#define DMA_TSR27 (*(volatile Ifx_DMA_TSR*)0xF0011E6Cu)




#define DMA_TSR027 (DMA_TSR27)


#define DMA_TSR28 (*(volatile Ifx_DMA_TSR*)0xF0011E70u)




#define DMA_TSR028 (DMA_TSR28)


#define DMA_TSR29 (*(volatile Ifx_DMA_TSR*)0xF0011E74u)




#define DMA_TSR029 (DMA_TSR29)


#define DMA_TSR3 (*(volatile Ifx_DMA_TSR*)0xF0011E0Cu)




#define DMA_TSR003 (DMA_TSR3)


#define DMA_TSR30 (*(volatile Ifx_DMA_TSR*)0xF0011E78u)




#define DMA_TSR030 (DMA_TSR30)


#define DMA_TSR31 (*(volatile Ifx_DMA_TSR*)0xF0011E7Cu)




#define DMA_TSR031 (DMA_TSR31)


#define DMA_TSR32 (*(volatile Ifx_DMA_TSR*)0xF0011E80u)




#define DMA_TSR032 (DMA_TSR32)


#define DMA_TSR33 (*(volatile Ifx_DMA_TSR*)0xF0011E84u)




#define DMA_TSR033 (DMA_TSR33)


#define DMA_TSR34 (*(volatile Ifx_DMA_TSR*)0xF0011E88u)




#define DMA_TSR034 (DMA_TSR34)


#define DMA_TSR35 (*(volatile Ifx_DMA_TSR*)0xF0011E8Cu)




#define DMA_TSR035 (DMA_TSR35)


#define DMA_TSR36 (*(volatile Ifx_DMA_TSR*)0xF0011E90u)




#define DMA_TSR036 (DMA_TSR36)


#define DMA_TSR37 (*(volatile Ifx_DMA_TSR*)0xF0011E94u)




#define DMA_TSR037 (DMA_TSR37)


#define DMA_TSR38 (*(volatile Ifx_DMA_TSR*)0xF0011E98u)




#define DMA_TSR038 (DMA_TSR38)


#define DMA_TSR39 (*(volatile Ifx_DMA_TSR*)0xF0011E9Cu)




#define DMA_TSR039 (DMA_TSR39)


#define DMA_TSR4 (*(volatile Ifx_DMA_TSR*)0xF0011E10u)




#define DMA_TSR004 (DMA_TSR4)


#define DMA_TSR40 (*(volatile Ifx_DMA_TSR*)0xF0011EA0u)




#define DMA_TSR040 (DMA_TSR40)


#define DMA_TSR41 (*(volatile Ifx_DMA_TSR*)0xF0011EA4u)




#define DMA_TSR041 (DMA_TSR41)


#define DMA_TSR42 (*(volatile Ifx_DMA_TSR*)0xF0011EA8u)




#define DMA_TSR042 (DMA_TSR42)


#define DMA_TSR43 (*(volatile Ifx_DMA_TSR*)0xF0011EACu)




#define DMA_TSR043 (DMA_TSR43)


#define DMA_TSR44 (*(volatile Ifx_DMA_TSR*)0xF0011EB0u)




#define DMA_TSR044 (DMA_TSR44)


#define DMA_TSR45 (*(volatile Ifx_DMA_TSR*)0xF0011EB4u)




#define DMA_TSR045 (DMA_TSR45)


#define DMA_TSR46 (*(volatile Ifx_DMA_TSR*)0xF0011EB8u)




#define DMA_TSR046 (DMA_TSR46)


#define DMA_TSR47 (*(volatile Ifx_DMA_TSR*)0xF0011EBCu)




#define DMA_TSR047 (DMA_TSR47)


#define DMA_TSR48 (*(volatile Ifx_DMA_TSR*)0xF0011EC0u)




#define DMA_TSR048 (DMA_TSR48)


#define DMA_TSR49 (*(volatile Ifx_DMA_TSR*)0xF0011EC4u)




#define DMA_TSR049 (DMA_TSR49)


#define DMA_TSR5 (*(volatile Ifx_DMA_TSR*)0xF0011E14u)




#define DMA_TSR005 (DMA_TSR5)


#define DMA_TSR50 (*(volatile Ifx_DMA_TSR*)0xF0011EC8u)




#define DMA_TSR050 (DMA_TSR50)


#define DMA_TSR51 (*(volatile Ifx_DMA_TSR*)0xF0011ECCu)




#define DMA_TSR051 (DMA_TSR51)


#define DMA_TSR52 (*(volatile Ifx_DMA_TSR*)0xF0011ED0u)




#define DMA_TSR052 (DMA_TSR52)


#define DMA_TSR53 (*(volatile Ifx_DMA_TSR*)0xF0011ED4u)




#define DMA_TSR053 (DMA_TSR53)


#define DMA_TSR54 (*(volatile Ifx_DMA_TSR*)0xF0011ED8u)




#define DMA_TSR054 (DMA_TSR54)


#define DMA_TSR55 (*(volatile Ifx_DMA_TSR*)0xF0011EDCu)




#define DMA_TSR055 (DMA_TSR55)


#define DMA_TSR56 (*(volatile Ifx_DMA_TSR*)0xF0011EE0u)




#define DMA_TSR056 (DMA_TSR56)


#define DMA_TSR57 (*(volatile Ifx_DMA_TSR*)0xF0011EE4u)




#define DMA_TSR057 (DMA_TSR57)


#define DMA_TSR58 (*(volatile Ifx_DMA_TSR*)0xF0011EE8u)




#define DMA_TSR058 (DMA_TSR58)


#define DMA_TSR59 (*(volatile Ifx_DMA_TSR*)0xF0011EECu)




#define DMA_TSR059 (DMA_TSR59)


#define DMA_TSR6 (*(volatile Ifx_DMA_TSR*)0xF0011E18u)




#define DMA_TSR006 (DMA_TSR6)


#define DMA_TSR60 (*(volatile Ifx_DMA_TSR*)0xF0011EF0u)




#define DMA_TSR060 (DMA_TSR60)


#define DMA_TSR61 (*(volatile Ifx_DMA_TSR*)0xF0011EF4u)




#define DMA_TSR061 (DMA_TSR61)


#define DMA_TSR62 (*(volatile Ifx_DMA_TSR*)0xF0011EF8u)




#define DMA_TSR062 (DMA_TSR62)


#define DMA_TSR63 (*(volatile Ifx_DMA_TSR*)0xF0011EFCu)




#define DMA_TSR063 (DMA_TSR63)


#define DMA_TSR7 (*(volatile Ifx_DMA_TSR*)0xF0011E1Cu)




#define DMA_TSR007 (DMA_TSR7)


#define DMA_TSR8 (*(volatile Ifx_DMA_TSR*)0xF0011E20u)




#define DMA_TSR008 (DMA_TSR8)


#define DMA_TSR9 (*(volatile Ifx_DMA_TSR*)0xF0011E24u)




#define DMA_TSR009 (DMA_TSR9)
# 35 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_reg.h" 2 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxDsadc_reg.h" 1 3
# 34 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxDsadc_reg.h" 3
#define IFXDSADC_REG_H 1

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxDsadc_regdef.h" 1 3
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxDsadc_regdef.h" 3
#define IFXDSADC_REGDEF_H 1







typedef struct _Ifx_DSADC_ACCEN0_Bits
{
    unsigned int EN0:1;
    unsigned int EN1:1;
    unsigned int EN2:1;
    unsigned int EN3:1;
    unsigned int EN4:1;
    unsigned int EN5:1;
    unsigned int EN6:1;
    unsigned int EN7:1;
    unsigned int EN8:1;
    unsigned int EN9:1;
    unsigned int EN10:1;
    unsigned int EN11:1;
    unsigned int EN12:1;
    unsigned int EN13:1;
    unsigned int EN14:1;
    unsigned int EN15:1;
    unsigned int EN16:1;
    unsigned int EN17:1;
    unsigned int EN18:1;
    unsigned int EN19:1;
    unsigned int EN20:1;
    unsigned int EN21:1;
    unsigned int EN22:1;
    unsigned int EN23:1;
    unsigned int EN24:1;
    unsigned int EN25:1;
    unsigned int EN26:1;
    unsigned int EN27:1;
    unsigned int EN28:1;
    unsigned int EN29:1;
    unsigned int EN30:1;
    unsigned int EN31:1;
} Ifx_DSADC_ACCEN0_Bits;


typedef struct _Ifx_DSADC_ACCPROT_Bits
{
    unsigned int RG00:1;
    unsigned int RG01:1;
    unsigned int RG02:1;
    unsigned int RG03:1;
    unsigned int RG04:1;
    unsigned int reserved_5:9;
    unsigned int RG10:1;
    unsigned int RG11:1;
    unsigned int RG40:1;
    unsigned int RG41:1;
    unsigned int RG42:1;
    unsigned int RG43:1;
    unsigned int RG44:1;
    unsigned int reserved_21:11;
} Ifx_DSADC_ACCPROT_Bits;


typedef struct _Ifx_DSADC_CGCFG_Bits
{
    unsigned int CGMOD:2;
    unsigned int BREV:1;
    unsigned int SIGPOL:1;
    unsigned int DIVCG:4;
    unsigned int reserved_8:7;
    unsigned int RUN:1;
    unsigned int BITCOUNT:5;
    unsigned int reserved_21:3;
    unsigned int STEPCOUNT:4;
    unsigned int STEPS:1;
    unsigned int STEPD:1;
    unsigned int SGNCG:1;
    unsigned int reserved_31:1;
} Ifx_DSADC_CGCFG_Bits;


typedef struct _Ifx_DSADC_CH_BOUNDSEL_Bits
{
    unsigned int BOUNDARYL:16;
    unsigned int BOUNDARYU:16;
} Ifx_DSADC_CH_BOUNDSEL_Bits;


typedef struct _Ifx_DSADC_CH_CGSYNC_Bits
{
    unsigned int SDCOUNT:8;
    unsigned int SDCAP:8;
    unsigned int SDPOS:8;
    unsigned int SDNEG:8;
} Ifx_DSADC_CH_CGSYNC_Bits;


typedef struct _Ifx_DSADC_CH_DICFG_Bits
{
    unsigned int DSRC:4;
    unsigned int reserved_4:3;
    unsigned int DSWC:1;
    unsigned int ITRMODE:2;
    unsigned int TSTRMODE:2;
    unsigned int TRSEL:3;
    unsigned int TRWC:1;
    unsigned int CSRC:4;
    unsigned int STROBE:4;
    unsigned int reserved_24:7;
    unsigned int SCWC:1;
} Ifx_DSADC_CH_DICFG_Bits;


typedef struct _Ifx_DSADC_CH_FCFGA_Bits
{
    unsigned int CFADF:8;
    unsigned int CFAC:2;
    unsigned int SRGA:2;
    unsigned int ESEL:2;
    unsigned int EGT:1;
    unsigned int reserved_15:1;
    unsigned int AFSC:2;
    unsigned int reserved_18:6;
    unsigned int CFADCNT:8;
} Ifx_DSADC_CH_FCFGA_Bits;


typedef struct _Ifx_DSADC_CH_FCFGC_Bits
{
    unsigned int CFMDF:8;
    unsigned int CFMC:2;
    unsigned int CFEN:1;
    unsigned int reserved_11:1;
    unsigned int MFSC:2;
    unsigned int SRGM:2;
    unsigned int CFMSV:8;
    unsigned int CFMDCNT:8;
} Ifx_DSADC_CH_FCFGC_Bits;


typedef struct _Ifx_DSADC_CH_FCFGM_Bits
{
    unsigned int FIR0EN:1;
    unsigned int FIR1EN:1;
    unsigned int OCEN:1;
    unsigned int DSH:2;
    unsigned int FSH:1;
    unsigned int reserved_6:26;
} Ifx_DSADC_CH_FCFGM_Bits;


typedef struct _Ifx_DSADC_CH_ICCFG_Bits
{
    unsigned int DI0:1;
    unsigned int DI1:1;
    unsigned int reserved_2:2;
    unsigned int IREN:1;
    unsigned int reserved_5:3;
    unsigned int TWINSP:6;
    unsigned int reserved_14:17;
    unsigned int WREN:1;
} Ifx_DSADC_CH_ICCFG_Bits;


typedef struct _Ifx_DSADC_CH_IWCTR_Bits
{
    unsigned int NVALCNT:6;
    unsigned int reserved_6:1;
    unsigned int INTEN:1;
    unsigned int REPCNT:4;
    unsigned int REPVAL:4;
    unsigned int NVALDIS:6;
    unsigned int reserved_22:1;
    unsigned int IWS:1;
    unsigned int NVALINT:6;
    unsigned int reserved_30:2;
} Ifx_DSADC_CH_IWCTR_Bits;


typedef struct _Ifx_DSADC_CH_MODCFG_Bits
{
    unsigned int INCFGP:2;
    unsigned int INCFGN:2;
    unsigned int GAINSEL:4;
    unsigned int INSEL:2;
    unsigned int INMUX:2;
    unsigned int INMODE:2;
    unsigned int INMAC:1;
    unsigned int INCWC:1;
    unsigned int DIVM:4;
    unsigned int reserved_20:3;
    unsigned int DWC:1;
    unsigned int CMVS:2;
    unsigned int MCFG:2;
    unsigned int GCEN:1;
    unsigned int APC:1;
    unsigned int reserved_30:1;
    unsigned int MWC:1;
} Ifx_DSADC_CH_MODCFG_Bits;


typedef struct _Ifx_DSADC_CH_OFFM_Bits
{
    unsigned int OFFSET:16;
    unsigned int reserved_16:16;
} Ifx_DSADC_CH_OFFM_Bits;


typedef struct _Ifx_DSADC_CH_RECTCFG_Bits
{
    unsigned int RFEN:1;
    unsigned int reserved_1:3;
    unsigned int SSRC:2;
    unsigned int reserved_6:9;
    unsigned int SDCVAL:1;
    unsigned int reserved_16:14;
    unsigned int SGNCS:1;
    unsigned int SGND:1;
} Ifx_DSADC_CH_RECTCFG_Bits;


typedef struct _Ifx_DSADC_CH_RESA_Bits
{
    unsigned int RESULT:16;
    unsigned int reserved_16:16;
} Ifx_DSADC_CH_RESA_Bits;


typedef struct _Ifx_DSADC_CH_RESM_Bits
{
    unsigned int RESULT:16;
    unsigned int reserved_16:16;
} Ifx_DSADC_CH_RESM_Bits;


typedef struct _Ifx_DSADC_CH_TSTMP_Bits
{
    unsigned int RESULT:16;
    unsigned int CFMDCNT:8;
    unsigned int NVALCNT:6;
    unsigned int TSVAL:1;
    unsigned int TSSR:1;
} Ifx_DSADC_CH_TSTMP_Bits;


typedef struct _Ifx_DSADC_CLC_Bits
{
    unsigned int DISR:1;
    unsigned int DISS:1;
    unsigned int reserved_2:1;
    unsigned int EDIS:1;
    unsigned int reserved_4:28;
} Ifx_DSADC_CLC_Bits;


typedef struct _Ifx_DSADC_EVFLAG_Bits
{
    unsigned int RESEV0:1;
    unsigned int RESEV1:1;
    unsigned int RESEV2:1;
    unsigned int RESEV3:1;
    unsigned int RESEV4:1;
    unsigned int RESEV5:1;
    unsigned int reserved_6:10;
    unsigned int ALEV0:1;
    unsigned int ALEV1:1;
    unsigned int ALEV2:1;
    unsigned int ALEV3:1;
    unsigned int ALEV4:1;
    unsigned int ALEV5:1;
    unsigned int reserved_22:10;
} Ifx_DSADC_EVFLAG_Bits;


typedef struct _Ifx_DSADC_EVFLAGCLR_Bits
{
    unsigned int RESEC0:1;
    unsigned int RESEC1:1;
    unsigned int RESEC2:1;
    unsigned int RESEC3:1;
    unsigned int RESEC4:1;
    unsigned int RESEC5:1;
    unsigned int reserved_6:10;
    unsigned int ALEC0:1;
    unsigned int ALEC1:1;
    unsigned int ALEC2:1;
    unsigned int ALEC3:1;
    unsigned int ALEC4:1;
    unsigned int ALEC5:1;
    unsigned int reserved_22:10;
} Ifx_DSADC_EVFLAGCLR_Bits;


typedef struct _Ifx_DSADC_GLOBCFG_Bits
{
    unsigned int MCSEL:3;
    unsigned int reserved_3:8;
    unsigned int IRM0:1;
    unsigned int IRM2:1;
    unsigned int IRM4:1;
    unsigned int reserved_14:2;
    unsigned int IBSEL:4;
    unsigned int LOSUP:1;
    unsigned int reserved_21:1;
    unsigned int ICT:1;
    unsigned int PSWC:1;
    unsigned int reserved_24:8;
} Ifx_DSADC_GLOBCFG_Bits;


typedef struct _Ifx_DSADC_GLOBRC_Bits
{
    unsigned int CH0RUN:1;
    unsigned int CH1RUN:1;
    unsigned int CH2RUN:1;
    unsigned int CH3RUN:1;
    unsigned int CH4RUN:1;
    unsigned int CH5RUN:1;
    unsigned int reserved_6:10;
    unsigned int M0RUN:1;
    unsigned int M1RUN:1;
    unsigned int M2RUN:1;
    unsigned int M3RUN:1;
    unsigned int M4RUN:1;
    unsigned int M5RUN:1;
    unsigned int reserved_22:10;
} Ifx_DSADC_GLOBRC_Bits;


typedef struct _Ifx_DSADC_GLOBVCMH0_Bits
{
    unsigned int IN0PVC0:1;
    unsigned int reserved_1:3;
    unsigned int IN0NVC0:1;
    unsigned int reserved_5:3;
    unsigned int IN1PVC0:1;
    unsigned int reserved_9:3;
    unsigned int IN1NVC0:1;
    unsigned int reserved_13:3;
    unsigned int IN2PVC0:1;
    unsigned int IN2PVC1:1;
    unsigned int reserved_18:2;
    unsigned int IN2NVC0:1;
    unsigned int IN2NVC1:1;
    unsigned int reserved_22:2;
    unsigned int IN3PVC0:1;
    unsigned int IN3PVC1:1;
    unsigned int IN3PVC2:1;
    unsigned int IN3PVC3:1;
    unsigned int IN3NVC0:1;
    unsigned int IN3NVC1:1;
    unsigned int IN3NVC2:1;
    unsigned int IN3NVC3:1;
} Ifx_DSADC_GLOBVCMH0_Bits;


typedef struct _Ifx_DSADC_GLOBVCMH1_Bits
{
    unsigned int IN4PVC0:1;
    unsigned int reserved_1:3;
    unsigned int IN4NVC0:1;
    unsigned int reserved_5:3;
    unsigned int IN5PVC0:1;
    unsigned int reserved_9:3;
    unsigned int IN5NVC0:1;
    unsigned int reserved_13:19;
} Ifx_DSADC_GLOBVCMH1_Bits;


typedef struct _Ifx_DSADC_GLOBVCMH2_Bits
{
    unsigned int reserved_0:29;
    unsigned int VHON:1;
    unsigned int VCMHS:2;
} Ifx_DSADC_GLOBVCMH2_Bits;


typedef struct _Ifx_DSADC_ID_Bits
{
    unsigned int MOD_REV:8;
    unsigned int MOD_TYPE:8;
    unsigned int MODNUMBER:16;
} Ifx_DSADC_ID_Bits;


typedef struct _Ifx_DSADC_IGCFG_Bits
{
    unsigned int DITRIM:3;
    unsigned int reserved_3:13;
    unsigned int GLOBSP:10;
    unsigned int reserved_26:5;
    unsigned int WREN:1;
} Ifx_DSADC_IGCFG_Bits;


typedef struct _Ifx_DSADC_KRST0_Bits
{
    unsigned int RST:1;
    unsigned int RSTSTAT:1;
    unsigned int reserved_2:30;
} Ifx_DSADC_KRST0_Bits;


typedef struct _Ifx_DSADC_KRST1_Bits
{
    unsigned int RST:1;
    unsigned int reserved_1:31;
} Ifx_DSADC_KRST1_Bits;


typedef struct _Ifx_DSADC_KRSTCLR_Bits
{
    unsigned int CLR:1;
    unsigned int reserved_1:31;
} Ifx_DSADC_KRSTCLR_Bits;


typedef struct _Ifx_DSADC_OCS_Bits
{
    unsigned int reserved_0:24;
    unsigned int SUS:4;
    unsigned int SUS_P:1;
    unsigned int SUSSTA:1;
    unsigned int reserved_30:2;
} Ifx_DSADC_OCS_Bits;







typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DSADC_ACCEN0_Bits B;
} Ifx_DSADC_ACCEN0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DSADC_ACCPROT_Bits B;
} Ifx_DSADC_ACCPROT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DSADC_CGCFG_Bits B;
} Ifx_DSADC_CGCFG;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DSADC_CH_BOUNDSEL_Bits B;
} Ifx_DSADC_CH_BOUNDSEL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DSADC_CH_CGSYNC_Bits B;
} Ifx_DSADC_CH_CGSYNC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DSADC_CH_DICFG_Bits B;
} Ifx_DSADC_CH_DICFG;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DSADC_CH_FCFGA_Bits B;
} Ifx_DSADC_CH_FCFGA;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DSADC_CH_FCFGC_Bits B;
} Ifx_DSADC_CH_FCFGC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DSADC_CH_FCFGM_Bits B;
} Ifx_DSADC_CH_FCFGM;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DSADC_CH_ICCFG_Bits B;
} Ifx_DSADC_CH_ICCFG;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DSADC_CH_IWCTR_Bits B;
} Ifx_DSADC_CH_IWCTR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DSADC_CH_MODCFG_Bits B;
} Ifx_DSADC_CH_MODCFG;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DSADC_CH_OFFM_Bits B;
} Ifx_DSADC_CH_OFFM;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DSADC_CH_RECTCFG_Bits B;
} Ifx_DSADC_CH_RECTCFG;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DSADC_CH_RESA_Bits B;
} Ifx_DSADC_CH_RESA;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DSADC_CH_RESM_Bits B;
} Ifx_DSADC_CH_RESM;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DSADC_CH_TSTMP_Bits B;
} Ifx_DSADC_CH_TSTMP;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DSADC_CLC_Bits B;
} Ifx_DSADC_CLC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DSADC_EVFLAG_Bits B;
} Ifx_DSADC_EVFLAG;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DSADC_EVFLAGCLR_Bits B;
} Ifx_DSADC_EVFLAGCLR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DSADC_GLOBCFG_Bits B;
} Ifx_DSADC_GLOBCFG;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DSADC_GLOBRC_Bits B;
} Ifx_DSADC_GLOBRC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DSADC_GLOBVCMH0_Bits B;
} Ifx_DSADC_GLOBVCMH0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DSADC_GLOBVCMH1_Bits B;
} Ifx_DSADC_GLOBVCMH1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DSADC_GLOBVCMH2_Bits B;
} Ifx_DSADC_GLOBVCMH2;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DSADC_ID_Bits B;
} Ifx_DSADC_ID;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DSADC_IGCFG_Bits B;
} Ifx_DSADC_IGCFG;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DSADC_KRST0_Bits B;
} Ifx_DSADC_KRST0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DSADC_KRST1_Bits B;
} Ifx_DSADC_KRST1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DSADC_KRSTCLR_Bits B;
} Ifx_DSADC_KRSTCLR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_DSADC_OCS_Bits B;
} Ifx_DSADC_OCS;
# 726 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxDsadc_regdef.h" 3
typedef volatile struct _Ifx_DSADC_CH
{
    Ifx_DSADC_CH_MODCFG MODCFG;
    unsigned char reserved_4[4];
    Ifx_DSADC_CH_DICFG DICFG;
    unsigned char reserved_C[4];
    Ifx_DSADC_CH_FCFGM FCFGM;
    Ifx_DSADC_CH_FCFGC FCFGC;
    Ifx_DSADC_CH_FCFGA FCFGA;
    unsigned char reserved_1C[4];
    Ifx_DSADC_CH_IWCTR IWCTR;
    unsigned char reserved_24[4];
    Ifx_DSADC_CH_BOUNDSEL BOUNDSEL;
    unsigned char reserved_2C[4];
    Ifx_DSADC_CH_RESM RESM;
    unsigned char reserved_34[4];
    Ifx_DSADC_CH_OFFM OFFM;
    unsigned char reserved_3C[4];
    Ifx_DSADC_CH_RESA RESA;
    unsigned char reserved_44[12];
    Ifx_DSADC_CH_TSTMP TSTMP;
    unsigned char reserved_54[76];
    Ifx_DSADC_CH_CGSYNC CGSYNC;
    unsigned char reserved_A4[4];
    Ifx_DSADC_CH_RECTCFG RECTCFG;
    unsigned char reserved_AC[36];
    Ifx_DSADC_CH_ICCFG ICCFG;
    unsigned char reserved_D4[44];
} Ifx_DSADC_CH;
# 767 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxDsadc_regdef.h" 3
typedef volatile struct _Ifx_DSADC
{
    Ifx_DSADC_CLC CLC;
    unsigned char reserved_4[4];
    Ifx_DSADC_ID ID;
    unsigned char reserved_C[28];
    Ifx_DSADC_OCS OCS;
    Ifx_DSADC_KRSTCLR KRSTCLR;
    Ifx_DSADC_KRST1 KRST1;
    Ifx_DSADC_KRST0 KRST0;
    unsigned char reserved_38[4];
    Ifx_DSADC_ACCEN0 ACCEN0;
    unsigned char reserved_40[64];
    Ifx_DSADC_GLOBCFG GLOBCFG;
    unsigned char reserved_84[4];
    Ifx_DSADC_GLOBRC GLOBRC;
    unsigned char reserved_8C[4];
    Ifx_DSADC_ACCPROT ACCPROT;
    unsigned char reserved_94[12];
    Ifx_DSADC_CGCFG CGCFG;
    unsigned char reserved_A4[12];
    Ifx_DSADC_GLOBVCMH0 GLOBVCMH0;
    Ifx_DSADC_GLOBVCMH1 GLOBVCMH1;
    Ifx_DSADC_GLOBVCMH2 GLOBVCMH2;
    unsigned char reserved_BC[20];
    Ifx_DSADC_IGCFG IGCFG;
    unsigned char reserved_D4[12];
    Ifx_DSADC_EVFLAG EVFLAG;
    Ifx_DSADC_EVFLAGCLR EVFLAGCLR;
    unsigned char reserved_E8[24];
    Ifx_DSADC_CH CH[6];
    unsigned char reserved_700[2304];
} Ifx_DSADC;
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxDsadc_reg.h" 2 3





#define MODULE_DSADC (*(Ifx_DSADC*)0xF0024000u)







#define DSADC_ACCEN0 (*(volatile Ifx_DSADC_ACCEN0*)0xF002403Cu)


#define DSADC_ACCPROT (*(volatile Ifx_DSADC_ACCPROT*)0xF0024090u)


#define DSADC_CGCFG (*(volatile Ifx_DSADC_CGCFG*)0xF00240A0u)


#define DSADC_CH0_BOUNDSEL (*(volatile Ifx_DSADC_CH_BOUNDSEL*)0xF0024128u)




#define DSADC_BOUNDSEL0 (DSADC_CH0_BOUNDSEL)


#define DSADC_CH0_CGSYNC (*(volatile Ifx_DSADC_CH_CGSYNC*)0xF00241A0u)




#define DSADC_CGSYNC0 (DSADC_CH0_CGSYNC)


#define DSADC_CH0_DICFG (*(volatile Ifx_DSADC_CH_DICFG*)0xF0024108u)




#define DSADC_DICFG0 (DSADC_CH0_DICFG)


#define DSADC_CH0_FCFGA (*(volatile Ifx_DSADC_CH_FCFGA*)0xF0024118u)




#define DSADC_FCFGA0 (DSADC_CH0_FCFGA)


#define DSADC_CH0_FCFGC (*(volatile Ifx_DSADC_CH_FCFGC*)0xF0024114u)




#define DSADC_FCFGC0 (DSADC_CH0_FCFGC)


#define DSADC_CH0_FCFGM (*(volatile Ifx_DSADC_CH_FCFGM*)0xF0024110u)




#define DSADC_FCFGM0 (DSADC_CH0_FCFGM)


#define DSADC_CH0_ICCFG (*(volatile Ifx_DSADC_CH_ICCFG*)0xF00241D0u)




#define DSADC_ICCFG0 (DSADC_CH0_ICCFG)


#define DSADC_CH0_IWCTR (*(volatile Ifx_DSADC_CH_IWCTR*)0xF0024120u)




#define DSADC_IWCTR0 (DSADC_CH0_IWCTR)


#define DSADC_CH0_MODCFG (*(volatile Ifx_DSADC_CH_MODCFG*)0xF0024100u)




#define DSADC_MODCFG0 (DSADC_CH0_MODCFG)


#define DSADC_CH0_OFFM (*(volatile Ifx_DSADC_CH_OFFM*)0xF0024138u)




#define DSADC_OFFM0 (DSADC_CH0_OFFM)


#define DSADC_CH0_RECTCFG (*(volatile Ifx_DSADC_CH_RECTCFG*)0xF00241A8u)




#define DSADC_RECTCFG0 (DSADC_CH0_RECTCFG)


#define DSADC_CH0_RESA (*(volatile Ifx_DSADC_CH_RESA*)0xF0024140u)




#define DSADC_RESA0 (DSADC_CH0_RESA)


#define DSADC_CH0_RESM (*(volatile Ifx_DSADC_CH_RESM*)0xF0024130u)




#define DSADC_RESM0 (DSADC_CH0_RESM)


#define DSADC_CH0_TSTMP (*(volatile Ifx_DSADC_CH_TSTMP*)0xF0024150u)




#define DSADC_TSTMP0 (DSADC_CH0_TSTMP)


#define DSADC_CH1_BOUNDSEL (*(volatile Ifx_DSADC_CH_BOUNDSEL*)0xF0024228u)




#define DSADC_BOUNDSEL1 (DSADC_CH1_BOUNDSEL)


#define DSADC_CH1_CGSYNC (*(volatile Ifx_DSADC_CH_CGSYNC*)0xF00242A0u)




#define DSADC_CGSYNC1 (DSADC_CH1_CGSYNC)


#define DSADC_CH1_DICFG (*(volatile Ifx_DSADC_CH_DICFG*)0xF0024208u)




#define DSADC_DICFG1 (DSADC_CH1_DICFG)


#define DSADC_CH1_FCFGA (*(volatile Ifx_DSADC_CH_FCFGA*)0xF0024218u)




#define DSADC_FCFGA1 (DSADC_CH1_FCFGA)


#define DSADC_CH1_FCFGC (*(volatile Ifx_DSADC_CH_FCFGC*)0xF0024214u)




#define DSADC_FCFGC1 (DSADC_CH1_FCFGC)


#define DSADC_CH1_FCFGM (*(volatile Ifx_DSADC_CH_FCFGM*)0xF0024210u)




#define DSADC_FCFGM1 (DSADC_CH1_FCFGM)


#define DSADC_CH1_ICCFG (*(volatile Ifx_DSADC_CH_ICCFG*)0xF00242D0u)




#define DSADC_ICCFG1 (DSADC_CH1_ICCFG)


#define DSADC_CH1_IWCTR (*(volatile Ifx_DSADC_CH_IWCTR*)0xF0024220u)




#define DSADC_IWCTR1 (DSADC_CH1_IWCTR)


#define DSADC_CH1_MODCFG (*(volatile Ifx_DSADC_CH_MODCFG*)0xF0024200u)




#define DSADC_MODCFG1 (DSADC_CH1_MODCFG)


#define DSADC_CH1_OFFM (*(volatile Ifx_DSADC_CH_OFFM*)0xF0024238u)




#define DSADC_OFFM1 (DSADC_CH1_OFFM)


#define DSADC_CH1_RECTCFG (*(volatile Ifx_DSADC_CH_RECTCFG*)0xF00242A8u)




#define DSADC_RECTCFG1 (DSADC_CH1_RECTCFG)


#define DSADC_CH1_RESA (*(volatile Ifx_DSADC_CH_RESA*)0xF0024240u)




#define DSADC_RESA1 (DSADC_CH1_RESA)


#define DSADC_CH1_RESM (*(volatile Ifx_DSADC_CH_RESM*)0xF0024230u)




#define DSADC_RESM1 (DSADC_CH1_RESM)


#define DSADC_CH1_TSTMP (*(volatile Ifx_DSADC_CH_TSTMP*)0xF0024250u)




#define DSADC_TSTMP1 (DSADC_CH1_TSTMP)


#define DSADC_CH2_BOUNDSEL (*(volatile Ifx_DSADC_CH_BOUNDSEL*)0xF0024328u)




#define DSADC_BOUNDSEL2 (DSADC_CH2_BOUNDSEL)


#define DSADC_CH2_CGSYNC (*(volatile Ifx_DSADC_CH_CGSYNC*)0xF00243A0u)




#define DSADC_CGSYNC2 (DSADC_CH2_CGSYNC)


#define DSADC_CH2_DICFG (*(volatile Ifx_DSADC_CH_DICFG*)0xF0024308u)




#define DSADC_DICFG2 (DSADC_CH2_DICFG)


#define DSADC_CH2_FCFGA (*(volatile Ifx_DSADC_CH_FCFGA*)0xF0024318u)




#define DSADC_FCFGA2 (DSADC_CH2_FCFGA)


#define DSADC_CH2_FCFGC (*(volatile Ifx_DSADC_CH_FCFGC*)0xF0024314u)




#define DSADC_FCFGC2 (DSADC_CH2_FCFGC)


#define DSADC_CH2_FCFGM (*(volatile Ifx_DSADC_CH_FCFGM*)0xF0024310u)




#define DSADC_FCFGM2 (DSADC_CH2_FCFGM)


#define DSADC_CH2_ICCFG (*(volatile Ifx_DSADC_CH_ICCFG*)0xF00243D0u)




#define DSADC_ICCFG2 (DSADC_CH2_ICCFG)


#define DSADC_CH2_IWCTR (*(volatile Ifx_DSADC_CH_IWCTR*)0xF0024320u)




#define DSADC_IWCTR2 (DSADC_CH2_IWCTR)


#define DSADC_CH2_MODCFG (*(volatile Ifx_DSADC_CH_MODCFG*)0xF0024300u)




#define DSADC_MODCFG2 (DSADC_CH2_MODCFG)


#define DSADC_CH2_OFFM (*(volatile Ifx_DSADC_CH_OFFM*)0xF0024338u)




#define DSADC_OFFM2 (DSADC_CH2_OFFM)


#define DSADC_CH2_RECTCFG (*(volatile Ifx_DSADC_CH_RECTCFG*)0xF00243A8u)




#define DSADC_RECTCFG2 (DSADC_CH2_RECTCFG)


#define DSADC_CH2_RESA (*(volatile Ifx_DSADC_CH_RESA*)0xF0024340u)




#define DSADC_RESA2 (DSADC_CH2_RESA)


#define DSADC_CH2_RESM (*(volatile Ifx_DSADC_CH_RESM*)0xF0024330u)




#define DSADC_RESM2 (DSADC_CH2_RESM)


#define DSADC_CH2_TSTMP (*(volatile Ifx_DSADC_CH_TSTMP*)0xF0024350u)




#define DSADC_TSTMP2 (DSADC_CH2_TSTMP)


#define DSADC_CH3_BOUNDSEL (*(volatile Ifx_DSADC_CH_BOUNDSEL*)0xF0024428u)




#define DSADC_BOUNDSEL3 (DSADC_CH3_BOUNDSEL)


#define DSADC_CH3_CGSYNC (*(volatile Ifx_DSADC_CH_CGSYNC*)0xF00244A0u)




#define DSADC_CGSYNC3 (DSADC_CH3_CGSYNC)


#define DSADC_CH3_DICFG (*(volatile Ifx_DSADC_CH_DICFG*)0xF0024408u)




#define DSADC_DICFG3 (DSADC_CH3_DICFG)


#define DSADC_CH3_FCFGA (*(volatile Ifx_DSADC_CH_FCFGA*)0xF0024418u)




#define DSADC_FCFGA3 (DSADC_CH3_FCFGA)


#define DSADC_CH3_FCFGC (*(volatile Ifx_DSADC_CH_FCFGC*)0xF0024414u)




#define DSADC_FCFGC3 (DSADC_CH3_FCFGC)


#define DSADC_CH3_FCFGM (*(volatile Ifx_DSADC_CH_FCFGM*)0xF0024410u)




#define DSADC_FCFGM3 (DSADC_CH3_FCFGM)


#define DSADC_CH3_ICCFG (*(volatile Ifx_DSADC_CH_ICCFG*)0xF00244D0u)




#define DSADC_ICCFG3 (DSADC_CH3_ICCFG)


#define DSADC_CH3_IWCTR (*(volatile Ifx_DSADC_CH_IWCTR*)0xF0024420u)




#define DSADC_IWCTR3 (DSADC_CH3_IWCTR)


#define DSADC_CH3_MODCFG (*(volatile Ifx_DSADC_CH_MODCFG*)0xF0024400u)




#define DSADC_MODCFG3 (DSADC_CH3_MODCFG)


#define DSADC_CH3_OFFM (*(volatile Ifx_DSADC_CH_OFFM*)0xF0024438u)




#define DSADC_OFFM3 (DSADC_CH3_OFFM)


#define DSADC_CH3_RECTCFG (*(volatile Ifx_DSADC_CH_RECTCFG*)0xF00244A8u)




#define DSADC_RECTCFG3 (DSADC_CH3_RECTCFG)


#define DSADC_CH3_RESA (*(volatile Ifx_DSADC_CH_RESA*)0xF0024440u)




#define DSADC_RESA3 (DSADC_CH3_RESA)


#define DSADC_CH3_RESM (*(volatile Ifx_DSADC_CH_RESM*)0xF0024430u)




#define DSADC_RESM3 (DSADC_CH3_RESM)


#define DSADC_CH3_TSTMP (*(volatile Ifx_DSADC_CH_TSTMP*)0xF0024450u)




#define DSADC_TSTMP3 (DSADC_CH3_TSTMP)


#define DSADC_CH4_BOUNDSEL (*(volatile Ifx_DSADC_CH_BOUNDSEL*)0xF0024528u)




#define DSADC_BOUNDSEL4 (DSADC_CH4_BOUNDSEL)


#define DSADC_CH4_CGSYNC (*(volatile Ifx_DSADC_CH_CGSYNC*)0xF00245A0u)




#define DSADC_CGSYNC4 (DSADC_CH4_CGSYNC)


#define DSADC_CH4_DICFG (*(volatile Ifx_DSADC_CH_DICFG*)0xF0024508u)




#define DSADC_DICFG4 (DSADC_CH4_DICFG)


#define DSADC_CH4_FCFGA (*(volatile Ifx_DSADC_CH_FCFGA*)0xF0024518u)




#define DSADC_FCFGA4 (DSADC_CH4_FCFGA)


#define DSADC_CH4_FCFGC (*(volatile Ifx_DSADC_CH_FCFGC*)0xF0024514u)




#define DSADC_FCFGC4 (DSADC_CH4_FCFGC)


#define DSADC_CH4_FCFGM (*(volatile Ifx_DSADC_CH_FCFGM*)0xF0024510u)




#define DSADC_FCFGM4 (DSADC_CH4_FCFGM)


#define DSADC_CH4_ICCFG (*(volatile Ifx_DSADC_CH_ICCFG*)0xF00245D0u)




#define DSADC_ICCFG4 (DSADC_CH4_ICCFG)


#define DSADC_CH4_IWCTR (*(volatile Ifx_DSADC_CH_IWCTR*)0xF0024520u)




#define DSADC_IWCTR4 (DSADC_CH4_IWCTR)


#define DSADC_CH4_MODCFG (*(volatile Ifx_DSADC_CH_MODCFG*)0xF0024500u)




#define DSADC_MODCFG4 (DSADC_CH4_MODCFG)


#define DSADC_CH4_OFFM (*(volatile Ifx_DSADC_CH_OFFM*)0xF0024538u)




#define DSADC_OFFM4 (DSADC_CH4_OFFM)


#define DSADC_CH4_RECTCFG (*(volatile Ifx_DSADC_CH_RECTCFG*)0xF00245A8u)




#define DSADC_RECTCFG4 (DSADC_CH4_RECTCFG)


#define DSADC_CH4_RESA (*(volatile Ifx_DSADC_CH_RESA*)0xF0024540u)




#define DSADC_RESA4 (DSADC_CH4_RESA)


#define DSADC_CH4_RESM (*(volatile Ifx_DSADC_CH_RESM*)0xF0024530u)




#define DSADC_RESM4 (DSADC_CH4_RESM)


#define DSADC_CH4_TSTMP (*(volatile Ifx_DSADC_CH_TSTMP*)0xF0024550u)




#define DSADC_TSTMP4 (DSADC_CH4_TSTMP)


#define DSADC_CH5_BOUNDSEL (*(volatile Ifx_DSADC_CH_BOUNDSEL*)0xF0024628u)




#define DSADC_BOUNDSEL5 (DSADC_CH5_BOUNDSEL)


#define DSADC_CH5_CGSYNC (*(volatile Ifx_DSADC_CH_CGSYNC*)0xF00246A0u)




#define DSADC_CGSYNC5 (DSADC_CH5_CGSYNC)


#define DSADC_CH5_DICFG (*(volatile Ifx_DSADC_CH_DICFG*)0xF0024608u)




#define DSADC_DICFG5 (DSADC_CH5_DICFG)


#define DSADC_CH5_FCFGA (*(volatile Ifx_DSADC_CH_FCFGA*)0xF0024618u)




#define DSADC_FCFGA5 (DSADC_CH5_FCFGA)


#define DSADC_CH5_FCFGC (*(volatile Ifx_DSADC_CH_FCFGC*)0xF0024614u)




#define DSADC_FCFGC5 (DSADC_CH5_FCFGC)


#define DSADC_CH5_FCFGM (*(volatile Ifx_DSADC_CH_FCFGM*)0xF0024610u)




#define DSADC_FCFGM5 (DSADC_CH5_FCFGM)


#define DSADC_CH5_ICCFG (*(volatile Ifx_DSADC_CH_ICCFG*)0xF00246D0u)




#define DSADC_ICCFG5 (DSADC_CH5_ICCFG)


#define DSADC_CH5_IWCTR (*(volatile Ifx_DSADC_CH_IWCTR*)0xF0024620u)




#define DSADC_IWCTR5 (DSADC_CH5_IWCTR)


#define DSADC_CH5_MODCFG (*(volatile Ifx_DSADC_CH_MODCFG*)0xF0024600u)




#define DSADC_MODCFG5 (DSADC_CH5_MODCFG)


#define DSADC_CH5_OFFM (*(volatile Ifx_DSADC_CH_OFFM*)0xF0024638u)




#define DSADC_OFFM5 (DSADC_CH5_OFFM)


#define DSADC_CH5_RECTCFG (*(volatile Ifx_DSADC_CH_RECTCFG*)0xF00246A8u)




#define DSADC_RECTCFG5 (DSADC_CH5_RECTCFG)


#define DSADC_CH5_RESA (*(volatile Ifx_DSADC_CH_RESA*)0xF0024640u)




#define DSADC_RESA5 (DSADC_CH5_RESA)


#define DSADC_CH5_RESM (*(volatile Ifx_DSADC_CH_RESM*)0xF0024630u)




#define DSADC_RESM5 (DSADC_CH5_RESM)


#define DSADC_CH5_TSTMP (*(volatile Ifx_DSADC_CH_TSTMP*)0xF0024650u)




#define DSADC_TSTMP5 (DSADC_CH5_TSTMP)


#define DSADC_CLC (*(volatile Ifx_DSADC_CLC*)0xF0024000u)


#define DSADC_EVFLAG (*(volatile Ifx_DSADC_EVFLAG*)0xF00240E0u)


#define DSADC_EVFLAGCLR (*(volatile Ifx_DSADC_EVFLAGCLR*)0xF00240E4u)


#define DSADC_GLOBCFG (*(volatile Ifx_DSADC_GLOBCFG*)0xF0024080u)


#define DSADC_GLOBRC (*(volatile Ifx_DSADC_GLOBRC*)0xF0024088u)


#define DSADC_GLOBVCMH0 (*(volatile Ifx_DSADC_GLOBVCMH0*)0xF00240B0u)


#define DSADC_GLOBVCMH1 (*(volatile Ifx_DSADC_GLOBVCMH1*)0xF00240B4u)


#define DSADC_GLOBVCMH2 (*(volatile Ifx_DSADC_GLOBVCMH2*)0xF00240B8u)


#define DSADC_ID (*(volatile Ifx_DSADC_ID*)0xF0024008u)


#define DSADC_IGCFG (*(volatile Ifx_DSADC_IGCFG*)0xF00240D0u)


#define DSADC_KRST0 (*(volatile Ifx_DSADC_KRST0*)0xF0024034u)


#define DSADC_KRST1 (*(volatile Ifx_DSADC_KRST1*)0xF0024030u)


#define DSADC_KRSTCLR (*(volatile Ifx_DSADC_KRSTCLR*)0xF002402Cu)


#define DSADC_OCS (*(volatile Ifx_DSADC_OCS*)0xF0024028u)
# 36 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_reg.h" 2 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxEbcu_reg.h" 1 3
# 34 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxEbcu_reg.h" 3
#define IFXEBCU_REG_H 1

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxEbcu_regdef.h" 1 3
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxEbcu_regdef.h" 3
#define IFXEBCU_REGDEF_H 1







typedef struct _Ifx_EBCU_ACCEN0_Bits
{
    volatile unsigned int EN0:1;
    volatile unsigned int EN1:1;
    volatile unsigned int EN2:1;
    volatile unsigned int EN3:1;
    volatile unsigned int EN4:1;
    volatile unsigned int EN5:1;
    volatile unsigned int EN6:1;
    volatile unsigned int EN7:1;
    volatile unsigned int EN8:1;
    volatile unsigned int EN9:1;
    volatile unsigned int EN10:1;
    volatile unsigned int EN11:1;
    volatile unsigned int EN12:1;
    volatile unsigned int EN13:1;
    volatile unsigned int EN14:1;
    volatile unsigned int EN15:1;
    volatile unsigned int EN16:1;
    volatile unsigned int EN17:1;
    volatile unsigned int EN18:1;
    volatile unsigned int EN19:1;
    volatile unsigned int EN20:1;
    volatile unsigned int EN21:1;
    volatile unsigned int EN22:1;
    volatile unsigned int EN23:1;
    volatile unsigned int EN24:1;
    volatile unsigned int EN25:1;
    volatile unsigned int EN26:1;
    volatile unsigned int EN27:1;
    volatile unsigned int EN28:1;
    volatile unsigned int EN29:1;
    volatile unsigned int EN30:1;
    volatile unsigned int EN31:1;
} Ifx_EBCU_ACCEN0_Bits;


typedef struct _Ifx_EBCU_ACCEN1_Bits
{
    volatile unsigned int reserved_0:32;
} Ifx_EBCU_ACCEN1_Bits;


typedef struct _Ifx_EBCU_CON_Bits
{
    volatile unsigned int TOUT:16;
    volatile unsigned int DBG:1;
    volatile unsigned int reserved_17:7;
    volatile unsigned int SPC:8;
} Ifx_EBCU_CON_Bits;


typedef struct _Ifx_EBCU_EADD_Bits
{
    volatile unsigned int FPIADR:32;
} Ifx_EBCU_EADD_Bits;


typedef struct _Ifx_EBCU_ECON_Bits
{
    volatile unsigned int ERRCNT:14;
    volatile unsigned int TOUT:1;
    volatile unsigned int RDY:1;
    volatile unsigned int ABT:1;
    volatile unsigned int ACK:2;
    volatile unsigned int SVM:1;
    volatile unsigned int WRN:1;
    volatile unsigned int RDN:1;
    volatile unsigned int TAG:6;
    volatile unsigned int OPC:4;
} Ifx_EBCU_ECON_Bits;


typedef struct _Ifx_EBCU_EDAT_Bits
{
    volatile unsigned int FPIDAT:32;
} Ifx_EBCU_EDAT_Bits;


typedef struct _Ifx_EBCU_ID_Bits
{
    volatile unsigned int MOD_REV:8;
    volatile unsigned int MODNUMBER:8;
    volatile unsigned int reserved_16:16;
} Ifx_EBCU_ID_Bits;


typedef struct _Ifx_EBCU_PRIOH_Bits
{
    volatile unsigned int MASTER8:4;
    volatile unsigned int MASTER9:4;
    volatile unsigned int MASTER10:4;
    volatile unsigned int MASTER11:4;
    volatile unsigned int MASTER12:4;
    volatile unsigned int MASTER13:4;
    volatile unsigned int MASTER14:4;
    volatile unsigned int MASTER15:4;
} Ifx_EBCU_PRIOH_Bits;


typedef struct _Ifx_EBCU_PRIOL_Bits
{
    volatile unsigned int MASTER0:4;
    volatile unsigned int MASTER1:4;
    volatile unsigned int MASTER2:4;
    volatile unsigned int MASTER3:4;
    volatile unsigned int MASTER4:4;
    volatile unsigned int MASTER5:4;
    volatile unsigned int MASTER6:4;
    volatile unsigned int MASTER7:4;
} Ifx_EBCU_PRIOL_Bits;







typedef union
{
    unsigned int U;
    signed int I;
    Ifx_EBCU_ACCEN0_Bits B;
} Ifx_EBCU_ACCEN0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_EBCU_ACCEN1_Bits B;
} Ifx_EBCU_ACCEN1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_EBCU_CON_Bits B;
} Ifx_EBCU_CON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_EBCU_EADD_Bits B;
} Ifx_EBCU_EADD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_EBCU_ECON_Bits B;
} Ifx_EBCU_ECON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_EBCU_EDAT_Bits B;
} Ifx_EBCU_EDAT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_EBCU_ID_Bits B;
} Ifx_EBCU_ID;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_EBCU_PRIOH_Bits B;
} Ifx_EBCU_PRIOH;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_EBCU_PRIOL_Bits B;
} Ifx_EBCU_PRIOL;
# 243 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxEbcu_regdef.h" 3
typedef volatile struct _Ifx_EBCU
{
    unsigned char reserved_0[8];
    Ifx_EBCU_ID ID;
    unsigned char reserved_C[4];
    Ifx_EBCU_CON CON;
    Ifx_EBCU_PRIOH PRIOH;
    Ifx_EBCU_PRIOL PRIOL;
    unsigned char reserved_1C[4];
    Ifx_EBCU_ECON ECON;
    Ifx_EBCU_EADD EADD;
    Ifx_EBCU_EDAT EDAT;
    unsigned char reserved_2C[204];
    Ifx_EBCU_ACCEN1 ACCEN1;
    Ifx_EBCU_ACCEN0 ACCEN0;
} Ifx_EBCU;
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxEbcu_reg.h" 2 3





#define MODULE_EBCU0 (*(Ifx_EBCU*)0xF90E0100u)







#define EBCU0_ACCEN0 (*(volatile Ifx_EBCU_ACCEN0*)0xF90E01FCu)




#define EBCU_ACCEN0 (EBCU0_ACCEN0)


#define EBCU0_ACCEN1 (*(volatile Ifx_EBCU_ACCEN1*)0xF90E01F8u)




#define EBCU_ACCEN1 (EBCU0_ACCEN1)


#define EBCU0_CON (*(volatile Ifx_EBCU_CON*)0xF90E0110u)




#define EBCU_CON (EBCU0_CON)


#define EBCU0_EADD (*(volatile Ifx_EBCU_EADD*)0xF90E0124u)




#define EBCU_EADD (EBCU0_EADD)


#define EBCU0_ECON (*(volatile Ifx_EBCU_ECON*)0xF90E0120u)




#define EBCU_ECON (EBCU0_ECON)


#define EBCU0_EDAT (*(volatile Ifx_EBCU_EDAT*)0xF90E0128u)




#define EBCU_EDAT (EBCU0_EDAT)


#define EBCU0_ID (*(volatile Ifx_EBCU_ID*)0xF90E0108u)




#define EBCU_ID (EBCU0_ID)


#define EBCU0_PRIOH (*(volatile Ifx_EBCU_PRIOH*)0xF90E0114u)




#define EBCU_PRIOH (EBCU0_PRIOH)


#define EBCU0_PRIOL (*(volatile Ifx_EBCU_PRIOL*)0xF90E0118u)




#define EBCU_PRIOL (EBCU0_PRIOL)
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_reg.h" 2 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxEmem_reg.h" 1 3
# 34 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxEmem_reg.h" 3
#define IFXEMEM_REG_H 1

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxEmem_regdef.h" 1 3
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxEmem_regdef.h" 3
#define IFXEMEM_REGDEF_H 1







typedef struct _Ifx_EMEM_CLC_Bits
{
    volatile unsigned int DISR:1;
    volatile unsigned int DISS:1;
    volatile unsigned int reserved_2:30;
} Ifx_EMEM_CLC_Bits;


typedef struct _Ifx_EMEM_ID_Bits
{
    volatile unsigned int MOD_REV:8;
    volatile unsigned int MOD_TYPE:8;
    volatile unsigned int MODNUMBER:16;
} Ifx_EMEM_ID_Bits;


typedef struct _Ifx_EMEM_SBRCTR_Bits
{
    volatile unsigned int STBLOCK:1;
    volatile unsigned int STBULK:3;
    volatile unsigned int STBSLK:4;
    volatile unsigned int ACGSXCM0:1;
    volatile unsigned int reserved_9:3;
    volatile unsigned int ACGEN:1;
    volatile unsigned int ACGSXTM0:1;
    volatile unsigned int ACGSXTM1:1;
    volatile unsigned int reserved_15:1;
    volatile unsigned int ACGST0:1;
    volatile unsigned int ACGST1:1;
    volatile unsigned int ACGST2:1;
    volatile unsigned int ACGST3:1;
    volatile unsigned int ACGST4:1;
    volatile unsigned int ACGST5:1;
    volatile unsigned int ACGST6:1;
    volatile unsigned int ACGST7:1;
    volatile unsigned int ACGST8:1;
    volatile unsigned int ACGST9:1;
    volatile unsigned int ACGST10:1;
    volatile unsigned int ACGST11:1;
    volatile unsigned int ACGST12:1;
    volatile unsigned int ACGST13:1;
    volatile unsigned int ACGST14:1;
    volatile unsigned int ACGST15:1;
} Ifx_EMEM_SBRCTR_Bits;


typedef struct _Ifx_EMEM_TILECC_Bits
{
    volatile unsigned int T0:1;
    volatile unsigned int T1:1;
    volatile unsigned int T2:1;
    volatile unsigned int T3:1;
    volatile unsigned int T4:1;
    volatile unsigned int T5:1;
    volatile unsigned int T6:1;
    volatile unsigned int T7:1;
    volatile unsigned int T8:1;
    volatile unsigned int T9:1;
    volatile unsigned int T10:1;
    volatile unsigned int T11:1;
    volatile unsigned int T12:1;
    volatile unsigned int T13:1;
    volatile unsigned int T14:1;
    volatile unsigned int T15:1;
    volatile unsigned int XTM0:1;
    volatile unsigned int XTM1:1;
    volatile unsigned int reserved_18:14;
} Ifx_EMEM_TILECC_Bits;


typedef struct _Ifx_EMEM_TILECONFIG_Bits
{
    volatile unsigned int T0:2;
    volatile unsigned int T1:2;
    volatile unsigned int T2:2;
    volatile unsigned int T3:2;
    volatile unsigned int T4:2;
    volatile unsigned int T5:2;
    volatile unsigned int T6:2;
    volatile unsigned int T7:2;
    volatile unsigned int T8:2;
    volatile unsigned int T9:2;
    volatile unsigned int T10:2;
    volatile unsigned int T11:2;
    volatile unsigned int T12:2;
    volatile unsigned int T13:2;
    volatile unsigned int T14:2;
    volatile unsigned int T15:2;
} Ifx_EMEM_TILECONFIG_Bits;


typedef struct _Ifx_EMEM_TILECONFIGXM_Bits
{
    volatile unsigned int XCM0:2;
    volatile unsigned int reserved_2:14;
    volatile unsigned int XTM0:2;
    volatile unsigned int XTM1:2;
    volatile unsigned int reserved_20:12;
} Ifx_EMEM_TILECONFIGXM_Bits;


typedef struct _Ifx_EMEM_TILECT_Bits
{
    volatile unsigned int T0:1;
    volatile unsigned int T1:1;
    volatile unsigned int T2:1;
    volatile unsigned int T3:1;
    volatile unsigned int T4:1;
    volatile unsigned int T5:1;
    volatile unsigned int T6:1;
    volatile unsigned int T7:1;
    volatile unsigned int T8:1;
    volatile unsigned int T9:1;
    volatile unsigned int T10:1;
    volatile unsigned int T11:1;
    volatile unsigned int T12:1;
    volatile unsigned int T13:1;
    volatile unsigned int T14:1;
    volatile unsigned int T15:1;
    volatile unsigned int XTM0:1;
    volatile unsigned int XTM1:1;
    volatile unsigned int reserved_18:14;
} Ifx_EMEM_TILECT_Bits;


typedef struct _Ifx_EMEM_TILESTATE_Bits
{
    volatile unsigned int TILE0:2;
    volatile unsigned int TILE1:2;
    volatile unsigned int TILE2:2;
    volatile unsigned int TILE3:2;
    volatile unsigned int TILE4:2;
    volatile unsigned int TILE5:2;
    volatile unsigned int TILE6:2;
    volatile unsigned int TILE7:2;
    volatile unsigned int TILE8:2;
    volatile unsigned int TILE9:2;
    volatile unsigned int TILE10:2;
    volatile unsigned int TILE11:2;
    volatile unsigned int TILE12:2;
    volatile unsigned int TILE13:2;
    volatile unsigned int TILE14:2;
    volatile unsigned int TILE15:2;
} Ifx_EMEM_TILESTATE_Bits;


typedef struct _Ifx_EMEM_TILESTATEXM_Bits
{
    volatile unsigned int XCM0:2;
    volatile unsigned int reserved_2:14;
    volatile unsigned int XTM0:2;
    volatile unsigned int XTM1:2;
    volatile unsigned int reserved_20:12;
} Ifx_EMEM_TILESTATEXM_Bits;







typedef union
{
    unsigned int U;
    signed int I;
    Ifx_EMEM_CLC_Bits B;
} Ifx_EMEM_CLC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_EMEM_ID_Bits B;
} Ifx_EMEM_ID;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_EMEM_SBRCTR_Bits B;
} Ifx_EMEM_SBRCTR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_EMEM_TILECC_Bits B;
} Ifx_EMEM_TILECC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_EMEM_TILECONFIG_Bits B;
} Ifx_EMEM_TILECONFIG;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_EMEM_TILECONFIGXM_Bits B;
} Ifx_EMEM_TILECONFIGXM;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_EMEM_TILECT_Bits B;
} Ifx_EMEM_TILECT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_EMEM_TILESTATE_Bits B;
} Ifx_EMEM_TILESTATE;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_EMEM_TILESTATEXM_Bits B;
} Ifx_EMEM_TILESTATEXM;
# 286 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxEmem_regdef.h" 3
typedef volatile struct _Ifx_EMEM
{
    Ifx_EMEM_CLC CLC;
    unsigned char reserved_4[4];
    Ifx_EMEM_ID ID;
    unsigned char reserved_C[20];
    Ifx_EMEM_TILECONFIG TILECONFIG;
    Ifx_EMEM_TILECC TILECC;
    Ifx_EMEM_TILECT TILECT;
    Ifx_EMEM_TILESTATE TILESTATE;
    unsigned char reserved_30[4];
    Ifx_EMEM_SBRCTR SBRCTR;
    unsigned char reserved_38[8];
    Ifx_EMEM_TILECONFIGXM TILECONFIGXM;
    unsigned char reserved_44[8];
    Ifx_EMEM_TILESTATEXM TILESTATEXM;
    unsigned char reserved_50[176];
} Ifx_EMEM;
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxEmem_reg.h" 2 3





#define MODULE_EMEM (*(Ifx_EMEM*)0xF90E6000u)







#define EMEM_CLC (*(volatile Ifx_EMEM_CLC*)0xF90E6000u)


#define EMEM_ID (*(volatile Ifx_EMEM_ID*)0xF90E6008u)


#define EMEM_SBRCTR (*(volatile Ifx_EMEM_SBRCTR*)0xF90E6034u)


#define EMEM_TILECC (*(volatile Ifx_EMEM_TILECC*)0xF90E6024u)


#define EMEM_TILECONFIG (*(volatile Ifx_EMEM_TILECONFIG*)0xF90E6020u)


#define EMEM_TILECONFIGXM (*(volatile Ifx_EMEM_TILECONFIGXM*)0xF90E6040u)


#define EMEM_TILECT (*(volatile Ifx_EMEM_TILECT*)0xF90E6028u)


#define EMEM_TILESTATE (*(volatile Ifx_EMEM_TILESTATE*)0xF90E602Cu)


#define EMEM_TILESTATEXM (*(volatile Ifx_EMEM_TILESTATEXM*)0xF90E604Cu)
# 38 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_reg.h" 2 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxEray_reg.h" 1 3
# 34 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxEray_reg.h" 3
#define IFXERAY_REG_H 1

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxEray_regdef.h" 1 3
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxEray_regdef.h" 3
#define IFXERAY_REGDEF_H 1







typedef struct _Ifx_ERAY_ACCEN0_Bits
{
    unsigned int EN0:1;
    unsigned int EN1:1;
    unsigned int EN2:1;
    unsigned int EN3:1;
    unsigned int EN4:1;
    unsigned int EN5:1;
    unsigned int EN6:1;
    unsigned int EN7:1;
    unsigned int EN8:1;
    unsigned int EN9:1;
    unsigned int EN10:1;
    unsigned int EN11:1;
    unsigned int EN12:1;
    unsigned int EN13:1;
    unsigned int EN14:1;
    unsigned int EN15:1;
    unsigned int EN16:1;
    unsigned int EN17:1;
    unsigned int EN18:1;
    unsigned int EN19:1;
    unsigned int EN20:1;
    unsigned int EN21:1;
    unsigned int EN22:1;
    unsigned int EN23:1;
    unsigned int EN24:1;
    unsigned int EN25:1;
    unsigned int EN26:1;
    unsigned int EN27:1;
    unsigned int EN28:1;
    unsigned int EN29:1;
    unsigned int EN30:1;
    unsigned int EN31:1;
} Ifx_ERAY_ACCEN0_Bits;


typedef struct _Ifx_ERAY_ACCEN1_Bits
{
    unsigned int reserved_0:32;
} Ifx_ERAY_ACCEN1_Bits;


typedef struct _Ifx_ERAY_ACS_Bits
{
    unsigned int VFRA:1;
    unsigned int SEDA:1;
    unsigned int CEDA:1;
    unsigned int CIA:1;
    unsigned int SBVA:1;
    unsigned int reserved_5:3;
    unsigned int VFRB:1;
    unsigned int SEDB:1;
    unsigned int CEDB:1;
    unsigned int CIB:1;
    unsigned int SBVB:1;
    unsigned int reserved_13:19;
} Ifx_ERAY_ACS_Bits;


typedef struct _Ifx_ERAY_CCEV_Bits
{
    unsigned int CCFC:4;
    unsigned int reserved_4:2;
    unsigned int ERRM:2;
    unsigned int PTAC:5;
    unsigned int reserved_13:19;
} Ifx_ERAY_CCEV_Bits;


typedef struct _Ifx_ERAY_CCSV_Bits
{
    unsigned int POCS:6;
    unsigned int FSI:1;
    unsigned int HRQ:1;
    unsigned int SLM:2;
    unsigned int reserved_10:2;
    unsigned int CSNI:1;
    unsigned int CSAI:1;
    unsigned int CSI:1;
    unsigned int reserved_15:1;
    unsigned int WSV:3;
    unsigned int RCA:5;
    unsigned int PSL:6;
    unsigned int reserved_30:2;
} Ifx_ERAY_CCSV_Bits;


typedef struct _Ifx_ERAY_CLC_Bits
{
    unsigned int DISR:1;
    unsigned int DISS:1;
    unsigned int reserved_2:1;
    unsigned int EDIS:1;
    unsigned int reserved_4:4;
    unsigned int RMC:3;
    unsigned int reserved_11:21;
} Ifx_ERAY_CLC_Bits;


typedef struct _Ifx_ERAY_CREL_Bits
{
    unsigned int DAY:8;
    unsigned int MON:8;
    unsigned int YEAR:4;
    unsigned int SUBSTEP:4;
    unsigned int STEP:4;
    unsigned int REL:4;
} Ifx_ERAY_CREL_Bits;


typedef struct _Ifx_ERAY_CUST1_Bits
{
    unsigned int INT0:1;
    unsigned int OEN:1;
    unsigned int IEN:1;
    unsigned int IBFS:1;
    unsigned int IBF1PAG:1;
    unsigned int reserved_5:2;
    unsigned int IBF2PAG:1;
    unsigned int reserved_8:2;
    unsigned int RISA:2;
    unsigned int RISB:2;
    unsigned int STPWTS:2;
    unsigned int reserved_16:16;
} Ifx_ERAY_CUST1_Bits;


typedef struct _Ifx_ERAY_CUST3_Bits
{
    unsigned int TO:32;
} Ifx_ERAY_CUST3_Bits;


typedef struct _Ifx_ERAY_EIER_Bits
{
    unsigned int PEMCE:1;
    unsigned int CNAE:1;
    unsigned int SFBME:1;
    unsigned int SFOE:1;
    unsigned int CCFE:1;
    unsigned int CCLE:1;
    unsigned int EERRE:1;
    unsigned int RFOE:1;
    unsigned int EFAE:1;
    unsigned int IIBAE:1;
    unsigned int IOBAE:1;
    unsigned int MHFE:1;
    unsigned int reserved_12:4;
    unsigned int EDAE:1;
    unsigned int LTVAE:1;
    unsigned int TABAE:1;
    unsigned int reserved_19:5;
    unsigned int EDBE:1;
    unsigned int LTVBE:1;
    unsigned int TABBE:1;
    unsigned int reserved_27:5;
} Ifx_ERAY_EIER_Bits;


typedef struct _Ifx_ERAY_EIES_Bits
{
    unsigned int PEMCE:1;
    unsigned int CNAE:1;
    unsigned int SFBME:1;
    unsigned int SFOE:1;
    unsigned int CCFE:1;
    unsigned int CCLE:1;
    unsigned int EERRE:1;
    unsigned int RFOE:1;
    unsigned int EFAE:1;
    unsigned int IIBAE:1;
    unsigned int IOBAE:1;
    unsigned int MHFE:1;
    unsigned int reserved_12:4;
    unsigned int EDAE:1;
    unsigned int LTVAE:1;
    unsigned int TABAE:1;
    unsigned int reserved_19:5;
    unsigned int EDBE:1;
    unsigned int LTVBE:1;
    unsigned int TABBE:1;
    unsigned int reserved_27:5;
} Ifx_ERAY_EIES_Bits;


typedef struct _Ifx_ERAY_EILS_Bits
{
    unsigned int PEMCL:1;
    unsigned int CNAL:1;
    unsigned int SFBML:1;
    unsigned int SFOL:1;
    unsigned int CCFL:1;
    unsigned int CCLL:1;
    unsigned int EERRL:1;
    unsigned int RFOL:1;
    unsigned int EFAL:1;
    unsigned int IIBAL:1;
    unsigned int IOBAL:1;
    unsigned int MHFL:1;
    unsigned int reserved_12:4;
    unsigned int EDAL:1;
    unsigned int LTVAL:1;
    unsigned int TABAL:1;
    unsigned int reserved_19:5;
    unsigned int EDBL:1;
    unsigned int LTVBL:1;
    unsigned int TABBL:1;
    unsigned int reserved_27:5;
} Ifx_ERAY_EILS_Bits;


typedef struct _Ifx_ERAY_EIR_Bits
{
    unsigned int PEMC:1;
    unsigned int CNA:1;
    unsigned int SFBM:1;
    unsigned int SFO:1;
    unsigned int CCF:1;
    unsigned int CCL:1;
    unsigned int EERR:1;
    unsigned int RFO:1;
    unsigned int EFA:1;
    unsigned int IIBA:1;
    unsigned int IOBA:1;
    unsigned int MHF:1;
    unsigned int reserved_12:4;
    unsigned int EDA:1;
    unsigned int LTVA:1;
    unsigned int TABA:1;
    unsigned int reserved_19:5;
    unsigned int EDB:1;
    unsigned int LTVB:1;
    unsigned int TABB:1;
    unsigned int reserved_27:5;
} Ifx_ERAY_EIR_Bits;


typedef struct _Ifx_ERAY_ENDN_Bits
{
    unsigned int ETV:32;
} Ifx_ERAY_ENDN_Bits;


typedef struct _Ifx_ERAY_ESID_Bits
{
    unsigned int EID:10;
    unsigned int reserved_10:4;
    unsigned int RXEA:1;
    unsigned int RXEB:1;
    unsigned int reserved_16:16;
} Ifx_ERAY_ESID_Bits;


typedef struct _Ifx_ERAY_FCL_Bits
{
    unsigned int CL:8;
    unsigned int reserved_8:24;
} Ifx_ERAY_FCL_Bits;


typedef struct _Ifx_ERAY_FRF_Bits
{
    unsigned int CH:2;
    unsigned int FID:11;
    unsigned int reserved_13:3;
    unsigned int CYF:7;
    unsigned int RSS:1;
    unsigned int RNF:1;
    unsigned int reserved_25:7;
} Ifx_ERAY_FRF_Bits;


typedef struct _Ifx_ERAY_FRFM_Bits
{
    unsigned int reserved_0:2;
    unsigned int MFID:11;
    unsigned int reserved_13:19;
} Ifx_ERAY_FRFM_Bits;


typedef struct _Ifx_ERAY_FSR_Bits
{
    unsigned int RFNE:1;
    unsigned int RFCL:1;
    unsigned int RFO:1;
    unsigned int reserved_3:5;
    unsigned int RFFL:8;
    unsigned int reserved_16:16;
} Ifx_ERAY_FSR_Bits;


typedef struct _Ifx_ERAY_GTUC01_Bits
{
    unsigned int UT:20;
    unsigned int reserved_20:12;
} Ifx_ERAY_GTUC01_Bits;


typedef struct _Ifx_ERAY_GTUC02_Bits
{
    unsigned int MPC:14;
    unsigned int reserved_14:2;
    unsigned int SNM:4;
    unsigned int reserved_20:12;
} Ifx_ERAY_GTUC02_Bits;


typedef struct _Ifx_ERAY_GTUC03_Bits
{
    unsigned int UIOA:8;
    unsigned int UIOB:8;
    unsigned int MIOA:7;
    unsigned int reserved_23:1;
    unsigned int MIOB:7;
    unsigned int reserved_31:1;
} Ifx_ERAY_GTUC03_Bits;


typedef struct _Ifx_ERAY_GTUC04_Bits
{
    unsigned int NIT:14;
    unsigned int reserved_14:2;
    unsigned int OCS:14;
    unsigned int reserved_30:2;
} Ifx_ERAY_GTUC04_Bits;


typedef struct _Ifx_ERAY_GTUC05_Bits
{
    unsigned int DCA:8;
    unsigned int DCB:8;
    unsigned int CDD:5;
    unsigned int reserved_21:3;
    unsigned int DEC:8;
} Ifx_ERAY_GTUC05_Bits;


typedef struct _Ifx_ERAY_GTUC06_Bits
{
    unsigned int ASR:11;
    unsigned int reserved_11:5;
    unsigned int MOD:11;
    unsigned int reserved_27:5;
} Ifx_ERAY_GTUC06_Bits;


typedef struct _Ifx_ERAY_GTUC07_Bits
{
    unsigned int SSL:10;
    unsigned int reserved_10:6;
    unsigned int NSS:10;
    unsigned int reserved_26:6;
} Ifx_ERAY_GTUC07_Bits;


typedef struct _Ifx_ERAY_GTUC08_Bits
{
    unsigned int MSL:6;
    unsigned int reserved_6:10;
    unsigned int NMS:13;
    unsigned int reserved_29:3;
} Ifx_ERAY_GTUC08_Bits;


typedef struct _Ifx_ERAY_GTUC09_Bits
{
    unsigned int APO:6;
    unsigned int reserved_6:2;
    unsigned int MAPO:5;
    unsigned int reserved_13:3;
    unsigned int DSI:2;
    unsigned int reserved_18:14;
} Ifx_ERAY_GTUC09_Bits;


typedef struct _Ifx_ERAY_GTUC10_Bits
{
    unsigned int MOC:14;
    unsigned int reserved_14:2;
    unsigned int MRC:11;
    unsigned int reserved_27:5;
} Ifx_ERAY_GTUC10_Bits;


typedef struct _Ifx_ERAY_GTUC11_Bits
{
    unsigned int EOCC:2;
    unsigned int reserved_2:6;
    unsigned int ERCC:2;
    unsigned int reserved_10:6;
    unsigned int EOC:3;
    unsigned int reserved_19:5;
    unsigned int ERC:3;
    unsigned int reserved_27:5;
} Ifx_ERAY_GTUC11_Bits;


typedef struct _Ifx_ERAY_IBCM_Bits
{
    unsigned int LHSH:1;
    unsigned int LDSH:1;
    unsigned int STXRH:1;
    unsigned int reserved_3:13;
    unsigned int LHSS:1;
    unsigned int LDSS:1;
    unsigned int STXRS:1;
    unsigned int reserved_19:13;
} Ifx_ERAY_IBCM_Bits;


typedef struct _Ifx_ERAY_IBCR_Bits
{
    unsigned int IBRH:7;
    unsigned int reserved_7:8;
    unsigned int IBSYH:1;
    unsigned int IBRS:7;
    unsigned int reserved_23:8;
    unsigned int IBSYS:1;
} Ifx_ERAY_IBCR_Bits;


typedef struct _Ifx_ERAY_ID_Bits
{
    unsigned int MOD_REV:8;
    unsigned int MOD_TYPE:8;
    unsigned int MODNUMBER:16;
} Ifx_ERAY_ID_Bits;


typedef struct _Ifx_ERAY_ILE_Bits
{
    unsigned int EINT0:1;
    unsigned int EINT1:1;
    unsigned int reserved_2:30;
} Ifx_ERAY_ILE_Bits;


typedef struct _Ifx_ERAY_KRST0_Bits
{
    unsigned int RST:1;
    unsigned int RSTSTAT:1;
    unsigned int reserved_2:30;
} Ifx_ERAY_KRST0_Bits;


typedef struct _Ifx_ERAY_KRST1_Bits
{
    unsigned int RST:1;
    unsigned int reserved_1:31;
} Ifx_ERAY_KRST1_Bits;


typedef struct _Ifx_ERAY_KRSTCLR_Bits
{
    unsigned int CLR:1;
    unsigned int reserved_1:31;
} Ifx_ERAY_KRSTCLR_Bits;


typedef struct _Ifx_ERAY_LCK_Bits
{
    unsigned int CLK:8;
    unsigned int TMK:8;
    unsigned int reserved_16:16;
} Ifx_ERAY_LCK_Bits;


typedef struct _Ifx_ERAY_LDTS_Bits
{
    unsigned int LDTA:11;
    unsigned int reserved_11:5;
    unsigned int LDTB:11;
    unsigned int reserved_27:5;
} Ifx_ERAY_LDTS_Bits;


typedef struct _Ifx_ERAY_MBS_Bits
{
    unsigned int VFRA:1;
    unsigned int VFRB:1;
    unsigned int SEOA:1;
    unsigned int SEOB:1;
    unsigned int CEOA:1;
    unsigned int CEOB:1;
    unsigned int SVOA:1;
    unsigned int SVOB:1;
    unsigned int TCIA:1;
    unsigned int TCIB:1;
    unsigned int ESA:1;
    unsigned int ESB:1;
    unsigned int MLST:1;
    unsigned int reserved_13:1;
    unsigned int FTA:1;
    unsigned int FTB:1;
    unsigned int CCS:6;
    unsigned int reserved_22:2;
    unsigned int RCIS:1;
    unsigned int SFIS:1;
    unsigned int SYNS:1;
    unsigned int NFIS:1;
    unsigned int PPIS:1;
    unsigned int RESS:1;
    unsigned int reserved_30:2;
} Ifx_ERAY_MBS_Bits;


typedef struct _Ifx_ERAY_MBSC1_Bits
{
    unsigned int MBC0:1;
    unsigned int MBC1:1;
    unsigned int MBC2:1;
    unsigned int MBC3:1;
    unsigned int MBC4:1;
    unsigned int MBC5:1;
    unsigned int MBC6:1;
    unsigned int MBC7:1;
    unsigned int MBC8:1;
    unsigned int MBC9:1;
    unsigned int MBC10:1;
    unsigned int MBC11:1;
    unsigned int MBC12:1;
    unsigned int MBC13:1;
    unsigned int MBC14:1;
    unsigned int MBC15:1;
    unsigned int MBC16:1;
    unsigned int MBC17:1;
    unsigned int MBC18:1;
    unsigned int MBC19:1;
    unsigned int MBC20:1;
    unsigned int MBC21:1;
    unsigned int MBC22:1;
    unsigned int MBC23:1;
    unsigned int MBC24:1;
    unsigned int MBC25:1;
    unsigned int MBC26:1;
    unsigned int MBC27:1;
    unsigned int MBC28:1;
    unsigned int MBC29:1;
    unsigned int MBC30:1;
    unsigned int MBC31:1;
} Ifx_ERAY_MBSC1_Bits;


typedef struct _Ifx_ERAY_MBSC2_Bits
{
    unsigned int MBC32:1;
    unsigned int MBC33:1;
    unsigned int MBC34:1;
    unsigned int MBC35:1;
    unsigned int MBC36:1;
    unsigned int MBC37:1;
    unsigned int MBC38:1;
    unsigned int MBC39:1;
    unsigned int MBC40:1;
    unsigned int MBC41:1;
    unsigned int MBC42:1;
    unsigned int MBC43:1;
    unsigned int MBC44:1;
    unsigned int MBC45:1;
    unsigned int MBC46:1;
    unsigned int MBC47:1;
    unsigned int MBC48:1;
    unsigned int MBC49:1;
    unsigned int MBC50:1;
    unsigned int MBC51:1;
    unsigned int MBC52:1;
    unsigned int MBC53:1;
    unsigned int MBC54:1;
    unsigned int MBC55:1;
    unsigned int MBC56:1;
    unsigned int MBC57:1;
    unsigned int MBC58:1;
    unsigned int MBC59:1;
    unsigned int MBC60:1;
    unsigned int MBC61:1;
    unsigned int MBC62:1;
    unsigned int MBC63:1;
} Ifx_ERAY_MBSC2_Bits;


typedef struct _Ifx_ERAY_MBSC3_Bits
{
    unsigned int MBC64:1;
    unsigned int MBC65:1;
    unsigned int MBC66:1;
    unsigned int MBC67:1;
    unsigned int MBC68:1;
    unsigned int MBC69:1;
    unsigned int MBC70:1;
    unsigned int MBC71:1;
    unsigned int MBC72:1;
    unsigned int MBC73:1;
    unsigned int MBC74:1;
    unsigned int MBC75:1;
    unsigned int MBC76:1;
    unsigned int MBC77:1;
    unsigned int MBC78:1;
    unsigned int MBC79:1;
    unsigned int MBC80:1;
    unsigned int MBC81:1;
    unsigned int MBC82:1;
    unsigned int MBC83:1;
    unsigned int MBC84:1;
    unsigned int MBC85:1;
    unsigned int MBC86:1;
    unsigned int MBC87:1;
    unsigned int MBC88:1;
    unsigned int MBC89:1;
    unsigned int MBC90:1;
    unsigned int MBC91:1;
    unsigned int MBC92:1;
    unsigned int MBC93:1;
    unsigned int MBC94:1;
    unsigned int MBC95:1;
} Ifx_ERAY_MBSC3_Bits;


typedef struct _Ifx_ERAY_MBSC4_Bits
{
    unsigned int MBC96:1;
    unsigned int MBC97:1;
    unsigned int MBC98:1;
    unsigned int MBC99:1;
    unsigned int MBC100:1;
    unsigned int MBC101:1;
    unsigned int MBC102:1;
    unsigned int MBC103:1;
    unsigned int MBC104:1;
    unsigned int MBC105:1;
    unsigned int MBC106:1;
    unsigned int MBC107:1;
    unsigned int MBC108:1;
    unsigned int MBC109:1;
    unsigned int MBC110:1;
    unsigned int MBC111:1;
    unsigned int MBC112:1;
    unsigned int MBC113:1;
    unsigned int MBC114:1;
    unsigned int MBC115:1;
    unsigned int MBC116:1;
    unsigned int MBC117:1;
    unsigned int MBC118:1;
    unsigned int MBC119:1;
    unsigned int MBC120:1;
    unsigned int MBC121:1;
    unsigned int MBC122:1;
    unsigned int MBC123:1;
    unsigned int MBC124:1;
    unsigned int MBC125:1;
    unsigned int MBC126:1;
    unsigned int MBC127:1;
} Ifx_ERAY_MBSC4_Bits;


typedef struct _Ifx_ERAY_MHDC_Bits
{
    unsigned int SFDL:7;
    unsigned int reserved_7:9;
    unsigned int SLT:13;
    unsigned int reserved_29:3;
} Ifx_ERAY_MHDC_Bits;


typedef struct _Ifx_ERAY_MHDF_Bits
{
    unsigned int SNUA:1;
    unsigned int SNUB:1;
    unsigned int FNFA:1;
    unsigned int FNFB:1;
    unsigned int TBFA:1;
    unsigned int TBFB:1;
    unsigned int TNSA:1;
    unsigned int TNSB:1;
    unsigned int WAHP:1;
    unsigned int reserved_9:23;
} Ifx_ERAY_MHDF_Bits;


typedef struct _Ifx_ERAY_MHDS_Bits
{
    unsigned int EIBF:1;
    unsigned int EOBF:1;
    unsigned int EMR:1;
    unsigned int ETBF1:1;
    unsigned int ETBF2:1;
    unsigned int FMBD:1;
    unsigned int MFMB:1;
    unsigned int CRAM:1;
    unsigned int FMB:7;
    unsigned int reserved_15:1;
    unsigned int MBT:7;
    unsigned int reserved_23:1;
    unsigned int MBU:7;
    unsigned int reserved_31:1;
} Ifx_ERAY_MHDS_Bits;


typedef struct _Ifx_ERAY_MRC_Bits
{
    unsigned int FDB:8;
    unsigned int FFB:8;
    unsigned int LCB:8;
    unsigned int SEC:2;
    unsigned int SPLM:1;
    unsigned int reserved_27:5;
} Ifx_ERAY_MRC_Bits;


typedef struct _Ifx_ERAY_MSIC1_Bits
{
    unsigned int MSIP0:1;
    unsigned int MSIP1:1;
    unsigned int MSIP2:1;
    unsigned int MSIP3:1;
    unsigned int MSIP4:1;
    unsigned int MSIP5:1;
    unsigned int MSIP6:1;
    unsigned int MSIP7:1;
    unsigned int MSIP8:1;
    unsigned int MSIP9:1;
    unsigned int MSIP10:1;
    unsigned int MSIP11:1;
    unsigned int MSIP12:1;
    unsigned int MSIP13:1;
    unsigned int MSIP14:1;
    unsigned int MSIP15:1;
    unsigned int MSIP16:1;
    unsigned int MSIP17:1;
    unsigned int MSIP18:1;
    unsigned int MSIP19:1;
    unsigned int MSIP20:1;
    unsigned int MSIP21:1;
    unsigned int MSIP22:1;
    unsigned int MSIP23:1;
    unsigned int MSIP24:1;
    unsigned int MSIP25:1;
    unsigned int MSIP26:1;
    unsigned int MSIP27:1;
    unsigned int MSIP28:1;
    unsigned int MSIP29:1;
    unsigned int MSIP30:1;
    unsigned int MSIP31:1;
} Ifx_ERAY_MSIC1_Bits;


typedef struct _Ifx_ERAY_MSIC2_Bits
{
    unsigned int MSIP32:1;
    unsigned int MSIP33:1;
    unsigned int MSIP34:1;
    unsigned int MSIP35:1;
    unsigned int MSIP36:1;
    unsigned int MSIP37:1;
    unsigned int MSIP38:1;
    unsigned int MSIP39:1;
    unsigned int MSIP40:1;
    unsigned int MSIP41:1;
    unsigned int MSIP42:1;
    unsigned int MSIP43:1;
    unsigned int MSIP44:1;
    unsigned int MSIP45:1;
    unsigned int MSIP46:1;
    unsigned int MSIP47:1;
    unsigned int MSIP48:1;
    unsigned int MSIP49:1;
    unsigned int MSIP50:1;
    unsigned int MSIP51:1;
    unsigned int MSIP52:1;
    unsigned int MSIP53:1;
    unsigned int MSIP54:1;
    unsigned int MSIP55:1;
    unsigned int MSIP56:1;
    unsigned int MSIP57:1;
    unsigned int MSIP58:1;
    unsigned int MSIP59:1;
    unsigned int MSIP60:1;
    unsigned int MSIP61:1;
    unsigned int MSIP62:1;
    unsigned int MSIP63:1;
} Ifx_ERAY_MSIC2_Bits;


typedef struct _Ifx_ERAY_MSIC3_Bits
{
    unsigned int MSIP64:1;
    unsigned int MSIP65:1;
    unsigned int MSIP66:1;
    unsigned int MSIP67:1;
    unsigned int MSIP68:1;
    unsigned int MSIP69:1;
    unsigned int MSIP70:1;
    unsigned int MSIP71:1;
    unsigned int MSIP72:1;
    unsigned int MSIP73:1;
    unsigned int MSIP74:1;
    unsigned int MSIP75:1;
    unsigned int MSIP76:1;
    unsigned int MSIP77:1;
    unsigned int MSIP78:1;
    unsigned int MSIP79:1;
    unsigned int MSIP80:1;
    unsigned int MSIP81:1;
    unsigned int MSIP82:1;
    unsigned int MSIP83:1;
    unsigned int MSIP84:1;
    unsigned int MSIP85:1;
    unsigned int MSIP86:1;
    unsigned int MSIP87:1;
    unsigned int MSIP88:1;
    unsigned int MSIP89:1;
    unsigned int MSIP90:1;
    unsigned int MSIP91:1;
    unsigned int MSIP92:1;
    unsigned int MSIP93:1;
    unsigned int MSIP94:1;
    unsigned int MSIP95:1;
} Ifx_ERAY_MSIC3_Bits;


typedef struct _Ifx_ERAY_MSIC4_Bits
{
    unsigned int MSIP96:1;
    unsigned int MSIP97:1;
    unsigned int MSIP98:1;
    unsigned int MSIP99:1;
    unsigned int MSIP100:1;
    unsigned int MSIP101:1;
    unsigned int MSIP102:1;
    unsigned int MSIP103:1;
    unsigned int MSIP104:1;
    unsigned int MSIP105:1;
    unsigned int MSIP106:1;
    unsigned int MSIP107:1;
    unsigned int MSIP108:1;
    unsigned int MSIP109:1;
    unsigned int MSIP110:1;
    unsigned int MSIP111:1;
    unsigned int MSIP112:1;
    unsigned int MSIP113:1;
    unsigned int MSIP114:1;
    unsigned int MSIP115:1;
    unsigned int MSIP116:1;
    unsigned int MSIP117:1;
    unsigned int MSIP118:1;
    unsigned int MSIP119:1;
    unsigned int MSIP120:1;
    unsigned int MSIP121:1;
    unsigned int MSIP122:1;
    unsigned int MSIP123:1;
    unsigned int MSIP124:1;
    unsigned int MSIP125:1;
    unsigned int MSIP126:1;
    unsigned int MSIP127:1;
} Ifx_ERAY_MSIC4_Bits;


typedef struct _Ifx_ERAY_MTCCV_Bits
{
    unsigned int MTV:14;
    unsigned int reserved_14:2;
    unsigned int CCV:6;
    unsigned int reserved_22:10;
} Ifx_ERAY_MTCCV_Bits;


typedef struct _Ifx_ERAY_NDAT1_Bits
{
    unsigned int ND0:1;
    unsigned int ND1:1;
    unsigned int ND2:1;
    unsigned int ND3:1;
    unsigned int ND4:1;
    unsigned int ND5:1;
    unsigned int ND6:1;
    unsigned int ND7:1;
    unsigned int ND8:1;
    unsigned int ND9:1;
    unsigned int ND10:1;
    unsigned int ND11:1;
    unsigned int ND12:1;
    unsigned int ND13:1;
    unsigned int ND14:1;
    unsigned int ND15:1;
    unsigned int ND16:1;
    unsigned int ND17:1;
    unsigned int ND18:1;
    unsigned int ND19:1;
    unsigned int ND20:1;
    unsigned int ND21:1;
    unsigned int ND22:1;
    unsigned int ND23:1;
    unsigned int ND24:1;
    unsigned int ND25:1;
    unsigned int ND26:1;
    unsigned int ND27:1;
    unsigned int ND28:1;
    unsigned int ND29:1;
    unsigned int ND30:1;
    unsigned int ND31:1;
} Ifx_ERAY_NDAT1_Bits;


typedef struct _Ifx_ERAY_NDAT2_Bits
{
    unsigned int ND32:1;
    unsigned int ND33:1;
    unsigned int ND34:1;
    unsigned int ND35:1;
    unsigned int ND36:1;
    unsigned int ND37:1;
    unsigned int ND38:1;
    unsigned int ND39:1;
    unsigned int ND40:1;
    unsigned int ND41:1;
    unsigned int ND42:1;
    unsigned int ND43:1;
    unsigned int ND44:1;
    unsigned int ND45:1;
    unsigned int ND46:1;
    unsigned int ND47:1;
    unsigned int ND48:1;
    unsigned int ND49:1;
    unsigned int ND50:1;
    unsigned int ND51:1;
    unsigned int ND52:1;
    unsigned int ND53:1;
    unsigned int ND54:1;
    unsigned int ND55:1;
    unsigned int ND56:1;
    unsigned int ND57:1;
    unsigned int ND58:1;
    unsigned int ND59:1;
    unsigned int ND60:1;
    unsigned int ND61:1;
    unsigned int ND62:1;
    unsigned int ND63:1;
} Ifx_ERAY_NDAT2_Bits;


typedef struct _Ifx_ERAY_NDAT3_Bits
{
    unsigned int ND64:1;
    unsigned int ND65:1;
    unsigned int ND66:1;
    unsigned int ND67:1;
    unsigned int ND68:1;
    unsigned int ND69:1;
    unsigned int ND70:1;
    unsigned int ND71:1;
    unsigned int ND72:1;
    unsigned int ND73:1;
    unsigned int ND74:1;
    unsigned int ND75:1;
    unsigned int ND76:1;
    unsigned int ND77:1;
    unsigned int ND78:1;
    unsigned int ND79:1;
    unsigned int ND80:1;
    unsigned int ND81:1;
    unsigned int ND82:1;
    unsigned int ND83:1;
    unsigned int ND84:1;
    unsigned int ND85:1;
    unsigned int ND86:1;
    unsigned int ND87:1;
    unsigned int ND88:1;
    unsigned int ND89:1;
    unsigned int ND90:1;
    unsigned int ND91:1;
    unsigned int ND92:1;
    unsigned int ND93:1;
    unsigned int ND94:1;
    unsigned int ND95:1;
} Ifx_ERAY_NDAT3_Bits;


typedef struct _Ifx_ERAY_NDAT4_Bits
{
    unsigned int ND96:1;
    unsigned int ND97:1;
    unsigned int ND98:1;
    unsigned int ND99:1;
    unsigned int ND100:1;
    unsigned int ND101:1;
    unsigned int ND102:1;
    unsigned int ND103:1;
    unsigned int ND104:1;
    unsigned int ND105:1;
    unsigned int ND106:1;
    unsigned int ND107:1;
    unsigned int ND108:1;
    unsigned int ND109:1;
    unsigned int ND110:1;
    unsigned int ND111:1;
    unsigned int ND112:1;
    unsigned int ND113:1;
    unsigned int ND114:1;
    unsigned int ND115:1;
    unsigned int ND116:1;
    unsigned int ND117:1;
    unsigned int ND118:1;
    unsigned int ND119:1;
    unsigned int ND120:1;
    unsigned int ND121:1;
    unsigned int ND122:1;
    unsigned int ND123:1;
    unsigned int ND124:1;
    unsigned int ND125:1;
    unsigned int ND126:1;
    unsigned int ND127:1;
} Ifx_ERAY_NDAT4_Bits;


typedef struct _Ifx_ERAY_NDIC1_Bits
{
    unsigned int NDIP0:1;
    unsigned int NDIP1:1;
    unsigned int NDIP2:1;
    unsigned int NDIP3:1;
    unsigned int NDIP4:1;
    unsigned int NDIP5:1;
    unsigned int NDIP6:1;
    unsigned int NDIP7:1;
    unsigned int NDIP8:1;
    unsigned int NDIP9:1;
    unsigned int NDIP10:1;
    unsigned int NDIP11:1;
    unsigned int NDIP12:1;
    unsigned int NDIP13:1;
    unsigned int NDIP14:1;
    unsigned int NDIP15:1;
    unsigned int NDIP16:1;
    unsigned int NDIP17:1;
    unsigned int NDIP18:1;
    unsigned int NDIP19:1;
    unsigned int NDIP20:1;
    unsigned int NDIP21:1;
    unsigned int NDIP22:1;
    unsigned int NDIP23:1;
    unsigned int NDIP24:1;
    unsigned int NDIP25:1;
    unsigned int NDIP26:1;
    unsigned int NDIP27:1;
    unsigned int NDIP28:1;
    unsigned int NDIP29:1;
    unsigned int NDIP30:1;
    unsigned int NDIP31:1;
} Ifx_ERAY_NDIC1_Bits;


typedef struct _Ifx_ERAY_NDIC2_Bits
{
    unsigned int NDIP32:1;
    unsigned int NDIP33:1;
    unsigned int NDIP34:1;
    unsigned int NDIP35:1;
    unsigned int NDIP36:1;
    unsigned int NDIP37:1;
    unsigned int NDIP38:1;
    unsigned int NDIP39:1;
    unsigned int NDIP40:1;
    unsigned int NDIP41:1;
    unsigned int NDIP42:1;
    unsigned int NDIP43:1;
    unsigned int NDIP44:1;
    unsigned int NDIP45:1;
    unsigned int NDIP46:1;
    unsigned int NDIP47:1;
    unsigned int NDIP48:1;
    unsigned int NDIP49:1;
    unsigned int NDIP50:1;
    unsigned int NDIP51:1;
    unsigned int NDIP52:1;
    unsigned int NDIP53:1;
    unsigned int NDIP54:1;
    unsigned int NDIP55:1;
    unsigned int NDIP56:1;
    unsigned int NDIP57:1;
    unsigned int NDIP58:1;
    unsigned int NDIP59:1;
    unsigned int NDIP60:1;
    unsigned int NDIP61:1;
    unsigned int NDIP62:1;
    unsigned int NDIP63:1;
} Ifx_ERAY_NDIC2_Bits;


typedef struct _Ifx_ERAY_NDIC3_Bits
{
    unsigned int NDIP64:1;
    unsigned int NDIP65:1;
    unsigned int NDIP66:1;
    unsigned int NDIP67:1;
    unsigned int NDIP68:1;
    unsigned int NDIP69:1;
    unsigned int NDIP70:1;
    unsigned int NDIP71:1;
    unsigned int NDIP72:1;
    unsigned int NDIP73:1;
    unsigned int NDIP74:1;
    unsigned int NDIP75:1;
    unsigned int NDIP76:1;
    unsigned int NDIP77:1;
    unsigned int NDIP78:1;
    unsigned int NDIP79:1;
    unsigned int NDIP80:1;
    unsigned int NDIP81:1;
    unsigned int NDIP82:1;
    unsigned int NDIP83:1;
    unsigned int NDIP84:1;
    unsigned int NDIP85:1;
    unsigned int NDIP86:1;
    unsigned int NDIP87:1;
    unsigned int NDIP88:1;
    unsigned int NDIP89:1;
    unsigned int NDIP90:1;
    unsigned int NDIP91:1;
    unsigned int NDIP92:1;
    unsigned int NDIP93:1;
    unsigned int NDIP94:1;
    unsigned int NDIP95:1;
} Ifx_ERAY_NDIC3_Bits;


typedef struct _Ifx_ERAY_NDIC4_Bits
{
    unsigned int NDIP96:1;
    unsigned int NDIP97:1;
    unsigned int NDIP98:1;
    unsigned int NDIP99:1;
    unsigned int NDIP100:1;
    unsigned int NDIP101:1;
    unsigned int NDIP102:1;
    unsigned int NDIP103:1;
    unsigned int NDIP104:1;
    unsigned int NDIP105:1;
    unsigned int NDIP106:1;
    unsigned int NDIP107:1;
    unsigned int NDIP108:1;
    unsigned int NDIP109:1;
    unsigned int NDIP110:1;
    unsigned int NDIP111:1;
    unsigned int NDIP112:1;
    unsigned int NDIP113:1;
    unsigned int NDIP114:1;
    unsigned int NDIP115:1;
    unsigned int NDIP116:1;
    unsigned int NDIP117:1;
    unsigned int NDIP118:1;
    unsigned int NDIP119:1;
    unsigned int NDIP120:1;
    unsigned int NDIP121:1;
    unsigned int NDIP122:1;
    unsigned int NDIP123:1;
    unsigned int NDIP124:1;
    unsigned int NDIP125:1;
    unsigned int NDIP126:1;
    unsigned int NDIP127:1;
} Ifx_ERAY_NDIC4_Bits;


typedef struct _Ifx_ERAY_NEMC_Bits
{
    unsigned int NML:4;
    unsigned int reserved_4:28;
} Ifx_ERAY_NEMC_Bits;


typedef struct _Ifx_ERAY_NMV_Bits
{
    unsigned int NM:32;
} Ifx_ERAY_NMV_Bits;


typedef struct _Ifx_ERAY_OBCM_Bits
{
    unsigned int RHSS:1;
    unsigned int RDSS:1;
    unsigned int reserved_2:14;
    unsigned int RHSH:1;
    unsigned int RDSH:1;
    unsigned int reserved_18:14;
} Ifx_ERAY_OBCM_Bits;


typedef struct _Ifx_ERAY_OBCR_Bits
{
    unsigned int OBRS:7;
    unsigned int reserved_7:1;
    unsigned int VIEW:1;
    unsigned int REQ:1;
    unsigned int reserved_10:5;
    unsigned int OBSYS:1;
    unsigned int OBRH:7;
    unsigned int reserved_23:9;
} Ifx_ERAY_OBCR_Bits;


typedef struct _Ifx_ERAY_OCS_Bits
{
    unsigned int reserved_0:24;
    unsigned int SUS:4;
    unsigned int SUS_P:1;
    unsigned int SUSSTA:1;
    unsigned int reserved_30:2;
} Ifx_ERAY_OCS_Bits;


typedef struct _Ifx_ERAY_OCV_Bits
{
    unsigned int OCV:19;
    unsigned int reserved_19:13;
} Ifx_ERAY_OCV_Bits;


typedef struct _Ifx_ERAY_OSID_Bits
{
    unsigned int OID:10;
    unsigned int reserved_10:4;
    unsigned int RXOA:1;
    unsigned int RXOB:1;
    unsigned int reserved_16:16;
} Ifx_ERAY_OSID_Bits;


typedef struct _Ifx_ERAY_OTSS_Bits
{
    unsigned int OTGB0:2;
    unsigned int reserved_2:6;
    unsigned int OTGB1:2;
    unsigned int reserved_10:6;
    unsigned int OTGB2:1;
    unsigned int reserved_17:15;
} Ifx_ERAY_OTSS_Bits;


typedef struct _Ifx_ERAY_PRTC1_Bits
{
    unsigned int TSST:4;
    unsigned int CASM:7;
    unsigned int reserved_11:1;
    unsigned int SPP:2;
    unsigned int BRP:2;
    unsigned int RXW:9;
    unsigned int reserved_25:1;
    unsigned int RWP:6;
} Ifx_ERAY_PRTC1_Bits;


typedef struct _Ifx_ERAY_PRTC2_Bits
{
    unsigned int RXI:6;
    unsigned int reserved_6:2;
    unsigned int RXL:6;
    unsigned int reserved_14:2;
    unsigned int TXI:8;
    unsigned int TXL:6;
    unsigned int reserved_30:2;
} Ifx_ERAY_PRTC2_Bits;


typedef struct _Ifx_ERAY_RCV_Bits
{
    unsigned int RCV:12;
    unsigned int reserved_12:20;
} Ifx_ERAY_RCV_Bits;


typedef struct _Ifx_ERAY_RDDS_Bits
{
    unsigned int MDRB0:8;
    unsigned int MDRB1:8;
    unsigned int MDRB2:8;
    unsigned int MDRB3:8;
} Ifx_ERAY_RDDS_Bits;


typedef struct _Ifx_ERAY_RDHS1_Bits
{
    unsigned int FID:11;
    unsigned int reserved_11:5;
    unsigned int CYC:7;
    unsigned int reserved_23:1;
    unsigned int CHA:1;
    unsigned int CHB:1;
    unsigned int CFG:1;
    unsigned int PPIT:1;
    unsigned int TXM:1;
    unsigned int MBI:1;
    unsigned int reserved_30:2;
} Ifx_ERAY_RDHS1_Bits;


typedef struct _Ifx_ERAY_RDHS2_Bits
{
    unsigned int CRC:11;
    unsigned int reserved_11:5;
    unsigned int PLC:7;
    unsigned int reserved_23:1;
    unsigned int PLR:7;
    unsigned int reserved_31:1;
} Ifx_ERAY_RDHS2_Bits;


typedef struct _Ifx_ERAY_RDHS3_Bits
{
    unsigned int DP:11;
    unsigned int reserved_11:5;
    unsigned int RCC:6;
    unsigned int reserved_22:2;
    unsigned int RCI:1;
    unsigned int SFI:1;
    unsigned int SYN:1;
    unsigned int NFI:1;
    unsigned int PPI:1;
    unsigned int RES:1;
    unsigned int reserved_30:2;
} Ifx_ERAY_RDHS3_Bits;


typedef struct _Ifx_ERAY_SCV_Bits
{
    unsigned int SCCA:11;
    unsigned int reserved_11:5;
    unsigned int SCCB:11;
    unsigned int reserved_27:5;
} Ifx_ERAY_SCV_Bits;


typedef struct _Ifx_ERAY_SFS_Bits
{
    unsigned int VSAE:4;
    unsigned int VSAO:4;
    unsigned int VSBE:4;
    unsigned int VSBO:4;
    unsigned int MOCS:1;
    unsigned int OCLR:1;
    unsigned int MRCS:1;
    unsigned int RCLR:1;
    unsigned int reserved_20:12;
} Ifx_ERAY_SFS_Bits;


typedef struct _Ifx_ERAY_SIER_Bits
{
    unsigned int WSTE:1;
    unsigned int CASE:1;
    unsigned int CYCSE:1;
    unsigned int TXIE:1;
    unsigned int RXIE:1;
    unsigned int RFNEE:1;
    unsigned int RFCLE:1;
    unsigned int NMVCE:1;
    unsigned int TI0E:1;
    unsigned int TI1E:1;
    unsigned int TIBCE:1;
    unsigned int TOBCE:1;
    unsigned int SWEE:1;
    unsigned int SUCSE:1;
    unsigned int MBSIE:1;
    unsigned int SDSE:1;
    unsigned int WUPAE:1;
    unsigned int MTSAE:1;
    unsigned int reserved_18:6;
    unsigned int WUPBE:1;
    unsigned int MTSBE:1;
    unsigned int reserved_26:6;
} Ifx_ERAY_SIER_Bits;


typedef struct _Ifx_ERAY_SIES_Bits
{
    unsigned int WSTE:1;
    unsigned int CASE:1;
    unsigned int CYCSE:1;
    unsigned int TXIE:1;
    unsigned int RXIE:1;
    unsigned int RFNEE:1;
    unsigned int RFCLE:1;
    unsigned int NMVCE:1;
    unsigned int TI0E:1;
    unsigned int TI1E:1;
    unsigned int TIBCE:1;
    unsigned int TOBCE:1;
    unsigned int SWEE:1;
    unsigned int SUCSE:1;
    unsigned int MBSIE:1;
    unsigned int SDSE:1;
    unsigned int WUPAE:1;
    unsigned int MTSAE:1;
    unsigned int reserved_18:6;
    unsigned int WUPBE:1;
    unsigned int MTSBE:1;
    unsigned int reserved_26:6;
} Ifx_ERAY_SIES_Bits;


typedef struct _Ifx_ERAY_SILS_Bits
{
    unsigned int WSTL:1;
    unsigned int CASL:1;
    unsigned int CYCSL:1;
    unsigned int TXIL:1;
    unsigned int RXIL:1;
    unsigned int RFNEL:1;
    unsigned int RFCLL:1;
    unsigned int NMVCL:1;
    unsigned int TI0L:1;
    unsigned int TI1L:1;
    unsigned int TIBCL:1;
    unsigned int TOBCL:1;
    unsigned int SWEL:1;
    unsigned int SUCSL:1;
    unsigned int MBSIL:1;
    unsigned int SDSL:1;
    unsigned int WUPAL:1;
    unsigned int MTSAL:1;
    unsigned int reserved_18:6;
    unsigned int WUPBL:1;
    unsigned int MTSBL:1;
    unsigned int reserved_26:6;
} Ifx_ERAY_SILS_Bits;


typedef struct _Ifx_ERAY_SIR_Bits
{
    unsigned int WST:1;
    unsigned int CAS:1;
    unsigned int CYCS:1;
    unsigned int TXI:1;
    unsigned int RXI:1;
    unsigned int RFNE:1;
    unsigned int RFCL:1;
    unsigned int NMVC:1;
    unsigned int TI0:1;
    unsigned int TI1:1;
    unsigned int TIBC:1;
    unsigned int TOBC:1;
    unsigned int SWE:1;
    unsigned int SUCS:1;
    unsigned int MBSI:1;
    unsigned int SDS:1;
    unsigned int WUPA:1;
    unsigned int MTSA:1;
    unsigned int reserved_18:6;
    unsigned int WUPB:1;
    unsigned int MTSB:1;
    unsigned int reserved_26:6;
} Ifx_ERAY_SIR_Bits;


typedef struct _Ifx_ERAY_STPW1_Bits
{
    unsigned int ESWT:1;
    unsigned int SWMS:1;
    unsigned int EDGE:1;
    unsigned int SSWT:1;
    unsigned int EETP:1;
    unsigned int EINT0:1;
    unsigned int EINT1:1;
    unsigned int reserved_7:1;
    unsigned int SCCV:6;
    unsigned int reserved_14:2;
    unsigned int SMTV:14;
    unsigned int reserved_30:2;
} Ifx_ERAY_STPW1_Bits;


typedef struct _Ifx_ERAY_STPW2_Bits
{
    unsigned int SSCVA:11;
    unsigned int reserved_11:5;
    unsigned int SSCVB:11;
    unsigned int reserved_27:5;
} Ifx_ERAY_STPW2_Bits;


typedef struct _Ifx_ERAY_SUCC1_Bits
{
    unsigned int CMD:4;
    unsigned int reserved_4:3;
    unsigned int PBSY:1;
    unsigned int TXST:1;
    unsigned int TXSY:1;
    unsigned int reserved_10:1;
    unsigned int CSA:5;
    unsigned int PTA:5;
    unsigned int WUCS:1;
    unsigned int TSM:1;
    unsigned int HCSE:1;
    unsigned int MTSA:1;
    unsigned int MTSB:1;
    unsigned int CCHA:1;
    unsigned int CCHB:1;
    unsigned int reserved_28:4;
} Ifx_ERAY_SUCC1_Bits;


typedef struct _Ifx_ERAY_SUCC2_Bits
{
    unsigned int LT:21;
    unsigned int reserved_21:3;
    unsigned int LTN:4;
    unsigned int reserved_28:4;
} Ifx_ERAY_SUCC2_Bits;


typedef struct _Ifx_ERAY_SUCC3_Bits
{
    unsigned int WCP:4;
    unsigned int WCF:4;
    unsigned int reserved_8:24;
} Ifx_ERAY_SUCC3_Bits;


typedef struct _Ifx_ERAY_SWNIT_Bits
{
    unsigned int SESA:1;
    unsigned int SBSA:1;
    unsigned int TCSA:1;
    unsigned int SESB:1;
    unsigned int SBSB:1;
    unsigned int TCSB:1;
    unsigned int MTSA:1;
    unsigned int MTSB:1;
    unsigned int SENA:1;
    unsigned int SBNA:1;
    unsigned int SENB:1;
    unsigned int SBNB:1;
    unsigned int reserved_12:20;
} Ifx_ERAY_SWNIT_Bits;


typedef struct _Ifx_ERAY_T0C_Bits
{
    unsigned int T0RC:1;
    unsigned int T0MS:1;
    unsigned int reserved_2:6;
    unsigned int T0CC:7;
    unsigned int reserved_15:1;
    unsigned int T0MO:14;
    unsigned int reserved_30:2;
} Ifx_ERAY_T0C_Bits;


typedef struct _Ifx_ERAY_T1C_Bits
{
    unsigned int T1RC:1;
    unsigned int T1MS:1;
    unsigned int reserved_2:14;
    unsigned int T1MC:14;
    unsigned int reserved_30:2;
} Ifx_ERAY_T1C_Bits;


typedef struct _Ifx_ERAY_TEST1_Bits
{
    unsigned int WRTEN:1;
    unsigned int ELBE:1;
    unsigned int reserved_2:2;
    unsigned int TMC:2;
    unsigned int reserved_6:2;
    unsigned int AOA:1;
    unsigned int AOB:1;
    unsigned int reserved_10:6;
    unsigned int RXA:1;
    unsigned int RXB:1;
    unsigned int TXA:1;
    unsigned int TXB:1;
    unsigned int TXENA:1;
    unsigned int TXENB:1;
    unsigned int reserved_22:2;
    unsigned int CERA:4;
    unsigned int CERB:4;
} Ifx_ERAY_TEST1_Bits;


typedef struct _Ifx_ERAY_TEST2_Bits
{
    unsigned int RS:3;
    unsigned int reserved_3:1;
    unsigned int SSEL:3;
    unsigned int reserved_7:7;
    unsigned int WRECC:1;
    unsigned int reserved_15:17;
} Ifx_ERAY_TEST2_Bits;


typedef struct _Ifx_ERAY_TXRQ1_Bits
{
    unsigned int TXR0:1;
    unsigned int TXR1:1;
    unsigned int TXR2:1;
    unsigned int TXR3:1;
    unsigned int TXR4:1;
    unsigned int TXR5:1;
    unsigned int TXR6:1;
    unsigned int TXR7:1;
    unsigned int TXR8:1;
    unsigned int TXR9:1;
    unsigned int TXR10:1;
    unsigned int TXR11:1;
    unsigned int TXR12:1;
    unsigned int TXR13:1;
    unsigned int TXR14:1;
    unsigned int TXR15:1;
    unsigned int TXR16:1;
    unsigned int TXR17:1;
    unsigned int TXR18:1;
    unsigned int TXR19:1;
    unsigned int TXR20:1;
    unsigned int TXR21:1;
    unsigned int TXR22:1;
    unsigned int TXR23:1;
    unsigned int TXR24:1;
    unsigned int TXR25:1;
    unsigned int TXR26:1;
    unsigned int TXR27:1;
    unsigned int TXR28:1;
    unsigned int TXR29:1;
    unsigned int TXR30:1;
    unsigned int TXR31:1;
} Ifx_ERAY_TXRQ1_Bits;


typedef struct _Ifx_ERAY_TXRQ2_Bits
{
    unsigned int TXR32:1;
    unsigned int TXR33:1;
    unsigned int TXR34:1;
    unsigned int TXR35:1;
    unsigned int TXR36:1;
    unsigned int TXR37:1;
    unsigned int TXR38:1;
    unsigned int TXR39:1;
    unsigned int TXR40:1;
    unsigned int TXR41:1;
    unsigned int TXR42:1;
    unsigned int TXR43:1;
    unsigned int TXR44:1;
    unsigned int TXR45:1;
    unsigned int TXR46:1;
    unsigned int TXR47:1;
    unsigned int TXR48:1;
    unsigned int TXR49:1;
    unsigned int TXR50:1;
    unsigned int TXR51:1;
    unsigned int TXR52:1;
    unsigned int TXR53:1;
    unsigned int TXR54:1;
    unsigned int TXR55:1;
    unsigned int TXR56:1;
    unsigned int TXR57:1;
    unsigned int TXR58:1;
    unsigned int TXR59:1;
    unsigned int TXR60:1;
    unsigned int TXR61:1;
    unsigned int TXR62:1;
    unsigned int TXR63:1;
} Ifx_ERAY_TXRQ2_Bits;


typedef struct _Ifx_ERAY_TXRQ3_Bits
{
    unsigned int TXR64:1;
    unsigned int TXR65:1;
    unsigned int TXR66:1;
    unsigned int TXR67:1;
    unsigned int TXR68:1;
    unsigned int TXR69:1;
    unsigned int TXR70:1;
    unsigned int TXR71:1;
    unsigned int TXR72:1;
    unsigned int TXR73:1;
    unsigned int TXR74:1;
    unsigned int TXR75:1;
    unsigned int TXR76:1;
    unsigned int TXR77:1;
    unsigned int TXR78:1;
    unsigned int TXR79:1;
    unsigned int TXR80:1;
    unsigned int TXR81:1;
    unsigned int TXR82:1;
    unsigned int TXR83:1;
    unsigned int TXR84:1;
    unsigned int TXR85:1;
    unsigned int TXR86:1;
    unsigned int TXR87:1;
    unsigned int TXR88:1;
    unsigned int TXR89:1;
    unsigned int TXR90:1;
    unsigned int TXR91:1;
    unsigned int TXR92:1;
    unsigned int TXR93:1;
    unsigned int TXR94:1;
    unsigned int TXR95:1;
} Ifx_ERAY_TXRQ3_Bits;


typedef struct _Ifx_ERAY_TXRQ4_Bits
{
    unsigned int TXR96:1;
    unsigned int TXR97:1;
    unsigned int TXR98:1;
    unsigned int TXR99:1;
    unsigned int TXR100:1;
    unsigned int TXR101:1;
    unsigned int TXR102:1;
    unsigned int TXR103:1;
    unsigned int TXR104:1;
    unsigned int TXR105:1;
    unsigned int TXR106:1;
    unsigned int TXR107:1;
    unsigned int TXR108:1;
    unsigned int TXR109:1;
    unsigned int TXR110:1;
    unsigned int TXR111:1;
    unsigned int TXR112:1;
    unsigned int TXR113:1;
    unsigned int TXR114:1;
    unsigned int TXR115:1;
    unsigned int TXR116:1;
    unsigned int TXR117:1;
    unsigned int TXR118:1;
    unsigned int TXR119:1;
    unsigned int TXR120:1;
    unsigned int TXR121:1;
    unsigned int TXR122:1;
    unsigned int TXR123:1;
    unsigned int TXR124:1;
    unsigned int TXR125:1;
    unsigned int TXR126:1;
    unsigned int TXR127:1;
} Ifx_ERAY_TXRQ4_Bits;


typedef struct _Ifx_ERAY_WRDS_Bits
{
    unsigned int MDWB0:8;
    unsigned int MDWB1:8;
    unsigned int MDWB2:8;
    unsigned int MDWB3:8;
} Ifx_ERAY_WRDS_Bits;


typedef struct _Ifx_ERAY_WRHS1_Bits
{
    unsigned int FID:11;
    unsigned int reserved_11:5;
    unsigned int CYC:7;
    unsigned int reserved_23:1;
    unsigned int CHA:1;
    unsigned int CHB:1;
    unsigned int CFG:1;
    unsigned int PPIT:1;
    unsigned int TXM:1;
    unsigned int MBI:1;
    unsigned int reserved_30:2;
} Ifx_ERAY_WRHS1_Bits;


typedef struct _Ifx_ERAY_WRHS2_Bits
{
    unsigned int CRC:11;
    unsigned int reserved_11:5;
    unsigned int PLC:7;
    unsigned int reserved_23:9;
} Ifx_ERAY_WRHS2_Bits;


typedef struct _Ifx_ERAY_WRHS3_Bits
{
    unsigned int DP:11;
    unsigned int reserved_11:21;
} Ifx_ERAY_WRHS3_Bits;







typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_ACCEN0_Bits B;
} Ifx_ERAY_ACCEN0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_ACCEN1_Bits B;
} Ifx_ERAY_ACCEN1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_ACS_Bits B;
} Ifx_ERAY_ACS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_CCEV_Bits B;
} Ifx_ERAY_CCEV;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_CCSV_Bits B;
} Ifx_ERAY_CCSV;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_CLC_Bits B;
} Ifx_ERAY_CLC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_CREL_Bits B;
} Ifx_ERAY_CREL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_CUST1_Bits B;
} Ifx_ERAY_CUST1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_CUST3_Bits B;
} Ifx_ERAY_CUST3;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_EIER_Bits B;
} Ifx_ERAY_EIER;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_EIES_Bits B;
} Ifx_ERAY_EIES;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_EILS_Bits B;
} Ifx_ERAY_EILS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_EIR_Bits B;
} Ifx_ERAY_EIR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_ENDN_Bits B;
} Ifx_ERAY_ENDN;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_ESID_Bits B;
} Ifx_ERAY_ESID;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_FCL_Bits B;
} Ifx_ERAY_FCL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_FRF_Bits B;
} Ifx_ERAY_FRF;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_FRFM_Bits B;
} Ifx_ERAY_FRFM;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_FSR_Bits B;
} Ifx_ERAY_FSR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_GTUC01_Bits B;
} Ifx_ERAY_GTUC01;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_GTUC02_Bits B;
} Ifx_ERAY_GTUC02;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_GTUC03_Bits B;
} Ifx_ERAY_GTUC03;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_GTUC04_Bits B;
} Ifx_ERAY_GTUC04;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_GTUC05_Bits B;
} Ifx_ERAY_GTUC05;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_GTUC06_Bits B;
} Ifx_ERAY_GTUC06;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_GTUC07_Bits B;
} Ifx_ERAY_GTUC07;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_GTUC08_Bits B;
} Ifx_ERAY_GTUC08;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_GTUC09_Bits B;
} Ifx_ERAY_GTUC09;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_GTUC10_Bits B;
} Ifx_ERAY_GTUC10;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_GTUC11_Bits B;
} Ifx_ERAY_GTUC11;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_IBCM_Bits B;
} Ifx_ERAY_IBCM;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_IBCR_Bits B;
} Ifx_ERAY_IBCR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_ID_Bits B;
} Ifx_ERAY_ID;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_ILE_Bits B;
} Ifx_ERAY_ILE;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_KRST0_Bits B;
} Ifx_ERAY_KRST0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_KRST1_Bits B;
} Ifx_ERAY_KRST1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_KRSTCLR_Bits B;
} Ifx_ERAY_KRSTCLR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_LCK_Bits B;
} Ifx_ERAY_LCK;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_LDTS_Bits B;
} Ifx_ERAY_LDTS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_MBS_Bits B;
} Ifx_ERAY_MBS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_MBSC1_Bits B;
} Ifx_ERAY_MBSC1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_MBSC2_Bits B;
} Ifx_ERAY_MBSC2;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_MBSC3_Bits B;
} Ifx_ERAY_MBSC3;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_MBSC4_Bits B;
} Ifx_ERAY_MBSC4;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_MHDC_Bits B;
} Ifx_ERAY_MHDC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_MHDF_Bits B;
} Ifx_ERAY_MHDF;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_MHDS_Bits B;
} Ifx_ERAY_MHDS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_MRC_Bits B;
} Ifx_ERAY_MRC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_MSIC1_Bits B;
} Ifx_ERAY_MSIC1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_MSIC2_Bits B;
} Ifx_ERAY_MSIC2;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_MSIC3_Bits B;
} Ifx_ERAY_MSIC3;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_MSIC4_Bits B;
} Ifx_ERAY_MSIC4;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_MTCCV_Bits B;
} Ifx_ERAY_MTCCV;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_NDAT1_Bits B;
} Ifx_ERAY_NDAT1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_NDAT2_Bits B;
} Ifx_ERAY_NDAT2;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_NDAT3_Bits B;
} Ifx_ERAY_NDAT3;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_NDAT4_Bits B;
} Ifx_ERAY_NDAT4;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_NDIC1_Bits B;
} Ifx_ERAY_NDIC1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_NDIC2_Bits B;
} Ifx_ERAY_NDIC2;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_NDIC3_Bits B;
} Ifx_ERAY_NDIC3;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_NDIC4_Bits B;
} Ifx_ERAY_NDIC4;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_NEMC_Bits B;
} Ifx_ERAY_NEMC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_NMV_Bits B;
} Ifx_ERAY_NMV;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_OBCM_Bits B;
} Ifx_ERAY_OBCM;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_OBCR_Bits B;
} Ifx_ERAY_OBCR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_OCS_Bits B;
} Ifx_ERAY_OCS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_OCV_Bits B;
} Ifx_ERAY_OCV;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_OSID_Bits B;
} Ifx_ERAY_OSID;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_OTSS_Bits B;
} Ifx_ERAY_OTSS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_PRTC1_Bits B;
} Ifx_ERAY_PRTC1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_PRTC2_Bits B;
} Ifx_ERAY_PRTC2;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_RCV_Bits B;
} Ifx_ERAY_RCV;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_RDDS_Bits B;
} Ifx_ERAY_RDDS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_RDHS1_Bits B;
} Ifx_ERAY_RDHS1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_RDHS2_Bits B;
} Ifx_ERAY_RDHS2;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_RDHS3_Bits B;
} Ifx_ERAY_RDHS3;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_SCV_Bits B;
} Ifx_ERAY_SCV;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_SFS_Bits B;
} Ifx_ERAY_SFS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_SIER_Bits B;
} Ifx_ERAY_SIER;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_SIES_Bits B;
} Ifx_ERAY_SIES;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_SILS_Bits B;
} Ifx_ERAY_SILS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_SIR_Bits B;
} Ifx_ERAY_SIR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_STPW1_Bits B;
} Ifx_ERAY_STPW1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_STPW2_Bits B;
} Ifx_ERAY_STPW2;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_SUCC1_Bits B;
} Ifx_ERAY_SUCC1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_SUCC2_Bits B;
} Ifx_ERAY_SUCC2;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_SUCC3_Bits B;
} Ifx_ERAY_SUCC3;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_SWNIT_Bits B;
} Ifx_ERAY_SWNIT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_T0C_Bits B;
} Ifx_ERAY_T0C;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_T1C_Bits B;
} Ifx_ERAY_T1C;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_TEST1_Bits B;
} Ifx_ERAY_TEST1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_TEST2_Bits B;
} Ifx_ERAY_TEST2;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_TXRQ1_Bits B;
} Ifx_ERAY_TXRQ1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_TXRQ2_Bits B;
} Ifx_ERAY_TXRQ2;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_TXRQ3_Bits B;
} Ifx_ERAY_TXRQ3;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_TXRQ4_Bits B;
} Ifx_ERAY_TXRQ4;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_WRDS_Bits B;
} Ifx_ERAY_WRDS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_WRHS1_Bits B;
} Ifx_ERAY_WRHS1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_WRHS2_Bits B;
} Ifx_ERAY_WRHS2;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ERAY_WRHS3_Bits B;
} Ifx_ERAY_WRHS3;
# 2636 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxEray_regdef.h" 3
typedef volatile struct _Ifx_ERAY
{
    Ifx_ERAY_CLC CLC;
    Ifx_ERAY_CUST1 CUST1;
    Ifx_ERAY_ID ID;
    Ifx_ERAY_CUST3 CUST3;
    Ifx_ERAY_TEST1 TEST1;
    Ifx_ERAY_TEST2 TEST2;
    unsigned char reserved_18[4];
    Ifx_ERAY_LCK LCK;
    Ifx_ERAY_EIR EIR;
    Ifx_ERAY_SIR SIR;
    Ifx_ERAY_EILS EILS;
    Ifx_ERAY_SILS SILS;
    Ifx_ERAY_EIES EIES;
    Ifx_ERAY_EIER EIER;
    Ifx_ERAY_SIES SIES;
    Ifx_ERAY_SIER SIER;
    Ifx_ERAY_ILE ILE;
    Ifx_ERAY_T0C T0C;
    Ifx_ERAY_T1C T1C;
    Ifx_ERAY_STPW1 STPW1;
    Ifx_ERAY_STPW2 STPW2;
    unsigned char reserved_54[44];
    Ifx_ERAY_SUCC1 SUCC1;
    Ifx_ERAY_SUCC2 SUCC2;
    Ifx_ERAY_SUCC3 SUCC3;
    Ifx_ERAY_NEMC NEMC;
    Ifx_ERAY_PRTC1 PRTC1;
    Ifx_ERAY_PRTC2 PRTC2;
    Ifx_ERAY_MHDC MHDC;
    unsigned char reserved_9C[4];
    Ifx_ERAY_GTUC01 GTUC01;
    Ifx_ERAY_GTUC02 GTUC02;
    Ifx_ERAY_GTUC03 GTUC03;
    Ifx_ERAY_GTUC04 GTUC04;
    Ifx_ERAY_GTUC05 GTUC05;
    Ifx_ERAY_GTUC06 GTUC06;
    Ifx_ERAY_GTUC07 GTUC07;
    Ifx_ERAY_GTUC08 GTUC08;
    Ifx_ERAY_GTUC09 GTUC09;
    Ifx_ERAY_GTUC10 GTUC10;
    Ifx_ERAY_GTUC11 GTUC11;
    unsigned char reserved_CC[52];
    Ifx_ERAY_CCSV CCSV;
    Ifx_ERAY_CCEV CCEV;
    unsigned char reserved_108[8];
    Ifx_ERAY_SCV SCV;
    Ifx_ERAY_MTCCV MTCCV;
    Ifx_ERAY_RCV RCV;
    Ifx_ERAY_OCV OCV;
    Ifx_ERAY_SFS SFS;
    Ifx_ERAY_SWNIT SWNIT;
    Ifx_ERAY_ACS ACS;
    unsigned char reserved_12C[4];
    Ifx_ERAY_ESID ESID_1S[15];
    unsigned char reserved_16C[4];
    Ifx_ERAY_OSID OSID_1S[15];
    unsigned char reserved_1AC[4];
    Ifx_ERAY_NMV NMV_1S[3];
    unsigned char reserved_1BC[324];
    Ifx_ERAY_MRC MRC;
    Ifx_ERAY_FRF FRF;
    Ifx_ERAY_FRFM FRFM;
    Ifx_ERAY_FCL FCL;
    Ifx_ERAY_MHDS MHDS;
    Ifx_ERAY_LDTS LDTS;
    Ifx_ERAY_FSR FSR;
    Ifx_ERAY_MHDF MHDF;
    Ifx_ERAY_TXRQ1 TXRQ1;
    Ifx_ERAY_TXRQ2 TXRQ2;
    Ifx_ERAY_TXRQ3 TXRQ3;
    Ifx_ERAY_TXRQ4 TXRQ4;
    Ifx_ERAY_NDAT1 NDAT1;
    Ifx_ERAY_NDAT2 NDAT2;
    Ifx_ERAY_NDAT3 NDAT3;
    Ifx_ERAY_NDAT4 NDAT4;
    Ifx_ERAY_MBSC1 MBSC1;
    Ifx_ERAY_MBSC2 MBSC2;
    Ifx_ERAY_MBSC3 MBSC3;
    Ifx_ERAY_MBSC4 MBSC4;
    unsigned char reserved_350[88];
    Ifx_ERAY_NDIC1 NDIC1;
    Ifx_ERAY_NDIC2 NDIC2;
    Ifx_ERAY_NDIC3 NDIC3;
    Ifx_ERAY_NDIC4 NDIC4;
    Ifx_ERAY_MSIC1 MSIC1;
    Ifx_ERAY_MSIC2 MSIC2;
    Ifx_ERAY_MSIC3 MSIC3;
    Ifx_ERAY_MSIC4 MSIC4;
    unsigned char reserved_3C8[40];
    Ifx_ERAY_CREL CREL;
    Ifx_ERAY_ENDN ENDN;
    unsigned char reserved_3F8[8];
    Ifx_ERAY_WRDS WRDS_1S[64];
    Ifx_ERAY_WRHS1 WRHS1;
    Ifx_ERAY_WRHS2 WRHS2;
    Ifx_ERAY_WRHS3 WRHS3;
    unsigned char reserved_50C[4];
    Ifx_ERAY_IBCM IBCM;
    Ifx_ERAY_IBCR IBCR;
    unsigned char reserved_518[232];
    Ifx_ERAY_RDDS RDDS_1S[64];
    Ifx_ERAY_RDHS1 RDHS1;
    Ifx_ERAY_RDHS2 RDHS2;
    Ifx_ERAY_RDHS3 RDHS3;
    Ifx_ERAY_MBS MBS;
    Ifx_ERAY_OBCM OBCM;
    Ifx_ERAY_OBCR OBCR;
    unsigned char reserved_718[344];
    Ifx_ERAY_OTSS OTSS;
    unsigned char reserved_874[116];
    Ifx_ERAY_OCS OCS;
    Ifx_ERAY_KRSTCLR KRSTCLR;
    Ifx_ERAY_KRST1 KRST1;
    Ifx_ERAY_KRST0 KRST0;
    Ifx_ERAY_ACCEN1 ACCEN1;
    Ifx_ERAY_ACCEN0 ACCEN0;
    unsigned char reserved_900[1792];
} Ifx_ERAY;
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxEray_reg.h" 2 3





#define MODULE_ERAY0 (*(Ifx_ERAY*)0xF001C000u)







#define ERAY0_ACCEN0 (*(volatile Ifx_ERAY_ACCEN0*)0xF001C8FCu)




#define ERAY_ACCEN0 (ERAY0_ACCEN0)


#define ERAY0_ACCEN1 (*(volatile Ifx_ERAY_ACCEN1*)0xF001C8F8u)




#define ERAY_ACCEN1 (ERAY0_ACCEN1)


#define ERAY0_ACS (*(volatile Ifx_ERAY_ACS*)0xF001C128u)




#define ERAY_ACS (ERAY0_ACS)


#define ERAY0_CCEV (*(volatile Ifx_ERAY_CCEV*)0xF001C104u)




#define ERAY_CCEV (ERAY0_CCEV)


#define ERAY0_CCSV (*(volatile Ifx_ERAY_CCSV*)0xF001C100u)




#define ERAY_CCSV (ERAY0_CCSV)


#define ERAY0_CLC (*(volatile Ifx_ERAY_CLC*)0xF001C000u)




#define ERAY_CLC (ERAY0_CLC)


#define ERAY0_CREL (*(volatile Ifx_ERAY_CREL*)0xF001C3F0u)




#define ERAY_CREL (ERAY0_CREL)


#define ERAY0_CUST1 (*(volatile Ifx_ERAY_CUST1*)0xF001C004u)




#define ERAY_CUST1 (ERAY0_CUST1)


#define ERAY0_CUST3 (*(volatile Ifx_ERAY_CUST3*)0xF001C00Cu)




#define ERAY_CUST3 (ERAY0_CUST3)


#define ERAY0_EIER (*(volatile Ifx_ERAY_EIER*)0xF001C034u)




#define ERAY_EIER (ERAY0_EIER)


#define ERAY0_EIES (*(volatile Ifx_ERAY_EIES*)0xF001C030u)




#define ERAY_EIES (ERAY0_EIES)


#define ERAY0_EILS (*(volatile Ifx_ERAY_EILS*)0xF001C028u)




#define ERAY_EILS (ERAY0_EILS)


#define ERAY0_EIR (*(volatile Ifx_ERAY_EIR*)0xF001C020u)




#define ERAY_EIR (ERAY0_EIR)


#define ERAY0_ENDN (*(volatile Ifx_ERAY_ENDN*)0xF001C3F4u)




#define ERAY_ENDN (ERAY0_ENDN)




#define ERAY0_ESID_1S0 (*(volatile Ifx_ERAY_ESID*)0xF001C130u)




#define ERAY_ESID01 (ERAY0_ESID_1S0)




#define ERAY0_ESID_1S1 (*(volatile Ifx_ERAY_ESID*)0xF001C134u)




#define ERAY_ESID02 (ERAY0_ESID_1S1)




#define ERAY0_ESID_1S10 (*(volatile Ifx_ERAY_ESID*)0xF001C158u)




#define ERAY_ESID11 (ERAY0_ESID_1S10)




#define ERAY0_ESID_1S11 (*(volatile Ifx_ERAY_ESID*)0xF001C15Cu)




#define ERAY_ESID12 (ERAY0_ESID_1S11)




#define ERAY0_ESID_1S12 (*(volatile Ifx_ERAY_ESID*)0xF001C160u)




#define ERAY_ESID13 (ERAY0_ESID_1S12)




#define ERAY0_ESID_1S13 (*(volatile Ifx_ERAY_ESID*)0xF001C164u)




#define ERAY_ESID14 (ERAY0_ESID_1S13)




#define ERAY0_ESID_1S14 (*(volatile Ifx_ERAY_ESID*)0xF001C168u)




#define ERAY_ESID15 (ERAY0_ESID_1S14)




#define ERAY0_ESID_1S2 (*(volatile Ifx_ERAY_ESID*)0xF001C138u)




#define ERAY_ESID03 (ERAY0_ESID_1S2)




#define ERAY0_ESID_1S3 (*(volatile Ifx_ERAY_ESID*)0xF001C13Cu)




#define ERAY_ESID04 (ERAY0_ESID_1S3)




#define ERAY0_ESID_1S4 (*(volatile Ifx_ERAY_ESID*)0xF001C140u)




#define ERAY_ESID05 (ERAY0_ESID_1S4)




#define ERAY0_ESID_1S5 (*(volatile Ifx_ERAY_ESID*)0xF001C144u)




#define ERAY_ESID06 (ERAY0_ESID_1S5)




#define ERAY0_ESID_1S6 (*(volatile Ifx_ERAY_ESID*)0xF001C148u)




#define ERAY_ESID07 (ERAY0_ESID_1S6)




#define ERAY0_ESID_1S7 (*(volatile Ifx_ERAY_ESID*)0xF001C14Cu)




#define ERAY_ESID08 (ERAY0_ESID_1S7)




#define ERAY0_ESID_1S8 (*(volatile Ifx_ERAY_ESID*)0xF001C150u)




#define ERAY_ESID09 (ERAY0_ESID_1S8)




#define ERAY0_ESID_1S9 (*(volatile Ifx_ERAY_ESID*)0xF001C154u)




#define ERAY_ESID10 (ERAY0_ESID_1S9)


#define ERAY0_FCL (*(volatile Ifx_ERAY_FCL*)0xF001C30Cu)




#define ERAY_FCL (ERAY0_FCL)


#define ERAY0_FRF (*(volatile Ifx_ERAY_FRF*)0xF001C304u)




#define ERAY_FRF (ERAY0_FRF)


#define ERAY0_FRFM (*(volatile Ifx_ERAY_FRFM*)0xF001C308u)




#define ERAY_FRFM (ERAY0_FRFM)


#define ERAY0_FSR (*(volatile Ifx_ERAY_FSR*)0xF001C318u)




#define ERAY_FSR (ERAY0_FSR)


#define ERAY0_GTUC01 (*(volatile Ifx_ERAY_GTUC01*)0xF001C0A0u)




#define ERAY_GTUC01 (ERAY0_GTUC01)


#define ERAY0_GTUC02 (*(volatile Ifx_ERAY_GTUC02*)0xF001C0A4u)




#define ERAY_GTUC02 (ERAY0_GTUC02)


#define ERAY0_GTUC03 (*(volatile Ifx_ERAY_GTUC03*)0xF001C0A8u)




#define ERAY_GTUC03 (ERAY0_GTUC03)


#define ERAY0_GTUC04 (*(volatile Ifx_ERAY_GTUC04*)0xF001C0ACu)




#define ERAY_GTUC04 (ERAY0_GTUC04)


#define ERAY0_GTUC05 (*(volatile Ifx_ERAY_GTUC05*)0xF001C0B0u)




#define ERAY_GTUC05 (ERAY0_GTUC05)


#define ERAY0_GTUC06 (*(volatile Ifx_ERAY_GTUC06*)0xF001C0B4u)




#define ERAY_GTUC06 (ERAY0_GTUC06)


#define ERAY0_GTUC07 (*(volatile Ifx_ERAY_GTUC07*)0xF001C0B8u)




#define ERAY_GTUC07 (ERAY0_GTUC07)


#define ERAY0_GTUC08 (*(volatile Ifx_ERAY_GTUC08*)0xF001C0BCu)




#define ERAY_GTUC08 (ERAY0_GTUC08)


#define ERAY0_GTUC09 (*(volatile Ifx_ERAY_GTUC09*)0xF001C0C0u)




#define ERAY_GTUC09 (ERAY0_GTUC09)


#define ERAY0_GTUC10 (*(volatile Ifx_ERAY_GTUC10*)0xF001C0C4u)




#define ERAY_GTUC10 (ERAY0_GTUC10)


#define ERAY0_GTUC11 (*(volatile Ifx_ERAY_GTUC11*)0xF001C0C8u)




#define ERAY_GTUC11 (ERAY0_GTUC11)


#define ERAY0_IBCM (*(volatile Ifx_ERAY_IBCM*)0xF001C510u)




#define ERAY_IBCM (ERAY0_IBCM)


#define ERAY0_IBCR (*(volatile Ifx_ERAY_IBCR*)0xF001C514u)




#define ERAY_IBCR (ERAY0_IBCR)


#define ERAY0_ID (*(volatile Ifx_ERAY_ID*)0xF001C008u)




#define ERAY_ID (ERAY0_ID)


#define ERAY0_ILE (*(volatile Ifx_ERAY_ILE*)0xF001C040u)




#define ERAY_ILE (ERAY0_ILE)


#define ERAY0_KRST0 (*(volatile Ifx_ERAY_KRST0*)0xF001C8F4u)




#define ERAY_KRST0 (ERAY0_KRST0)


#define ERAY0_KRST1 (*(volatile Ifx_ERAY_KRST1*)0xF001C8F0u)




#define ERAY_KRST1 (ERAY0_KRST1)


#define ERAY0_KRSTCLR (*(volatile Ifx_ERAY_KRSTCLR*)0xF001C8ECu)




#define ERAY_KRSTCLR (ERAY0_KRSTCLR)


#define ERAY0_LCK (*(volatile Ifx_ERAY_LCK*)0xF001C01Cu)




#define ERAY_LCK (ERAY0_LCK)


#define ERAY0_LDTS (*(volatile Ifx_ERAY_LDTS*)0xF001C314u)




#define ERAY_LDTS (ERAY0_LDTS)


#define ERAY0_MBS (*(volatile Ifx_ERAY_MBS*)0xF001C70Cu)




#define ERAY_MBS (ERAY0_MBS)


#define ERAY0_MBSC1 (*(volatile Ifx_ERAY_MBSC1*)0xF001C340u)




#define ERAY_MBSC1 (ERAY0_MBSC1)


#define ERAY0_MBSC2 (*(volatile Ifx_ERAY_MBSC2*)0xF001C344u)




#define ERAY_MBSC2 (ERAY0_MBSC2)


#define ERAY0_MBSC3 (*(volatile Ifx_ERAY_MBSC3*)0xF001C348u)




#define ERAY_MBSC3 (ERAY0_MBSC3)


#define ERAY0_MBSC4 (*(volatile Ifx_ERAY_MBSC4*)0xF001C34Cu)




#define ERAY_MBSC4 (ERAY0_MBSC4)


#define ERAY0_MHDC (*(volatile Ifx_ERAY_MHDC*)0xF001C098u)




#define ERAY_MHDC (ERAY0_MHDC)


#define ERAY0_MHDF (*(volatile Ifx_ERAY_MHDF*)0xF001C31Cu)




#define ERAY_MHDF (ERAY0_MHDF)


#define ERAY0_MHDS (*(volatile Ifx_ERAY_MHDS*)0xF001C310u)




#define ERAY_MHDS (ERAY0_MHDS)


#define ERAY0_MRC (*(volatile Ifx_ERAY_MRC*)0xF001C300u)




#define ERAY_MRC (ERAY0_MRC)


#define ERAY0_MSIC1 (*(volatile Ifx_ERAY_MSIC1*)0xF001C3B8u)




#define ERAY_MSIC1 (ERAY0_MSIC1)


#define ERAY0_MSIC2 (*(volatile Ifx_ERAY_MSIC2*)0xF001C3BCu)




#define ERAY_MSIC2 (ERAY0_MSIC2)


#define ERAY0_MSIC3 (*(volatile Ifx_ERAY_MSIC3*)0xF001C3C0u)




#define ERAY_MSIC3 (ERAY0_MSIC3)


#define ERAY0_MSIC4 (*(volatile Ifx_ERAY_MSIC4*)0xF001C3C4u)




#define ERAY_MSIC4 (ERAY0_MSIC4)


#define ERAY0_MTCCV (*(volatile Ifx_ERAY_MTCCV*)0xF001C114u)




#define ERAY_MTCCV (ERAY0_MTCCV)


#define ERAY0_NDAT1 (*(volatile Ifx_ERAY_NDAT1*)0xF001C330u)




#define ERAY_NDAT1 (ERAY0_NDAT1)


#define ERAY0_NDAT2 (*(volatile Ifx_ERAY_NDAT2*)0xF001C334u)




#define ERAY_NDAT2 (ERAY0_NDAT2)


#define ERAY0_NDAT3 (*(volatile Ifx_ERAY_NDAT3*)0xF001C338u)




#define ERAY_NDAT3 (ERAY0_NDAT3)


#define ERAY0_NDAT4 (*(volatile Ifx_ERAY_NDAT4*)0xF001C33Cu)




#define ERAY_NDAT4 (ERAY0_NDAT4)


#define ERAY0_NDIC1 (*(volatile Ifx_ERAY_NDIC1*)0xF001C3A8u)




#define ERAY_NDIC1 (ERAY0_NDIC1)


#define ERAY0_NDIC2 (*(volatile Ifx_ERAY_NDIC2*)0xF001C3ACu)




#define ERAY_NDIC2 (ERAY0_NDIC2)


#define ERAY0_NDIC3 (*(volatile Ifx_ERAY_NDIC3*)0xF001C3B0u)




#define ERAY_NDIC3 (ERAY0_NDIC3)


#define ERAY0_NDIC4 (*(volatile Ifx_ERAY_NDIC4*)0xF001C3B4u)




#define ERAY_NDIC4 (ERAY0_NDIC4)


#define ERAY0_NEMC (*(volatile Ifx_ERAY_NEMC*)0xF001C08Cu)




#define ERAY_NEMC (ERAY0_NEMC)




#define ERAY0_NMV_1S0 (*(volatile Ifx_ERAY_NMV*)0xF001C1B0u)




#define ERAY_NMV1 (ERAY0_NMV_1S0)




#define ERAY0_NMV_1S1 (*(volatile Ifx_ERAY_NMV*)0xF001C1B4u)




#define ERAY_NMV2 (ERAY0_NMV_1S1)




#define ERAY0_NMV_1S2 (*(volatile Ifx_ERAY_NMV*)0xF001C1B8u)




#define ERAY_NMV3 (ERAY0_NMV_1S2)


#define ERAY0_OBCM (*(volatile Ifx_ERAY_OBCM*)0xF001C710u)




#define ERAY_OBCM (ERAY0_OBCM)


#define ERAY0_OBCR (*(volatile Ifx_ERAY_OBCR*)0xF001C714u)




#define ERAY_OBCR (ERAY0_OBCR)


#define ERAY0_OCS (*(volatile Ifx_ERAY_OCS*)0xF001C8E8u)




#define ERAY_OCS (ERAY0_OCS)


#define ERAY0_OCV (*(volatile Ifx_ERAY_OCV*)0xF001C11Cu)




#define ERAY_OCV (ERAY0_OCV)




#define ERAY0_OSID_1S0 (*(volatile Ifx_ERAY_OSID*)0xF001C170u)




#define ERAY_OSID01 (ERAY0_OSID_1S0)




#define ERAY0_OSID_1S1 (*(volatile Ifx_ERAY_OSID*)0xF001C174u)




#define ERAY_OSID02 (ERAY0_OSID_1S1)




#define ERAY0_OSID_1S10 (*(volatile Ifx_ERAY_OSID*)0xF001C198u)




#define ERAY_OSID11 (ERAY0_OSID_1S10)




#define ERAY0_OSID_1S11 (*(volatile Ifx_ERAY_OSID*)0xF001C19Cu)




#define ERAY_OSID12 (ERAY0_OSID_1S11)




#define ERAY0_OSID_1S12 (*(volatile Ifx_ERAY_OSID*)0xF001C1A0u)




#define ERAY_OSID13 (ERAY0_OSID_1S12)




#define ERAY0_OSID_1S13 (*(volatile Ifx_ERAY_OSID*)0xF001C1A4u)




#define ERAY_OSID14 (ERAY0_OSID_1S13)




#define ERAY0_OSID_1S14 (*(volatile Ifx_ERAY_OSID*)0xF001C1A8u)




#define ERAY_OSID15 (ERAY0_OSID_1S14)




#define ERAY0_OSID_1S2 (*(volatile Ifx_ERAY_OSID*)0xF001C178u)




#define ERAY_OSID03 (ERAY0_OSID_1S2)




#define ERAY0_OSID_1S3 (*(volatile Ifx_ERAY_OSID*)0xF001C17Cu)




#define ERAY_OSID04 (ERAY0_OSID_1S3)




#define ERAY0_OSID_1S4 (*(volatile Ifx_ERAY_OSID*)0xF001C180u)




#define ERAY_OSID05 (ERAY0_OSID_1S4)




#define ERAY0_OSID_1S5 (*(volatile Ifx_ERAY_OSID*)0xF001C184u)




#define ERAY_OSID06 (ERAY0_OSID_1S5)




#define ERAY0_OSID_1S6 (*(volatile Ifx_ERAY_OSID*)0xF001C188u)




#define ERAY_OSID07 (ERAY0_OSID_1S6)




#define ERAY0_OSID_1S7 (*(volatile Ifx_ERAY_OSID*)0xF001C18Cu)




#define ERAY_OSID08 (ERAY0_OSID_1S7)




#define ERAY0_OSID_1S8 (*(volatile Ifx_ERAY_OSID*)0xF001C190u)




#define ERAY_OSID09 (ERAY0_OSID_1S8)




#define ERAY0_OSID_1S9 (*(volatile Ifx_ERAY_OSID*)0xF001C194u)




#define ERAY_OSID10 (ERAY0_OSID_1S9)


#define ERAY0_OTSS (*(volatile Ifx_ERAY_OTSS*)0xF001C870u)




#define ERAY_OTSS (ERAY0_OTSS)


#define ERAY0_PRTC1 (*(volatile Ifx_ERAY_PRTC1*)0xF001C090u)




#define ERAY_PRTC1 (ERAY0_PRTC1)


#define ERAY0_PRTC2 (*(volatile Ifx_ERAY_PRTC2*)0xF001C094u)




#define ERAY_PRTC2 (ERAY0_PRTC2)


#define ERAY0_RCV (*(volatile Ifx_ERAY_RCV*)0xF001C118u)




#define ERAY_RCV (ERAY0_RCV)



#define ERAY0_RDDS_1S0 (*(volatile Ifx_ERAY_RDDS*)0xF001C600u)




#define ERAY_RDDS01 (ERAY0_RDDS_1S0)



#define ERAY0_RDDS_1S1 (*(volatile Ifx_ERAY_RDDS*)0xF001C604u)




#define ERAY_RDDS02 (ERAY0_RDDS_1S1)



#define ERAY0_RDDS_1S10 (*(volatile Ifx_ERAY_RDDS*)0xF001C628u)




#define ERAY_RDDS11 (ERAY0_RDDS_1S10)



#define ERAY0_RDDS_1S11 (*(volatile Ifx_ERAY_RDDS*)0xF001C62Cu)




#define ERAY_RDDS12 (ERAY0_RDDS_1S11)



#define ERAY0_RDDS_1S12 (*(volatile Ifx_ERAY_RDDS*)0xF001C630u)




#define ERAY_RDDS13 (ERAY0_RDDS_1S12)



#define ERAY0_RDDS_1S13 (*(volatile Ifx_ERAY_RDDS*)0xF001C634u)




#define ERAY_RDDS14 (ERAY0_RDDS_1S13)



#define ERAY0_RDDS_1S14 (*(volatile Ifx_ERAY_RDDS*)0xF001C638u)




#define ERAY_RDDS15 (ERAY0_RDDS_1S14)



#define ERAY0_RDDS_1S15 (*(volatile Ifx_ERAY_RDDS*)0xF001C63Cu)




#define ERAY_RDDS16 (ERAY0_RDDS_1S15)



#define ERAY0_RDDS_1S16 (*(volatile Ifx_ERAY_RDDS*)0xF001C640u)




#define ERAY_RDDS17 (ERAY0_RDDS_1S16)



#define ERAY0_RDDS_1S17 (*(volatile Ifx_ERAY_RDDS*)0xF001C644u)




#define ERAY_RDDS18 (ERAY0_RDDS_1S17)



#define ERAY0_RDDS_1S18 (*(volatile Ifx_ERAY_RDDS*)0xF001C648u)




#define ERAY_RDDS19 (ERAY0_RDDS_1S18)



#define ERAY0_RDDS_1S19 (*(volatile Ifx_ERAY_RDDS*)0xF001C64Cu)




#define ERAY_RDDS20 (ERAY0_RDDS_1S19)



#define ERAY0_RDDS_1S2 (*(volatile Ifx_ERAY_RDDS*)0xF001C608u)




#define ERAY_RDDS03 (ERAY0_RDDS_1S2)



#define ERAY0_RDDS_1S20 (*(volatile Ifx_ERAY_RDDS*)0xF001C650u)




#define ERAY_RDDS21 (ERAY0_RDDS_1S20)



#define ERAY0_RDDS_1S21 (*(volatile Ifx_ERAY_RDDS*)0xF001C654u)




#define ERAY_RDDS22 (ERAY0_RDDS_1S21)



#define ERAY0_RDDS_1S22 (*(volatile Ifx_ERAY_RDDS*)0xF001C658u)




#define ERAY_RDDS23 (ERAY0_RDDS_1S22)



#define ERAY0_RDDS_1S23 (*(volatile Ifx_ERAY_RDDS*)0xF001C65Cu)




#define ERAY_RDDS24 (ERAY0_RDDS_1S23)



#define ERAY0_RDDS_1S24 (*(volatile Ifx_ERAY_RDDS*)0xF001C660u)




#define ERAY_RDDS25 (ERAY0_RDDS_1S24)



#define ERAY0_RDDS_1S25 (*(volatile Ifx_ERAY_RDDS*)0xF001C664u)




#define ERAY_RDDS26 (ERAY0_RDDS_1S25)



#define ERAY0_RDDS_1S26 (*(volatile Ifx_ERAY_RDDS*)0xF001C668u)




#define ERAY_RDDS27 (ERAY0_RDDS_1S26)



#define ERAY0_RDDS_1S27 (*(volatile Ifx_ERAY_RDDS*)0xF001C66Cu)




#define ERAY_RDDS28 (ERAY0_RDDS_1S27)



#define ERAY0_RDDS_1S28 (*(volatile Ifx_ERAY_RDDS*)0xF001C670u)




#define ERAY_RDDS29 (ERAY0_RDDS_1S28)



#define ERAY0_RDDS_1S29 (*(volatile Ifx_ERAY_RDDS*)0xF001C674u)




#define ERAY_RDDS30 (ERAY0_RDDS_1S29)



#define ERAY0_RDDS_1S3 (*(volatile Ifx_ERAY_RDDS*)0xF001C60Cu)




#define ERAY_RDDS04 (ERAY0_RDDS_1S3)



#define ERAY0_RDDS_1S30 (*(volatile Ifx_ERAY_RDDS*)0xF001C678u)




#define ERAY_RDDS31 (ERAY0_RDDS_1S30)



#define ERAY0_RDDS_1S31 (*(volatile Ifx_ERAY_RDDS*)0xF001C67Cu)




#define ERAY_RDDS32 (ERAY0_RDDS_1S31)



#define ERAY0_RDDS_1S32 (*(volatile Ifx_ERAY_RDDS*)0xF001C680u)




#define ERAY_RDDS33 (ERAY0_RDDS_1S32)



#define ERAY0_RDDS_1S33 (*(volatile Ifx_ERAY_RDDS*)0xF001C684u)




#define ERAY_RDDS34 (ERAY0_RDDS_1S33)



#define ERAY0_RDDS_1S34 (*(volatile Ifx_ERAY_RDDS*)0xF001C688u)




#define ERAY_RDDS35 (ERAY0_RDDS_1S34)



#define ERAY0_RDDS_1S35 (*(volatile Ifx_ERAY_RDDS*)0xF001C68Cu)




#define ERAY_RDDS36 (ERAY0_RDDS_1S35)



#define ERAY0_RDDS_1S36 (*(volatile Ifx_ERAY_RDDS*)0xF001C690u)




#define ERAY_RDDS37 (ERAY0_RDDS_1S36)



#define ERAY0_RDDS_1S37 (*(volatile Ifx_ERAY_RDDS*)0xF001C694u)




#define ERAY_RDDS38 (ERAY0_RDDS_1S37)



#define ERAY0_RDDS_1S38 (*(volatile Ifx_ERAY_RDDS*)0xF001C698u)




#define ERAY_RDDS39 (ERAY0_RDDS_1S38)



#define ERAY0_RDDS_1S39 (*(volatile Ifx_ERAY_RDDS*)0xF001C69Cu)




#define ERAY_RDDS40 (ERAY0_RDDS_1S39)



#define ERAY0_RDDS_1S4 (*(volatile Ifx_ERAY_RDDS*)0xF001C610u)




#define ERAY_RDDS05 (ERAY0_RDDS_1S4)



#define ERAY0_RDDS_1S40 (*(volatile Ifx_ERAY_RDDS*)0xF001C6A0u)




#define ERAY_RDDS41 (ERAY0_RDDS_1S40)



#define ERAY0_RDDS_1S41 (*(volatile Ifx_ERAY_RDDS*)0xF001C6A4u)




#define ERAY_RDDS42 (ERAY0_RDDS_1S41)



#define ERAY0_RDDS_1S42 (*(volatile Ifx_ERAY_RDDS*)0xF001C6A8u)




#define ERAY_RDDS43 (ERAY0_RDDS_1S42)



#define ERAY0_RDDS_1S43 (*(volatile Ifx_ERAY_RDDS*)0xF001C6ACu)




#define ERAY_RDDS44 (ERAY0_RDDS_1S43)



#define ERAY0_RDDS_1S44 (*(volatile Ifx_ERAY_RDDS*)0xF001C6B0u)




#define ERAY_RDDS45 (ERAY0_RDDS_1S44)



#define ERAY0_RDDS_1S45 (*(volatile Ifx_ERAY_RDDS*)0xF001C6B4u)




#define ERAY_RDDS46 (ERAY0_RDDS_1S45)



#define ERAY0_RDDS_1S46 (*(volatile Ifx_ERAY_RDDS*)0xF001C6B8u)




#define ERAY_RDDS47 (ERAY0_RDDS_1S46)



#define ERAY0_RDDS_1S47 (*(volatile Ifx_ERAY_RDDS*)0xF001C6BCu)




#define ERAY_RDDS48 (ERAY0_RDDS_1S47)



#define ERAY0_RDDS_1S48 (*(volatile Ifx_ERAY_RDDS*)0xF001C6C0u)




#define ERAY_RDDS49 (ERAY0_RDDS_1S48)



#define ERAY0_RDDS_1S49 (*(volatile Ifx_ERAY_RDDS*)0xF001C6C4u)




#define ERAY_RDDS50 (ERAY0_RDDS_1S49)



#define ERAY0_RDDS_1S5 (*(volatile Ifx_ERAY_RDDS*)0xF001C614u)




#define ERAY_RDDS06 (ERAY0_RDDS_1S5)



#define ERAY0_RDDS_1S50 (*(volatile Ifx_ERAY_RDDS*)0xF001C6C8u)




#define ERAY_RDDS51 (ERAY0_RDDS_1S50)



#define ERAY0_RDDS_1S51 (*(volatile Ifx_ERAY_RDDS*)0xF001C6CCu)




#define ERAY_RDDS52 (ERAY0_RDDS_1S51)



#define ERAY0_RDDS_1S52 (*(volatile Ifx_ERAY_RDDS*)0xF001C6D0u)




#define ERAY_RDDS53 (ERAY0_RDDS_1S52)



#define ERAY0_RDDS_1S53 (*(volatile Ifx_ERAY_RDDS*)0xF001C6D4u)




#define ERAY_RDDS54 (ERAY0_RDDS_1S53)



#define ERAY0_RDDS_1S54 (*(volatile Ifx_ERAY_RDDS*)0xF001C6D8u)




#define ERAY_RDDS55 (ERAY0_RDDS_1S54)



#define ERAY0_RDDS_1S55 (*(volatile Ifx_ERAY_RDDS*)0xF001C6DCu)




#define ERAY_RDDS56 (ERAY0_RDDS_1S55)



#define ERAY0_RDDS_1S56 (*(volatile Ifx_ERAY_RDDS*)0xF001C6E0u)




#define ERAY_RDDS57 (ERAY0_RDDS_1S56)



#define ERAY0_RDDS_1S57 (*(volatile Ifx_ERAY_RDDS*)0xF001C6E4u)




#define ERAY_RDDS58 (ERAY0_RDDS_1S57)



#define ERAY0_RDDS_1S58 (*(volatile Ifx_ERAY_RDDS*)0xF001C6E8u)




#define ERAY_RDDS59 (ERAY0_RDDS_1S58)



#define ERAY0_RDDS_1S59 (*(volatile Ifx_ERAY_RDDS*)0xF001C6ECu)




#define ERAY_RDDS60 (ERAY0_RDDS_1S59)



#define ERAY0_RDDS_1S6 (*(volatile Ifx_ERAY_RDDS*)0xF001C618u)




#define ERAY_RDDS07 (ERAY0_RDDS_1S6)



#define ERAY0_RDDS_1S60 (*(volatile Ifx_ERAY_RDDS*)0xF001C6F0u)




#define ERAY_RDDS61 (ERAY0_RDDS_1S60)



#define ERAY0_RDDS_1S61 (*(volatile Ifx_ERAY_RDDS*)0xF001C6F4u)




#define ERAY_RDDS62 (ERAY0_RDDS_1S61)



#define ERAY0_RDDS_1S62 (*(volatile Ifx_ERAY_RDDS*)0xF001C6F8u)




#define ERAY_RDDS63 (ERAY0_RDDS_1S62)



#define ERAY0_RDDS_1S63 (*(volatile Ifx_ERAY_RDDS*)0xF001C6FCu)




#define ERAY_RDDS64 (ERAY0_RDDS_1S63)



#define ERAY0_RDDS_1S7 (*(volatile Ifx_ERAY_RDDS*)0xF001C61Cu)




#define ERAY_RDDS08 (ERAY0_RDDS_1S7)



#define ERAY0_RDDS_1S8 (*(volatile Ifx_ERAY_RDDS*)0xF001C620u)




#define ERAY_RDDS09 (ERAY0_RDDS_1S8)



#define ERAY0_RDDS_1S9 (*(volatile Ifx_ERAY_RDDS*)0xF001C624u)




#define ERAY_RDDS10 (ERAY0_RDDS_1S9)


#define ERAY0_RDHS1 (*(volatile Ifx_ERAY_RDHS1*)0xF001C700u)




#define ERAY_RDHS1 (ERAY0_RDHS1)


#define ERAY0_RDHS2 (*(volatile Ifx_ERAY_RDHS2*)0xF001C704u)




#define ERAY_RDHS2 (ERAY0_RDHS2)


#define ERAY0_RDHS3 (*(volatile Ifx_ERAY_RDHS3*)0xF001C708u)




#define ERAY_RDHS3 (ERAY0_RDHS3)


#define ERAY0_SCV (*(volatile Ifx_ERAY_SCV*)0xF001C110u)




#define ERAY_SCV (ERAY0_SCV)


#define ERAY0_SFS (*(volatile Ifx_ERAY_SFS*)0xF001C120u)




#define ERAY_SFS (ERAY0_SFS)


#define ERAY0_SIER (*(volatile Ifx_ERAY_SIER*)0xF001C03Cu)




#define ERAY_SIER (ERAY0_SIER)


#define ERAY0_SIES (*(volatile Ifx_ERAY_SIES*)0xF001C038u)




#define ERAY_SIES (ERAY0_SIES)


#define ERAY0_SILS (*(volatile Ifx_ERAY_SILS*)0xF001C02Cu)




#define ERAY_SILS (ERAY0_SILS)


#define ERAY0_SIR (*(volatile Ifx_ERAY_SIR*)0xF001C024u)




#define ERAY_SIR (ERAY0_SIR)


#define ERAY0_STPW1 (*(volatile Ifx_ERAY_STPW1*)0xF001C04Cu)




#define ERAY_STPW1 (ERAY0_STPW1)


#define ERAY0_STPW2 (*(volatile Ifx_ERAY_STPW2*)0xF001C050u)




#define ERAY_STPW2 (ERAY0_STPW2)


#define ERAY0_SUCC1 (*(volatile Ifx_ERAY_SUCC1*)0xF001C080u)




#define ERAY_SUCC1 (ERAY0_SUCC1)


#define ERAY0_SUCC2 (*(volatile Ifx_ERAY_SUCC2*)0xF001C084u)




#define ERAY_SUCC2 (ERAY0_SUCC2)


#define ERAY0_SUCC3 (*(volatile Ifx_ERAY_SUCC3*)0xF001C088u)




#define ERAY_SUCC3 (ERAY0_SUCC3)


#define ERAY0_SWNIT (*(volatile Ifx_ERAY_SWNIT*)0xF001C124u)




#define ERAY_SWNIT (ERAY0_SWNIT)


#define ERAY0_T0C (*(volatile Ifx_ERAY_T0C*)0xF001C044u)




#define ERAY_T0C (ERAY0_T0C)


#define ERAY0_T1C (*(volatile Ifx_ERAY_T1C*)0xF001C048u)




#define ERAY_T1C (ERAY0_T1C)


#define ERAY0_TEST1 (*(volatile Ifx_ERAY_TEST1*)0xF001C010u)




#define ERAY_TEST1 (ERAY0_TEST1)


#define ERAY0_TEST2 (*(volatile Ifx_ERAY_TEST2*)0xF001C014u)




#define ERAY_TEST2 (ERAY0_TEST2)


#define ERAY0_TXRQ1 (*(volatile Ifx_ERAY_TXRQ1*)0xF001C320u)




#define ERAY_TXRQ1 (ERAY0_TXRQ1)


#define ERAY0_TXRQ2 (*(volatile Ifx_ERAY_TXRQ2*)0xF001C324u)




#define ERAY_TXRQ2 (ERAY0_TXRQ2)


#define ERAY0_TXRQ3 (*(volatile Ifx_ERAY_TXRQ3*)0xF001C328u)




#define ERAY_TXRQ3 (ERAY0_TXRQ3)


#define ERAY0_TXRQ4 (*(volatile Ifx_ERAY_TXRQ4*)0xF001C32Cu)




#define ERAY_TXRQ4 (ERAY0_TXRQ4)



#define ERAY0_WRDS_1S0 (*(volatile Ifx_ERAY_WRDS*)0xF001C400u)




#define ERAY_WRDS01 (ERAY0_WRDS_1S0)



#define ERAY0_WRDS_1S1 (*(volatile Ifx_ERAY_WRDS*)0xF001C404u)




#define ERAY_WRDS02 (ERAY0_WRDS_1S1)



#define ERAY0_WRDS_1S10 (*(volatile Ifx_ERAY_WRDS*)0xF001C428u)




#define ERAY_WRDS11 (ERAY0_WRDS_1S10)



#define ERAY0_WRDS_1S11 (*(volatile Ifx_ERAY_WRDS*)0xF001C42Cu)




#define ERAY_WRDS12 (ERAY0_WRDS_1S11)



#define ERAY0_WRDS_1S12 (*(volatile Ifx_ERAY_WRDS*)0xF001C430u)




#define ERAY_WRDS13 (ERAY0_WRDS_1S12)



#define ERAY0_WRDS_1S13 (*(volatile Ifx_ERAY_WRDS*)0xF001C434u)




#define ERAY_WRDS14 (ERAY0_WRDS_1S13)



#define ERAY0_WRDS_1S14 (*(volatile Ifx_ERAY_WRDS*)0xF001C438u)




#define ERAY_WRDS15 (ERAY0_WRDS_1S14)



#define ERAY0_WRDS_1S15 (*(volatile Ifx_ERAY_WRDS*)0xF001C43Cu)




#define ERAY_WRDS16 (ERAY0_WRDS_1S15)



#define ERAY0_WRDS_1S16 (*(volatile Ifx_ERAY_WRDS*)0xF001C440u)




#define ERAY_WRDS17 (ERAY0_WRDS_1S16)



#define ERAY0_WRDS_1S17 (*(volatile Ifx_ERAY_WRDS*)0xF001C444u)




#define ERAY_WRDS18 (ERAY0_WRDS_1S17)



#define ERAY0_WRDS_1S18 (*(volatile Ifx_ERAY_WRDS*)0xF001C448u)




#define ERAY_WRDS19 (ERAY0_WRDS_1S18)



#define ERAY0_WRDS_1S19 (*(volatile Ifx_ERAY_WRDS*)0xF001C44Cu)




#define ERAY_WRDS20 (ERAY0_WRDS_1S19)



#define ERAY0_WRDS_1S2 (*(volatile Ifx_ERAY_WRDS*)0xF001C408u)




#define ERAY_WRDS03 (ERAY0_WRDS_1S2)



#define ERAY0_WRDS_1S20 (*(volatile Ifx_ERAY_WRDS*)0xF001C450u)




#define ERAY_WRDS21 (ERAY0_WRDS_1S20)



#define ERAY0_WRDS_1S21 (*(volatile Ifx_ERAY_WRDS*)0xF001C454u)




#define ERAY_WRDS22 (ERAY0_WRDS_1S21)



#define ERAY0_WRDS_1S22 (*(volatile Ifx_ERAY_WRDS*)0xF001C458u)




#define ERAY_WRDS23 (ERAY0_WRDS_1S22)



#define ERAY0_WRDS_1S23 (*(volatile Ifx_ERAY_WRDS*)0xF001C45Cu)




#define ERAY_WRDS24 (ERAY0_WRDS_1S23)



#define ERAY0_WRDS_1S24 (*(volatile Ifx_ERAY_WRDS*)0xF001C460u)




#define ERAY_WRDS25 (ERAY0_WRDS_1S24)



#define ERAY0_WRDS_1S25 (*(volatile Ifx_ERAY_WRDS*)0xF001C464u)




#define ERAY_WRDS26 (ERAY0_WRDS_1S25)



#define ERAY0_WRDS_1S26 (*(volatile Ifx_ERAY_WRDS*)0xF001C468u)




#define ERAY_WRDS27 (ERAY0_WRDS_1S26)



#define ERAY0_WRDS_1S27 (*(volatile Ifx_ERAY_WRDS*)0xF001C46Cu)




#define ERAY_WRDS28 (ERAY0_WRDS_1S27)



#define ERAY0_WRDS_1S28 (*(volatile Ifx_ERAY_WRDS*)0xF001C470u)




#define ERAY_WRDS29 (ERAY0_WRDS_1S28)



#define ERAY0_WRDS_1S29 (*(volatile Ifx_ERAY_WRDS*)0xF001C474u)




#define ERAY_WRDS30 (ERAY0_WRDS_1S29)



#define ERAY0_WRDS_1S3 (*(volatile Ifx_ERAY_WRDS*)0xF001C40Cu)




#define ERAY_WRDS04 (ERAY0_WRDS_1S3)



#define ERAY0_WRDS_1S30 (*(volatile Ifx_ERAY_WRDS*)0xF001C478u)




#define ERAY_WRDS31 (ERAY0_WRDS_1S30)



#define ERAY0_WRDS_1S31 (*(volatile Ifx_ERAY_WRDS*)0xF001C47Cu)




#define ERAY_WRDS32 (ERAY0_WRDS_1S31)



#define ERAY0_WRDS_1S32 (*(volatile Ifx_ERAY_WRDS*)0xF001C480u)




#define ERAY_WRDS33 (ERAY0_WRDS_1S32)



#define ERAY0_WRDS_1S33 (*(volatile Ifx_ERAY_WRDS*)0xF001C484u)




#define ERAY_WRDS34 (ERAY0_WRDS_1S33)



#define ERAY0_WRDS_1S34 (*(volatile Ifx_ERAY_WRDS*)0xF001C488u)




#define ERAY_WRDS35 (ERAY0_WRDS_1S34)



#define ERAY0_WRDS_1S35 (*(volatile Ifx_ERAY_WRDS*)0xF001C48Cu)




#define ERAY_WRDS36 (ERAY0_WRDS_1S35)



#define ERAY0_WRDS_1S36 (*(volatile Ifx_ERAY_WRDS*)0xF001C490u)




#define ERAY_WRDS37 (ERAY0_WRDS_1S36)



#define ERAY0_WRDS_1S37 (*(volatile Ifx_ERAY_WRDS*)0xF001C494u)




#define ERAY_WRDS38 (ERAY0_WRDS_1S37)



#define ERAY0_WRDS_1S38 (*(volatile Ifx_ERAY_WRDS*)0xF001C498u)




#define ERAY_WRDS39 (ERAY0_WRDS_1S38)



#define ERAY0_WRDS_1S39 (*(volatile Ifx_ERAY_WRDS*)0xF001C49Cu)




#define ERAY_WRDS40 (ERAY0_WRDS_1S39)



#define ERAY0_WRDS_1S4 (*(volatile Ifx_ERAY_WRDS*)0xF001C410u)




#define ERAY_WRDS05 (ERAY0_WRDS_1S4)



#define ERAY0_WRDS_1S40 (*(volatile Ifx_ERAY_WRDS*)0xF001C4A0u)




#define ERAY_WRDS41 (ERAY0_WRDS_1S40)



#define ERAY0_WRDS_1S41 (*(volatile Ifx_ERAY_WRDS*)0xF001C4A4u)




#define ERAY_WRDS42 (ERAY0_WRDS_1S41)



#define ERAY0_WRDS_1S42 (*(volatile Ifx_ERAY_WRDS*)0xF001C4A8u)




#define ERAY_WRDS43 (ERAY0_WRDS_1S42)



#define ERAY0_WRDS_1S43 (*(volatile Ifx_ERAY_WRDS*)0xF001C4ACu)




#define ERAY_WRDS44 (ERAY0_WRDS_1S43)



#define ERAY0_WRDS_1S44 (*(volatile Ifx_ERAY_WRDS*)0xF001C4B0u)




#define ERAY_WRDS45 (ERAY0_WRDS_1S44)



#define ERAY0_WRDS_1S45 (*(volatile Ifx_ERAY_WRDS*)0xF001C4B4u)




#define ERAY_WRDS46 (ERAY0_WRDS_1S45)



#define ERAY0_WRDS_1S46 (*(volatile Ifx_ERAY_WRDS*)0xF001C4B8u)




#define ERAY_WRDS47 (ERAY0_WRDS_1S46)



#define ERAY0_WRDS_1S47 (*(volatile Ifx_ERAY_WRDS*)0xF001C4BCu)




#define ERAY_WRDS48 (ERAY0_WRDS_1S47)



#define ERAY0_WRDS_1S48 (*(volatile Ifx_ERAY_WRDS*)0xF001C4C0u)




#define ERAY_WRDS49 (ERAY0_WRDS_1S48)



#define ERAY0_WRDS_1S49 (*(volatile Ifx_ERAY_WRDS*)0xF001C4C4u)




#define ERAY_WRDS50 (ERAY0_WRDS_1S49)



#define ERAY0_WRDS_1S5 (*(volatile Ifx_ERAY_WRDS*)0xF001C414u)




#define ERAY_WRDS06 (ERAY0_WRDS_1S5)



#define ERAY0_WRDS_1S50 (*(volatile Ifx_ERAY_WRDS*)0xF001C4C8u)




#define ERAY_WRDS51 (ERAY0_WRDS_1S50)



#define ERAY0_WRDS_1S51 (*(volatile Ifx_ERAY_WRDS*)0xF001C4CCu)




#define ERAY_WRDS52 (ERAY0_WRDS_1S51)



#define ERAY0_WRDS_1S52 (*(volatile Ifx_ERAY_WRDS*)0xF001C4D0u)




#define ERAY_WRDS53 (ERAY0_WRDS_1S52)



#define ERAY0_WRDS_1S53 (*(volatile Ifx_ERAY_WRDS*)0xF001C4D4u)




#define ERAY_WRDS54 (ERAY0_WRDS_1S53)



#define ERAY0_WRDS_1S54 (*(volatile Ifx_ERAY_WRDS*)0xF001C4D8u)




#define ERAY_WRDS55 (ERAY0_WRDS_1S54)



#define ERAY0_WRDS_1S55 (*(volatile Ifx_ERAY_WRDS*)0xF001C4DCu)




#define ERAY_WRDS56 (ERAY0_WRDS_1S55)



#define ERAY0_WRDS_1S56 (*(volatile Ifx_ERAY_WRDS*)0xF001C4E0u)




#define ERAY_WRDS57 (ERAY0_WRDS_1S56)



#define ERAY0_WRDS_1S57 (*(volatile Ifx_ERAY_WRDS*)0xF001C4E4u)




#define ERAY_WRDS58 (ERAY0_WRDS_1S57)



#define ERAY0_WRDS_1S58 (*(volatile Ifx_ERAY_WRDS*)0xF001C4E8u)




#define ERAY_WRDS59 (ERAY0_WRDS_1S58)



#define ERAY0_WRDS_1S59 (*(volatile Ifx_ERAY_WRDS*)0xF001C4ECu)




#define ERAY_WRDS60 (ERAY0_WRDS_1S59)



#define ERAY0_WRDS_1S6 (*(volatile Ifx_ERAY_WRDS*)0xF001C418u)




#define ERAY_WRDS07 (ERAY0_WRDS_1S6)



#define ERAY0_WRDS_1S60 (*(volatile Ifx_ERAY_WRDS*)0xF001C4F0u)




#define ERAY_WRDS61 (ERAY0_WRDS_1S60)



#define ERAY0_WRDS_1S61 (*(volatile Ifx_ERAY_WRDS*)0xF001C4F4u)




#define ERAY_WRDS62 (ERAY0_WRDS_1S61)



#define ERAY0_WRDS_1S62 (*(volatile Ifx_ERAY_WRDS*)0xF001C4F8u)




#define ERAY_WRDS63 (ERAY0_WRDS_1S62)



#define ERAY0_WRDS_1S63 (*(volatile Ifx_ERAY_WRDS*)0xF001C4FCu)




#define ERAY_WRDS64 (ERAY0_WRDS_1S63)



#define ERAY0_WRDS_1S7 (*(volatile Ifx_ERAY_WRDS*)0xF001C41Cu)




#define ERAY_WRDS08 (ERAY0_WRDS_1S7)



#define ERAY0_WRDS_1S8 (*(volatile Ifx_ERAY_WRDS*)0xF001C420u)




#define ERAY_WRDS09 (ERAY0_WRDS_1S8)



#define ERAY0_WRDS_1S9 (*(volatile Ifx_ERAY_WRDS*)0xF001C424u)




#define ERAY_WRDS10 (ERAY0_WRDS_1S9)


#define ERAY0_WRHS1 (*(volatile Ifx_ERAY_WRHS1*)0xF001C500u)




#define ERAY_WRHS1 (ERAY0_WRHS1)


#define ERAY0_WRHS2 (*(volatile Ifx_ERAY_WRHS2*)0xF001C504u)




#define ERAY_WRHS2 (ERAY0_WRHS2)


#define ERAY0_WRHS3 (*(volatile Ifx_ERAY_WRHS3*)0xF001C508u)




#define ERAY_WRHS3 (ERAY0_WRHS3)
# 39 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_reg.h" 2 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxEth_reg.h" 1 3
# 34 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxEth_reg.h" 3
#define IFXETH_REG_H 1

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxEth_regdef.h" 1 3
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxEth_regdef.h" 3
#define IFXETH_REGDEF_H 1







typedef struct _Ifx_ETH_ACCEN0_Bits
{
    unsigned int EN0:1;
    unsigned int EN1:1;
    unsigned int EN2:1;
    unsigned int EN3:1;
    unsigned int EN4:1;
    unsigned int EN5:1;
    unsigned int EN6:1;
    unsigned int EN7:1;
    unsigned int EN8:1;
    unsigned int EN9:1;
    unsigned int EN10:1;
    unsigned int EN11:1;
    unsigned int EN12:1;
    unsigned int EN13:1;
    unsigned int EN14:1;
    unsigned int EN15:1;
    unsigned int EN16:1;
    unsigned int EN17:1;
    unsigned int EN18:1;
    unsigned int EN19:1;
    unsigned int EN20:1;
    unsigned int EN21:1;
    unsigned int EN22:1;
    unsigned int EN23:1;
    unsigned int EN24:1;
    unsigned int EN25:1;
    unsigned int EN26:1;
    unsigned int EN27:1;
    unsigned int EN28:1;
    unsigned int EN29:1;
    unsigned int EN30:1;
    unsigned int EN31:1;
} Ifx_ETH_ACCEN0_Bits;


typedef struct _Ifx_ETH_ACCEN1_Bits
{
    unsigned int reserved_0:32;
} Ifx_ETH_ACCEN1_Bits;


typedef struct _Ifx_ETH_AHB_OR_AXI_STATUS_Bits
{
    unsigned int AXWHSTS:1;
    unsigned int AXIRDSTS:1;
    unsigned int reserved_2:30;
} Ifx_ETH_AHB_OR_AXI_STATUS_Bits;


typedef struct _Ifx_ETH_BUS_MODE_Bits
{
    unsigned int SWR:1;
    unsigned int DA:1;
    unsigned int DSL:5;
    unsigned int ATDS:1;
    unsigned int PBL:6;
    unsigned int PR:2;
    unsigned int FB:1;
    unsigned int RPBL:6;
    unsigned int USP:1;
    unsigned int PBLx8:1;
    unsigned int AAL:1;
    unsigned int MB:1;
    unsigned int TXPR:1;
    unsigned int PRWG:2;
    unsigned int reserved_30:2;
} Ifx_ETH_BUS_MODE_Bits;


typedef struct _Ifx_ETH_CLC_Bits
{
    unsigned int DISR:1;
    unsigned int DISS:1;
    unsigned int reserved_2:30;
} Ifx_ETH_CLC_Bits;


typedef struct _Ifx_ETH_CURRENT_HOST_RECEIVE_BUFFER_ADDRESS_Bits
{
    unsigned int CURRBUFAPTR:32;
} Ifx_ETH_CURRENT_HOST_RECEIVE_BUFFER_ADDRESS_Bits;


typedef struct _Ifx_ETH_CURRENT_HOST_RECEIVE_DESCRIPTOR_Bits
{
    unsigned int CURRDESAPTR:32;
} Ifx_ETH_CURRENT_HOST_RECEIVE_DESCRIPTOR_Bits;


typedef struct _Ifx_ETH_CURRENT_HOST_TRANSMIT_BUFFER_ADDRESS_Bits
{
    unsigned int CURTBUFAPTR:32;
} Ifx_ETH_CURRENT_HOST_TRANSMIT_BUFFER_ADDRESS_Bits;


typedef struct _Ifx_ETH_CURRENT_HOST_TRANSMIT_DESCRIPTOR_Bits
{
    unsigned int CURTDESAPTR:32;
} Ifx_ETH_CURRENT_HOST_TRANSMIT_DESCRIPTOR_Bits;


typedef struct _Ifx_ETH_DEBUG_Bits
{
    unsigned int RPESTS:1;
    unsigned int RFCFCSTS:2;
    unsigned int reserved_3:1;
    unsigned int RWCSTS:1;
    unsigned int RRCSTS:2;
    unsigned int reserved_7:1;
    unsigned int RXFSTS:2;
    unsigned int reserved_10:6;
    unsigned int TPESTS:1;
    unsigned int TFCSTS:2;
    unsigned int TXPAUSED:1;
    unsigned int TRCSTS:2;
    unsigned int TWCSTS:1;
    unsigned int reserved_23:1;
    unsigned int TXFSTS:1;
    unsigned int TXSTSFSTS:1;
    unsigned int reserved_26:6;
} Ifx_ETH_DEBUG_Bits;


typedef struct _Ifx_ETH_FLOW_CONTROL_Bits
{
    unsigned int FCA_BPA:1;
    unsigned int TFE:1;
    unsigned int RFE:1;
    unsigned int UP:1;
    unsigned int PLT:2;
    unsigned int reserved_6:1;
    unsigned int DZPQ:1;
    unsigned int reserved_8:8;
    unsigned int PT:16;
} Ifx_ETH_FLOW_CONTROL_Bits;


typedef struct _Ifx_ETH_GMII_ADDRESS_Bits
{
    unsigned int GB:1;
    unsigned int GW:1;
    unsigned int CR:4;
    unsigned int GR:5;
    unsigned int PA:5;
    unsigned int reserved_16:16;
} Ifx_ETH_GMII_ADDRESS_Bits;


typedef struct _Ifx_ETH_GMII_DATA_Bits
{
    unsigned int GD:16;
    unsigned int reserved_16:16;
} Ifx_ETH_GMII_DATA_Bits;


typedef struct _Ifx_ETH_GPCTL_Bits
{
    unsigned int ALTI0:2;
    unsigned int ALTI1:2;
    unsigned int ALTI2:2;
    unsigned int ALTI3:2;
    unsigned int ALTI4:2;
    unsigned int ALTI5:2;
    unsigned int ALTI6:2;
    unsigned int ALTI7:2;
    unsigned int ALTI8:2;
    unsigned int ALTI9:2;
    unsigned int ALTI10:2;
    unsigned int reserved_22:2;
    unsigned int EPR:1;
    unsigned int DIV:1;
    unsigned int reserved_26:6;
} Ifx_ETH_GPCTL_Bits;


typedef struct _Ifx_ETH_HASH_TABLE_HIGH_Bits
{
    unsigned int HTH:32;
} Ifx_ETH_HASH_TABLE_HIGH_Bits;


typedef struct _Ifx_ETH_HASH_TABLE_LOW_Bits
{
    unsigned int HTL:32;
} Ifx_ETH_HASH_TABLE_LOW_Bits;


typedef struct _Ifx_ETH_HW_FEATURE_Bits
{
    unsigned int MIISEL:1;
    unsigned int GMIISEL:1;
    unsigned int HDSEL:1;
    unsigned int EXTHASHEN:1;
    unsigned int HASHSEL:1;
    unsigned int ADDMACADRSEL:1;
    unsigned int PCSSEL:1;
    unsigned int L3L4FLTREN:1;
    unsigned int SMASEL:1;
    unsigned int RWKSEL:1;
    unsigned int MGKSEL:1;
    unsigned int MMCSEL:1;
    unsigned int TSVER1SEL:1;
    unsigned int TSVER2SEL:1;
    unsigned int EEESEL:1;
    unsigned int AVSEL:1;
    unsigned int TXCOESEL:1;
    unsigned int RXTYP1COE:1;
    unsigned int RXTYP2COE:1;
    unsigned int RXFIFOSIZE:1;
    unsigned int RXCHCNT:2;
    unsigned int TXCHCNT:2;
    unsigned int ENHDESSEL:1;
    unsigned int INTTSEN:1;
    unsigned int FLEXIPPSEN:1;
    unsigned int SAVLANINS:1;
    unsigned int ACTPHYIF:3;
    unsigned int reserved_31:1;
} Ifx_ETH_HW_FEATURE_Bits;


typedef struct _Ifx_ETH_ID_Bits
{
    unsigned int MODREV:8;
    unsigned int MODTYPE:8;
    unsigned int MODNUMBER:16;
} Ifx_ETH_ID_Bits;


typedef struct _Ifx_ETH_INTERRUPT_ENABLE_Bits
{
    unsigned int TIE:1;
    unsigned int TSE:1;
    unsigned int TUE:1;
    unsigned int TJE:1;
    unsigned int OVE:1;
    unsigned int UNE:1;
    unsigned int RIE:1;
    unsigned int RUE:1;
    unsigned int RSE:1;
    unsigned int RWE:1;
    unsigned int ETE:1;
    unsigned int reserved_11:2;
    unsigned int FBE:1;
    unsigned int ERE:1;
    unsigned int AIE:1;
    unsigned int NIE:1;
    unsigned int reserved_17:15;
} Ifx_ETH_INTERRUPT_ENABLE_Bits;


typedef struct _Ifx_ETH_INTERRUPT_MASK_Bits
{
    unsigned int RGSMIIIM:1;
    unsigned int PCSLCHGIM:1;
    unsigned int PCSANCIM:1;
    unsigned int PMTIM:1;
    unsigned int reserved_4:5;
    unsigned int TSIM:1;
    unsigned int LPIIM:1;
    unsigned int reserved_11:21;
} Ifx_ETH_INTERRUPT_MASK_Bits;


typedef struct _Ifx_ETH_INTERRUPT_STATUS_Bits
{
    unsigned int RGSMIIIS:1;
    unsigned int PCSLCHGIS:1;
    unsigned int PCSANCIS:1;
    unsigned int PMTIS:1;
    unsigned int MMCIS:1;
    unsigned int MMCRXIS:1;
    unsigned int MMCTXIS:1;
    unsigned int MMCRXIPIS:1;
    unsigned int reserved_8:1;
    unsigned int TSIS:1;
    unsigned int LPIIS:1;
    unsigned int reserved_11:21;
} Ifx_ETH_INTERRUPT_STATUS_Bits;


typedef struct _Ifx_ETH_KRST0_Bits
{
    unsigned int RST:1;
    unsigned int RSTSTAT:1;
    unsigned int reserved_2:30;
} Ifx_ETH_KRST0_Bits;


typedef struct _Ifx_ETH_KRST1_Bits
{
    unsigned int RST:1;
    unsigned int reserved_1:31;
} Ifx_ETH_KRST1_Bits;


typedef struct _Ifx_ETH_KRSTCLR_Bits
{
    unsigned int CLR:1;
    unsigned int reserved_1:31;
} Ifx_ETH_KRSTCLR_Bits;


typedef struct _Ifx_ETH_MAC_ADDRESS_HIGH_Bits
{
    unsigned int ADDRHI:16;
    unsigned int reserved_16:8;
    unsigned int MBC:6;
    unsigned int SA:1;
    unsigned int AE:1;
} Ifx_ETH_MAC_ADDRESS_HIGH_Bits;


typedef struct _Ifx_ETH_MAC_ADDRESS_LOW_Bits
{
    unsigned int ADDRLO:32;
} Ifx_ETH_MAC_ADDRESS_LOW_Bits;


typedef struct _Ifx_ETH_MAC_CONFIGURATION_Bits
{
    unsigned int PRELEN:2;
    unsigned int RE:1;
    unsigned int TE:1;
    unsigned int DC:1;
    unsigned int BL:2;
    unsigned int ACS:1;
    unsigned int LUD:1;
    unsigned int DR:1;
    unsigned int IPC:1;
    unsigned int DM:1;
    unsigned int LM:1;
    unsigned int DO:1;
    unsigned int FES:1;
    unsigned int PS:1;
    unsigned int DCRS:1;
    unsigned int IFG:3;
    unsigned int JE:1;
    unsigned int BE:1;
    unsigned int JD:1;
    unsigned int WD:1;
    unsigned int TC:1;
    unsigned int CST:1;
    unsigned int SFTERR:1;
    unsigned int TWOKPE:1;
    unsigned int SARC:3;
    unsigned int reserved_31:1;
} Ifx_ETH_MAC_CONFIGURATION_Bits;


typedef struct _Ifx_ETH_MAC_FRAME_FILTER_Bits
{
    unsigned int PR:1;
    unsigned int HUC:1;
    unsigned int HMC:1;
    unsigned int DAIF:1;
    unsigned int PM:1;
    unsigned int DBF:1;
    unsigned int PCF:2;
    unsigned int SAIF:1;
    unsigned int SAF:1;
    unsigned int HPF:1;
    unsigned int reserved_11:5;
    unsigned int VTFE:1;
    unsigned int reserved_17:3;
    unsigned int IPFE:1;
    unsigned int DNTU:1;
    unsigned int reserved_22:9;
    unsigned int RA:1;
} Ifx_ETH_MAC_FRAME_FILTER_Bits;


typedef struct _Ifx_ETH_MISSED_FRAME_AND_BUFFER_OVERFLOW_COUNTER_Bits
{
    unsigned int MISFRMCNT:16;
    unsigned int MISCNTOVF:1;
    unsigned int OVFFRMCNT:11;
    unsigned int OVFCNTOVF:1;
    unsigned int reserved_29:3;
} Ifx_ETH_MISSED_FRAME_AND_BUFFER_OVERFLOW_COUNTER_Bits;


typedef struct _Ifx_ETH_MMC_CONTROL_Bits
{
    unsigned int CNTRST:1;
    unsigned int CNTSTOPRO:1;
    unsigned int RSTONRD:1;
    unsigned int CNTFREEZ:1;
    unsigned int CNTPRST:1;
    unsigned int CNTPRSTLVL:1;
    unsigned int reserved_6:2;
    unsigned int UCDBC:1;
    unsigned int reserved_9:23;
} Ifx_ETH_MMC_CONTROL_Bits;


typedef struct _Ifx_ETH_MMC_IPC_RECEIVE_INTERRUPT_Bits
{
    unsigned int RXIPV4GFIS:1;
    unsigned int RXIPV4HERFIS:1;
    unsigned int RXIPV4NOPAYFIS:1;
    unsigned int RXIPV4FRAGFIS:1;
    unsigned int RXIPV4UDSBLFIS:1;
    unsigned int RXIPV6GFIS:1;
    unsigned int RXIPV6HERFIS:1;
    unsigned int RXIPV6NOPAYFIS:1;
    unsigned int RXUDPGFIS:1;
    unsigned int RXUDPERFIS:1;
    unsigned int RXTCPGFIS:1;
    unsigned int RXTCPERFIS:1;
    unsigned int RXICMPGFIS:1;
    unsigned int RXICMPERFIS:1;
    unsigned int reserved_14:2;
    unsigned int RXIPV4GOIS:1;
    unsigned int RXIPV4HEROIS:1;
    unsigned int RXIPV4NOPAYOIS:1;
    unsigned int RXIPV4FRAGOIS:1;
    unsigned int RXIPV4UDSBLOIS:1;
    unsigned int RXIPV6GOIS:1;
    unsigned int RXIPV6HEROIS:1;
    unsigned int RXIPV6NOPAYOIS:1;
    unsigned int RXUDPGOIS:1;
    unsigned int RXUDPEROIS:1;
    unsigned int RXTCPGOIS:1;
    unsigned int RXTCPEROIS:1;
    unsigned int RXICMPGOIS:1;
    unsigned int RXICMPEROIS:1;
    unsigned int reserved_30:2;
} Ifx_ETH_MMC_IPC_RECEIVE_INTERRUPT_Bits;


typedef struct _Ifx_ETH_MMC_IPC_RECEIVE_INTERRUPT_MASK_Bits
{
    unsigned int RXIPV4GFIM:1;
    unsigned int RXIPV4HERFIM:1;
    unsigned int RXIPV4NOPAYFIM:1;
    unsigned int RXIPV4FRAGFIM:1;
    unsigned int RXIPV4UDSBLFIM:1;
    unsigned int RXIPV6GFIM:1;
    unsigned int RXIPV6HERFIM:1;
    unsigned int RXIPV6NOPAYFIM:1;
    unsigned int RXUDPGFIM:1;
    unsigned int RXUDPERFIM:1;
    unsigned int RXTCPGFIM:1;
    unsigned int RXTCPERFIM:1;
    unsigned int RXICMPGFIM:1;
    unsigned int RXICMPERFIM:1;
    unsigned int reserved_14:2;
    unsigned int RXIPV4GOIM:1;
    unsigned int RXIPV4HEROIM:1;
    unsigned int RXIPV4NOPAYOIM:1;
    unsigned int RXIPV4FRAGOIM:1;
    unsigned int RXIPV4UDSBLOIM:1;
    unsigned int RXIPV6GOIM:1;
    unsigned int RXIPV6HEROIM:1;
    unsigned int RXIPV6NOPAYOIM:1;
    unsigned int RXUDPGOIM:1;
    unsigned int RXUDPEROIM:1;
    unsigned int RXTCPGOIM:1;
    unsigned int RXTCPEROIM:1;
    unsigned int RXICMPGOIM:1;
    unsigned int RXICMPEROIM:1;
    unsigned int reserved_30:2;
} Ifx_ETH_MMC_IPC_RECEIVE_INTERRUPT_MASK_Bits;


typedef struct _Ifx_ETH_MMC_RECEIVE_INTERRUPT_Bits
{
    unsigned int RXGBFRMIS:1;
    unsigned int RXGBOCTIS:1;
    unsigned int RXGOCTIS:1;
    unsigned int RXBCGFIS:1;
    unsigned int RXMCGFIS:1;
    unsigned int RXCRCERFIS:1;
    unsigned int RXALGNERFIS:1;
    unsigned int RXRUNTFIS:1;
    unsigned int RXJABERFIS:1;
    unsigned int RXUSIZEGFIS:1;
    unsigned int RXOSIZEGFIS:1;
    unsigned int RX64OCTGBFIS:1;
    unsigned int RX65T127OCTGBFIS:1;
    unsigned int RX128T255OCTGBFIS:1;
    unsigned int RX256T511OCTGBFIS:1;
    unsigned int RX512T1023OCTGBFIS:1;
    unsigned int RX1024TMAXOCTGBFIS:1;
    unsigned int RXUCGFIS:1;
    unsigned int RXLENERFIS:1;
    unsigned int RXORANGEFIS:1;
    unsigned int RXPAUSFIS:1;
    unsigned int RXFOVFIS:1;
    unsigned int RXVLANGBFIS:1;
    unsigned int RXWDOGFIS:1;
    unsigned int RXRCVERRFIS:1;
    unsigned int RXCTRLFIS:1;
    unsigned int reserved_26:6;
} Ifx_ETH_MMC_RECEIVE_INTERRUPT_Bits;


typedef struct _Ifx_ETH_MMC_RECEIVE_INTERRUPT_MASK_Bits
{
    unsigned int RXGBFRMIM:1;
    unsigned int RXGBOCTIM:1;
    unsigned int RXGOCTIM:1;
    unsigned int RXBCGFIM:1;
    unsigned int RXMCGFIM:1;
    unsigned int RXCRCERFIM:1;
    unsigned int RXALGNERFIM:1;
    unsigned int RXRUNTFIM:1;
    unsigned int RXJABERFIM:1;
    unsigned int RXUSIZEGFIM:1;
    unsigned int RXOSIZEGFIM:1;
    unsigned int RX64OCTGBFIM:1;
    unsigned int RX65T127OCTGBFIM:1;
    unsigned int RX128T255OCTGBFIM:1;
    unsigned int RX256T511OCTGBFIM:1;
    unsigned int RX512T1023OCTGBFIM:1;
    unsigned int RX1024TMAXOCTGBFIM:1;
    unsigned int RXUCGFIM:1;
    unsigned int RXLENERFIM:1;
    unsigned int RXORANGEFIM:1;
    unsigned int RXPAUSFIM:1;
    unsigned int RXFOVFIM:1;
    unsigned int RXVLANGBFIM:1;
    unsigned int RXWDOGFIM:1;
    unsigned int RXRCVERRFIM:1;
    unsigned int RXCTRLFIM:1;
    unsigned int reserved_26:6;
} Ifx_ETH_MMC_RECEIVE_INTERRUPT_MASK_Bits;


typedef struct _Ifx_ETH_MMC_TRANSMIT_INTERRUPT_Bits
{
    unsigned int TXGBOCTIS:1;
    unsigned int TXGBFRMIS:1;
    unsigned int TXBCGFIS:1;
    unsigned int TXMCGFIS:1;
    unsigned int TX64OCTGBFIS:1;
    unsigned int TX65T127OCTGBFIS:1;
    unsigned int TX128T255OCTGBFIS:1;
    unsigned int TX256T511OCTGBFIS:1;
    unsigned int TX512T1023OCTGBFIS:1;
    unsigned int TX1024TMAXOCTGBFIS:1;
    unsigned int TXUCGBFIS:1;
    unsigned int TXMCGBFIS:1;
    unsigned int TXBCGBFIS:1;
    unsigned int TXUFLOWERFIS:1;
    unsigned int TXSCOLGFIS:1;
    unsigned int TXMCOLGFIS:1;
    unsigned int TXDEFFIS:1;
    unsigned int TXLATCOLFIS:1;
    unsigned int TXEXCOLFIS:1;
    unsigned int TXCARERFIS:1;
    unsigned int TXGOCTIS:1;
    unsigned int TXGFRMIS:1;
    unsigned int TXEXDEFFIS:1;
    unsigned int TXPAUSFIS:1;
    unsigned int TXVLANGFIS:1;
    unsigned int TXOSIZEGFIS:1;
    unsigned int reserved_26:6;
} Ifx_ETH_MMC_TRANSMIT_INTERRUPT_Bits;


typedef struct _Ifx_ETH_MMC_TRANSMIT_INTERRUPT_MASK_Bits
{
    unsigned int TXGBOCTIM:1;
    unsigned int TXGBFRMIM:1;
    unsigned int TXBCGFIM:1;
    unsigned int TXMCGFIM:1;
    unsigned int TX64OCTGBFIM:1;
    unsigned int TX65T127OCTGBFIM:1;
    unsigned int TX128T255OCTGBFIM:1;
    unsigned int TX256T511OCTGBFIM:1;
    unsigned int TX512T1023OCTGBFIM:1;
    unsigned int TX1024TMAXOCTGBFIM:1;
    unsigned int TXUCGBFIM:1;
    unsigned int TXMCGBFIM:1;
    unsigned int TXBCGBFIM:1;
    unsigned int TXUFLOWERFIM:1;
    unsigned int TXSCOLGFIM:1;
    unsigned int TXMCOLGFIM:1;
    unsigned int TXDEFFIM:1;
    unsigned int TXLATCOLFIM:1;
    unsigned int TXEXCOLFIM:1;
    unsigned int TXCARERFIM:1;
    unsigned int TXGOCTIM:1;
    unsigned int TXGFRMIM:1;
    unsigned int TXEXDEFFIM:1;
    unsigned int TXPAUSFIM:1;
    unsigned int TXVLANGFIM:1;
    unsigned int TXOSIZEGFIM:1;
    unsigned int reserved_26:6;
} Ifx_ETH_MMC_TRANSMIT_INTERRUPT_MASK_Bits;


typedef struct _Ifx_ETH_OPERATION_MODE_Bits
{
    unsigned int reserved_0:1;
    unsigned int SR:1;
    unsigned int OSF:1;
    unsigned int RTC:2;
    unsigned int reserved_5:1;
    unsigned int FUF:1;
    unsigned int FEF:1;
    unsigned int EFC:1;
    unsigned int RFA:2;
    unsigned int RFD:2;
    unsigned int ST:1;
    unsigned int TTC:3;
    unsigned int reserved_17:3;
    unsigned int FTF:1;
    unsigned int TSF:1;
    unsigned int RFD_2:1;
    unsigned int RFA_2:1;
    unsigned int DFF:1;
    unsigned int RSF:1;
    unsigned int DT:1;
    unsigned int reserved_27:5;
} Ifx_ETH_OPERATION_MODE_Bits;


typedef struct _Ifx_ETH_PMT_CONTROL_STATUS_Bits
{
    unsigned int PWRDWN:1;
    unsigned int MGKPKTEN:1;
    unsigned int RWKPKTEN:1;
    unsigned int reserved_3:2;
    unsigned int MGKPRCVD:1;
    unsigned int RWKPRCVD:1;
    unsigned int reserved_7:2;
    unsigned int GLBLUCAST:1;
    unsigned int reserved_10:21;
    unsigned int RWKFILTRST:1;
} Ifx_ETH_PMT_CONTROL_STATUS_Bits;


typedef struct _Ifx_ETH_PPS_CONTROL_Bits
{
    unsigned int PPSCTRL_PPSCMD:4;
    unsigned int PPSEN0:1;
    unsigned int TRGTMODSEL0:2;
    unsigned int reserved_7:1;
    unsigned int PPSCMD1:3;
    unsigned int reserved_11:2;
    unsigned int TRGTMODSEL1:2;
    unsigned int reserved_15:1;
    unsigned int PPSCMD2:3;
    unsigned int reserved_19:2;
    unsigned int TRGTMODSEL2:2;
    unsigned int reserved_23:1;
    unsigned int PPSCMD3:3;
    unsigned int reserved_27:2;
    unsigned int TRGTMODSEL3:2;
    unsigned int reserved_31:1;
} Ifx_ETH_PPS_CONTROL_Bits;


typedef struct _Ifx_ETH_RECEIVE_DESCRIPTOR_LIST_ADDRESS_Bits
{
    unsigned int reserved_0:2;
    unsigned int RDESLA:30;
} Ifx_ETH_RECEIVE_DESCRIPTOR_LIST_ADDRESS_Bits;


typedef struct _Ifx_ETH_RECEIVE_INTERRUPT_WATCHDOG_TIMER_Bits
{
    unsigned int RIWT:8;
    unsigned int reserved_8:24;
} Ifx_ETH_RECEIVE_INTERRUPT_WATCHDOG_TIMER_Bits;


typedef struct _Ifx_ETH_RECEIVE_POLL_DEMAND_Bits
{
    unsigned int RPD:32;
} Ifx_ETH_RECEIVE_POLL_DEMAND_Bits;


typedef struct _Ifx_ETH_REMOTE_WAKE_UP_FRAME_FILTER_Bits
{
    unsigned int WKUPFRMFTR:32;
} Ifx_ETH_REMOTE_WAKE_UP_FRAME_FILTER_Bits;



typedef struct _Ifx_ETH_RX_1024TOMAXOCTETS_FRAMES_GOOD_BAD_Bits
{
    unsigned int RX1024_MAXOCTGB:32;
} Ifx_ETH_RX_1024TOMAXOCTETS_FRAMES_GOOD_BAD_Bits;



typedef struct _Ifx_ETH_RX_128TO255OCTETS_FRAMES_GOOD_BAD_Bits
{
    unsigned int RX128_255OCTGB:32;
} Ifx_ETH_RX_128TO255OCTETS_FRAMES_GOOD_BAD_Bits;



typedef struct _Ifx_ETH_RX_256TO511OCTETS_FRAMES_GOOD_BAD_Bits
{
    unsigned int RX256_511OCTGB:32;
} Ifx_ETH_RX_256TO511OCTETS_FRAMES_GOOD_BAD_Bits;



typedef struct _Ifx_ETH_RX_512TO1023OCTETS_FRAMES_GOOD_BAD_Bits
{
    unsigned int RX512_1023OCTGB:32;
} Ifx_ETH_RX_512TO1023OCTETS_FRAMES_GOOD_BAD_Bits;


typedef struct _Ifx_ETH_RX_64OCTETS_FRAMES_GOOD_BAD_Bits
{
    unsigned int RX64OCTGB:32;
} Ifx_ETH_RX_64OCTETS_FRAMES_GOOD_BAD_Bits;



typedef struct _Ifx_ETH_RX_65TO127OCTETS_FRAMES_GOOD_BAD_Bits
{
    unsigned int RX65_127OCTGB:32;
} Ifx_ETH_RX_65TO127OCTETS_FRAMES_GOOD_BAD_Bits;


typedef struct _Ifx_ETH_RX_ALIGNMENT_ERROR_FRAMES_Bits
{
    unsigned int RXALGNERR:32;
} Ifx_ETH_RX_ALIGNMENT_ERROR_FRAMES_Bits;


typedef struct _Ifx_ETH_RX_BROADCAST_FRAMES_GOOD_Bits
{
    unsigned int RXBCASTG:32;
} Ifx_ETH_RX_BROADCAST_FRAMES_GOOD_Bits;


typedef struct _Ifx_ETH_RX_CONTROL_FRAMES_GOOD_Bits
{
    unsigned int RXCTRLG:32;
} Ifx_ETH_RX_CONTROL_FRAMES_GOOD_Bits;


typedef struct _Ifx_ETH_RX_CRC_ERROR_FRAMES_Bits
{
    unsigned int RXCRCERR:32;
} Ifx_ETH_RX_CRC_ERROR_FRAMES_Bits;


typedef struct _Ifx_ETH_RX_FIFO_OVERFLOW_FRAMES_Bits
{
    unsigned int RXFIFOOVFL:32;
} Ifx_ETH_RX_FIFO_OVERFLOW_FRAMES_Bits;


typedef struct _Ifx_ETH_RX_FRAMES_COUNT_GOOD_BAD_Bits
{
    unsigned int RXFRMGB:32;
} Ifx_ETH_RX_FRAMES_COUNT_GOOD_BAD_Bits;


typedef struct _Ifx_ETH_RX_JABBER_ERROR_FRAMES_Bits
{
    unsigned int RXJABERR:32;
} Ifx_ETH_RX_JABBER_ERROR_FRAMES_Bits;


typedef struct _Ifx_ETH_RX_LENGTH_ERROR_FRAMES_Bits
{
    unsigned int RXLENERR:32;
} Ifx_ETH_RX_LENGTH_ERROR_FRAMES_Bits;


typedef struct _Ifx_ETH_RX_MULTICAST_FRAMES_GOOD_Bits
{
    unsigned int RXMCASTG:32;
} Ifx_ETH_RX_MULTICAST_FRAMES_GOOD_Bits;


typedef struct _Ifx_ETH_RX_OCTET_COUNT_GOOD_BAD_Bits
{
    unsigned int RXOCTGB:32;
} Ifx_ETH_RX_OCTET_COUNT_GOOD_BAD_Bits;


typedef struct _Ifx_ETH_RX_OCTET_COUNT_GOOD_Bits
{
    unsigned int RXOCTG:32;
} Ifx_ETH_RX_OCTET_COUNT_GOOD_Bits;


typedef struct _Ifx_ETH_RX_OUT_OF_RANGE_TYPE_FRAMES_Bits
{
    unsigned int RXOUTOFRNG:32;
} Ifx_ETH_RX_OUT_OF_RANGE_TYPE_FRAMES_Bits;


typedef struct _Ifx_ETH_RX_OVERSIZE_FRAMES_GOOD_Bits
{
    unsigned int RXOVERSZG:32;
} Ifx_ETH_RX_OVERSIZE_FRAMES_GOOD_Bits;


typedef struct _Ifx_ETH_RX_PAUSE_FRAMES_Bits
{
    unsigned int RXPAUSEFRM:32;
} Ifx_ETH_RX_PAUSE_FRAMES_Bits;


typedef struct _Ifx_ETH_RX_RECEIVE_ERROR_FRAMES_Bits
{
    unsigned int RXRCVERR:32;
} Ifx_ETH_RX_RECEIVE_ERROR_FRAMES_Bits;


typedef struct _Ifx_ETH_RX_RUNT_ERROR_FRAMES_Bits
{
    unsigned int RXRUNTERR:32;
} Ifx_ETH_RX_RUNT_ERROR_FRAMES_Bits;


typedef struct _Ifx_ETH_RX_UNDERSIZE_FRAMES_GOOD_Bits
{
    unsigned int RXUNDERSZG:32;
} Ifx_ETH_RX_UNDERSIZE_FRAMES_GOOD_Bits;


typedef struct _Ifx_ETH_RX_UNICAST_FRAMES_GOOD_Bits
{
    unsigned int RXUCASTG:32;
} Ifx_ETH_RX_UNICAST_FRAMES_GOOD_Bits;


typedef struct _Ifx_ETH_RX_VLAN_FRAMES_GOOD_BAD_Bits
{
    unsigned int RXVLANFRGB:32;
} Ifx_ETH_RX_VLAN_FRAMES_GOOD_BAD_Bits;


typedef struct _Ifx_ETH_RX_WATCHDOG_ERROR_FRAMES_Bits
{
    unsigned int RXWDGERR:32;
} Ifx_ETH_RX_WATCHDOG_ERROR_FRAMES_Bits;


typedef struct _Ifx_ETH_RXICMP_ERROR_FRAMES_Bits
{
    unsigned int RXICMPERRFRM:32;
} Ifx_ETH_RXICMP_ERROR_FRAMES_Bits;


typedef struct _Ifx_ETH_RXICMP_ERROR_OCTETS_Bits
{
    unsigned int RXICMPERROCT:32;
} Ifx_ETH_RXICMP_ERROR_OCTETS_Bits;


typedef struct _Ifx_ETH_RXICMP_GOOD_FRAMES_Bits
{
    unsigned int RXICMPGDFRM:32;
} Ifx_ETH_RXICMP_GOOD_FRAMES_Bits;


typedef struct _Ifx_ETH_RXICMP_GOOD_OCTETS_Bits
{
    unsigned int RXICMPGDOCT:32;
} Ifx_ETH_RXICMP_GOOD_OCTETS_Bits;


typedef struct _Ifx_ETH_RXIPV4_FRAGMENTED_FRAMES_Bits
{
    unsigned int RXIPV4FRAGFRM:32;
} Ifx_ETH_RXIPV4_FRAGMENTED_FRAMES_Bits;


typedef struct _Ifx_ETH_RXIPV4_FRAGMENTED_OCTETS_Bits
{
    unsigned int RXIPV4FRAGOCT:32;
} Ifx_ETH_RXIPV4_FRAGMENTED_OCTETS_Bits;


typedef struct _Ifx_ETH_RXIPV4_GOOD_FRAMES_Bits
{
    unsigned int RXIPV4GDFRM:32;
} Ifx_ETH_RXIPV4_GOOD_FRAMES_Bits;


typedef struct _Ifx_ETH_RXIPV4_GOOD_OCTETS_Bits
{
    unsigned int RXIPV4GDOCT:32;
} Ifx_ETH_RXIPV4_GOOD_OCTETS_Bits;


typedef struct _Ifx_ETH_RXIPV4_HEADER_ERROR_FRAMES_Bits
{
    unsigned int RXIPV4HDRERRFRM:32;
} Ifx_ETH_RXIPV4_HEADER_ERROR_FRAMES_Bits;


typedef struct _Ifx_ETH_RXIPV4_HEADER_ERROR_OCTETS_Bits
{
    unsigned int RXIPV4HDRERROCT:32;
} Ifx_ETH_RXIPV4_HEADER_ERROR_OCTETS_Bits;


typedef struct _Ifx_ETH_RXIPV4_NO_PAYLOAD_FRAMES_Bits
{
    unsigned int RXIPV4NOPAYFRM:32;
} Ifx_ETH_RXIPV4_NO_PAYLOAD_FRAMES_Bits;


typedef struct _Ifx_ETH_RXIPV4_NO_PAYLOAD_OCTETS_Bits
{
    unsigned int RXIPV4NOPAYOCT:32;
} Ifx_ETH_RXIPV4_NO_PAYLOAD_OCTETS_Bits;


typedef struct _Ifx_ETH_RXIPV4_UDP_CHECKSUM_DISABLE_OCTETS_Bits
{
    unsigned int RXIPV4UDSBLOCT:32;
} Ifx_ETH_RXIPV4_UDP_CHECKSUM_DISABLE_OCTETS_Bits;



typedef struct _Ifx_ETH_RXIPV4_UDP_CHECKSUM_DISABLED_FRAMES_Bits
{
    unsigned int RXIPV4UDSBLFRM:32;
} Ifx_ETH_RXIPV4_UDP_CHECKSUM_DISABLED_FRAMES_Bits;


typedef struct _Ifx_ETH_RXIPV6_GOOD_FRAMES_Bits
{
    unsigned int RXIPV6GDFRM:32;
} Ifx_ETH_RXIPV6_GOOD_FRAMES_Bits;


typedef struct _Ifx_ETH_RXIPV6_GOOD_OCTETS_Bits
{
    unsigned int RXIPV6GDOCT:32;
} Ifx_ETH_RXIPV6_GOOD_OCTETS_Bits;


typedef struct _Ifx_ETH_RXIPV6_HEADER_ERROR_FRAMES_Bits
{
    unsigned int RXIPV6HDRERRFRM:32;
} Ifx_ETH_RXIPV6_HEADER_ERROR_FRAMES_Bits;


typedef struct _Ifx_ETH_RXIPV6_HEADER_ERROR_OCTETS_Bits
{
    unsigned int RXIPV6HDRERROCT:32;
} Ifx_ETH_RXIPV6_HEADER_ERROR_OCTETS_Bits;


typedef struct _Ifx_ETH_RXIPV6_NO_PAYLOAD_FRAMES_Bits
{
    unsigned int RXIPV6NOPAYFRM:32;
} Ifx_ETH_RXIPV6_NO_PAYLOAD_FRAMES_Bits;


typedef struct _Ifx_ETH_RXIPV6_NO_PAYLOAD_OCTETS_Bits
{
    unsigned int RXIPV6NOPAYOCT:32;
} Ifx_ETH_RXIPV6_NO_PAYLOAD_OCTETS_Bits;


typedef struct _Ifx_ETH_RXTCP_ERROR_FRAMES_Bits
{
    unsigned int RXTCPERRFRM:32;
} Ifx_ETH_RXTCP_ERROR_FRAMES_Bits;


typedef struct _Ifx_ETH_RXTCP_ERROR_OCTETS_Bits
{
    unsigned int RXTCPERROCT:32;
} Ifx_ETH_RXTCP_ERROR_OCTETS_Bits;


typedef struct _Ifx_ETH_RXTCP_GOOD_FRAMES_Bits
{
    unsigned int RXTCPGDFRM:32;
} Ifx_ETH_RXTCP_GOOD_FRAMES_Bits;


typedef struct _Ifx_ETH_RXTCP_GOOD_OCTETS_Bits
{
    unsigned int RXTCPGDOCT:32;
} Ifx_ETH_RXTCP_GOOD_OCTETS_Bits;


typedef struct _Ifx_ETH_RXUDP_ERROR_FRAMES_Bits
{
    unsigned int RXUDPERRFRM:32;
} Ifx_ETH_RXUDP_ERROR_FRAMES_Bits;


typedef struct _Ifx_ETH_RXUDP_ERROR_OCTETS_Bits
{
    unsigned int RXUDPERROCT:32;
} Ifx_ETH_RXUDP_ERROR_OCTETS_Bits;


typedef struct _Ifx_ETH_RXUDP_GOOD_FRAMES_Bits
{
    unsigned int RXUDPGDFRM:32;
} Ifx_ETH_RXUDP_GOOD_FRAMES_Bits;


typedef struct _Ifx_ETH_RXUDP_GOOD_OCTETS_Bits
{
    unsigned int RXUDPGDOCT:32;
} Ifx_ETH_RXUDP_GOOD_OCTETS_Bits;


typedef struct _Ifx_ETH_STATUS_Bits
{
    unsigned int TI:1;
    unsigned int TPS:1;
    unsigned int TU:1;
    unsigned int TJT:1;
    unsigned int OVF:1;
    unsigned int UNF:1;
    unsigned int RI:1;
    unsigned int RU:1;
    unsigned int RPS:1;
    unsigned int RWT:1;
    unsigned int ETI:1;
    unsigned int reserved_11:2;
    unsigned int FBI:1;
    unsigned int ERI:1;
    unsigned int AIS:1;
    unsigned int NIS:1;
    unsigned int RS:3;
    unsigned int TS:3;
    unsigned int EB:3;
    unsigned int GLI:1;
    unsigned int GMI:1;
    unsigned int GPI:1;
    unsigned int TTI:1;
    unsigned int GLPII:1;
    unsigned int reserved_31:1;
} Ifx_ETH_STATUS_Bits;


typedef struct _Ifx_ETH_SUB_SECOND_INCREMENT_Bits
{
    unsigned int SSINC:8;
    unsigned int reserved_8:24;
} Ifx_ETH_SUB_SECOND_INCREMENT_Bits;


typedef struct _Ifx_ETH_SYSTEM_TIME_HIGHER_WORD_SECONDS_Bits
{
    unsigned int TSHWR:16;
    unsigned int reserved_16:16;
} Ifx_ETH_SYSTEM_TIME_HIGHER_WORD_SECONDS_Bits;


typedef struct _Ifx_ETH_SYSTEM_TIME_NANOSECONDS_Bits
{
    unsigned int TSSS:31;
    unsigned int reserved_31:1;
} Ifx_ETH_SYSTEM_TIME_NANOSECONDS_Bits;


typedef struct _Ifx_ETH_SYSTEM_TIME_NANOSECONDS_UPDATE_Bits
{
    unsigned int TSSS:31;
    unsigned int ADDSUB:1;
} Ifx_ETH_SYSTEM_TIME_NANOSECONDS_UPDATE_Bits;


typedef struct _Ifx_ETH_SYSTEM_TIME_SECONDS_Bits
{
    unsigned int TSS:32;
} Ifx_ETH_SYSTEM_TIME_SECONDS_Bits;


typedef struct _Ifx_ETH_SYSTEM_TIME_SECONDS_UPDATE_Bits
{
    unsigned int TSS:32;
} Ifx_ETH_SYSTEM_TIME_SECONDS_UPDATE_Bits;


typedef struct _Ifx_ETH_TARGET_TIME_NANOSECONDS_Bits
{
    unsigned int TTSLO:31;
    unsigned int TRGTBUSY:1;
} Ifx_ETH_TARGET_TIME_NANOSECONDS_Bits;


typedef struct _Ifx_ETH_TARGET_TIME_SECONDS_Bits
{
    unsigned int TSTR:32;
} Ifx_ETH_TARGET_TIME_SECONDS_Bits;


typedef struct _Ifx_ETH_TIMESTAMP_ADDEND_Bits
{
    unsigned int TSAR:32;
} Ifx_ETH_TIMESTAMP_ADDEND_Bits;


typedef struct _Ifx_ETH_TIMESTAMP_CONTROL_Bits
{
    unsigned int TSENA:1;
    unsigned int TSCFUPDT:1;
    unsigned int TSINIT:1;
    unsigned int TSUPDT:1;
    unsigned int TSTRIG:1;
    unsigned int TSADDREG:1;
    unsigned int reserved_6:2;
    unsigned int TSENALL:1;
    unsigned int TSCTRLSSR:1;
    unsigned int TSVER2ENA:1;
    unsigned int TSIPENA:1;
    unsigned int TSIPV6ENA:1;
    unsigned int TSIPV4ENA:1;
    unsigned int TSEVNTENA:1;
    unsigned int TSMSTRENA:1;
    unsigned int SNAPTYPSEL:2;
    unsigned int TSENMACADDR:1;
    unsigned int reserved_19:5;
    unsigned int ATSFC:1;
    unsigned int ATSEN0:1;
    unsigned int ATSEN1:1;
    unsigned int ATSEN2:1;
    unsigned int ATSEN3:1;
    unsigned int reserved_29:3;
} Ifx_ETH_TIMESTAMP_CONTROL_Bits;


typedef struct _Ifx_ETH_TIMESTAMP_STATUS_Bits
{
    unsigned int TSSOVF:1;
    unsigned int TSTARGT:1;
    unsigned int AUXTSTRIG:1;
    unsigned int TSTRGTERR:1;
    unsigned int TSTARGT1:1;
    unsigned int TSTRGTERR1:1;
    unsigned int TSTARGT2:1;
    unsigned int TSTRGTERR2:1;
    unsigned int TSTARGT3:1;
    unsigned int TSTRGTERR3:1;
    unsigned int reserved_10:6;
    unsigned int ATSSTN:4;
    unsigned int reserved_20:4;
    unsigned int ATSSTM:1;
    unsigned int ATSNS:5;
    unsigned int reserved_30:2;
} Ifx_ETH_TIMESTAMP_STATUS_Bits;


typedef struct _Ifx_ETH_TRANSMIT_DESCRIPTOR_LIST_ADDRESS_Bits
{
    unsigned int reserved_0:2;
    unsigned int TDESLA:30;
} Ifx_ETH_TRANSMIT_DESCRIPTOR_LIST_ADDRESS_Bits;


typedef struct _Ifx_ETH_TRANSMIT_POLL_DEMAND_Bits
{
    unsigned int TPD:32;
} Ifx_ETH_TRANSMIT_POLL_DEMAND_Bits;



typedef struct _Ifx_ETH_TX_1024TOMAXOCTETS_FRAMES_GOOD_BAD_Bits
{
    unsigned int TX1024_MAXOCTGB:32;
} Ifx_ETH_TX_1024TOMAXOCTETS_FRAMES_GOOD_BAD_Bits;



typedef struct _Ifx_ETH_TX_128TO255OCTETS_FRAMES_GOOD_BAD_Bits
{
    unsigned int TX128_255OCTGB:32;
} Ifx_ETH_TX_128TO255OCTETS_FRAMES_GOOD_BAD_Bits;



typedef struct _Ifx_ETH_TX_256TO511OCTETS_FRAMES_GOOD_BAD_Bits
{
    unsigned int TX256_511OCTGB:32;
} Ifx_ETH_TX_256TO511OCTETS_FRAMES_GOOD_BAD_Bits;



typedef struct _Ifx_ETH_TX_512TO1023OCTETS_FRAMES_GOOD_BAD_Bits
{
    unsigned int TX512_1023OCTGB:32;
} Ifx_ETH_TX_512TO1023OCTETS_FRAMES_GOOD_BAD_Bits;


typedef struct _Ifx_ETH_TX_64OCTETS_FRAMES_GOOD_BAD_Bits
{
    unsigned int TX64OCTGB:32;
} Ifx_ETH_TX_64OCTETS_FRAMES_GOOD_BAD_Bits;



typedef struct _Ifx_ETH_TX_65TO127OCTETS_FRAMES_GOOD_BAD_Bits
{
    unsigned int TX65_127OCTGB:32;
} Ifx_ETH_TX_65TO127OCTETS_FRAMES_GOOD_BAD_Bits;


typedef struct _Ifx_ETH_TX_BROADCAST_FRAMES_GOOD_BAD_Bits
{
    unsigned int TXBCASTGB:32;
} Ifx_ETH_TX_BROADCAST_FRAMES_GOOD_BAD_Bits;


typedef struct _Ifx_ETH_TX_BROADCAST_FRAMES_GOOD_Bits
{
    unsigned int TXBCASTG:32;
} Ifx_ETH_TX_BROADCAST_FRAMES_GOOD_Bits;


typedef struct _Ifx_ETH_TX_CARRIER_ERROR_FRAMES_Bits
{
    unsigned int TXCARR:32;
} Ifx_ETH_TX_CARRIER_ERROR_FRAMES_Bits;


typedef struct _Ifx_ETH_TX_DEFERRED_FRAMES_Bits
{
    unsigned int TXDEFRD:32;
} Ifx_ETH_TX_DEFERRED_FRAMES_Bits;



typedef struct _Ifx_ETH_TX_EXCESSIVE_COLLISION_FRAMES_Bits
{
    unsigned int TXEXSCOL:32;
} Ifx_ETH_TX_EXCESSIVE_COLLISION_FRAMES_Bits;



typedef struct _Ifx_ETH_TX_EXCESSIVE_DEFERRAL_ERROR_Bits
{
    unsigned int TXEXSDEF:32;
} Ifx_ETH_TX_EXCESSIVE_DEFERRAL_ERROR_Bits;


typedef struct _Ifx_ETH_TX_FRAME_COUNT_GOOD_BAD_Bits
{
    unsigned int TXFRMGB:32;
} Ifx_ETH_TX_FRAME_COUNT_GOOD_BAD_Bits;


typedef struct _Ifx_ETH_TX_FRAME_COUNT_GOOD_Bits
{
    unsigned int TXFRMG:32;
} Ifx_ETH_TX_FRAME_COUNT_GOOD_Bits;


typedef struct _Ifx_ETH_TX_LATE_COLLISION_FRAMES_Bits
{
    unsigned int TXLATECOL:32;
} Ifx_ETH_TX_LATE_COLLISION_FRAMES_Bits;


typedef struct _Ifx_ETH_TX_MULTICAST_FRAMES_GOOD_BAD_Bits
{
    unsigned int TXMCASTGB:32;
} Ifx_ETH_TX_MULTICAST_FRAMES_GOOD_BAD_Bits;


typedef struct _Ifx_ETH_TX_MULTICAST_FRAMES_GOOD_Bits
{
    unsigned int TXMCASTG:32;
} Ifx_ETH_TX_MULTICAST_FRAMES_GOOD_Bits;



typedef struct _Ifx_ETH_TX_MULTIPLE_COLLISION_GOOD_FRAMES_Bits
{
    unsigned int TXMULTCOLG:32;
} Ifx_ETH_TX_MULTIPLE_COLLISION_GOOD_FRAMES_Bits;


typedef struct _Ifx_ETH_TX_OCTET_COUNT_GOOD_BAD_Bits
{
    unsigned int TXOCTGB:32;
} Ifx_ETH_TX_OCTET_COUNT_GOOD_BAD_Bits;


typedef struct _Ifx_ETH_TX_OCTET_COUNT_GOOD_Bits
{
    unsigned int TXOCTG:32;
} Ifx_ETH_TX_OCTET_COUNT_GOOD_Bits;


typedef struct _Ifx_ETH_TX_OSIZE_FRAMES_GOOD_Bits
{
    unsigned int TXOSIZG:32;
} Ifx_ETH_TX_OSIZE_FRAMES_GOOD_Bits;


typedef struct _Ifx_ETH_TX_PAUSE_FRAMES_Bits
{
    unsigned int TXPAUSE:32;
} Ifx_ETH_TX_PAUSE_FRAMES_Bits;



typedef struct _Ifx_ETH_TX_SINGLE_COLLISION_GOOD_FRAMES_Bits
{
    unsigned int TXSNGLCOLG:32;
} Ifx_ETH_TX_SINGLE_COLLISION_GOOD_FRAMES_Bits;


typedef struct _Ifx_ETH_TX_UNDERFLOW_ERROR_FRAMES_Bits
{
    unsigned int TXUNDRFLW:32;
} Ifx_ETH_TX_UNDERFLOW_ERROR_FRAMES_Bits;


typedef struct _Ifx_ETH_TX_UNICAST_FRAMES_GOOD_BAD_Bits
{
    unsigned int TXUCASTGB:32;
} Ifx_ETH_TX_UNICAST_FRAMES_GOOD_BAD_Bits;


typedef struct _Ifx_ETH_TX_VLAN_FRAMES_GOOD_Bits
{
    unsigned int TXVLANG:32;
} Ifx_ETH_TX_VLAN_FRAMES_GOOD_Bits;


typedef struct _Ifx_ETH_VERSION_Bits
{
    unsigned int SNPSVER:8;
    unsigned int USERVER:8;
    unsigned int reserved_16:16;
} Ifx_ETH_VERSION_Bits;


typedef struct _Ifx_ETH_VLAN_TAG_Bits
{
    unsigned int VL:16;
    unsigned int ETV:1;
    unsigned int VTIM:1;
    unsigned int ESVL:1;
    unsigned int VTHM:1;
    unsigned int reserved_20:12;
} Ifx_ETH_VLAN_TAG_Bits;







typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_ACCEN0_Bits B;
} Ifx_ETH_ACCEN0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_ACCEN1_Bits B;
} Ifx_ETH_ACCEN1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_AHB_OR_AXI_STATUS_Bits B;
} Ifx_ETH_AHB_OR_AXI_STATUS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_BUS_MODE_Bits B;
} Ifx_ETH_BUS_MODE;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_CLC_Bits B;
} Ifx_ETH_CLC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_CURRENT_HOST_RECEIVE_BUFFER_ADDRESS_Bits B;
} Ifx_ETH_CURRENT_HOST_RECEIVE_BUFFER_ADDRESS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_CURRENT_HOST_RECEIVE_DESCRIPTOR_Bits B;
} Ifx_ETH_CURRENT_HOST_RECEIVE_DESCRIPTOR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_CURRENT_HOST_TRANSMIT_BUFFER_ADDRESS_Bits B;
} Ifx_ETH_CURRENT_HOST_TRANSMIT_BUFFER_ADDRESS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_CURRENT_HOST_TRANSMIT_DESCRIPTOR_Bits B;
} Ifx_ETH_CURRENT_HOST_TRANSMIT_DESCRIPTOR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_DEBUG_Bits B;
} Ifx_ETH_DEBUG;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_FLOW_CONTROL_Bits B;
} Ifx_ETH_FLOW_CONTROL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_GMII_ADDRESS_Bits B;
} Ifx_ETH_GMII_ADDRESS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_GMII_DATA_Bits B;
} Ifx_ETH_GMII_DATA;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_GPCTL_Bits B;
} Ifx_ETH_GPCTL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_HASH_TABLE_HIGH_Bits B;
} Ifx_ETH_HASH_TABLE_HIGH;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_HASH_TABLE_LOW_Bits B;
} Ifx_ETH_HASH_TABLE_LOW;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_HW_FEATURE_Bits B;
} Ifx_ETH_HW_FEATURE;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_ID_Bits B;
} Ifx_ETH_ID;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_INTERRUPT_ENABLE_Bits B;
} Ifx_ETH_INTERRUPT_ENABLE;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_INTERRUPT_MASK_Bits B;
} Ifx_ETH_INTERRUPT_MASK;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_INTERRUPT_STATUS_Bits B;
} Ifx_ETH_INTERRUPT_STATUS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_KRST0_Bits B;
} Ifx_ETH_KRST0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_KRST1_Bits B;
} Ifx_ETH_KRST1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_KRSTCLR_Bits B;
} Ifx_ETH_KRSTCLR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_MAC_ADDRESS_HIGH_Bits B;
} Ifx_ETH_MAC_ADDRESS_HIGH;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_MAC_ADDRESS_LOW_Bits B;
} Ifx_ETH_MAC_ADDRESS_LOW;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_MAC_CONFIGURATION_Bits B;
} Ifx_ETH_MAC_CONFIGURATION;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_MAC_FRAME_FILTER_Bits B;
} Ifx_ETH_MAC_FRAME_FILTER;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_MISSED_FRAME_AND_BUFFER_OVERFLOW_COUNTER_Bits B;
} Ifx_ETH_MISSED_FRAME_AND_BUFFER_OVERFLOW_COUNTER;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_MMC_CONTROL_Bits B;
} Ifx_ETH_MMC_CONTROL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_MMC_IPC_RECEIVE_INTERRUPT_Bits B;
} Ifx_ETH_MMC_IPC_RECEIVE_INTERRUPT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_MMC_IPC_RECEIVE_INTERRUPT_MASK_Bits B;
} Ifx_ETH_MMC_IPC_RECEIVE_INTERRUPT_MASK;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_MMC_RECEIVE_INTERRUPT_Bits B;
} Ifx_ETH_MMC_RECEIVE_INTERRUPT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_MMC_RECEIVE_INTERRUPT_MASK_Bits B;
} Ifx_ETH_MMC_RECEIVE_INTERRUPT_MASK;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_MMC_TRANSMIT_INTERRUPT_Bits B;
} Ifx_ETH_MMC_TRANSMIT_INTERRUPT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_MMC_TRANSMIT_INTERRUPT_MASK_Bits B;
} Ifx_ETH_MMC_TRANSMIT_INTERRUPT_MASK;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_OPERATION_MODE_Bits B;
} Ifx_ETH_OPERATION_MODE;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_PMT_CONTROL_STATUS_Bits B;
} Ifx_ETH_PMT_CONTROL_STATUS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_PPS_CONTROL_Bits B;
} Ifx_ETH_PPS_CONTROL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_RECEIVE_DESCRIPTOR_LIST_ADDRESS_Bits B;
} Ifx_ETH_RECEIVE_DESCRIPTOR_LIST_ADDRESS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_RECEIVE_INTERRUPT_WATCHDOG_TIMER_Bits B;
} Ifx_ETH_RECEIVE_INTERRUPT_WATCHDOG_TIMER;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_RECEIVE_POLL_DEMAND_Bits B;
} Ifx_ETH_RECEIVE_POLL_DEMAND;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_REMOTE_WAKE_UP_FRAME_FILTER_Bits B;
} Ifx_ETH_REMOTE_WAKE_UP_FRAME_FILTER;



typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_RX_1024TOMAXOCTETS_FRAMES_GOOD_BAD_Bits B;
} Ifx_ETH_RX_1024TOMAXOCTETS_FRAMES_GOOD_BAD;



typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_RX_128TO255OCTETS_FRAMES_GOOD_BAD_Bits B;
} Ifx_ETH_RX_128TO255OCTETS_FRAMES_GOOD_BAD;



typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_RX_256TO511OCTETS_FRAMES_GOOD_BAD_Bits B;
} Ifx_ETH_RX_256TO511OCTETS_FRAMES_GOOD_BAD;



typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_RX_512TO1023OCTETS_FRAMES_GOOD_BAD_Bits B;
} Ifx_ETH_RX_512TO1023OCTETS_FRAMES_GOOD_BAD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_RX_64OCTETS_FRAMES_GOOD_BAD_Bits B;
} Ifx_ETH_RX_64OCTETS_FRAMES_GOOD_BAD;



typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_RX_65TO127OCTETS_FRAMES_GOOD_BAD_Bits B;
} Ifx_ETH_RX_65TO127OCTETS_FRAMES_GOOD_BAD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_RX_ALIGNMENT_ERROR_FRAMES_Bits B;
} Ifx_ETH_RX_ALIGNMENT_ERROR_FRAMES;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_RX_BROADCAST_FRAMES_GOOD_Bits B;
} Ifx_ETH_RX_BROADCAST_FRAMES_GOOD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_RX_CONTROL_FRAMES_GOOD_Bits B;
} Ifx_ETH_RX_CONTROL_FRAMES_GOOD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_RX_CRC_ERROR_FRAMES_Bits B;
} Ifx_ETH_RX_CRC_ERROR_FRAMES;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_RX_FIFO_OVERFLOW_FRAMES_Bits B;
} Ifx_ETH_RX_FIFO_OVERFLOW_FRAMES;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_RX_FRAMES_COUNT_GOOD_BAD_Bits B;
} Ifx_ETH_RX_FRAMES_COUNT_GOOD_BAD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_RX_JABBER_ERROR_FRAMES_Bits B;
} Ifx_ETH_RX_JABBER_ERROR_FRAMES;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_RX_LENGTH_ERROR_FRAMES_Bits B;
} Ifx_ETH_RX_LENGTH_ERROR_FRAMES;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_RX_MULTICAST_FRAMES_GOOD_Bits B;
} Ifx_ETH_RX_MULTICAST_FRAMES_GOOD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_RX_OCTET_COUNT_GOOD_Bits B;
} Ifx_ETH_RX_OCTET_COUNT_GOOD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_RX_OCTET_COUNT_GOOD_BAD_Bits B;
} Ifx_ETH_RX_OCTET_COUNT_GOOD_BAD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_RX_OUT_OF_RANGE_TYPE_FRAMES_Bits B;
} Ifx_ETH_RX_OUT_OF_RANGE_TYPE_FRAMES;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_RX_OVERSIZE_FRAMES_GOOD_Bits B;
} Ifx_ETH_RX_OVERSIZE_FRAMES_GOOD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_RX_PAUSE_FRAMES_Bits B;
} Ifx_ETH_RX_PAUSE_FRAMES;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_RX_RECEIVE_ERROR_FRAMES_Bits B;
} Ifx_ETH_RX_RECEIVE_ERROR_FRAMES;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_RX_RUNT_ERROR_FRAMES_Bits B;
} Ifx_ETH_RX_RUNT_ERROR_FRAMES;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_RX_UNDERSIZE_FRAMES_GOOD_Bits B;
} Ifx_ETH_RX_UNDERSIZE_FRAMES_GOOD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_RX_UNICAST_FRAMES_GOOD_Bits B;
} Ifx_ETH_RX_UNICAST_FRAMES_GOOD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_RX_VLAN_FRAMES_GOOD_BAD_Bits B;
} Ifx_ETH_RX_VLAN_FRAMES_GOOD_BAD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_RX_WATCHDOG_ERROR_FRAMES_Bits B;
} Ifx_ETH_RX_WATCHDOG_ERROR_FRAMES;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_RXICMP_ERROR_FRAMES_Bits B;
} Ifx_ETH_RXICMP_ERROR_FRAMES;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_RXICMP_ERROR_OCTETS_Bits B;
} Ifx_ETH_RXICMP_ERROR_OCTETS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_RXICMP_GOOD_FRAMES_Bits B;
} Ifx_ETH_RXICMP_GOOD_FRAMES;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_RXICMP_GOOD_OCTETS_Bits B;
} Ifx_ETH_RXICMP_GOOD_OCTETS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_RXIPV4_FRAGMENTED_FRAMES_Bits B;
} Ifx_ETH_RXIPV4_FRAGMENTED_FRAMES;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_RXIPV4_FRAGMENTED_OCTETS_Bits B;
} Ifx_ETH_RXIPV4_FRAGMENTED_OCTETS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_RXIPV4_GOOD_FRAMES_Bits B;
} Ifx_ETH_RXIPV4_GOOD_FRAMES;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_RXIPV4_GOOD_OCTETS_Bits B;
} Ifx_ETH_RXIPV4_GOOD_OCTETS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_RXIPV4_HEADER_ERROR_FRAMES_Bits B;
} Ifx_ETH_RXIPV4_HEADER_ERROR_FRAMES;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_RXIPV4_HEADER_ERROR_OCTETS_Bits B;
} Ifx_ETH_RXIPV4_HEADER_ERROR_OCTETS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_RXIPV4_NO_PAYLOAD_FRAMES_Bits B;
} Ifx_ETH_RXIPV4_NO_PAYLOAD_FRAMES;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_RXIPV4_NO_PAYLOAD_OCTETS_Bits B;
} Ifx_ETH_RXIPV4_NO_PAYLOAD_OCTETS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_RXIPV4_UDP_CHECKSUM_DISABLE_OCTETS_Bits B;
} Ifx_ETH_RXIPV4_UDP_CHECKSUM_DISABLE_OCTETS;



typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_RXIPV4_UDP_CHECKSUM_DISABLED_FRAMES_Bits B;
} Ifx_ETH_RXIPV4_UDP_CHECKSUM_DISABLED_FRAMES;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_RXIPV6_GOOD_FRAMES_Bits B;
} Ifx_ETH_RXIPV6_GOOD_FRAMES;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_RXIPV6_GOOD_OCTETS_Bits B;
} Ifx_ETH_RXIPV6_GOOD_OCTETS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_RXIPV6_HEADER_ERROR_FRAMES_Bits B;
} Ifx_ETH_RXIPV6_HEADER_ERROR_FRAMES;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_RXIPV6_HEADER_ERROR_OCTETS_Bits B;
} Ifx_ETH_RXIPV6_HEADER_ERROR_OCTETS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_RXIPV6_NO_PAYLOAD_FRAMES_Bits B;
} Ifx_ETH_RXIPV6_NO_PAYLOAD_FRAMES;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_RXIPV6_NO_PAYLOAD_OCTETS_Bits B;
} Ifx_ETH_RXIPV6_NO_PAYLOAD_OCTETS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_RXTCP_ERROR_FRAMES_Bits B;
} Ifx_ETH_RXTCP_ERROR_FRAMES;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_RXTCP_ERROR_OCTETS_Bits B;
} Ifx_ETH_RXTCP_ERROR_OCTETS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_RXTCP_GOOD_FRAMES_Bits B;
} Ifx_ETH_RXTCP_GOOD_FRAMES;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_RXTCP_GOOD_OCTETS_Bits B;
} Ifx_ETH_RXTCP_GOOD_OCTETS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_RXUDP_ERROR_FRAMES_Bits B;
} Ifx_ETH_RXUDP_ERROR_FRAMES;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_RXUDP_ERROR_OCTETS_Bits B;
} Ifx_ETH_RXUDP_ERROR_OCTETS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_RXUDP_GOOD_FRAMES_Bits B;
} Ifx_ETH_RXUDP_GOOD_FRAMES;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_RXUDP_GOOD_OCTETS_Bits B;
} Ifx_ETH_RXUDP_GOOD_OCTETS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_STATUS_Bits B;
} Ifx_ETH_STATUS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_SUB_SECOND_INCREMENT_Bits B;
} Ifx_ETH_SUB_SECOND_INCREMENT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_SYSTEM_TIME_HIGHER_WORD_SECONDS_Bits B;
} Ifx_ETH_SYSTEM_TIME_HIGHER_WORD_SECONDS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_SYSTEM_TIME_NANOSECONDS_Bits B;
} Ifx_ETH_SYSTEM_TIME_NANOSECONDS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_SYSTEM_TIME_NANOSECONDS_UPDATE_Bits B;
} Ifx_ETH_SYSTEM_TIME_NANOSECONDS_UPDATE;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_SYSTEM_TIME_SECONDS_Bits B;
} Ifx_ETH_SYSTEM_TIME_SECONDS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_SYSTEM_TIME_SECONDS_UPDATE_Bits B;
} Ifx_ETH_SYSTEM_TIME_SECONDS_UPDATE;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_TARGET_TIME_NANOSECONDS_Bits B;
} Ifx_ETH_TARGET_TIME_NANOSECONDS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_TARGET_TIME_SECONDS_Bits B;
} Ifx_ETH_TARGET_TIME_SECONDS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_TIMESTAMP_ADDEND_Bits B;
} Ifx_ETH_TIMESTAMP_ADDEND;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_TIMESTAMP_CONTROL_Bits B;
} Ifx_ETH_TIMESTAMP_CONTROL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_TIMESTAMP_STATUS_Bits B;
} Ifx_ETH_TIMESTAMP_STATUS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_TRANSMIT_DESCRIPTOR_LIST_ADDRESS_Bits B;
} Ifx_ETH_TRANSMIT_DESCRIPTOR_LIST_ADDRESS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_TRANSMIT_POLL_DEMAND_Bits B;
} Ifx_ETH_TRANSMIT_POLL_DEMAND;



typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_TX_1024TOMAXOCTETS_FRAMES_GOOD_BAD_Bits B;
} Ifx_ETH_TX_1024TOMAXOCTETS_FRAMES_GOOD_BAD;



typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_TX_128TO255OCTETS_FRAMES_GOOD_BAD_Bits B;
} Ifx_ETH_TX_128TO255OCTETS_FRAMES_GOOD_BAD;



typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_TX_256TO511OCTETS_FRAMES_GOOD_BAD_Bits B;
} Ifx_ETH_TX_256TO511OCTETS_FRAMES_GOOD_BAD;



typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_TX_512TO1023OCTETS_FRAMES_GOOD_BAD_Bits B;
} Ifx_ETH_TX_512TO1023OCTETS_FRAMES_GOOD_BAD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_TX_64OCTETS_FRAMES_GOOD_BAD_Bits B;
} Ifx_ETH_TX_64OCTETS_FRAMES_GOOD_BAD;



typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_TX_65TO127OCTETS_FRAMES_GOOD_BAD_Bits B;
} Ifx_ETH_TX_65TO127OCTETS_FRAMES_GOOD_BAD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_TX_BROADCAST_FRAMES_GOOD_Bits B;
} Ifx_ETH_TX_BROADCAST_FRAMES_GOOD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_TX_BROADCAST_FRAMES_GOOD_BAD_Bits B;
} Ifx_ETH_TX_BROADCAST_FRAMES_GOOD_BAD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_TX_CARRIER_ERROR_FRAMES_Bits B;
} Ifx_ETH_TX_CARRIER_ERROR_FRAMES;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_TX_DEFERRED_FRAMES_Bits B;
} Ifx_ETH_TX_DEFERRED_FRAMES;



typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_TX_EXCESSIVE_COLLISION_FRAMES_Bits B;
} Ifx_ETH_TX_EXCESSIVE_COLLISION_FRAMES;



typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_TX_EXCESSIVE_DEFERRAL_ERROR_Bits B;
} Ifx_ETH_TX_EXCESSIVE_DEFERRAL_ERROR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_TX_FRAME_COUNT_GOOD_Bits B;
} Ifx_ETH_TX_FRAME_COUNT_GOOD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_TX_FRAME_COUNT_GOOD_BAD_Bits B;
} Ifx_ETH_TX_FRAME_COUNT_GOOD_BAD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_TX_LATE_COLLISION_FRAMES_Bits B;
} Ifx_ETH_TX_LATE_COLLISION_FRAMES;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_TX_MULTICAST_FRAMES_GOOD_Bits B;
} Ifx_ETH_TX_MULTICAST_FRAMES_GOOD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_TX_MULTICAST_FRAMES_GOOD_BAD_Bits B;
} Ifx_ETH_TX_MULTICAST_FRAMES_GOOD_BAD;



typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_TX_MULTIPLE_COLLISION_GOOD_FRAMES_Bits B;
} Ifx_ETH_TX_MULTIPLE_COLLISION_GOOD_FRAMES;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_TX_OCTET_COUNT_GOOD_Bits B;
} Ifx_ETH_TX_OCTET_COUNT_GOOD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_TX_OCTET_COUNT_GOOD_BAD_Bits B;
} Ifx_ETH_TX_OCTET_COUNT_GOOD_BAD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_TX_OSIZE_FRAMES_GOOD_Bits B;
} Ifx_ETH_TX_OSIZE_FRAMES_GOOD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_TX_PAUSE_FRAMES_Bits B;
} Ifx_ETH_TX_PAUSE_FRAMES;



typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_TX_SINGLE_COLLISION_GOOD_FRAMES_Bits B;
} Ifx_ETH_TX_SINGLE_COLLISION_GOOD_FRAMES;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_TX_UNDERFLOW_ERROR_FRAMES_Bits B;
} Ifx_ETH_TX_UNDERFLOW_ERROR_FRAMES;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_TX_UNICAST_FRAMES_GOOD_BAD_Bits B;
} Ifx_ETH_TX_UNICAST_FRAMES_GOOD_BAD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_TX_VLAN_FRAMES_GOOD_Bits B;
} Ifx_ETH_TX_VLAN_FRAMES_GOOD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_VERSION_Bits B;
} Ifx_ETH_VERSION;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_ETH_VLAN_TAG_Bits B;
} Ifx_ETH_VLAN_TAG;
# 2534 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxEth_regdef.h" 3
typedef volatile struct _Ifx_ETH_MAC_ADDRESS
{
    Ifx_ETH_MAC_ADDRESS_HIGH HIGH;
    Ifx_ETH_MAC_ADDRESS_LOW LOW;
} Ifx_ETH_MAC_ADDRESS;
# 2551 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxEth_regdef.h" 3
typedef volatile struct _Ifx_ETH
{
    Ifx_ETH_CLC CLC;
    Ifx_ETH_ID ID;
    Ifx_ETH_GPCTL GPCTL;
    Ifx_ETH_ACCEN0 ACCEN0;
    Ifx_ETH_ACCEN1 ACCEN1;
    Ifx_ETH_KRST0 KRST0;
    Ifx_ETH_KRST1 KRST1;
    Ifx_ETH_KRSTCLR KRSTCLR;
    unsigned char reserved_20[4064];
    Ifx_ETH_MAC_CONFIGURATION MAC_CONFIGURATION;
    Ifx_ETH_MAC_FRAME_FILTER MAC_FRAME_FILTER;
    Ifx_ETH_HASH_TABLE_HIGH HASH_TABLE_HIGH;
    Ifx_ETH_HASH_TABLE_LOW HASH_TABLE_LOW;
    Ifx_ETH_GMII_ADDRESS GMII_ADDRESS;
    Ifx_ETH_GMII_DATA GMII_DATA;
    Ifx_ETH_FLOW_CONTROL FLOW_CONTROL;
    Ifx_ETH_VLAN_TAG VLAN_TAG;
    Ifx_ETH_VERSION VERSION;
    Ifx_ETH_DEBUG DEBUG;
    Ifx_ETH_REMOTE_WAKE_UP_FRAME_FILTER REMOTE_WAKE_UP_FRAME_FILTER;
    Ifx_ETH_PMT_CONTROL_STATUS PMT_CONTROL_STATUS;
    unsigned char reserved_1030[8];
    Ifx_ETH_INTERRUPT_STATUS INTERRUPT_STATUS;
    Ifx_ETH_INTERRUPT_MASK INTERRUPT_MASK;
    Ifx_ETH_MAC_ADDRESS MAC_ADDRESS_G0[16];
    unsigned char reserved_10C0[64];
    Ifx_ETH_MMC_CONTROL MMC_CONTROL;
    Ifx_ETH_MMC_RECEIVE_INTERRUPT MMC_RECEIVE_INTERRUPT;
    Ifx_ETH_MMC_TRANSMIT_INTERRUPT MMC_TRANSMIT_INTERRUPT;
    Ifx_ETH_MMC_RECEIVE_INTERRUPT_MASK MMC_RECEIVE_INTERRUPT_MASK;
    Ifx_ETH_MMC_TRANSMIT_INTERRUPT_MASK MMC_TRANSMIT_INTERRUPT_MASK;
    Ifx_ETH_TX_OCTET_COUNT_GOOD_BAD TX_OCTET_COUNT_GOOD_BAD;
    Ifx_ETH_TX_FRAME_COUNT_GOOD_BAD TX_FRAME_COUNT_GOOD_BAD;
    Ifx_ETH_TX_BROADCAST_FRAMES_GOOD TX_BROADCAST_FRAMES_GOOD;
    Ifx_ETH_TX_MULTICAST_FRAMES_GOOD TX_MULTICAST_FRAMES_GOOD;
    Ifx_ETH_TX_64OCTETS_FRAMES_GOOD_BAD TX_64OCTETS_FRAMES_GOOD_BAD;
    Ifx_ETH_TX_65TO127OCTETS_FRAMES_GOOD_BAD TX_65TO127OCTETS_FRAMES_GOOD_BAD;
    Ifx_ETH_TX_128TO255OCTETS_FRAMES_GOOD_BAD TX_128TO255OCTETS_FRAMES_GOOD_BAD;
    Ifx_ETH_TX_256TO511OCTETS_FRAMES_GOOD_BAD TX_256TO511OCTETS_FRAMES_GOOD_BAD;
    Ifx_ETH_TX_512TO1023OCTETS_FRAMES_GOOD_BAD TX_512TO1023OCTETS_FRAMES_GOOD_BAD;
    Ifx_ETH_TX_1024TOMAXOCTETS_FRAMES_GOOD_BAD TX_1024TOMAXOCTETS_FRAMES_GOOD_BAD;
    Ifx_ETH_TX_UNICAST_FRAMES_GOOD_BAD TX_UNICAST_FRAMES_GOOD_BAD;
    Ifx_ETH_TX_MULTICAST_FRAMES_GOOD_BAD TX_MULTICAST_FRAMES_GOOD_BAD;
    Ifx_ETH_TX_BROADCAST_FRAMES_GOOD_BAD TX_BROADCAST_FRAMES_GOOD_BAD;
    Ifx_ETH_TX_UNDERFLOW_ERROR_FRAMES TX_UNDERFLOW_ERROR_FRAMES;
    Ifx_ETH_TX_SINGLE_COLLISION_GOOD_FRAMES TX_SINGLE_COLLISION_GOOD_FRAMES;
    Ifx_ETH_TX_MULTIPLE_COLLISION_GOOD_FRAMES TX_MULTIPLE_COLLISION_GOOD_FRAMES;
    Ifx_ETH_TX_DEFERRED_FRAMES TX_DEFERRED_FRAMES;
    Ifx_ETH_TX_LATE_COLLISION_FRAMES TX_LATE_COLLISION_FRAMES;
    Ifx_ETH_TX_EXCESSIVE_COLLISION_FRAMES TX_EXCESSIVE_COLLISION_FRAMES;
    Ifx_ETH_TX_CARRIER_ERROR_FRAMES TX_CARRIER_ERROR_FRAMES;
    Ifx_ETH_TX_OCTET_COUNT_GOOD TX_OCTET_COUNT_GOOD;
    Ifx_ETH_TX_FRAME_COUNT_GOOD TX_FRAME_COUNT_GOOD;
    Ifx_ETH_TX_EXCESSIVE_DEFERRAL_ERROR TX_EXCESSIVE_DEFERRAL_ERROR;
    Ifx_ETH_TX_PAUSE_FRAMES TX_PAUSE_FRAMES;
    Ifx_ETH_TX_VLAN_FRAMES_GOOD TX_VLAN_FRAMES_GOOD;
    Ifx_ETH_TX_OSIZE_FRAMES_GOOD TX_OSIZE_FRAMES_GOOD;
    unsigned char reserved_117C[4];
    Ifx_ETH_RX_FRAMES_COUNT_GOOD_BAD RX_FRAMES_COUNT_GOOD_BAD;
    Ifx_ETH_RX_OCTET_COUNT_GOOD_BAD RX_OCTET_COUNT_GOOD_BAD;
    Ifx_ETH_RX_OCTET_COUNT_GOOD RX_OCTET_COUNT_GOOD;
    Ifx_ETH_RX_BROADCAST_FRAMES_GOOD RX_BROADCAST_FRAMES_GOOD;
    Ifx_ETH_RX_MULTICAST_FRAMES_GOOD RX_MULTICAST_FRAMES_GOOD;
    Ifx_ETH_RX_CRC_ERROR_FRAMES RX_CRC_ERROR_FRAMES;
    Ifx_ETH_RX_ALIGNMENT_ERROR_FRAMES RX_ALIGNMENT_ERROR_FRAMES;
    Ifx_ETH_RX_RUNT_ERROR_FRAMES RX_RUNT_ERROR_FRAMES;
    Ifx_ETH_RX_JABBER_ERROR_FRAMES RX_JABBER_ERROR_FRAMES;
    Ifx_ETH_RX_UNDERSIZE_FRAMES_GOOD RX_UNDERSIZE_FRAMES_GOOD;
    Ifx_ETH_RX_OVERSIZE_FRAMES_GOOD RX_OVERSIZE_FRAMES_GOOD;
    Ifx_ETH_RX_64OCTETS_FRAMES_GOOD_BAD RX_64OCTETS_FRAMES_GOOD_BAD;
    Ifx_ETH_RX_65TO127OCTETS_FRAMES_GOOD_BAD RX_65TO127OCTETS_FRAMES_GOOD_BAD;
    Ifx_ETH_RX_128TO255OCTETS_FRAMES_GOOD_BAD RX_128TO255OCTETS_FRAMES_GOOD_BAD;
    Ifx_ETH_RX_256TO511OCTETS_FRAMES_GOOD_BAD RX_256TO511OCTETS_FRAMES_GOOD_BAD;
    Ifx_ETH_RX_512TO1023OCTETS_FRAMES_GOOD_BAD RX_512TO1023OCTETS_FRAMES_GOOD_BAD;
    Ifx_ETH_RX_1024TOMAXOCTETS_FRAMES_GOOD_BAD RX_1024TOMAXOCTETS_FRAMES_GOOD_BAD;
    Ifx_ETH_RX_UNICAST_FRAMES_GOOD RX_UNICAST_FRAMES_GOOD;
    Ifx_ETH_RX_LENGTH_ERROR_FRAMES RX_LENGTH_ERROR_FRAMES;
    Ifx_ETH_RX_OUT_OF_RANGE_TYPE_FRAMES RX_OUT_OF_RANGE_TYPE_FRAMES;
    Ifx_ETH_RX_PAUSE_FRAMES RX_PAUSE_FRAMES;
    Ifx_ETH_RX_FIFO_OVERFLOW_FRAMES RX_FIFO_OVERFLOW_FRAMES;
    Ifx_ETH_RX_VLAN_FRAMES_GOOD_BAD RX_VLAN_FRAMES_GOOD_BAD;
    Ifx_ETH_RX_WATCHDOG_ERROR_FRAMES RX_WATCHDOG_ERROR_FRAMES;
    Ifx_ETH_RX_RECEIVE_ERROR_FRAMES RX_RECEIVE_ERROR_FRAMES;
    Ifx_ETH_RX_CONTROL_FRAMES_GOOD RX_CONTROL_FRAMES_GOOD;
    unsigned char reserved_11E8[24];
    Ifx_ETH_MMC_IPC_RECEIVE_INTERRUPT_MASK MMC_IPC_RECEIVE_INTERRUPT_MASK;
    unsigned char reserved_1204[4];
    Ifx_ETH_MMC_IPC_RECEIVE_INTERRUPT MMC_IPC_RECEIVE_INTERRUPT;
    unsigned char reserved_120C[4];
    Ifx_ETH_RXIPV4_GOOD_FRAMES RXIPV4_GOOD_FRAMES;
    Ifx_ETH_RXIPV4_HEADER_ERROR_FRAMES RXIPV4_HEADER_ERROR_FRAMES;
    Ifx_ETH_RXIPV4_NO_PAYLOAD_FRAMES RXIPV4_NO_PAYLOAD_FRAMES;
    Ifx_ETH_RXIPV4_FRAGMENTED_FRAMES RXIPV4_FRAGMENTED_FRAMES;
    Ifx_ETH_RXIPV4_UDP_CHECKSUM_DISABLED_FRAMES RXIPV4_UDP_CHECKSUM_DISABLED_FRAMES;
    Ifx_ETH_RXIPV6_GOOD_FRAMES RXIPV6_GOOD_FRAMES;
    Ifx_ETH_RXIPV6_HEADER_ERROR_FRAMES RXIPV6_HEADER_ERROR_FRAMES;
    Ifx_ETH_RXIPV6_NO_PAYLOAD_FRAMES RXIPV6_NO_PAYLOAD_FRAMES;
    Ifx_ETH_RXUDP_GOOD_FRAMES RXUDP_GOOD_FRAMES;
    Ifx_ETH_RXUDP_ERROR_FRAMES RXUDP_ERROR_FRAMES;
    Ifx_ETH_RXTCP_GOOD_FRAMES RXTCP_GOOD_FRAMES;
    Ifx_ETH_RXTCP_ERROR_FRAMES RXTCP_ERROR_FRAMES;
    Ifx_ETH_RXICMP_GOOD_FRAMES RXICMP_GOOD_FRAMES;
    Ifx_ETH_RXICMP_ERROR_FRAMES RXICMP_ERROR_FRAMES;
    unsigned char reserved_1248[8];
    Ifx_ETH_RXIPV4_GOOD_OCTETS RXIPV4_GOOD_OCTETS;
    Ifx_ETH_RXIPV4_HEADER_ERROR_OCTETS RXIPV4_HEADER_ERROR_OCTETS;
    Ifx_ETH_RXIPV4_NO_PAYLOAD_OCTETS RXIPV4_NO_PAYLOAD_OCTETS;
    Ifx_ETH_RXIPV4_FRAGMENTED_OCTETS RXIPV4_FRAGMENTED_OCTETS;
    Ifx_ETH_RXIPV4_UDP_CHECKSUM_DISABLE_OCTETS RXIPV4_UDP_CHECKSUM_DISABLE_OCTETS;
    Ifx_ETH_RXIPV6_GOOD_OCTETS RXIPV6_GOOD_OCTETS;
    Ifx_ETH_RXIPV6_HEADER_ERROR_OCTETS RXIPV6_HEADER_ERROR_OCTETS;
    Ifx_ETH_RXIPV6_NO_PAYLOAD_OCTETS RXIPV6_NO_PAYLOAD_OCTETS;
    Ifx_ETH_RXUDP_GOOD_OCTETS RXUDP_GOOD_OCTETS;
    Ifx_ETH_RXUDP_ERROR_OCTETS RXUDP_ERROR_OCTETS;
    Ifx_ETH_RXTCP_GOOD_OCTETS RXTCP_GOOD_OCTETS;
    Ifx_ETH_RXTCP_ERROR_OCTETS RXTCP_ERROR_OCTETS;
    Ifx_ETH_RXICMP_GOOD_OCTETS RXICMP_GOOD_OCTETS;
    Ifx_ETH_RXICMP_ERROR_OCTETS RXICMP_ERROR_OCTETS;
    unsigned char reserved_1288[1144];
    Ifx_ETH_TIMESTAMP_CONTROL TIMESTAMP_CONTROL;
    Ifx_ETH_SUB_SECOND_INCREMENT SUB_SECOND_INCREMENT;
    Ifx_ETH_SYSTEM_TIME_SECONDS SYSTEM_TIME_SECONDS;
    Ifx_ETH_SYSTEM_TIME_NANOSECONDS SYSTEM_TIME_NANOSECONDS;
    Ifx_ETH_SYSTEM_TIME_SECONDS_UPDATE SYSTEM_TIME_SECONDS_UPDATE;
    Ifx_ETH_SYSTEM_TIME_NANOSECONDS_UPDATE SYSTEM_TIME_NANOSECONDS_UPDATE;
    Ifx_ETH_TIMESTAMP_ADDEND TIMESTAMP_ADDEND;
    Ifx_ETH_TARGET_TIME_SECONDS TARGET_TIME_SECONDS;
    Ifx_ETH_TARGET_TIME_NANOSECONDS TARGET_TIME_NANOSECONDS;
    Ifx_ETH_SYSTEM_TIME_HIGHER_WORD_SECONDS SYSTEM_TIME_HIGHER_WORD_SECONDS;
    Ifx_ETH_TIMESTAMP_STATUS TIMESTAMP_STATUS;
    Ifx_ETH_PPS_CONTROL PPS_CONTROL;
    unsigned char reserved_1730[208];
    Ifx_ETH_MAC_ADDRESS MAC_ADDRESS_G1[16];
    unsigned char reserved_1880[1920];
    Ifx_ETH_BUS_MODE BUS_MODE;
    Ifx_ETH_TRANSMIT_POLL_DEMAND TRANSMIT_POLL_DEMAND;
    Ifx_ETH_RECEIVE_POLL_DEMAND RECEIVE_POLL_DEMAND;
    Ifx_ETH_RECEIVE_DESCRIPTOR_LIST_ADDRESS RECEIVE_DESCRIPTOR_LIST_ADDRESS;
    Ifx_ETH_TRANSMIT_DESCRIPTOR_LIST_ADDRESS TRANSMIT_DESCRIPTOR_LIST_ADDRESS;
    Ifx_ETH_STATUS STATUS;
    Ifx_ETH_OPERATION_MODE OPERATION_MODE;
    Ifx_ETH_INTERRUPT_ENABLE INTERRUPT_ENABLE;
    Ifx_ETH_MISSED_FRAME_AND_BUFFER_OVERFLOW_COUNTER MISSED_FRAME_AND_BUFFER_OVERFLOW_COUNTER;
    Ifx_ETH_RECEIVE_INTERRUPT_WATCHDOG_TIMER RECEIVE_INTERRUPT_WATCHDOG_TIMER;
    unsigned char reserved_2028[4];
    Ifx_ETH_AHB_OR_AXI_STATUS AHB_OR_AXI_STATUS;
    unsigned char reserved_2030[24];
    Ifx_ETH_CURRENT_HOST_TRANSMIT_DESCRIPTOR CURRENT_HOST_TRANSMIT_DESCRIPTOR;
    Ifx_ETH_CURRENT_HOST_RECEIVE_DESCRIPTOR CURRENT_HOST_RECEIVE_DESCRIPTOR;
    Ifx_ETH_CURRENT_HOST_TRANSMIT_BUFFER_ADDRESS CURRENT_HOST_TRANSMIT_BUFFER_ADDRESS;
    Ifx_ETH_CURRENT_HOST_RECEIVE_BUFFER_ADDRESS CURRENT_HOST_RECEIVE_BUFFER_ADDRESS;
    Ifx_ETH_HW_FEATURE HW_FEATURE;
    unsigned char reserved_205C[164];
} Ifx_ETH;
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxEth_reg.h" 2 3





#define MODULE_ETH (*(Ifx_ETH*)0xF001D000u)







#define ETH_ACCEN0 (*(volatile Ifx_ETH_ACCEN0*)0xF001D00Cu)


#define ETH_ACCEN1 (*(volatile Ifx_ETH_ACCEN1*)0xF001D010u)


#define ETH_AHB_OR_AXI_STATUS (*(volatile Ifx_ETH_AHB_OR_AXI_STATUS*)0xF001F02Cu)


#define ETH_BUS_MODE (*(volatile Ifx_ETH_BUS_MODE*)0xF001F000u)


#define ETH_CLC (*(volatile Ifx_ETH_CLC*)0xF001D000u)


#define ETH_CURRENT_HOST_RECEIVE_BUFFER_ADDRESS (*(volatile Ifx_ETH_CURRENT_HOST_RECEIVE_BUFFER_ADDRESS*)0xF001F054u)


#define ETH_CURRENT_HOST_RECEIVE_DESCRIPTOR (*(volatile Ifx_ETH_CURRENT_HOST_RECEIVE_DESCRIPTOR*)0xF001F04Cu)


#define ETH_CURRENT_HOST_TRANSMIT_BUFFER_ADDRESS (*(volatile Ifx_ETH_CURRENT_HOST_TRANSMIT_BUFFER_ADDRESS*)0xF001F050u)


#define ETH_CURRENT_HOST_TRANSMIT_DESCRIPTOR (*(volatile Ifx_ETH_CURRENT_HOST_TRANSMIT_DESCRIPTOR*)0xF001F048u)


#define ETH_DEBUG (*(volatile Ifx_ETH_DEBUG*)0xF001E024u)


#define ETH_FLOW_CONTROL (*(volatile Ifx_ETH_FLOW_CONTROL*)0xF001E018u)


#define ETH_GMII_ADDRESS (*(volatile Ifx_ETH_GMII_ADDRESS*)0xF001E010u)


#define ETH_GMII_DATA (*(volatile Ifx_ETH_GMII_DATA*)0xF001E014u)


#define ETH_GPCTL (*(volatile Ifx_ETH_GPCTL*)0xF001D008u)


#define ETH_HASH_TABLE_HIGH (*(volatile Ifx_ETH_HASH_TABLE_HIGH*)0xF001E008u)


#define ETH_HASH_TABLE_LOW (*(volatile Ifx_ETH_HASH_TABLE_LOW*)0xF001E00Cu)


#define ETH_HW_FEATURE (*(volatile Ifx_ETH_HW_FEATURE*)0xF001F058u)


#define ETH_ID (*(volatile Ifx_ETH_ID*)0xF001D004u)


#define ETH_INTERRUPT_ENABLE (*(volatile Ifx_ETH_INTERRUPT_ENABLE*)0xF001F01Cu)


#define ETH_INTERRUPT_MASK (*(volatile Ifx_ETH_INTERRUPT_MASK*)0xF001E03Cu)


#define ETH_INTERRUPT_STATUS (*(volatile Ifx_ETH_INTERRUPT_STATUS*)0xF001E038u)


#define ETH_KRST0 (*(volatile Ifx_ETH_KRST0*)0xF001D014u)


#define ETH_KRST1 (*(volatile Ifx_ETH_KRST1*)0xF001D018u)


#define ETH_KRSTCLR (*(volatile Ifx_ETH_KRSTCLR*)0xF001D01Cu)


#define ETH_MAC_ADDRESS_G00_HIGH (*(volatile Ifx_ETH_MAC_ADDRESS_HIGH*)0xF001E040u)




#define ETH_MAC_ADDRESS0_HIGH (ETH_MAC_ADDRESS_G00_HIGH)


#define ETH_MAC_ADDRESS_G00_LOW (*(volatile Ifx_ETH_MAC_ADDRESS_LOW*)0xF001E044u)




#define ETH_MAC_ADDRESS0_LOW (ETH_MAC_ADDRESS_G00_LOW)


#define ETH_MAC_ADDRESS_G010_HIGH (*(volatile Ifx_ETH_MAC_ADDRESS_HIGH*)0xF001E090u)




#define ETH_MAC_ADDRESS10_HIGH (ETH_MAC_ADDRESS_G010_HIGH)


#define ETH_MAC_ADDRESS_G010_LOW (*(volatile Ifx_ETH_MAC_ADDRESS_LOW*)0xF001E094u)




#define ETH_MAC_ADDRESS10_LOW (ETH_MAC_ADDRESS_G010_LOW)


#define ETH_MAC_ADDRESS_G011_HIGH (*(volatile Ifx_ETH_MAC_ADDRESS_HIGH*)0xF001E098u)




#define ETH_MAC_ADDRESS11_HIGH (ETH_MAC_ADDRESS_G011_HIGH)


#define ETH_MAC_ADDRESS_G011_LOW (*(volatile Ifx_ETH_MAC_ADDRESS_LOW*)0xF001E09Cu)




#define ETH_MAC_ADDRESS11_LOW (ETH_MAC_ADDRESS_G011_LOW)


#define ETH_MAC_ADDRESS_G012_HIGH (*(volatile Ifx_ETH_MAC_ADDRESS_HIGH*)0xF001E0A0u)




#define ETH_MAC_ADDRESS12_HIGH (ETH_MAC_ADDRESS_G012_HIGH)


#define ETH_MAC_ADDRESS_G012_LOW (*(volatile Ifx_ETH_MAC_ADDRESS_LOW*)0xF001E0A4u)




#define ETH_MAC_ADDRESS12_LOW (ETH_MAC_ADDRESS_G012_LOW)


#define ETH_MAC_ADDRESS_G013_HIGH (*(volatile Ifx_ETH_MAC_ADDRESS_HIGH*)0xF001E0A8u)




#define ETH_MAC_ADDRESS13_HIGH (ETH_MAC_ADDRESS_G013_HIGH)


#define ETH_MAC_ADDRESS_G013_LOW (*(volatile Ifx_ETH_MAC_ADDRESS_LOW*)0xF001E0ACu)




#define ETH_MAC_ADDRESS13_LOW (ETH_MAC_ADDRESS_G013_LOW)


#define ETH_MAC_ADDRESS_G014_HIGH (*(volatile Ifx_ETH_MAC_ADDRESS_HIGH*)0xF001E0B0u)




#define ETH_MAC_ADDRESS14_HIGH (ETH_MAC_ADDRESS_G014_HIGH)


#define ETH_MAC_ADDRESS_G014_LOW (*(volatile Ifx_ETH_MAC_ADDRESS_LOW*)0xF001E0B4u)




#define ETH_MAC_ADDRESS14_LOW (ETH_MAC_ADDRESS_G014_LOW)


#define ETH_MAC_ADDRESS_G015_HIGH (*(volatile Ifx_ETH_MAC_ADDRESS_HIGH*)0xF001E0B8u)




#define ETH_MAC_ADDRESS15_HIGH (ETH_MAC_ADDRESS_G015_HIGH)


#define ETH_MAC_ADDRESS_G015_LOW (*(volatile Ifx_ETH_MAC_ADDRESS_LOW*)0xF001E0BCu)




#define ETH_MAC_ADDRESS15_LOW (ETH_MAC_ADDRESS_G015_LOW)


#define ETH_MAC_ADDRESS_G01_HIGH (*(volatile Ifx_ETH_MAC_ADDRESS_HIGH*)0xF001E048u)




#define ETH_MAC_ADDRESS1_HIGH (ETH_MAC_ADDRESS_G01_HIGH)


#define ETH_MAC_ADDRESS_G01_LOW (*(volatile Ifx_ETH_MAC_ADDRESS_LOW*)0xF001E04Cu)




#define ETH_MAC_ADDRESS1_LOW (ETH_MAC_ADDRESS_G01_LOW)


#define ETH_MAC_ADDRESS_G02_HIGH (*(volatile Ifx_ETH_MAC_ADDRESS_HIGH*)0xF001E050u)




#define ETH_MAC_ADDRESS2_HIGH (ETH_MAC_ADDRESS_G02_HIGH)


#define ETH_MAC_ADDRESS_G02_LOW (*(volatile Ifx_ETH_MAC_ADDRESS_LOW*)0xF001E054u)




#define ETH_MAC_ADDRESS2_LOW (ETH_MAC_ADDRESS_G02_LOW)


#define ETH_MAC_ADDRESS_G03_HIGH (*(volatile Ifx_ETH_MAC_ADDRESS_HIGH*)0xF001E058u)




#define ETH_MAC_ADDRESS3_HIGH (ETH_MAC_ADDRESS_G03_HIGH)


#define ETH_MAC_ADDRESS_G03_LOW (*(volatile Ifx_ETH_MAC_ADDRESS_LOW*)0xF001E05Cu)




#define ETH_MAC_ADDRESS3_LOW (ETH_MAC_ADDRESS_G03_LOW)


#define ETH_MAC_ADDRESS_G04_HIGH (*(volatile Ifx_ETH_MAC_ADDRESS_HIGH*)0xF001E060u)




#define ETH_MAC_ADDRESS4_HIGH (ETH_MAC_ADDRESS_G04_HIGH)


#define ETH_MAC_ADDRESS_G04_LOW (*(volatile Ifx_ETH_MAC_ADDRESS_LOW*)0xF001E064u)




#define ETH_MAC_ADDRESS4_LOW (ETH_MAC_ADDRESS_G04_LOW)


#define ETH_MAC_ADDRESS_G05_HIGH (*(volatile Ifx_ETH_MAC_ADDRESS_HIGH*)0xF001E068u)




#define ETH_MAC_ADDRESS5_HIGH (ETH_MAC_ADDRESS_G05_HIGH)


#define ETH_MAC_ADDRESS_G05_LOW (*(volatile Ifx_ETH_MAC_ADDRESS_LOW*)0xF001E06Cu)




#define ETH_MAC_ADDRESS5_LOW (ETH_MAC_ADDRESS_G05_LOW)


#define ETH_MAC_ADDRESS_G06_HIGH (*(volatile Ifx_ETH_MAC_ADDRESS_HIGH*)0xF001E070u)




#define ETH_MAC_ADDRESS6_HIGH (ETH_MAC_ADDRESS_G06_HIGH)


#define ETH_MAC_ADDRESS_G06_LOW (*(volatile Ifx_ETH_MAC_ADDRESS_LOW*)0xF001E074u)




#define ETH_MAC_ADDRESS6_LOW (ETH_MAC_ADDRESS_G06_LOW)


#define ETH_MAC_ADDRESS_G07_HIGH (*(volatile Ifx_ETH_MAC_ADDRESS_HIGH*)0xF001E078u)




#define ETH_MAC_ADDRESS7_HIGH (ETH_MAC_ADDRESS_G07_HIGH)


#define ETH_MAC_ADDRESS_G07_LOW (*(volatile Ifx_ETH_MAC_ADDRESS_LOW*)0xF001E07Cu)




#define ETH_MAC_ADDRESS7_LOW (ETH_MAC_ADDRESS_G07_LOW)


#define ETH_MAC_ADDRESS_G08_HIGH (*(volatile Ifx_ETH_MAC_ADDRESS_HIGH*)0xF001E080u)




#define ETH_MAC_ADDRESS8_HIGH (ETH_MAC_ADDRESS_G08_HIGH)


#define ETH_MAC_ADDRESS_G08_LOW (*(volatile Ifx_ETH_MAC_ADDRESS_LOW*)0xF001E084u)




#define ETH_MAC_ADDRESS8_LOW (ETH_MAC_ADDRESS_G08_LOW)


#define ETH_MAC_ADDRESS_G09_HIGH (*(volatile Ifx_ETH_MAC_ADDRESS_HIGH*)0xF001E088u)




#define ETH_MAC_ADDRESS9_HIGH (ETH_MAC_ADDRESS_G09_HIGH)


#define ETH_MAC_ADDRESS_G09_LOW (*(volatile Ifx_ETH_MAC_ADDRESS_LOW*)0xF001E08Cu)




#define ETH_MAC_ADDRESS9_LOW (ETH_MAC_ADDRESS_G09_LOW)


#define ETH_MAC_ADDRESS_G10_HIGH (*(volatile Ifx_ETH_MAC_ADDRESS_HIGH*)0xF001E800u)




#define ETH_MAC_ADDRESS16_HIGH (ETH_MAC_ADDRESS_G10_HIGH)


#define ETH_MAC_ADDRESS_G10_LOW (*(volatile Ifx_ETH_MAC_ADDRESS_LOW*)0xF001E804u)




#define ETH_MAC_ADDRESS16_LOW (ETH_MAC_ADDRESS_G10_LOW)


#define ETH_MAC_ADDRESS_G110_HIGH (*(volatile Ifx_ETH_MAC_ADDRESS_HIGH*)0xF001E850u)




#define ETH_MAC_ADDRESS26_HIGH (ETH_MAC_ADDRESS_G110_HIGH)


#define ETH_MAC_ADDRESS_G110_LOW (*(volatile Ifx_ETH_MAC_ADDRESS_LOW*)0xF001E854u)




#define ETH_MAC_ADDRESS26_LOW (ETH_MAC_ADDRESS_G110_LOW)


#define ETH_MAC_ADDRESS_G111_HIGH (*(volatile Ifx_ETH_MAC_ADDRESS_HIGH*)0xF001E858u)




#define ETH_MAC_ADDRESS27_HIGH (ETH_MAC_ADDRESS_G111_HIGH)


#define ETH_MAC_ADDRESS_G111_LOW (*(volatile Ifx_ETH_MAC_ADDRESS_LOW*)0xF001E85Cu)




#define ETH_MAC_ADDRESS27_LOW (ETH_MAC_ADDRESS_G111_LOW)


#define ETH_MAC_ADDRESS_G112_HIGH (*(volatile Ifx_ETH_MAC_ADDRESS_HIGH*)0xF001E860u)




#define ETH_MAC_ADDRESS28_HIGH (ETH_MAC_ADDRESS_G112_HIGH)


#define ETH_MAC_ADDRESS_G112_LOW (*(volatile Ifx_ETH_MAC_ADDRESS_LOW*)0xF001E864u)




#define ETH_MAC_ADDRESS28_LOW (ETH_MAC_ADDRESS_G112_LOW)


#define ETH_MAC_ADDRESS_G113_HIGH (*(volatile Ifx_ETH_MAC_ADDRESS_HIGH*)0xF001E868u)




#define ETH_MAC_ADDRESS29_HIGH (ETH_MAC_ADDRESS_G113_HIGH)


#define ETH_MAC_ADDRESS_G113_LOW (*(volatile Ifx_ETH_MAC_ADDRESS_LOW*)0xF001E86Cu)




#define ETH_MAC_ADDRESS29_LOW (ETH_MAC_ADDRESS_G113_LOW)


#define ETH_MAC_ADDRESS_G114_HIGH (*(volatile Ifx_ETH_MAC_ADDRESS_HIGH*)0xF001E870u)




#define ETH_MAC_ADDRESS30_HIGH (ETH_MAC_ADDRESS_G114_HIGH)


#define ETH_MAC_ADDRESS_G114_LOW (*(volatile Ifx_ETH_MAC_ADDRESS_LOW*)0xF001E874u)




#define ETH_MAC_ADDRESS30_LOW (ETH_MAC_ADDRESS_G114_LOW)


#define ETH_MAC_ADDRESS_G115_HIGH (*(volatile Ifx_ETH_MAC_ADDRESS_HIGH*)0xF001E878u)




#define ETH_MAC_ADDRESS31_HIGH (ETH_MAC_ADDRESS_G115_HIGH)


#define ETH_MAC_ADDRESS_G115_LOW (*(volatile Ifx_ETH_MAC_ADDRESS_LOW*)0xF001E87Cu)




#define ETH_MAC_ADDRESS31_LOW (ETH_MAC_ADDRESS_G115_LOW)


#define ETH_MAC_ADDRESS_G11_HIGH (*(volatile Ifx_ETH_MAC_ADDRESS_HIGH*)0xF001E808u)




#define ETH_MAC_ADDRESS17_HIGH (ETH_MAC_ADDRESS_G11_HIGH)


#define ETH_MAC_ADDRESS_G11_LOW (*(volatile Ifx_ETH_MAC_ADDRESS_LOW*)0xF001E80Cu)




#define ETH_MAC_ADDRESS17_LOW (ETH_MAC_ADDRESS_G11_LOW)


#define ETH_MAC_ADDRESS_G12_HIGH (*(volatile Ifx_ETH_MAC_ADDRESS_HIGH*)0xF001E810u)




#define ETH_MAC_ADDRESS18_HIGH (ETH_MAC_ADDRESS_G12_HIGH)


#define ETH_MAC_ADDRESS_G12_LOW (*(volatile Ifx_ETH_MAC_ADDRESS_LOW*)0xF001E814u)




#define ETH_MAC_ADDRESS18_LOW (ETH_MAC_ADDRESS_G12_LOW)


#define ETH_MAC_ADDRESS_G13_HIGH (*(volatile Ifx_ETH_MAC_ADDRESS_HIGH*)0xF001E818u)




#define ETH_MAC_ADDRESS19_HIGH (ETH_MAC_ADDRESS_G13_HIGH)


#define ETH_MAC_ADDRESS_G13_LOW (*(volatile Ifx_ETH_MAC_ADDRESS_LOW*)0xF001E81Cu)




#define ETH_MAC_ADDRESS19_LOW (ETH_MAC_ADDRESS_G13_LOW)


#define ETH_MAC_ADDRESS_G14_HIGH (*(volatile Ifx_ETH_MAC_ADDRESS_HIGH*)0xF001E820u)




#define ETH_MAC_ADDRESS20_HIGH (ETH_MAC_ADDRESS_G14_HIGH)


#define ETH_MAC_ADDRESS_G14_LOW (*(volatile Ifx_ETH_MAC_ADDRESS_LOW*)0xF001E824u)




#define ETH_MAC_ADDRESS20_LOW (ETH_MAC_ADDRESS_G14_LOW)


#define ETH_MAC_ADDRESS_G15_HIGH (*(volatile Ifx_ETH_MAC_ADDRESS_HIGH*)0xF001E828u)




#define ETH_MAC_ADDRESS21_HIGH (ETH_MAC_ADDRESS_G15_HIGH)


#define ETH_MAC_ADDRESS_G15_LOW (*(volatile Ifx_ETH_MAC_ADDRESS_LOW*)0xF001E82Cu)




#define ETH_MAC_ADDRESS21_LOW (ETH_MAC_ADDRESS_G15_LOW)


#define ETH_MAC_ADDRESS_G16_HIGH (*(volatile Ifx_ETH_MAC_ADDRESS_HIGH*)0xF001E830u)




#define ETH_MAC_ADDRESS22_HIGH (ETH_MAC_ADDRESS_G16_HIGH)


#define ETH_MAC_ADDRESS_G16_LOW (*(volatile Ifx_ETH_MAC_ADDRESS_LOW*)0xF001E834u)




#define ETH_MAC_ADDRESS22_LOW (ETH_MAC_ADDRESS_G16_LOW)


#define ETH_MAC_ADDRESS_G17_HIGH (*(volatile Ifx_ETH_MAC_ADDRESS_HIGH*)0xF001E838u)




#define ETH_MAC_ADDRESS23_HIGH (ETH_MAC_ADDRESS_G17_HIGH)


#define ETH_MAC_ADDRESS_G17_LOW (*(volatile Ifx_ETH_MAC_ADDRESS_LOW*)0xF001E83Cu)




#define ETH_MAC_ADDRESS23_LOW (ETH_MAC_ADDRESS_G17_LOW)


#define ETH_MAC_ADDRESS_G18_HIGH (*(volatile Ifx_ETH_MAC_ADDRESS_HIGH*)0xF001E840u)




#define ETH_MAC_ADDRESS24_HIGH (ETH_MAC_ADDRESS_G18_HIGH)


#define ETH_MAC_ADDRESS_G18_LOW (*(volatile Ifx_ETH_MAC_ADDRESS_LOW*)0xF001E844u)




#define ETH_MAC_ADDRESS24_LOW (ETH_MAC_ADDRESS_G18_LOW)


#define ETH_MAC_ADDRESS_G19_HIGH (*(volatile Ifx_ETH_MAC_ADDRESS_HIGH*)0xF001E848u)




#define ETH_MAC_ADDRESS25_HIGH (ETH_MAC_ADDRESS_G19_HIGH)


#define ETH_MAC_ADDRESS_G19_LOW (*(volatile Ifx_ETH_MAC_ADDRESS_LOW*)0xF001E84Cu)




#define ETH_MAC_ADDRESS25_LOW (ETH_MAC_ADDRESS_G19_LOW)


#define ETH_MAC_CONFIGURATION (*(volatile Ifx_ETH_MAC_CONFIGURATION*)0xF001E000u)


#define ETH_MAC_FRAME_FILTER (*(volatile Ifx_ETH_MAC_FRAME_FILTER*)0xF001E004u)


#define ETH_MISSED_FRAME_AND_BUFFER_OVERFLOW_COUNTER (*(volatile Ifx_ETH_MISSED_FRAME_AND_BUFFER_OVERFLOW_COUNTER*)0xF001F020u)


#define ETH_MMC_CONTROL (*(volatile Ifx_ETH_MMC_CONTROL*)0xF001E100u)


#define ETH_MMC_IPC_RECEIVE_INTERRUPT (*(volatile Ifx_ETH_MMC_IPC_RECEIVE_INTERRUPT*)0xF001E208u)



#define ETH_MMC_IPC_RECEIVE_INTERRUPT_MASK (*(volatile Ifx_ETH_MMC_IPC_RECEIVE_INTERRUPT_MASK*)0xF001E200u)


#define ETH_MMC_RECEIVE_INTERRUPT (*(volatile Ifx_ETH_MMC_RECEIVE_INTERRUPT*)0xF001E104u)


#define ETH_MMC_RECEIVE_INTERRUPT_MASK (*(volatile Ifx_ETH_MMC_RECEIVE_INTERRUPT_MASK*)0xF001E10Cu)


#define ETH_MMC_TRANSMIT_INTERRUPT (*(volatile Ifx_ETH_MMC_TRANSMIT_INTERRUPT*)0xF001E108u)


#define ETH_MMC_TRANSMIT_INTERRUPT_MASK (*(volatile Ifx_ETH_MMC_TRANSMIT_INTERRUPT_MASK*)0xF001E110u)


#define ETH_OPERATION_MODE (*(volatile Ifx_ETH_OPERATION_MODE*)0xF001F018u)


#define ETH_PMT_CONTROL_STATUS (*(volatile Ifx_ETH_PMT_CONTROL_STATUS*)0xF001E02Cu)


#define ETH_PPS_CONTROL (*(volatile Ifx_ETH_PPS_CONTROL*)0xF001E72Cu)


#define ETH_RECEIVE_DESCRIPTOR_LIST_ADDRESS (*(volatile Ifx_ETH_RECEIVE_DESCRIPTOR_LIST_ADDRESS*)0xF001F00Cu)


#define ETH_RECEIVE_INTERRUPT_WATCHDOG_TIMER (*(volatile Ifx_ETH_RECEIVE_INTERRUPT_WATCHDOG_TIMER*)0xF001F024u)


#define ETH_RECEIVE_POLL_DEMAND (*(volatile Ifx_ETH_RECEIVE_POLL_DEMAND*)0xF001F008u)


#define ETH_REMOTE_WAKE_UP_FRAME_FILTER (*(volatile Ifx_ETH_REMOTE_WAKE_UP_FRAME_FILTER*)0xF001E028u)



#define ETH_RX_1024TOMAXOCTETS_FRAMES_GOOD_BAD (*(volatile Ifx_ETH_RX_1024TOMAXOCTETS_FRAMES_GOOD_BAD*)0xF001E1C0u)



#define ETH_RX_128TO255OCTETS_FRAMES_GOOD_BAD (*(volatile Ifx_ETH_RX_128TO255OCTETS_FRAMES_GOOD_BAD*)0xF001E1B4u)



#define ETH_RX_256TO511OCTETS_FRAMES_GOOD_BAD (*(volatile Ifx_ETH_RX_256TO511OCTETS_FRAMES_GOOD_BAD*)0xF001E1B8u)



#define ETH_RX_512TO1023OCTETS_FRAMES_GOOD_BAD (*(volatile Ifx_ETH_RX_512TO1023OCTETS_FRAMES_GOOD_BAD*)0xF001E1BCu)



#define ETH_RX_64OCTETS_FRAMES_GOOD_BAD (*(volatile Ifx_ETH_RX_64OCTETS_FRAMES_GOOD_BAD*)0xF001E1ACu)



#define ETH_RX_65TO127OCTETS_FRAMES_GOOD_BAD (*(volatile Ifx_ETH_RX_65TO127OCTETS_FRAMES_GOOD_BAD*)0xF001E1B0u)


#define ETH_RX_ALIGNMENT_ERROR_FRAMES (*(volatile Ifx_ETH_RX_ALIGNMENT_ERROR_FRAMES*)0xF001E198u)


#define ETH_RX_BROADCAST_FRAMES_GOOD (*(volatile Ifx_ETH_RX_BROADCAST_FRAMES_GOOD*)0xF001E18Cu)



#define ETH_RX_CONTROL_FRAMES_GOOD (*(volatile Ifx_ETH_RX_CONTROL_FRAMES_GOOD*)0xF001E1E4u)


#define ETH_RX_CRC_ERROR_FRAMES (*(volatile Ifx_ETH_RX_CRC_ERROR_FRAMES*)0xF001E194u)


#define ETH_RX_FIFO_OVERFLOW_FRAMES (*(volatile Ifx_ETH_RX_FIFO_OVERFLOW_FRAMES*)0xF001E1D4u)


#define ETH_RX_FRAMES_COUNT_GOOD_BAD (*(volatile Ifx_ETH_RX_FRAMES_COUNT_GOOD_BAD*)0xF001E180u)


#define ETH_RX_JABBER_ERROR_FRAMES (*(volatile Ifx_ETH_RX_JABBER_ERROR_FRAMES*)0xF001E1A0u)


#define ETH_RX_LENGTH_ERROR_FRAMES (*(volatile Ifx_ETH_RX_LENGTH_ERROR_FRAMES*)0xF001E1C8u)


#define ETH_RX_MULTICAST_FRAMES_GOOD (*(volatile Ifx_ETH_RX_MULTICAST_FRAMES_GOOD*)0xF001E190u)


#define ETH_RX_OCTET_COUNT_GOOD (*(volatile Ifx_ETH_RX_OCTET_COUNT_GOOD*)0xF001E188u)


#define ETH_RX_OCTET_COUNT_GOOD_BAD (*(volatile Ifx_ETH_RX_OCTET_COUNT_GOOD_BAD*)0xF001E184u)


#define ETH_RX_OUT_OF_RANGE_TYPE_FRAMES (*(volatile Ifx_ETH_RX_OUT_OF_RANGE_TYPE_FRAMES*)0xF001E1CCu)


#define ETH_RX_OVERSIZE_FRAMES_GOOD (*(volatile Ifx_ETH_RX_OVERSIZE_FRAMES_GOOD*)0xF001E1A8u)


#define ETH_RX_PAUSE_FRAMES (*(volatile Ifx_ETH_RX_PAUSE_FRAMES*)0xF001E1D0u)


#define ETH_RX_RECEIVE_ERROR_FRAMES (*(volatile Ifx_ETH_RX_RECEIVE_ERROR_FRAMES*)0xF001E1E0u)


#define ETH_RX_RUNT_ERROR_FRAMES (*(volatile Ifx_ETH_RX_RUNT_ERROR_FRAMES*)0xF001E19Cu)


#define ETH_RX_UNDERSIZE_FRAMES_GOOD (*(volatile Ifx_ETH_RX_UNDERSIZE_FRAMES_GOOD*)0xF001E1A4u)


#define ETH_RX_UNICAST_FRAMES_GOOD (*(volatile Ifx_ETH_RX_UNICAST_FRAMES_GOOD*)0xF001E1C4u)



#define ETH_RX_VLAN_FRAMES_GOOD_BAD (*(volatile Ifx_ETH_RX_VLAN_FRAMES_GOOD_BAD*)0xF001E1D8u)


#define ETH_RX_WATCHDOG_ERROR_FRAMES (*(volatile Ifx_ETH_RX_WATCHDOG_ERROR_FRAMES*)0xF001E1DCu)


#define ETH_RXICMP_ERROR_FRAMES (*(volatile Ifx_ETH_RXICMP_ERROR_FRAMES*)0xF001E244u)


#define ETH_RXICMP_ERROR_OCTETS (*(volatile Ifx_ETH_RXICMP_ERROR_OCTETS*)0xF001E284u)


#define ETH_RXICMP_GOOD_FRAMES (*(volatile Ifx_ETH_RXICMP_GOOD_FRAMES*)0xF001E240u)


#define ETH_RXICMP_GOOD_OCTETS (*(volatile Ifx_ETH_RXICMP_GOOD_OCTETS*)0xF001E280u)


#define ETH_RXIPV4_FRAGMENTED_FRAMES (*(volatile Ifx_ETH_RXIPV4_FRAGMENTED_FRAMES*)0xF001E21Cu)


#define ETH_RXIPV4_FRAGMENTED_OCTETS (*(volatile Ifx_ETH_RXIPV4_FRAGMENTED_OCTETS*)0xF001E25Cu)


#define ETH_RXIPV4_GOOD_FRAMES (*(volatile Ifx_ETH_RXIPV4_GOOD_FRAMES*)0xF001E210u)


#define ETH_RXIPV4_GOOD_OCTETS (*(volatile Ifx_ETH_RXIPV4_GOOD_OCTETS*)0xF001E250u)



#define ETH_RXIPV4_HEADER_ERROR_FRAMES (*(volatile Ifx_ETH_RXIPV4_HEADER_ERROR_FRAMES*)0xF001E214u)



#define ETH_RXIPV4_HEADER_ERROR_OCTETS (*(volatile Ifx_ETH_RXIPV4_HEADER_ERROR_OCTETS*)0xF001E254u)


#define ETH_RXIPV4_NO_PAYLOAD_FRAMES (*(volatile Ifx_ETH_RXIPV4_NO_PAYLOAD_FRAMES*)0xF001E218u)


#define ETH_RXIPV4_NO_PAYLOAD_OCTETS (*(volatile Ifx_ETH_RXIPV4_NO_PAYLOAD_OCTETS*)0xF001E258u)


#define ETH_RXIPV4_UDP_CHECKSUM_DISABLE_OCTETS (*(volatile Ifx_ETH_RXIPV4_UDP_CHECKSUM_DISABLE_OCTETS*)0xF001E260u)



#define ETH_RXIPV4_UDP_CHECKSUM_DISABLED_FRAMES (*(volatile Ifx_ETH_RXIPV4_UDP_CHECKSUM_DISABLED_FRAMES*)0xF001E220u)


#define ETH_RXIPV6_GOOD_FRAMES (*(volatile Ifx_ETH_RXIPV6_GOOD_FRAMES*)0xF001E224u)


#define ETH_RXIPV6_GOOD_OCTETS (*(volatile Ifx_ETH_RXIPV6_GOOD_OCTETS*)0xF001E264u)



#define ETH_RXIPV6_HEADER_ERROR_FRAMES (*(volatile Ifx_ETH_RXIPV6_HEADER_ERROR_FRAMES*)0xF001E228u)



#define ETH_RXIPV6_HEADER_ERROR_OCTETS (*(volatile Ifx_ETH_RXIPV6_HEADER_ERROR_OCTETS*)0xF001E268u)


#define ETH_RXIPV6_NO_PAYLOAD_FRAMES (*(volatile Ifx_ETH_RXIPV6_NO_PAYLOAD_FRAMES*)0xF001E22Cu)


#define ETH_RXIPV6_NO_PAYLOAD_OCTETS (*(volatile Ifx_ETH_RXIPV6_NO_PAYLOAD_OCTETS*)0xF001E26Cu)


#define ETH_RXTCP_ERROR_FRAMES (*(volatile Ifx_ETH_RXTCP_ERROR_FRAMES*)0xF001E23Cu)


#define ETH_RXTCP_ERROR_OCTETS (*(volatile Ifx_ETH_RXTCP_ERROR_OCTETS*)0xF001E27Cu)


#define ETH_RXTCP_GOOD_FRAMES (*(volatile Ifx_ETH_RXTCP_GOOD_FRAMES*)0xF001E238u)


#define ETH_RXTCP_GOOD_OCTETS (*(volatile Ifx_ETH_RXTCP_GOOD_OCTETS*)0xF001E278u)


#define ETH_RXUDP_ERROR_FRAMES (*(volatile Ifx_ETH_RXUDP_ERROR_FRAMES*)0xF001E234u)


#define ETH_RXUDP_ERROR_OCTETS (*(volatile Ifx_ETH_RXUDP_ERROR_OCTETS*)0xF001E274u)


#define ETH_RXUDP_GOOD_FRAMES (*(volatile Ifx_ETH_RXUDP_GOOD_FRAMES*)0xF001E230u)


#define ETH_RXUDP_GOOD_OCTETS (*(volatile Ifx_ETH_RXUDP_GOOD_OCTETS*)0xF001E270u)


#define ETH_STATUS (*(volatile Ifx_ETH_STATUS*)0xF001F014u)


#define ETH_SUB_SECOND_INCREMENT (*(volatile Ifx_ETH_SUB_SECOND_INCREMENT*)0xF001E704u)


#define ETH_SYSTEM_TIME_HIGHER_WORD_SECONDS (*(volatile Ifx_ETH_SYSTEM_TIME_HIGHER_WORD_SECONDS*)0xF001E724u)


#define ETH_SYSTEM_TIME_NANOSECONDS (*(volatile Ifx_ETH_SYSTEM_TIME_NANOSECONDS*)0xF001E70Cu)


#define ETH_SYSTEM_TIME_NANOSECONDS_UPDATE (*(volatile Ifx_ETH_SYSTEM_TIME_NANOSECONDS_UPDATE*)0xF001E714u)


#define ETH_SYSTEM_TIME_SECONDS (*(volatile Ifx_ETH_SYSTEM_TIME_SECONDS*)0xF001E708u)


#define ETH_SYSTEM_TIME_SECONDS_UPDATE (*(volatile Ifx_ETH_SYSTEM_TIME_SECONDS_UPDATE*)0xF001E710u)


#define ETH_TARGET_TIME_NANOSECONDS (*(volatile Ifx_ETH_TARGET_TIME_NANOSECONDS*)0xF001E720u)


#define ETH_TARGET_TIME_SECONDS (*(volatile Ifx_ETH_TARGET_TIME_SECONDS*)0xF001E71Cu)


#define ETH_TIMESTAMP_ADDEND (*(volatile Ifx_ETH_TIMESTAMP_ADDEND*)0xF001E718u)


#define ETH_TIMESTAMP_CONTROL (*(volatile Ifx_ETH_TIMESTAMP_CONTROL*)0xF001E700u)


#define ETH_TIMESTAMP_STATUS (*(volatile Ifx_ETH_TIMESTAMP_STATUS*)0xF001E728u)


#define ETH_TRANSMIT_DESCRIPTOR_LIST_ADDRESS (*(volatile Ifx_ETH_TRANSMIT_DESCRIPTOR_LIST_ADDRESS*)0xF001F010u)


#define ETH_TRANSMIT_POLL_DEMAND (*(volatile Ifx_ETH_TRANSMIT_POLL_DEMAND*)0xF001F004u)



#define ETH_TX_1024TOMAXOCTETS_FRAMES_GOOD_BAD (*(volatile Ifx_ETH_TX_1024TOMAXOCTETS_FRAMES_GOOD_BAD*)0xF001E138u)



#define ETH_TX_128TO255OCTETS_FRAMES_GOOD_BAD (*(volatile Ifx_ETH_TX_128TO255OCTETS_FRAMES_GOOD_BAD*)0xF001E12Cu)



#define ETH_TX_256TO511OCTETS_FRAMES_GOOD_BAD (*(volatile Ifx_ETH_TX_256TO511OCTETS_FRAMES_GOOD_BAD*)0xF001E130u)



#define ETH_TX_512TO1023OCTETS_FRAMES_GOOD_BAD (*(volatile Ifx_ETH_TX_512TO1023OCTETS_FRAMES_GOOD_BAD*)0xF001E134u)



#define ETH_TX_64OCTETS_FRAMES_GOOD_BAD (*(volatile Ifx_ETH_TX_64OCTETS_FRAMES_GOOD_BAD*)0xF001E124u)



#define ETH_TX_65TO127OCTETS_FRAMES_GOOD_BAD (*(volatile Ifx_ETH_TX_65TO127OCTETS_FRAMES_GOOD_BAD*)0xF001E128u)


#define ETH_TX_BROADCAST_FRAMES_GOOD (*(volatile Ifx_ETH_TX_BROADCAST_FRAMES_GOOD*)0xF001E11Cu)



#define ETH_TX_BROADCAST_FRAMES_GOOD_BAD (*(volatile Ifx_ETH_TX_BROADCAST_FRAMES_GOOD_BAD*)0xF001E144u)



#define ETH_TX_CARRIER_ERROR_FRAMES (*(volatile Ifx_ETH_TX_CARRIER_ERROR_FRAMES*)0xF001E160u)


#define ETH_TX_DEFERRED_FRAMES (*(volatile Ifx_ETH_TX_DEFERRED_FRAMES*)0xF001E154u)



#define ETH_TX_EXCESSIVE_COLLISION_FRAMES (*(volatile Ifx_ETH_TX_EXCESSIVE_COLLISION_FRAMES*)0xF001E15Cu)



#define ETH_TX_EXCESSIVE_DEFERRAL_ERROR (*(volatile Ifx_ETH_TX_EXCESSIVE_DEFERRAL_ERROR*)0xF001E16Cu)


#define ETH_TX_FRAME_COUNT_GOOD (*(volatile Ifx_ETH_TX_FRAME_COUNT_GOOD*)0xF001E168u)


#define ETH_TX_FRAME_COUNT_GOOD_BAD (*(volatile Ifx_ETH_TX_FRAME_COUNT_GOOD_BAD*)0xF001E118u)



#define ETH_TX_LATE_COLLISION_FRAMES (*(volatile Ifx_ETH_TX_LATE_COLLISION_FRAMES*)0xF001E158u)


#define ETH_TX_MULTICAST_FRAMES_GOOD (*(volatile Ifx_ETH_TX_MULTICAST_FRAMES_GOOD*)0xF001E120u)



#define ETH_TX_MULTICAST_FRAMES_GOOD_BAD (*(volatile Ifx_ETH_TX_MULTICAST_FRAMES_GOOD_BAD*)0xF001E140u)



#define ETH_TX_MULTIPLE_COLLISION_GOOD_FRAMES (*(volatile Ifx_ETH_TX_MULTIPLE_COLLISION_GOOD_FRAMES*)0xF001E150u)


#define ETH_TX_OCTET_COUNT_GOOD (*(volatile Ifx_ETH_TX_OCTET_COUNT_GOOD*)0xF001E164u)


#define ETH_TX_OCTET_COUNT_GOOD_BAD (*(volatile Ifx_ETH_TX_OCTET_COUNT_GOOD_BAD*)0xF001E114u)


#define ETH_TX_OSIZE_FRAMES_GOOD (*(volatile Ifx_ETH_TX_OSIZE_FRAMES_GOOD*)0xF001E178u)


#define ETH_TX_PAUSE_FRAMES (*(volatile Ifx_ETH_TX_PAUSE_FRAMES*)0xF001E170u)



#define ETH_TX_SINGLE_COLLISION_GOOD_FRAMES (*(volatile Ifx_ETH_TX_SINGLE_COLLISION_GOOD_FRAMES*)0xF001E14Cu)


#define ETH_TX_UNDERFLOW_ERROR_FRAMES (*(volatile Ifx_ETH_TX_UNDERFLOW_ERROR_FRAMES*)0xF001E148u)



#define ETH_TX_UNICAST_FRAMES_GOOD_BAD (*(volatile Ifx_ETH_TX_UNICAST_FRAMES_GOOD_BAD*)0xF001E13Cu)


#define ETH_TX_VLAN_FRAMES_GOOD (*(volatile Ifx_ETH_TX_VLAN_FRAMES_GOOD*)0xF001E174u)


#define ETH_VERSION (*(volatile Ifx_ETH_VERSION*)0xF001E020u)


#define ETH_VLAN_TAG (*(volatile Ifx_ETH_VLAN_TAG*)0xF001E01Cu)
# 40 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_reg.h" 2 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxFce_reg.h" 1 3
# 34 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxFce_reg.h" 3
#define IFXFCE_REG_H 1

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxFce_regdef.h" 1 3
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxFce_regdef.h" 3
#define IFXFCE_REGDEF_H 1







typedef struct _Ifx_FCE_ACCEN0_Bits
{
    unsigned int EN0:1;
    unsigned int EN1:1;
    unsigned int EN2:1;
    unsigned int EN3:1;
    unsigned int EN4:1;
    unsigned int EN5:1;
    unsigned int EN6:1;
    unsigned int EN7:1;
    unsigned int EN8:1;
    unsigned int EN9:1;
    unsigned int EN10:1;
    unsigned int EN11:1;
    unsigned int EN12:1;
    unsigned int EN13:1;
    unsigned int EN14:1;
    unsigned int EN15:1;
    unsigned int EN16:1;
    unsigned int EN17:1;
    unsigned int EN18:1;
    unsigned int EN19:1;
    unsigned int EN20:1;
    unsigned int EN21:1;
    unsigned int EN22:1;
    unsigned int EN23:1;
    unsigned int EN24:1;
    unsigned int EN25:1;
    unsigned int EN26:1;
    unsigned int EN27:1;
    unsigned int EN28:1;
    unsigned int EN29:1;
    unsigned int EN30:1;
    unsigned int EN31:1;
} Ifx_FCE_ACCEN0_Bits;


typedef struct _Ifx_FCE_ACCEN1_Bits
{
    unsigned int reserved_0:32;
} Ifx_FCE_ACCEN1_Bits;


typedef struct _Ifx_FCE_CFG_Bits
{
    unsigned int CMI:1;
    unsigned int CEI:1;
    unsigned int LEI:1;
    unsigned int BEI:1;
    unsigned int CCE:1;
    unsigned int ALR:1;
    unsigned int reserved_6:2;
    unsigned int REFIN:1;
    unsigned int REFOUT:1;
    unsigned int XSEL:1;
    unsigned int reserved_11:21;
} Ifx_FCE_CFG_Bits;


typedef struct _Ifx_FCE_CLC_Bits
{
    unsigned int DISR:1;
    unsigned int DISS:1;
    unsigned int reserved_2:30;
} Ifx_FCE_CLC_Bits;


typedef struct _Ifx_FCE_CTR_Bits
{
    unsigned int FCM:1;
    unsigned int FRM_CFG:1;
    unsigned int FRM_CHECK:1;
    unsigned int reserved_3:29;
} Ifx_FCE_CTR_Bits;


typedef struct _Ifx_FCE_ID_Bits
{
    unsigned int MOD_REV:8;
    unsigned int MOD_TYPE:8;
    unsigned int MODNUMBER:16;
} Ifx_FCE_ID_Bits;


typedef struct _Ifx_FCE_IN0_CHECK_Bits
{
    unsigned int CHECK:32;
} Ifx_FCE_IN0_CHECK_Bits;


typedef struct _Ifx_FCE_IN0_CRC_Bits
{
    unsigned int CRC:32;
} Ifx_FCE_IN0_CRC_Bits;


typedef struct _Ifx_FCE_IN0_IR_Bits
{
    unsigned int IR:32;
} Ifx_FCE_IN0_IR_Bits;


typedef struct _Ifx_FCE_IN0_RES_Bits
{
    unsigned int RES:32;
} Ifx_FCE_IN0_RES_Bits;


typedef struct _Ifx_FCE_IN1_CHECK_Bits
{
    unsigned int CHECK:32;
} Ifx_FCE_IN1_CHECK_Bits;


typedef struct _Ifx_FCE_IN1_CRC_Bits
{
    unsigned int CRC:32;
} Ifx_FCE_IN1_CRC_Bits;


typedef struct _Ifx_FCE_IN1_IR_Bits
{
    unsigned int IR:32;
} Ifx_FCE_IN1_IR_Bits;


typedef struct _Ifx_FCE_IN1_RES_Bits
{
    unsigned int RES:32;
} Ifx_FCE_IN1_RES_Bits;


typedef struct _Ifx_FCE_IN2_CHECK_Bits
{
    unsigned int CHECK:16;
    unsigned int reserved_16:16;
} Ifx_FCE_IN2_CHECK_Bits;


typedef struct _Ifx_FCE_IN2_CRC_Bits
{
    unsigned int CRC:16;
    unsigned int reserved_16:16;
} Ifx_FCE_IN2_CRC_Bits;


typedef struct _Ifx_FCE_IN2_IR_Bits
{
    unsigned int IR:16;
    unsigned int reserved_16:16;
} Ifx_FCE_IN2_IR_Bits;


typedef struct _Ifx_FCE_IN2_RES_Bits
{
    unsigned int RES:16;
    unsigned int reserved_16:16;
} Ifx_FCE_IN2_RES_Bits;


typedef struct _Ifx_FCE_IN3_CHECK_Bits
{
    unsigned int CHECK:8;
    unsigned int reserved_8:24;
} Ifx_FCE_IN3_CHECK_Bits;


typedef struct _Ifx_FCE_IN3_CRC_Bits
{
    unsigned int CRC:8;
    unsigned int reserved_8:24;
} Ifx_FCE_IN3_CRC_Bits;


typedef struct _Ifx_FCE_IN3_IR_Bits
{
    unsigned int IR:8;
    unsigned int reserved_8:24;
} Ifx_FCE_IN3_IR_Bits;


typedef struct _Ifx_FCE_IN3_RES_Bits
{
    unsigned int RES:8;
    unsigned int reserved_8:24;
} Ifx_FCE_IN3_RES_Bits;


typedef struct _Ifx_FCE_KRST0_Bits
{
    unsigned int RST:1;
    unsigned int RSTSTAT:1;
    unsigned int reserved_2:30;
} Ifx_FCE_KRST0_Bits;


typedef struct _Ifx_FCE_KRST1_Bits
{
    unsigned int RST:1;
    unsigned int reserved_1:31;
} Ifx_FCE_KRST1_Bits;


typedef struct _Ifx_FCE_KRSTCLR_Bits
{
    unsigned int CLR:1;
    unsigned int reserved_1:31;
} Ifx_FCE_KRSTCLR_Bits;


typedef struct _Ifx_FCE_LENGTH_Bits
{
    unsigned int LENGTH:16;
    unsigned int reserved_16:16;
} Ifx_FCE_LENGTH_Bits;


typedef struct _Ifx_FCE_STS_Bits
{
    unsigned int CMF:1;
    unsigned int CEF:1;
    unsigned int LEF:1;
    unsigned int BEF:1;
    unsigned int reserved_4:28;
} Ifx_FCE_STS_Bits;







typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FCE_ACCEN0_Bits B;
} Ifx_FCE_ACCEN0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FCE_ACCEN1_Bits B;
} Ifx_FCE_ACCEN1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FCE_CFG_Bits B;
} Ifx_FCE_CFG;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FCE_CLC_Bits B;
} Ifx_FCE_CLC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FCE_CTR_Bits B;
} Ifx_FCE_CTR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FCE_ID_Bits B;
} Ifx_FCE_ID;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FCE_IN0_CHECK_Bits B;
} Ifx_FCE_IN0_CHECK;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FCE_IN0_CRC_Bits B;
} Ifx_FCE_IN0_CRC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FCE_IN0_IR_Bits B;
} Ifx_FCE_IN0_IR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FCE_IN0_RES_Bits B;
} Ifx_FCE_IN0_RES;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FCE_IN1_CHECK_Bits B;
} Ifx_FCE_IN1_CHECK;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FCE_IN1_CRC_Bits B;
} Ifx_FCE_IN1_CRC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FCE_IN1_IR_Bits B;
} Ifx_FCE_IN1_IR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FCE_IN1_RES_Bits B;
} Ifx_FCE_IN1_RES;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FCE_IN2_CHECK_Bits B;
} Ifx_FCE_IN2_CHECK;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FCE_IN2_CRC_Bits B;
} Ifx_FCE_IN2_CRC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FCE_IN2_IR_Bits B;
} Ifx_FCE_IN2_IR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FCE_IN2_RES_Bits B;
} Ifx_FCE_IN2_RES;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FCE_IN3_CHECK_Bits B;
} Ifx_FCE_IN3_CHECK;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FCE_IN3_CRC_Bits B;
} Ifx_FCE_IN3_CRC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FCE_IN3_IR_Bits B;
} Ifx_FCE_IN3_IR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FCE_IN3_RES_Bits B;
} Ifx_FCE_IN3_RES;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FCE_KRST0_Bits B;
} Ifx_FCE_KRST0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FCE_KRST1_Bits B;
} Ifx_FCE_KRST1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FCE_KRSTCLR_Bits B;
} Ifx_FCE_KRSTCLR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FCE_LENGTH_Bits B;
} Ifx_FCE_LENGTH;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FCE_STS_Bits B;
} Ifx_FCE_STS;
# 501 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxFce_regdef.h" 3
typedef volatile struct _Ifx_FCE_IN0
{
    Ifx_FCE_IN0_IR IR;
    Ifx_FCE_IN0_RES RES;
    Ifx_FCE_CFG CFG;
    Ifx_FCE_STS STS;
    Ifx_FCE_LENGTH LENGTH;
    Ifx_FCE_IN0_CHECK CHECK;
    Ifx_FCE_IN0_CRC CRC;
    Ifx_FCE_CTR CTR;
} Ifx_FCE_IN0;


typedef volatile struct _Ifx_FCE_IN1
{
    Ifx_FCE_IN1_IR IR;
    Ifx_FCE_IN1_RES RES;
    Ifx_FCE_CFG CFG;
    Ifx_FCE_STS STS;
    Ifx_FCE_LENGTH LENGTH;
    Ifx_FCE_IN1_CHECK CHECK;
    Ifx_FCE_IN1_CRC CRC;
    Ifx_FCE_CTR CTR;
} Ifx_FCE_IN1;


typedef volatile struct _Ifx_FCE_IN2
{
    Ifx_FCE_IN2_IR IR;
    Ifx_FCE_IN2_RES RES;
    Ifx_FCE_CFG CFG;
    Ifx_FCE_STS STS;
    Ifx_FCE_LENGTH LENGTH;
    Ifx_FCE_IN2_CHECK CHECK;
    Ifx_FCE_IN2_CRC CRC;
    Ifx_FCE_CTR CTR;
} Ifx_FCE_IN2;


typedef volatile struct _Ifx_FCE_IN3
{
    Ifx_FCE_IN3_IR IR;
    Ifx_FCE_IN3_RES RES;
    Ifx_FCE_CFG CFG;
    Ifx_FCE_STS STS;
    Ifx_FCE_LENGTH LENGTH;
    Ifx_FCE_IN3_CHECK CHECK;
    Ifx_FCE_IN3_CRC CRC;
    Ifx_FCE_CTR CTR;
} Ifx_FCE_IN3;
# 563 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxFce_regdef.h" 3
typedef volatile struct _Ifx_FCE
{
    Ifx_FCE_CLC CLC;
    unsigned char reserved_4[4];
    Ifx_FCE_ID ID;
    unsigned char reserved_C[20];
    Ifx_FCE_IN0 IN0;
    Ifx_FCE_IN1 IN1;
    Ifx_FCE_IN2 IN2;
    Ifx_FCE_IN3 IN3;
    unsigned char reserved_A0[76];
    Ifx_FCE_KRSTCLR KRSTCLR;
    Ifx_FCE_KRST1 KRST1;
    Ifx_FCE_KRST0 KRST0;
    Ifx_FCE_ACCEN1 ACCEN1;
    Ifx_FCE_ACCEN0 ACCEN0;
} Ifx_FCE;
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxFce_reg.h" 2 3





#define MODULE_FCE0 (*(Ifx_FCE*)0xF0003F00u)







#define FCE0_ACCEN0 (*(volatile Ifx_FCE_ACCEN0*)0xF0003FFCu)




#define FCE_ACCEN0 (FCE0_ACCEN0)


#define FCE0_ACCEN1 (*(volatile Ifx_FCE_ACCEN1*)0xF0003FF8u)




#define FCE_ACCEN1 (FCE0_ACCEN1)


#define FCE0_CLC (*(volatile Ifx_FCE_CLC*)0xF0003F00u)




#define FCE_CLC (FCE0_CLC)


#define FCE0_ID (*(volatile Ifx_FCE_ID*)0xF0003F08u)




#define FCE_ID (FCE0_ID)


#define FCE0_IN0_CFG (*(volatile Ifx_FCE_CFG*)0xF0003F28u)




#define FCE_CFG0 (FCE0_IN0_CFG)


#define FCE0_IN0_CHECK (*(volatile Ifx_FCE_IN0_CHECK*)0xF0003F34u)




#define FCE_CHECK0 (FCE0_IN0_CHECK)


#define FCE0_IN0_CRC (*(volatile Ifx_FCE_IN0_CRC*)0xF0003F38u)




#define FCE_CRC0 (FCE0_IN0_CRC)


#define FCE0_IN0_CTR (*(volatile Ifx_FCE_CTR*)0xF0003F3Cu)




#define FCE_CTR0 (FCE0_IN0_CTR)


#define FCE0_IN0_IR (*(volatile Ifx_FCE_IN0_IR*)0xF0003F20u)




#define FCE_IR0 (FCE0_IN0_IR)


#define FCE0_IN0_LENGTH (*(volatile Ifx_FCE_LENGTH*)0xF0003F30u)




#define FCE_LENGTH0 (FCE0_IN0_LENGTH)


#define FCE0_IN0_RES (*(volatile Ifx_FCE_IN0_RES*)0xF0003F24u)




#define FCE_RES0 (FCE0_IN0_RES)


#define FCE0_IN0_STS (*(volatile Ifx_FCE_STS*)0xF0003F2Cu)




#define FCE_STS0 (FCE0_IN0_STS)


#define FCE0_IN1_CFG (*(volatile Ifx_FCE_CFG*)0xF0003F48u)




#define FCE_CFG1 (FCE0_IN1_CFG)


#define FCE0_IN1_CHECK (*(volatile Ifx_FCE_IN1_CHECK*)0xF0003F54u)




#define FCE_CHECK1 (FCE0_IN1_CHECK)


#define FCE0_IN1_CRC (*(volatile Ifx_FCE_IN1_CRC*)0xF0003F58u)




#define FCE_CRC1 (FCE0_IN1_CRC)


#define FCE0_IN1_CTR (*(volatile Ifx_FCE_CTR*)0xF0003F5Cu)




#define FCE_CTR1 (FCE0_IN1_CTR)


#define FCE0_IN1_IR (*(volatile Ifx_FCE_IN1_IR*)0xF0003F40u)




#define FCE_IR1 (FCE0_IN1_IR)


#define FCE0_IN1_LENGTH (*(volatile Ifx_FCE_LENGTH*)0xF0003F50u)




#define FCE_LENGTH1 (FCE0_IN1_LENGTH)


#define FCE0_IN1_RES (*(volatile Ifx_FCE_IN1_RES*)0xF0003F44u)




#define FCE_RES1 (FCE0_IN1_RES)


#define FCE0_IN1_STS (*(volatile Ifx_FCE_STS*)0xF0003F4Cu)




#define FCE_STS1 (FCE0_IN1_STS)


#define FCE0_IN2_CFG (*(volatile Ifx_FCE_CFG*)0xF0003F68u)




#define FCE_CFG2 (FCE0_IN2_CFG)


#define FCE0_IN2_CHECK (*(volatile Ifx_FCE_IN2_CHECK*)0xF0003F74u)




#define FCE_CHECK2 (FCE0_IN2_CHECK)


#define FCE0_IN2_CRC (*(volatile Ifx_FCE_IN2_CRC*)0xF0003F78u)




#define FCE_CRC2 (FCE0_IN2_CRC)


#define FCE0_IN2_CTR (*(volatile Ifx_FCE_CTR*)0xF0003F7Cu)




#define FCE_CTR2 (FCE0_IN2_CTR)


#define FCE0_IN2_IR (*(volatile Ifx_FCE_IN2_IR*)0xF0003F60u)




#define FCE_IR2 (FCE0_IN2_IR)


#define FCE0_IN2_LENGTH (*(volatile Ifx_FCE_LENGTH*)0xF0003F70u)




#define FCE_LENGTH2 (FCE0_IN2_LENGTH)


#define FCE0_IN2_RES (*(volatile Ifx_FCE_IN2_RES*)0xF0003F64u)




#define FCE_RES2 (FCE0_IN2_RES)


#define FCE0_IN2_STS (*(volatile Ifx_FCE_STS*)0xF0003F6Cu)




#define FCE_STS2 (FCE0_IN2_STS)


#define FCE0_IN3_CFG (*(volatile Ifx_FCE_CFG*)0xF0003F88u)




#define FCE_CFG3 (FCE0_IN3_CFG)


#define FCE0_IN3_CHECK (*(volatile Ifx_FCE_IN3_CHECK*)0xF0003F94u)




#define FCE_CHECK3 (FCE0_IN3_CHECK)


#define FCE0_IN3_CRC (*(volatile Ifx_FCE_IN3_CRC*)0xF0003F98u)




#define FCE_CRC3 (FCE0_IN3_CRC)


#define FCE0_IN3_CTR (*(volatile Ifx_FCE_CTR*)0xF0003F9Cu)




#define FCE_CTR3 (FCE0_IN3_CTR)


#define FCE0_IN3_IR (*(volatile Ifx_FCE_IN3_IR*)0xF0003F80u)




#define FCE_IR3 (FCE0_IN3_IR)


#define FCE0_IN3_LENGTH (*(volatile Ifx_FCE_LENGTH*)0xF0003F90u)




#define FCE_LENGTH3 (FCE0_IN3_LENGTH)


#define FCE0_IN3_RES (*(volatile Ifx_FCE_IN3_RES*)0xF0003F84u)




#define FCE_RES3 (FCE0_IN3_RES)


#define FCE0_IN3_STS (*(volatile Ifx_FCE_STS*)0xF0003F8Cu)




#define FCE_STS3 (FCE0_IN3_STS)


#define FCE0_KRST0 (*(volatile Ifx_FCE_KRST0*)0xF0003FF4u)




#define FCE_KRST0 (FCE0_KRST0)


#define FCE0_KRST1 (*(volatile Ifx_FCE_KRST1*)0xF0003FF0u)




#define FCE_KRST1 (FCE0_KRST1)


#define FCE0_KRSTCLR (*(volatile Ifx_FCE_KRSTCLR*)0xF0003FECu)




#define FCE_KRSTCLR (FCE0_KRSTCLR)
# 41 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_reg.h" 2 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxFlash_reg.h" 1 3
# 34 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxFlash_reg.h" 3
#define IFXFLASH_REG_H 1

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxFlash_regdef.h" 1 3
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxFlash_regdef.h" 3
#define IFXFLASH_REGDEF_H 1







typedef struct _Ifx_FLASH_ACCEN0_Bits
{
    unsigned int EN0:1;
    unsigned int EN1:1;
    unsigned int EN2:1;
    unsigned int EN3:1;
    unsigned int EN4:1;
    unsigned int EN5:1;
    unsigned int EN6:1;
    unsigned int EN7:1;
    unsigned int EN8:1;
    unsigned int EN9:1;
    unsigned int EN10:1;
    unsigned int EN11:1;
    unsigned int EN12:1;
    unsigned int EN13:1;
    unsigned int EN14:1;
    unsigned int EN15:1;
    unsigned int EN16:1;
    unsigned int EN17:1;
    unsigned int EN18:1;
    unsigned int EN19:1;
    unsigned int EN20:1;
    unsigned int EN21:1;
    unsigned int EN22:1;
    unsigned int EN23:1;
    unsigned int EN24:1;
    unsigned int EN25:1;
    unsigned int EN26:1;
    unsigned int EN27:1;
    unsigned int EN28:1;
    unsigned int EN29:1;
    unsigned int EN30:1;
    unsigned int EN31:1;
} Ifx_FLASH_ACCEN0_Bits;


typedef struct _Ifx_FLASH_ACCEN1_Bits
{
    unsigned int reserved_0:32;
} Ifx_FLASH_ACCEN1_Bits;


typedef struct _Ifx_FLASH_CBAB_CFG_Bits
{
    unsigned int SEL:6;
    unsigned int reserved_6:2;
    unsigned int CLR:1;
    unsigned int DIS:1;
    unsigned int reserved_10:22;
} Ifx_FLASH_CBAB_CFG_Bits;


typedef struct _Ifx_FLASH_CBAB_STAT_Bits
{
    unsigned int VLD0:1;
    unsigned int VLD1:1;
    unsigned int VLD2:1;
    unsigned int VLD3:1;
    unsigned int VLD4:1;
    unsigned int VLD5:1;
    unsigned int VLD6:1;
    unsigned int VLD7:1;
    unsigned int VLD8:1;
    unsigned int VLD9:1;
    unsigned int reserved_10:22;
} Ifx_FLASH_CBAB_STAT_Bits;


typedef struct _Ifx_FLASH_CBAB_TOP_Bits
{
    unsigned int reserved_0:5;
    unsigned int ADDR:19;
    unsigned int ERR:6;
    unsigned int VLD:1;
    unsigned int CLR:1;
} Ifx_FLASH_CBAB_TOP_Bits;


typedef struct _Ifx_FLASH_COMM0_Bits
{
    unsigned int STATUS:8;
    unsigned int reserved_8:24;
} Ifx_FLASH_COMM0_Bits;


typedef struct _Ifx_FLASH_COMM1_Bits
{
    unsigned int STATUS:8;
    unsigned int DATA:8;
    unsigned int reserved_16:16;
} Ifx_FLASH_COMM1_Bits;


typedef struct _Ifx_FLASH_COMM2_Bits
{
    unsigned int STATUS:8;
    unsigned int DATA:8;
    unsigned int reserved_16:16;
} Ifx_FLASH_COMM2_Bits;


typedef struct _Ifx_FLASH_ECCRD_Bits
{
    unsigned int RCODE:22;
    unsigned int reserved_22:8;
    unsigned int EDCERRINJ:1;
    unsigned int ECCORDIS:1;
} Ifx_FLASH_ECCRD_Bits;


typedef struct _Ifx_FLASH_ECCRP_Bits
{
    unsigned int RCODE:22;
    unsigned int reserved_22:8;
    unsigned int EDCERRINJ:1;
    unsigned int ECCORDIS:1;
} Ifx_FLASH_ECCRP_Bits;


typedef struct _Ifx_FLASH_ECCW_Bits
{
    unsigned int WCODE:22;
    unsigned int reserved_22:8;
    unsigned int DECENCDIS:1;
    unsigned int PECENCDIS:1;
} Ifx_FLASH_ECCW_Bits;


typedef struct _Ifx_FLASH_FCON_Bits
{
    unsigned int WSPFLASH:4;
    unsigned int WSECPF:2;
    unsigned int WSDFLASH:6;
    unsigned int WSECDF:3;
    unsigned int IDLE:1;
    unsigned int ESLDIS:1;
    unsigned int SLEEP:1;
    unsigned int NSAFECC:1;
    unsigned int STALL:1;
    unsigned int RES21:2;
    unsigned int RES23:2;
    unsigned int VOPERM:1;
    unsigned int SQERM:1;
    unsigned int PROERM:1;
    unsigned int reserved_27:3;
    unsigned int PR5V:1;
    unsigned int EOBM:1;
} Ifx_FLASH_FCON_Bits;


typedef struct _Ifx_FLASH_FPRO_Bits
{
    unsigned int PROINP:1;
    unsigned int PRODISP:1;
    unsigned int PROIND:1;
    unsigned int PRODISD:1;
    unsigned int PROINHSMCOTP:1;
    unsigned int RES5:1;
    unsigned int PROINOTP:1;
    unsigned int RES7:1;
    unsigned int PROINDBG:1;
    unsigned int PRODISDBG:1;
    unsigned int PROINHSM:1;
    unsigned int reserved_11:5;
    unsigned int DCFP:1;
    unsigned int DDFP:1;
    unsigned int DDFPX:1;
    unsigned int reserved_19:1;
    unsigned int DDFD:1;
    unsigned int reserved_21:1;
    unsigned int ENPE:2;
    unsigned int reserved_24:8;
} Ifx_FLASH_FPRO_Bits;


typedef struct _Ifx_FLASH_FSR_Bits
{
    unsigned int FABUSY:1;
    unsigned int D0BUSY:1;
    unsigned int D1BUSY:1;
    unsigned int P0BUSY:1;
    unsigned int P1BUSY:1;
    unsigned int RES5:1;
    unsigned int RES6:1;
    unsigned int PROG:1;
    unsigned int ERASE:1;
    unsigned int PFPAGE:1;
    unsigned int DFPAGE:1;
    unsigned int OPER:1;
    unsigned int SQER:1;
    unsigned int PROER:1;
    unsigned int PFSBER:1;
    unsigned int PFDBER:1;
    unsigned int PFMBER:1;
    unsigned int RES17:1;
    unsigned int DFSBER:1;
    unsigned int DFDBER:1;
    unsigned int DFTBER:1;
    unsigned int DFMBER:1;
    unsigned int SRIADDERR:1;
    unsigned int reserved_23:2;
    unsigned int PVER:1;
    unsigned int EVER:1;
    unsigned int SPND:1;
    unsigned int SLM:1;
    unsigned int reserved_29:1;
    unsigned int ORIER:1;
    unsigned int reserved_31:1;
} Ifx_FLASH_FSR_Bits;


typedef struct _Ifx_FLASH_HSMFCON_Bits
{
    unsigned int LCKHSMUCB:2;
    unsigned int reserved_2:22;
    unsigned int VOPERM:1;
    unsigned int SQERM:1;
    unsigned int reserved_26:5;
    unsigned int EOBM:1;
} Ifx_FLASH_HSMFCON_Bits;


typedef struct _Ifx_FLASH_HSMFSR_Bits
{
    unsigned int reserved_0:2;
    unsigned int D1BUSY:1;
    unsigned int reserved_3:4;
    unsigned int PROG:1;
    unsigned int ERASE:1;
    unsigned int reserved_9:1;
    unsigned int DFPAGE:1;
    unsigned int OPER:1;
    unsigned int SQER:1;
    unsigned int reserved_13:12;
    unsigned int PVER:1;
    unsigned int EVER:1;
    unsigned int SPND:1;
    unsigned int reserved_28:4;
} Ifx_FLASH_HSMFSR_Bits;


typedef struct _Ifx_FLASH_HSMMARD_Bits
{
    unsigned int reserved_0:1;
    unsigned int SELD1:1;
    unsigned int reserved_2:1;
    unsigned int SPND:1;
    unsigned int SPNDERR:1;
    unsigned int reserved_5:27;
} Ifx_FLASH_HSMMARD_Bits;


typedef struct _Ifx_FLASH_HSMRRAD_Bits
{
    unsigned int reserved_0:3;
    unsigned int ADD:29;
} Ifx_FLASH_HSMRRAD_Bits;


typedef struct _Ifx_FLASH_HSMRRCT_Bits
{
    unsigned int STRT:1;
    unsigned int STP:1;
    unsigned int BUSY:1;
    unsigned int DONE:1;
    unsigned int ERR:1;
    unsigned int reserved_5:3;
    unsigned int EOBM:1;
    unsigned int reserved_9:7;
    unsigned int CNT:16;
} Ifx_FLASH_HSMRRCT_Bits;


typedef struct _Ifx_FLASH_HSMRRD0_Bits
{
    unsigned int DATA:32;
} Ifx_FLASH_HSMRRD0_Bits;


typedef struct _Ifx_FLASH_HSMRRD1_Bits
{
    unsigned int DATA:32;
} Ifx_FLASH_HSMRRD1_Bits;


typedef struct _Ifx_FLASH_ID_Bits
{
    unsigned int MOD_REV:8;
    unsigned int MOD_TYPE:8;
    unsigned int MODNUMBER:16;
} Ifx_FLASH_ID_Bits;


typedef struct _Ifx_FLASH_MARD_Bits
{
    unsigned int HMARGIN:1;
    unsigned int SELD0:1;
    unsigned int reserved_2:1;
    unsigned int SPND:1;
    unsigned int SPNDERR:1;
    unsigned int reserved_5:10;
    unsigned int TRAPDIS:1;
    unsigned int reserved_16:16;
} Ifx_FLASH_MARD_Bits;


typedef struct _Ifx_FLASH_MARP_Bits
{
    unsigned int SELP0:1;
    unsigned int SELP1:1;
    unsigned int RES2:1;
    unsigned int RES3:1;
    unsigned int reserved_4:11;
    unsigned int TRAPDIS:1;
    unsigned int reserved_16:16;
} Ifx_FLASH_MARP_Bits;


typedef struct _Ifx_FLASH_PROCOND_Bits
{
    unsigned int L:1;
    unsigned int NSAFECC:1;
    unsigned int RAMIN:2;
    unsigned int RAMINSEL:4;
    unsigned int OSCCFG:1;
    unsigned int MODE:2;
    unsigned int APREN:1;
    unsigned int CAP0EN:1;
    unsigned int CAP1EN:1;
    unsigned int CAP2EN:1;
    unsigned int CAP3EN:1;
    unsigned int ESR0CNT:12;
    unsigned int RES29:2;
    unsigned int RES30:1;
    unsigned int RPRO:1;
} Ifx_FLASH_PROCOND_Bits;


typedef struct _Ifx_FLASH_PROCONDBG_Bits
{
    unsigned int OCDSDIS:1;
    unsigned int DBGIFLCK:1;
    unsigned int EDM:2;
    unsigned int reserved_4:28;
} Ifx_FLASH_PROCONDBG_Bits;


typedef struct _Ifx_FLASH_PROCONHSM_Bits
{
    unsigned int HSMDBGDIS:1;
    unsigned int DBGIFLCK:1;
    unsigned int TSTIFLCK:1;
    unsigned int HSMTSTDIS:1;
    unsigned int RES15:12;
    unsigned int reserved_16:16;
} Ifx_FLASH_PROCONHSM_Bits;


typedef struct _Ifx_FLASH_PROCONHSMCOTP_Bits
{
    unsigned int HSMBOOTEN:1;
    unsigned int SSWWAIT:1;
    unsigned int HSMDX:1;
    unsigned int HSM6X:1;
    unsigned int HSM16X:1;
    unsigned int HSM17X:1;
    unsigned int S6ROM:1;
    unsigned int HSMENPINS:2;
    unsigned int HSMENRES:2;
    unsigned int DESTDBG:2;
    unsigned int BLKFLAN:1;
    unsigned int reserved_14:2;
    unsigned int S16ROM:1;
    unsigned int S17ROM:1;
    unsigned int reserved_18:14;
} Ifx_FLASH_PROCONHSMCOTP_Bits;


typedef struct _Ifx_FLASH_PROCONOTP_Bits
{
    unsigned int S0ROM:1;
    unsigned int S1ROM:1;
    unsigned int S2ROM:1;
    unsigned int S3ROM:1;
    unsigned int S4ROM:1;
    unsigned int S5ROM:1;
    unsigned int S6ROM:1;
    unsigned int S7ROM:1;
    unsigned int S8ROM:1;
    unsigned int S9ROM:1;
    unsigned int S10ROM:1;
    unsigned int S11ROM:1;
    unsigned int S12ROM:1;
    unsigned int S13ROM:1;
    unsigned int S14ROM:1;
    unsigned int S15ROM:1;
    unsigned int S16ROM:1;
    unsigned int S17ROM:1;
    unsigned int S18ROM:1;
    unsigned int S19ROM:1;
    unsigned int S20ROM:1;
    unsigned int S21ROM:1;
    unsigned int S22ROM:1;
    unsigned int S23ROM:1;
    unsigned int S24ROM:1;
    unsigned int S25ROM:1;
    unsigned int S26ROM:1;
    unsigned int reserved_27:2;
    unsigned int BML:2;
    unsigned int TP:1;
} Ifx_FLASH_PROCONOTP_Bits;


typedef struct _Ifx_FLASH_PROCONP_Bits
{
    unsigned int S0L:1;
    unsigned int S1L:1;
    unsigned int S2L:1;
    unsigned int S3L:1;
    unsigned int S4L:1;
    unsigned int S5L:1;
    unsigned int S6L:1;
    unsigned int S7L:1;
    unsigned int S8L:1;
    unsigned int S9L:1;
    unsigned int S10L:1;
    unsigned int S11L:1;
    unsigned int S12L:1;
    unsigned int S13L:1;
    unsigned int S14L:1;
    unsigned int S15L:1;
    unsigned int S16L:1;
    unsigned int S17L:1;
    unsigned int S18L:1;
    unsigned int S19L:1;
    unsigned int S20L:1;
    unsigned int S21L:1;
    unsigned int S22L:1;
    unsigned int S23L:1;
    unsigned int S24L:1;
    unsigned int S25L:1;
    unsigned int S26L:1;
    unsigned int reserved_27:4;
    unsigned int RPRO:1;
} Ifx_FLASH_PROCONP_Bits;


typedef struct _Ifx_FLASH_PROCONWOP_Bits
{
    unsigned int S0WOP:1;
    unsigned int S1WOP:1;
    unsigned int S2WOP:1;
    unsigned int S3WOP:1;
    unsigned int S4WOP:1;
    unsigned int S5WOP:1;
    unsigned int S6WOP:1;
    unsigned int S7WOP:1;
    unsigned int S8WOP:1;
    unsigned int S9WOP:1;
    unsigned int S10WOP:1;
    unsigned int S11WOP:1;
    unsigned int S12WOP:1;
    unsigned int S13WOP:1;
    unsigned int S14WOP:1;
    unsigned int S15WOP:1;
    unsigned int S16WOP:1;
    unsigned int S17WOP:1;
    unsigned int S18WOP:1;
    unsigned int S19WOP:1;
    unsigned int S20WOP:1;
    unsigned int S21WOP:1;
    unsigned int S22WOP:1;
    unsigned int S23WOP:1;
    unsigned int S24WOP:1;
    unsigned int S25WOP:1;
    unsigned int S26WOP:1;
    unsigned int reserved_27:4;
    unsigned int DATM:1;
} Ifx_FLASH_PROCONWOP_Bits;


typedef struct _Ifx_FLASH_RDB_CFG0_Bits
{
    unsigned int TAG:6;
    unsigned int reserved_6:26;
} Ifx_FLASH_RDB_CFG0_Bits;


typedef struct _Ifx_FLASH_RDB_CFG1_Bits
{
    unsigned int TAG:6;
    unsigned int reserved_6:26;
} Ifx_FLASH_RDB_CFG1_Bits;


typedef struct _Ifx_FLASH_RDB_CFG2_Bits
{
    unsigned int TAG:6;
    unsigned int reserved_6:26;
} Ifx_FLASH_RDB_CFG2_Bits;


typedef struct _Ifx_FLASH_RRAD_Bits
{
    unsigned int reserved_0:3;
    unsigned int ADD:29;
} Ifx_FLASH_RRAD_Bits;


typedef struct _Ifx_FLASH_RRCT_Bits
{
    unsigned int STRT:1;
    unsigned int STP:1;
    unsigned int BUSY:1;
    unsigned int DONE:1;
    unsigned int ERR:1;
    unsigned int reserved_5:3;
    unsigned int EOBM:1;
    unsigned int reserved_9:7;
    unsigned int CNT:16;
} Ifx_FLASH_RRCT_Bits;


typedef struct _Ifx_FLASH_RRD0_Bits
{
    unsigned int DATA:32;
} Ifx_FLASH_RRD0_Bits;


typedef struct _Ifx_FLASH_RRD1_Bits
{
    unsigned int DATA:32;
} Ifx_FLASH_RRD1_Bits;


typedef struct _Ifx_FLASH_UBAB_CFG_Bits
{
    unsigned int SEL:6;
    unsigned int reserved_6:2;
    unsigned int CLR:1;
    unsigned int DIS:1;
    unsigned int reserved_10:22;
} Ifx_FLASH_UBAB_CFG_Bits;


typedef struct _Ifx_FLASH_UBAB_STAT_Bits
{
    unsigned int VLD0:1;
    unsigned int reserved_1:31;
} Ifx_FLASH_UBAB_STAT_Bits;


typedef struct _Ifx_FLASH_UBAB_TOP_Bits
{
    unsigned int reserved_0:5;
    unsigned int ADDR:19;
    unsigned int ERR:6;
    unsigned int VLD:1;
    unsigned int CLR:1;
} Ifx_FLASH_UBAB_TOP_Bits;







typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_ACCEN0_Bits B;
} Ifx_FLASH_ACCEN0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_ACCEN1_Bits B;
} Ifx_FLASH_ACCEN1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_CBAB_CFG_Bits B;
} Ifx_FLASH_CBAB_CFG;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_CBAB_STAT_Bits B;
} Ifx_FLASH_CBAB_STAT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_CBAB_TOP_Bits B;
} Ifx_FLASH_CBAB_TOP;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_COMM0_Bits B;
} Ifx_FLASH_COMM0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_COMM1_Bits B;
} Ifx_FLASH_COMM1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_COMM2_Bits B;
} Ifx_FLASH_COMM2;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_ECCRD_Bits B;
} Ifx_FLASH_ECCRD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_ECCRP_Bits B;
} Ifx_FLASH_ECCRP;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_ECCW_Bits B;
} Ifx_FLASH_ECCW;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_FCON_Bits B;
} Ifx_FLASH_FCON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_FPRO_Bits B;
} Ifx_FLASH_FPRO;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_FSR_Bits B;
} Ifx_FLASH_FSR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_HSMFCON_Bits B;
} Ifx_FLASH_HSMFCON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_HSMFSR_Bits B;
} Ifx_FLASH_HSMFSR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_HSMMARD_Bits B;
} Ifx_FLASH_HSMMARD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_HSMRRAD_Bits B;
} Ifx_FLASH_HSMRRAD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_HSMRRCT_Bits B;
} Ifx_FLASH_HSMRRCT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_HSMRRD0_Bits B;
} Ifx_FLASH_HSMRRD0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_HSMRRD1_Bits B;
} Ifx_FLASH_HSMRRD1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_ID_Bits B;
} Ifx_FLASH_ID;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_MARD_Bits B;
} Ifx_FLASH_MARD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_MARP_Bits B;
} Ifx_FLASH_MARP;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_PROCOND_Bits B;
} Ifx_FLASH_PROCOND;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_PROCONDBG_Bits B;
} Ifx_FLASH_PROCONDBG;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_PROCONHSM_Bits B;
} Ifx_FLASH_PROCONHSM;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_PROCONHSMCOTP_Bits B;
} Ifx_FLASH_PROCONHSMCOTP;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_PROCONOTP_Bits B;
} Ifx_FLASH_PROCONOTP;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_PROCONP_Bits B;
} Ifx_FLASH_PROCONP;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_PROCONWOP_Bits B;
} Ifx_FLASH_PROCONWOP;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_RDB_CFG0_Bits B;
} Ifx_FLASH_RDB_CFG0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_RDB_CFG1_Bits B;
} Ifx_FLASH_RDB_CFG1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_RDB_CFG2_Bits B;
} Ifx_FLASH_RDB_CFG2;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_RRAD_Bits B;
} Ifx_FLASH_RRAD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_RRCT_Bits B;
} Ifx_FLASH_RRCT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_RRD0_Bits B;
} Ifx_FLASH_RRD0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_RRD1_Bits B;
} Ifx_FLASH_RRD1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_UBAB_CFG_Bits B;
} Ifx_FLASH_UBAB_CFG;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_UBAB_STAT_Bits B;
} Ifx_FLASH_UBAB_STAT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_UBAB_TOP_Bits B;
} Ifx_FLASH_UBAB_TOP;
# 949 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxFlash_regdef.h" 3
typedef volatile struct _Ifx_FLASH_CBAB
{
    Ifx_FLASH_CBAB_CFG CFG;
    Ifx_FLASH_CBAB_STAT STAT;
    Ifx_FLASH_CBAB_TOP TOP;
} Ifx_FLASH_CBAB;


typedef volatile struct _Ifx_FLASH_RDB
{
    Ifx_FLASH_RDB_CFG0 CFG0;
    Ifx_FLASH_RDB_CFG1 CFG1;
    Ifx_FLASH_RDB_CFG2 CFG2;
} Ifx_FLASH_RDB;


typedef volatile struct _Ifx_FLASH_UBAB
{
    Ifx_FLASH_UBAB_CFG CFG;
    Ifx_FLASH_UBAB_STAT STAT;
    Ifx_FLASH_UBAB_TOP TOP;
} Ifx_FLASH_UBAB;
# 983 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxFlash_regdef.h" 3
typedef volatile struct _Ifx_FLASH
{
    Ifx_FLASH_COMM0 COMM0;
    Ifx_FLASH_COMM1 COMM1;
    Ifx_FLASH_COMM2 COMM2;
    unsigned char reserved_C[4092];
    Ifx_FLASH_ID ID;
    unsigned char reserved_100C[4];
    Ifx_FLASH_FSR FSR;
    Ifx_FLASH_FCON FCON;
    unsigned char reserved_1018[4];
    Ifx_FLASH_FPRO FPRO;
    Ifx_FLASH_PROCONP PROCONP[2];
    unsigned char reserved_1028[8];
    Ifx_FLASH_PROCOND PROCOND;
    Ifx_FLASH_PROCONHSMCOTP PROCONHSMCOTP;
    Ifx_FLASH_PROCONOTP PROCONOTP[2];
    unsigned char reserved_1040[8];
    Ifx_FLASH_PROCONWOP PROCONWOP[2];
    unsigned char reserved_1050[8];
    Ifx_FLASH_PROCONDBG PROCONDBG;
    Ifx_FLASH_PROCONHSM PROCONHSM;
    Ifx_FLASH_RDB RDBCFG[2];
    unsigned char reserved_1078[24];
    Ifx_FLASH_ECCW ECCW;
    Ifx_FLASH_ECCRP ECCRP[2];
    unsigned char reserved_109C[8];
    Ifx_FLASH_ECCRD ECCRD;
    Ifx_FLASH_MARP MARP;
    Ifx_FLASH_MARD MARD;
    unsigned char reserved_10B0[4];
    Ifx_FLASH_CBAB CBAB[2];
    unsigned char reserved_10CC[24];
    Ifx_FLASH_UBAB UBAB[2];
    unsigned char reserved_10FC[68];
    Ifx_FLASH_RRCT RRCT;
    Ifx_FLASH_RRD0 RRD0;
    Ifx_FLASH_RRD1 RRD1;
    Ifx_FLASH_RRAD RRAD;
    unsigned char reserved_1150[176];
    Ifx_FLASH_HSMFSR HSMFSR;
    Ifx_FLASH_HSMFCON HSMFCON;
    Ifx_FLASH_HSMMARD HSMMARD;
    Ifx_FLASH_HSMRRCT HSMRRCT;
    Ifx_FLASH_HSMRRD0 HSMRRD0;
    Ifx_FLASH_HSMRRD1 HSMRRD1;
    Ifx_FLASH_HSMRRAD HSMRRAD;
    unsigned char reserved_121C[476];
    Ifx_FLASH_ACCEN1 ACCEN1;
    Ifx_FLASH_ACCEN0 ACCEN0;
} Ifx_FLASH;
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxFlash_reg.h" 2 3





#define MODULE_FLASH0 (*(Ifx_FLASH*)0xF8001000u)







#define FLASH0_ACCEN0 (*(volatile Ifx_FLASH_ACCEN0*)0xF80023FCu)


#define FLASH0_ACCEN1 (*(volatile Ifx_FLASH_ACCEN1*)0xF80023F8u)


#define FLASH0_CBAB0_CFG (*(volatile Ifx_FLASH_CBAB_CFG*)0xF80020B4u)




#define FLASH0_CBABCFG0 (FLASH0_CBAB0_CFG)


#define FLASH0_CBAB0_STAT (*(volatile Ifx_FLASH_CBAB_STAT*)0xF80020B8u)




#define FLASH0_CBABSTAT0 (FLASH0_CBAB0_STAT)


#define FLASH0_CBAB0_TOP (*(volatile Ifx_FLASH_CBAB_TOP*)0xF80020BCu)




#define FLASH0_CBABTOP0 (FLASH0_CBAB0_TOP)


#define FLASH0_CBAB1_CFG (*(volatile Ifx_FLASH_CBAB_CFG*)0xF80020C0u)




#define FLASH0_CBABCFG1 (FLASH0_CBAB1_CFG)


#define FLASH0_CBAB1_STAT (*(volatile Ifx_FLASH_CBAB_STAT*)0xF80020C4u)




#define FLASH0_CBABSTAT1 (FLASH0_CBAB1_STAT)


#define FLASH0_CBAB1_TOP (*(volatile Ifx_FLASH_CBAB_TOP*)0xF80020C8u)




#define FLASH0_CBABTOP1 (FLASH0_CBAB1_TOP)


#define FLASH0_COMM0 (*(volatile Ifx_FLASH_COMM0*)0xF8001000u)


#define FLASH0_COMM1 (*(volatile Ifx_FLASH_COMM1*)0xF8001004u)


#define FLASH0_COMM2 (*(volatile Ifx_FLASH_COMM2*)0xF8001008u)


#define FLASH0_ECCRD (*(volatile Ifx_FLASH_ECCRD*)0xF80020A4u)


#define FLASH0_ECCRP0 (*(volatile Ifx_FLASH_ECCRP*)0xF8002094u)


#define FLASH0_ECCRP1 (*(volatile Ifx_FLASH_ECCRP*)0xF8002098u)


#define FLASH0_ECCW (*(volatile Ifx_FLASH_ECCW*)0xF8002090u)


#define FLASH0_FCON (*(volatile Ifx_FLASH_FCON*)0xF8002014u)


#define FLASH0_FPRO (*(volatile Ifx_FLASH_FPRO*)0xF800201Cu)


#define FLASH0_FSR (*(volatile Ifx_FLASH_FSR*)0xF8002010u)


#define FLASH0_HSMFCON (*(volatile Ifx_FLASH_HSMFCON*)0xF8002204u)


#define FLASH0_HSMFSR (*(volatile Ifx_FLASH_HSMFSR*)0xF8002200u)


#define FLASH0_HSMMARD (*(volatile Ifx_FLASH_HSMMARD*)0xF8002208u)


#define FLASH0_HSMRRAD (*(volatile Ifx_FLASH_HSMRRAD*)0xF8002218u)


#define FLASH0_HSMRRCT (*(volatile Ifx_FLASH_HSMRRCT*)0xF800220Cu)


#define FLASH0_HSMRRD0 (*(volatile Ifx_FLASH_HSMRRD0*)0xF8002210u)


#define FLASH0_HSMRRD1 (*(volatile Ifx_FLASH_HSMRRD1*)0xF8002214u)


#define FLASH0_ID (*(volatile Ifx_FLASH_ID*)0xF8002008u)


#define FLASH0_MARD (*(volatile Ifx_FLASH_MARD*)0xF80020ACu)


#define FLASH0_MARP (*(volatile Ifx_FLASH_MARP*)0xF80020A8u)


#define FLASH0_PROCOND (*(volatile Ifx_FLASH_PROCOND*)0xF8002030u)


#define FLASH0_PROCONDBG (*(volatile Ifx_FLASH_PROCONDBG*)0xF8002058u)


#define FLASH0_PROCONHSM (*(volatile Ifx_FLASH_PROCONHSM*)0xF800205Cu)


#define FLASH0_PROCONHSMCOTP (*(volatile Ifx_FLASH_PROCONHSMCOTP*)0xF8002034u)


#define FLASH0_PROCONOTP0 (*(volatile Ifx_FLASH_PROCONOTP*)0xF8002038u)


#define FLASH0_PROCONOTP1 (*(volatile Ifx_FLASH_PROCONOTP*)0xF800203Cu)


#define FLASH0_PROCONP0 (*(volatile Ifx_FLASH_PROCONP*)0xF8002020u)


#define FLASH0_PROCONP1 (*(volatile Ifx_FLASH_PROCONP*)0xF8002024u)


#define FLASH0_PROCONWOP0 (*(volatile Ifx_FLASH_PROCONWOP*)0xF8002048u)


#define FLASH0_PROCONWOP1 (*(volatile Ifx_FLASH_PROCONWOP*)0xF800204Cu)


#define FLASH0_RDBCFG0_CFG0 (*(volatile Ifx_FLASH_RDB_CFG0*)0xF8002060u)




#define FLASH0_RDBCFG00 (FLASH0_RDBCFG0_CFG0)


#define FLASH0_RDBCFG0_CFG1 (*(volatile Ifx_FLASH_RDB_CFG1*)0xF8002064u)




#define FLASH0_RDBCFG01 (FLASH0_RDBCFG0_CFG1)


#define FLASH0_RDBCFG0_CFG2 (*(volatile Ifx_FLASH_RDB_CFG2*)0xF8002068u)




#define FLASH0_RDBCFG02 (FLASH0_RDBCFG0_CFG2)


#define FLASH0_RDBCFG1_CFG0 (*(volatile Ifx_FLASH_RDB_CFG0*)0xF800206Cu)




#define FLASH0_RDBCFG10 (FLASH0_RDBCFG1_CFG0)


#define FLASH0_RDBCFG1_CFG1 (*(volatile Ifx_FLASH_RDB_CFG1*)0xF8002070u)




#define FLASH0_RDBCFG11 (FLASH0_RDBCFG1_CFG1)


#define FLASH0_RDBCFG1_CFG2 (*(volatile Ifx_FLASH_RDB_CFG2*)0xF8002074u)




#define FLASH0_RDBCFG12 (FLASH0_RDBCFG1_CFG2)


#define FLASH0_RRAD (*(volatile Ifx_FLASH_RRAD*)0xF800214Cu)


#define FLASH0_RRCT (*(volatile Ifx_FLASH_RRCT*)0xF8002140u)


#define FLASH0_RRD0 (*(volatile Ifx_FLASH_RRD0*)0xF8002144u)


#define FLASH0_RRD1 (*(volatile Ifx_FLASH_RRD1*)0xF8002148u)


#define FLASH0_UBAB0_CFG (*(volatile Ifx_FLASH_UBAB_CFG*)0xF80020E4u)




#define FLASH0_UBABCFG0 (FLASH0_UBAB0_CFG)


#define FLASH0_UBAB0_STAT (*(volatile Ifx_FLASH_UBAB_STAT*)0xF80020E8u)




#define FLASH0_UBABSTAT0 (FLASH0_UBAB0_STAT)


#define FLASH0_UBAB0_TOP (*(volatile Ifx_FLASH_UBAB_TOP*)0xF80020ECu)




#define FLASH0_UBABTOP0 (FLASH0_UBAB0_TOP)


#define FLASH0_UBAB1_CFG (*(volatile Ifx_FLASH_UBAB_CFG*)0xF80020F0u)




#define FLASH0_UBABCFG1 (FLASH0_UBAB1_CFG)


#define FLASH0_UBAB1_STAT (*(volatile Ifx_FLASH_UBAB_STAT*)0xF80020F4u)




#define FLASH0_UBABSTAT1 (FLASH0_UBAB1_STAT)


#define FLASH0_UBAB1_TOP (*(volatile Ifx_FLASH_UBAB_TOP*)0xF80020F8u)




#define FLASH0_UBABTOP1 (FLASH0_UBAB1_TOP)
# 42 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_reg.h" 2 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxGpt12_reg.h" 1 3
# 34 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxGpt12_reg.h" 3
#define IFXGPT12_REG_H 1

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxGpt12_regdef.h" 1 3
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxGpt12_regdef.h" 3
#define IFXGPT12_REGDEF_H 1







typedef struct _Ifx_GPT12_ACCEN0_Bits
{
    unsigned int EN0:1;
    unsigned int EN1:1;
    unsigned int EN2:1;
    unsigned int EN3:1;
    unsigned int EN4:1;
    unsigned int EN5:1;
    unsigned int EN6:1;
    unsigned int EN7:1;
    unsigned int EN8:1;
    unsigned int EN9:1;
    unsigned int EN10:1;
    unsigned int EN11:1;
    unsigned int EN12:1;
    unsigned int EN13:1;
    unsigned int EN14:1;
    unsigned int EN15:1;
    unsigned int EN16:1;
    unsigned int EN17:1;
    unsigned int EN18:1;
    unsigned int EN19:1;
    unsigned int EN20:1;
    unsigned int EN21:1;
    unsigned int EN22:1;
    unsigned int EN23:1;
    unsigned int EN24:1;
    unsigned int EN25:1;
    unsigned int EN26:1;
    unsigned int EN27:1;
    unsigned int EN28:1;
    unsigned int EN29:1;
    unsigned int EN30:1;
    unsigned int EN31:1;
} Ifx_GPT12_ACCEN0_Bits;


typedef struct _Ifx_GPT12_ACCEN1_Bits
{
    unsigned int reserved_0:32;
} Ifx_GPT12_ACCEN1_Bits;


typedef struct _Ifx_GPT12_CAPREL_Bits
{
    unsigned int CAPREL:16;
    unsigned int reserved_16:16;
} Ifx_GPT12_CAPREL_Bits;


typedef struct _Ifx_GPT12_CLC_Bits
{
    unsigned int DISR:1;
    unsigned int DISS:1;
    unsigned int reserved_2:1;
    unsigned int EDIS:1;
    unsigned int reserved_4:28;
} Ifx_GPT12_CLC_Bits;


typedef struct _Ifx_GPT12_ID_Bits
{
    unsigned int MODREV:8;
    unsigned int MODTYPE:8;
    unsigned int MODNUMBER:16;
} Ifx_GPT12_ID_Bits;


typedef struct _Ifx_GPT12_KRST0_Bits
{
    unsigned int RST:1;
    unsigned int RSTSTAT:1;
    unsigned int reserved_2:30;
} Ifx_GPT12_KRST0_Bits;


typedef struct _Ifx_GPT12_KRST1_Bits
{
    unsigned int RST:1;
    unsigned int reserved_1:31;
} Ifx_GPT12_KRST1_Bits;


typedef struct _Ifx_GPT12_KRSTCLR_Bits
{
    unsigned int CLR:1;
    unsigned int reserved_1:31;
} Ifx_GPT12_KRSTCLR_Bits;


typedef struct _Ifx_GPT12_OCS_Bits
{
    unsigned int reserved_0:24;
    unsigned int SUS:4;
    unsigned int SUS_P:1;
    unsigned int SUSSTA:1;
    unsigned int reserved_30:2;
} Ifx_GPT12_OCS_Bits;


typedef struct _Ifx_GPT12_PISEL_Bits
{
    unsigned int IST2IN:1;
    unsigned int IST2EUD:1;
    unsigned int IST3IN:2;
    unsigned int IST3EUD:2;
    unsigned int IST4IN:2;
    unsigned int IST4EUD:2;
    unsigned int IST5IN:1;
    unsigned int IST5EUD:1;
    unsigned int IST6IN:1;
    unsigned int IST6EUD:1;
    unsigned int ISCAPIN:2;
    unsigned int reserved_16:16;
} Ifx_GPT12_PISEL_Bits;


typedef struct _Ifx_GPT12_T2_Bits
{
    unsigned int T2:16;
    unsigned int reserved_16:16;
} Ifx_GPT12_T2_Bits;


typedef struct _Ifx_GPT12_T2CON_Bits
{
    unsigned int T2I:3;
    unsigned int T2M:3;
    unsigned int T2R:1;
    unsigned int T2UD:1;
    unsigned int T2UDE:1;
    unsigned int T2RC:1;
    unsigned int reserved_10:2;
    unsigned int T2IRDIS:1;
    unsigned int T2EDGE:1;
    unsigned int T2CHDIR:1;
    unsigned int T2RDIR:1;
    unsigned int reserved_16:16;
} Ifx_GPT12_T2CON_Bits;


typedef struct _Ifx_GPT12_T3_Bits
{
    unsigned int T3:16;
    unsigned int reserved_16:16;
} Ifx_GPT12_T3_Bits;


typedef struct _Ifx_GPT12_T3CON_Bits
{
    unsigned int T3I:3;
    unsigned int T3M:3;
    unsigned int T3R:1;
    unsigned int T3UD:1;
    unsigned int T3UDE:1;
    unsigned int T3OE:1;
    unsigned int T3OTL:1;
    unsigned int BPS1:2;
    unsigned int T3EDGE:1;
    unsigned int T3CHDIR:1;
    unsigned int T3RDIR:1;
    unsigned int reserved_16:16;
} Ifx_GPT12_T3CON_Bits;


typedef struct _Ifx_GPT12_T4_Bits
{
    unsigned int T4:16;
    unsigned int reserved_16:16;
} Ifx_GPT12_T4_Bits;


typedef struct _Ifx_GPT12_T4CON_Bits
{
    unsigned int T4I:3;
    unsigned int T4M:3;
    unsigned int T4R:1;
    unsigned int T4UD:1;
    unsigned int T4UDE:1;
    unsigned int T4RC:1;
    unsigned int CLRT2EN:1;
    unsigned int CLRT3EN:1;
    unsigned int T4IRDIS:1;
    unsigned int T4EDGE:1;
    unsigned int T4CHDIR:1;
    unsigned int T4RDIR:1;
    unsigned int reserved_16:16;
} Ifx_GPT12_T4CON_Bits;


typedef struct _Ifx_GPT12_T5_Bits
{
    unsigned int T5:16;
    unsigned int reserved_16:16;
} Ifx_GPT12_T5_Bits;


typedef struct _Ifx_GPT12_T5CON_Bits
{
    unsigned int T5I:3;
    unsigned int T5M:3;
    unsigned int T5R:1;
    unsigned int T5UD:1;
    unsigned int T5UDE:1;
    unsigned int T5RC:1;
    unsigned int CT3:1;
    unsigned int reserved_11:1;
    unsigned int CI:2;
    unsigned int T5CLR:1;
    unsigned int T5SC:1;
    unsigned int reserved_16:16;
} Ifx_GPT12_T5CON_Bits;


typedef struct _Ifx_GPT12_T6_Bits
{
    unsigned int T6:16;
    unsigned int reserved_16:16;
} Ifx_GPT12_T6_Bits;


typedef struct _Ifx_GPT12_T6CON_Bits
{
    unsigned int T6I:3;
    unsigned int T6M:3;
    unsigned int T6R:1;
    unsigned int T6UD:1;
    unsigned int T6UDE:1;
    unsigned int T6OE:1;
    unsigned int T6OTL:1;
    unsigned int BPS2:2;
    unsigned int reserved_13:1;
    unsigned int T6CLR:1;
    unsigned int T6SR:1;
    unsigned int reserved_16:16;
} Ifx_GPT12_T6CON_Bits;







typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GPT12_ACCEN0_Bits B;
} Ifx_GPT12_ACCEN0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GPT12_ACCEN1_Bits B;
} Ifx_GPT12_ACCEN1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GPT12_CAPREL_Bits B;
} Ifx_GPT12_CAPREL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GPT12_CLC_Bits B;
} Ifx_GPT12_CLC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GPT12_ID_Bits B;
} Ifx_GPT12_ID;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GPT12_KRST0_Bits B;
} Ifx_GPT12_KRST0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GPT12_KRST1_Bits B;
} Ifx_GPT12_KRST1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GPT12_KRSTCLR_Bits B;
} Ifx_GPT12_KRSTCLR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GPT12_OCS_Bits B;
} Ifx_GPT12_OCS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GPT12_PISEL_Bits B;
} Ifx_GPT12_PISEL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GPT12_T2_Bits B;
} Ifx_GPT12_T2;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GPT12_T2CON_Bits B;
} Ifx_GPT12_T2CON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GPT12_T3_Bits B;
} Ifx_GPT12_T3;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GPT12_T3CON_Bits B;
} Ifx_GPT12_T3CON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GPT12_T4_Bits B;
} Ifx_GPT12_T4;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GPT12_T4CON_Bits B;
} Ifx_GPT12_T4CON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GPT12_T5_Bits B;
} Ifx_GPT12_T5;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GPT12_T5CON_Bits B;
} Ifx_GPT12_T5CON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GPT12_T6_Bits B;
} Ifx_GPT12_T6;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GPT12_T6CON_Bits B;
} Ifx_GPT12_T6CON;
# 456 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxGpt12_regdef.h" 3
typedef volatile struct _Ifx_GPT12
{
    Ifx_GPT12_CLC CLC;
    Ifx_GPT12_PISEL PISEL;
    Ifx_GPT12_ID ID;
    unsigned char reserved_C[4];
    Ifx_GPT12_T2CON T2CON;
    Ifx_GPT12_T3CON T3CON;
    Ifx_GPT12_T4CON T4CON;
    Ifx_GPT12_T5CON T5CON;
    Ifx_GPT12_T6CON T6CON;
    unsigned char reserved_24[12];
    Ifx_GPT12_CAPREL CAPREL;
    Ifx_GPT12_T2 T2;
    Ifx_GPT12_T3 T3;
    Ifx_GPT12_T4 T4;
    Ifx_GPT12_T5 T5;
    Ifx_GPT12_T6 T6;
    unsigned char reserved_48[160];
    Ifx_GPT12_OCS OCS;
    Ifx_GPT12_KRSTCLR KRSTCLR;
    Ifx_GPT12_KRST1 KRST1;
    Ifx_GPT12_KRST0 KRST0;
    Ifx_GPT12_ACCEN1 ACCEN1;
    Ifx_GPT12_ACCEN0 ACCEN0;
} Ifx_GPT12;
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxGpt12_reg.h" 2 3





#define MODULE_GPT120 (*(Ifx_GPT12*)0xF0002E00u)







#define GPT120_ACCEN0 (*(volatile Ifx_GPT12_ACCEN0*)0xF0002EFCu)


#define GPT120_ACCEN1 (*(volatile Ifx_GPT12_ACCEN1*)0xF0002EF8u)


#define GPT120_CAPREL (*(volatile Ifx_GPT12_CAPREL*)0xF0002E30u)


#define GPT120_CLC (*(volatile Ifx_GPT12_CLC*)0xF0002E00u)


#define GPT120_ID (*(volatile Ifx_GPT12_ID*)0xF0002E08u)


#define GPT120_KRST0 (*(volatile Ifx_GPT12_KRST0*)0xF0002EF4u)


#define GPT120_KRST1 (*(volatile Ifx_GPT12_KRST1*)0xF0002EF0u)


#define GPT120_KRSTCLR (*(volatile Ifx_GPT12_KRSTCLR*)0xF0002EECu)


#define GPT120_OCS (*(volatile Ifx_GPT12_OCS*)0xF0002EE8u)


#define GPT120_PISEL (*(volatile Ifx_GPT12_PISEL*)0xF0002E04u)


#define GPT120_T2 (*(volatile Ifx_GPT12_T2*)0xF0002E34u)


#define GPT120_T2CON (*(volatile Ifx_GPT12_T2CON*)0xF0002E10u)


#define GPT120_T3 (*(volatile Ifx_GPT12_T3*)0xF0002E38u)


#define GPT120_T3CON (*(volatile Ifx_GPT12_T3CON*)0xF0002E14u)


#define GPT120_T4 (*(volatile Ifx_GPT12_T4*)0xF0002E3Cu)


#define GPT120_T4CON (*(volatile Ifx_GPT12_T4CON*)0xF0002E18u)


#define GPT120_T5 (*(volatile Ifx_GPT12_T5*)0xF0002E40u)


#define GPT120_T5CON (*(volatile Ifx_GPT12_T5CON*)0xF0002E1Cu)


#define GPT120_T6 (*(volatile Ifx_GPT12_T6*)0xF0002E44u)


#define GPT120_T6CON (*(volatile Ifx_GPT12_T6CON*)0xF0002E20u)
# 43 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_reg.h" 2 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxGtm_reg.h" 1 3
# 34 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxGtm_reg.h" 3
#define IFXGTM_REG_H 1

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxGtm_regdef.h" 1 3
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxGtm_regdef.h" 3
#define IFXGTM_REGDEF_H 1
# 49 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxGtm_regdef.h" 3
typedef struct _Ifx_GTM_ACCEN0_Bits
{
    volatile unsigned int EN0:1;
    volatile unsigned int EN1:1;
    volatile unsigned int EN2:1;
    volatile unsigned int EN3:1;
    volatile unsigned int EN4:1;
    volatile unsigned int EN5:1;
    volatile unsigned int EN6:1;
    volatile unsigned int EN7:1;
    volatile unsigned int EN8:1;
    volatile unsigned int EN9:1;
    volatile unsigned int EN10:1;
    volatile unsigned int EN11:1;
    volatile unsigned int EN12:1;
    volatile unsigned int EN13:1;
    volatile unsigned int EN14:1;
    volatile unsigned int EN15:1;
    volatile unsigned int EN16:1;
    volatile unsigned int EN17:1;
    volatile unsigned int EN18:1;
    volatile unsigned int EN19:1;
    volatile unsigned int EN20:1;
    volatile unsigned int EN21:1;
    volatile unsigned int EN22:1;
    volatile unsigned int EN23:1;
    volatile unsigned int EN24:1;
    volatile unsigned int EN25:1;
    volatile unsigned int EN26:1;
    volatile unsigned int EN27:1;
    volatile unsigned int EN28:1;
    volatile unsigned int EN29:1;
    volatile unsigned int EN30:1;
    volatile unsigned int EN31:1;
} Ifx_GTM_ACCEN0_Bits;


typedef struct _Ifx_GTM_ACCEN1_Bits
{
    volatile unsigned int reserved_0:32;
} Ifx_GTM_ACCEN1_Bits;


typedef struct _Ifx_GTM_ADCTRIG0OUT0_Bits
{
    volatile unsigned int SEL0:4;
    volatile unsigned int SEL1:4;
    volatile unsigned int SEL2:4;
    volatile unsigned int SEL3:4;
    volatile unsigned int SEL4:4;
    volatile unsigned int SEL5:4;
    volatile unsigned int SEL6:4;
    volatile unsigned int SEL7:4;
} Ifx_GTM_ADCTRIG0OUT0_Bits;


typedef struct _Ifx_GTM_ADCTRIG0OUT1_Bits
{
    volatile unsigned int SEL0:4;
    volatile unsigned int reserved_4:28;
} Ifx_GTM_ADCTRIG0OUT1_Bits;


typedef struct _Ifx_GTM_ADCTRIG1OUT0_Bits
{
    volatile unsigned int SEL0:4;
    volatile unsigned int SEL1:4;
    volatile unsigned int SEL2:4;
    volatile unsigned int SEL3:4;
    volatile unsigned int SEL4:4;
    volatile unsigned int SEL5:4;
    volatile unsigned int SEL6:4;
    volatile unsigned int SEL7:4;
} Ifx_GTM_ADCTRIG1OUT0_Bits;


typedef struct _Ifx_GTM_ADCTRIG1OUT1_Bits
{
    volatile unsigned int SEL0:4;
    volatile unsigned int reserved_4:28;
} Ifx_GTM_ADCTRIG1OUT1_Bits;


typedef struct _Ifx_GTM_AEI_ADDR_XPT_Bits
{
    volatile unsigned int TO_ADDR:20;
    volatile unsigned int TO_W1R0:1;
    volatile unsigned int reserved_21:11;
} Ifx_GTM_AEI_ADDR_XPT_Bits;


typedef struct _Ifx_GTM_AFD_CH_BUF_ACC_Bits
{
    volatile unsigned int DATA:29;
    volatile unsigned int reserved_29:3;
} Ifx_GTM_AFD_CH_BUF_ACC_Bits;


typedef struct _Ifx_GTM_ARU_ARU_ACCESS_Bits
{
    volatile unsigned int ADDR:9;
    volatile unsigned int reserved_9:3;
    volatile unsigned int RREQ:1;
    volatile unsigned int WREQ:1;
    volatile unsigned int reserved_14:18;
} Ifx_GTM_ARU_ARU_ACCESS_Bits;


typedef struct _Ifx_GTM_ARU_DATA_H_Bits
{
    volatile unsigned int DATA:29;
    volatile unsigned int reserved_29:3;
} Ifx_GTM_ARU_DATA_H_Bits;


typedef struct _Ifx_GTM_ARU_DATA_L_Bits
{
    volatile unsigned int DATA:29;
    volatile unsigned int reserved_29:3;
} Ifx_GTM_ARU_DATA_L_Bits;


typedef struct _Ifx_GTM_ARU_DBG_ACCESS0_Bits
{
    volatile unsigned int ADDR:9;
    volatile unsigned int reserved_9:23;
} Ifx_GTM_ARU_DBG_ACCESS0_Bits;


typedef struct _Ifx_GTM_ARU_DBG_ACCESS1_Bits
{
    volatile unsigned int ADDR:9;
    volatile unsigned int reserved_9:23;
} Ifx_GTM_ARU_DBG_ACCESS1_Bits;


typedef struct _Ifx_GTM_ARU_DBG_DATA0_H_Bits
{
    volatile unsigned int DATA:29;
    volatile unsigned int reserved_29:3;
} Ifx_GTM_ARU_DBG_DATA0_H_Bits;


typedef struct _Ifx_GTM_ARU_DBG_DATA0_L_Bits
{
    volatile unsigned int DATA:29;
    volatile unsigned int reserved_29:3;
} Ifx_GTM_ARU_DBG_DATA0_L_Bits;


typedef struct _Ifx_GTM_ARU_DBG_DATA1_H_Bits
{
    volatile unsigned int DATA:29;
    volatile unsigned int reserved_29:3;
} Ifx_GTM_ARU_DBG_DATA1_H_Bits;


typedef struct _Ifx_GTM_ARU_DBG_DATA1_L_Bits
{
    volatile unsigned int DATA:29;
    volatile unsigned int reserved_29:3;
} Ifx_GTM_ARU_DBG_DATA1_L_Bits;


typedef struct _Ifx_GTM_ARU_IRQ_EN_Bits
{
    volatile unsigned int NEW_DATA0_IRQ_EN:1;
    volatile unsigned int NEW_DATA1_IRQ_EN:1;
    volatile unsigned int ACC_ACK_IRQ_EN:1;
    volatile unsigned int reserved_3:29;
} Ifx_GTM_ARU_IRQ_EN_Bits;


typedef struct _Ifx_GTM_ARU_IRQ_FORCINT_Bits
{
    volatile unsigned int TRG_NEW_DATA0:1;
    volatile unsigned int TRG_NEW_DATA:1;
    volatile unsigned int TRG_ACC_ACK:1;
    volatile unsigned int reserved_3:29;
} Ifx_GTM_ARU_IRQ_FORCINT_Bits;


typedef struct _Ifx_GTM_ARU_IRQ_MODE_Bits
{
    volatile unsigned int IRQ_MODE:2;
    volatile unsigned int reserved_2:30;
} Ifx_GTM_ARU_IRQ_MODE_Bits;


typedef struct _Ifx_GTM_ARU_IRQ_NOTIFY_Bits
{
    volatile unsigned int NEW_DATA0:1;
    volatile unsigned int NEW_DATA1:1;
    volatile unsigned int ACC_ACK:1;
    volatile unsigned int reserved_3:29;
} Ifx_GTM_ARU_IRQ_NOTIFY_Bits;


typedef struct _Ifx_GTM_ATOM_AGC_ACT_TB_Bits
{
    volatile unsigned int ACT_TB:24;
    volatile unsigned int TB_TRIG:1;
    volatile unsigned int TBU_SEL:2;
    volatile unsigned int reserved_27:5;
} Ifx_GTM_ATOM_AGC_ACT_TB_Bits;


typedef struct _Ifx_GTM_ATOM_AGC_ENDIS_CTRL_Bits
{
    volatile unsigned int ENDIS_CTRL0:2;
    volatile unsigned int ENDIS_CTRL1:2;
    volatile unsigned int ENDIS_CTRL2:2;
    volatile unsigned int ENDIS_CTRL3:2;
    volatile unsigned int ENDIS_CTRL4:2;
    volatile unsigned int ENDIS_CTRL5:2;
    volatile unsigned int ENDIS_CTRL6:2;
    volatile unsigned int ENDIS_CTRL7:2;
    volatile unsigned int reserved_16:16;
} Ifx_GTM_ATOM_AGC_ENDIS_CTRL_Bits;


typedef struct _Ifx_GTM_ATOM_AGC_ENDIS_STAT_Bits
{
    volatile unsigned int ENDIS_STAT0:2;
    volatile unsigned int ENDIS_STAT1:2;
    volatile unsigned int ENDIS_STAT2:2;
    volatile unsigned int ENDIS_STAT3:2;
    volatile unsigned int ENDIS_STAT4:2;
    volatile unsigned int ENDIS_STAT5:2;
    volatile unsigned int ENDIS_STAT6:2;
    volatile unsigned int ENDIS_STAT7:2;
    volatile unsigned int reserved_16:16;
} Ifx_GTM_ATOM_AGC_ENDIS_STAT_Bits;


typedef struct _Ifx_GTM_ATOM_AGC_FUPD_CTRL_Bits
{
    volatile unsigned int FUPD_CTRL0:2;
    volatile unsigned int FUPD_CTRL1:2;
    volatile unsigned int FUPD_CTRL2:2;
    volatile unsigned int FUPD_CTRL3:2;
    volatile unsigned int FUPD_CTRL4:2;
    volatile unsigned int FUPD_CTRL5:2;
    volatile unsigned int FUPD_CTRL6:2;
    volatile unsigned int FUPD_CTRL7:2;
    volatile unsigned int RSTCN0_CH0:2;
    volatile unsigned int RSTCN0_CH1:2;
    volatile unsigned int RSTCN0_CH2:2;
    volatile unsigned int RSTCN0_CH3:2;
    volatile unsigned int RSTCN0_CH4:2;
    volatile unsigned int RSTCN0_CH5:2;
    volatile unsigned int RSTCN0_CH6:2;
    volatile unsigned int RSTCN0_CH7:2;
} Ifx_GTM_ATOM_AGC_FUPD_CTRL_Bits;


typedef struct _Ifx_GTM_ATOM_AGC_GLB_CTRL_Bits
{
    volatile unsigned int HOST_TRIG:1;
    volatile unsigned int reserved_1:7;
    volatile unsigned int RST_CH0:1;
    volatile unsigned int RST_CH1:1;
    volatile unsigned int RST_CH2:1;
    volatile unsigned int RST_CH3:1;
    volatile unsigned int RST_CH4:1;
    volatile unsigned int RST_CH5:1;
    volatile unsigned int RST_CH6:1;
    volatile unsigned int RST_CH7:1;
    volatile unsigned int UPEN_CTRL0:2;
    volatile unsigned int UPEN_CTRL1:2;
    volatile unsigned int UPEN_CTRL2:2;
    volatile unsigned int UPEN_CTRL3:2;
    volatile unsigned int UPEN_CTRL4:2;
    volatile unsigned int UPEN_CTRL5:2;
    volatile unsigned int UPEN_CTRL6:2;
    volatile unsigned int UPEN_CTRL7:2;
} Ifx_GTM_ATOM_AGC_GLB_CTRL_Bits;


typedef struct _Ifx_GTM_ATOM_AGC_INT_TRIG_Bits
{
    volatile unsigned int INT_TRIG0:2;
    volatile unsigned int INT_TRIG1:2;
    volatile unsigned int INT_TRIG2:2;
    volatile unsigned int INT_TRIG3:2;
    volatile unsigned int INT_TRIG4:2;
    volatile unsigned int INT_TRIG5:2;
    volatile unsigned int INT_TRIG6:2;
    volatile unsigned int INT_TRIG7:2;
    volatile unsigned int reserved_16:16;
} Ifx_GTM_ATOM_AGC_INT_TRIG_Bits;


typedef struct _Ifx_GTM_ATOM_AGC_OUTEN_CTRL_Bits
{
    volatile unsigned int OUTEN_CTRL0:2;
    volatile unsigned int OUTEN_CTRL1:2;
    volatile unsigned int OUTEN_CTRL2:2;
    volatile unsigned int OUTEN_CTRL3:2;
    volatile unsigned int OUTEN_CTRL4:2;
    volatile unsigned int OUTEN_CTRL5:2;
    volatile unsigned int OUTEN_CTRL6:2;
    volatile unsigned int OUTEN_CTRL7:2;
    volatile unsigned int reserved_16:16;
} Ifx_GTM_ATOM_AGC_OUTEN_CTRL_Bits;


typedef struct _Ifx_GTM_ATOM_AGC_OUTEN_STAT_Bits
{
    volatile unsigned int OUTEN_STAT0:2;
    volatile unsigned int OUTEN_STAT1:2;
    volatile unsigned int OUTEN_STAT2:2;
    volatile unsigned int OUTEN_STAT3:2;
    volatile unsigned int OUTEN_STAT4:2;
    volatile unsigned int OUTEN_STAT5:2;
    volatile unsigned int OUTEN_STAT6:2;
    volatile unsigned int OUTEN_STAT7:2;
    volatile unsigned int reserved_16:16;
} Ifx_GTM_ATOM_AGC_OUTEN_STAT_Bits;


typedef struct _Ifx_GTM_ATOM_CH_CM0_Bits
{
    volatile unsigned int CM0:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_ATOM_CH_CM0_Bits;


typedef struct _Ifx_GTM_ATOM_CH_CM1_Bits
{
    volatile unsigned int CM1:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_ATOM_CH_CM1_Bits;


typedef struct _Ifx_GTM_ATOM_CH_CN0_Bits
{
    volatile unsigned int CN0:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_ATOM_CH_CN0_Bits;


typedef struct _Ifx_GTM_ATOM_CH_CTRL_Bits
{
    volatile unsigned int MODE:2;
    volatile unsigned int TB12_SEL:1;
    volatile unsigned int ARU_EN:1;
    volatile unsigned int ACB:5;
    volatile unsigned int CMP_CTRL:1;
    volatile unsigned int reserved_10:1;
    volatile unsigned int SL:1;
    volatile unsigned int CLK_SRC:3;
    volatile unsigned int reserved_15:1;
    volatile unsigned int WR_REQ:1;
    volatile unsigned int reserved_17:3;
    volatile unsigned int RST_CCU0:1;
    volatile unsigned int reserved_21:3;
    volatile unsigned int TRIGOUT:1;
    volatile unsigned int SLA:1;
    volatile unsigned int OSM:1;
    volatile unsigned int ABM:1;
    volatile unsigned int reserved_28:4;
} Ifx_GTM_ATOM_CH_CTRL_Bits;


typedef struct _Ifx_GTM_ATOM_CH_IRQ_EN_Bits
{
    volatile unsigned int CCU0TC_IRQ_EN:1;
    volatile unsigned int CCU1TC_IRQ_EN:1;
    volatile unsigned int reserved_2:30;
} Ifx_GTM_ATOM_CH_IRQ_EN_Bits;


typedef struct _Ifx_GTM_ATOM_CH_IRQ_FORCINT_Bits
{
    volatile unsigned int TRG_CCU0TC:1;
    volatile unsigned int TRG_CCU1TC:1;
    volatile unsigned int reserved_2:30;
} Ifx_GTM_ATOM_CH_IRQ_FORCINT_Bits;


typedef struct _Ifx_GTM_ATOM_CH_IRQ_MODE_Bits
{
    volatile unsigned int IRQ_MODE:2;
    volatile unsigned int reserved_2:30;
} Ifx_GTM_ATOM_CH_IRQ_MODE_Bits;


typedef struct _Ifx_GTM_ATOM_CH_IRQ_NOTIFY_Bits
{
    volatile unsigned int CCU0TC:1;
    volatile unsigned int CCU1TC:1;
    volatile unsigned int reserved_2:30;
} Ifx_GTM_ATOM_CH_IRQ_NOTIFY_Bits;


typedef struct _Ifx_GTM_ATOM_CH_RDADDR_Bits
{
    volatile unsigned int RDADDR0:9;
    volatile unsigned int reserved_9:7;
    volatile unsigned int RDADDR1:9;
    volatile unsigned int reserved_25:7;
} Ifx_GTM_ATOM_CH_RDADDR_Bits;


typedef struct _Ifx_GTM_ATOM_CH_SOMC_Bits
{
    volatile unsigned int MODE:2;
    volatile unsigned int TB12_SEL:1;
    volatile unsigned int ARU_EN:1;
    volatile unsigned int ACB10:2;
    volatile unsigned int ACB42:3;
    volatile unsigned int CMP_CTRL:1;
    volatile unsigned int reserved_10:1;
    volatile unsigned int SL:1;
    volatile unsigned int reserved_12:4;
    volatile unsigned int WR_REQ:1;
    volatile unsigned int reserved_17:7;
    volatile unsigned int TRIGOUT:1;
    volatile unsigned int SLA:1;
    volatile unsigned int reserved_26:1;
    volatile unsigned int ABM:1;
    volatile unsigned int reserved_28:4;
} Ifx_GTM_ATOM_CH_SOMC_Bits;


typedef struct _Ifx_GTM_ATOM_CH_SOMI_Bits
{
    volatile unsigned int MODE:2;
    volatile unsigned int reserved_2:1;
    volatile unsigned int ARU_EN:1;
    volatile unsigned int ACB0:1;
    volatile unsigned int reserved_5:6;
    volatile unsigned int SL:1;
    volatile unsigned int reserved_12:20;
} Ifx_GTM_ATOM_CH_SOMI_Bits;


typedef struct _Ifx_GTM_ATOM_CH_SOMP_Bits
{
    volatile unsigned int MODE:2;
    volatile unsigned int reserved_2:1;
    volatile unsigned int ARU_EN:1;
    volatile unsigned int ADL:2;
    volatile unsigned int reserved_6:5;
    volatile unsigned int SL:1;
    volatile unsigned int CLK_SRC_SR:3;
    volatile unsigned int reserved_15:5;
    volatile unsigned int RST_CCU0:1;
    volatile unsigned int reserved_21:3;
    volatile unsigned int TRIGOUT:1;
    volatile unsigned int reserved_25:1;
    volatile unsigned int OSM:1;
    volatile unsigned int reserved_27:5;
} Ifx_GTM_ATOM_CH_SOMP_Bits;


typedef struct _Ifx_GTM_ATOM_CH_SOMS_Bits
{
    volatile unsigned int MODE:2;
    volatile unsigned int reserved_2:1;
    volatile unsigned int ARU_EN:1;
    volatile unsigned int ACB0:1;
    volatile unsigned int reserved_5:6;
    volatile unsigned int SL:1;
    volatile unsigned int CLK_SRC:3;
    volatile unsigned int reserved_15:11;
    volatile unsigned int OSM:1;
    volatile unsigned int reserved_27:5;
} Ifx_GTM_ATOM_CH_SOMS_Bits;


typedef struct _Ifx_GTM_ATOM_CH_SR0_Bits
{
    volatile unsigned int SR0:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_ATOM_CH_SR0_Bits;


typedef struct _Ifx_GTM_ATOM_CH_SR1_Bits
{
    volatile unsigned int SR1:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_ATOM_CH_SR1_Bits;


typedef struct _Ifx_GTM_ATOM_CH_STAT_Bits
{
    volatile unsigned int OL:1;
    volatile unsigned int reserved_1:15;
    volatile unsigned int ACBI:5;
    volatile unsigned int DV:1;
    volatile unsigned int WRF:1;
    volatile unsigned int reserved_23:1;
    volatile unsigned int ACBO:5;
    volatile unsigned int reserved_29:3;
} Ifx_GTM_ATOM_CH_STAT_Bits;


typedef struct _Ifx_GTM_BRC_EIRQ_EN_Bits
{
    volatile unsigned int DEST_ERR_EN:1;
    volatile unsigned int DID_EN0:1;
    volatile unsigned int DID_EN1:1;
    volatile unsigned int DID_EN2:1;
    volatile unsigned int DID_EN3:1;
    volatile unsigned int DID_EN4:1;
    volatile unsigned int DID_EN5:1;
    volatile unsigned int DID_EN6:1;
    volatile unsigned int DID_EN7:1;
    volatile unsigned int DID_EN8:1;
    volatile unsigned int DID_EN9:1;
    volatile unsigned int DID_EN10:1;
    volatile unsigned int DID_EN11:1;
    volatile unsigned int reserved_13:19;
} Ifx_GTM_BRC_EIRQ_EN_Bits;


typedef struct _Ifx_GTM_BRC_IRQ_EN_Bits
{
    volatile unsigned int DEST_ERR_EN:1;
    volatile unsigned int DID_EN0:1;
    volatile unsigned int DID_EN1:1;
    volatile unsigned int DID_EN2:1;
    volatile unsigned int DID_EN3:1;
    volatile unsigned int DID_EN4:1;
    volatile unsigned int DID_EN5:1;
    volatile unsigned int DID_EN6:1;
    volatile unsigned int DID_EN7:1;
    volatile unsigned int DID_EN8:1;
    volatile unsigned int DID_EN9:1;
    volatile unsigned int DID_EN10:1;
    volatile unsigned int DID_EN11:1;
    volatile unsigned int reserved_13:19;
} Ifx_GTM_BRC_IRQ_EN_Bits;


typedef struct _Ifx_GTM_BRC_IRQ_FORCINT_Bits
{
    volatile unsigned int TRG_DEST_ERR:1;
    volatile unsigned int TRG_DID0:1;
    volatile unsigned int TRG_DID1:1;
    volatile unsigned int TRG_DID2:1;
    volatile unsigned int TRG_DID3:1;
    volatile unsigned int TRG_DID4:1;
    volatile unsigned int TRG_DID5:1;
    volatile unsigned int TRG_DID6:1;
    volatile unsigned int TRG_DID7:1;
    volatile unsigned int TRG_DID8:1;
    volatile unsigned int TRG_DID9:1;
    volatile unsigned int TRG_DID10:1;
    volatile unsigned int TRG_DID11:1;
    volatile unsigned int reserved_13:19;
} Ifx_GTM_BRC_IRQ_FORCINT_Bits;


typedef struct _Ifx_GTM_BRC_IRQ_MODE_Bits
{
    volatile unsigned int IRQ_MODE:2;
    volatile unsigned int reserved_2:30;
} Ifx_GTM_BRC_IRQ_MODE_Bits;


typedef struct _Ifx_GTM_BRC_IRQ_NOTIFY_Bits
{
    volatile unsigned int DEST_ERR:1;
    volatile unsigned int DID0:1;
    volatile unsigned int DID1:1;
    volatile unsigned int DID2:1;
    volatile unsigned int DID3:1;
    volatile unsigned int DID4:1;
    volatile unsigned int DID5:1;
    volatile unsigned int DID6:1;
    volatile unsigned int DID7:1;
    volatile unsigned int DID8:1;
    volatile unsigned int DID9:1;
    volatile unsigned int DID10:1;
    volatile unsigned int DID11:1;
    volatile unsigned int reserved_13:19;
} Ifx_GTM_BRC_IRQ_NOTIFY_Bits;


typedef struct _Ifx_GTM_BRC_RST_Bits
{
    volatile unsigned int RST:1;
    volatile unsigned int reserved_1:31;
} Ifx_GTM_BRC_RST_Bits;


typedef struct _Ifx_GTM_BRC_SRC0_ADDR_Bits
{
    volatile unsigned int ADDR:9;
    volatile unsigned int reserved_9:3;
    volatile unsigned int BRC_MODE:1;
    volatile unsigned int reserved_13:19;
} Ifx_GTM_BRC_SRC0_ADDR_Bits;


typedef struct _Ifx_GTM_BRC_SRC0_DEST_Bits
{
    volatile unsigned int EN_DEST0:1;
    volatile unsigned int EN_DEST1:1;
    volatile unsigned int EN_DEST2:1;
    volatile unsigned int EN_DEST3:1;
    volatile unsigned int EN_DEST4:1;
    volatile unsigned int EN_DEST5:1;
    volatile unsigned int EN_DEST6:1;
    volatile unsigned int EN_DEST7:1;
    volatile unsigned int EN_DEST8:1;
    volatile unsigned int EN_DEST9:1;
    volatile unsigned int EN_DEST10:1;
    volatile unsigned int EN_DEST11:1;
    volatile unsigned int EN_DEST12:1;
    volatile unsigned int EN_DEST13:1;
    volatile unsigned int EN_DEST14:1;
    volatile unsigned int EN_DEST15:1;
    volatile unsigned int EN_DEST16:1;
    volatile unsigned int EN_DEST17:1;
    volatile unsigned int EN_DEST18:1;
    volatile unsigned int EN_DEST19:1;
    volatile unsigned int EN_DEST20:1;
    volatile unsigned int EN_DEST21:1;
    volatile unsigned int EN_TRASHBIN:1;
    volatile unsigned int reserved_23:9;
} Ifx_GTM_BRC_SRC0_DEST_Bits;


typedef struct _Ifx_GTM_BRC_SRC10_ADDR_Bits
{
    volatile unsigned int ADDR:9;
    volatile unsigned int reserved_9:3;
    volatile unsigned int BRC_MODE:1;
    volatile unsigned int reserved_13:19;
} Ifx_GTM_BRC_SRC10_ADDR_Bits;


typedef struct _Ifx_GTM_BRC_SRC10_DEST_Bits
{
    volatile unsigned int EN_DEST0:1;
    volatile unsigned int EN_DEST1:1;
    volatile unsigned int EN_DEST2:1;
    volatile unsigned int EN_DEST3:1;
    volatile unsigned int EN_DEST4:1;
    volatile unsigned int EN_DEST5:1;
    volatile unsigned int EN_DEST6:1;
    volatile unsigned int EN_DEST7:1;
    volatile unsigned int EN_DEST8:1;
    volatile unsigned int EN_DEST9:1;
    volatile unsigned int EN_DEST10:1;
    volatile unsigned int EN_DEST11:1;
    volatile unsigned int EN_DEST12:1;
    volatile unsigned int EN_DEST13:1;
    volatile unsigned int EN_DEST14:1;
    volatile unsigned int EN_DEST15:1;
    volatile unsigned int EN_DEST16:1;
    volatile unsigned int EN_DEST17:1;
    volatile unsigned int EN_DEST18:1;
    volatile unsigned int EN_DEST19:1;
    volatile unsigned int EN_DEST20:1;
    volatile unsigned int EN_DEST21:1;
    volatile unsigned int EN_TRASHBIN:1;
    volatile unsigned int reserved_23:9;
} Ifx_GTM_BRC_SRC10_DEST_Bits;


typedef struct _Ifx_GTM_BRC_SRC11_ADDR_Bits
{
    volatile unsigned int ADDR:9;
    volatile unsigned int reserved_9:3;
    volatile unsigned int BRC_MODE:1;
    volatile unsigned int reserved_13:19;
} Ifx_GTM_BRC_SRC11_ADDR_Bits;


typedef struct _Ifx_GTM_BRC_SRC11_DEST_Bits
{
    volatile unsigned int EN_DEST0:1;
    volatile unsigned int EN_DEST1:1;
    volatile unsigned int EN_DEST2:1;
    volatile unsigned int EN_DEST3:1;
    volatile unsigned int EN_DEST4:1;
    volatile unsigned int EN_DEST5:1;
    volatile unsigned int EN_DEST6:1;
    volatile unsigned int EN_DEST7:1;
    volatile unsigned int EN_DEST8:1;
    volatile unsigned int EN_DEST9:1;
    volatile unsigned int EN_DEST10:1;
    volatile unsigned int EN_DEST11:1;
    volatile unsigned int EN_DEST12:1;
    volatile unsigned int EN_DEST13:1;
    volatile unsigned int EN_DEST14:1;
    volatile unsigned int EN_DEST15:1;
    volatile unsigned int EN_DEST16:1;
    volatile unsigned int EN_DEST17:1;
    volatile unsigned int EN_DEST18:1;
    volatile unsigned int EN_DEST19:1;
    volatile unsigned int EN_DEST20:1;
    volatile unsigned int EN_DEST21:1;
    volatile unsigned int EN_TRASHBIN:1;
    volatile unsigned int reserved_23:9;
} Ifx_GTM_BRC_SRC11_DEST_Bits;


typedef struct _Ifx_GTM_BRC_SRC1_ADDR_Bits
{
    volatile unsigned int ADDR:9;
    volatile unsigned int reserved_9:3;
    volatile unsigned int BRC_MODE:1;
    volatile unsigned int reserved_13:19;
} Ifx_GTM_BRC_SRC1_ADDR_Bits;


typedef struct _Ifx_GTM_BRC_SRC1_DEST_Bits
{
    volatile unsigned int EN_DEST0:1;
    volatile unsigned int EN_DEST1:1;
    volatile unsigned int EN_DEST2:1;
    volatile unsigned int EN_DEST3:1;
    volatile unsigned int EN_DEST4:1;
    volatile unsigned int EN_DEST5:1;
    volatile unsigned int EN_DEST6:1;
    volatile unsigned int EN_DEST7:1;
    volatile unsigned int EN_DEST8:1;
    volatile unsigned int EN_DEST9:1;
    volatile unsigned int EN_DEST10:1;
    volatile unsigned int EN_DEST11:1;
    volatile unsigned int EN_DEST12:1;
    volatile unsigned int EN_DEST13:1;
    volatile unsigned int EN_DEST14:1;
    volatile unsigned int EN_DEST15:1;
    volatile unsigned int EN_DEST16:1;
    volatile unsigned int EN_DEST17:1;
    volatile unsigned int EN_DEST18:1;
    volatile unsigned int EN_DEST19:1;
    volatile unsigned int EN_DEST20:1;
    volatile unsigned int EN_DEST21:1;
    volatile unsigned int EN_TRASHBIN:1;
    volatile unsigned int reserved_23:9;
} Ifx_GTM_BRC_SRC1_DEST_Bits;


typedef struct _Ifx_GTM_BRC_SRC2_ADDR_Bits
{
    volatile unsigned int ADDR:9;
    volatile unsigned int reserved_9:3;
    volatile unsigned int BRC_MODE:1;
    volatile unsigned int reserved_13:19;
} Ifx_GTM_BRC_SRC2_ADDR_Bits;


typedef struct _Ifx_GTM_BRC_SRC2_DEST_Bits
{
    volatile unsigned int EN_DEST0:1;
    volatile unsigned int EN_DEST1:1;
    volatile unsigned int EN_DEST2:1;
    volatile unsigned int EN_DEST3:1;
    volatile unsigned int EN_DEST4:1;
    volatile unsigned int EN_DEST5:1;
    volatile unsigned int EN_DEST6:1;
    volatile unsigned int EN_DEST7:1;
    volatile unsigned int EN_DEST8:1;
    volatile unsigned int EN_DEST9:1;
    volatile unsigned int EN_DEST10:1;
    volatile unsigned int EN_DEST11:1;
    volatile unsigned int EN_DEST12:1;
    volatile unsigned int EN_DEST13:1;
    volatile unsigned int EN_DEST14:1;
    volatile unsigned int EN_DEST15:1;
    volatile unsigned int EN_DEST16:1;
    volatile unsigned int EN_DEST17:1;
    volatile unsigned int EN_DEST18:1;
    volatile unsigned int EN_DEST19:1;
    volatile unsigned int EN_DEST20:1;
    volatile unsigned int EN_DEST21:1;
    volatile unsigned int EN_TRASHBIN:1;
    volatile unsigned int reserved_23:9;
} Ifx_GTM_BRC_SRC2_DEST_Bits;


typedef struct _Ifx_GTM_BRC_SRC3_ADDR_Bits
{
    volatile unsigned int ADDR:9;
    volatile unsigned int reserved_9:3;
    volatile unsigned int BRC_MODE:1;
    volatile unsigned int reserved_13:19;
} Ifx_GTM_BRC_SRC3_ADDR_Bits;


typedef struct _Ifx_GTM_BRC_SRC3_DEST_Bits
{
    volatile unsigned int EN_DEST0:1;
    volatile unsigned int EN_DEST1:1;
    volatile unsigned int EN_DEST2:1;
    volatile unsigned int EN_DEST3:1;
    volatile unsigned int EN_DEST4:1;
    volatile unsigned int EN_DEST5:1;
    volatile unsigned int EN_DEST6:1;
    volatile unsigned int EN_DEST7:1;
    volatile unsigned int EN_DEST8:1;
    volatile unsigned int EN_DEST9:1;
    volatile unsigned int EN_DEST10:1;
    volatile unsigned int EN_DEST11:1;
    volatile unsigned int EN_DEST12:1;
    volatile unsigned int EN_DEST13:1;
    volatile unsigned int EN_DEST14:1;
    volatile unsigned int EN_DEST15:1;
    volatile unsigned int EN_DEST16:1;
    volatile unsigned int EN_DEST17:1;
    volatile unsigned int EN_DEST18:1;
    volatile unsigned int EN_DEST19:1;
    volatile unsigned int EN_DEST20:1;
    volatile unsigned int EN_DEST21:1;
    volatile unsigned int EN_TRASHBIN:1;
    volatile unsigned int reserved_23:9;
} Ifx_GTM_BRC_SRC3_DEST_Bits;


typedef struct _Ifx_GTM_BRC_SRC4_ADDR_Bits
{
    volatile unsigned int ADDR:9;
    volatile unsigned int reserved_9:3;
    volatile unsigned int BRC_MODE:1;
    volatile unsigned int reserved_13:19;
} Ifx_GTM_BRC_SRC4_ADDR_Bits;


typedef struct _Ifx_GTM_BRC_SRC4_DEST_Bits
{
    volatile unsigned int EN_DEST0:1;
    volatile unsigned int EN_DEST1:1;
    volatile unsigned int EN_DEST2:1;
    volatile unsigned int EN_DEST3:1;
    volatile unsigned int EN_DEST4:1;
    volatile unsigned int EN_DEST5:1;
    volatile unsigned int EN_DEST6:1;
    volatile unsigned int EN_DEST7:1;
    volatile unsigned int EN_DEST8:1;
    volatile unsigned int EN_DEST9:1;
    volatile unsigned int EN_DEST10:1;
    volatile unsigned int EN_DEST11:1;
    volatile unsigned int EN_DEST12:1;
    volatile unsigned int EN_DEST13:1;
    volatile unsigned int EN_DEST14:1;
    volatile unsigned int EN_DEST15:1;
    volatile unsigned int EN_DEST16:1;
    volatile unsigned int EN_DEST17:1;
    volatile unsigned int EN_DEST18:1;
    volatile unsigned int EN_DEST19:1;
    volatile unsigned int EN_DEST20:1;
    volatile unsigned int EN_DEST21:1;
    volatile unsigned int EN_TRASHBIN:1;
    volatile unsigned int reserved_23:9;
} Ifx_GTM_BRC_SRC4_DEST_Bits;


typedef struct _Ifx_GTM_BRC_SRC5_ADDR_Bits
{
    volatile unsigned int ADDR:9;
    volatile unsigned int reserved_9:3;
    volatile unsigned int BRC_MODE:1;
    volatile unsigned int reserved_13:19;
} Ifx_GTM_BRC_SRC5_ADDR_Bits;


typedef struct _Ifx_GTM_BRC_SRC5_DEST_Bits
{
    volatile unsigned int EN_DEST0:1;
    volatile unsigned int EN_DEST1:1;
    volatile unsigned int EN_DEST2:1;
    volatile unsigned int EN_DEST3:1;
    volatile unsigned int EN_DEST4:1;
    volatile unsigned int EN_DEST5:1;
    volatile unsigned int EN_DEST6:1;
    volatile unsigned int EN_DEST7:1;
    volatile unsigned int EN_DEST8:1;
    volatile unsigned int EN_DEST9:1;
    volatile unsigned int EN_DEST10:1;
    volatile unsigned int EN_DEST11:1;
    volatile unsigned int EN_DEST12:1;
    volatile unsigned int EN_DEST13:1;
    volatile unsigned int EN_DEST14:1;
    volatile unsigned int EN_DEST15:1;
    volatile unsigned int EN_DEST16:1;
    volatile unsigned int EN_DEST17:1;
    volatile unsigned int EN_DEST18:1;
    volatile unsigned int EN_DEST19:1;
    volatile unsigned int EN_DEST20:1;
    volatile unsigned int EN_DEST21:1;
    volatile unsigned int EN_TRASHBIN:1;
    volatile unsigned int reserved_23:9;
} Ifx_GTM_BRC_SRC5_DEST_Bits;


typedef struct _Ifx_GTM_BRC_SRC6_ADDR_Bits
{
    volatile unsigned int ADDR:9;
    volatile unsigned int reserved_9:3;
    volatile unsigned int BRC_MODE:1;
    volatile unsigned int reserved_13:19;
} Ifx_GTM_BRC_SRC6_ADDR_Bits;


typedef struct _Ifx_GTM_BRC_SRC6_DEST_Bits
{
    volatile unsigned int EN_DEST0:1;
    volatile unsigned int EN_DEST1:1;
    volatile unsigned int EN_DEST2:1;
    volatile unsigned int EN_DEST3:1;
    volatile unsigned int EN_DEST4:1;
    volatile unsigned int EN_DEST5:1;
    volatile unsigned int EN_DEST6:1;
    volatile unsigned int EN_DEST7:1;
    volatile unsigned int EN_DEST8:1;
    volatile unsigned int EN_DEST9:1;
    volatile unsigned int EN_DEST10:1;
    volatile unsigned int EN_DEST11:1;
    volatile unsigned int EN_DEST12:1;
    volatile unsigned int EN_DEST13:1;
    volatile unsigned int EN_DEST14:1;
    volatile unsigned int EN_DEST15:1;
    volatile unsigned int EN_DEST16:1;
    volatile unsigned int EN_DEST17:1;
    volatile unsigned int EN_DEST18:1;
    volatile unsigned int EN_DEST19:1;
    volatile unsigned int EN_DEST20:1;
    volatile unsigned int EN_DEST21:1;
    volatile unsigned int EN_TRASHBIN:1;
    volatile unsigned int reserved_23:9;
} Ifx_GTM_BRC_SRC6_DEST_Bits;


typedef struct _Ifx_GTM_BRC_SRC7_ADDR_Bits
{
    volatile unsigned int ADDR:9;
    volatile unsigned int reserved_9:3;
    volatile unsigned int BRC_MODE:1;
    volatile unsigned int reserved_13:19;
} Ifx_GTM_BRC_SRC7_ADDR_Bits;


typedef struct _Ifx_GTM_BRC_SRC7_DEST_Bits
{
    volatile unsigned int EN_DEST0:1;
    volatile unsigned int EN_DEST1:1;
    volatile unsigned int EN_DEST2:1;
    volatile unsigned int EN_DEST3:1;
    volatile unsigned int EN_DEST4:1;
    volatile unsigned int EN_DEST5:1;
    volatile unsigned int EN_DEST6:1;
    volatile unsigned int EN_DEST7:1;
    volatile unsigned int EN_DEST8:1;
    volatile unsigned int EN_DEST9:1;
    volatile unsigned int EN_DEST10:1;
    volatile unsigned int EN_DEST11:1;
    volatile unsigned int EN_DEST12:1;
    volatile unsigned int EN_DEST13:1;
    volatile unsigned int EN_DEST14:1;
    volatile unsigned int EN_DEST15:1;
    volatile unsigned int EN_DEST16:1;
    volatile unsigned int EN_DEST17:1;
    volatile unsigned int EN_DEST18:1;
    volatile unsigned int EN_DEST19:1;
    volatile unsigned int EN_DEST20:1;
    volatile unsigned int EN_DEST21:1;
    volatile unsigned int EN_TRASHBIN:1;
    volatile unsigned int reserved_23:9;
} Ifx_GTM_BRC_SRC7_DEST_Bits;


typedef struct _Ifx_GTM_BRC_SRC8_ADDR_Bits
{
    volatile unsigned int ADDR:9;
    volatile unsigned int reserved_9:3;
    volatile unsigned int BRC_MODE:1;
    volatile unsigned int reserved_13:19;
} Ifx_GTM_BRC_SRC8_ADDR_Bits;


typedef struct _Ifx_GTM_BRC_SRC8_DEST_Bits
{
    volatile unsigned int EN_DEST0:1;
    volatile unsigned int EN_DEST1:1;
    volatile unsigned int EN_DEST2:1;
    volatile unsigned int EN_DEST3:1;
    volatile unsigned int EN_DEST4:1;
    volatile unsigned int EN_DEST5:1;
    volatile unsigned int EN_DEST6:1;
    volatile unsigned int EN_DEST7:1;
    volatile unsigned int EN_DEST8:1;
    volatile unsigned int EN_DEST9:1;
    volatile unsigned int EN_DEST10:1;
    volatile unsigned int EN_DEST11:1;
    volatile unsigned int EN_DEST12:1;
    volatile unsigned int EN_DEST13:1;
    volatile unsigned int EN_DEST14:1;
    volatile unsigned int EN_DEST15:1;
    volatile unsigned int EN_DEST16:1;
    volatile unsigned int EN_DEST17:1;
    volatile unsigned int EN_DEST18:1;
    volatile unsigned int EN_DEST19:1;
    volatile unsigned int EN_DEST20:1;
    volatile unsigned int EN_DEST21:1;
    volatile unsigned int EN_TRASHBIN:1;
    volatile unsigned int reserved_23:9;
} Ifx_GTM_BRC_SRC8_DEST_Bits;


typedef struct _Ifx_GTM_BRC_SRC9_ADDR_Bits
{
    volatile unsigned int ADDR:9;
    volatile unsigned int reserved_9:3;
    volatile unsigned int BRC_MODE:1;
    volatile unsigned int reserved_13:19;
} Ifx_GTM_BRC_SRC9_ADDR_Bits;


typedef struct _Ifx_GTM_BRC_SRC9_DEST_Bits
{
    volatile unsigned int EN_DEST0:1;
    volatile unsigned int EN_DEST1:1;
    volatile unsigned int EN_DEST2:1;
    volatile unsigned int EN_DEST3:1;
    volatile unsigned int EN_DEST4:1;
    volatile unsigned int EN_DEST5:1;
    volatile unsigned int EN_DEST6:1;
    volatile unsigned int EN_DEST7:1;
    volatile unsigned int EN_DEST8:1;
    volatile unsigned int EN_DEST9:1;
    volatile unsigned int EN_DEST10:1;
    volatile unsigned int EN_DEST11:1;
    volatile unsigned int EN_DEST12:1;
    volatile unsigned int EN_DEST13:1;
    volatile unsigned int EN_DEST14:1;
    volatile unsigned int EN_DEST15:1;
    volatile unsigned int EN_DEST16:1;
    volatile unsigned int EN_DEST17:1;
    volatile unsigned int EN_DEST18:1;
    volatile unsigned int EN_DEST19:1;
    volatile unsigned int EN_DEST20:1;
    volatile unsigned int EN_DEST21:1;
    volatile unsigned int EN_TRASHBIN:1;
    volatile unsigned int reserved_23:9;
} Ifx_GTM_BRC_SRC9_DEST_Bits;


typedef struct _Ifx_GTM_BRIDGE_MODE_Bits
{
    volatile unsigned int BRG_MODE:1;
    volatile unsigned int MSK_WR_RSP:1;
    volatile unsigned int reserved_2:6;
    volatile unsigned int MODE_UP_PGR:1;
    volatile unsigned int BUFF_OVL:1;
    volatile unsigned int reserved_10:2;
    volatile unsigned int SYNC_INPUT_REG:1;
    volatile unsigned int reserved_13:3;
    volatile unsigned int BRG_RST:1;
    volatile unsigned int reserved_17:7;
    volatile unsigned int BUFF_DPT:8;
} Ifx_GTM_BRIDGE_MODE_Bits;


typedef struct _Ifx_GTM_BRIDGE_PTR1_Bits
{
    volatile unsigned int NEW_TRAN_PTR:5;
    volatile unsigned int FIRST_RSP_PTR:5;
    volatile unsigned int TRAN_IN_PGR:5;
    volatile unsigned int ABT_TRAN_PGR:5;
    volatile unsigned int FBC:6;
    volatile unsigned int RSP_TRAN_RDY:6;
} Ifx_GTM_BRIDGE_PTR1_Bits;


typedef struct _Ifx_GTM_BRIDGE_PTR2_Bits
{
    volatile unsigned int TRAN_IN_PGR2:5;
    volatile unsigned int reserved_5:27;
} Ifx_GTM_BRIDGE_PTR2_Bits;


typedef struct _Ifx_GTM_CLC_Bits
{
    volatile unsigned int DISR:1;
    volatile unsigned int DISS:1;
    volatile unsigned int reserved_2:1;
    volatile unsigned int EDIS:1;
    volatile unsigned int reserved_4:28;
} Ifx_GTM_CLC_Bits;


typedef struct _Ifx_GTM_CMP_EIRQ_EN_Bits
{
    volatile unsigned int ABWC0_EN_EIRQ:1;
    volatile unsigned int ABWC1_EN_EIRQ:1;
    volatile unsigned int ABWC2_EN_EIRQ:1;
    volatile unsigned int ABWC3_EN_EIRQ:1;
    volatile unsigned int ABWC4_EN_EIRQ:1;
    volatile unsigned int ABWC5_EN_EIRQ:1;
    volatile unsigned int ABWC6_EN_EIRQ:1;
    volatile unsigned int ABWC7_EN_EIRQ:1;
    volatile unsigned int ABWC8_EN_EIRQ:1;
    volatile unsigned int ABWC9_EN_EIRQ:1;
    volatile unsigned int ABWC10_EN_EIRQ:1;
    volatile unsigned int ABWC11_EN_EIRQ:1;
    volatile unsigned int TBWC0_EN_EIRQ:1;
    volatile unsigned int TBWC1_EN_EIRQ:1;
    volatile unsigned int TBWC2_EN_EIRQ:1;
    volatile unsigned int TBWC3_EN_EIRQ:1;
    volatile unsigned int TBWC4_EN_EIRQ:1;
    volatile unsigned int TBWC5_EN_EIRQ:1;
    volatile unsigned int TBWC6_EN_EIRQ:1;
    volatile unsigned int TBWC7_EN_EIRQ:1;
    volatile unsigned int TBWC8_EN_EIRQ:1;
    volatile unsigned int TBWC9_EN_EIRQ:1;
    volatile unsigned int TBWC10_EN_EIRQ:1;
    volatile unsigned int TBWC11_EN_EIRQ:1;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_CMP_EIRQ_EN_Bits;


typedef struct _Ifx_GTM_CMP_EN_Bits
{
    volatile unsigned int ABWC0_EN:1;
    volatile unsigned int ABWC1_EN:1;
    volatile unsigned int ABWC2_EN:1;
    volatile unsigned int ABWC3_EN:1;
    volatile unsigned int ABWC4_EN:1;
    volatile unsigned int ABWC5_EN:1;
    volatile unsigned int ABWC6_EN:1;
    volatile unsigned int ABWC7_EN:1;
    volatile unsigned int ABWC8_EN:1;
    volatile unsigned int ABWC9_EN:1;
    volatile unsigned int ABWC10_EN:1;
    volatile unsigned int ABWC11_EN:1;
    volatile unsigned int TBWC0_EN:1;
    volatile unsigned int TBWC1_EN:1;
    volatile unsigned int TBWC2_EN:1;
    volatile unsigned int TBWC3_EN:1;
    volatile unsigned int TBWC4_EN:1;
    volatile unsigned int TBWC5_EN:1;
    volatile unsigned int TBWC6_EN:1;
    volatile unsigned int TBWC7_EN:1;
    volatile unsigned int TBWC8_EN:1;
    volatile unsigned int TBWC9_EN:1;
    volatile unsigned int TBWC10_EN:1;
    volatile unsigned int TBWC11_EN:1;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_CMP_EN_Bits;


typedef struct _Ifx_GTM_CMP_IRQ_EN_Bits
{
    volatile unsigned int ABWC0_EN_IRQ:1;
    volatile unsigned int ABWC1_EN_IRQ:1;
    volatile unsigned int ABWC2_EN_IRQ:1;
    volatile unsigned int ABWC3_EN_IRQ:1;
    volatile unsigned int ABWC4_EN_IRQ:1;
    volatile unsigned int ABWC5_EN_IRQ:1;
    volatile unsigned int ABWC6_EN_IRQ:1;
    volatile unsigned int ABWC7_EN_IRQ:1;
    volatile unsigned int ABWC8_EN_IRQ:1;
    volatile unsigned int ABWC9_EN_IRQ:1;
    volatile unsigned int ABWC10_EN_IRQ:1;
    volatile unsigned int ABWC11_EN_IRQ:1;
    volatile unsigned int TBWC0_EN_IRQ:1;
    volatile unsigned int TBWC1_EN_IRQ:1;
    volatile unsigned int TBWC2_EN_IRQ:1;
    volatile unsigned int TBWC3_EN_IRQ:1;
    volatile unsigned int TBWC4_EN_IRQ:1;
    volatile unsigned int TBWC5_EN_IRQ:1;
    volatile unsigned int TBWC6_EN_IRQ:1;
    volatile unsigned int TBWC7_EN_IRQ:1;
    volatile unsigned int TBWC8_EN_IRQ:1;
    volatile unsigned int TBWC9_EN_IRQ:1;
    volatile unsigned int TBWC10_EN_IRQ:1;
    volatile unsigned int TBWC11_EN_IRQ:1;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_CMP_IRQ_EN_Bits;


typedef struct _Ifx_GTM_CMP_IRQ_FORCINT_Bits
{
    volatile unsigned int TRG_ABWC0:1;
    volatile unsigned int TRG_ABWC1:1;
    volatile unsigned int TRG_ABWC2:1;
    volatile unsigned int TRG_ABWC3:1;
    volatile unsigned int TRG_ABWC4:1;
    volatile unsigned int TRG_ABWC5:1;
    volatile unsigned int TRG_ABWC6:1;
    volatile unsigned int TRG_ABWC7:1;
    volatile unsigned int TRG_ABWC8:1;
    volatile unsigned int TRG_ABWC9:1;
    volatile unsigned int TRG_ABWC10:1;
    volatile unsigned int TRG_ABWC11:1;
    volatile unsigned int TRG_TBWC0:1;
    volatile unsigned int TRG_TBWC1:1;
    volatile unsigned int TRG_TBWC2:1;
    volatile unsigned int TRG_TBWC3:1;
    volatile unsigned int TRG_TBWC4:1;
    volatile unsigned int TRG_TBWC5:1;
    volatile unsigned int TRG_TBWC6:1;
    volatile unsigned int TRG_TBWC7:1;
    volatile unsigned int TRG_TBWC8:1;
    volatile unsigned int TRG_TBWC9:1;
    volatile unsigned int TRG_TBWC10:1;
    volatile unsigned int TRG_TBWC11:1;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_CMP_IRQ_FORCINT_Bits;


typedef struct _Ifx_GTM_CMP_IRQ_MODE_Bits
{
    volatile unsigned int IRQ_MODE:2;
    volatile unsigned int reserved_2:30;
} Ifx_GTM_CMP_IRQ_MODE_Bits;


typedef struct _Ifx_GTM_CMP_IRQ_NOTIFY_Bits
{
    volatile unsigned int ABWC0:1;
    volatile unsigned int ABWC1:1;
    volatile unsigned int ABWC2:1;
    volatile unsigned int ABWC3:1;
    volatile unsigned int ABWC4:1;
    volatile unsigned int ABWC5:1;
    volatile unsigned int ABWC6:1;
    volatile unsigned int ABWC7:1;
    volatile unsigned int ABWC8:1;
    volatile unsigned int ABWC9:1;
    volatile unsigned int ABWC10:1;
    volatile unsigned int ABWC11:1;
    volatile unsigned int TBWC0:1;
    volatile unsigned int TBWC1:1;
    volatile unsigned int TBWC2:1;
    volatile unsigned int TBWC3:1;
    volatile unsigned int TBWC4:1;
    volatile unsigned int TBWC5:1;
    volatile unsigned int TBWC6:1;
    volatile unsigned int TBWC7:1;
    volatile unsigned int TBWC8:1;
    volatile unsigned int TBWC9:1;
    volatile unsigned int TBWC10:1;
    volatile unsigned int TBWC11:1;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_CMP_IRQ_NOTIFY_Bits;


typedef struct _Ifx_GTM_CMU_CLK0_5_CTRL_Bits
{
    volatile unsigned int CLK_CNT:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_CMU_CLK0_5_CTRL_Bits;


typedef struct _Ifx_GTM_CMU_CLK_6_CTRL_Bits
{
    volatile unsigned int CLK_CNT:24;
    volatile unsigned int CLK6_SEL:1;
    volatile unsigned int reserved_25:7;
} Ifx_GTM_CMU_CLK_6_CTRL_Bits;


typedef struct _Ifx_GTM_CMU_CLK_7_CTRL_Bits
{
    volatile unsigned int CLK_CNT:24;
    volatile unsigned int CLK7_SEL:1;
    volatile unsigned int reserved_25:7;
} Ifx_GTM_CMU_CLK_7_CTRL_Bits;


typedef struct _Ifx_GTM_CMU_CLK_EN_Bits
{
    volatile unsigned int EN_CLK0:2;
    volatile unsigned int EN_CLK1:2;
    volatile unsigned int EN_CLK2:2;
    volatile unsigned int EN_CLK3:2;
    volatile unsigned int EN_CLK4:2;
    volatile unsigned int EN_CLK5:2;
    volatile unsigned int EN_CLK6:2;
    volatile unsigned int EN_CLK7:2;
    volatile unsigned int EN_ECLK0:2;
    volatile unsigned int EN_ECLK1:2;
    volatile unsigned int EN_ECLK2:2;
    volatile unsigned int EN_FXCLK:2;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_CMU_CLK_EN_Bits;


typedef struct _Ifx_GTM_CMU_ECLK_DEN_Bits
{
    volatile unsigned int ECLK_DEN:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_CMU_ECLK_DEN_Bits;


typedef struct _Ifx_GTM_CMU_ECLK_NUM_Bits
{
    volatile unsigned int ECLK_NUM:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_CMU_ECLK_NUM_Bits;


typedef struct _Ifx_GTM_CMU_FXCLK_CTRL_Bits
{
    volatile unsigned int FXCLK_SEL:4;
    volatile unsigned int reserved_4:28;
} Ifx_GTM_CMU_FXCLK_CTRL_Bits;


typedef struct _Ifx_GTM_CMU_GCLK_DEN_Bits
{
    volatile unsigned int GCLK_DEN:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_CMU_GCLK_DEN_Bits;


typedef struct _Ifx_GTM_CMU_GCLK_NUM_Bits
{
    volatile unsigned int GCLK_NUM:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_CMU_GCLK_NUM_Bits;


typedef struct _Ifx_GTM_CTRL_Bits
{
    volatile unsigned int RF_PROT:1;
    volatile unsigned int TO_MODE:1;
    volatile unsigned int reserved_2:2;
    volatile unsigned int TO_VAL:5;
    volatile unsigned int reserved_9:23;
} Ifx_GTM_CTRL_Bits;


typedef struct _Ifx_GTM_DATAIN_Bits
{
    volatile unsigned int DATA:32;
} Ifx_GTM_DATAIN_Bits;


typedef struct _Ifx_GTM_DPLL_ACB_Bits
{
    volatile unsigned int ACB_0:5;
    volatile unsigned int reserved_5:3;
    volatile unsigned int ACB_1:5;
    volatile unsigned int reserved_13:3;
    volatile unsigned int ACB_2:5;
    volatile unsigned int reserved_21:3;
    volatile unsigned int ACB_3:5;
    volatile unsigned int reserved_29:3;
} Ifx_GTM_DPLL_ACB_Bits;


typedef struct _Ifx_GTM_DPLL_ACT_STA_Bits
{
    volatile unsigned int ACT_Ni:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_DPLL_ACT_STA_Bits;


typedef struct _Ifx_GTM_DPLL_ADD_IN_CAL1_Bits
{
    volatile unsigned int ADD_IN_CAL_1:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_DPLL_ADD_IN_CAL1_Bits;


typedef struct _Ifx_GTM_DPLL_ADD_IN_CAL2_Bits
{
    volatile unsigned int ADD_IN_CAL_2:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_DPLL_ADD_IN_CAL2_Bits;


typedef struct _Ifx_GTM_DPLL_ADD_IN_LD1_Bits
{
    volatile unsigned int ADD_IN_LD_1:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_DPLL_ADD_IN_LD1_Bits;


typedef struct _Ifx_GTM_DPLL_ADD_IN_LD2_Bits
{
    volatile unsigned int ADD_IN_LD_2:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_DPLL_ADD_IN_LD2_Bits;


typedef struct _Ifx_GTM_DPLL_ADT_S_Bits
{
    volatile unsigned int PD_S:16;
    volatile unsigned int NS:6;
    volatile unsigned int reserved_22:10;
} Ifx_GTM_DPLL_ADT_S_Bits;


typedef struct _Ifx_GTM_DPLL_AOSV_2_Bits
{
    volatile unsigned int AOSV_2A:8;
    volatile unsigned int AOSV_2B:8;
    volatile unsigned int AOSV_2C:8;
    volatile unsigned int AOSV_2D:8;
} Ifx_GTM_DPLL_AOSV_2_Bits;


typedef struct _Ifx_GTM_DPLL_APS_1C3_Bits
{
    volatile unsigned int reserved_0:2;
    volatile unsigned int APS_1C3:6;
    volatile unsigned int reserved_8:24;
} Ifx_GTM_DPLL_APS_1C3_Bits;


typedef struct _Ifx_GTM_DPLL_APS_Bits
{
    volatile unsigned int reserved_0:1;
    volatile unsigned int WAPS:1;
    volatile unsigned int APS:6;
    volatile unsigned int reserved_8:5;
    volatile unsigned int WAPS_1C2:1;
    volatile unsigned int APS_1C2:6;
    volatile unsigned int reserved_20:12;
} Ifx_GTM_DPLL_APS_Bits;


typedef struct _Ifx_GTM_DPLL_APS_SYNC_Bits
{
    volatile unsigned int APS_1C2_EXT:6;
    volatile unsigned int APS_1C2_STATUS:1;
    volatile unsigned int reserved_7:7;
    volatile unsigned int APS_1C2_OLD:6;
    volatile unsigned int reserved_20:12;
} Ifx_GTM_DPLL_APS_SYNC_Bits;


typedef struct _Ifx_GTM_DPLL_APT_2C_Bits
{
    volatile unsigned int reserved_0:2;
    volatile unsigned int APT_2C:10;
    volatile unsigned int reserved_12:20;
} Ifx_GTM_DPLL_APT_2C_Bits;


typedef struct _Ifx_GTM_DPLL_APT_Bits
{
    volatile unsigned int reserved_0:1;
    volatile unsigned int WAPT:1;
    volatile unsigned int APT:10;
    volatile unsigned int reserved_12:1;
    volatile unsigned int WAPT_2B:1;
    volatile unsigned int APT_2B:10;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_DPLL_APT_Bits;


typedef struct _Ifx_GTM_DPLL_APT_SYNC_Bits
{
    volatile unsigned int APT_2B_EXT:6;
    volatile unsigned int APT_2B_STATUS:1;
    volatile unsigned int reserved_7:7;
    volatile unsigned int APT_2B_OLD:10;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_DPLL_APT_SYNC_Bits;


typedef struct _Ifx_GTM_DPLL_CDT_SX_Bits
{
    volatile unsigned int CDT_SX:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_DPLL_CDT_SX_Bits;


typedef struct _Ifx_GTM_DPLL_CDT_SX_NOM_Bits
{
    volatile unsigned int CDT_SX_NOM:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_DPLL_CDT_SX_NOM_Bits;


typedef struct _Ifx_GTM_DPLL_CDT_TX_Bits
{
    volatile unsigned int CDT_TX:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_DPLL_CDT_TX_Bits;


typedef struct _Ifx_GTM_DPLL_CDT_TX_NOM_Bits
{
    volatile unsigned int CDT_TX_NOM:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_DPLL_CDT_TX_NOM_Bits;


typedef struct _Ifx_GTM_DPLL_CNT_NUM1_Bits
{
    volatile unsigned int CNT_NUM_1:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_DPLL_CNT_NUM1_Bits;


typedef struct _Ifx_GTM_DPLL_CNT_NUM2_Bits
{
    volatile unsigned int CNT_NUM_2:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_DPLL_CNT_NUM2_Bits;


typedef struct _Ifx_GTM_DPLL_CRTL_1_SHADOW_STATE_Bits
{
    volatile unsigned int DMO:1;
    volatile unsigned int reserved_1:2;
    volatile unsigned int COA:1;
    volatile unsigned int PIT:1;
    volatile unsigned int SGE1:1;
    volatile unsigned int DLM1:1;
    volatile unsigned int PCM1:1;
    volatile unsigned int SGE2:1;
    volatile unsigned int DLM2:1;
    volatile unsigned int PCM2:1;
    volatile unsigned int SYN_NS:21;
} Ifx_GTM_DPLL_CRTL_1_SHADOW_STATE_Bits;


typedef struct _Ifx_GTM_DPLL_CTRL_0_Bits
{
    volatile unsigned int MLT:10;
    volatile unsigned int IFP:1;
    volatile unsigned int SNU:5;
    volatile unsigned int TNU:9;
    volatile unsigned int AMS:1;
    volatile unsigned int AMT:1;
    volatile unsigned int IDS:1;
    volatile unsigned int IDT:1;
    volatile unsigned int SEN:1;
    volatile unsigned int TEN:1;
    volatile unsigned int RMO:1;
} Ifx_GTM_DPLL_CTRL_0_Bits;


typedef struct _Ifx_GTM_DPLL_CTRL_0_SHADOW_STATE_Bits
{
    volatile unsigned int reserved_0:10;
    volatile unsigned int IFP:1;
    volatile unsigned int reserved_11:14;
    volatile unsigned int AMS:1;
    volatile unsigned int reserved_26:1;
    volatile unsigned int IDS:1;
    volatile unsigned int reserved_28:3;
    volatile unsigned int RMO:1;
} Ifx_GTM_DPLL_CTRL_0_SHADOW_STATE_Bits;


typedef struct _Ifx_GTM_DPLL_CTRL_0_SHADOW_TRIGGER_Bits
{
    volatile unsigned int MLT:10;
    volatile unsigned int IFP:1;
    volatile unsigned int reserved_11:15;
    volatile unsigned int AMT:1;
    volatile unsigned int IDS:1;
    volatile unsigned int IDT:1;
    volatile unsigned int reserved_29:2;
    volatile unsigned int RMO:1;
} Ifx_GTM_DPLL_CTRL_0_SHADOW_TRIGGER_Bits;


typedef struct _Ifx_GTM_DPLL_CTRL_1_Bits
{
    volatile unsigned int DMO:1;
    volatile unsigned int DEN:1;
    volatile unsigned int IDDS:1;
    volatile unsigned int COA:1;
    volatile unsigned int PIT:1;
    volatile unsigned int SGE1:1;
    volatile unsigned int DLM1:1;
    volatile unsigned int PCM1:1;
    volatile unsigned int SGE2:1;
    volatile unsigned int DLM2:1;
    volatile unsigned int PCM2:1;
    volatile unsigned int SYN_NS:5;
    volatile unsigned int SYN_NT:5;
    volatile unsigned int reserved_21:1;
    volatile unsigned int LCD:1;
    volatile unsigned int SWR:1;
    volatile unsigned int SYSF:1;
    volatile unsigned int TS0_HRS:1;
    volatile unsigned int TS0_HRT:1;
    volatile unsigned int SMC:1;
    volatile unsigned int SSL:2;
    volatile unsigned int TSL:2;
} Ifx_GTM_DPLL_CTRL_1_Bits;


typedef struct _Ifx_GTM_DPLL_CTRL_1_SHADOW_TRIGGER_Bits
{
    volatile unsigned int DMO:1;
    volatile unsigned int reserved_1:2;
    volatile unsigned int COA:1;
    volatile unsigned int PIT:1;
    volatile unsigned int SGE1:1;
    volatile unsigned int DLM1:1;
    volatile unsigned int PCM1:1;
    volatile unsigned int reserved_8:24;
} Ifx_GTM_DPLL_CTRL_1_SHADOW_TRIGGER_Bits;


typedef struct _Ifx_GTM_DPLL_CTRL_2_Bits
{
    volatile unsigned int reserved_0:8;
    volatile unsigned int AEN0:1;
    volatile unsigned int AEN1:1;
    volatile unsigned int AEN2:1;
    volatile unsigned int AEN3:1;
    volatile unsigned int AEN4:1;
    volatile unsigned int AEN5:1;
    volatile unsigned int AEN6:1;
    volatile unsigned int AEN7:1;
    volatile unsigned int WAD0:1;
    volatile unsigned int WAD1:1;
    volatile unsigned int WAD2:1;
    volatile unsigned int WAD3:1;
    volatile unsigned int WAD4:1;
    volatile unsigned int WAD5:1;
    volatile unsigned int WAD6:1;
    volatile unsigned int WAD7:1;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_DPLL_CTRL_2_Bits;


typedef struct _Ifx_GTM_DPLL_CTRL_3_Bits
{
    volatile unsigned int reserved_0:8;
    volatile unsigned int AEN8:1;
    volatile unsigned int AEN9:1;
    volatile unsigned int AEN10:1;
    volatile unsigned int AEN11:1;
    volatile unsigned int AEN12:1;
    volatile unsigned int AEN13:1;
    volatile unsigned int AEN14:1;
    volatile unsigned int AEN15:1;
    volatile unsigned int WAD8:1;
    volatile unsigned int WAD9:1;
    volatile unsigned int WAD10:1;
    volatile unsigned int WAD11:1;
    volatile unsigned int WAD12:1;
    volatile unsigned int WAD13:1;
    volatile unsigned int WAD14:1;
    volatile unsigned int WAD15:1;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_DPLL_CTRL_3_Bits;


typedef struct _Ifx_GTM_DPLL_CTRL_4_Bits
{
    volatile unsigned int reserved_0:8;
    volatile unsigned int AEN16:1;
    volatile unsigned int AEN17:1;
    volatile unsigned int AEN18:1;
    volatile unsigned int AEN19:1;
    volatile unsigned int AEN20:1;
    volatile unsigned int AEN21:1;
    volatile unsigned int AEN22:1;
    volatile unsigned int AEN23:1;
    volatile unsigned int WAD16:1;
    volatile unsigned int WAD17:1;
    volatile unsigned int WAD18:1;
    volatile unsigned int WAD19:1;
    volatile unsigned int WAD20:1;
    volatile unsigned int WAD21:1;
    volatile unsigned int WAD22:1;
    volatile unsigned int WAD23:1;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_DPLL_CTRL_4_Bits;


typedef struct _Ifx_GTM_DPLL_DLA_Bits
{
    volatile unsigned int DLA:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_DPLL_DLA_Bits;


typedef struct _Ifx_GTM_DPLL_DT_S_ACT_Bits
{
    volatile unsigned int DT_S_ACT:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_DPLL_DT_S_ACT_Bits;


typedef struct _Ifx_GTM_DPLL_DT_S_Bits
{
    volatile unsigned int DT_S:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_DPLL_DT_S_Bits;


typedef struct _Ifx_GTM_DPLL_DT_T_ACT_Bits
{
    volatile unsigned int DT_T_ACT:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_DPLL_DT_T_ACT_Bits;


typedef struct _Ifx_GTM_DPLL_DTA_Bits
{
    volatile unsigned int DTA:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_DPLL_DTA_Bits;



typedef struct _Ifx_GTM_DPLL_EDT_S_Bits
{
    volatile unsigned int EDT_S:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_DPLL_EDT_S_Bits;



typedef struct _Ifx_GTM_DPLL_EDT_T_Bits
{
    volatile unsigned int EDT_T:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_DPLL_EDT_T_Bits;


typedef struct _Ifx_GTM_DPLL_EIRQ_EN_Bits
{
    volatile unsigned int PDI_EIRQ_EN:1;
    volatile unsigned int PEI_EIRQ_EN:1;
    volatile unsigned int TINI_EIRQ_EN:1;
    volatile unsigned int TAXI_EIRQ_EN:1;
    volatile unsigned int SISI_EIRQ_EN:1;
    volatile unsigned int TISI_EIRQ_EN:1;
    volatile unsigned int MSI_EIRQ_EN:1;
    volatile unsigned int MTI_EIRQ_EN:1;
    volatile unsigned int SASI_EIRQ_EN:1;
    volatile unsigned int TASI_EIRQ_EN:1;
    volatile unsigned int PWI_EIRQ_EN:1;
    volatile unsigned int W2I_EIRQ_EN:1;
    volatile unsigned int W1I_EIRQ_EN:1;
    volatile unsigned int GL1I_EIRQ_EN:1;
    volatile unsigned int LL1I_EIRQ_EN:1;
    volatile unsigned int EI_EIRQ_EN:1;
    volatile unsigned int GL2I_EIRQ_EN:1;
    volatile unsigned int LL2I_EIRQ_EN:1;
    volatile unsigned int TE0I_EIRQ_EN:1;
    volatile unsigned int TE1I_EIRQ_EN:1;
    volatile unsigned int TE2I_EIRQ_EN:1;
    volatile unsigned int TE3I_EIRQ_EN:1;
    volatile unsigned int TE4I_EIRQ_EN:1;
    volatile unsigned int CDTI_EIRQ_EN:1;
    volatile unsigned int CDSI_EIRQ_EN:1;
    volatile unsigned int TORI:1;
    volatile unsigned int SORI:1;
    volatile unsigned int DCGI:1;
    volatile unsigned int reserved_28:4;
} Ifx_GTM_DPLL_EIRQ_EN_Bits;


typedef struct _Ifx_GTM_DPLL_FTV_S_Bits
{
    volatile unsigned int STATE_FT:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_DPLL_FTV_S_Bits;


typedef struct _Ifx_GTM_DPLL_FTV_T_Bits
{
    volatile unsigned int TRIGGER_FT:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_DPLL_FTV_T_Bits;


typedef struct _Ifx_GTM_DPLL_ID_PMTR_Bits
{
    volatile unsigned int ID_PMTR_x:9;
    volatile unsigned int reserved_9:23;
} Ifx_GTM_DPLL_ID_PMTR_Bits;


typedef struct _Ifx_GTM_DPLL_INC_CNT1_Bits
{
    volatile unsigned int INC_CNT1:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_DPLL_INC_CNT1_Bits;



typedef struct _Ifx_GTM_DPLL_INC_CNT2_Bits
{
    volatile unsigned int INC_CNT2:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_DPLL_INC_CNT2_Bits;


typedef struct _Ifx_GTM_DPLL_IRQ_EN_Bits
{
    volatile unsigned int PDI_IRQ_EN:1;
    volatile unsigned int PEI_IRQ_EN:1;
    volatile unsigned int TINI_IRQ_EN:1;
    volatile unsigned int TAXI_IRQ_EN:1;
    volatile unsigned int SISI_IRQ_EN:1;
    volatile unsigned int TISI_IRQ_EN:1;
    volatile unsigned int MSI_IRQ_EN:1;
    volatile unsigned int MTI_IRQ_EN:1;
    volatile unsigned int SASI_IRQ_EN:1;
    volatile unsigned int TASI_IRQ_EN:1;
    volatile unsigned int PWI_IRQ_EN:1;
    volatile unsigned int W2I_IRQ_EN:1;
    volatile unsigned int W1I_IRQ_EN:1;
    volatile unsigned int GL1I_IRQ_EN:1;
    volatile unsigned int LL1I_IRQ_EN:1;
    volatile unsigned int EI_IRQ_EN:1;
    volatile unsigned int GL2I_IRQ_EN:1;
    volatile unsigned int LL2I_IRQ_EN:1;
    volatile unsigned int TE0I_IRQ_EN:1;
    volatile unsigned int TE1I_IRQ_EN:1;
    volatile unsigned int TE2I_IRQ_EN:1;
    volatile unsigned int TE3I_IRQ_EN:1;
    volatile unsigned int TE4I_IRQ_EN:1;
    volatile unsigned int CDTI_IRQ_EN:1;
    volatile unsigned int CDSI_IRQ_EN:1;
    volatile unsigned int TORI:1;
    volatile unsigned int SORI:1;
    volatile unsigned int DCGI:1;
    volatile unsigned int reserved_28:4;
} Ifx_GTM_DPLL_IRQ_EN_Bits;


typedef struct _Ifx_GTM_DPLL_IRQ_FORCINT_Bits
{
    volatile unsigned int TRG_PDI:1;
    volatile unsigned int TRG_PEI:1;
    volatile unsigned int TRG_TINI:1;
    volatile unsigned int TRG_TAXI:1;
    volatile unsigned int TRG_SISI:1;
    volatile unsigned int TRG_TISI:1;
    volatile unsigned int TRG_MSI:1;
    volatile unsigned int TRG_MTI:1;
    volatile unsigned int TRG_SASI:1;
    volatile unsigned int TRG_TASI:1;
    volatile unsigned int TRG_PWI:1;
    volatile unsigned int TRG_W2I:1;
    volatile unsigned int TRG_W1I:1;
    volatile unsigned int TRG_GL1I:1;
    volatile unsigned int TRG_LL1I:1;
    volatile unsigned int TRG_EI:1;
    volatile unsigned int TRG_GL2I:1;
    volatile unsigned int TRG_LL2I:1;
    volatile unsigned int TRG_TE0I:1;
    volatile unsigned int TRG_TE1I:1;
    volatile unsigned int TRG_TE2I:1;
    volatile unsigned int TRG_TE3I:1;
    volatile unsigned int TRG_TE4I:1;
    volatile unsigned int TRG_CDTI:1;
    volatile unsigned int TRG_CDSI:1;
    volatile unsigned int TRG_TORI:1;
    volatile unsigned int TRG_SORI:1;
    volatile unsigned int TRG_DCGI:1;
    volatile unsigned int reserved_28:4;
} Ifx_GTM_DPLL_IRQ_FORCINT_Bits;


typedef struct _Ifx_GTM_DPLL_IRQ_MODE_Bits
{
    volatile unsigned int IRQ_MODE:2;
    volatile unsigned int reserved_2:30;
} Ifx_GTM_DPLL_IRQ_MODE_Bits;


typedef struct _Ifx_GTM_DPLL_IRQ_NOTIFY_Bits
{
    volatile unsigned int PDI:1;
    volatile unsigned int PEI:1;
    volatile unsigned int TINI:1;
    volatile unsigned int TAXI:1;
    volatile unsigned int SISI:1;
    volatile unsigned int TISI:1;
    volatile unsigned int MSI:1;
    volatile unsigned int MTI:1;
    volatile unsigned int SASI:1;
    volatile unsigned int TASI:1;
    volatile unsigned int PWI:1;
    volatile unsigned int W2I:1;
    volatile unsigned int W1I:1;
    volatile unsigned int GL1I:1;
    volatile unsigned int LL1I:1;
    volatile unsigned int EI:1;
    volatile unsigned int GL2I:1;
    volatile unsigned int LL2I:1;
    volatile unsigned int TE0I:1;
    volatile unsigned int TE1I:1;
    volatile unsigned int TE2I:1;
    volatile unsigned int TE3I:1;
    volatile unsigned int TE4I:1;
    volatile unsigned int CDTI:1;
    volatile unsigned int CDSI:1;
    volatile unsigned int TORI:1;
    volatile unsigned int SORI:1;
    volatile unsigned int DCGI:1;
    volatile unsigned int reserved_28:4;
} Ifx_GTM_DPLL_IRQ_NOTIFY_Bits;



typedef struct _Ifx_GTM_DPLL_MEDT_S_Bits
{
    volatile unsigned int MEDT_S:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_DPLL_MEDT_S_Bits;



typedef struct _Ifx_GTM_DPLL_MEDT_T_Bits
{
    volatile unsigned int MEDT_T:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_DPLL_MEDT_T_Bits;


typedef struct _Ifx_GTM_DPLL_MLS1_Bits
{
    volatile unsigned int MLS1:18;
    volatile unsigned int reserved_18:14;
} Ifx_GTM_DPLL_MLS1_Bits;


typedef struct _Ifx_GTM_DPLL_MLS2_Bits
{
    volatile unsigned int MLS2:18;
    volatile unsigned int reserved_18:14;
} Ifx_GTM_DPLL_MLS2_Bits;



typedef struct _Ifx_GTM_DPLL_MPVAL1_Bits
{
    volatile unsigned int MPVAL1:16;
    volatile unsigned int SIX1:8;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_DPLL_MPVAL1_Bits;



typedef struct _Ifx_GTM_DPLL_MPVAL2_Bits
{
    volatile unsigned int MPVAL2:16;
    volatile unsigned int SIX2:8;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_DPLL_MPVAL2_Bits;


typedef struct _Ifx_GTM_DPLL_NA_Bits
{
    volatile unsigned int DB:10;
    volatile unsigned int DW:10;
    volatile unsigned int reserved_20:12;
} Ifx_GTM_DPLL_NA_Bits;


typedef struct _Ifx_GTM_DPLL_NMB_S_Bits
{
    volatile unsigned int NMB_S:20;
    volatile unsigned int reserved_20:12;
} Ifx_GTM_DPLL_NMB_S_Bits;


typedef struct _Ifx_GTM_DPLL_NMB_S_TAR_Bits
{
    volatile unsigned int NMB_S_TAR:20;
    volatile unsigned int reserved_20:12;
} Ifx_GTM_DPLL_NMB_S_TAR_Bits;


typedef struct _Ifx_GTM_DPLL_NMB_S_TAR_OLD_Bits
{
    volatile unsigned int NMB_S_TAR_OLD:20;
    volatile unsigned int reserved_20:12;
} Ifx_GTM_DPLL_NMB_S_TAR_OLD_Bits;


typedef struct _Ifx_GTM_DPLL_NMB_T_Bits
{
    volatile unsigned int NMB_T:16;
    volatile unsigned int reserved_16:16;
} Ifx_GTM_DPLL_NMB_T_Bits;


typedef struct _Ifx_GTM_DPLL_NMB_T_TAR_Bits
{
    volatile unsigned int NMB_T_TAR:16;
    volatile unsigned int reserved_16:16;
} Ifx_GTM_DPLL_NMB_T_TAR_Bits;


typedef struct _Ifx_GTM_DPLL_NMB_T_TAR_OLD_Bits
{
    volatile unsigned int NMB_T_TAR_OLD:16;
    volatile unsigned int reserved_16:16;
} Ifx_GTM_DPLL_NMB_T_TAR_OLD_Bits;


typedef struct _Ifx_GTM_DPLL_NTI_CNT_Bits
{
    volatile unsigned int NTI_CNT:10;
    volatile unsigned int reserved_10:22;
} Ifx_GTM_DPLL_NTI_CNT_Bits;


typedef struct _Ifx_GTM_DPLL_NUSC_Bits
{
    volatile unsigned int NUSE:6;
    volatile unsigned int FSS:1;
    volatile unsigned int SYN_S:6;
    volatile unsigned int SYN_S_OLD:6;
    volatile unsigned int VSN:6;
    volatile unsigned int reserved_25:4;
    volatile unsigned int WNUS:1;
    volatile unsigned int WSYN:1;
    volatile unsigned int WVSN:1;
} Ifx_GTM_DPLL_NUSC_Bits;


typedef struct _Ifx_GTM_DPLL_NUTC_Bits
{
    volatile unsigned int NUTE:10;
    volatile unsigned int FST:1;
    volatile unsigned int reserved_11:2;
    volatile unsigned int SYN_T:3;
    volatile unsigned int SYN_T_OLD:3;
    volatile unsigned int VTN:6;
    volatile unsigned int reserved_25:4;
    volatile unsigned int WNUT:1;
    volatile unsigned int WSYN:1;
    volatile unsigned int WVTN:1;
} Ifx_GTM_DPLL_NUTC_Bits;


typedef struct _Ifx_GTM_DPLL_OSW_Bits
{
    volatile unsigned int SWON_S:1;
    volatile unsigned int SWON_T:1;
    volatile unsigned int reserved_2:6;
    volatile unsigned int OSS:2;
    volatile unsigned int reserved_10:22;
} Ifx_GTM_DPLL_OSW_Bits;


typedef struct _Ifx_GTM_DPLL_PDT_T_Bits
{
    volatile unsigned int DB:14;
    volatile unsigned int DW:10;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_DPLL_PDT_T_Bits;


typedef struct _Ifx_GTM_DPLL_PSA_Bits
{
    volatile unsigned int PSA:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_DPLL_PSA_Bits;


typedef struct _Ifx_GTM_DPLL_PSAC_Bits
{
    volatile unsigned int PSAC:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_DPLL_PSAC_Bits;


typedef struct _Ifx_GTM_DPLL_PSSC_Bits
{
    volatile unsigned int PSSC:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_DPLL_PSSC_Bits;


typedef struct _Ifx_GTM_DPLL_PSSM_0_Bits
{
    volatile unsigned int PSSM:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_DPLL_PSSM_0_Bits;


typedef struct _Ifx_GTM_DPLL_PSSM_1_Bits
{
    volatile unsigned int PSSM:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_DPLL_PSSM_1_Bits;


typedef struct _Ifx_GTM_DPLL_PSTC_Bits
{
    volatile unsigned int PSTC:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_DPLL_PSTC_Bits;


typedef struct _Ifx_GTM_DPLL_PSTM_0_Bits
{
    volatile unsigned int PSTM:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_DPLL_PSTM_0_Bits;


typedef struct _Ifx_GTM_DPLL_PSTM_1_Bits
{
    volatile unsigned int PSTM:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_DPLL_PSTM_1_Bits;


typedef struct _Ifx_GTM_DPLL_PVT_Bits
{
    volatile unsigned int PVT:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_DPLL_PVT_Bits;


typedef struct _Ifx_GTM_DPLL_RAM_INI_Bits
{
    volatile unsigned int INIT_1A:1;
    volatile unsigned int INIT_1B:1;
    volatile unsigned int INIT_2:1;
    volatile unsigned int reserved_3:1;
    volatile unsigned int INIT_RAM:1;
    volatile unsigned int reserved_5:27;
} Ifx_GTM_DPLL_RAM_INI_Bits;


typedef struct _Ifx_GTM_DPLL_RCDT_SX_Bits
{
    volatile unsigned int RCDT_SX:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_DPLL_RCDT_SX_Bits;



typedef struct _Ifx_GTM_DPLL_RCDT_SX_NOM_Bits
{
    volatile unsigned int RCDT_SX_NOM:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_DPLL_RCDT_SX_NOM_Bits;


typedef struct _Ifx_GTM_DPLL_RCDT_TX_Bits
{
    volatile unsigned int RCDT_TX:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_DPLL_RCDT_TX_Bits;



typedef struct _Ifx_GTM_DPLL_RCDT_TX_NOM_Bits
{
    volatile unsigned int RCDT_TX_NOM:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_DPLL_RCDT_TX_NOM_Bits;


typedef struct _Ifx_GTM_DPLL_RDT_S_ACT_Bits
{
    volatile unsigned int RDT_S_ACT:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_DPLL_RDT_S_ACT_Bits;


typedef struct _Ifx_GTM_DPLL_RDT_S_Bits
{
    volatile unsigned int RDT_S:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_DPLL_RDT_S_Bits;


typedef struct _Ifx_GTM_DPLL_RDT_T_ACT_Bits
{
    volatile unsigned int RDT_T_ACT:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_DPLL_RDT_T_ACT_Bits;


typedef struct _Ifx_GTM_DPLL_SLR_Bits
{
    volatile unsigned int SLR:8;
    volatile unsigned int reserved_8:24;
} Ifx_GTM_DPLL_SLR_Bits;


typedef struct _Ifx_GTM_DPLL_STATUS_Bits
{
    volatile unsigned int reserved_0:1;
    volatile unsigned int CSO:1;
    volatile unsigned int reserved_2:1;
    volatile unsigned int CTO:1;
    volatile unsigned int CRO:1;
    volatile unsigned int RCS:1;
    volatile unsigned int RCT:1;
    volatile unsigned int PSE:1;
    volatile unsigned int SOR:1;
    volatile unsigned int MS:1;
    volatile unsigned int TOR:1;
    volatile unsigned int MT:1;
    volatile unsigned int RAM2_ERR:1;
    volatile unsigned int reserved_13:2;
    volatile unsigned int LOW_RES:1;
    volatile unsigned int CSVS:1;
    volatile unsigned int CSVT:1;
    volatile unsigned int CAIP2:1;
    volatile unsigned int CAIP1:1;
    volatile unsigned int ISN:1;
    volatile unsigned int ITN:1;
    volatile unsigned int BWD2:1;
    volatile unsigned int BWD1:1;
    volatile unsigned int reserved_24:1;
    volatile unsigned int LOCK2:1;
    volatile unsigned int SYS:1;
    volatile unsigned int SYT:1;
    volatile unsigned int FSD:1;
    volatile unsigned int FTD:1;
    volatile unsigned int LOCK1:1;
    volatile unsigned int ERR:1;
} Ifx_GTM_DPLL_STATUS_Bits;


typedef struct _Ifx_GTM_DPLL_TBU_TS0_S_Bits
{
    volatile unsigned int TBU_TS0_S:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_DPLL_TBU_TS0_S_Bits;


typedef struct _Ifx_GTM_DPLL_TBU_TS0_T_Bits
{
    volatile unsigned int TBU_TS0_T:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_DPLL_TBU_TS0_T_Bits;


typedef struct _Ifx_GTM_DPLL_THMA_Bits
{
    volatile unsigned int THMA:16;
    volatile unsigned int reserved_16:16;
} Ifx_GTM_DPLL_THMA_Bits;


typedef struct _Ifx_GTM_DPLL_THMI_Bits
{
    volatile unsigned int THMI:16;
    volatile unsigned int reserved_16:16;
} Ifx_GTM_DPLL_THMI_Bits;


typedef struct _Ifx_GTM_DPLL_THVAL_Bits
{
    volatile unsigned int THVAL:16;
    volatile unsigned int reserved_16:16;
} Ifx_GTM_DPLL_THVAL_Bits;


typedef struct _Ifx_GTM_DPLL_TLR_Bits
{
    volatile unsigned int TLR:8;
    volatile unsigned int reserved_8:24;
} Ifx_GTM_DPLL_TLR_Bits;


typedef struct _Ifx_GTM_DPLL_TOV_Bits
{
    volatile unsigned int DB:10;
    volatile unsigned int DW:6;
    volatile unsigned int reserved_16:16;
} Ifx_GTM_DPLL_TOV_Bits;


typedef struct _Ifx_GTM_DPLL_TOV_S_Bits
{
    volatile unsigned int DB:10;
    volatile unsigned int DW:6;
    volatile unsigned int reserved_16:16;
} Ifx_GTM_DPLL_TOV_S_Bits;


typedef struct _Ifx_GTM_DPLL_TS_S_0_Bits
{
    volatile unsigned int STATE_TS:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_DPLL_TS_S_0_Bits;


typedef struct _Ifx_GTM_DPLL_TS_S_1_Bits
{
    volatile unsigned int STATE_TS:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_DPLL_TS_S_1_Bits;


typedef struct _Ifx_GTM_DPLL_TS_T_0_Bits
{
    volatile unsigned int TRIGGER_TS:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_DPLL_TS_T_0_Bits;


typedef struct _Ifx_GTM_DPLL_TS_T_1_Bits
{
    volatile unsigned int TRIGGER_TS:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_DPLL_TS_T_1_Bits;


typedef struct _Ifx_GTM_DPLL_TSAC_Bits
{
    volatile unsigned int TSAC:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_DPLL_TSAC_Bits;


typedef struct _Ifx_GTM_DPLL_TSF_S_Bits
{
    volatile unsigned int TSF_S:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_DPLL_TSF_S_Bits;


typedef struct _Ifx_GTM_DXINCON_Bits
{
    volatile unsigned int IN00:1;
    volatile unsigned int IN01:1;
    volatile unsigned int IN02:1;
    volatile unsigned int IN03:1;
    volatile unsigned int reserved_4:4;
    volatile unsigned int IN10:1;
    volatile unsigned int IN11:1;
    volatile unsigned int IN12:1;
    volatile unsigned int IN13:1;
    volatile unsigned int reserved_12:4;
    volatile unsigned int DSS00:1;
    volatile unsigned int DSS01:1;
    volatile unsigned int DSS02:1;
    volatile unsigned int DSS03:1;
    volatile unsigned int reserved_20:4;
    volatile unsigned int DSS10:1;
    volatile unsigned int DSS11:1;
    volatile unsigned int DSS12:1;
    volatile unsigned int DSS13:1;
    volatile unsigned int reserved_28:4;
} Ifx_GTM_DXINCON_Bits;


typedef struct _Ifx_GTM_DXOUTCON_Bits
{
    volatile unsigned int OUT00:1;
    volatile unsigned int OUT01:1;
    volatile unsigned int OUT02:1;
    volatile unsigned int OUT03:1;
    volatile unsigned int reserved_4:4;
    volatile unsigned int OUT10:1;
    volatile unsigned int OUT11:1;
    volatile unsigned int OUT12:1;
    volatile unsigned int OUT13:1;
    volatile unsigned int reserved_12:20;
} Ifx_GTM_DXOUTCON_Bits;


typedef struct _Ifx_GTM_EIRQ_EN_Bits
{
    volatile unsigned int AEI_TO_XPT_EIRQ_EN:1;
    volatile unsigned int AEI_USP_ADDR_EIRQ_EN:1;
    volatile unsigned int AEI_IM_ADDR_EIRQ_EN:1;
    volatile unsigned int AEI_USP_BE_EIRQ_EN:1;
    volatile unsigned int reserved_4:28;
} Ifx_GTM_EIRQ_EN_Bits;


typedef struct _Ifx_GTM_F2A_ENABLE_Bits
{
    volatile unsigned int STR0_EN:2;
    volatile unsigned int STR1_EN:2;
    volatile unsigned int STR2_EN:2;
    volatile unsigned int STR3_EN:2;
    volatile unsigned int STR4_EN:2;
    volatile unsigned int STR5_EN:2;
    volatile unsigned int STR6_EN:2;
    volatile unsigned int STR7_EN:2;
    volatile unsigned int reserved_16:16;
} Ifx_GTM_F2A_ENABLE_Bits;


typedef struct _Ifx_GTM_F2A_RD_CH_ARU_RD_FIFO_Bits
{
    volatile unsigned int ADDR:9;
    volatile unsigned int reserved_9:23;
} Ifx_GTM_F2A_RD_CH_ARU_RD_FIFO_Bits;


typedef struct _Ifx_GTM_F2A_STR_CH_STR_CFG_Bits
{
    volatile unsigned int reserved_0:16;
    volatile unsigned int TMODE:2;
    volatile unsigned int DIR:1;
    volatile unsigned int reserved_19:13;
} Ifx_GTM_F2A_STR_CH_STR_CFG_Bits;


typedef struct _Ifx_GTM_FIFO_CH_CTRL_Bits
{
    volatile unsigned int RBM:1;
    volatile unsigned int RAP:1;
    volatile unsigned int FLUSH:1;
    volatile unsigned int WULOCK:1;
    volatile unsigned int reserved_4:28;
} Ifx_GTM_FIFO_CH_CTRL_Bits;


typedef struct _Ifx_GTM_FIFO_CH_EIRQ_EN_Bits
{
    volatile unsigned int FIFO_EMPTY_EIRQ_EN:1;
    volatile unsigned int FIFO_FULL_EIRQ_EN:1;
    volatile unsigned int FIFO_LWM_EIRQ_EN:1;
    volatile unsigned int FIFO_UWM_EIRQ_EN:1;
    volatile unsigned int Reserved:28;
} Ifx_GTM_FIFO_CH_EIRQ_EN_Bits;


typedef struct _Ifx_GTM_FIFO_CH_END_ADDR_Bits
{
    volatile unsigned int ADDR:10;
    volatile unsigned int reserved_10:22;
} Ifx_GTM_FIFO_CH_END_ADDR_Bits;


typedef struct _Ifx_GTM_FIFO_CH_FILL_LEVEL_Bits
{
    volatile unsigned int LEVEL:11;
    volatile unsigned int reserved_11:21;
} Ifx_GTM_FIFO_CH_FILL_LEVEL_Bits;


typedef struct _Ifx_GTM_FIFO_CH_IRQ_EN_Bits
{
    volatile unsigned int FIFO_EMPTY_IRQ_EN:1;
    volatile unsigned int FIFO_FULL_IRQ_EN:1;
    volatile unsigned int FIFO_LWM_IRQ_EN:1;
    volatile unsigned int FIFO_UWM_IRQ_EN:1;
    volatile unsigned int reserved_4:28;
} Ifx_GTM_FIFO_CH_IRQ_EN_Bits;


typedef struct _Ifx_GTM_FIFO_CH_IRQ_FORCINT_Bits
{
    volatile unsigned int TRG_FIFO_EMPTY:1;
    volatile unsigned int TRG_FIFO_FULL:1;
    volatile unsigned int TRG_FIFO_LWM:1;
    volatile unsigned int TRG_FIFO_UWM:1;
    volatile unsigned int reserved_4:28;
} Ifx_GTM_FIFO_CH_IRQ_FORCINT_Bits;


typedef struct _Ifx_GTM_FIFO_CH_IRQ_MODE_Bits
{
    volatile unsigned int IRQ_MODE:2;
    volatile unsigned int DMA_HYSTERESIS:1;
    volatile unsigned int DMA_HYST_DIR:1;
    volatile unsigned int reserved_4:28;
} Ifx_GTM_FIFO_CH_IRQ_MODE_Bits;


typedef struct _Ifx_GTM_FIFO_CH_IRQ_NOTIFY_Bits
{
    volatile unsigned int FIFO_EMPTY:1;
    volatile unsigned int FIFO_FULL:1;
    volatile unsigned int FIFO_LWM:1;
    volatile unsigned int FIFO_UWM:1;
    volatile unsigned int reserved_4:28;
} Ifx_GTM_FIFO_CH_IRQ_NOTIFY_Bits;


typedef struct _Ifx_GTM_FIFO_CH_LOWER_WM_Bits
{
    volatile unsigned int ADDR:10;
    volatile unsigned int reserved_10:22;
} Ifx_GTM_FIFO_CH_LOWER_WM_Bits;


typedef struct _Ifx_GTM_FIFO_CH_RD_PTR_Bits
{
    volatile unsigned int ADDR:10;
    volatile unsigned int reserved_10:22;
} Ifx_GTM_FIFO_CH_RD_PTR_Bits;


typedef struct _Ifx_GTM_FIFO_CH_START_ADDR_Bits
{
    volatile unsigned int ADDR:10;
    volatile unsigned int reserved_10:22;
} Ifx_GTM_FIFO_CH_START_ADDR_Bits;


typedef struct _Ifx_GTM_FIFO_CH_STATUS_Bits
{
    volatile unsigned int EMPTY:1;
    volatile unsigned int FULL:1;
    volatile unsigned int LOW_WM:1;
    volatile unsigned int UP_WM:1;
    volatile unsigned int reserved_4:28;
} Ifx_GTM_FIFO_CH_STATUS_Bits;


typedef struct _Ifx_GTM_FIFO_CH_UPPER_WM_Bits
{
    volatile unsigned int ADDR:10;
    volatile unsigned int reserved_10:22;
} Ifx_GTM_FIFO_CH_UPPER_WM_Bits;


typedef struct _Ifx_GTM_FIFO_CH_WR_PTR_Bits
{
    volatile unsigned int ADDR:10;
    volatile unsigned int reserved_10:22;
} Ifx_GTM_FIFO_CH_WR_PTR_Bits;


typedef struct _Ifx_GTM_ICM_IRQG_0_Bits
{
    volatile unsigned int ARU_NEW_DATA0_IRQ:1;
    volatile unsigned int ARU_NEW_DATA1_IRQ:1;
    volatile unsigned int ARU_ACC_ACK_IRQ:1;
    volatile unsigned int BRC_IRQ:1;
    volatile unsigned int AEI_IRQ:1;
    volatile unsigned int CMP_IRQ:1;
    volatile unsigned int SPE0_IRQ:1;
    volatile unsigned int SPE1_IRQ:1;
    volatile unsigned int reserved_8:8;
    volatile unsigned int PSM0_CH0_IRQ:1;
    volatile unsigned int PSM0_CH1_IRQ:1;
    volatile unsigned int PSM0_CH2_IRQ:1;
    volatile unsigned int PSM0_CH3_IRQ:1;
    volatile unsigned int PSM0_CH4_IRQ:1;
    volatile unsigned int PSM0_CH5_IRQ:1;
    volatile unsigned int PSM0_CH6_IRQ:1;
    volatile unsigned int PSM0_CH7_IRQ:1;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_ICM_IRQG_0_Bits;


typedef struct _Ifx_GTM_ICM_IRQG_10_Bits
{
    volatile unsigned int ATOM4_CH0_IRQ:1;
    volatile unsigned int ATOM4_CH1_IRQ:1;
    volatile unsigned int ATOM4_CH2_IRQ:1;
    volatile unsigned int ATOM4_CH3_IRQ:1;
    volatile unsigned int ATOM4_CH4_IRQ:1;
    volatile unsigned int ATOM4_CH5_IRQ:1;
    volatile unsigned int ATOM4_CH6_IRQ:1;
    volatile unsigned int ATOM4_CH7_IRQ:1;
    volatile unsigned int reserved_8:24;
} Ifx_GTM_ICM_IRQG_10_Bits;


typedef struct _Ifx_GTM_ICM_IRQG_1_Bits
{
    volatile unsigned int DPLL_DCG_IRQ:1;
    volatile unsigned int DPLL_EDI_IRQ:1;
    volatile unsigned int DPLL_TIN_IRQ:1;
    volatile unsigned int DPLL_TAX_IRQ:1;
    volatile unsigned int DPLL_SIS_IRQ:1;
    volatile unsigned int DPLL_TIS_IRQ:1;
    volatile unsigned int DPLL_MSI_IRQ:1;
    volatile unsigned int DPLL_MTI_IRQ:1;
    volatile unsigned int DPLL_SAS_IRQ:1;
    volatile unsigned int DPLL_TAS_IRQ:1;
    volatile unsigned int DPLL_PWI_IRQ:1;
    volatile unsigned int DPLL_W2I_IRQ:1;
    volatile unsigned int DPLL_W1I_IRQ:1;
    volatile unsigned int DPLL_GLI_IRQ:1;
    volatile unsigned int DPLL_LLI_IRQ:1;
    volatile unsigned int DPLL_EI_IRQ:1;
    volatile unsigned int DPLL_GL2I_IRQ:1;
    volatile unsigned int DPLL_LL2I_IRQ:1;
    volatile unsigned int DPLL_TE0_IRQ:1;
    volatile unsigned int DPLL_TE1_IRQ:1;
    volatile unsigned int DPLL_TE2_IRQ:1;
    volatile unsigned int DPLL_TE3_IRQ:1;
    volatile unsigned int DPLL_TE4_IRQ:1;
    volatile unsigned int DPLL_CDIT_IRQ:1;
    volatile unsigned int DPLL_CDIS_IRQ:1;
    volatile unsigned int DPLL_TORI_IRQ:1;
    volatile unsigned int DPLL_SORI_IRQ:1;
    volatile unsigned int reserved_27:5;
} Ifx_GTM_ICM_IRQG_1_Bits;


typedef struct _Ifx_GTM_ICM_IRQG_2_Bits
{
    volatile unsigned int TIM0_CH0_IRQ:1;
    volatile unsigned int TIM0_CH1_IRQ:1;
    volatile unsigned int TIM0_CH2_IRQ:1;
    volatile unsigned int TIM0_CH3_IRQ:1;
    volatile unsigned int TIM0_CH4_IRQ:1;
    volatile unsigned int TIM0_CH5_IRQ:1;
    volatile unsigned int TIM0_CH6_IRQ:1;
    volatile unsigned int TIM0_CH7_IRQ:1;
    volatile unsigned int TIM1_CH0_IRQ:1;
    volatile unsigned int TIM1_CH1_IRQ:1;
    volatile unsigned int TIM1_CH2_IRQ:1;
    volatile unsigned int TIM1_CH3_IRQ:1;
    volatile unsigned int TIM1_CH4_IRQ:1;
    volatile unsigned int TIM1_CH5_IRQ:1;
    volatile unsigned int TIM1_CH6_IRQ:1;
    volatile unsigned int TIM1_CH7_IRQ:1;
    volatile unsigned int TIM2_CH0_IRQ:1;
    volatile unsigned int TIM2_CH1_IRQ:1;
    volatile unsigned int TIM2_CH2_IRQ:1;
    volatile unsigned int TIM2_CH3_IRQ:1;
    volatile unsigned int TIM2_CH4_IRQ:1;
    volatile unsigned int TIM2_CH5_IRQ:1;
    volatile unsigned int TIM2_CH6_IRQ:1;
    volatile unsigned int TIM2_CH7_IRQ:1;
    volatile unsigned int TIM3_CH0_IRQ:1;
    volatile unsigned int TIM3_CH1_IRQ:1;
    volatile unsigned int TIM3_CH2_IRQ:1;
    volatile unsigned int TIM3_CH3_IRQ:1;
    volatile unsigned int TIM3_CH4_IRQ:1;
    volatile unsigned int TIM3_CH5_IRQ:1;
    volatile unsigned int TIM3_CH6_IRQ:1;
    volatile unsigned int TIM3_CH7_IRQ:1;
} Ifx_GTM_ICM_IRQG_2_Bits;


typedef struct _Ifx_GTM_ICM_IRQG_4_Bits
{
    volatile unsigned int MCS0_CH0_IRQ:1;
    volatile unsigned int MCS0_CH1_IRQ:1;
    volatile unsigned int MCS0_CH2_IRQ:1;
    volatile unsigned int MCS0_CH3_IRQ:1;
    volatile unsigned int MCS0_CH4_IRQ:1;
    volatile unsigned int MCS0_CH5_IRQ:1;
    volatile unsigned int MCS0_CH6_IRQ:1;
    volatile unsigned int MCS0_CH7_IRQ:1;
    volatile unsigned int MCS1_CH0_IRQ:1;
    volatile unsigned int MCS1_CH1_IRQ:1;
    volatile unsigned int MCS1_CH2_IRQ:1;
    volatile unsigned int MCS1_CH3_IRQ:1;
    volatile unsigned int MCS1_CH4_IRQ:1;
    volatile unsigned int MCS1_CH5_IRQ:1;
    volatile unsigned int MCS1_CH6_IRQ:1;
    volatile unsigned int MCS1_CH7_IRQ:1;
    volatile unsigned int MCS2_CH0_IRQ:1;
    volatile unsigned int MCS2_CH1_IRQ:1;
    volatile unsigned int MCS2_CH2_IRQ:1;
    volatile unsigned int MCS2_CH3_IRQ:1;
    volatile unsigned int MCS2_CH4_IRQ:1;
    volatile unsigned int MCS2_CH5_IRQ:1;
    volatile unsigned int MCS2_CH6_IRQ:1;
    volatile unsigned int MCS2_CH7_IRQ:1;
    volatile unsigned int MCS3_CH0_IRQ:1;
    volatile unsigned int MCS3_CH1_IRQ:1;
    volatile unsigned int MCS3_CH2_IRQ:1;
    volatile unsigned int MCS3_CH3_IRQ:1;
    volatile unsigned int MCS3_CH4_IRQ:1;
    volatile unsigned int MCS3_CH5_IRQ:1;
    volatile unsigned int MCS3_CH6_IRQ:1;
    volatile unsigned int MCS3_CH7_IRQ:1;
} Ifx_GTM_ICM_IRQG_4_Bits;


typedef struct _Ifx_GTM_ICM_IRQG_6_Bits
{
    volatile unsigned int TOM0_CH0_IRQ:1;
    volatile unsigned int TOM0_CH1_IRQ:1;
    volatile unsigned int TOM0_CH2_IRQ:1;
    volatile unsigned int TOM0_CH3_IRQ:1;
    volatile unsigned int TOM0_CH4_IRQ:1;
    volatile unsigned int TOM0_CH5_IRQ:1;
    volatile unsigned int TOM0_CH6_IRQ:1;
    volatile unsigned int TOM0_CH7_IRQ:1;
    volatile unsigned int TOM0_CH8_IRQ:1;
    volatile unsigned int TOM0_CH9_IRQ:1;
    volatile unsigned int TOM0_CH10_IRQ:1;
    volatile unsigned int TOM0_CH11_IRQ:1;
    volatile unsigned int TOM0_CH12_IRQ:1;
    volatile unsigned int TOM0_CH13_IRQ:1;
    volatile unsigned int TOM0_CH14_IRQ:1;
    volatile unsigned int TOM0_CH15_IRQ:1;
    volatile unsigned int TOM1_CH0_IRQ:1;
    volatile unsigned int TOM1_CH1_IRQ:1;
    volatile unsigned int TOM1_CH2_IRQ:1;
    volatile unsigned int TOM1_CH3_IRQ:1;
    volatile unsigned int TOM1_CH4_IRQ:1;
    volatile unsigned int TOM1_CH5_IRQ:1;
    volatile unsigned int TOM1_CH6_IRQ:1;
    volatile unsigned int TOM1_CH7_IRQ:1;
    volatile unsigned int TOM1_CH8_IRQ:1;
    volatile unsigned int TOM1_CH9_IRQ:1;
    volatile unsigned int TOM1_CH10_IRQ:1;
    volatile unsigned int TOM1_CH11_IRQ:1;
    volatile unsigned int TOM1_CH12_IRQ:1;
    volatile unsigned int TOM1_CH13_IRQ:1;
    volatile unsigned int TOM1_CH14_IRQ:1;
    volatile unsigned int TOM1_CH15_IRQ:1;
} Ifx_GTM_ICM_IRQG_6_Bits;


typedef struct _Ifx_GTM_ICM_IRQG_7_Bits
{
    volatile unsigned int TOM2_CH0_IRQ:1;
    volatile unsigned int TOM2_CH1_IRQ:1;
    volatile unsigned int TOM2_CH2_IRQ:1;
    volatile unsigned int TOM2_CH3_IRQ:1;
    volatile unsigned int TOM2_CH4_IRQ:1;
    volatile unsigned int TOM2_CH5_IRQ:1;
    volatile unsigned int TOM2_CH6_IRQ:1;
    volatile unsigned int TOM2_CH7_IRQ:1;
    volatile unsigned int TOM2_CH8_IRQ:1;
    volatile unsigned int TOM2_CH9_IRQ:1;
    volatile unsigned int TOM2_CH10_IRQ:1;
    volatile unsigned int TOM2_CH11_IRQ:1;
    volatile unsigned int TOM2_CH12_IRQ:1;
    volatile unsigned int TOM2_CH13_IRQ:1;
    volatile unsigned int TOM2_CH14_IRQ:1;
    volatile unsigned int TOM2_CH15_IRQ:1;
    volatile unsigned int reserved_16:16;
} Ifx_GTM_ICM_IRQG_7_Bits;


typedef struct _Ifx_GTM_ICM_IRQG_9_Bits
{
    volatile unsigned int ATOM0_CH0_IRQ:1;
    volatile unsigned int ATOM0_CH1_IRQ:1;
    volatile unsigned int ATOM0_CH2_IRQ:1;
    volatile unsigned int ATOM0_CH3_IRQ:1;
    volatile unsigned int ATOM0_CH4_IRQ:1;
    volatile unsigned int ATOM0_CH5_IRQ:1;
    volatile unsigned int ATOM0_CH6_IRQ:1;
    volatile unsigned int ATOM0_CH7_IRQ:1;
    volatile unsigned int ATOM1_CH0_IRQ:1;
    volatile unsigned int ATOM1_CH1_IRQ:1;
    volatile unsigned int ATOM1_CH2_IRQ:1;
    volatile unsigned int ATOM1_CH3_IRQ:1;
    volatile unsigned int ATOM1_CH4_IRQ:1;
    volatile unsigned int ATOM1_CH5_IRQ:1;
    volatile unsigned int ATOM1_CH6_IRQ:1;
    volatile unsigned int ATOM1_CH7_IRQ:1;
    volatile unsigned int ATOM2_CH0_IRQ:1;
    volatile unsigned int ATOM2_CH1_IRQ:1;
    volatile unsigned int ATOM2_CH2_IRQ:1;
    volatile unsigned int ATOM2_CH3_IRQ:1;
    volatile unsigned int ATOM2_CH4_IRQ:1;
    volatile unsigned int ATOM2_CH5_IRQ:1;
    volatile unsigned int ATOM2_CH6_IRQ:1;
    volatile unsigned int ATOM2_CH7_IRQ:1;
    volatile unsigned int ATOM3_CH0_IRQ:1;
    volatile unsigned int ATOM3_CH1_IRQ:1;
    volatile unsigned int ATOM3_CH2_IRQ:1;
    volatile unsigned int ATOM3_CH3_IRQ:1;
    volatile unsigned int ATOM3_CH4_IRQ:1;
    volatile unsigned int ATOM3_CH5_IRQ:1;
    volatile unsigned int ATOM3_CH6_IRQ:1;
    volatile unsigned int ATOM3_CH7_IRQ:1;
} Ifx_GTM_ICM_IRQG_9_Bits;


typedef struct _Ifx_GTM_ICM_IRQG_CEI0_Bits
{
    volatile unsigned int FIFO0_CH0_EIRQ:1;
    volatile unsigned int FIFO0_CH1_EIRQ:1;
    volatile unsigned int FIFO0_CH2_EIRQ:1;
    volatile unsigned int FIFO0_CH3_EIRQ:1;
    volatile unsigned int FIFO0_CH4_EIRQ:1;
    volatile unsigned int FIFO0_CH5_EIRQ:1;
    volatile unsigned int FIFO0_CH6_EIRQ:1;
    volatile unsigned int FIFO0_CH7_EIRQ:1;
    volatile unsigned int reserved_8:24;
} Ifx_GTM_ICM_IRQG_CEI0_Bits;


typedef struct _Ifx_GTM_ICM_IRQG_CEI1_Bits
{
    volatile unsigned int TIM0_CH0_EIRQ:1;
    volatile unsigned int TIM0_CH1_EIRQ:1;
    volatile unsigned int TIM0_CH2_EIRQ:1;
    volatile unsigned int TIM0_CH3_EIRQ:1;
    volatile unsigned int TIM0_CH4_EIRQ:1;
    volatile unsigned int TIM0_CH5_EIRQ:1;
    volatile unsigned int TIM0_CH6_EIRQ:1;
    volatile unsigned int TIM0_CH7_EIRQ:1;
    volatile unsigned int TIM1_CH0_EIRQ:1;
    volatile unsigned int TIM1_CH1_EIRQ:1;
    volatile unsigned int TIM1_CH2_EIRQ:1;
    volatile unsigned int TIM1_CH3_EIRQ:1;
    volatile unsigned int TIM1_CH4_EIRQ:1;
    volatile unsigned int TIM1_CH5_EIRQ:1;
    volatile unsigned int TIM1_CH6_EIRQ:1;
    volatile unsigned int TIM1_CH7_EIRQ:1;
    volatile unsigned int TIM2_CH0_EIRQ:1;
    volatile unsigned int TIM2_CH1_EIRQ:1;
    volatile unsigned int TIM2_CH2_EIRQ:1;
    volatile unsigned int TIM2_CH3_EIRQ:1;
    volatile unsigned int TIM2_CH4_EIRQ:1;
    volatile unsigned int TIM2_CH5_EIRQ:1;
    volatile unsigned int TIM2_CH6_EIRQ:1;
    volatile unsigned int TIM2_CH7_EIRQ:1;
    volatile unsigned int TIM3_CH0_EIRQ:1;
    volatile unsigned int TIM3_CH1_EIRQ:1;
    volatile unsigned int TIM3_CH2_EIRQ:1;
    volatile unsigned int TIM3_CH3_EIRQ:1;
    volatile unsigned int TIM3_CH4_EIRQ:1;
    volatile unsigned int TIM3_CH5_IRQ:1;
    volatile unsigned int TIM3_CH6_EIRQ:1;
    volatile unsigned int TIM3_CH7_EIRQ:1;
} Ifx_GTM_ICM_IRQG_CEI1_Bits;


typedef struct _Ifx_GTM_ICM_IRQG_CEI3_Bits
{
    volatile unsigned int MCS0_CH0_EIRQ:1;
    volatile unsigned int MCS0_CH1_EIRQ:1;
    volatile unsigned int MCS0_CH2_EIRQ:1;
    volatile unsigned int MCS0_CH3_EIRQ:1;
    volatile unsigned int MCS0_CH4_EIRQ:1;
    volatile unsigned int MCS0_CH5_EIRQ:1;
    volatile unsigned int MCS0_CH6_EIRQ:1;
    volatile unsigned int MCS0_CH7_EIRQ:1;
    volatile unsigned int MCS1_CH0_EIRQ:1;
    volatile unsigned int MCS1_CH1_EIRQ:1;
    volatile unsigned int MCS1_CH2_EIRQ:1;
    volatile unsigned int MCS1_CH3_EIRQ:1;
    volatile unsigned int MCS1_CH4_EIRQ:1;
    volatile unsigned int MCS1_CH5_EIRQ:1;
    volatile unsigned int MCS1_CH6_EIRQ:1;
    volatile unsigned int MCS1_CH7_EIRQ:1;
    volatile unsigned int MCS2_CH0_EIRQ:1;
    volatile unsigned int MCS2_CH1_EIRQ:1;
    volatile unsigned int MCS2_CH2_EIRQ:1;
    volatile unsigned int MCS2_CH3_EIRQ:1;
    volatile unsigned int MCS2_CH4_EIRQ:1;
    volatile unsigned int MCS2_CH5_EIRQ:1;
    volatile unsigned int MCS2_CH6_EIRQ:1;
    volatile unsigned int MCS2_CH7_EIRQ:1;
    volatile unsigned int MCS3_CH0_EIRQ:1;
    volatile unsigned int MCS3_CH1_EIRQ:1;
    volatile unsigned int MCS3_CH2_EIRQ:1;
    volatile unsigned int MCS3_CH3_EIRQ:1;
    volatile unsigned int MCS3_CH4_EIRQ:1;
    volatile unsigned int MCS3_CH5_EIRQ:1;
    volatile unsigned int MCS3_CH6_EIRQ:1;
    volatile unsigned int MCS3_CH7_EIRQ:1;
} Ifx_GTM_ICM_IRQG_CEI3_Bits;


typedef struct _Ifx_GTM_ICM_IRQG_MEI_Bits
{
    volatile unsigned int GTM_EIRQ:1;
    volatile unsigned int BRC_EIRQ:1;
    volatile unsigned int FIFO0_EIRQ:1;
    volatile unsigned int reserved_3:1;
    volatile unsigned int TIM0_EIRQ:1;
    volatile unsigned int TIM1_EIRQ:1;
    volatile unsigned int TIM2_EIRQ:1;
    volatile unsigned int TIM3_EIRQ:1;
    volatile unsigned int reserved_8:4;
    volatile unsigned int MCS0_EIRQ:1;
    volatile unsigned int MCS1_EIRQ:1;
    volatile unsigned int MCS2_EIRQ:1;
    volatile unsigned int MCS3_EIRQ:1;
    volatile unsigned int reserved_16:4;
    volatile unsigned int SPE0_EIRQ:1;
    volatile unsigned int SPE1_EIRQ:1;
    volatile unsigned int reserved_22:2;
    volatile unsigned int CMP_EIRQ:1;
    volatile unsigned int DPLL_EIRQ:1;
    volatile unsigned int reserved_26:6;
} Ifx_GTM_ICM_IRQG_MEI_Bits;


typedef struct _Ifx_GTM_INOUTSEL_CAN_OUTSEL_Bits
{
    volatile unsigned int SEL0:4;
    volatile unsigned int SEL1:4;
    volatile unsigned int SEL2:4;
    volatile unsigned int SEL3:4;
    volatile unsigned int SEL4:4;
    volatile unsigned int SEL5:4;
    volatile unsigned int SEL6:4;
    volatile unsigned int SEL7:4;
} Ifx_GTM_INOUTSEL_CAN_OUTSEL_Bits;


typedef struct _Ifx_GTM_INOUTSEL_DSADC_INSEL_Bits
{
    volatile unsigned int INSEL0:4;
    volatile unsigned int INSEL1:4;
    volatile unsigned int INSEL2:4;
    volatile unsigned int INSEL3:4;
    volatile unsigned int INSEL4:4;
    volatile unsigned int INSEL5:4;
    volatile unsigned int INSEL6:4;
    volatile unsigned int INSEL7:4;
} Ifx_GTM_INOUTSEL_DSADC_INSEL_Bits;


typedef struct _Ifx_GTM_INOUTSEL_DSADC_OUTSEL0_Bits
{
    volatile unsigned int SEL0:3;
    volatile unsigned int reserved_3:1;
    volatile unsigned int SEL1:3;
    volatile unsigned int reserved_7:1;
    volatile unsigned int SEL2:3;
    volatile unsigned int reserved_11:1;
    volatile unsigned int SEL3:3;
    volatile unsigned int reserved_15:1;
    volatile unsigned int SEL4:3;
    volatile unsigned int reserved_19:1;
    volatile unsigned int SEL5:3;
    volatile unsigned int reserved_23:9;
} Ifx_GTM_INOUTSEL_DSADC_OUTSEL0_Bits;


typedef struct _Ifx_GTM_INOUTSEL_PSI5_OUTSEL0_Bits
{
    volatile unsigned int SEL0:4;
    volatile unsigned int SEL1:4;
    volatile unsigned int SEL2:4;
    volatile unsigned int SEL3:4;
    volatile unsigned int SEL4:4;
    volatile unsigned int SEL5:4;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_INOUTSEL_PSI5_OUTSEL0_Bits;


typedef struct _Ifx_GTM_INOUTSEL_PSI5S_OUTSEL_Bits
{
    volatile unsigned int SEL0:4;
    volatile unsigned int SEL1:4;
    volatile unsigned int SEL2:4;
    volatile unsigned int SEL3:4;
    volatile unsigned int SEL4:4;
    volatile unsigned int SEL5:4;
    volatile unsigned int SEL6:4;
    volatile unsigned int SEL7:4;
} Ifx_GTM_INOUTSEL_PSI5S_OUTSEL_Bits;


typedef struct _Ifx_GTM_INOUTSEL_T_OUTSEL_Bits
{
    volatile unsigned int SEL0:2;
    volatile unsigned int SEL1:2;
    volatile unsigned int SEL2:2;
    volatile unsigned int SEL3:2;
    volatile unsigned int SEL4:2;
    volatile unsigned int SEL5:2;
    volatile unsigned int SEL6:2;
    volatile unsigned int SEL7:2;
    volatile unsigned int SEL8:2;
    volatile unsigned int SEL9:2;
    volatile unsigned int SEL10:2;
    volatile unsigned int SEL11:2;
    volatile unsigned int SEL12:2;
    volatile unsigned int SEL13:2;
    volatile unsigned int SEL14:2;
    volatile unsigned int SEL15:2;
} Ifx_GTM_INOUTSEL_T_OUTSEL_Bits;


typedef struct _Ifx_GTM_INOUTSEL_TIM_INSEL_Bits
{
    volatile unsigned int CH0SEL:4;
    volatile unsigned int CH1SEL:4;
    volatile unsigned int CH2SEL:4;
    volatile unsigned int CH3SEL:4;
    volatile unsigned int CH4SEL:4;
    volatile unsigned int CH5SEL:4;
    volatile unsigned int CH6SEL:4;
    volatile unsigned int CH7SEL:4;
} Ifx_GTM_INOUTSEL_TIM_INSEL_Bits;


typedef struct _Ifx_GTM_IRQ_EN_Bits
{
    volatile unsigned int AEI_TO_XPT_IRQ_EN:1;
    volatile unsigned int AEI_USP_ADDR_IRQ_EN:1;
    volatile unsigned int AEI_IM_ADDR_IRQ_EN:1;
    volatile unsigned int AEI_USP_BE_IRQ_EN:1;
    volatile unsigned int reserved_4:28;
} Ifx_GTM_IRQ_EN_Bits;


typedef struct _Ifx_GTM_IRQ_FORCINT_Bits
{
    volatile unsigned int TRG_AEI_TO_XPT:1;
    volatile unsigned int TRG_AEI_USP_ADDR:1;
    volatile unsigned int TRG_AEI_IM_ADDR:1;
    volatile unsigned int TRG_AEI_USP_BE:1;
    volatile unsigned int reserved_4:28;
} Ifx_GTM_IRQ_FORCINT_Bits;


typedef struct _Ifx_GTM_IRQ_MODE_Bits
{
    volatile unsigned int IRQ_MODE:2;
    volatile unsigned int reserved_2:30;
} Ifx_GTM_IRQ_MODE_Bits;


typedef struct _Ifx_GTM_IRQ_NOTIFY_Bits
{
    volatile unsigned int AEI_TO_XPT:1;
    volatile unsigned int AEI_USP_ADDR:1;
    volatile unsigned int AEI_IM_ADDR:1;
    volatile unsigned int AEI_USP_BE:1;
    volatile unsigned int reserved_4:28;
} Ifx_GTM_IRQ_NOTIFY_Bits;


typedef struct _Ifx_GTM_KRST0_Bits
{
    volatile unsigned int RST:1;
    volatile unsigned int RSTSTAT:1;
    volatile unsigned int reserved_2:30;
} Ifx_GTM_KRST0_Bits;


typedef struct _Ifx_GTM_KRST1_Bits
{
    volatile unsigned int RST:1;
    volatile unsigned int reserved_1:31;
} Ifx_GTM_KRST1_Bits;


typedef struct _Ifx_GTM_KRSTCLR_Bits
{
    volatile unsigned int CLR:1;
    volatile unsigned int reserved_1:31;
} Ifx_GTM_KRSTCLR_Bits;


typedef struct _Ifx_GTM_MAP_CTRL_Bits
{
    volatile unsigned int TSEL:1;
    volatile unsigned int SSL:3;
    volatile unsigned int LSEL:1;
    volatile unsigned int reserved_5:11;
    volatile unsigned int TSPP0_EN:1;
    volatile unsigned int TSPP0_DLD:1;
    volatile unsigned int reserved_18:2;
    volatile unsigned int TSPP0_I0V:1;
    volatile unsigned int TSPP0_I1V:1;
    volatile unsigned int TSPP0_I2V:1;
    volatile unsigned int reserved_23:1;
    volatile unsigned int TSPP1_EN:1;
    volatile unsigned int TSPP1_DLD:1;
    volatile unsigned int reserved_26:2;
    volatile unsigned int TSPP1_I0V:1;
    volatile unsigned int TSPP1_I1V:1;
    volatile unsigned int TSPP1_I2V:1;
    volatile unsigned int reserved_31:1;
} Ifx_GTM_MAP_CTRL_Bits;


typedef struct _Ifx_GTM_MCFG_CTRL_Bits
{
    volatile unsigned int MEM0:2;
    volatile unsigned int MEM1:2;
    volatile unsigned int MEM2:2;
    volatile unsigned int MEM3:2;
    volatile unsigned int reserved_8:24;
} Ifx_GTM_MCFG_CTRL_Bits;


typedef struct _Ifx_GTM_MCS_CH0_CTRG_Bits
{
    volatile unsigned int TRG0:1;
    volatile unsigned int TRG1:1;
    volatile unsigned int TRG2:1;
    volatile unsigned int TRG3:1;
    volatile unsigned int TRG4:1;
    volatile unsigned int TRG5:1;
    volatile unsigned int TRG6:1;
    volatile unsigned int TRG7:1;
    volatile unsigned int TRG8:1;
    volatile unsigned int TRG9:1;
    volatile unsigned int TRG10:1;
    volatile unsigned int TRG11:1;
    volatile unsigned int TRG12:1;
    volatile unsigned int TRG13:1;
    volatile unsigned int TRG14:1;
    volatile unsigned int TRG15:1;
    volatile unsigned int reserved_16:16;
} Ifx_GTM_MCS_CH0_CTRG_Bits;


typedef struct _Ifx_GTM_MCS_CH0_STRG_Bits
{
    volatile unsigned int TRG0:1;
    volatile unsigned int TRG1:1;
    volatile unsigned int TRG2:1;
    volatile unsigned int TRG3:1;
    volatile unsigned int TRG4:1;
    volatile unsigned int TRG5:1;
    volatile unsigned int TRG6:1;
    volatile unsigned int TRG7:1;
    volatile unsigned int TRG8:1;
    volatile unsigned int TRG9:1;
    volatile unsigned int TRG10:1;
    volatile unsigned int TRG11:1;
    volatile unsigned int TRG12:1;
    volatile unsigned int TRG13:1;
    volatile unsigned int TRG14:1;
    volatile unsigned int TRG15:1;
    volatile unsigned int reserved_16:16;
} Ifx_GTM_MCS_CH0_STRG_Bits;


typedef struct _Ifx_GTM_MCS_CH_ACB_Bits
{
    volatile unsigned int ACB0:1;
    volatile unsigned int ACB1:1;
    volatile unsigned int ACB2:1;
    volatile unsigned int ACB3:1;
    volatile unsigned int ACB4:1;
    volatile unsigned int reserved_5:27;
} Ifx_GTM_MCS_CH_ACB_Bits;


typedef struct _Ifx_GTM_MCS_CH_CTRL_Bits
{
    volatile unsigned int EN:1;
    volatile unsigned int IRQ:1;
    volatile unsigned int ERR:1;
    volatile unsigned int reserved_3:1;
    volatile unsigned int CY:1;
    volatile unsigned int Z:1;
    volatile unsigned int V:1;
    volatile unsigned int N:1;
    volatile unsigned int CAT:1;
    volatile unsigned int CWT:1;
    volatile unsigned int reserved_10:6;
    volatile unsigned int SP_CNT:3;
    volatile unsigned int reserved_19:13;
} Ifx_GTM_MCS_CH_CTRL_Bits;


typedef struct _Ifx_GTM_MCS_CH_EIRQ_EN_Bits
{
    volatile unsigned int MCS_EIRQ_EN:1;
    volatile unsigned int STK_ERR_EIRQ_EN:1;
    volatile unsigned int MEM_ERR_EIRQ_EN:1;
    volatile unsigned int reserved_3:29;
} Ifx_GTM_MCS_CH_EIRQ_EN_Bits;


typedef struct _Ifx_GTM_MCS_CH_IRQ_EN_Bits
{
    volatile unsigned int MCS_IRQ_EN:1;
    volatile unsigned int STK_ERR_IRQ_EN:1;
    volatile unsigned int MEM_ERR_IRQ_EN:1;
    volatile unsigned int reserved_3:29;
} Ifx_GTM_MCS_CH_IRQ_EN_Bits;


typedef struct _Ifx_GTM_MCS_CH_IRQ_FORCINT_Bits
{
    volatile unsigned int TRG_MCS_IRQ:1;
    volatile unsigned int TRG_STK_ERR_IRQ:1;
    volatile unsigned int TRG_MEM_ERR_IRQ:1;
    volatile unsigned int reserved_3:29;
} Ifx_GTM_MCS_CH_IRQ_FORCINT_Bits;


typedef struct _Ifx_GTM_MCS_CH_IRQ_MODE_Bits
{
    volatile unsigned int IRQ_MODE:2;
    volatile unsigned int reserved_2:30;
} Ifx_GTM_MCS_CH_IRQ_MODE_Bits;


typedef struct _Ifx_GTM_MCS_CH_IRQ_NOTIFY_Bits
{
    volatile unsigned int MCS_IRQ:1;
    volatile unsigned int STK_ERR_IRQ:1;
    volatile unsigned int MEM_ERR_IRQ:1;
    volatile unsigned int reserved_3:29;
} Ifx_GTM_MCS_CH_IRQ_NOTIFY_Bits;


typedef struct _Ifx_GTM_MCS_CH_PC_Bits
{
    volatile unsigned int PC:14;
    volatile unsigned int reserved_14:18;
} Ifx_GTM_MCS_CH_PC_Bits;


typedef struct _Ifx_GTM_MCS_CH_R0_Bits
{
    volatile unsigned int DATA:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_MCS_CH_R0_Bits;


typedef struct _Ifx_GTM_MCS_CH_R1_Bits
{
    volatile unsigned int DATA:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_MCS_CH_R1_Bits;


typedef struct _Ifx_GTM_MCS_CH_R2_Bits
{
    volatile unsigned int DATA:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_MCS_CH_R2_Bits;


typedef struct _Ifx_GTM_MCS_CH_R3_Bits
{
    volatile unsigned int DATA:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_MCS_CH_R3_Bits;


typedef struct _Ifx_GTM_MCS_CH_R4_Bits
{
    volatile unsigned int DATA:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_MCS_CH_R4_Bits;


typedef struct _Ifx_GTM_MCS_CH_R5_Bits
{
    volatile unsigned int DATA:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_MCS_CH_R5_Bits;


typedef struct _Ifx_GTM_MCS_CH_R6_Bits
{
    volatile unsigned int DATA:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_MCS_CH_R6_Bits;


typedef struct _Ifx_GTM_MCS_CH_R7_Bits
{
    volatile unsigned int DATA:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_MCS_CH_R7_Bits;


typedef struct _Ifx_GTM_MCS_CTRL_Bits
{
    volatile unsigned int SCHED:1;
    volatile unsigned int HLT_SP_OFL:1;
    volatile unsigned int reserved_2:14;
    volatile unsigned int RAM_RST:1;
    volatile unsigned int reserved_17:15;
} Ifx_GTM_MCS_CTRL_Bits;


typedef struct _Ifx_GTM_MCS_ERR_Bits
{
    volatile unsigned int ERR0:1;
    volatile unsigned int ERR1:1;
    volatile unsigned int ERR2:1;
    volatile unsigned int ERR3:1;
    volatile unsigned int ERR4:1;
    volatile unsigned int ERR5:1;
    volatile unsigned int ERR6:1;
    volatile unsigned int ERR7:1;
    volatile unsigned int reserved_8:24;
} Ifx_GTM_MCS_ERR_Bits;


typedef struct _Ifx_GTM_MCS_RST_Bits
{
    volatile unsigned int RST0:1;
    volatile unsigned int RST1:1;
    volatile unsigned int RST2:1;
    volatile unsigned int RST3:1;
    volatile unsigned int RST4:1;
    volatile unsigned int RST5:1;
    volatile unsigned int RST6:1;
    volatile unsigned int RST7:1;
    volatile unsigned int CAT0:1;
    volatile unsigned int CAT1:1;
    volatile unsigned int CAT2:1;
    volatile unsigned int CAT3:1;
    volatile unsigned int CAT4:1;
    volatile unsigned int CAT5:1;
    volatile unsigned int CAT6:1;
    volatile unsigned int CAT7:1;
    volatile unsigned int CWT0:1;
    volatile unsigned int CWT1:1;
    volatile unsigned int CWT2:1;
    volatile unsigned int CWT3:1;
    volatile unsigned int CWT4:1;
    volatile unsigned int CWT5:1;
    volatile unsigned int CWT6:1;
    volatile unsigned int CWT7:1;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_MCS_RST_Bits;


typedef struct _Ifx_GTM_MCSINTCLR_Bits
{
    volatile unsigned int MCS000:1;
    volatile unsigned int MCS001:1;
    volatile unsigned int MCS010:1;
    volatile unsigned int MCS011:1;
    volatile unsigned int MCS100:1;
    volatile unsigned int MCS101:1;
    volatile unsigned int MCS110:1;
    volatile unsigned int MCS111:1;
    volatile unsigned int MCS200:1;
    volatile unsigned int MCS201:1;
    volatile unsigned int MCS210:1;
    volatile unsigned int MCS211:1;
    volatile unsigned int MCS300:1;
    volatile unsigned int MCS301:1;
    volatile unsigned int MCS310:1;
    volatile unsigned int MCS311:1;
    volatile unsigned int reserved_16:16;
} Ifx_GTM_MCSINTCLR_Bits;


typedef struct _Ifx_GTM_MCSINTSTAT_Bits
{
    volatile unsigned int MCS000:1;
    volatile unsigned int MCS001:1;
    volatile unsigned int MCS010:1;
    volatile unsigned int MCS011:1;
    volatile unsigned int MCS100:1;
    volatile unsigned int MCS101:1;
    volatile unsigned int MCS110:1;
    volatile unsigned int MCS111:1;
    volatile unsigned int MCS200:1;
    volatile unsigned int MCS201:1;
    volatile unsigned int MCS210:1;
    volatile unsigned int MCS211:1;
    volatile unsigned int MCS300:1;
    volatile unsigned int MCS301:1;
    volatile unsigned int MCS310:1;
    volatile unsigned int MCS311:1;
    volatile unsigned int reserved_16:16;
} Ifx_GTM_MCSINTSTAT_Bits;


typedef struct _Ifx_GTM_MON_ACTIVITY_0_Bits
{
    volatile unsigned int MCA_0_0:1;
    volatile unsigned int MCA_0_1:1;
    volatile unsigned int MCA_0_2:1;
    volatile unsigned int MCA_0_3:1;
    volatile unsigned int MCA_0_4:1;
    volatile unsigned int MCA_0_5:1;
    volatile unsigned int MCA_0_6:1;
    volatile unsigned int MCA_0_7:1;
    volatile unsigned int MCA_1_0:1;
    volatile unsigned int MCA_1_1:1;
    volatile unsigned int MCA_1_2:1;
    volatile unsigned int MCA_1_3:1;
    volatile unsigned int MCA_1_4:1;
    volatile unsigned int MCA_1_5:1;
    volatile unsigned int MCA_1_6:1;
    volatile unsigned int MCA_1_7:1;
    volatile unsigned int MCA_2_0:1;
    volatile unsigned int MCA_2_1:1;
    volatile unsigned int MCA_2_2:1;
    volatile unsigned int MCA_2_3:1;
    volatile unsigned int MCA_2_4:1;
    volatile unsigned int MCA_2_5:1;
    volatile unsigned int MCA_2_6:1;
    volatile unsigned int MCA_2_7:1;
    volatile unsigned int MCA_3_0:1;
    volatile unsigned int MCA_3_1:1;
    volatile unsigned int MCA_3_2:1;
    volatile unsigned int MCA_3_3:1;
    volatile unsigned int MCA_3_4:1;
    volatile unsigned int MCA_3_5:1;
    volatile unsigned int MCA_3_6:1;
    volatile unsigned int MCA_3_7:1;
} Ifx_GTM_MON_ACTIVITY_0_Bits;


typedef struct _Ifx_GTM_MON_STATUS_Bits
{
    volatile unsigned int ACT_CMU0:1;
    volatile unsigned int ACT_CMU1:1;
    volatile unsigned int ACT_CMU2:1;
    volatile unsigned int ACT_CMU3:1;
    volatile unsigned int ACT_CMU4:1;
    volatile unsigned int ACT_CMU5:1;
    volatile unsigned int ACT_CMU6:1;
    volatile unsigned int ACT_CMU7:1;
    volatile unsigned int ACT_CMUFX0:1;
    volatile unsigned int ACT_CMUFX1:1;
    volatile unsigned int ACT_CMUFX2:1;
    volatile unsigned int ACT_CMUFX3:1;
    volatile unsigned int ACT_CMUFX4:1;
    volatile unsigned int reserved_13:3;
    volatile unsigned int CMP_ERR:1;
    volatile unsigned int reserved_17:3;
    volatile unsigned int MCS0_ERR:1;
    volatile unsigned int MCS1_ERR:1;
    volatile unsigned int MCS2_ERR:1;
    volatile unsigned int MCS3_ERR:1;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_MON_STATUS_Bits;


typedef struct _Ifx_GTM_MSCIN_INHCON_Bits
{
    volatile unsigned int SEL0:2;
    volatile unsigned int SEL1:2;
    volatile unsigned int SEL2:2;
    volatile unsigned int SEL3:2;
    volatile unsigned int SEL4:2;
    volatile unsigned int SEL5:2;
    volatile unsigned int SEL6:2;
    volatile unsigned int SEL7:2;
    volatile unsigned int SEL8:2;
    volatile unsigned int SEL9:2;
    volatile unsigned int SEL10:2;
    volatile unsigned int SEL11:2;
    volatile unsigned int SEL12:2;
    volatile unsigned int SEL13:2;
    volatile unsigned int SEL14:2;
    volatile unsigned int SEL15:2;
} Ifx_GTM_MSCIN_INHCON_Bits;


typedef struct _Ifx_GTM_MSCIN_INLCON_Bits
{
    volatile unsigned int SEL0:2;
    volatile unsigned int SEL1:2;
    volatile unsigned int SEL2:2;
    volatile unsigned int SEL3:2;
    volatile unsigned int SEL4:2;
    volatile unsigned int SEL5:2;
    volatile unsigned int SEL6:2;
    volatile unsigned int SEL7:2;
    volatile unsigned int SEL8:2;
    volatile unsigned int SEL9:2;
    volatile unsigned int SEL10:2;
    volatile unsigned int SEL11:2;
    volatile unsigned int SEL12:2;
    volatile unsigned int SEL13:2;
    volatile unsigned int SEL14:2;
    volatile unsigned int SEL15:2;
} Ifx_GTM_MSCIN_INLCON_Bits;


typedef struct _Ifx_GTM_MSCSET_CON0_Bits
{
    volatile unsigned int SEL0:5;
    volatile unsigned int reserved_5:3;
    volatile unsigned int SEL1:5;
    volatile unsigned int reserved_13:3;
    volatile unsigned int SEL2:5;
    volatile unsigned int reserved_21:3;
    volatile unsigned int SEL3:5;
    volatile unsigned int reserved_29:3;
} Ifx_GTM_MSCSET_CON0_Bits;


typedef struct _Ifx_GTM_MSCSET_CON1_Bits
{
    volatile unsigned int SEL4:5;
    volatile unsigned int reserved_5:3;
    volatile unsigned int SEL5:5;
    volatile unsigned int reserved_13:3;
    volatile unsigned int SEL6:5;
    volatile unsigned int reserved_21:3;
    volatile unsigned int SEL7:5;
    volatile unsigned int reserved_29:3;
} Ifx_GTM_MSCSET_CON1_Bits;


typedef struct _Ifx_GTM_MSCSET_CON2_Bits
{
    volatile unsigned int SEL8:5;
    volatile unsigned int reserved_5:3;
    volatile unsigned int SEL9:5;
    volatile unsigned int reserved_13:3;
    volatile unsigned int SEL10:5;
    volatile unsigned int reserved_21:3;
    volatile unsigned int SEL11:5;
    volatile unsigned int reserved_29:3;
} Ifx_GTM_MSCSET_CON2_Bits;


typedef struct _Ifx_GTM_MSCSET_CON3_Bits
{
    volatile unsigned int SEL12:5;
    volatile unsigned int reserved_5:3;
    volatile unsigned int SEL13:5;
    volatile unsigned int reserved_13:3;
    volatile unsigned int SEL14:5;
    volatile unsigned int reserved_21:3;
    volatile unsigned int SEL15:5;
    volatile unsigned int reserved_29:3;
} Ifx_GTM_MSCSET_CON3_Bits;


typedef struct _Ifx_GTM_OCS_Bits
{
    volatile unsigned int reserved_0:24;
    volatile unsigned int SUS:4;
    volatile unsigned int SUS_P:1;
    volatile unsigned int SUSSTA:1;
    volatile unsigned int reserved_30:2;
} Ifx_GTM_OCS_Bits;


typedef struct _Ifx_GTM_ODA_Bits
{
    volatile unsigned int DDREN:1;
    volatile unsigned int DREN:1;
    volatile unsigned int reserved_2:30;
} Ifx_GTM_ODA_Bits;


typedef struct _Ifx_GTM_OTBU0T_Bits
{
    volatile unsigned int CV:27;
    volatile unsigned int reserved_27:1;
    volatile unsigned int CM:2;
    volatile unsigned int reserved_30:2;
} Ifx_GTM_OTBU0T_Bits;


typedef struct _Ifx_GTM_OTBU1T_Bits
{
    volatile unsigned int CV:24;
    volatile unsigned int reserved_24:4;
    volatile unsigned int EN:1;
    volatile unsigned int reserved_29:3;
} Ifx_GTM_OTBU1T_Bits;


typedef struct _Ifx_GTM_OTBU2T_Bits
{
    volatile unsigned int CV:24;
    volatile unsigned int reserved_24:4;
    volatile unsigned int EN:1;
    volatile unsigned int reserved_29:3;
} Ifx_GTM_OTBU2T_Bits;


typedef struct _Ifx_GTM_OTSC0_Bits
{
    volatile unsigned int B0LMT:3;
    volatile unsigned int reserved_3:1;
    volatile unsigned int B0LMI:4;
    volatile unsigned int B0HMT:3;
    volatile unsigned int reserved_11:1;
    volatile unsigned int B0HMI:4;
    volatile unsigned int B1LMT:3;
    volatile unsigned int reserved_19:1;
    volatile unsigned int B1LMI:4;
    volatile unsigned int B1HMT:3;
    volatile unsigned int reserved_27:1;
    volatile unsigned int B1HMI:4;
} Ifx_GTM_OTSC0_Bits;


typedef struct _Ifx_GTM_OTSC1_Bits
{
    volatile unsigned int MCS:4;
    volatile unsigned int MI:4;
    volatile unsigned int reserved_8:1;
    volatile unsigned int MOE:1;
    volatile unsigned int reserved_10:22;
} Ifx_GTM_OTSC1_Bits;


typedef struct _Ifx_GTM_OTSS_Bits
{
    volatile unsigned int OTGB0:4;
    volatile unsigned int reserved_4:4;
    volatile unsigned int OTGB1:4;
    volatile unsigned int reserved_12:4;
    volatile unsigned int OTGB2:4;
    volatile unsigned int reserved_20:12;
} Ifx_GTM_OTSS_Bits;


typedef struct _Ifx_GTM_REV_Bits
{
    volatile unsigned int STEP:8;
    volatile unsigned int NO:4;
    volatile unsigned int MINOR:4;
    volatile unsigned int MAJOR:4;
    volatile unsigned int DEV_CODE0:4;
    volatile unsigned int DEV_CODE1:4;
    volatile unsigned int DEV_CODE2:4;
} Ifx_GTM_REV_Bits;


typedef struct _Ifx_GTM_RST_Bits
{
    volatile unsigned int RST:1;
    volatile unsigned int reserved_1:31;
} Ifx_GTM_RST_Bits;


typedef struct _Ifx_GTM_SPE_CMP_Bits
{
    volatile unsigned int CMP:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_SPE_CMP_Bits;


typedef struct _Ifx_GTM_SPE_CNT_Bits
{
    volatile unsigned int CNT:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_SPE_CNT_Bits;


typedef struct _Ifx_GTM_SPE_CTRL_STAT_Bits
{
    volatile unsigned int SPE_EN:1;
    volatile unsigned int SIE0:1;
    volatile unsigned int SIE1:1;
    volatile unsigned int SIE2:1;
    volatile unsigned int TRIG_SEL:2;
    volatile unsigned int TIM_SEL:1;
    volatile unsigned int FSOM:1;
    volatile unsigned int SPE_PAT_PTR:3;
    volatile unsigned int reserved_11:1;
    volatile unsigned int AIP:3;
    volatile unsigned int ADIR:1;
    volatile unsigned int PIP:3;
    volatile unsigned int PDIR:1;
    volatile unsigned int NIP:3;
    volatile unsigned int reserved_23:1;
    volatile unsigned int FSOL:8;
} Ifx_GTM_SPE_CTRL_STAT_Bits;


typedef struct _Ifx_GTM_SPE_EIRQ_EN_Bits
{
    volatile unsigned int SPE_NIPD_EIRQ_EN:1;
    volatile unsigned int SPE_DCHG_EIRQ_EN:1;
    volatile unsigned int SPE_PERR_EIRQ_EN:1;
    volatile unsigned int SPE_BIS_EIRQ_EN:1;
    volatile unsigned int SPE_RCMP_EIRQ_EN:1;
    volatile unsigned int reserved_5:27;
} Ifx_GTM_SPE_EIRQ_EN_Bits;


typedef struct _Ifx_GTM_SPE_IRQ_EN_Bits
{
    volatile unsigned int SPE_NIPD_IRQ_EN:1;
    volatile unsigned int SPE_DCHG_IRQ_EN:1;
    volatile unsigned int SPE_PERR_IRQ_EN:1;
    volatile unsigned int SPE_BIS_IRQ_EN:1;
    volatile unsigned int SPE_RCMP_IRQ_EN:1;
    volatile unsigned int reserved_5:27;
} Ifx_GTM_SPE_IRQ_EN_Bits;


typedef struct _Ifx_GTM_SPE_IRQ_FORCINT_Bits
{
    volatile unsigned int TRG_SPE_NIPD:1;
    volatile unsigned int TRG_SPE_DCHG:1;
    volatile unsigned int TRG_SPE_PERR:1;
    volatile unsigned int TRG_SPE_BIS:1;
    volatile unsigned int TRG_SPE_RCMP:1;
    volatile unsigned int reserved_5:27;
} Ifx_GTM_SPE_IRQ_FORCINT_Bits;


typedef struct _Ifx_GTM_SPE_IRQ_MODE_Bits
{
    volatile unsigned int IRQ_MODE:2;
    volatile unsigned int reserved_2:30;
} Ifx_GTM_SPE_IRQ_MODE_Bits;


typedef struct _Ifx_GTM_SPE_IRQ_NOTIFY_Bits
{
    volatile unsigned int SPE_NIPD:1;
    volatile unsigned int SPE_DCHG:1;
    volatile unsigned int SPE_PERR:1;
    volatile unsigned int SPE_BIS:1;
    volatile unsigned int SPE_RCMP:1;
    volatile unsigned int reserved_5:27;
} Ifx_GTM_SPE_IRQ_NOTIFY_Bits;


typedef struct _Ifx_GTM_SPE_OUT_CTRL_Bits
{
    volatile unsigned int SPE_OUT_CTRL:16;
    volatile unsigned int reserved_16:16;
} Ifx_GTM_SPE_OUT_CTRL_Bits;


typedef struct _Ifx_GTM_SPE_OUT_PAT_Bits
{
    volatile unsigned int SPE_OUT_PAT:16;
    volatile unsigned int reserved_16:16;
} Ifx_GTM_SPE_OUT_PAT_Bits;


typedef struct _Ifx_GTM_SPE_PAT_Bits
{
    volatile unsigned int IP0_VAL:1;
    volatile unsigned int IP0_PAT:3;
    volatile unsigned int IP1_VAL:1;
    volatile unsigned int IP1_PAT:3;
    volatile unsigned int IP2_VAL:1;
    volatile unsigned int IP2_PAT:3;
    volatile unsigned int IP3_VAL:1;
    volatile unsigned int IP3_PAT:3;
    volatile unsigned int IP4_VAL:1;
    volatile unsigned int IP4_PAT:3;
    volatile unsigned int IP5_VAL:1;
    volatile unsigned int IP5_PAT:3;
    volatile unsigned int IP6_VAL:1;
    volatile unsigned int IP6_PAT:3;
    volatile unsigned int IP7_VAL:1;
    volatile unsigned int IP7_PAT:3;
} Ifx_GTM_SPE_PAT_Bits;


typedef struct _Ifx_GTM_TBU_CH0_BASE_Bits
{
    volatile unsigned int BASE:27;
    volatile unsigned int reserved_27:5;
} Ifx_GTM_TBU_CH0_BASE_Bits;


typedef struct _Ifx_GTM_TBU_CH0_CTRL_Bits
{
    volatile unsigned int LOW_RES:1;
    volatile unsigned int CH_CLK_SRC:3;
    volatile unsigned int reserved_4:28;
} Ifx_GTM_TBU_CH0_CTRL_Bits;


typedef struct _Ifx_GTM_TBU_CH1_BASE_Bits
{
    volatile unsigned int BASE:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_TBU_CH1_BASE_Bits;


typedef struct _Ifx_GTM_TBU_CH1_CTRL_Bits
{
    volatile unsigned int CH_MODE:1;
    volatile unsigned int CH_CLK_SRC:3;
    volatile unsigned int reserved_4:28;
} Ifx_GTM_TBU_CH1_CTRL_Bits;


typedef struct _Ifx_GTM_TBU_CH2_BASE_Bits
{
    volatile unsigned int BASE:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_TBU_CH2_BASE_Bits;


typedef struct _Ifx_GTM_TBU_CH2_CTRL_Bits
{
    volatile unsigned int CH_MODE:1;
    volatile unsigned int CH_CLK_SRC:3;
    volatile unsigned int reserved_4:28;
} Ifx_GTM_TBU_CH2_CTRL_Bits;


typedef struct _Ifx_GTM_TBU_CHEN_Bits
{
    volatile unsigned int ENDIS_CH0:2;
    volatile unsigned int ENDIS_CH1:2;
    volatile unsigned int ENDIS_CH2:2;
    volatile unsigned int reserved_6:26;
} Ifx_GTM_TBU_CHEN_Bits;


typedef struct _Ifx_GTM_TIM_AUX_IN_SRC_Bits
{
    volatile unsigned int SRC_CH0:1;
    volatile unsigned int SRC_CH1:1;
    volatile unsigned int SRC_CH2:1;
    volatile unsigned int SRC_CH3:1;
    volatile unsigned int SRC_CH4:1;
    volatile unsigned int SRC_CH5:1;
    volatile unsigned int SRC_CH6:1;
    volatile unsigned int SRC_CH7:1;
    volatile unsigned int reserved_8:24;
} Ifx_GTM_TIM_AUX_IN_SRC_Bits;


typedef struct _Ifx_GTM_TIM_CH_CNT_Bits
{
    volatile unsigned int CNT:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_TIM_CH_CNT_Bits;


typedef struct _Ifx_GTM_TIM_CH_CNTS_Bits
{
    volatile unsigned int CNTS:24;
    volatile unsigned int ECNT:8;
} Ifx_GTM_TIM_CH_CNTS_Bits;


typedef struct _Ifx_GTM_TIM_CH_CTRL_Bits
{
    volatile unsigned int TIM_EN:1;
    volatile unsigned int TIM_MODE:3;
    volatile unsigned int OSM:1;
    volatile unsigned int ARU_EN:1;
    volatile unsigned int CICTRL:1;
    volatile unsigned int TBU0_SEL:1;
    volatile unsigned int GPR0_SEL:2;
    volatile unsigned int GPR1_SEL:2;
    volatile unsigned int CNTS_SEL:1;
    volatile unsigned int DSL:1;
    volatile unsigned int ISL:1;
    volatile unsigned int ECNT_RESET:1;
    volatile unsigned int FLT_EN:1;
    volatile unsigned int FLT_CNT_FRQ:2;
    volatile unsigned int EXT_CAP_EN:1;
    volatile unsigned int FLT_MODE_RE:1;
    volatile unsigned int FLT_CTR_RE:1;
    volatile unsigned int FLT_MODE_FE:1;
    volatile unsigned int FLT_CTR_FE:1;
    volatile unsigned int CLK_SEL:3;
    volatile unsigned int FR_ECNT_OFL:1;
    volatile unsigned int EGPR0_SEL:1;
    volatile unsigned int EGPR1_SEL:1;
    volatile unsigned int TOCTRL:2;
} Ifx_GTM_TIM_CH_CTRL_Bits;


typedef struct _Ifx_GTM_TIM_CH_ECNT_Bits
{
    volatile unsigned int ECNT:16;
    volatile unsigned int reserved_16:16;
} Ifx_GTM_TIM_CH_ECNT_Bits;


typedef struct _Ifx_GTM_TIM_CH_ECTRL_Bits
{
    volatile unsigned int EXT_CAP_SRC:3;
    volatile unsigned int reserved_3:29;
} Ifx_GTM_TIM_CH_ECTRL_Bits;


typedef struct _Ifx_GTM_TIM_CH_EIRQ_EN_Bits
{
    volatile unsigned int NEWVAL_EIRQ_EN:1;
    volatile unsigned int ECNTOFL_EIRQ_EN:1;
    volatile unsigned int CNTOFL_EIRQ_EN:1;
    volatile unsigned int GPROFL_EIRQ_EN:1;
    volatile unsigned int TODET_EIRQ_EN:1;
    volatile unsigned int GLITCHDET_EIRQ_EN:1;
    volatile unsigned int reserved_6:26;
} Ifx_GTM_TIM_CH_EIRQ_EN_Bits;


typedef struct _Ifx_GTM_TIM_CH_FLT_FE_Bits
{
    volatile unsigned int FLT_FE:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_TIM_CH_FLT_FE_Bits;


typedef struct _Ifx_GTM_TIM_CH_FLT_RE_Bits
{
    volatile unsigned int FLT_RE:24;
    volatile unsigned int reserved_24:8;
} Ifx_GTM_TIM_CH_FLT_RE_Bits;


typedef struct _Ifx_GTM_TIM_CH_GPR0_Bits
{
    volatile unsigned int GPR0:24;
    volatile unsigned int ECNT:8;
} Ifx_GTM_TIM_CH_GPR0_Bits;


typedef struct _Ifx_GTM_TIM_CH_GPR1_Bits
{
    volatile unsigned int GPR1:24;
    volatile unsigned int ECNT:8;
} Ifx_GTM_TIM_CH_GPR1_Bits;


typedef struct _Ifx_GTM_TIM_CH_IRQ_EN_Bits
{
    volatile unsigned int NEWVAL_IRQ_EN:1;
    volatile unsigned int ECNTOFL_IRQ_EN:1;
    volatile unsigned int CNTOFL_IRQ_EN:1;
    volatile unsigned int GPROFL_IRQ_EN:1;
    volatile unsigned int TODET_IRQ_EN:1;
    volatile unsigned int GLITCHDET_IRQ_EN:1;
    volatile unsigned int reserved_6:26;
} Ifx_GTM_TIM_CH_IRQ_EN_Bits;


typedef struct _Ifx_GTM_TIM_CH_IRQ_FORCINT_Bits
{
    volatile unsigned int TRG_NEWVAL:1;
    volatile unsigned int TRG_ECNTOFL:1;
    volatile unsigned int TRG_CNTOFL:1;
    volatile unsigned int TRG_GPROFL:1;
    volatile unsigned int TRG_TODET:1;
    volatile unsigned int TRG_GLITCHDET:1;
    volatile unsigned int reserved_6:26;
} Ifx_GTM_TIM_CH_IRQ_FORCINT_Bits;


typedef struct _Ifx_GTM_TIM_CH_IRQ_MODE_Bits
{
    volatile unsigned int IRQ_MODE:2;
    volatile unsigned int reserved_2:30;
} Ifx_GTM_TIM_CH_IRQ_MODE_Bits;


typedef struct _Ifx_GTM_TIM_CH_IRQ_NOTIFY_Bits
{
    volatile unsigned int NEWVAL:1;
    volatile unsigned int ECNTOFL:1;
    volatile unsigned int CNTOFL:1;
    volatile unsigned int GPROFL:1;
    volatile unsigned int TODET:1;
    volatile unsigned int GLITCHDET:1;
    volatile unsigned int reserved_6:26;
} Ifx_GTM_TIM_CH_IRQ_NOTIFY_Bits;


typedef struct _Ifx_GTM_TIM_CH_TDUC_Bits
{
    volatile unsigned int TO_CNT:8;
    volatile unsigned int reserved_8:24;
} Ifx_GTM_TIM_CH_TDUC_Bits;


typedef struct _Ifx_GTM_TIM_CH_TDUV_Bits
{
    volatile unsigned int TOV:8;
    volatile unsigned int reserved_8:20;
    volatile unsigned int TCS:3;
    volatile unsigned int reserved_31:1;
} Ifx_GTM_TIM_CH_TDUV_Bits;


typedef struct _Ifx_GTM_TIM_IN_SRC_Bits
{
    volatile unsigned int VAL_0:2;
    volatile unsigned int MODE_0:2;
    volatile unsigned int VAL_1:2;
    volatile unsigned int MODE_1:2;
    volatile unsigned int VAL_2:2;
    volatile unsigned int MODE_2:2;
    volatile unsigned int VAL_3:2;
    volatile unsigned int MODE_3:2;
    volatile unsigned int VAL_4:2;
    volatile unsigned int MODE_4:2;
    volatile unsigned int VAL_5:2;
    volatile unsigned int MODE_5:2;
    volatile unsigned int VAL_6:2;
    volatile unsigned int MODE_6:2;
    volatile unsigned int VAL_7:2;
    volatile unsigned int MODE_7:2;
} Ifx_GTM_TIM_IN_SRC_Bits;


typedef struct _Ifx_GTM_TIM_RST_Bits
{
    volatile unsigned int RST_CH0:1;
    volatile unsigned int RST_CH1:1;
    volatile unsigned int RST_CH2:1;
    volatile unsigned int RST_CH3:1;
    volatile unsigned int RST_CH4:1;
    volatile unsigned int RST_CH5:1;
    volatile unsigned int RST_CH6:1;
    volatile unsigned int RST_CH7:1;
    volatile unsigned int reserved_8:24;
} Ifx_GTM_TIM_RST_Bits;


typedef struct _Ifx_GTM_TOM_CH_CM0_Bits
{
    volatile unsigned int CM0:16;
    volatile unsigned int reserved_16:16;
} Ifx_GTM_TOM_CH_CM0_Bits;


typedef struct _Ifx_GTM_TOM_CH_CM1_Bits
{
    volatile unsigned int CM1:16;
    volatile unsigned int reserved_16:16;
} Ifx_GTM_TOM_CH_CM1_Bits;


typedef struct _Ifx_GTM_TOM_CH_CN0_Bits
{
    volatile unsigned int CN0:16;
    volatile unsigned int reserved_16:16;
} Ifx_GTM_TOM_CH_CN0_Bits;


typedef struct _Ifx_GTM_TOM_CH_CTRL_Bits
{
    volatile unsigned int reserved_0:11;
    volatile unsigned int SL:1;
    volatile unsigned int CLK_SRC_SR:3;
    volatile unsigned int reserved_15:5;
    volatile unsigned int RST_CCU0:1;
    volatile unsigned int reserved_21:3;
    volatile unsigned int TRIGOUT:1;
    volatile unsigned int reserved_25:1;
    volatile unsigned int OSM:1;
    volatile unsigned int BITREV:1;
    volatile unsigned int SPEM:1;
    volatile unsigned int GCM:1;
    volatile unsigned int reserved_30:2;
} Ifx_GTM_TOM_CH_CTRL_Bits;


typedef struct _Ifx_GTM_TOM_CH_IRQ_EN_Bits
{
    volatile unsigned int CCU0TC_IRQ_EN:1;
    volatile unsigned int CCU1TC_IRQ_EN:1;
    volatile unsigned int reserved_2:30;
} Ifx_GTM_TOM_CH_IRQ_EN_Bits;


typedef struct _Ifx_GTM_TOM_CH_IRQ_FORCINT_Bits
{
    volatile unsigned int TRG_CCU0TC0:1;
    volatile unsigned int TRG_CCU1TC0:1;
    volatile unsigned int reserved_2:30;
} Ifx_GTM_TOM_CH_IRQ_FORCINT_Bits;


typedef struct _Ifx_GTM_TOM_CH_IRQ_MODE_Bits
{
    volatile unsigned int IRQ_MODE:2;
    volatile unsigned int reserved_2:30;
} Ifx_GTM_TOM_CH_IRQ_MODE_Bits;


typedef struct _Ifx_GTM_TOM_CH_IRQ_NOTIFY_Bits
{
    volatile unsigned int CCU0TC:1;
    volatile unsigned int CCU1TC:1;
    volatile unsigned int reserved_2:30;
} Ifx_GTM_TOM_CH_IRQ_NOTIFY_Bits;


typedef struct _Ifx_GTM_TOM_CH_SR0_Bits
{
    volatile unsigned int SR0:16;
    volatile unsigned int reserved_16:16;
} Ifx_GTM_TOM_CH_SR0_Bits;


typedef struct _Ifx_GTM_TOM_CH_SR1_Bits
{
    volatile unsigned int SR1:16;
    volatile unsigned int reserved_16:16;
} Ifx_GTM_TOM_CH_SR1_Bits;


typedef struct _Ifx_GTM_TOM_CH_STAT_Bits
{
    volatile unsigned int OL:1;
    volatile unsigned int reserved_1:31;
} Ifx_GTM_TOM_CH_STAT_Bits;


typedef struct _Ifx_GTM_TOM_TGC0_ACT_TB_Bits
{
    volatile unsigned int ACT_TB:24;
    volatile unsigned int TB_TRIG:1;
    volatile unsigned int TBU_SEL:2;
    volatile unsigned int reserved_27:5;
} Ifx_GTM_TOM_TGC0_ACT_TB_Bits;


typedef struct _Ifx_GTM_TOM_TGC0_ENDIS_CTRL_Bits
{
    volatile unsigned int ENDIS_CTRL0:2;
    volatile unsigned int ENDIS_CTRL1:2;
    volatile unsigned int ENDIS_CTRL2:2;
    volatile unsigned int ENDIS_CTRL3:2;
    volatile unsigned int ENDIS_CTRL4:2;
    volatile unsigned int ENDIS_CTRL5:2;
    volatile unsigned int ENDIS_CTRL6:2;
    volatile unsigned int ENDIS_CTRL7:2;
    volatile unsigned int reserved_16:16;
} Ifx_GTM_TOM_TGC0_ENDIS_CTRL_Bits;


typedef struct _Ifx_GTM_TOM_TGC0_ENDIS_STAT_Bits
{
    volatile unsigned int ENDIS_STAT0:2;
    volatile unsigned int ENDIS_STAT1:2;
    volatile unsigned int ENDIS_STAT2:2;
    volatile unsigned int ENDIS_STAT3:2;
    volatile unsigned int ENDIS_STAT4:2;
    volatile unsigned int ENDIS_STAT5:2;
    volatile unsigned int ENDIS_STAT6:2;
    volatile unsigned int ENDIS_STAT7:2;
    volatile unsigned int reserved_16:16;
} Ifx_GTM_TOM_TGC0_ENDIS_STAT_Bits;


typedef struct _Ifx_GTM_TOM_TGC0_FUPD_CTRL_Bits
{
    volatile unsigned int FUPD_CTRL0:2;
    volatile unsigned int FUPD_CTRL1:2;
    volatile unsigned int FUPD_CTRL2:2;
    volatile unsigned int FUPD_CTRL3:2;
    volatile unsigned int FUPD_CTRL4:2;
    volatile unsigned int FUPD_CTRL5:2;
    volatile unsigned int FUPD_CTRL6:2;
    volatile unsigned int FUPD_CTRL7:2;
    volatile unsigned int RSTCN0_CH0:2;
    volatile unsigned int RSTCN0_CH1:2;
    volatile unsigned int RSTCN0_CH2:2;
    volatile unsigned int RSTCN0_CH3:2;
    volatile unsigned int RSTCN0_CH4:2;
    volatile unsigned int RSTCN0_CH5:2;
    volatile unsigned int RSTCN0_CH6:2;
    volatile unsigned int RSTCN0_CH7:2;
} Ifx_GTM_TOM_TGC0_FUPD_CTRL_Bits;


typedef struct _Ifx_GTM_TOM_TGC0_GLB_CTRL_Bits
{
    volatile unsigned int HOST_TRIG:1;
    volatile unsigned int reserved_1:7;
    volatile unsigned int RST_CH0:1;
    volatile unsigned int RST_CH1:1;
    volatile unsigned int RST_CH2:1;
    volatile unsigned int RST_CH3:1;
    volatile unsigned int RST_CH4:1;
    volatile unsigned int RST_CH5:1;
    volatile unsigned int RST_CH6:1;
    volatile unsigned int RST_CH7:1;
    volatile unsigned int UPEN_CTRL0:2;
    volatile unsigned int UPEN_CTRL1:2;
    volatile unsigned int UPEN_CTRL2:2;
    volatile unsigned int UPEN_CTRL3:2;
    volatile unsigned int UPEN_CTRL4:2;
    volatile unsigned int UPEN_CTRL5:2;
    volatile unsigned int UPEN_CTRL6:2;
    volatile unsigned int UPEN_CTRL7:2;
} Ifx_GTM_TOM_TGC0_GLB_CTRL_Bits;


typedef struct _Ifx_GTM_TOM_TGC0_INT_TRIG_Bits
{
    volatile unsigned int INT_TRIG0:2;
    volatile unsigned int INT_TRIG1:2;
    volatile unsigned int INT_TRIG2:2;
    volatile unsigned int INT_TRIG3:2;
    volatile unsigned int INT_TRIG4:2;
    volatile unsigned int INT_TRIG5:2;
    volatile unsigned int INT_TRIG6:2;
    volatile unsigned int INT_TRIG7:2;
    volatile unsigned int reserved_16:16;
} Ifx_GTM_TOM_TGC0_INT_TRIG_Bits;


typedef struct _Ifx_GTM_TOM_TGC0_OUTEN_CTRL_Bits
{
    volatile unsigned int OUTEN_CTRL0:2;
    volatile unsigned int OUTEN_CTRL1:2;
    volatile unsigned int OUTEN_CTRL2:2;
    volatile unsigned int OUTEN_CTRL3:2;
    volatile unsigned int OUTEN_CTRL4:2;
    volatile unsigned int OUTEN_CTRL5:2;
    volatile unsigned int OUTEN_CTRL6:2;
    volatile unsigned int OUTEN_CTRL7:2;
    volatile unsigned int reserved_16:16;
} Ifx_GTM_TOM_TGC0_OUTEN_CTRL_Bits;


typedef struct _Ifx_GTM_TOM_TGC0_OUTEN_STAT_Bits
{
    volatile unsigned int OUTEN_STAT0:2;
    volatile unsigned int OUTEN_STAT1:2;
    volatile unsigned int OUTEN_STAT2:2;
    volatile unsigned int OUTEN_STAT3:2;
    volatile unsigned int OUTEN_STAT4:2;
    volatile unsigned int OUTEN_STAT5:2;
    volatile unsigned int OUTEN_STAT6:2;
    volatile unsigned int OUTEN_STAT7:2;
    volatile unsigned int reserved_16:16;
} Ifx_GTM_TOM_TGC0_OUTEN_STAT_Bits;


typedef struct _Ifx_GTM_TOM_TGC1_ACT_TB_Bits
{
    volatile unsigned int ACT_TB:24;
    volatile unsigned int TB_TRIG:1;
    volatile unsigned int TBU_SEL:2;
    volatile unsigned int reserved_27:5;
} Ifx_GTM_TOM_TGC1_ACT_TB_Bits;


typedef struct _Ifx_GTM_TOM_TGC1_ENDIS_CTRL_Bits
{
    volatile unsigned int ENDIS_CTRL0:2;
    volatile unsigned int ENDIS_CTRL1:2;
    volatile unsigned int ENDIS_CTRL2:2;
    volatile unsigned int ENDIS_CTRL3:2;
    volatile unsigned int ENDIS_CTRL4:2;
    volatile unsigned int ENDIS_CTRL5:2;
    volatile unsigned int ENDIS_CTRL6:2;
    volatile unsigned int ENDIS_CTRL7:2;
    volatile unsigned int reserved_16:16;
} Ifx_GTM_TOM_TGC1_ENDIS_CTRL_Bits;


typedef struct _Ifx_GTM_TOM_TGC1_ENDIS_STAT_Bits
{
    volatile unsigned int ENDIS_STAT0:2;
    volatile unsigned int ENDIS_STAT1:2;
    volatile unsigned int ENDIS_STAT2:2;
    volatile unsigned int ENDIS_STAT3:2;
    volatile unsigned int ENDIS_STAT4:2;
    volatile unsigned int ENDIS_STAT5:2;
    volatile unsigned int ENDIS_STAT6:2;
    volatile unsigned int ENDIS_STAT7:2;
    volatile unsigned int reserved_16:16;
} Ifx_GTM_TOM_TGC1_ENDIS_STAT_Bits;


typedef struct _Ifx_GTM_TOM_TGC1_FUPD_CTRL_Bits
{
    volatile unsigned int FUPD_CTRL0:2;
    volatile unsigned int FUPD_CTRL1:2;
    volatile unsigned int FUPD_CTRL2:2;
    volatile unsigned int FUPD_CTRL3:2;
    volatile unsigned int FUPD_CTRL4:2;
    volatile unsigned int FUPD_CTRL5:2;
    volatile unsigned int FUPD_CTRL6:2;
    volatile unsigned int FUPD_CTRL7:2;
    volatile unsigned int RSTCN0_CH0:2;
    volatile unsigned int RSTCN0_CH1:2;
    volatile unsigned int RSTCN0_CH2:2;
    volatile unsigned int RSTCN0_CH3:2;
    volatile unsigned int RSTCN0_CH4:2;
    volatile unsigned int RSTCN0_CH5:2;
    volatile unsigned int RSTCN0_CH6:2;
    volatile unsigned int RSTCN0_CH7:2;
} Ifx_GTM_TOM_TGC1_FUPD_CTRL_Bits;


typedef struct _Ifx_GTM_TOM_TGC1_GLB_CTRL_Bits
{
    volatile unsigned int HOST_TRIG:1;
    volatile unsigned int reserved_1:7;
    volatile unsigned int RST_CH0:1;
    volatile unsigned int RST_CH1:1;
    volatile unsigned int RST_CH2:1;
    volatile unsigned int RST_CH3:1;
    volatile unsigned int RST_CH4:1;
    volatile unsigned int RST_CH5:1;
    volatile unsigned int RST_CH6:1;
    volatile unsigned int RST_CH7:1;
    volatile unsigned int UPEN_CTRL0:2;
    volatile unsigned int UPEN_CTRL1:2;
    volatile unsigned int UPEN_CTRL2:2;
    volatile unsigned int UPEN_CTRL3:2;
    volatile unsigned int UPEN_CTRL4:2;
    volatile unsigned int UPEN_CTRL5:2;
    volatile unsigned int UPEN_CTRL6:2;
    volatile unsigned int UPEN_CTRL7:2;
} Ifx_GTM_TOM_TGC1_GLB_CTRL_Bits;


typedef struct _Ifx_GTM_TOM_TGC1_INT_TRIG_Bits
{
    volatile unsigned int INT_TRIG0:2;
    volatile unsigned int INT_TRIG1:2;
    volatile unsigned int INT_TRIG2:2;
    volatile unsigned int INT_TRIG3:2;
    volatile unsigned int INT_TRIG4:2;
    volatile unsigned int INT_TRIG5:2;
    volatile unsigned int INT_TRIG6:2;
    volatile unsigned int INT_TRIG7:2;
    volatile unsigned int reserved_16:16;
} Ifx_GTM_TOM_TGC1_INT_TRIG_Bits;


typedef struct _Ifx_GTM_TOM_TGC1_OUTEN_CTRL_Bits
{
    volatile unsigned int OUTEN_CTRL0:2;
    volatile unsigned int OUTEN_CTRL1:2;
    volatile unsigned int OUTEN_CTRL2:2;
    volatile unsigned int OUTEN_CTRL3:2;
    volatile unsigned int OUTEN_CTRL4:2;
    volatile unsigned int OUTEN_CTRL5:2;
    volatile unsigned int OUTEN_CTRL6:2;
    volatile unsigned int OUTEN_CTRL7:2;
    volatile unsigned int reserved_16:16;
} Ifx_GTM_TOM_TGC1_OUTEN_CTRL_Bits;


typedef struct _Ifx_GTM_TOM_TGC1_OUTEN_STAT_Bits
{
    volatile unsigned int OUTEN_STAT0:2;
    volatile unsigned int OUTEN_STAT1:2;
    volatile unsigned int OUTEN_STAT2:2;
    volatile unsigned int OUTEN_STAT3:2;
    volatile unsigned int OUTEN_STAT4:2;
    volatile unsigned int OUTEN_STAT5:2;
    volatile unsigned int OUTEN_STAT6:2;
    volatile unsigned int OUTEN_STAT7:2;
    volatile unsigned int reserved_16:16;
} Ifx_GTM_TOM_TGC1_OUTEN_STAT_Bits;


typedef struct _Ifx_GTM_TRIGOUT_Bits
{
    volatile unsigned int INT0:2;
    volatile unsigned int INT1:2;
    volatile unsigned int TRIG0:2;
    volatile unsigned int TRIG1:2;
    volatile unsigned int TRIG2:2;
    volatile unsigned int TRIG3:2;
    volatile unsigned int TRIG4:2;
    volatile unsigned int TRIG5:2;
    volatile unsigned int reserved_16:16;
} Ifx_GTM_TRIGOUT_Bits;







typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_ACCEN0_Bits B;
} Ifx_GTM_ACCEN0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_ACCEN1_Bits B;
} Ifx_GTM_ACCEN1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_ADCTRIG0OUT0_Bits B;
} Ifx_GTM_ADCTRIG0OUT0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_ADCTRIG0OUT1_Bits B;
} Ifx_GTM_ADCTRIG0OUT1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_ADCTRIG1OUT0_Bits B;
} Ifx_GTM_ADCTRIG1OUT0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_ADCTRIG1OUT1_Bits B;
} Ifx_GTM_ADCTRIG1OUT1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_AEI_ADDR_XPT_Bits B;
} Ifx_GTM_AEI_ADDR_XPT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_AFD_CH_BUF_ACC_Bits B;
} Ifx_GTM_AFD_CH_BUF_ACC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_ARU_ARU_ACCESS_Bits B;
} Ifx_GTM_ARU_ARU_ACCESS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_ARU_DATA_H_Bits B;
} Ifx_GTM_ARU_DATA_H;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_ARU_DATA_L_Bits B;
} Ifx_GTM_ARU_DATA_L;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_ARU_DBG_ACCESS0_Bits B;
} Ifx_GTM_ARU_DBG_ACCESS0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_ARU_DBG_ACCESS1_Bits B;
} Ifx_GTM_ARU_DBG_ACCESS1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_ARU_DBG_DATA0_H_Bits B;
} Ifx_GTM_ARU_DBG_DATA0_H;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_ARU_DBG_DATA0_L_Bits B;
} Ifx_GTM_ARU_DBG_DATA0_L;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_ARU_DBG_DATA1_H_Bits B;
} Ifx_GTM_ARU_DBG_DATA1_H;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_ARU_DBG_DATA1_L_Bits B;
} Ifx_GTM_ARU_DBG_DATA1_L;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_ARU_IRQ_EN_Bits B;
} Ifx_GTM_ARU_IRQ_EN;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_ARU_IRQ_FORCINT_Bits B;
} Ifx_GTM_ARU_IRQ_FORCINT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_ARU_IRQ_MODE_Bits B;
} Ifx_GTM_ARU_IRQ_MODE;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_ARU_IRQ_NOTIFY_Bits B;
} Ifx_GTM_ARU_IRQ_NOTIFY;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_ATOM_AGC_ACT_TB_Bits B;
} Ifx_GTM_ATOM_AGC_ACT_TB;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_ATOM_AGC_ENDIS_CTRL_Bits B;
} Ifx_GTM_ATOM_AGC_ENDIS_CTRL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_ATOM_AGC_ENDIS_STAT_Bits B;
} Ifx_GTM_ATOM_AGC_ENDIS_STAT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_ATOM_AGC_FUPD_CTRL_Bits B;
} Ifx_GTM_ATOM_AGC_FUPD_CTRL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_ATOM_AGC_GLB_CTRL_Bits B;
} Ifx_GTM_ATOM_AGC_GLB_CTRL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_ATOM_AGC_INT_TRIG_Bits B;
} Ifx_GTM_ATOM_AGC_INT_TRIG;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_ATOM_AGC_OUTEN_CTRL_Bits B;
} Ifx_GTM_ATOM_AGC_OUTEN_CTRL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_ATOM_AGC_OUTEN_STAT_Bits B;
} Ifx_GTM_ATOM_AGC_OUTEN_STAT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_ATOM_CH_CM0_Bits B;
} Ifx_GTM_ATOM_CH_CM0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_ATOM_CH_CM1_Bits B;
} Ifx_GTM_ATOM_CH_CM1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_ATOM_CH_CN0_Bits B;
} Ifx_GTM_ATOM_CH_CN0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_ATOM_CH_CTRL_Bits B;
} Ifx_GTM_ATOM_CH_CTRL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_ATOM_CH_IRQ_EN_Bits B;
} Ifx_GTM_ATOM_CH_IRQ_EN;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_ATOM_CH_IRQ_FORCINT_Bits B;
} Ifx_GTM_ATOM_CH_IRQ_FORCINT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_ATOM_CH_IRQ_MODE_Bits B;
} Ifx_GTM_ATOM_CH_IRQ_MODE;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_ATOM_CH_IRQ_NOTIFY_Bits B;
} Ifx_GTM_ATOM_CH_IRQ_NOTIFY;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_ATOM_CH_RDADDR_Bits B;
} Ifx_GTM_ATOM_CH_RDADDR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_ATOM_CH_SOMC_Bits B;
} Ifx_GTM_ATOM_CH_SOMC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_ATOM_CH_SOMI_Bits B;
} Ifx_GTM_ATOM_CH_SOMI;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_ATOM_CH_SOMP_Bits B;
} Ifx_GTM_ATOM_CH_SOMP;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_ATOM_CH_SOMS_Bits B;
} Ifx_GTM_ATOM_CH_SOMS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_ATOM_CH_SR0_Bits B;
} Ifx_GTM_ATOM_CH_SR0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_ATOM_CH_SR1_Bits B;
} Ifx_GTM_ATOM_CH_SR1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_ATOM_CH_STAT_Bits B;
} Ifx_GTM_ATOM_CH_STAT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_BRC_EIRQ_EN_Bits B;
} Ifx_GTM_BRC_EIRQ_EN;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_BRC_IRQ_EN_Bits B;
} Ifx_GTM_BRC_IRQ_EN;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_BRC_IRQ_FORCINT_Bits B;
} Ifx_GTM_BRC_IRQ_FORCINT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_BRC_IRQ_MODE_Bits B;
} Ifx_GTM_BRC_IRQ_MODE;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_BRC_IRQ_NOTIFY_Bits B;
} Ifx_GTM_BRC_IRQ_NOTIFY;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_BRC_RST_Bits B;
} Ifx_GTM_BRC_RST;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_BRC_SRC0_ADDR_Bits B;
} Ifx_GTM_BRC_SRC0_ADDR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_BRC_SRC0_DEST_Bits B;
} Ifx_GTM_BRC_SRC0_DEST;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_BRC_SRC10_ADDR_Bits B;
} Ifx_GTM_BRC_SRC10_ADDR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_BRC_SRC10_DEST_Bits B;
} Ifx_GTM_BRC_SRC10_DEST;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_BRC_SRC11_ADDR_Bits B;
} Ifx_GTM_BRC_SRC11_ADDR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_BRC_SRC11_DEST_Bits B;
} Ifx_GTM_BRC_SRC11_DEST;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_BRC_SRC1_ADDR_Bits B;
} Ifx_GTM_BRC_SRC1_ADDR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_BRC_SRC1_DEST_Bits B;
} Ifx_GTM_BRC_SRC1_DEST;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_BRC_SRC2_ADDR_Bits B;
} Ifx_GTM_BRC_SRC2_ADDR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_BRC_SRC2_DEST_Bits B;
} Ifx_GTM_BRC_SRC2_DEST;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_BRC_SRC3_ADDR_Bits B;
} Ifx_GTM_BRC_SRC3_ADDR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_BRC_SRC3_DEST_Bits B;
} Ifx_GTM_BRC_SRC3_DEST;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_BRC_SRC4_ADDR_Bits B;
} Ifx_GTM_BRC_SRC4_ADDR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_BRC_SRC4_DEST_Bits B;
} Ifx_GTM_BRC_SRC4_DEST;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_BRC_SRC5_ADDR_Bits B;
} Ifx_GTM_BRC_SRC5_ADDR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_BRC_SRC5_DEST_Bits B;
} Ifx_GTM_BRC_SRC5_DEST;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_BRC_SRC6_ADDR_Bits B;
} Ifx_GTM_BRC_SRC6_ADDR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_BRC_SRC6_DEST_Bits B;
} Ifx_GTM_BRC_SRC6_DEST;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_BRC_SRC7_ADDR_Bits B;
} Ifx_GTM_BRC_SRC7_ADDR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_BRC_SRC7_DEST_Bits B;
} Ifx_GTM_BRC_SRC7_DEST;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_BRC_SRC8_ADDR_Bits B;
} Ifx_GTM_BRC_SRC8_ADDR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_BRC_SRC8_DEST_Bits B;
} Ifx_GTM_BRC_SRC8_DEST;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_BRC_SRC9_ADDR_Bits B;
} Ifx_GTM_BRC_SRC9_ADDR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_BRC_SRC9_DEST_Bits B;
} Ifx_GTM_BRC_SRC9_DEST;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_BRIDGE_MODE_Bits B;
} Ifx_GTM_BRIDGE_MODE;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_BRIDGE_PTR1_Bits B;
} Ifx_GTM_BRIDGE_PTR1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_BRIDGE_PTR2_Bits B;
} Ifx_GTM_BRIDGE_PTR2;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_CLC_Bits B;
} Ifx_GTM_CLC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_CMP_EIRQ_EN_Bits B;
} Ifx_GTM_CMP_EIRQ_EN;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_CMP_EN_Bits B;
} Ifx_GTM_CMP_EN;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_CMP_IRQ_EN_Bits B;
} Ifx_GTM_CMP_IRQ_EN;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_CMP_IRQ_FORCINT_Bits B;
} Ifx_GTM_CMP_IRQ_FORCINT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_CMP_IRQ_MODE_Bits B;
} Ifx_GTM_CMP_IRQ_MODE;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_CMP_IRQ_NOTIFY_Bits B;
} Ifx_GTM_CMP_IRQ_NOTIFY;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_CMU_CLK0_5_CTRL_Bits B;
} Ifx_GTM_CMU_CLK0_5_CTRL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_CMU_CLK_6_CTRL_Bits B;
} Ifx_GTM_CMU_CLK_6_CTRL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_CMU_CLK_7_CTRL_Bits B;
} Ifx_GTM_CMU_CLK_7_CTRL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_CMU_CLK_EN_Bits B;
} Ifx_GTM_CMU_CLK_EN;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_CMU_ECLK_DEN_Bits B;
} Ifx_GTM_CMU_ECLK_DEN;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_CMU_ECLK_NUM_Bits B;
} Ifx_GTM_CMU_ECLK_NUM;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_CMU_FXCLK_CTRL_Bits B;
} Ifx_GTM_CMU_FXCLK_CTRL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_CMU_GCLK_DEN_Bits B;
} Ifx_GTM_CMU_GCLK_DEN;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_CMU_GCLK_NUM_Bits B;
} Ifx_GTM_CMU_GCLK_NUM;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_CTRL_Bits B;
} Ifx_GTM_CTRL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DATAIN_Bits B;
} Ifx_GTM_DATAIN;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_ACB_Bits B;
} Ifx_GTM_DPLL_ACB;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_ACT_STA_Bits B;
} Ifx_GTM_DPLL_ACT_STA;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_ADD_IN_CAL1_Bits B;
} Ifx_GTM_DPLL_ADD_IN_CAL1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_ADD_IN_CAL2_Bits B;
} Ifx_GTM_DPLL_ADD_IN_CAL2;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_ADD_IN_LD1_Bits B;
} Ifx_GTM_DPLL_ADD_IN_LD1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_ADD_IN_LD2_Bits B;
} Ifx_GTM_DPLL_ADD_IN_LD2;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_ADT_S_Bits B;
} Ifx_GTM_DPLL_ADT_S;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_AOSV_2_Bits B;
} Ifx_GTM_DPLL_AOSV_2;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_APS_Bits B;
} Ifx_GTM_DPLL_APS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_APS_1C3_Bits B;
} Ifx_GTM_DPLL_APS_1C3;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_APS_SYNC_Bits B;
} Ifx_GTM_DPLL_APS_SYNC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_APT_Bits B;
} Ifx_GTM_DPLL_APT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_APT_2C_Bits B;
} Ifx_GTM_DPLL_APT_2C;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_APT_SYNC_Bits B;
} Ifx_GTM_DPLL_APT_SYNC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_CDT_SX_Bits B;
} Ifx_GTM_DPLL_CDT_SX;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_CDT_SX_NOM_Bits B;
} Ifx_GTM_DPLL_CDT_SX_NOM;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_CDT_TX_Bits B;
} Ifx_GTM_DPLL_CDT_TX;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_CDT_TX_NOM_Bits B;
} Ifx_GTM_DPLL_CDT_TX_NOM;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_CNT_NUM1_Bits B;
} Ifx_GTM_DPLL_CNT_NUM1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_CNT_NUM2_Bits B;
} Ifx_GTM_DPLL_CNT_NUM2;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_CRTL_1_SHADOW_STATE_Bits B;
} Ifx_GTM_DPLL_CRTL_1_SHADOW_STATE;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_CTRL_0_Bits B;
} Ifx_GTM_DPLL_CTRL_0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_CTRL_0_SHADOW_STATE_Bits B;
} Ifx_GTM_DPLL_CTRL_0_SHADOW_STATE;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_CTRL_0_SHADOW_TRIGGER_Bits B;
} Ifx_GTM_DPLL_CTRL_0_SHADOW_TRIGGER;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_CTRL_1_Bits B;
} Ifx_GTM_DPLL_CTRL_1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_CTRL_1_SHADOW_TRIGGER_Bits B;
} Ifx_GTM_DPLL_CTRL_1_SHADOW_TRIGGER;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_CTRL_2_Bits B;
} Ifx_GTM_DPLL_CTRL_2;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_CTRL_3_Bits B;
} Ifx_GTM_DPLL_CTRL_3;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_CTRL_4_Bits B;
} Ifx_GTM_DPLL_CTRL_4;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_DLA_Bits B;
} Ifx_GTM_DPLL_DLA;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_DT_S_Bits B;
} Ifx_GTM_DPLL_DT_S;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_DT_S_ACT_Bits B;
} Ifx_GTM_DPLL_DT_S_ACT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_DT_T_ACT_Bits B;
} Ifx_GTM_DPLL_DT_T_ACT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_DTA_Bits B;
} Ifx_GTM_DPLL_DTA;



typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_EDT_S_Bits B;
} Ifx_GTM_DPLL_EDT_S;



typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_EDT_T_Bits B;
} Ifx_GTM_DPLL_EDT_T;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_EIRQ_EN_Bits B;
} Ifx_GTM_DPLL_EIRQ_EN;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_FTV_S_Bits B;
} Ifx_GTM_DPLL_FTV_S;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_FTV_T_Bits B;
} Ifx_GTM_DPLL_FTV_T;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_ID_PMTR_Bits B;
} Ifx_GTM_DPLL_ID_PMTR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_INC_CNT1_Bits B;
} Ifx_GTM_DPLL_INC_CNT1;



typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_INC_CNT2_Bits B;
} Ifx_GTM_DPLL_INC_CNT2;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_IRQ_EN_Bits B;
} Ifx_GTM_DPLL_IRQ_EN;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_IRQ_FORCINT_Bits B;
} Ifx_GTM_DPLL_IRQ_FORCINT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_IRQ_MODE_Bits B;
} Ifx_GTM_DPLL_IRQ_MODE;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_IRQ_NOTIFY_Bits B;
} Ifx_GTM_DPLL_IRQ_NOTIFY;



typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_MEDT_S_Bits B;
} Ifx_GTM_DPLL_MEDT_S;



typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_MEDT_T_Bits B;
} Ifx_GTM_DPLL_MEDT_T;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_MLS1_Bits B;
} Ifx_GTM_DPLL_MLS1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_MLS2_Bits B;
} Ifx_GTM_DPLL_MLS2;



typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_MPVAL1_Bits B;
} Ifx_GTM_DPLL_MPVAL1;



typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_MPVAL2_Bits B;
} Ifx_GTM_DPLL_MPVAL2;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_NA_Bits B;
} Ifx_GTM_DPLL_NA;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_NMB_S_Bits B;
} Ifx_GTM_DPLL_NMB_S;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_NMB_S_TAR_Bits B;
} Ifx_GTM_DPLL_NMB_S_TAR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_NMB_S_TAR_OLD_Bits B;
} Ifx_GTM_DPLL_NMB_S_TAR_OLD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_NMB_T_Bits B;
} Ifx_GTM_DPLL_NMB_T;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_NMB_T_TAR_Bits B;
} Ifx_GTM_DPLL_NMB_T_TAR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_NMB_T_TAR_OLD_Bits B;
} Ifx_GTM_DPLL_NMB_T_TAR_OLD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_NTI_CNT_Bits B;
} Ifx_GTM_DPLL_NTI_CNT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_NUSC_Bits B;
} Ifx_GTM_DPLL_NUSC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_NUTC_Bits B;
} Ifx_GTM_DPLL_NUTC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_OSW_Bits B;
} Ifx_GTM_DPLL_OSW;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_PDT_T_Bits B;
} Ifx_GTM_DPLL_PDT_T;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_PSA_Bits B;
} Ifx_GTM_DPLL_PSA;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_PSAC_Bits B;
} Ifx_GTM_DPLL_PSAC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_PSSC_Bits B;
} Ifx_GTM_DPLL_PSSC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_PSSM_0_Bits B;
} Ifx_GTM_DPLL_PSSM_0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_PSSM_1_Bits B;
} Ifx_GTM_DPLL_PSSM_1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_PSTC_Bits B;
} Ifx_GTM_DPLL_PSTC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_PSTM_0_Bits B;
} Ifx_GTM_DPLL_PSTM_0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_PSTM_1_Bits B;
} Ifx_GTM_DPLL_PSTM_1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_PVT_Bits B;
} Ifx_GTM_DPLL_PVT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_RAM_INI_Bits B;
} Ifx_GTM_DPLL_RAM_INI;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_RCDT_SX_Bits B;
} Ifx_GTM_DPLL_RCDT_SX;



typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_RCDT_SX_NOM_Bits B;
} Ifx_GTM_DPLL_RCDT_SX_NOM;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_RCDT_TX_Bits B;
} Ifx_GTM_DPLL_RCDT_TX;



typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_RCDT_TX_NOM_Bits B;
} Ifx_GTM_DPLL_RCDT_TX_NOM;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_RDT_S_Bits B;
} Ifx_GTM_DPLL_RDT_S;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_RDT_S_ACT_Bits B;
} Ifx_GTM_DPLL_RDT_S_ACT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_RDT_T_ACT_Bits B;
} Ifx_GTM_DPLL_RDT_T_ACT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_SLR_Bits B;
} Ifx_GTM_DPLL_SLR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_STATUS_Bits B;
} Ifx_GTM_DPLL_STATUS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_TBU_TS0_S_Bits B;
} Ifx_GTM_DPLL_TBU_TS0_S;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_TBU_TS0_T_Bits B;
} Ifx_GTM_DPLL_TBU_TS0_T;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_THMA_Bits B;
} Ifx_GTM_DPLL_THMA;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_THMI_Bits B;
} Ifx_GTM_DPLL_THMI;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_THVAL_Bits B;
} Ifx_GTM_DPLL_THVAL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_TLR_Bits B;
} Ifx_GTM_DPLL_TLR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_TOV_Bits B;
} Ifx_GTM_DPLL_TOV;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_TOV_S_Bits B;
} Ifx_GTM_DPLL_TOV_S;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_TS_S_0_Bits B;
} Ifx_GTM_DPLL_TS_S_0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_TS_S_1_Bits B;
} Ifx_GTM_DPLL_TS_S_1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_TS_T_0_Bits B;
} Ifx_GTM_DPLL_TS_T_0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_TS_T_1_Bits B;
} Ifx_GTM_DPLL_TS_T_1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_TSAC_Bits B;
} Ifx_GTM_DPLL_TSAC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DPLL_TSF_S_Bits B;
} Ifx_GTM_DPLL_TSF_S;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DXINCON_Bits B;
} Ifx_GTM_DXINCON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_DXOUTCON_Bits B;
} Ifx_GTM_DXOUTCON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_EIRQ_EN_Bits B;
} Ifx_GTM_EIRQ_EN;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_F2A_ENABLE_Bits B;
} Ifx_GTM_F2A_ENABLE;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_F2A_RD_CH_ARU_RD_FIFO_Bits B;
} Ifx_GTM_F2A_RD_CH_ARU_RD_FIFO;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_F2A_STR_CH_STR_CFG_Bits B;
} Ifx_GTM_F2A_STR_CH_STR_CFG;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_FIFO_CH_CTRL_Bits B;
} Ifx_GTM_FIFO_CH_CTRL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_FIFO_CH_EIRQ_EN_Bits B;
} Ifx_GTM_FIFO_CH_EIRQ_EN;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_FIFO_CH_END_ADDR_Bits B;
} Ifx_GTM_FIFO_CH_END_ADDR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_FIFO_CH_FILL_LEVEL_Bits B;
} Ifx_GTM_FIFO_CH_FILL_LEVEL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_FIFO_CH_IRQ_EN_Bits B;
} Ifx_GTM_FIFO_CH_IRQ_EN;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_FIFO_CH_IRQ_FORCINT_Bits B;
} Ifx_GTM_FIFO_CH_IRQ_FORCINT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_FIFO_CH_IRQ_MODE_Bits B;
} Ifx_GTM_FIFO_CH_IRQ_MODE;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_FIFO_CH_IRQ_NOTIFY_Bits B;
} Ifx_GTM_FIFO_CH_IRQ_NOTIFY;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_FIFO_CH_LOWER_WM_Bits B;
} Ifx_GTM_FIFO_CH_LOWER_WM;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_FIFO_CH_RD_PTR_Bits B;
} Ifx_GTM_FIFO_CH_RD_PTR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_FIFO_CH_START_ADDR_Bits B;
} Ifx_GTM_FIFO_CH_START_ADDR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_FIFO_CH_STATUS_Bits B;
} Ifx_GTM_FIFO_CH_STATUS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_FIFO_CH_UPPER_WM_Bits B;
} Ifx_GTM_FIFO_CH_UPPER_WM;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_FIFO_CH_WR_PTR_Bits B;
} Ifx_GTM_FIFO_CH_WR_PTR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_ICM_IRQG_0_Bits B;
} Ifx_GTM_ICM_IRQG_0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_ICM_IRQG_1_Bits B;
} Ifx_GTM_ICM_IRQG_1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_ICM_IRQG_10_Bits B;
} Ifx_GTM_ICM_IRQG_10;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_ICM_IRQG_2_Bits B;
} Ifx_GTM_ICM_IRQG_2;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_ICM_IRQG_4_Bits B;
} Ifx_GTM_ICM_IRQG_4;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_ICM_IRQG_6_Bits B;
} Ifx_GTM_ICM_IRQG_6;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_ICM_IRQG_7_Bits B;
} Ifx_GTM_ICM_IRQG_7;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_ICM_IRQG_9_Bits B;
} Ifx_GTM_ICM_IRQG_9;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_ICM_IRQG_CEI0_Bits B;
} Ifx_GTM_ICM_IRQG_CEI0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_ICM_IRQG_CEI1_Bits B;
} Ifx_GTM_ICM_IRQG_CEI1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_ICM_IRQG_CEI3_Bits B;
} Ifx_GTM_ICM_IRQG_CEI3;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_ICM_IRQG_MEI_Bits B;
} Ifx_GTM_ICM_IRQG_MEI;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_INOUTSEL_CAN_OUTSEL_Bits B;
} Ifx_GTM_INOUTSEL_CAN_OUTSEL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_INOUTSEL_DSADC_INSEL_Bits B;
} Ifx_GTM_INOUTSEL_DSADC_INSEL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_INOUTSEL_DSADC_OUTSEL0_Bits B;
} Ifx_GTM_INOUTSEL_DSADC_OUTSEL0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_INOUTSEL_PSI5_OUTSEL0_Bits B;
} Ifx_GTM_INOUTSEL_PSI5_OUTSEL0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_INOUTSEL_PSI5S_OUTSEL_Bits B;
} Ifx_GTM_INOUTSEL_PSI5S_OUTSEL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_INOUTSEL_T_OUTSEL_Bits B;
} Ifx_GTM_INOUTSEL_T_OUTSEL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_INOUTSEL_TIM_INSEL_Bits B;
} Ifx_GTM_INOUTSEL_TIM_INSEL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_IRQ_EN_Bits B;
} Ifx_GTM_IRQ_EN;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_IRQ_FORCINT_Bits B;
} Ifx_GTM_IRQ_FORCINT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_IRQ_MODE_Bits B;
} Ifx_GTM_IRQ_MODE;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_IRQ_NOTIFY_Bits B;
} Ifx_GTM_IRQ_NOTIFY;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_KRST0_Bits B;
} Ifx_GTM_KRST0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_KRST1_Bits B;
} Ifx_GTM_KRST1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_KRSTCLR_Bits B;
} Ifx_GTM_KRSTCLR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_MAP_CTRL_Bits B;
} Ifx_GTM_MAP_CTRL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_MCFG_CTRL_Bits B;
} Ifx_GTM_MCFG_CTRL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_MCS_CH0_CTRG_Bits B;
} Ifx_GTM_MCS_CH0_CTRG;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_MCS_CH0_STRG_Bits B;
} Ifx_GTM_MCS_CH0_STRG;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_MCS_CH_ACB_Bits B;
} Ifx_GTM_MCS_CH_ACB;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_MCS_CH_CTRL_Bits B;
} Ifx_GTM_MCS_CH_CTRL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_MCS_CH_EIRQ_EN_Bits B;
} Ifx_GTM_MCS_CH_EIRQ_EN;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_MCS_CH_IRQ_EN_Bits B;
} Ifx_GTM_MCS_CH_IRQ_EN;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_MCS_CH_IRQ_FORCINT_Bits B;
} Ifx_GTM_MCS_CH_IRQ_FORCINT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_MCS_CH_IRQ_MODE_Bits B;
} Ifx_GTM_MCS_CH_IRQ_MODE;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_MCS_CH_IRQ_NOTIFY_Bits B;
} Ifx_GTM_MCS_CH_IRQ_NOTIFY;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_MCS_CH_PC_Bits B;
} Ifx_GTM_MCS_CH_PC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_MCS_CH_R0_Bits B;
} Ifx_GTM_MCS_CH_R0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_MCS_CH_R1_Bits B;
} Ifx_GTM_MCS_CH_R1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_MCS_CH_R2_Bits B;
} Ifx_GTM_MCS_CH_R2;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_MCS_CH_R3_Bits B;
} Ifx_GTM_MCS_CH_R3;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_MCS_CH_R4_Bits B;
} Ifx_GTM_MCS_CH_R4;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_MCS_CH_R5_Bits B;
} Ifx_GTM_MCS_CH_R5;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_MCS_CH_R6_Bits B;
} Ifx_GTM_MCS_CH_R6;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_MCS_CH_R7_Bits B;
} Ifx_GTM_MCS_CH_R7;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_MCS_CTRL_Bits B;
} Ifx_GTM_MCS_CTRL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_MCS_ERR_Bits B;
} Ifx_GTM_MCS_ERR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_MCS_RST_Bits B;
} Ifx_GTM_MCS_RST;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_MCSINTCLR_Bits B;
} Ifx_GTM_MCSINTCLR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_MCSINTSTAT_Bits B;
} Ifx_GTM_MCSINTSTAT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_MON_ACTIVITY_0_Bits B;
} Ifx_GTM_MON_ACTIVITY_0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_MON_STATUS_Bits B;
} Ifx_GTM_MON_STATUS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_MSCIN_INHCON_Bits B;
} Ifx_GTM_MSCIN_INHCON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_MSCIN_INLCON_Bits B;
} Ifx_GTM_MSCIN_INLCON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_MSCSET_CON0_Bits B;
} Ifx_GTM_MSCSET_CON0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_MSCSET_CON1_Bits B;
} Ifx_GTM_MSCSET_CON1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_MSCSET_CON2_Bits B;
} Ifx_GTM_MSCSET_CON2;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_MSCSET_CON3_Bits B;
} Ifx_GTM_MSCSET_CON3;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_OCS_Bits B;
} Ifx_GTM_OCS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_ODA_Bits B;
} Ifx_GTM_ODA;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_OTBU0T_Bits B;
} Ifx_GTM_OTBU0T;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_OTBU1T_Bits B;
} Ifx_GTM_OTBU1T;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_OTBU2T_Bits B;
} Ifx_GTM_OTBU2T;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_OTSC0_Bits B;
} Ifx_GTM_OTSC0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_OTSC1_Bits B;
} Ifx_GTM_OTSC1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_OTSS_Bits B;
} Ifx_GTM_OTSS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_REV_Bits B;
} Ifx_GTM_REV;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_RST_Bits B;
} Ifx_GTM_RST;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_SPE_CMP_Bits B;
} Ifx_GTM_SPE_CMP;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_SPE_CNT_Bits B;
} Ifx_GTM_SPE_CNT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_SPE_CTRL_STAT_Bits B;
} Ifx_GTM_SPE_CTRL_STAT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_SPE_EIRQ_EN_Bits B;
} Ifx_GTM_SPE_EIRQ_EN;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_SPE_IRQ_EN_Bits B;
} Ifx_GTM_SPE_IRQ_EN;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_SPE_IRQ_FORCINT_Bits B;
} Ifx_GTM_SPE_IRQ_FORCINT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_SPE_IRQ_MODE_Bits B;
} Ifx_GTM_SPE_IRQ_MODE;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_SPE_IRQ_NOTIFY_Bits B;
} Ifx_GTM_SPE_IRQ_NOTIFY;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_SPE_OUT_CTRL_Bits B;
} Ifx_GTM_SPE_OUT_CTRL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_SPE_OUT_PAT_Bits B;
} Ifx_GTM_SPE_OUT_PAT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_SPE_PAT_Bits B;
} Ifx_GTM_SPE_PAT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_TBU_CH0_BASE_Bits B;
} Ifx_GTM_TBU_CH0_BASE;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_TBU_CH0_CTRL_Bits B;
} Ifx_GTM_TBU_CH0_CTRL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_TBU_CH1_BASE_Bits B;
} Ifx_GTM_TBU_CH1_BASE;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_TBU_CH1_CTRL_Bits B;
} Ifx_GTM_TBU_CH1_CTRL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_TBU_CH2_BASE_Bits B;
} Ifx_GTM_TBU_CH2_BASE;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_TBU_CH2_CTRL_Bits B;
} Ifx_GTM_TBU_CH2_CTRL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_TBU_CHEN_Bits B;
} Ifx_GTM_TBU_CHEN;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_TIM_AUX_IN_SRC_Bits B;
} Ifx_GTM_TIM_AUX_IN_SRC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_TIM_CH_CNT_Bits B;
} Ifx_GTM_TIM_CH_CNT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_TIM_CH_CNTS_Bits B;
} Ifx_GTM_TIM_CH_CNTS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_TIM_CH_CTRL_Bits B;
} Ifx_GTM_TIM_CH_CTRL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_TIM_CH_ECNT_Bits B;
} Ifx_GTM_TIM_CH_ECNT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_TIM_CH_ECTRL_Bits B;
} Ifx_GTM_TIM_CH_ECTRL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_TIM_CH_EIRQ_EN_Bits B;
} Ifx_GTM_TIM_CH_EIRQ_EN;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_TIM_CH_FLT_FE_Bits B;
} Ifx_GTM_TIM_CH_FLT_FE;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_TIM_CH_FLT_RE_Bits B;
} Ifx_GTM_TIM_CH_FLT_RE;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_TIM_CH_GPR0_Bits B;
} Ifx_GTM_TIM_CH_GPR0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_TIM_CH_GPR1_Bits B;
} Ifx_GTM_TIM_CH_GPR1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_TIM_CH_IRQ_EN_Bits B;
} Ifx_GTM_TIM_CH_IRQ_EN;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_TIM_CH_IRQ_FORCINT_Bits B;
} Ifx_GTM_TIM_CH_IRQ_FORCINT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_TIM_CH_IRQ_MODE_Bits B;
} Ifx_GTM_TIM_CH_IRQ_MODE;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_TIM_CH_IRQ_NOTIFY_Bits B;
} Ifx_GTM_TIM_CH_IRQ_NOTIFY;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_TIM_CH_TDUC_Bits B;
} Ifx_GTM_TIM_CH_TDUC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_TIM_CH_TDUV_Bits B;
} Ifx_GTM_TIM_CH_TDUV;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_TIM_IN_SRC_Bits B;
} Ifx_GTM_TIM_IN_SRC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_TIM_RST_Bits B;
} Ifx_GTM_TIM_RST;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_TOM_CH_CM0_Bits B;
} Ifx_GTM_TOM_CH_CM0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_TOM_CH_CM1_Bits B;
} Ifx_GTM_TOM_CH_CM1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_TOM_CH_CN0_Bits B;
} Ifx_GTM_TOM_CH_CN0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_TOM_CH_CTRL_Bits B;
} Ifx_GTM_TOM_CH_CTRL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_TOM_CH_IRQ_EN_Bits B;
} Ifx_GTM_TOM_CH_IRQ_EN;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_TOM_CH_IRQ_FORCINT_Bits B;
} Ifx_GTM_TOM_CH_IRQ_FORCINT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_TOM_CH_IRQ_MODE_Bits B;
} Ifx_GTM_TOM_CH_IRQ_MODE;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_TOM_CH_IRQ_NOTIFY_Bits B;
} Ifx_GTM_TOM_CH_IRQ_NOTIFY;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_TOM_CH_SR0_Bits B;
} Ifx_GTM_TOM_CH_SR0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_TOM_CH_SR1_Bits B;
} Ifx_GTM_TOM_CH_SR1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_TOM_CH_STAT_Bits B;
} Ifx_GTM_TOM_CH_STAT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_TOM_TGC0_ACT_TB_Bits B;
} Ifx_GTM_TOM_TGC0_ACT_TB;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_TOM_TGC0_ENDIS_CTRL_Bits B;
} Ifx_GTM_TOM_TGC0_ENDIS_CTRL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_TOM_TGC0_ENDIS_STAT_Bits B;
} Ifx_GTM_TOM_TGC0_ENDIS_STAT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_TOM_TGC0_FUPD_CTRL_Bits B;
} Ifx_GTM_TOM_TGC0_FUPD_CTRL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_TOM_TGC0_GLB_CTRL_Bits B;
} Ifx_GTM_TOM_TGC0_GLB_CTRL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_TOM_TGC0_INT_TRIG_Bits B;
} Ifx_GTM_TOM_TGC0_INT_TRIG;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_TOM_TGC0_OUTEN_CTRL_Bits B;
} Ifx_GTM_TOM_TGC0_OUTEN_CTRL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_TOM_TGC0_OUTEN_STAT_Bits B;
} Ifx_GTM_TOM_TGC0_OUTEN_STAT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_TOM_TGC1_ACT_TB_Bits B;
} Ifx_GTM_TOM_TGC1_ACT_TB;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_TOM_TGC1_ENDIS_CTRL_Bits B;
} Ifx_GTM_TOM_TGC1_ENDIS_CTRL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_TOM_TGC1_ENDIS_STAT_Bits B;
} Ifx_GTM_TOM_TGC1_ENDIS_STAT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_TOM_TGC1_FUPD_CTRL_Bits B;
} Ifx_GTM_TOM_TGC1_FUPD_CTRL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_TOM_TGC1_GLB_CTRL_Bits B;
} Ifx_GTM_TOM_TGC1_GLB_CTRL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_TOM_TGC1_INT_TRIG_Bits B;
} Ifx_GTM_TOM_TGC1_INT_TRIG;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_TOM_TGC1_OUTEN_CTRL_Bits B;
} Ifx_GTM_TOM_TGC1_OUTEN_CTRL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_TOM_TGC1_OUTEN_STAT_Bits B;
} Ifx_GTM_TOM_TGC1_OUTEN_STAT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_GTM_TRIGOUT_Bits B;
} Ifx_GTM_TRIGOUT;
# 7181 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxGtm_regdef.h" 3
typedef volatile struct _Ifx_GTM_AFD_CH
{
    Ifx_GTM_AFD_CH_BUF_ACC BUF_ACC;
    unsigned char reserved_4[12];
} Ifx_GTM_AFD_CH;


typedef volatile struct _Ifx_GTM_ATOM_AGC
{
    Ifx_GTM_ATOM_AGC_GLB_CTRL GLB_CTRL;
    Ifx_GTM_ATOM_AGC_ENDIS_CTRL ENDIS_CTRL;
    Ifx_GTM_ATOM_AGC_ENDIS_STAT ENDIS_STAT;
    Ifx_GTM_ATOM_AGC_ACT_TB ACT_TB;
    Ifx_GTM_ATOM_AGC_OUTEN_CTRL OUTEN_CTRL;
    Ifx_GTM_ATOM_AGC_OUTEN_STAT OUTEN_STAT;
    Ifx_GTM_ATOM_AGC_FUPD_CTRL FUPD_CTRL;
    Ifx_GTM_ATOM_AGC_INT_TRIG INT_TRIG;
    unsigned char reserved_20[32];
} Ifx_GTM_ATOM_AGC;


typedef volatile struct _Ifx_GTM_ATOM_CH
{
    Ifx_GTM_ATOM_CH_RDADDR RDADDR;
    union
    {
        Ifx_GTM_ATOM_CH_CTRL CTRL;
        Ifx_GTM_ATOM_CH_SOMC SOMC;
        Ifx_GTM_ATOM_CH_SOMI SOMI;
        Ifx_GTM_ATOM_CH_SOMP SOMP;
        Ifx_GTM_ATOM_CH_SOMS SOMS;
    };

    Ifx_GTM_ATOM_CH_SR0 SR0;
    Ifx_GTM_ATOM_CH_SR1 SR1;
    Ifx_GTM_ATOM_CH_CM0 CM0;
    Ifx_GTM_ATOM_CH_CM1 CM1;
    Ifx_GTM_ATOM_CH_CN0 CN0;
    Ifx_GTM_ATOM_CH_STAT STAT;
    Ifx_GTM_ATOM_CH_IRQ_NOTIFY IRQ_NOTIFY;
    Ifx_GTM_ATOM_CH_IRQ_EN IRQ_EN;
    Ifx_GTM_ATOM_CH_IRQ_FORCINT IRQ_FORCINT;
    Ifx_GTM_ATOM_CH_IRQ_MODE IRQ_MODE;
    unsigned char reserved_30[16];
} Ifx_GTM_ATOM_CH;


typedef volatile struct _Ifx_GTM_CMU_CLK0_5
{
    Ifx_GTM_CMU_CLK0_5_CTRL CTRL;
} Ifx_GTM_CMU_CLK0_5;


typedef volatile struct _Ifx_GTM_CMU_CLK_6
{
    Ifx_GTM_CMU_CLK_6_CTRL CTRL;
} Ifx_GTM_CMU_CLK_6;


typedef volatile struct _Ifx_GTM_CMU_CLK_7
{
    Ifx_GTM_CMU_CLK_7_CTRL CTRL;
} Ifx_GTM_CMU_CLK_7;


typedef volatile struct _Ifx_GTM_CMU_ECLK
{
    Ifx_GTM_CMU_ECLK_NUM NUM;
    Ifx_GTM_CMU_ECLK_DEN DEN;
} Ifx_GTM_CMU_ECLK;


typedef volatile struct _Ifx_GTM_CMU_FXCLK
{
    Ifx_GTM_CMU_FXCLK_CTRL CTRL;
} Ifx_GTM_CMU_FXCLK;


typedef volatile struct _Ifx_GTM_F2A_RD_CH
{
    Ifx_GTM_F2A_RD_CH_ARU_RD_FIFO ARU_RD_FIFO;
} Ifx_GTM_F2A_RD_CH;


typedef volatile struct _Ifx_GTM_F2A_STR_CH
{
    Ifx_GTM_F2A_STR_CH_STR_CFG STR_CFG;
} Ifx_GTM_F2A_STR_CH;


typedef volatile struct _Ifx_GTM_FIFO_CH
{
    Ifx_GTM_FIFO_CH_CTRL CTRL;
    Ifx_GTM_FIFO_CH_END_ADDR END_ADDR;
    Ifx_GTM_FIFO_CH_START_ADDR START_ADDR;
    Ifx_GTM_FIFO_CH_UPPER_WM UPPER_WM;
    Ifx_GTM_FIFO_CH_LOWER_WM LOWER_WM;
    Ifx_GTM_FIFO_CH_STATUS STATUS;
    Ifx_GTM_FIFO_CH_FILL_LEVEL FILL_LEVEL;
    Ifx_GTM_FIFO_CH_WR_PTR WR_PTR;
    Ifx_GTM_FIFO_CH_RD_PTR RD_PTR;
    Ifx_GTM_FIFO_CH_IRQ_NOTIFY IRQ_NOTIFY;
    Ifx_GTM_FIFO_CH_IRQ_EN IRQ_EN;
    Ifx_GTM_FIFO_CH_IRQ_FORCINT IRQ_FORCINT;
    Ifx_GTM_FIFO_CH_IRQ_MODE IRQ_MODE;
    Ifx_GTM_FIFO_CH_EIRQ_EN EIRQ_EN;
    unsigned char reserved_38[8];
} Ifx_GTM_FIFO_CH;


typedef volatile struct _Ifx_GTM_INOUTSEL_CAN
{
    Ifx_GTM_INOUTSEL_CAN_OUTSEL OUTSEL;
} Ifx_GTM_INOUTSEL_CAN;


typedef volatile struct _Ifx_GTM_INOUTSEL_DSADC
{
    Ifx_GTM_INOUTSEL_DSADC_INSEL INSEL[3];
    Ifx_GTM_INOUTSEL_DSADC_OUTSEL0 OUTSEL00;
    unsigned char reserved_10[4];
    Ifx_GTM_INOUTSEL_DSADC_OUTSEL0 OUTSEL10;
} Ifx_GTM_INOUTSEL_DSADC;


typedef volatile struct _Ifx_GTM_INOUTSEL_PSI5
{
    Ifx_GTM_INOUTSEL_PSI5_OUTSEL0 OUTSEL0;
} Ifx_GTM_INOUTSEL_PSI5;


typedef volatile struct _Ifx_GTM_INOUTSEL_PSI5S
{
    Ifx_GTM_INOUTSEL_PSI5S_OUTSEL OUTSEL;
} Ifx_GTM_INOUTSEL_PSI5S;


typedef volatile struct _Ifx_GTM_INOUTSEL_T
{
    Ifx_GTM_INOUTSEL_T_OUTSEL OUTSEL[15];
} Ifx_GTM_INOUTSEL_T;


typedef volatile struct _Ifx_GTM_INOUTSEL_TIM
{
    Ifx_GTM_INOUTSEL_TIM_INSEL INSEL;
} Ifx_GTM_INOUTSEL_TIM;


typedef volatile struct _Ifx_GTM_MCS_CH
{
    Ifx_GTM_MCS_CH_R0 R0;
    Ifx_GTM_MCS_CH_R1 R1;
    Ifx_GTM_MCS_CH_R2 R2;
    Ifx_GTM_MCS_CH_R3 R3;
    Ifx_GTM_MCS_CH_R4 R4;
    Ifx_GTM_MCS_CH_R5 R5;
    Ifx_GTM_MCS_CH_R6 R6;
    Ifx_GTM_MCS_CH_R7 R7;
    Ifx_GTM_MCS_CH_CTRL CTRL;
    Ifx_GTM_MCS_CH_ACB ACB;
    unsigned char reserved_28[24];
    Ifx_GTM_MCS_CH_PC PC;
    Ifx_GTM_MCS_CH_IRQ_NOTIFY IRQ_NOTIFY;
    Ifx_GTM_MCS_CH_IRQ_EN IRQ_EN;
    Ifx_GTM_MCS_CH_IRQ_FORCINT IRQ_FORCINT;
    Ifx_GTM_MCS_CH_IRQ_MODE IRQ_MODE;
    Ifx_GTM_MCS_CH_EIRQ_EN EIRQ_EN;
    unsigned char reserved_58[40];
} Ifx_GTM_MCS_CH;


typedef volatile struct _Ifx_GTM_MCS_CH0
{
    Ifx_GTM_MCS_CH_R0 R0;
    Ifx_GTM_MCS_CH_R1 R1;
    Ifx_GTM_MCS_CH_R2 R2;
    Ifx_GTM_MCS_CH_R3 R3;
    Ifx_GTM_MCS_CH_R4 R4;
    Ifx_GTM_MCS_CH_R5 R5;
    Ifx_GTM_MCS_CH_R6 R6;
    Ifx_GTM_MCS_CH_R7 R7;
    Ifx_GTM_MCS_CH_CTRL CTRL;
    Ifx_GTM_MCS_CH_ACB ACB;
    Ifx_GTM_MCS_CH0_CTRG CTRG;
    Ifx_GTM_MCS_CH0_STRG STRG;
    unsigned char reserved_30[16];
    Ifx_GTM_MCS_CH_PC PC;
    Ifx_GTM_MCS_CH_IRQ_NOTIFY IRQ_NOTIFY;
    Ifx_GTM_MCS_CH_IRQ_EN IRQ_EN;
    Ifx_GTM_MCS_CH_IRQ_FORCINT IRQ_FORCINT;
    Ifx_GTM_MCS_CH_IRQ_MODE IRQ_MODE;
    Ifx_GTM_MCS_CH_EIRQ_EN EIRQ_EN;
} Ifx_GTM_MCS_CH0;


typedef volatile struct _Ifx_GTM_TIM_CH
{
    Ifx_GTM_TIM_CH_GPR0 GPR0;
    Ifx_GTM_TIM_CH_GPR1 GPR1;
    Ifx_GTM_TIM_CH_CNT CNT;
    Ifx_GTM_TIM_CH_ECNT ECNT;
    Ifx_GTM_TIM_CH_CNTS CNTS;
    Ifx_GTM_TIM_CH_TDUC TDUC;
    Ifx_GTM_TIM_CH_TDUV TDUV;
    Ifx_GTM_TIM_CH_FLT_RE FLT_RE;
    Ifx_GTM_TIM_CH_FLT_FE FLT_FE;
    Ifx_GTM_TIM_CH_CTRL CTRL;
    Ifx_GTM_TIM_CH_ECTRL ECTRL;
    Ifx_GTM_TIM_CH_IRQ_NOTIFY IRQ_NOTIFY;
    Ifx_GTM_TIM_CH_IRQ_EN IRQ_EN;
    Ifx_GTM_TIM_CH_IRQ_FORCINT IRQ_FORCINT;
    Ifx_GTM_TIM_CH_IRQ_MODE IRQ_MODE;
    Ifx_GTM_TIM_CH_EIRQ_EN EIRQ_EN;
    unsigned char reserved_40[56];
} Ifx_GTM_TIM_CH;


typedef volatile struct _Ifx_GTM_TOM_CH
{
    Ifx_GTM_TOM_CH_CTRL CTRL;
    Ifx_GTM_TOM_CH_SR0 SR0;
    Ifx_GTM_TOM_CH_SR1 SR1;
    Ifx_GTM_TOM_CH_CM0 CM0;
    Ifx_GTM_TOM_CH_CM1 CM1;
    Ifx_GTM_TOM_CH_CN0 CN0;
    Ifx_GTM_TOM_CH_STAT STAT;
    Ifx_GTM_TOM_CH_IRQ_NOTIFY IRQ_NOTIFY;
    Ifx_GTM_TOM_CH_IRQ_EN IRQ_EN;
    Ifx_GTM_TOM_CH_IRQ_FORCINT IRQ_FORCINT;
    Ifx_GTM_TOM_CH_IRQ_MODE IRQ_MODE;
    unsigned char reserved_2C[4];
} Ifx_GTM_TOM_CH;
# 7426 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxGtm_regdef.h" 3
typedef volatile struct _Ifx_GTM_AFD
{
    Ifx_GTM_AFD_CH CH[8];
} Ifx_GTM_AFD;


typedef volatile struct _Ifx_GTM_ARU
{
    Ifx_GTM_ARU_ARU_ACCESS ARU_ACCESS;
    Ifx_GTM_ARU_DATA_H DATA_H;
    Ifx_GTM_ARU_DATA_L DATA_L;
    Ifx_GTM_ARU_DBG_ACCESS0 DBG_ACCESS0;
    Ifx_GTM_ARU_DBG_DATA0_H DBG_DATA0_H;
    Ifx_GTM_ARU_DBG_DATA0_L DBG_DATA0_L;
    Ifx_GTM_ARU_DBG_ACCESS1 DBG_ACCESS1;
    Ifx_GTM_ARU_DBG_DATA1_H DBG_DATA1_H;
    Ifx_GTM_ARU_DBG_DATA1_L DBG_DATA1_L;
    Ifx_GTM_ARU_IRQ_NOTIFY IRQ_NOTIFY;
    Ifx_GTM_ARU_IRQ_EN IRQ_EN;
    Ifx_GTM_ARU_IRQ_FORCINT IRQ_FORCINT;
    Ifx_GTM_ARU_IRQ_MODE IRQ_MODE;
} Ifx_GTM_ARU;


typedef volatile struct _Ifx_GTM_ATOM
{
    Ifx_GTM_ATOM_CH CH0;
    Ifx_GTM_ATOM_AGC AGC;
    Ifx_GTM_ATOM_CH CH1;
    unsigned char reserved_C0[64];
    Ifx_GTM_ATOM_CH CH2;
    unsigned char reserved_140[64];
    Ifx_GTM_ATOM_CH CH3;
    unsigned char reserved_1C0[64];
    Ifx_GTM_ATOM_CH CH4;
    unsigned char reserved_240[64];
    Ifx_GTM_ATOM_CH CH5;
    unsigned char reserved_2C0[64];
    Ifx_GTM_ATOM_CH CH6;
    unsigned char reserved_340[64];
    Ifx_GTM_ATOM_CH CH7;
    unsigned char reserved_3C0[1088];
} Ifx_GTM_ATOM;


typedef volatile struct _Ifx_GTM_BRC
{
    Ifx_GTM_BRC_SRC0_ADDR SRC0_ADDR;
    Ifx_GTM_BRC_SRC0_DEST SRC0_DEST;
    Ifx_GTM_BRC_SRC1_ADDR SRC1_ADDR;
    Ifx_GTM_BRC_SRC1_DEST SRC1_DEST;
    Ifx_GTM_BRC_SRC2_ADDR SRC2_ADDR;
    Ifx_GTM_BRC_SRC2_DEST SRC2_DEST;
    Ifx_GTM_BRC_SRC3_ADDR SRC3_ADDR;
    Ifx_GTM_BRC_SRC3_DEST SRC3_DEST;
    Ifx_GTM_BRC_SRC4_ADDR SRC4_ADDR;
    Ifx_GTM_BRC_SRC4_DEST SRC4_DEST;
    Ifx_GTM_BRC_SRC5_ADDR SRC5_ADDR;
    Ifx_GTM_BRC_SRC5_DEST SRC5_DEST;
    Ifx_GTM_BRC_SRC6_ADDR SRC6_ADDR;
    Ifx_GTM_BRC_SRC6_DEST SRC6_DEST;
    Ifx_GTM_BRC_SRC7_ADDR SRC7_ADDR;
    Ifx_GTM_BRC_SRC7_DEST SRC7_DEST;
    Ifx_GTM_BRC_SRC8_ADDR SRC8_ADDR;
    Ifx_GTM_BRC_SRC8_DEST SRC8_DEST;
    Ifx_GTM_BRC_SRC9_ADDR SRC9_ADDR;
    Ifx_GTM_BRC_SRC9_DEST SRC9_DEST;
    Ifx_GTM_BRC_SRC10_ADDR SRC10_ADDR;
    Ifx_GTM_BRC_SRC10_DEST SRC10_DEST;
    Ifx_GTM_BRC_SRC11_ADDR SRC11_ADDR;
    Ifx_GTM_BRC_SRC11_DEST SRC11_DEST;
    Ifx_GTM_BRC_IRQ_NOTIFY IRQ_NOTIFY;
    Ifx_GTM_BRC_IRQ_EN IRQ_EN;
    Ifx_GTM_BRC_IRQ_FORCINT IRQ_FORCINT;
    Ifx_GTM_BRC_IRQ_MODE IRQ_MODE;
    Ifx_GTM_BRC_RST RST;
    Ifx_GTM_BRC_EIRQ_EN EIRQ_EN;
} Ifx_GTM_BRC;


typedef volatile struct _Ifx_GTM_BRIDGE
{
    Ifx_GTM_BRIDGE_MODE MODE;
    Ifx_GTM_BRIDGE_PTR1 PTR1;
    Ifx_GTM_BRIDGE_PTR2 PTR2;
} Ifx_GTM_BRIDGE;


typedef volatile struct _Ifx_GTM_CMP
{
    Ifx_GTM_CMP_EN EN;
    Ifx_GTM_CMP_IRQ_NOTIFY IRQ_NOTIFY;
    Ifx_GTM_CMP_IRQ_EN IRQ_EN;
    Ifx_GTM_CMP_IRQ_FORCINT IRQ_FORCINT;
    Ifx_GTM_CMP_IRQ_MODE IRQ_MODE;
    Ifx_GTM_CMP_EIRQ_EN EIRQ_EN;
} Ifx_GTM_CMP;


typedef volatile struct _Ifx_GTM_CMU
{
    Ifx_GTM_CMU_CLK_EN CLK_EN;
    Ifx_GTM_CMU_GCLK_NUM GCLK_NUM;
    Ifx_GTM_CMU_GCLK_DEN GCLK_DEN;
    Ifx_GTM_CMU_CLK0_5 CLK0_5[6];
    Ifx_GTM_CMU_CLK_6 CLK_6;
    Ifx_GTM_CMU_CLK_7 CLK_7;
    Ifx_GTM_CMU_ECLK ECLK[3];
    Ifx_GTM_CMU_FXCLK FXCLK;
} Ifx_GTM_CMU;


typedef volatile struct _Ifx_GTM_DPLL
{
    Ifx_GTM_DPLL_CTRL_0 CTRL_0;
    Ifx_GTM_DPLL_CTRL_1 CTRL_1;
    Ifx_GTM_DPLL_CTRL_2 CTRL_2;
    Ifx_GTM_DPLL_CTRL_3 CTRL_3;
    Ifx_GTM_DPLL_CTRL_4 CTRL_4;
    unsigned char reserved_14[4];
    Ifx_GTM_DPLL_ACT_STA ACT_STA;
    Ifx_GTM_DPLL_OSW OSW;
    Ifx_GTM_DPLL_AOSV_2 AOSV_2;
    Ifx_GTM_DPLL_APT APT;
    Ifx_GTM_DPLL_APS APS;
    Ifx_GTM_DPLL_APT_2C APT_2C;
    Ifx_GTM_DPLL_APS_1C3 APS_1C3;
    Ifx_GTM_DPLL_NUTC NUTC;
    Ifx_GTM_DPLL_NUSC NUSC;
    Ifx_GTM_DPLL_NTI_CNT NTI_CNT;
    Ifx_GTM_DPLL_IRQ_NOTIFY IRQ_NOTIFY;
    Ifx_GTM_DPLL_IRQ_EN IRQ_EN;
    Ifx_GTM_DPLL_IRQ_FORCINT IRQ_FORCINT;
    Ifx_GTM_DPLL_IRQ_MODE IRQ_MODE;
    Ifx_GTM_DPLL_EIRQ_EN EIRQ_EN;
    unsigned char reserved_54[92];
    Ifx_GTM_DPLL_INC_CNT1 INC_CNT1;
    Ifx_GTM_DPLL_INC_CNT2 INC_CNT2;
    Ifx_GTM_DPLL_APT_SYNC APT_SYNC;
    Ifx_GTM_DPLL_APS_SYNC APS_SYNC;
    Ifx_GTM_DPLL_TBU_TS0_T TBU_TS0_T;
    Ifx_GTM_DPLL_TBU_TS0_S TBU_TS0_S;
    Ifx_GTM_DPLL_ADD_IN_LD1 ADD_IN_LD1;
    Ifx_GTM_DPLL_ADD_IN_LD2 ADD_IN_LD2;
    unsigned char reserved_D0[44];
    Ifx_GTM_DPLL_STATUS STATUS;
    Ifx_GTM_DPLL_ID_PMTR ID_PMTR[24];
    unsigned char reserved_160[128];
    Ifx_GTM_DPLL_CTRL_0_SHADOW_TRIGGER CTRL_0_SHADOW_TRIGGER;
    Ifx_GTM_DPLL_CTRL_0_SHADOW_STATE CTRL_0_SHADOW_STATE;
    Ifx_GTM_DPLL_CTRL_1_SHADOW_TRIGGER CTRL_1_SHADOW_TRIGGER;
    Ifx_GTM_DPLL_CRTL_1_SHADOW_STATE CRTL_1_SHADOW_STATE;
    unsigned char reserved_1F0[12];
    Ifx_GTM_DPLL_RAM_INI RAM_INI;
    Ifx_GTM_DPLL_PSA PSA[24];
    unsigned char reserved_260[32];
    Ifx_GTM_DPLL_DLA DLA[24];
    unsigned char reserved_2E0[32];
    Ifx_GTM_DPLL_NA NA[24];
    unsigned char reserved_360[32];
    Ifx_GTM_DPLL_DTA DTA[24];
    unsigned char reserved_3E0[32];
    Ifx_GTM_DPLL_TS_T_0 TS_T_0;
    Ifx_GTM_DPLL_TS_T_1 TS_T_1;
    Ifx_GTM_DPLL_FTV_T FTV_T;
    unsigned char reserved_40C[4];
    Ifx_GTM_DPLL_TS_S_0 TS_S_0;
    Ifx_GTM_DPLL_TS_S_1 TS_S_1;
    Ifx_GTM_DPLL_FTV_S FTV_S;
    unsigned char reserved_41C[4];
    Ifx_GTM_DPLL_THMI THMI;
    Ifx_GTM_DPLL_THMA THMA;
    Ifx_GTM_DPLL_THVAL THVAL;
    unsigned char reserved_42C[4];
    Ifx_GTM_DPLL_TOV TOV;
    Ifx_GTM_DPLL_TOV_S TOV_S;
    Ifx_GTM_DPLL_ADD_IN_CAL1 ADD_IN_CAL1;
    Ifx_GTM_DPLL_ADD_IN_CAL2 ADD_IN_CAL2;
    Ifx_GTM_DPLL_MPVAL1 MPVAL1;
    Ifx_GTM_DPLL_MPVAL2 MPVAL2;
    Ifx_GTM_DPLL_NMB_T_TAR NMB_T_TAR;
    Ifx_GTM_DPLL_NMB_T_TAR_OLD NMB_T_TAR_OLD;
    Ifx_GTM_DPLL_NMB_S_TAR NMB_S_TAR;
    Ifx_GTM_DPLL_NMB_S_TAR_OLD NMB_S_TAR_OLD;
    unsigned char reserved_458[8];
    Ifx_GTM_DPLL_RCDT_TX RCDT_TX;
    Ifx_GTM_DPLL_RCDT_SX RCDT_SX;
    Ifx_GTM_DPLL_RCDT_TX_NOM RCDT_TX_NOM;
    Ifx_GTM_DPLL_RCDT_SX_NOM RCDT_SX_NOM;
    Ifx_GTM_DPLL_RDT_T_ACT RDT_T_ACT;
    Ifx_GTM_DPLL_RDT_S_ACT RDT_S_ACT;
    Ifx_GTM_DPLL_DT_T_ACT DT_T_ACT;
    Ifx_GTM_DPLL_DT_S_ACT DT_S_ACT;
    Ifx_GTM_DPLL_EDT_T EDT_T;
    Ifx_GTM_DPLL_MEDT_T MEDT_T;
    Ifx_GTM_DPLL_EDT_S EDT_S;
    Ifx_GTM_DPLL_MEDT_S MEDT_S;
    Ifx_GTM_DPLL_CDT_TX CDT_TX;
    Ifx_GTM_DPLL_CDT_SX CDT_SX;
    Ifx_GTM_DPLL_CDT_TX_NOM CDT_TX_NOM;
    Ifx_GTM_DPLL_CDT_SX_NOM CDT_SX_NOM;
    Ifx_GTM_DPLL_TLR TLR;
    Ifx_GTM_DPLL_SLR SLR;
    unsigned char reserved_4A8[88];
    Ifx_GTM_DPLL_PDT_T PDT_T[24];
    unsigned char reserved_560[96];
    Ifx_GTM_DPLL_MLS1 MLS1;
    Ifx_GTM_DPLL_MLS2 MLS2;
    Ifx_GTM_DPLL_CNT_NUM1 CNT_NUM1;
    Ifx_GTM_DPLL_CNT_NUM2 CNT_NUM2;
    Ifx_GTM_DPLL_PVT PVT;
    unsigned char reserved_5D4[12];
    Ifx_GTM_DPLL_PSTC PSTC;
    Ifx_GTM_DPLL_PSSC PSSC;
    Ifx_GTM_DPLL_PSTM_0 PSTM_0;
    Ifx_GTM_DPLL_PSTM_1 PSTM_1;
    Ifx_GTM_DPLL_PSSM_0 PSSM_0;
    Ifx_GTM_DPLL_PSSM_1 PSSM_1;
    Ifx_GTM_DPLL_NMB_T NMB_T;
    Ifx_GTM_DPLL_NMB_S NMB_S;
    Ifx_GTM_DPLL_RDT_S RDT_S[64];
    Ifx_GTM_DPLL_TSF_S TSF_S[64];
    Ifx_GTM_DPLL_ADT_S ADT_S[64];
    Ifx_GTM_DPLL_DT_S DT_S[64];
    unsigned char reserved_A00[1024];
    Ifx_GTM_DPLL_TSAC TSAC[24];
    unsigned char reserved_E60[32];
    Ifx_GTM_DPLL_PSAC PSAC[24];
    unsigned char reserved_EE0[32];
    Ifx_GTM_DPLL_ACB ACB[6];
} Ifx_GTM_DPLL;


typedef volatile struct _Ifx_GTM_F2A
{
    Ifx_GTM_F2A_RD_CH RD_CH[8];
    Ifx_GTM_F2A_STR_CH STR_CH[8];
    Ifx_GTM_F2A_ENABLE ENABLE;
} Ifx_GTM_F2A;


typedef volatile struct _Ifx_GTM_FIFO
{
    Ifx_GTM_FIFO_CH CH[8];
} Ifx_GTM_FIFO;


typedef volatile struct _Ifx_GTM_ICM
{
    Ifx_GTM_ICM_IRQG_0 IRQG_0;
    Ifx_GTM_ICM_IRQG_1 IRQG_1;
    Ifx_GTM_ICM_IRQG_2 IRQG_2;
    unsigned char reserved_C[4];
    Ifx_GTM_ICM_IRQG_4 IRQG_4;
    unsigned char reserved_14[4];
    Ifx_GTM_ICM_IRQG_6 IRQG_6;
    Ifx_GTM_ICM_IRQG_7 IRQG_7;
    unsigned char reserved_20[4];
    Ifx_GTM_ICM_IRQG_9 IRQG_9;
    Ifx_GTM_ICM_IRQG_10 IRQG_10;
    unsigned char reserved_2C[4];
    Ifx_GTM_ICM_IRQG_MEI IRQG_MEI;
    Ifx_GTM_ICM_IRQG_CEI0 IRQG_CEI0;
    Ifx_GTM_ICM_IRQG_CEI1 IRQG_CEI1;
    unsigned char reserved_3C[4];
    Ifx_GTM_ICM_IRQG_CEI3 IRQG_CEI3;
} Ifx_GTM_ICM;


typedef volatile struct _Ifx_GTM_INOUTSEL
{
    Ifx_GTM_INOUTSEL_TIM TIM[4];
    unsigned char reserved_10[16];
    Ifx_GTM_INOUTSEL_T T;
    unsigned char reserved_5C[16];
    Ifx_GTM_INOUTSEL_DSADC DSADC;
    unsigned char reserved_84[12];
    Ifx_GTM_INOUTSEL_CAN CAN;
    Ifx_GTM_INOUTSEL_PSI5 PSI5;
    Ifx_GTM_INOUTSEL_PSI5S PSI5S;
} Ifx_GTM_INOUTSEL;


typedef volatile struct _Ifx_GTM_MCS
{
    Ifx_GTM_MCS_CH0 CH0;
    unsigned char reserved_58[28];
    Ifx_GTM_MCS_CTRL CTRL;
    Ifx_GTM_MCS_RST RST;
    Ifx_GTM_MCS_ERR ERR;
    Ifx_GTM_MCS_CH CH1;
    Ifx_GTM_MCS_CH CH2;
    Ifx_GTM_MCS_CH CH3;
    Ifx_GTM_MCS_CH CH4;
    Ifx_GTM_MCS_CH CH5;
    Ifx_GTM_MCS_CH CH6;
    Ifx_GTM_MCS_CH CH7;
    unsigned char reserved_400[3072];
} Ifx_GTM_MCS;


typedef volatile struct _Ifx_GTM_MON
{
    Ifx_GTM_MON_STATUS STATUS;
    Ifx_GTM_MON_ACTIVITY_0 ACTIVITY_0;
} Ifx_GTM_MON;


typedef volatile struct _Ifx_GTM_MSCIN
{
    Ifx_GTM_MSCIN_INLCON INLCON;
    Ifx_GTM_MSCIN_INHCON INHCON;
} Ifx_GTM_MSCIN;


typedef volatile struct _Ifx_GTM_MSCSET
{
    Ifx_GTM_MSCSET_CON0 CON0;
    Ifx_GTM_MSCSET_CON1 CON1;
    Ifx_GTM_MSCSET_CON2 CON2;
    Ifx_GTM_MSCSET_CON3 CON3;
} Ifx_GTM_MSCSET;


typedef volatile struct _Ifx_GTM_SPE
{
    Ifx_GTM_SPE_CTRL_STAT CTRL_STAT;
    Ifx_GTM_SPE_PAT PAT;
    Ifx_GTM_SPE_OUT_PAT OUT_PAT[8];
    Ifx_GTM_SPE_OUT_CTRL OUT_CTRL;
    Ifx_GTM_SPE_IRQ_NOTIFY IRQ_NOTIFY;
    Ifx_GTM_SPE_IRQ_EN IRQ_EN;
    Ifx_GTM_SPE_IRQ_FORCINT IRQ_FORCINT;
    Ifx_GTM_SPE_IRQ_MODE IRQ_MODE;
    Ifx_GTM_SPE_EIRQ_EN EIRQ_EN;
    Ifx_GTM_SPE_CNT CNT;
    Ifx_GTM_SPE_CMP CMP;
    unsigned char reserved_48[56];
} Ifx_GTM_SPE;


typedef volatile struct _Ifx_GTM_TBU
{
    Ifx_GTM_TBU_CHEN CHEN;
    Ifx_GTM_TBU_CH0_CTRL CH0_CTRL;
    Ifx_GTM_TBU_CH0_BASE CH0_BASE;
    Ifx_GTM_TBU_CH1_CTRL CH1_CTRL;
    Ifx_GTM_TBU_CH1_BASE CH1_BASE;
    Ifx_GTM_TBU_CH2_CTRL CH2_CTRL;
    Ifx_GTM_TBU_CH2_BASE CH2_BASE;
} Ifx_GTM_TBU;


typedef volatile struct _Ifx_GTM_TIM
{
    Ifx_GTM_TIM_CH CH0;
    Ifx_GTM_TIM_IN_SRC IN_SRC;
    Ifx_GTM_TIM_RST RST;
    Ifx_GTM_TIM_CH CH1;
    unsigned char reserved_F8[8];
    Ifx_GTM_TIM_CH CH2;
    unsigned char reserved_178[8];
    Ifx_GTM_TIM_CH CH3;
    unsigned char reserved_1F8[8];
    Ifx_GTM_TIM_CH CH4;
    unsigned char reserved_278[8];
    Ifx_GTM_TIM_CH CH5;
    unsigned char reserved_2F8[8];
    Ifx_GTM_TIM_CH CH6;
    unsigned char reserved_378[8];
    Ifx_GTM_TIM_CH CH7;
    unsigned char reserved_3F8[1032];
} Ifx_GTM_TIM;


typedef volatile struct _Ifx_GTM_TOM
{
    Ifx_GTM_TOM_CH CH0;
    Ifx_GTM_TOM_TGC0_GLB_CTRL TGC0_GLB_CTRL;
    Ifx_GTM_TOM_TGC0_ACT_TB TGC0_ACT_TB;
    Ifx_GTM_TOM_TGC0_FUPD_CTRL TGC0_FUPD_CTRL;
    Ifx_GTM_TOM_TGC0_INT_TRIG TGC0_INT_TRIG;
    Ifx_GTM_TOM_CH CH1;
    Ifx_GTM_TOM_TGC0_ENDIS_CTRL TGC0_ENDIS_CTRL;
    Ifx_GTM_TOM_TGC0_ENDIS_STAT TGC0_ENDIS_STAT;
    Ifx_GTM_TOM_TGC0_OUTEN_CTRL TGC0_OUTEN_CTRL;
    Ifx_GTM_TOM_TGC0_OUTEN_STAT TGC0_OUTEN_STAT;
    Ifx_GTM_TOM_CH CH2;
    unsigned char reserved_B0[16];
    Ifx_GTM_TOM_CH CH3;
    unsigned char reserved_F0[16];
    Ifx_GTM_TOM_CH CH4;
    unsigned char reserved_130[16];
    Ifx_GTM_TOM_CH CH5;
    unsigned char reserved_170[16];
    Ifx_GTM_TOM_CH CH6;
    unsigned char reserved_1B0[16];
    Ifx_GTM_TOM_CH CH7;
    unsigned char reserved_1F0[16];
    Ifx_GTM_TOM_CH CH8;
    Ifx_GTM_TOM_TGC1_GLB_CTRL TGC1_GLB_CTRL;
    Ifx_GTM_TOM_TGC1_ACT_TB TGC1_ACT_TB;
    Ifx_GTM_TOM_TGC1_FUPD_CTRL TGC1_FUPD_CTRL;
    Ifx_GTM_TOM_TGC1_INT_TRIG TGC1_INT_TRIG;
    Ifx_GTM_TOM_CH CH9;
    Ifx_GTM_TOM_TGC1_ENDIS_CTRL TGC1_ENDIS_CTRL;
    Ifx_GTM_TOM_TGC1_ENDIS_STAT TGC1_ENDIS_STAT;
    Ifx_GTM_TOM_TGC1_OUTEN_CTRL TGC1_OUTEN_CTRL;
    Ifx_GTM_TOM_TGC1_OUTEN_STAT TGC1_OUTEN_STAT;
    Ifx_GTM_TOM_CH CH10;
    unsigned char reserved_2B0[16];
    Ifx_GTM_TOM_CH CH11;
    unsigned char reserved_2F0[16];
    Ifx_GTM_TOM_CH CH12;
    unsigned char reserved_330[16];
    Ifx_GTM_TOM_CH CH13;
    unsigned char reserved_370[16];
    Ifx_GTM_TOM_CH CH14;
    unsigned char reserved_3B0[16];
    Ifx_GTM_TOM_CH CH15;
    unsigned char reserved_3F0[1040];
} Ifx_GTM_TOM;
# 7860 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxGtm_regdef.h" 3
typedef volatile struct _Ifx_GTM
{
    Ifx_GTM_REV REV;
    Ifx_GTM_RST RST;
    Ifx_GTM_CTRL CTRL;
    Ifx_GTM_AEI_ADDR_XPT AEI_ADDR_XPT;
    Ifx_GTM_IRQ_NOTIFY IRQ_NOTIFY;
    Ifx_GTM_IRQ_EN IRQ_EN;
    Ifx_GTM_IRQ_FORCINT IRQ_FORCINT;
    Ifx_GTM_IRQ_MODE IRQ_MODE;
    Ifx_GTM_EIRQ_EN EIRQ_EN;
    unsigned char reserved_24[12];
    Ifx_GTM_BRIDGE BRIDGE;
    unsigned char reserved_3C[4];
    Ifx_GTM_TIM_AUX_IN_SRC TIM_AUX_IN_SRC[4];
    unsigned char reserved_50[176];
    Ifx_GTM_TBU TBU;
    unsigned char reserved_11C[100];
    Ifx_GTM_MON MON;
    unsigned char reserved_188[120];
    Ifx_GTM_CMP CMP;
    unsigned char reserved_218[104];
    Ifx_GTM_ARU ARU;
    unsigned char reserved_2B4[76];
    Ifx_GTM_CMU CMU;
    unsigned char reserved_348[184];
    Ifx_GTM_BRC BRC;
    unsigned char reserved_478[392];
    Ifx_GTM_ICM ICM;
    unsigned char reserved_644[444];
    Ifx_GTM_SPE SPE[2];
    unsigned char reserved_900[1536];
    Ifx_GTM_MAP_CTRL MAP_CTRL;
    unsigned char reserved_F04[60];
    Ifx_GTM_MCFG_CTRL MCFG_CTRL;
    unsigned char reserved_F44[188];
    Ifx_GTM_TIM TIM[4];
    unsigned char reserved_3000[20480];
    Ifx_GTM_TOM TOM[3];
    unsigned char reserved_9800[14336];
    Ifx_GTM_ATOM ATOM[5];
    unsigned char reserved_F800[34816];
    Ifx_GTM_F2A F2A0;
    unsigned char reserved_18044[60];
    Ifx_GTM_AFD AFD0;
    unsigned char reserved_18100[768];
    Ifx_GTM_FIFO FIFO0;
    unsigned char reserved_18600[64000];
    Ifx_GTM_DPLL DPLL;
    unsigned char reserved_28F18[28904];
    Ifx_GTM_MCS MCS[4];
    unsigned char reserved_34000[441600];
    Ifx_GTM_CLC CLC;
    unsigned char reserved_9FD04[12];
    Ifx_GTM_INOUTSEL INOUTSEL;
    unsigned char reserved_9FDAC[4];
    Ifx_GTM_ADCTRIG0OUT0 ADCTRIG0OUT0;
    Ifx_GTM_ADCTRIG0OUT1 ADCTRIG0OUT1;
    Ifx_GTM_ADCTRIG1OUT0 ADCTRIG1OUT0;
    Ifx_GTM_ADCTRIG1OUT1 ADCTRIG1OUT1;
    unsigned char reserved_9FDC0[4];
    Ifx_GTM_OTBU0T OTBU0T;
    Ifx_GTM_OTBU1T OTBU1T;
    Ifx_GTM_OTBU2T OTBU2T;
    Ifx_GTM_OTSS OTSS;
    Ifx_GTM_OTSC0 OTSC0;
    Ifx_GTM_OTSC1 OTSC1;
    Ifx_GTM_ODA ODA;
    unsigned char reserved_9FDE0[8];
    Ifx_GTM_OCS OCS;
    Ifx_GTM_KRSTCLR KRSTCLR;
    Ifx_GTM_KRST1 KRST1;
    Ifx_GTM_KRST0 KRST0;
    Ifx_GTM_ACCEN1 ACCEN1;
    Ifx_GTM_ACCEN0 ACCEN0;
    Ifx_GTM_DXOUTCON DXOUTCON;
    Ifx_GTM_TRIGOUT TRIGOUT0[4];
    unsigned char reserved_9FE14[48];
    Ifx_GTM_TRIGOUT TRIGOUT1[4];
    unsigned char reserved_9FE54[28];
    Ifx_GTM_MCSINTSTAT MCSINTSTAT;
    Ifx_GTM_MCSINTCLR MCSINTCLR;
    unsigned char reserved_9FE78[24];
    Ifx_GTM_DXINCON DXINCON;
    Ifx_GTM_DATAIN DATAIN0[4];
    unsigned char reserved_9FEA4[48];
    Ifx_GTM_DATAIN DATAIN1[4];
    unsigned char reserved_9FEE4[28];
    Ifx_GTM_MSCSET MSCSET_1S[4];
    unsigned char reserved_9FF40[32];
    Ifx_GTM_MSCIN MSCIN[2];
    unsigned char reserved_9FF70[144];
} Ifx_GTM;
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxGtm_reg.h" 2 3





#define MODULE_GTM (*(Ifx_GTM*)0xF0100000u)







#define GTM_ACCEN0 (*(volatile Ifx_GTM_ACCEN0*)0xF019FDFCu)


#define GTM_ACCEN1 (*(volatile Ifx_GTM_ACCEN1*)0xF019FDF8u)


#define GTM_ADCTRIG0OUT0 (*(volatile Ifx_GTM_ADCTRIG0OUT0*)0xF019FDB0u)


#define GTM_ADCTRIG0OUT1 (*(volatile Ifx_GTM_ADCTRIG0OUT1*)0xF019FDB4u)


#define GTM_ADCTRIG1OUT0 (*(volatile Ifx_GTM_ADCTRIG1OUT0*)0xF019FDB8u)


#define GTM_ADCTRIG1OUT1 (*(volatile Ifx_GTM_ADCTRIG1OUT1*)0xF019FDBCu)


#define GTM_AEI_ADDR_XPT (*(volatile Ifx_GTM_AEI_ADDR_XPT*)0xF010000Cu)


#define GTM_AFD0_CH0_BUF_ACC (*(volatile Ifx_GTM_AFD_CH_BUF_ACC*)0xF0118080u)


#define GTM_AFD0_CH1_BUF_ACC (*(volatile Ifx_GTM_AFD_CH_BUF_ACC*)0xF0118090u)


#define GTM_AFD0_CH2_BUF_ACC (*(volatile Ifx_GTM_AFD_CH_BUF_ACC*)0xF01180A0u)


#define GTM_AFD0_CH3_BUF_ACC (*(volatile Ifx_GTM_AFD_CH_BUF_ACC*)0xF01180B0u)


#define GTM_AFD0_CH4_BUF_ACC (*(volatile Ifx_GTM_AFD_CH_BUF_ACC*)0xF01180C0u)


#define GTM_AFD0_CH5_BUF_ACC (*(volatile Ifx_GTM_AFD_CH_BUF_ACC*)0xF01180D0u)


#define GTM_AFD0_CH6_BUF_ACC (*(volatile Ifx_GTM_AFD_CH_BUF_ACC*)0xF01180E0u)


#define GTM_AFD0_CH7_BUF_ACC (*(volatile Ifx_GTM_AFD_CH_BUF_ACC*)0xF01180F0u)


#define GTM_ARU_ARU_ACCESS (*(volatile Ifx_GTM_ARU_ARU_ACCESS*)0xF0100280u)




#define GTM_ARU_ACCESS (GTM_ARU_ARU_ACCESS)


#define GTM_ARU_DATA_H (*(volatile Ifx_GTM_ARU_DATA_H*)0xF0100284u)


#define GTM_ARU_DATA_L (*(volatile Ifx_GTM_ARU_DATA_L*)0xF0100288u)


#define GTM_ARU_DBG_ACCESS0 (*(volatile Ifx_GTM_ARU_DBG_ACCESS0*)0xF010028Cu)


#define GTM_ARU_DBG_ACCESS1 (*(volatile Ifx_GTM_ARU_DBG_ACCESS1*)0xF0100298u)


#define GTM_ARU_DBG_DATA0_H (*(volatile Ifx_GTM_ARU_DBG_DATA0_H*)0xF0100290u)


#define GTM_ARU_DBG_DATA0_L (*(volatile Ifx_GTM_ARU_DBG_DATA0_L*)0xF0100294u)


#define GTM_ARU_DBG_DATA1_H (*(volatile Ifx_GTM_ARU_DBG_DATA1_H*)0xF010029Cu)


#define GTM_ARU_DBG_DATA1_L (*(volatile Ifx_GTM_ARU_DBG_DATA1_L*)0xF01002A0u)


#define GTM_ARU_IRQ_EN (*(volatile Ifx_GTM_ARU_IRQ_EN*)0xF01002A8u)


#define GTM_ARU_IRQ_FORCINT (*(volatile Ifx_GTM_ARU_IRQ_FORCINT*)0xF01002ACu)


#define GTM_ARU_IRQ_MODE (*(volatile Ifx_GTM_ARU_IRQ_MODE*)0xF01002B0u)


#define GTM_ARU_IRQ_NOTIFY (*(volatile Ifx_GTM_ARU_IRQ_NOTIFY*)0xF01002A4u)


#define GTM_ATOM0_AGC_ACT_TB (*(volatile Ifx_GTM_ATOM_AGC_ACT_TB*)0xF010D04Cu)


#define GTM_ATOM0_AGC_ENDIS_CTRL (*(volatile Ifx_GTM_ATOM_AGC_ENDIS_CTRL*)0xF010D044u)


#define GTM_ATOM0_AGC_ENDIS_STAT (*(volatile Ifx_GTM_ATOM_AGC_ENDIS_STAT*)0xF010D048u)


#define GTM_ATOM0_AGC_FUPD_CTRL (*(volatile Ifx_GTM_ATOM_AGC_FUPD_CTRL*)0xF010D058u)


#define GTM_ATOM0_AGC_GLB_CTRL (*(volatile Ifx_GTM_ATOM_AGC_GLB_CTRL*)0xF010D040u)


#define GTM_ATOM0_AGC_INT_TRIG (*(volatile Ifx_GTM_ATOM_AGC_INT_TRIG*)0xF010D05Cu)


#define GTM_ATOM0_AGC_OUTEN_CTRL (*(volatile Ifx_GTM_ATOM_AGC_OUTEN_CTRL*)0xF010D050u)


#define GTM_ATOM0_AGC_OUTEN_STAT (*(volatile Ifx_GTM_ATOM_AGC_OUTEN_STAT*)0xF010D054u)


#define GTM_ATOM0_CH0_CM0 (*(volatile Ifx_GTM_ATOM_CH_CM0*)0xF010D010u)


#define GTM_ATOM0_CH0_CM1 (*(volatile Ifx_GTM_ATOM_CH_CM1*)0xF010D014u)


#define GTM_ATOM0_CH0_CN0 (*(volatile Ifx_GTM_ATOM_CH_CN0*)0xF010D018u)


#define GTM_ATOM0_CH0_CTRL (*(volatile Ifx_GTM_ATOM_CH_CTRL*)0xF010D004u)


#define GTM_ATOM0_CH0_IRQ_EN (*(volatile Ifx_GTM_ATOM_CH_IRQ_EN*)0xF010D024u)


#define GTM_ATOM0_CH0_IRQ_FORCINT (*(volatile Ifx_GTM_ATOM_CH_IRQ_FORCINT*)0xF010D028u)


#define GTM_ATOM0_CH0_IRQ_MODE (*(volatile Ifx_GTM_ATOM_CH_IRQ_MODE*)0xF010D02Cu)


#define GTM_ATOM0_CH0_IRQ_NOTIFY (*(volatile Ifx_GTM_ATOM_CH_IRQ_NOTIFY*)0xF010D020u)


#define GTM_ATOM0_CH0_RDADDR (*(volatile Ifx_GTM_ATOM_CH_RDADDR*)0xF010D000u)


#define GTM_ATOM0_CH0_SOMC (*(volatile Ifx_GTM_ATOM_CH_SOMC*)0xF010D004u)




#define GTM_ATOM0_CH0_CTRL_SOMC (GTM_ATOM0_CH0_SOMC)


#define GTM_ATOM0_CH0_SOMI (*(volatile Ifx_GTM_ATOM_CH_SOMI*)0xF010D004u)




#define GTM_ATOM0_CH0_CTRL_SOMI (GTM_ATOM0_CH0_SOMI)


#define GTM_ATOM0_CH0_SOMP (*(volatile Ifx_GTM_ATOM_CH_SOMP*)0xF010D004u)




#define GTM_ATOM0_CH0_CTRL_SOMP (GTM_ATOM0_CH0_SOMP)


#define GTM_ATOM0_CH0_SOMS (*(volatile Ifx_GTM_ATOM_CH_SOMS*)0xF010D004u)




#define GTM_ATOM0_CH0_CTRL_SOMS (GTM_ATOM0_CH0_SOMS)


#define GTM_ATOM0_CH0_SR0 (*(volatile Ifx_GTM_ATOM_CH_SR0*)0xF010D008u)


#define GTM_ATOM0_CH0_SR1 (*(volatile Ifx_GTM_ATOM_CH_SR1*)0xF010D00Cu)


#define GTM_ATOM0_CH0_STAT (*(volatile Ifx_GTM_ATOM_CH_STAT*)0xF010D01Cu)


#define GTM_ATOM0_CH1_CM0 (*(volatile Ifx_GTM_ATOM_CH_CM0*)0xF010D090u)


#define GTM_ATOM0_CH1_CM1 (*(volatile Ifx_GTM_ATOM_CH_CM1*)0xF010D094u)


#define GTM_ATOM0_CH1_CN0 (*(volatile Ifx_GTM_ATOM_CH_CN0*)0xF010D098u)


#define GTM_ATOM0_CH1_CTRL (*(volatile Ifx_GTM_ATOM_CH_CTRL*)0xF010D084u)


#define GTM_ATOM0_CH1_IRQ_EN (*(volatile Ifx_GTM_ATOM_CH_IRQ_EN*)0xF010D0A4u)


#define GTM_ATOM0_CH1_IRQ_FORCINT (*(volatile Ifx_GTM_ATOM_CH_IRQ_FORCINT*)0xF010D0A8u)


#define GTM_ATOM0_CH1_IRQ_MODE (*(volatile Ifx_GTM_ATOM_CH_IRQ_MODE*)0xF010D0ACu)


#define GTM_ATOM0_CH1_IRQ_NOTIFY (*(volatile Ifx_GTM_ATOM_CH_IRQ_NOTIFY*)0xF010D0A0u)


#define GTM_ATOM0_CH1_RDADDR (*(volatile Ifx_GTM_ATOM_CH_RDADDR*)0xF010D080u)


#define GTM_ATOM0_CH1_SOMC (*(volatile Ifx_GTM_ATOM_CH_SOMC*)0xF010D084u)




#define GTM_ATOM0_CH1_CTRL_SOMC (GTM_ATOM0_CH1_SOMC)


#define GTM_ATOM0_CH1_SOMI (*(volatile Ifx_GTM_ATOM_CH_SOMI*)0xF010D084u)




#define GTM_ATOM0_CH1_CTRL_SOMI (GTM_ATOM0_CH1_SOMI)


#define GTM_ATOM0_CH1_SOMP (*(volatile Ifx_GTM_ATOM_CH_SOMP*)0xF010D084u)




#define GTM_ATOM0_CH1_CTRL_SOMP (GTM_ATOM0_CH1_SOMP)


#define GTM_ATOM0_CH1_SOMS (*(volatile Ifx_GTM_ATOM_CH_SOMS*)0xF010D084u)




#define GTM_ATOM0_CH1_CTRL_SOMS (GTM_ATOM0_CH1_SOMS)


#define GTM_ATOM0_CH1_SR0 (*(volatile Ifx_GTM_ATOM_CH_SR0*)0xF010D088u)


#define GTM_ATOM0_CH1_SR1 (*(volatile Ifx_GTM_ATOM_CH_SR1*)0xF010D08Cu)


#define GTM_ATOM0_CH1_STAT (*(volatile Ifx_GTM_ATOM_CH_STAT*)0xF010D09Cu)


#define GTM_ATOM0_CH2_CM0 (*(volatile Ifx_GTM_ATOM_CH_CM0*)0xF010D110u)


#define GTM_ATOM0_CH2_CM1 (*(volatile Ifx_GTM_ATOM_CH_CM1*)0xF010D114u)


#define GTM_ATOM0_CH2_CN0 (*(volatile Ifx_GTM_ATOM_CH_CN0*)0xF010D118u)


#define GTM_ATOM0_CH2_CTRL (*(volatile Ifx_GTM_ATOM_CH_CTRL*)0xF010D104u)


#define GTM_ATOM0_CH2_IRQ_EN (*(volatile Ifx_GTM_ATOM_CH_IRQ_EN*)0xF010D124u)


#define GTM_ATOM0_CH2_IRQ_FORCINT (*(volatile Ifx_GTM_ATOM_CH_IRQ_FORCINT*)0xF010D128u)


#define GTM_ATOM0_CH2_IRQ_MODE (*(volatile Ifx_GTM_ATOM_CH_IRQ_MODE*)0xF010D12Cu)


#define GTM_ATOM0_CH2_IRQ_NOTIFY (*(volatile Ifx_GTM_ATOM_CH_IRQ_NOTIFY*)0xF010D120u)


#define GTM_ATOM0_CH2_RDADDR (*(volatile Ifx_GTM_ATOM_CH_RDADDR*)0xF010D100u)


#define GTM_ATOM0_CH2_SOMC (*(volatile Ifx_GTM_ATOM_CH_SOMC*)0xF010D104u)




#define GTM_ATOM0_CH2_CTRL_SOMC (GTM_ATOM0_CH2_SOMC)


#define GTM_ATOM0_CH2_SOMI (*(volatile Ifx_GTM_ATOM_CH_SOMI*)0xF010D104u)




#define GTM_ATOM0_CH2_CTRL_SOMI (GTM_ATOM0_CH2_SOMI)


#define GTM_ATOM0_CH2_SOMP (*(volatile Ifx_GTM_ATOM_CH_SOMP*)0xF010D104u)




#define GTM_ATOM0_CH2_CTRL_SOMP (GTM_ATOM0_CH2_SOMP)


#define GTM_ATOM0_CH2_SOMS (*(volatile Ifx_GTM_ATOM_CH_SOMS*)0xF010D104u)




#define GTM_ATOM0_CH2_CTRL_SOMS (GTM_ATOM0_CH2_SOMS)


#define GTM_ATOM0_CH2_SR0 (*(volatile Ifx_GTM_ATOM_CH_SR0*)0xF010D108u)


#define GTM_ATOM0_CH2_SR1 (*(volatile Ifx_GTM_ATOM_CH_SR1*)0xF010D10Cu)


#define GTM_ATOM0_CH2_STAT (*(volatile Ifx_GTM_ATOM_CH_STAT*)0xF010D11Cu)


#define GTM_ATOM0_CH3_CM0 (*(volatile Ifx_GTM_ATOM_CH_CM0*)0xF010D190u)


#define GTM_ATOM0_CH3_CM1 (*(volatile Ifx_GTM_ATOM_CH_CM1*)0xF010D194u)


#define GTM_ATOM0_CH3_CN0 (*(volatile Ifx_GTM_ATOM_CH_CN0*)0xF010D198u)


#define GTM_ATOM0_CH3_CTRL (*(volatile Ifx_GTM_ATOM_CH_CTRL*)0xF010D184u)


#define GTM_ATOM0_CH3_IRQ_EN (*(volatile Ifx_GTM_ATOM_CH_IRQ_EN*)0xF010D1A4u)


#define GTM_ATOM0_CH3_IRQ_FORCINT (*(volatile Ifx_GTM_ATOM_CH_IRQ_FORCINT*)0xF010D1A8u)


#define GTM_ATOM0_CH3_IRQ_MODE (*(volatile Ifx_GTM_ATOM_CH_IRQ_MODE*)0xF010D1ACu)


#define GTM_ATOM0_CH3_IRQ_NOTIFY (*(volatile Ifx_GTM_ATOM_CH_IRQ_NOTIFY*)0xF010D1A0u)


#define GTM_ATOM0_CH3_RDADDR (*(volatile Ifx_GTM_ATOM_CH_RDADDR*)0xF010D180u)


#define GTM_ATOM0_CH3_SOMC (*(volatile Ifx_GTM_ATOM_CH_SOMC*)0xF010D184u)




#define GTM_ATOM0_CH3_CTRL_SOMC (GTM_ATOM0_CH3_SOMC)


#define GTM_ATOM0_CH3_SOMI (*(volatile Ifx_GTM_ATOM_CH_SOMI*)0xF010D184u)




#define GTM_ATOM0_CH3_CTRL_SOMI (GTM_ATOM0_CH3_SOMI)


#define GTM_ATOM0_CH3_SOMP (*(volatile Ifx_GTM_ATOM_CH_SOMP*)0xF010D184u)




#define GTM_ATOM0_CH3_CTRL_SOMP (GTM_ATOM0_CH3_SOMP)


#define GTM_ATOM0_CH3_SOMS (*(volatile Ifx_GTM_ATOM_CH_SOMS*)0xF010D184u)




#define GTM_ATOM0_CH3_CTRL_SOMS (GTM_ATOM0_CH3_SOMS)


#define GTM_ATOM0_CH3_SR0 (*(volatile Ifx_GTM_ATOM_CH_SR0*)0xF010D188u)


#define GTM_ATOM0_CH3_SR1 (*(volatile Ifx_GTM_ATOM_CH_SR1*)0xF010D18Cu)


#define GTM_ATOM0_CH3_STAT (*(volatile Ifx_GTM_ATOM_CH_STAT*)0xF010D19Cu)


#define GTM_ATOM0_CH4_CM0 (*(volatile Ifx_GTM_ATOM_CH_CM0*)0xF010D210u)


#define GTM_ATOM0_CH4_CM1 (*(volatile Ifx_GTM_ATOM_CH_CM1*)0xF010D214u)


#define GTM_ATOM0_CH4_CN0 (*(volatile Ifx_GTM_ATOM_CH_CN0*)0xF010D218u)


#define GTM_ATOM0_CH4_CTRL (*(volatile Ifx_GTM_ATOM_CH_CTRL*)0xF010D204u)


#define GTM_ATOM0_CH4_IRQ_EN (*(volatile Ifx_GTM_ATOM_CH_IRQ_EN*)0xF010D224u)


#define GTM_ATOM0_CH4_IRQ_FORCINT (*(volatile Ifx_GTM_ATOM_CH_IRQ_FORCINT*)0xF010D228u)


#define GTM_ATOM0_CH4_IRQ_MODE (*(volatile Ifx_GTM_ATOM_CH_IRQ_MODE*)0xF010D22Cu)


#define GTM_ATOM0_CH4_IRQ_NOTIFY (*(volatile Ifx_GTM_ATOM_CH_IRQ_NOTIFY*)0xF010D220u)


#define GTM_ATOM0_CH4_RDADDR (*(volatile Ifx_GTM_ATOM_CH_RDADDR*)0xF010D200u)


#define GTM_ATOM0_CH4_SOMC (*(volatile Ifx_GTM_ATOM_CH_SOMC*)0xF010D204u)




#define GTM_ATOM0_CH4_CTRL_SOMC (GTM_ATOM0_CH4_SOMC)


#define GTM_ATOM0_CH4_SOMI (*(volatile Ifx_GTM_ATOM_CH_SOMI*)0xF010D204u)




#define GTM_ATOM0_CH4_CTRL_SOMI (GTM_ATOM0_CH4_SOMI)


#define GTM_ATOM0_CH4_SOMP (*(volatile Ifx_GTM_ATOM_CH_SOMP*)0xF010D204u)




#define GTM_ATOM0_CH4_CTRL_SOMP (GTM_ATOM0_CH4_SOMP)


#define GTM_ATOM0_CH4_SOMS (*(volatile Ifx_GTM_ATOM_CH_SOMS*)0xF010D204u)




#define GTM_ATOM0_CH4_CTRL_SOMS (GTM_ATOM0_CH4_SOMS)


#define GTM_ATOM0_CH4_SR0 (*(volatile Ifx_GTM_ATOM_CH_SR0*)0xF010D208u)


#define GTM_ATOM0_CH4_SR1 (*(volatile Ifx_GTM_ATOM_CH_SR1*)0xF010D20Cu)


#define GTM_ATOM0_CH4_STAT (*(volatile Ifx_GTM_ATOM_CH_STAT*)0xF010D21Cu)


#define GTM_ATOM0_CH5_CM0 (*(volatile Ifx_GTM_ATOM_CH_CM0*)0xF010D290u)


#define GTM_ATOM0_CH5_CM1 (*(volatile Ifx_GTM_ATOM_CH_CM1*)0xF010D294u)


#define GTM_ATOM0_CH5_CN0 (*(volatile Ifx_GTM_ATOM_CH_CN0*)0xF010D298u)


#define GTM_ATOM0_CH5_CTRL (*(volatile Ifx_GTM_ATOM_CH_CTRL*)0xF010D284u)


#define GTM_ATOM0_CH5_IRQ_EN (*(volatile Ifx_GTM_ATOM_CH_IRQ_EN*)0xF010D2A4u)


#define GTM_ATOM0_CH5_IRQ_FORCINT (*(volatile Ifx_GTM_ATOM_CH_IRQ_FORCINT*)0xF010D2A8u)


#define GTM_ATOM0_CH5_IRQ_MODE (*(volatile Ifx_GTM_ATOM_CH_IRQ_MODE*)0xF010D2ACu)


#define GTM_ATOM0_CH5_IRQ_NOTIFY (*(volatile Ifx_GTM_ATOM_CH_IRQ_NOTIFY*)0xF010D2A0u)


#define GTM_ATOM0_CH5_RDADDR (*(volatile Ifx_GTM_ATOM_CH_RDADDR*)0xF010D280u)


#define GTM_ATOM0_CH5_SOMC (*(volatile Ifx_GTM_ATOM_CH_SOMC*)0xF010D284u)




#define GTM_ATOM0_CH5_CTRL_SOMC (GTM_ATOM0_CH5_SOMC)


#define GTM_ATOM0_CH5_SOMI (*(volatile Ifx_GTM_ATOM_CH_SOMI*)0xF010D284u)




#define GTM_ATOM0_CH5_CTRL_SOMI (GTM_ATOM0_CH5_SOMI)


#define GTM_ATOM0_CH5_SOMP (*(volatile Ifx_GTM_ATOM_CH_SOMP*)0xF010D284u)




#define GTM_ATOM0_CH5_CTRL_SOMP (GTM_ATOM0_CH5_SOMP)


#define GTM_ATOM0_CH5_SOMS (*(volatile Ifx_GTM_ATOM_CH_SOMS*)0xF010D284u)




#define GTM_ATOM0_CH5_CTRL_SOMS (GTM_ATOM0_CH5_SOMS)


#define GTM_ATOM0_CH5_SR0 (*(volatile Ifx_GTM_ATOM_CH_SR0*)0xF010D288u)


#define GTM_ATOM0_CH5_SR1 (*(volatile Ifx_GTM_ATOM_CH_SR1*)0xF010D28Cu)


#define GTM_ATOM0_CH5_STAT (*(volatile Ifx_GTM_ATOM_CH_STAT*)0xF010D29Cu)


#define GTM_ATOM0_CH6_CM0 (*(volatile Ifx_GTM_ATOM_CH_CM0*)0xF010D310u)


#define GTM_ATOM0_CH6_CM1 (*(volatile Ifx_GTM_ATOM_CH_CM1*)0xF010D314u)


#define GTM_ATOM0_CH6_CN0 (*(volatile Ifx_GTM_ATOM_CH_CN0*)0xF010D318u)


#define GTM_ATOM0_CH6_CTRL (*(volatile Ifx_GTM_ATOM_CH_CTRL*)0xF010D304u)


#define GTM_ATOM0_CH6_IRQ_EN (*(volatile Ifx_GTM_ATOM_CH_IRQ_EN*)0xF010D324u)


#define GTM_ATOM0_CH6_IRQ_FORCINT (*(volatile Ifx_GTM_ATOM_CH_IRQ_FORCINT*)0xF010D328u)


#define GTM_ATOM0_CH6_IRQ_MODE (*(volatile Ifx_GTM_ATOM_CH_IRQ_MODE*)0xF010D32Cu)


#define GTM_ATOM0_CH6_IRQ_NOTIFY (*(volatile Ifx_GTM_ATOM_CH_IRQ_NOTIFY*)0xF010D320u)


#define GTM_ATOM0_CH6_RDADDR (*(volatile Ifx_GTM_ATOM_CH_RDADDR*)0xF010D300u)


#define GTM_ATOM0_CH6_SOMC (*(volatile Ifx_GTM_ATOM_CH_SOMC*)0xF010D304u)




#define GTM_ATOM0_CH6_CTRL_SOMC (GTM_ATOM0_CH6_SOMC)


#define GTM_ATOM0_CH6_SOMI (*(volatile Ifx_GTM_ATOM_CH_SOMI*)0xF010D304u)




#define GTM_ATOM0_CH6_CTRL_SOMI (GTM_ATOM0_CH6_SOMI)


#define GTM_ATOM0_CH6_SOMP (*(volatile Ifx_GTM_ATOM_CH_SOMP*)0xF010D304u)




#define GTM_ATOM0_CH6_CTRL_SOMP (GTM_ATOM0_CH6_SOMP)


#define GTM_ATOM0_CH6_SOMS (*(volatile Ifx_GTM_ATOM_CH_SOMS*)0xF010D304u)




#define GTM_ATOM0_CH6_CTRL_SOMS (GTM_ATOM0_CH6_SOMS)


#define GTM_ATOM0_CH6_SR0 (*(volatile Ifx_GTM_ATOM_CH_SR0*)0xF010D308u)


#define GTM_ATOM0_CH6_SR1 (*(volatile Ifx_GTM_ATOM_CH_SR1*)0xF010D30Cu)


#define GTM_ATOM0_CH6_STAT (*(volatile Ifx_GTM_ATOM_CH_STAT*)0xF010D31Cu)


#define GTM_ATOM0_CH7_CM0 (*(volatile Ifx_GTM_ATOM_CH_CM0*)0xF010D390u)


#define GTM_ATOM0_CH7_CM1 (*(volatile Ifx_GTM_ATOM_CH_CM1*)0xF010D394u)


#define GTM_ATOM0_CH7_CN0 (*(volatile Ifx_GTM_ATOM_CH_CN0*)0xF010D398u)


#define GTM_ATOM0_CH7_CTRL (*(volatile Ifx_GTM_ATOM_CH_CTRL*)0xF010D384u)


#define GTM_ATOM0_CH7_IRQ_EN (*(volatile Ifx_GTM_ATOM_CH_IRQ_EN*)0xF010D3A4u)


#define GTM_ATOM0_CH7_IRQ_FORCINT (*(volatile Ifx_GTM_ATOM_CH_IRQ_FORCINT*)0xF010D3A8u)


#define GTM_ATOM0_CH7_IRQ_MODE (*(volatile Ifx_GTM_ATOM_CH_IRQ_MODE*)0xF010D3ACu)


#define GTM_ATOM0_CH7_IRQ_NOTIFY (*(volatile Ifx_GTM_ATOM_CH_IRQ_NOTIFY*)0xF010D3A0u)


#define GTM_ATOM0_CH7_RDADDR (*(volatile Ifx_GTM_ATOM_CH_RDADDR*)0xF010D380u)


#define GTM_ATOM0_CH7_SOMC (*(volatile Ifx_GTM_ATOM_CH_SOMC*)0xF010D384u)




#define GTM_ATOM0_CH7_CTRL_SOMC (GTM_ATOM0_CH7_SOMC)


#define GTM_ATOM0_CH7_SOMI (*(volatile Ifx_GTM_ATOM_CH_SOMI*)0xF010D384u)




#define GTM_ATOM0_CH7_CTRL_SOMI (GTM_ATOM0_CH7_SOMI)


#define GTM_ATOM0_CH7_SOMP (*(volatile Ifx_GTM_ATOM_CH_SOMP*)0xF010D384u)




#define GTM_ATOM0_CH7_CTRL_SOMP (GTM_ATOM0_CH7_SOMP)


#define GTM_ATOM0_CH7_SOMS (*(volatile Ifx_GTM_ATOM_CH_SOMS*)0xF010D384u)




#define GTM_ATOM0_CH7_CTRL_SOMS (GTM_ATOM0_CH7_SOMS)


#define GTM_ATOM0_CH7_SR0 (*(volatile Ifx_GTM_ATOM_CH_SR0*)0xF010D388u)


#define GTM_ATOM0_CH7_SR1 (*(volatile Ifx_GTM_ATOM_CH_SR1*)0xF010D38Cu)


#define GTM_ATOM0_CH7_STAT (*(volatile Ifx_GTM_ATOM_CH_STAT*)0xF010D39Cu)


#define GTM_ATOM1_AGC_ACT_TB (*(volatile Ifx_GTM_ATOM_AGC_ACT_TB*)0xF010D84Cu)


#define GTM_ATOM1_AGC_ENDIS_CTRL (*(volatile Ifx_GTM_ATOM_AGC_ENDIS_CTRL*)0xF010D844u)


#define GTM_ATOM1_AGC_ENDIS_STAT (*(volatile Ifx_GTM_ATOM_AGC_ENDIS_STAT*)0xF010D848u)


#define GTM_ATOM1_AGC_FUPD_CTRL (*(volatile Ifx_GTM_ATOM_AGC_FUPD_CTRL*)0xF010D858u)


#define GTM_ATOM1_AGC_GLB_CTRL (*(volatile Ifx_GTM_ATOM_AGC_GLB_CTRL*)0xF010D840u)


#define GTM_ATOM1_AGC_INT_TRIG (*(volatile Ifx_GTM_ATOM_AGC_INT_TRIG*)0xF010D85Cu)


#define GTM_ATOM1_AGC_OUTEN_CTRL (*(volatile Ifx_GTM_ATOM_AGC_OUTEN_CTRL*)0xF010D850u)


#define GTM_ATOM1_AGC_OUTEN_STAT (*(volatile Ifx_GTM_ATOM_AGC_OUTEN_STAT*)0xF010D854u)


#define GTM_ATOM1_CH0_CM0 (*(volatile Ifx_GTM_ATOM_CH_CM0*)0xF010D810u)


#define GTM_ATOM1_CH0_CM1 (*(volatile Ifx_GTM_ATOM_CH_CM1*)0xF010D814u)


#define GTM_ATOM1_CH0_CN0 (*(volatile Ifx_GTM_ATOM_CH_CN0*)0xF010D818u)


#define GTM_ATOM1_CH0_CTRL (*(volatile Ifx_GTM_ATOM_CH_CTRL*)0xF010D804u)


#define GTM_ATOM1_CH0_IRQ_EN (*(volatile Ifx_GTM_ATOM_CH_IRQ_EN*)0xF010D824u)


#define GTM_ATOM1_CH0_IRQ_FORCINT (*(volatile Ifx_GTM_ATOM_CH_IRQ_FORCINT*)0xF010D828u)


#define GTM_ATOM1_CH0_IRQ_MODE (*(volatile Ifx_GTM_ATOM_CH_IRQ_MODE*)0xF010D82Cu)


#define GTM_ATOM1_CH0_IRQ_NOTIFY (*(volatile Ifx_GTM_ATOM_CH_IRQ_NOTIFY*)0xF010D820u)


#define GTM_ATOM1_CH0_RDADDR (*(volatile Ifx_GTM_ATOM_CH_RDADDR*)0xF010D800u)


#define GTM_ATOM1_CH0_SOMC (*(volatile Ifx_GTM_ATOM_CH_SOMC*)0xF010D804u)




#define GTM_ATOM1_CH0_CTRL_SOMC (GTM_ATOM1_CH0_SOMC)


#define GTM_ATOM1_CH0_SOMI (*(volatile Ifx_GTM_ATOM_CH_SOMI*)0xF010D804u)




#define GTM_ATOM1_CH0_CTRL_SOMI (GTM_ATOM1_CH0_SOMI)


#define GTM_ATOM1_CH0_SOMP (*(volatile Ifx_GTM_ATOM_CH_SOMP*)0xF010D804u)




#define GTM_ATOM1_CH0_CTRL_SOMP (GTM_ATOM1_CH0_SOMP)


#define GTM_ATOM1_CH0_SOMS (*(volatile Ifx_GTM_ATOM_CH_SOMS*)0xF010D804u)




#define GTM_ATOM1_CH0_CTRL_SOMS (GTM_ATOM1_CH0_SOMS)


#define GTM_ATOM1_CH0_SR0 (*(volatile Ifx_GTM_ATOM_CH_SR0*)0xF010D808u)


#define GTM_ATOM1_CH0_SR1 (*(volatile Ifx_GTM_ATOM_CH_SR1*)0xF010D80Cu)


#define GTM_ATOM1_CH0_STAT (*(volatile Ifx_GTM_ATOM_CH_STAT*)0xF010D81Cu)


#define GTM_ATOM1_CH1_CM0 (*(volatile Ifx_GTM_ATOM_CH_CM0*)0xF010D890u)


#define GTM_ATOM1_CH1_CM1 (*(volatile Ifx_GTM_ATOM_CH_CM1*)0xF010D894u)


#define GTM_ATOM1_CH1_CN0 (*(volatile Ifx_GTM_ATOM_CH_CN0*)0xF010D898u)


#define GTM_ATOM1_CH1_CTRL (*(volatile Ifx_GTM_ATOM_CH_CTRL*)0xF010D884u)


#define GTM_ATOM1_CH1_IRQ_EN (*(volatile Ifx_GTM_ATOM_CH_IRQ_EN*)0xF010D8A4u)


#define GTM_ATOM1_CH1_IRQ_FORCINT (*(volatile Ifx_GTM_ATOM_CH_IRQ_FORCINT*)0xF010D8A8u)


#define GTM_ATOM1_CH1_IRQ_MODE (*(volatile Ifx_GTM_ATOM_CH_IRQ_MODE*)0xF010D8ACu)


#define GTM_ATOM1_CH1_IRQ_NOTIFY (*(volatile Ifx_GTM_ATOM_CH_IRQ_NOTIFY*)0xF010D8A0u)


#define GTM_ATOM1_CH1_RDADDR (*(volatile Ifx_GTM_ATOM_CH_RDADDR*)0xF010D880u)


#define GTM_ATOM1_CH1_SOMC (*(volatile Ifx_GTM_ATOM_CH_SOMC*)0xF010D884u)




#define GTM_ATOM1_CH1_CTRL_SOMC (GTM_ATOM1_CH1_SOMC)


#define GTM_ATOM1_CH1_SOMI (*(volatile Ifx_GTM_ATOM_CH_SOMI*)0xF010D884u)




#define GTM_ATOM1_CH1_CTRL_SOMI (GTM_ATOM1_CH1_SOMI)


#define GTM_ATOM1_CH1_SOMP (*(volatile Ifx_GTM_ATOM_CH_SOMP*)0xF010D884u)




#define GTM_ATOM1_CH1_CTRL_SOMP (GTM_ATOM1_CH1_SOMP)


#define GTM_ATOM1_CH1_SOMS (*(volatile Ifx_GTM_ATOM_CH_SOMS*)0xF010D884u)




#define GTM_ATOM1_CH1_CTRL_SOMS (GTM_ATOM1_CH1_SOMS)


#define GTM_ATOM1_CH1_SR0 (*(volatile Ifx_GTM_ATOM_CH_SR0*)0xF010D888u)


#define GTM_ATOM1_CH1_SR1 (*(volatile Ifx_GTM_ATOM_CH_SR1*)0xF010D88Cu)


#define GTM_ATOM1_CH1_STAT (*(volatile Ifx_GTM_ATOM_CH_STAT*)0xF010D89Cu)


#define GTM_ATOM1_CH2_CM0 (*(volatile Ifx_GTM_ATOM_CH_CM0*)0xF010D910u)


#define GTM_ATOM1_CH2_CM1 (*(volatile Ifx_GTM_ATOM_CH_CM1*)0xF010D914u)


#define GTM_ATOM1_CH2_CN0 (*(volatile Ifx_GTM_ATOM_CH_CN0*)0xF010D918u)


#define GTM_ATOM1_CH2_CTRL (*(volatile Ifx_GTM_ATOM_CH_CTRL*)0xF010D904u)


#define GTM_ATOM1_CH2_IRQ_EN (*(volatile Ifx_GTM_ATOM_CH_IRQ_EN*)0xF010D924u)


#define GTM_ATOM1_CH2_IRQ_FORCINT (*(volatile Ifx_GTM_ATOM_CH_IRQ_FORCINT*)0xF010D928u)


#define GTM_ATOM1_CH2_IRQ_MODE (*(volatile Ifx_GTM_ATOM_CH_IRQ_MODE*)0xF010D92Cu)


#define GTM_ATOM1_CH2_IRQ_NOTIFY (*(volatile Ifx_GTM_ATOM_CH_IRQ_NOTIFY*)0xF010D920u)


#define GTM_ATOM1_CH2_RDADDR (*(volatile Ifx_GTM_ATOM_CH_RDADDR*)0xF010D900u)


#define GTM_ATOM1_CH2_SOMC (*(volatile Ifx_GTM_ATOM_CH_SOMC*)0xF010D904u)




#define GTM_ATOM1_CH2_CTRL_SOMC (GTM_ATOM1_CH2_SOMC)


#define GTM_ATOM1_CH2_SOMI (*(volatile Ifx_GTM_ATOM_CH_SOMI*)0xF010D904u)




#define GTM_ATOM1_CH2_CTRL_SOMI (GTM_ATOM1_CH2_SOMI)


#define GTM_ATOM1_CH2_SOMP (*(volatile Ifx_GTM_ATOM_CH_SOMP*)0xF010D904u)




#define GTM_ATOM1_CH2_CTRL_SOMP (GTM_ATOM1_CH2_SOMP)


#define GTM_ATOM1_CH2_SOMS (*(volatile Ifx_GTM_ATOM_CH_SOMS*)0xF010D904u)




#define GTM_ATOM1_CH2_CTRL_SOMS (GTM_ATOM1_CH2_SOMS)


#define GTM_ATOM1_CH2_SR0 (*(volatile Ifx_GTM_ATOM_CH_SR0*)0xF010D908u)


#define GTM_ATOM1_CH2_SR1 (*(volatile Ifx_GTM_ATOM_CH_SR1*)0xF010D90Cu)


#define GTM_ATOM1_CH2_STAT (*(volatile Ifx_GTM_ATOM_CH_STAT*)0xF010D91Cu)


#define GTM_ATOM1_CH3_CM0 (*(volatile Ifx_GTM_ATOM_CH_CM0*)0xF010D990u)


#define GTM_ATOM1_CH3_CM1 (*(volatile Ifx_GTM_ATOM_CH_CM1*)0xF010D994u)


#define GTM_ATOM1_CH3_CN0 (*(volatile Ifx_GTM_ATOM_CH_CN0*)0xF010D998u)


#define GTM_ATOM1_CH3_CTRL (*(volatile Ifx_GTM_ATOM_CH_CTRL*)0xF010D984u)


#define GTM_ATOM1_CH3_IRQ_EN (*(volatile Ifx_GTM_ATOM_CH_IRQ_EN*)0xF010D9A4u)


#define GTM_ATOM1_CH3_IRQ_FORCINT (*(volatile Ifx_GTM_ATOM_CH_IRQ_FORCINT*)0xF010D9A8u)


#define GTM_ATOM1_CH3_IRQ_MODE (*(volatile Ifx_GTM_ATOM_CH_IRQ_MODE*)0xF010D9ACu)


#define GTM_ATOM1_CH3_IRQ_NOTIFY (*(volatile Ifx_GTM_ATOM_CH_IRQ_NOTIFY*)0xF010D9A0u)


#define GTM_ATOM1_CH3_RDADDR (*(volatile Ifx_GTM_ATOM_CH_RDADDR*)0xF010D980u)


#define GTM_ATOM1_CH3_SOMC (*(volatile Ifx_GTM_ATOM_CH_SOMC*)0xF010D984u)




#define GTM_ATOM1_CH3_CTRL_SOMC (GTM_ATOM1_CH3_SOMC)


#define GTM_ATOM1_CH3_SOMI (*(volatile Ifx_GTM_ATOM_CH_SOMI*)0xF010D984u)




#define GTM_ATOM1_CH3_CTRL_SOMI (GTM_ATOM1_CH3_SOMI)


#define GTM_ATOM1_CH3_SOMP (*(volatile Ifx_GTM_ATOM_CH_SOMP*)0xF010D984u)




#define GTM_ATOM1_CH3_CTRL_SOMP (GTM_ATOM1_CH3_SOMP)


#define GTM_ATOM1_CH3_SOMS (*(volatile Ifx_GTM_ATOM_CH_SOMS*)0xF010D984u)




#define GTM_ATOM1_CH3_CTRL_SOMS (GTM_ATOM1_CH3_SOMS)


#define GTM_ATOM1_CH3_SR0 (*(volatile Ifx_GTM_ATOM_CH_SR0*)0xF010D988u)


#define GTM_ATOM1_CH3_SR1 (*(volatile Ifx_GTM_ATOM_CH_SR1*)0xF010D98Cu)


#define GTM_ATOM1_CH3_STAT (*(volatile Ifx_GTM_ATOM_CH_STAT*)0xF010D99Cu)


#define GTM_ATOM1_CH4_CM0 (*(volatile Ifx_GTM_ATOM_CH_CM0*)0xF010DA10u)


#define GTM_ATOM1_CH4_CM1 (*(volatile Ifx_GTM_ATOM_CH_CM1*)0xF010DA14u)


#define GTM_ATOM1_CH4_CN0 (*(volatile Ifx_GTM_ATOM_CH_CN0*)0xF010DA18u)


#define GTM_ATOM1_CH4_CTRL (*(volatile Ifx_GTM_ATOM_CH_CTRL*)0xF010DA04u)


#define GTM_ATOM1_CH4_IRQ_EN (*(volatile Ifx_GTM_ATOM_CH_IRQ_EN*)0xF010DA24u)


#define GTM_ATOM1_CH4_IRQ_FORCINT (*(volatile Ifx_GTM_ATOM_CH_IRQ_FORCINT*)0xF010DA28u)


#define GTM_ATOM1_CH4_IRQ_MODE (*(volatile Ifx_GTM_ATOM_CH_IRQ_MODE*)0xF010DA2Cu)


#define GTM_ATOM1_CH4_IRQ_NOTIFY (*(volatile Ifx_GTM_ATOM_CH_IRQ_NOTIFY*)0xF010DA20u)


#define GTM_ATOM1_CH4_RDADDR (*(volatile Ifx_GTM_ATOM_CH_RDADDR*)0xF010DA00u)


#define GTM_ATOM1_CH4_SOMC (*(volatile Ifx_GTM_ATOM_CH_SOMC*)0xF010DA04u)




#define GTM_ATOM1_CH4_CTRL_SOMC (GTM_ATOM1_CH4_SOMC)


#define GTM_ATOM1_CH4_SOMI (*(volatile Ifx_GTM_ATOM_CH_SOMI*)0xF010DA04u)




#define GTM_ATOM1_CH4_CTRL_SOMI (GTM_ATOM1_CH4_SOMI)


#define GTM_ATOM1_CH4_SOMP (*(volatile Ifx_GTM_ATOM_CH_SOMP*)0xF010DA04u)




#define GTM_ATOM1_CH4_CTRL_SOMP (GTM_ATOM1_CH4_SOMP)


#define GTM_ATOM1_CH4_SOMS (*(volatile Ifx_GTM_ATOM_CH_SOMS*)0xF010DA04u)




#define GTM_ATOM1_CH4_CTRL_SOMS (GTM_ATOM1_CH4_SOMS)


#define GTM_ATOM1_CH4_SR0 (*(volatile Ifx_GTM_ATOM_CH_SR0*)0xF010DA08u)


#define GTM_ATOM1_CH4_SR1 (*(volatile Ifx_GTM_ATOM_CH_SR1*)0xF010DA0Cu)


#define GTM_ATOM1_CH4_STAT (*(volatile Ifx_GTM_ATOM_CH_STAT*)0xF010DA1Cu)


#define GTM_ATOM1_CH5_CM0 (*(volatile Ifx_GTM_ATOM_CH_CM0*)0xF010DA90u)


#define GTM_ATOM1_CH5_CM1 (*(volatile Ifx_GTM_ATOM_CH_CM1*)0xF010DA94u)


#define GTM_ATOM1_CH5_CN0 (*(volatile Ifx_GTM_ATOM_CH_CN0*)0xF010DA98u)


#define GTM_ATOM1_CH5_CTRL (*(volatile Ifx_GTM_ATOM_CH_CTRL*)0xF010DA84u)


#define GTM_ATOM1_CH5_IRQ_EN (*(volatile Ifx_GTM_ATOM_CH_IRQ_EN*)0xF010DAA4u)


#define GTM_ATOM1_CH5_IRQ_FORCINT (*(volatile Ifx_GTM_ATOM_CH_IRQ_FORCINT*)0xF010DAA8u)


#define GTM_ATOM1_CH5_IRQ_MODE (*(volatile Ifx_GTM_ATOM_CH_IRQ_MODE*)0xF010DAACu)


#define GTM_ATOM1_CH5_IRQ_NOTIFY (*(volatile Ifx_GTM_ATOM_CH_IRQ_NOTIFY*)0xF010DAA0u)


#define GTM_ATOM1_CH5_RDADDR (*(volatile Ifx_GTM_ATOM_CH_RDADDR*)0xF010DA80u)


#define GTM_ATOM1_CH5_SOMC (*(volatile Ifx_GTM_ATOM_CH_SOMC*)0xF010DA84u)




#define GTM_ATOM1_CH5_CTRL_SOMC (GTM_ATOM1_CH5_SOMC)


#define GTM_ATOM1_CH5_SOMI (*(volatile Ifx_GTM_ATOM_CH_SOMI*)0xF010DA84u)




#define GTM_ATOM1_CH5_CTRL_SOMI (GTM_ATOM1_CH5_SOMI)


#define GTM_ATOM1_CH5_SOMP (*(volatile Ifx_GTM_ATOM_CH_SOMP*)0xF010DA84u)




#define GTM_ATOM1_CH5_CTRL_SOMP (GTM_ATOM1_CH5_SOMP)


#define GTM_ATOM1_CH5_SOMS (*(volatile Ifx_GTM_ATOM_CH_SOMS*)0xF010DA84u)




#define GTM_ATOM1_CH5_CTRL_SOMS (GTM_ATOM1_CH5_SOMS)


#define GTM_ATOM1_CH5_SR0 (*(volatile Ifx_GTM_ATOM_CH_SR0*)0xF010DA88u)


#define GTM_ATOM1_CH5_SR1 (*(volatile Ifx_GTM_ATOM_CH_SR1*)0xF010DA8Cu)


#define GTM_ATOM1_CH5_STAT (*(volatile Ifx_GTM_ATOM_CH_STAT*)0xF010DA9Cu)


#define GTM_ATOM1_CH6_CM0 (*(volatile Ifx_GTM_ATOM_CH_CM0*)0xF010DB10u)


#define GTM_ATOM1_CH6_CM1 (*(volatile Ifx_GTM_ATOM_CH_CM1*)0xF010DB14u)


#define GTM_ATOM1_CH6_CN0 (*(volatile Ifx_GTM_ATOM_CH_CN0*)0xF010DB18u)


#define GTM_ATOM1_CH6_CTRL (*(volatile Ifx_GTM_ATOM_CH_CTRL*)0xF010DB04u)


#define GTM_ATOM1_CH6_IRQ_EN (*(volatile Ifx_GTM_ATOM_CH_IRQ_EN*)0xF010DB24u)


#define GTM_ATOM1_CH6_IRQ_FORCINT (*(volatile Ifx_GTM_ATOM_CH_IRQ_FORCINT*)0xF010DB28u)


#define GTM_ATOM1_CH6_IRQ_MODE (*(volatile Ifx_GTM_ATOM_CH_IRQ_MODE*)0xF010DB2Cu)


#define GTM_ATOM1_CH6_IRQ_NOTIFY (*(volatile Ifx_GTM_ATOM_CH_IRQ_NOTIFY*)0xF010DB20u)


#define GTM_ATOM1_CH6_RDADDR (*(volatile Ifx_GTM_ATOM_CH_RDADDR*)0xF010DB00u)


#define GTM_ATOM1_CH6_SOMC (*(volatile Ifx_GTM_ATOM_CH_SOMC*)0xF010DB04u)




#define GTM_ATOM1_CH6_CTRL_SOMC (GTM_ATOM1_CH6_SOMC)


#define GTM_ATOM1_CH6_SOMI (*(volatile Ifx_GTM_ATOM_CH_SOMI*)0xF010DB04u)




#define GTM_ATOM1_CH6_CTRL_SOMI (GTM_ATOM1_CH6_SOMI)


#define GTM_ATOM1_CH6_SOMP (*(volatile Ifx_GTM_ATOM_CH_SOMP*)0xF010DB04u)




#define GTM_ATOM1_CH6_CTRL_SOMP (GTM_ATOM1_CH6_SOMP)


#define GTM_ATOM1_CH6_SOMS (*(volatile Ifx_GTM_ATOM_CH_SOMS*)0xF010DB04u)




#define GTM_ATOM1_CH6_CTRL_SOMS (GTM_ATOM1_CH6_SOMS)


#define GTM_ATOM1_CH6_SR0 (*(volatile Ifx_GTM_ATOM_CH_SR0*)0xF010DB08u)


#define GTM_ATOM1_CH6_SR1 (*(volatile Ifx_GTM_ATOM_CH_SR1*)0xF010DB0Cu)


#define GTM_ATOM1_CH6_STAT (*(volatile Ifx_GTM_ATOM_CH_STAT*)0xF010DB1Cu)


#define GTM_ATOM1_CH7_CM0 (*(volatile Ifx_GTM_ATOM_CH_CM0*)0xF010DB90u)


#define GTM_ATOM1_CH7_CM1 (*(volatile Ifx_GTM_ATOM_CH_CM1*)0xF010DB94u)


#define GTM_ATOM1_CH7_CN0 (*(volatile Ifx_GTM_ATOM_CH_CN0*)0xF010DB98u)


#define GTM_ATOM1_CH7_CTRL (*(volatile Ifx_GTM_ATOM_CH_CTRL*)0xF010DB84u)


#define GTM_ATOM1_CH7_IRQ_EN (*(volatile Ifx_GTM_ATOM_CH_IRQ_EN*)0xF010DBA4u)


#define GTM_ATOM1_CH7_IRQ_FORCINT (*(volatile Ifx_GTM_ATOM_CH_IRQ_FORCINT*)0xF010DBA8u)


#define GTM_ATOM1_CH7_IRQ_MODE (*(volatile Ifx_GTM_ATOM_CH_IRQ_MODE*)0xF010DBACu)


#define GTM_ATOM1_CH7_IRQ_NOTIFY (*(volatile Ifx_GTM_ATOM_CH_IRQ_NOTIFY*)0xF010DBA0u)


#define GTM_ATOM1_CH7_RDADDR (*(volatile Ifx_GTM_ATOM_CH_RDADDR*)0xF010DB80u)


#define GTM_ATOM1_CH7_SOMC (*(volatile Ifx_GTM_ATOM_CH_SOMC*)0xF010DB84u)




#define GTM_ATOM1_CH7_CTRL_SOMC (GTM_ATOM1_CH7_SOMC)


#define GTM_ATOM1_CH7_SOMI (*(volatile Ifx_GTM_ATOM_CH_SOMI*)0xF010DB84u)




#define GTM_ATOM1_CH7_CTRL_SOMI (GTM_ATOM1_CH7_SOMI)


#define GTM_ATOM1_CH7_SOMP (*(volatile Ifx_GTM_ATOM_CH_SOMP*)0xF010DB84u)




#define GTM_ATOM1_CH7_CTRL_SOMP (GTM_ATOM1_CH7_SOMP)


#define GTM_ATOM1_CH7_SOMS (*(volatile Ifx_GTM_ATOM_CH_SOMS*)0xF010DB84u)




#define GTM_ATOM1_CH7_CTRL_SOMS (GTM_ATOM1_CH7_SOMS)


#define GTM_ATOM1_CH7_SR0 (*(volatile Ifx_GTM_ATOM_CH_SR0*)0xF010DB88u)


#define GTM_ATOM1_CH7_SR1 (*(volatile Ifx_GTM_ATOM_CH_SR1*)0xF010DB8Cu)


#define GTM_ATOM1_CH7_STAT (*(volatile Ifx_GTM_ATOM_CH_STAT*)0xF010DB9Cu)


#define GTM_ATOM2_AGC_ACT_TB (*(volatile Ifx_GTM_ATOM_AGC_ACT_TB*)0xF010E04Cu)


#define GTM_ATOM2_AGC_ENDIS_CTRL (*(volatile Ifx_GTM_ATOM_AGC_ENDIS_CTRL*)0xF010E044u)


#define GTM_ATOM2_AGC_ENDIS_STAT (*(volatile Ifx_GTM_ATOM_AGC_ENDIS_STAT*)0xF010E048u)


#define GTM_ATOM2_AGC_FUPD_CTRL (*(volatile Ifx_GTM_ATOM_AGC_FUPD_CTRL*)0xF010E058u)


#define GTM_ATOM2_AGC_GLB_CTRL (*(volatile Ifx_GTM_ATOM_AGC_GLB_CTRL*)0xF010E040u)


#define GTM_ATOM2_AGC_INT_TRIG (*(volatile Ifx_GTM_ATOM_AGC_INT_TRIG*)0xF010E05Cu)


#define GTM_ATOM2_AGC_OUTEN_CTRL (*(volatile Ifx_GTM_ATOM_AGC_OUTEN_CTRL*)0xF010E050u)


#define GTM_ATOM2_AGC_OUTEN_STAT (*(volatile Ifx_GTM_ATOM_AGC_OUTEN_STAT*)0xF010E054u)


#define GTM_ATOM2_CH0_CM0 (*(volatile Ifx_GTM_ATOM_CH_CM0*)0xF010E010u)


#define GTM_ATOM2_CH0_CM1 (*(volatile Ifx_GTM_ATOM_CH_CM1*)0xF010E014u)


#define GTM_ATOM2_CH0_CN0 (*(volatile Ifx_GTM_ATOM_CH_CN0*)0xF010E018u)


#define GTM_ATOM2_CH0_CTRL (*(volatile Ifx_GTM_ATOM_CH_CTRL*)0xF010E004u)


#define GTM_ATOM2_CH0_IRQ_EN (*(volatile Ifx_GTM_ATOM_CH_IRQ_EN*)0xF010E024u)


#define GTM_ATOM2_CH0_IRQ_FORCINT (*(volatile Ifx_GTM_ATOM_CH_IRQ_FORCINT*)0xF010E028u)


#define GTM_ATOM2_CH0_IRQ_MODE (*(volatile Ifx_GTM_ATOM_CH_IRQ_MODE*)0xF010E02Cu)


#define GTM_ATOM2_CH0_IRQ_NOTIFY (*(volatile Ifx_GTM_ATOM_CH_IRQ_NOTIFY*)0xF010E020u)


#define GTM_ATOM2_CH0_RDADDR (*(volatile Ifx_GTM_ATOM_CH_RDADDR*)0xF010E000u)


#define GTM_ATOM2_CH0_SOMC (*(volatile Ifx_GTM_ATOM_CH_SOMC*)0xF010E004u)




#define GTM_ATOM2_CH0_CTRL_SOMC (GTM_ATOM2_CH0_SOMC)


#define GTM_ATOM2_CH0_SOMI (*(volatile Ifx_GTM_ATOM_CH_SOMI*)0xF010E004u)




#define GTM_ATOM2_CH0_CTRL_SOMI (GTM_ATOM2_CH0_SOMI)


#define GTM_ATOM2_CH0_SOMP (*(volatile Ifx_GTM_ATOM_CH_SOMP*)0xF010E004u)




#define GTM_ATOM2_CH0_CTRL_SOMP (GTM_ATOM2_CH0_SOMP)


#define GTM_ATOM2_CH0_SOMS (*(volatile Ifx_GTM_ATOM_CH_SOMS*)0xF010E004u)




#define GTM_ATOM2_CH0_CTRL_SOMS (GTM_ATOM2_CH0_SOMS)


#define GTM_ATOM2_CH0_SR0 (*(volatile Ifx_GTM_ATOM_CH_SR0*)0xF010E008u)


#define GTM_ATOM2_CH0_SR1 (*(volatile Ifx_GTM_ATOM_CH_SR1*)0xF010E00Cu)


#define GTM_ATOM2_CH0_STAT (*(volatile Ifx_GTM_ATOM_CH_STAT*)0xF010E01Cu)


#define GTM_ATOM2_CH1_CM0 (*(volatile Ifx_GTM_ATOM_CH_CM0*)0xF010E090u)


#define GTM_ATOM2_CH1_CM1 (*(volatile Ifx_GTM_ATOM_CH_CM1*)0xF010E094u)


#define GTM_ATOM2_CH1_CN0 (*(volatile Ifx_GTM_ATOM_CH_CN0*)0xF010E098u)


#define GTM_ATOM2_CH1_CTRL (*(volatile Ifx_GTM_ATOM_CH_CTRL*)0xF010E084u)


#define GTM_ATOM2_CH1_IRQ_EN (*(volatile Ifx_GTM_ATOM_CH_IRQ_EN*)0xF010E0A4u)


#define GTM_ATOM2_CH1_IRQ_FORCINT (*(volatile Ifx_GTM_ATOM_CH_IRQ_FORCINT*)0xF010E0A8u)


#define GTM_ATOM2_CH1_IRQ_MODE (*(volatile Ifx_GTM_ATOM_CH_IRQ_MODE*)0xF010E0ACu)


#define GTM_ATOM2_CH1_IRQ_NOTIFY (*(volatile Ifx_GTM_ATOM_CH_IRQ_NOTIFY*)0xF010E0A0u)


#define GTM_ATOM2_CH1_RDADDR (*(volatile Ifx_GTM_ATOM_CH_RDADDR*)0xF010E080u)


#define GTM_ATOM2_CH1_SOMC (*(volatile Ifx_GTM_ATOM_CH_SOMC*)0xF010E084u)




#define GTM_ATOM2_CH1_CTRL_SOMC (GTM_ATOM2_CH1_SOMC)


#define GTM_ATOM2_CH1_SOMI (*(volatile Ifx_GTM_ATOM_CH_SOMI*)0xF010E084u)




#define GTM_ATOM2_CH1_CTRL_SOMI (GTM_ATOM2_CH1_SOMI)


#define GTM_ATOM2_CH1_SOMP (*(volatile Ifx_GTM_ATOM_CH_SOMP*)0xF010E084u)




#define GTM_ATOM2_CH1_CTRL_SOMP (GTM_ATOM2_CH1_SOMP)


#define GTM_ATOM2_CH1_SOMS (*(volatile Ifx_GTM_ATOM_CH_SOMS*)0xF010E084u)




#define GTM_ATOM2_CH1_CTRL_SOMS (GTM_ATOM2_CH1_SOMS)


#define GTM_ATOM2_CH1_SR0 (*(volatile Ifx_GTM_ATOM_CH_SR0*)0xF010E088u)


#define GTM_ATOM2_CH1_SR1 (*(volatile Ifx_GTM_ATOM_CH_SR1*)0xF010E08Cu)


#define GTM_ATOM2_CH1_STAT (*(volatile Ifx_GTM_ATOM_CH_STAT*)0xF010E09Cu)


#define GTM_ATOM2_CH2_CM0 (*(volatile Ifx_GTM_ATOM_CH_CM0*)0xF010E110u)


#define GTM_ATOM2_CH2_CM1 (*(volatile Ifx_GTM_ATOM_CH_CM1*)0xF010E114u)


#define GTM_ATOM2_CH2_CN0 (*(volatile Ifx_GTM_ATOM_CH_CN0*)0xF010E118u)


#define GTM_ATOM2_CH2_CTRL (*(volatile Ifx_GTM_ATOM_CH_CTRL*)0xF010E104u)


#define GTM_ATOM2_CH2_IRQ_EN (*(volatile Ifx_GTM_ATOM_CH_IRQ_EN*)0xF010E124u)


#define GTM_ATOM2_CH2_IRQ_FORCINT (*(volatile Ifx_GTM_ATOM_CH_IRQ_FORCINT*)0xF010E128u)


#define GTM_ATOM2_CH2_IRQ_MODE (*(volatile Ifx_GTM_ATOM_CH_IRQ_MODE*)0xF010E12Cu)


#define GTM_ATOM2_CH2_IRQ_NOTIFY (*(volatile Ifx_GTM_ATOM_CH_IRQ_NOTIFY*)0xF010E120u)


#define GTM_ATOM2_CH2_RDADDR (*(volatile Ifx_GTM_ATOM_CH_RDADDR*)0xF010E100u)


#define GTM_ATOM2_CH2_SOMC (*(volatile Ifx_GTM_ATOM_CH_SOMC*)0xF010E104u)




#define GTM_ATOM2_CH2_CTRL_SOMC (GTM_ATOM2_CH2_SOMC)


#define GTM_ATOM2_CH2_SOMI (*(volatile Ifx_GTM_ATOM_CH_SOMI*)0xF010E104u)




#define GTM_ATOM2_CH2_CTRL_SOMI (GTM_ATOM2_CH2_SOMI)


#define GTM_ATOM2_CH2_SOMP (*(volatile Ifx_GTM_ATOM_CH_SOMP*)0xF010E104u)




#define GTM_ATOM2_CH2_CTRL_SOMP (GTM_ATOM2_CH2_SOMP)


#define GTM_ATOM2_CH2_SOMS (*(volatile Ifx_GTM_ATOM_CH_SOMS*)0xF010E104u)




#define GTM_ATOM2_CH2_CTRL_SOMS (GTM_ATOM2_CH2_SOMS)


#define GTM_ATOM2_CH2_SR0 (*(volatile Ifx_GTM_ATOM_CH_SR0*)0xF010E108u)


#define GTM_ATOM2_CH2_SR1 (*(volatile Ifx_GTM_ATOM_CH_SR1*)0xF010E10Cu)


#define GTM_ATOM2_CH2_STAT (*(volatile Ifx_GTM_ATOM_CH_STAT*)0xF010E11Cu)


#define GTM_ATOM2_CH3_CM0 (*(volatile Ifx_GTM_ATOM_CH_CM0*)0xF010E190u)


#define GTM_ATOM2_CH3_CM1 (*(volatile Ifx_GTM_ATOM_CH_CM1*)0xF010E194u)


#define GTM_ATOM2_CH3_CN0 (*(volatile Ifx_GTM_ATOM_CH_CN0*)0xF010E198u)


#define GTM_ATOM2_CH3_CTRL (*(volatile Ifx_GTM_ATOM_CH_CTRL*)0xF010E184u)


#define GTM_ATOM2_CH3_IRQ_EN (*(volatile Ifx_GTM_ATOM_CH_IRQ_EN*)0xF010E1A4u)


#define GTM_ATOM2_CH3_IRQ_FORCINT (*(volatile Ifx_GTM_ATOM_CH_IRQ_FORCINT*)0xF010E1A8u)


#define GTM_ATOM2_CH3_IRQ_MODE (*(volatile Ifx_GTM_ATOM_CH_IRQ_MODE*)0xF010E1ACu)


#define GTM_ATOM2_CH3_IRQ_NOTIFY (*(volatile Ifx_GTM_ATOM_CH_IRQ_NOTIFY*)0xF010E1A0u)


#define GTM_ATOM2_CH3_RDADDR (*(volatile Ifx_GTM_ATOM_CH_RDADDR*)0xF010E180u)


#define GTM_ATOM2_CH3_SOMC (*(volatile Ifx_GTM_ATOM_CH_SOMC*)0xF010E184u)




#define GTM_ATOM2_CH3_CTRL_SOMC (GTM_ATOM2_CH3_SOMC)


#define GTM_ATOM2_CH3_SOMI (*(volatile Ifx_GTM_ATOM_CH_SOMI*)0xF010E184u)




#define GTM_ATOM2_CH3_CTRL_SOMI (GTM_ATOM2_CH3_SOMI)


#define GTM_ATOM2_CH3_SOMP (*(volatile Ifx_GTM_ATOM_CH_SOMP*)0xF010E184u)




#define GTM_ATOM2_CH3_CTRL_SOMP (GTM_ATOM2_CH3_SOMP)


#define GTM_ATOM2_CH3_SOMS (*(volatile Ifx_GTM_ATOM_CH_SOMS*)0xF010E184u)




#define GTM_ATOM2_CH3_CTRL_SOMS (GTM_ATOM2_CH3_SOMS)


#define GTM_ATOM2_CH3_SR0 (*(volatile Ifx_GTM_ATOM_CH_SR0*)0xF010E188u)


#define GTM_ATOM2_CH3_SR1 (*(volatile Ifx_GTM_ATOM_CH_SR1*)0xF010E18Cu)


#define GTM_ATOM2_CH3_STAT (*(volatile Ifx_GTM_ATOM_CH_STAT*)0xF010E19Cu)


#define GTM_ATOM2_CH4_CM0 (*(volatile Ifx_GTM_ATOM_CH_CM0*)0xF010E210u)


#define GTM_ATOM2_CH4_CM1 (*(volatile Ifx_GTM_ATOM_CH_CM1*)0xF010E214u)


#define GTM_ATOM2_CH4_CN0 (*(volatile Ifx_GTM_ATOM_CH_CN0*)0xF010E218u)


#define GTM_ATOM2_CH4_CTRL (*(volatile Ifx_GTM_ATOM_CH_CTRL*)0xF010E204u)


#define GTM_ATOM2_CH4_IRQ_EN (*(volatile Ifx_GTM_ATOM_CH_IRQ_EN*)0xF010E224u)


#define GTM_ATOM2_CH4_IRQ_FORCINT (*(volatile Ifx_GTM_ATOM_CH_IRQ_FORCINT*)0xF010E228u)


#define GTM_ATOM2_CH4_IRQ_MODE (*(volatile Ifx_GTM_ATOM_CH_IRQ_MODE*)0xF010E22Cu)


#define GTM_ATOM2_CH4_IRQ_NOTIFY (*(volatile Ifx_GTM_ATOM_CH_IRQ_NOTIFY*)0xF010E220u)


#define GTM_ATOM2_CH4_RDADDR (*(volatile Ifx_GTM_ATOM_CH_RDADDR*)0xF010E200u)


#define GTM_ATOM2_CH4_SOMC (*(volatile Ifx_GTM_ATOM_CH_SOMC*)0xF010E204u)




#define GTM_ATOM2_CH4_CTRL_SOMC (GTM_ATOM2_CH4_SOMC)


#define GTM_ATOM2_CH4_SOMI (*(volatile Ifx_GTM_ATOM_CH_SOMI*)0xF010E204u)




#define GTM_ATOM2_CH4_CTRL_SOMI (GTM_ATOM2_CH4_SOMI)


#define GTM_ATOM2_CH4_SOMP (*(volatile Ifx_GTM_ATOM_CH_SOMP*)0xF010E204u)




#define GTM_ATOM2_CH4_CTRL_SOMP (GTM_ATOM2_CH4_SOMP)


#define GTM_ATOM2_CH4_SOMS (*(volatile Ifx_GTM_ATOM_CH_SOMS*)0xF010E204u)




#define GTM_ATOM2_CH4_CTRL_SOMS (GTM_ATOM2_CH4_SOMS)


#define GTM_ATOM2_CH4_SR0 (*(volatile Ifx_GTM_ATOM_CH_SR0*)0xF010E208u)


#define GTM_ATOM2_CH4_SR1 (*(volatile Ifx_GTM_ATOM_CH_SR1*)0xF010E20Cu)


#define GTM_ATOM2_CH4_STAT (*(volatile Ifx_GTM_ATOM_CH_STAT*)0xF010E21Cu)


#define GTM_ATOM2_CH5_CM0 (*(volatile Ifx_GTM_ATOM_CH_CM0*)0xF010E290u)


#define GTM_ATOM2_CH5_CM1 (*(volatile Ifx_GTM_ATOM_CH_CM1*)0xF010E294u)


#define GTM_ATOM2_CH5_CN0 (*(volatile Ifx_GTM_ATOM_CH_CN0*)0xF010E298u)


#define GTM_ATOM2_CH5_CTRL (*(volatile Ifx_GTM_ATOM_CH_CTRL*)0xF010E284u)


#define GTM_ATOM2_CH5_IRQ_EN (*(volatile Ifx_GTM_ATOM_CH_IRQ_EN*)0xF010E2A4u)


#define GTM_ATOM2_CH5_IRQ_FORCINT (*(volatile Ifx_GTM_ATOM_CH_IRQ_FORCINT*)0xF010E2A8u)


#define GTM_ATOM2_CH5_IRQ_MODE (*(volatile Ifx_GTM_ATOM_CH_IRQ_MODE*)0xF010E2ACu)


#define GTM_ATOM2_CH5_IRQ_NOTIFY (*(volatile Ifx_GTM_ATOM_CH_IRQ_NOTIFY*)0xF010E2A0u)


#define GTM_ATOM2_CH5_RDADDR (*(volatile Ifx_GTM_ATOM_CH_RDADDR*)0xF010E280u)


#define GTM_ATOM2_CH5_SOMC (*(volatile Ifx_GTM_ATOM_CH_SOMC*)0xF010E284u)




#define GTM_ATOM2_CH5_CTRL_SOMC (GTM_ATOM2_CH5_SOMC)


#define GTM_ATOM2_CH5_SOMI (*(volatile Ifx_GTM_ATOM_CH_SOMI*)0xF010E284u)




#define GTM_ATOM2_CH5_CTRL_SOMI (GTM_ATOM2_CH5_SOMI)


#define GTM_ATOM2_CH5_SOMP (*(volatile Ifx_GTM_ATOM_CH_SOMP*)0xF010E284u)




#define GTM_ATOM2_CH5_CTRL_SOMP (GTM_ATOM2_CH5_SOMP)


#define GTM_ATOM2_CH5_SOMS (*(volatile Ifx_GTM_ATOM_CH_SOMS*)0xF010E284u)




#define GTM_ATOM2_CH5_CTRL_SOMS (GTM_ATOM2_CH5_SOMS)


#define GTM_ATOM2_CH5_SR0 (*(volatile Ifx_GTM_ATOM_CH_SR0*)0xF010E288u)


#define GTM_ATOM2_CH5_SR1 (*(volatile Ifx_GTM_ATOM_CH_SR1*)0xF010E28Cu)


#define GTM_ATOM2_CH5_STAT (*(volatile Ifx_GTM_ATOM_CH_STAT*)0xF010E29Cu)


#define GTM_ATOM2_CH6_CM0 (*(volatile Ifx_GTM_ATOM_CH_CM0*)0xF010E310u)


#define GTM_ATOM2_CH6_CM1 (*(volatile Ifx_GTM_ATOM_CH_CM1*)0xF010E314u)


#define GTM_ATOM2_CH6_CN0 (*(volatile Ifx_GTM_ATOM_CH_CN0*)0xF010E318u)


#define GTM_ATOM2_CH6_CTRL (*(volatile Ifx_GTM_ATOM_CH_CTRL*)0xF010E304u)


#define GTM_ATOM2_CH6_IRQ_EN (*(volatile Ifx_GTM_ATOM_CH_IRQ_EN*)0xF010E324u)


#define GTM_ATOM2_CH6_IRQ_FORCINT (*(volatile Ifx_GTM_ATOM_CH_IRQ_FORCINT*)0xF010E328u)


#define GTM_ATOM2_CH6_IRQ_MODE (*(volatile Ifx_GTM_ATOM_CH_IRQ_MODE*)0xF010E32Cu)


#define GTM_ATOM2_CH6_IRQ_NOTIFY (*(volatile Ifx_GTM_ATOM_CH_IRQ_NOTIFY*)0xF010E320u)


#define GTM_ATOM2_CH6_RDADDR (*(volatile Ifx_GTM_ATOM_CH_RDADDR*)0xF010E300u)


#define GTM_ATOM2_CH6_SOMC (*(volatile Ifx_GTM_ATOM_CH_SOMC*)0xF010E304u)




#define GTM_ATOM2_CH6_CTRL_SOMC (GTM_ATOM2_CH6_SOMC)


#define GTM_ATOM2_CH6_SOMI (*(volatile Ifx_GTM_ATOM_CH_SOMI*)0xF010E304u)




#define GTM_ATOM2_CH6_CTRL_SOMI (GTM_ATOM2_CH6_SOMI)


#define GTM_ATOM2_CH6_SOMP (*(volatile Ifx_GTM_ATOM_CH_SOMP*)0xF010E304u)




#define GTM_ATOM2_CH6_CTRL_SOMP (GTM_ATOM2_CH6_SOMP)


#define GTM_ATOM2_CH6_SOMS (*(volatile Ifx_GTM_ATOM_CH_SOMS*)0xF010E304u)




#define GTM_ATOM2_CH6_CTRL_SOMS (GTM_ATOM2_CH6_SOMS)


#define GTM_ATOM2_CH6_SR0 (*(volatile Ifx_GTM_ATOM_CH_SR0*)0xF010E308u)


#define GTM_ATOM2_CH6_SR1 (*(volatile Ifx_GTM_ATOM_CH_SR1*)0xF010E30Cu)


#define GTM_ATOM2_CH6_STAT (*(volatile Ifx_GTM_ATOM_CH_STAT*)0xF010E31Cu)


#define GTM_ATOM2_CH7_CM0 (*(volatile Ifx_GTM_ATOM_CH_CM0*)0xF010E390u)


#define GTM_ATOM2_CH7_CM1 (*(volatile Ifx_GTM_ATOM_CH_CM1*)0xF010E394u)


#define GTM_ATOM2_CH7_CN0 (*(volatile Ifx_GTM_ATOM_CH_CN0*)0xF010E398u)


#define GTM_ATOM2_CH7_CTRL (*(volatile Ifx_GTM_ATOM_CH_CTRL*)0xF010E384u)


#define GTM_ATOM2_CH7_IRQ_EN (*(volatile Ifx_GTM_ATOM_CH_IRQ_EN*)0xF010E3A4u)


#define GTM_ATOM2_CH7_IRQ_FORCINT (*(volatile Ifx_GTM_ATOM_CH_IRQ_FORCINT*)0xF010E3A8u)


#define GTM_ATOM2_CH7_IRQ_MODE (*(volatile Ifx_GTM_ATOM_CH_IRQ_MODE*)0xF010E3ACu)


#define GTM_ATOM2_CH7_IRQ_NOTIFY (*(volatile Ifx_GTM_ATOM_CH_IRQ_NOTIFY*)0xF010E3A0u)


#define GTM_ATOM2_CH7_RDADDR (*(volatile Ifx_GTM_ATOM_CH_RDADDR*)0xF010E380u)


#define GTM_ATOM2_CH7_SOMC (*(volatile Ifx_GTM_ATOM_CH_SOMC*)0xF010E384u)




#define GTM_ATOM2_CH7_CTRL_SOMC (GTM_ATOM2_CH7_SOMC)


#define GTM_ATOM2_CH7_SOMI (*(volatile Ifx_GTM_ATOM_CH_SOMI*)0xF010E384u)




#define GTM_ATOM2_CH7_CTRL_SOMI (GTM_ATOM2_CH7_SOMI)


#define GTM_ATOM2_CH7_SOMP (*(volatile Ifx_GTM_ATOM_CH_SOMP*)0xF010E384u)




#define GTM_ATOM2_CH7_CTRL_SOMP (GTM_ATOM2_CH7_SOMP)


#define GTM_ATOM2_CH7_SOMS (*(volatile Ifx_GTM_ATOM_CH_SOMS*)0xF010E384u)




#define GTM_ATOM2_CH7_CTRL_SOMS (GTM_ATOM2_CH7_SOMS)


#define GTM_ATOM2_CH7_SR0 (*(volatile Ifx_GTM_ATOM_CH_SR0*)0xF010E388u)


#define GTM_ATOM2_CH7_SR1 (*(volatile Ifx_GTM_ATOM_CH_SR1*)0xF010E38Cu)


#define GTM_ATOM2_CH7_STAT (*(volatile Ifx_GTM_ATOM_CH_STAT*)0xF010E39Cu)


#define GTM_ATOM3_AGC_ACT_TB (*(volatile Ifx_GTM_ATOM_AGC_ACT_TB*)0xF010E84Cu)


#define GTM_ATOM3_AGC_ENDIS_CTRL (*(volatile Ifx_GTM_ATOM_AGC_ENDIS_CTRL*)0xF010E844u)


#define GTM_ATOM3_AGC_ENDIS_STAT (*(volatile Ifx_GTM_ATOM_AGC_ENDIS_STAT*)0xF010E848u)


#define GTM_ATOM3_AGC_FUPD_CTRL (*(volatile Ifx_GTM_ATOM_AGC_FUPD_CTRL*)0xF010E858u)


#define GTM_ATOM3_AGC_GLB_CTRL (*(volatile Ifx_GTM_ATOM_AGC_GLB_CTRL*)0xF010E840u)


#define GTM_ATOM3_AGC_INT_TRIG (*(volatile Ifx_GTM_ATOM_AGC_INT_TRIG*)0xF010E85Cu)


#define GTM_ATOM3_AGC_OUTEN_CTRL (*(volatile Ifx_GTM_ATOM_AGC_OUTEN_CTRL*)0xF010E850u)


#define GTM_ATOM3_AGC_OUTEN_STAT (*(volatile Ifx_GTM_ATOM_AGC_OUTEN_STAT*)0xF010E854u)


#define GTM_ATOM3_CH0_CM0 (*(volatile Ifx_GTM_ATOM_CH_CM0*)0xF010E810u)


#define GTM_ATOM3_CH0_CM1 (*(volatile Ifx_GTM_ATOM_CH_CM1*)0xF010E814u)


#define GTM_ATOM3_CH0_CN0 (*(volatile Ifx_GTM_ATOM_CH_CN0*)0xF010E818u)


#define GTM_ATOM3_CH0_CTRL (*(volatile Ifx_GTM_ATOM_CH_CTRL*)0xF010E804u)


#define GTM_ATOM3_CH0_IRQ_EN (*(volatile Ifx_GTM_ATOM_CH_IRQ_EN*)0xF010E824u)


#define GTM_ATOM3_CH0_IRQ_FORCINT (*(volatile Ifx_GTM_ATOM_CH_IRQ_FORCINT*)0xF010E828u)


#define GTM_ATOM3_CH0_IRQ_MODE (*(volatile Ifx_GTM_ATOM_CH_IRQ_MODE*)0xF010E82Cu)


#define GTM_ATOM3_CH0_IRQ_NOTIFY (*(volatile Ifx_GTM_ATOM_CH_IRQ_NOTIFY*)0xF010E820u)


#define GTM_ATOM3_CH0_RDADDR (*(volatile Ifx_GTM_ATOM_CH_RDADDR*)0xF010E800u)


#define GTM_ATOM3_CH0_SOMC (*(volatile Ifx_GTM_ATOM_CH_SOMC*)0xF010E804u)




#define GTM_ATOM3_CH0_CTRL_SOMC (GTM_ATOM3_CH0_SOMC)


#define GTM_ATOM3_CH0_SOMI (*(volatile Ifx_GTM_ATOM_CH_SOMI*)0xF010E804u)




#define GTM_ATOM3_CH0_CTRL_SOMI (GTM_ATOM3_CH0_SOMI)


#define GTM_ATOM3_CH0_SOMP (*(volatile Ifx_GTM_ATOM_CH_SOMP*)0xF010E804u)




#define GTM_ATOM3_CH0_CTRL_SOMP (GTM_ATOM3_CH0_SOMP)


#define GTM_ATOM3_CH0_SOMS (*(volatile Ifx_GTM_ATOM_CH_SOMS*)0xF010E804u)




#define GTM_ATOM3_CH0_CTRL_SOMS (GTM_ATOM3_CH0_SOMS)


#define GTM_ATOM3_CH0_SR0 (*(volatile Ifx_GTM_ATOM_CH_SR0*)0xF010E808u)


#define GTM_ATOM3_CH0_SR1 (*(volatile Ifx_GTM_ATOM_CH_SR1*)0xF010E80Cu)


#define GTM_ATOM3_CH0_STAT (*(volatile Ifx_GTM_ATOM_CH_STAT*)0xF010E81Cu)


#define GTM_ATOM3_CH1_CM0 (*(volatile Ifx_GTM_ATOM_CH_CM0*)0xF010E890u)


#define GTM_ATOM3_CH1_CM1 (*(volatile Ifx_GTM_ATOM_CH_CM1*)0xF010E894u)


#define GTM_ATOM3_CH1_CN0 (*(volatile Ifx_GTM_ATOM_CH_CN0*)0xF010E898u)


#define GTM_ATOM3_CH1_CTRL (*(volatile Ifx_GTM_ATOM_CH_CTRL*)0xF010E884u)


#define GTM_ATOM3_CH1_IRQ_EN (*(volatile Ifx_GTM_ATOM_CH_IRQ_EN*)0xF010E8A4u)


#define GTM_ATOM3_CH1_IRQ_FORCINT (*(volatile Ifx_GTM_ATOM_CH_IRQ_FORCINT*)0xF010E8A8u)


#define GTM_ATOM3_CH1_IRQ_MODE (*(volatile Ifx_GTM_ATOM_CH_IRQ_MODE*)0xF010E8ACu)


#define GTM_ATOM3_CH1_IRQ_NOTIFY (*(volatile Ifx_GTM_ATOM_CH_IRQ_NOTIFY*)0xF010E8A0u)


#define GTM_ATOM3_CH1_RDADDR (*(volatile Ifx_GTM_ATOM_CH_RDADDR*)0xF010E880u)


#define GTM_ATOM3_CH1_SOMC (*(volatile Ifx_GTM_ATOM_CH_SOMC*)0xF010E884u)




#define GTM_ATOM3_CH1_CTRL_SOMC (GTM_ATOM3_CH1_SOMC)


#define GTM_ATOM3_CH1_SOMI (*(volatile Ifx_GTM_ATOM_CH_SOMI*)0xF010E884u)




#define GTM_ATOM3_CH1_CTRL_SOMI (GTM_ATOM3_CH1_SOMI)


#define GTM_ATOM3_CH1_SOMP (*(volatile Ifx_GTM_ATOM_CH_SOMP*)0xF010E884u)




#define GTM_ATOM3_CH1_CTRL_SOMP (GTM_ATOM3_CH1_SOMP)


#define GTM_ATOM3_CH1_SOMS (*(volatile Ifx_GTM_ATOM_CH_SOMS*)0xF010E884u)




#define GTM_ATOM3_CH1_CTRL_SOMS (GTM_ATOM3_CH1_SOMS)


#define GTM_ATOM3_CH1_SR0 (*(volatile Ifx_GTM_ATOM_CH_SR0*)0xF010E888u)


#define GTM_ATOM3_CH1_SR1 (*(volatile Ifx_GTM_ATOM_CH_SR1*)0xF010E88Cu)


#define GTM_ATOM3_CH1_STAT (*(volatile Ifx_GTM_ATOM_CH_STAT*)0xF010E89Cu)


#define GTM_ATOM3_CH2_CM0 (*(volatile Ifx_GTM_ATOM_CH_CM0*)0xF010E910u)


#define GTM_ATOM3_CH2_CM1 (*(volatile Ifx_GTM_ATOM_CH_CM1*)0xF010E914u)


#define GTM_ATOM3_CH2_CN0 (*(volatile Ifx_GTM_ATOM_CH_CN0*)0xF010E918u)


#define GTM_ATOM3_CH2_CTRL (*(volatile Ifx_GTM_ATOM_CH_CTRL*)0xF010E904u)


#define GTM_ATOM3_CH2_IRQ_EN (*(volatile Ifx_GTM_ATOM_CH_IRQ_EN*)0xF010E924u)


#define GTM_ATOM3_CH2_IRQ_FORCINT (*(volatile Ifx_GTM_ATOM_CH_IRQ_FORCINT*)0xF010E928u)


#define GTM_ATOM3_CH2_IRQ_MODE (*(volatile Ifx_GTM_ATOM_CH_IRQ_MODE*)0xF010E92Cu)


#define GTM_ATOM3_CH2_IRQ_NOTIFY (*(volatile Ifx_GTM_ATOM_CH_IRQ_NOTIFY*)0xF010E920u)


#define GTM_ATOM3_CH2_RDADDR (*(volatile Ifx_GTM_ATOM_CH_RDADDR*)0xF010E900u)


#define GTM_ATOM3_CH2_SOMC (*(volatile Ifx_GTM_ATOM_CH_SOMC*)0xF010E904u)




#define GTM_ATOM3_CH2_CTRL_SOMC (GTM_ATOM3_CH2_SOMC)


#define GTM_ATOM3_CH2_SOMI (*(volatile Ifx_GTM_ATOM_CH_SOMI*)0xF010E904u)




#define GTM_ATOM3_CH2_CTRL_SOMI (GTM_ATOM3_CH2_SOMI)


#define GTM_ATOM3_CH2_SOMP (*(volatile Ifx_GTM_ATOM_CH_SOMP*)0xF010E904u)




#define GTM_ATOM3_CH2_CTRL_SOMP (GTM_ATOM3_CH2_SOMP)


#define GTM_ATOM3_CH2_SOMS (*(volatile Ifx_GTM_ATOM_CH_SOMS*)0xF010E904u)




#define GTM_ATOM3_CH2_CTRL_SOMS (GTM_ATOM3_CH2_SOMS)


#define GTM_ATOM3_CH2_SR0 (*(volatile Ifx_GTM_ATOM_CH_SR0*)0xF010E908u)


#define GTM_ATOM3_CH2_SR1 (*(volatile Ifx_GTM_ATOM_CH_SR1*)0xF010E90Cu)


#define GTM_ATOM3_CH2_STAT (*(volatile Ifx_GTM_ATOM_CH_STAT*)0xF010E91Cu)


#define GTM_ATOM3_CH3_CM0 (*(volatile Ifx_GTM_ATOM_CH_CM0*)0xF010E990u)


#define GTM_ATOM3_CH3_CM1 (*(volatile Ifx_GTM_ATOM_CH_CM1*)0xF010E994u)


#define GTM_ATOM3_CH3_CN0 (*(volatile Ifx_GTM_ATOM_CH_CN0*)0xF010E998u)


#define GTM_ATOM3_CH3_CTRL (*(volatile Ifx_GTM_ATOM_CH_CTRL*)0xF010E984u)


#define GTM_ATOM3_CH3_IRQ_EN (*(volatile Ifx_GTM_ATOM_CH_IRQ_EN*)0xF010E9A4u)


#define GTM_ATOM3_CH3_IRQ_FORCINT (*(volatile Ifx_GTM_ATOM_CH_IRQ_FORCINT*)0xF010E9A8u)


#define GTM_ATOM3_CH3_IRQ_MODE (*(volatile Ifx_GTM_ATOM_CH_IRQ_MODE*)0xF010E9ACu)


#define GTM_ATOM3_CH3_IRQ_NOTIFY (*(volatile Ifx_GTM_ATOM_CH_IRQ_NOTIFY*)0xF010E9A0u)


#define GTM_ATOM3_CH3_RDADDR (*(volatile Ifx_GTM_ATOM_CH_RDADDR*)0xF010E980u)


#define GTM_ATOM3_CH3_SOMC (*(volatile Ifx_GTM_ATOM_CH_SOMC*)0xF010E984u)




#define GTM_ATOM3_CH3_CTRL_SOMC (GTM_ATOM3_CH3_SOMC)


#define GTM_ATOM3_CH3_SOMI (*(volatile Ifx_GTM_ATOM_CH_SOMI*)0xF010E984u)




#define GTM_ATOM3_CH3_CTRL_SOMI (GTM_ATOM3_CH3_SOMI)


#define GTM_ATOM3_CH3_SOMP (*(volatile Ifx_GTM_ATOM_CH_SOMP*)0xF010E984u)




#define GTM_ATOM3_CH3_CTRL_SOMP (GTM_ATOM3_CH3_SOMP)


#define GTM_ATOM3_CH3_SOMS (*(volatile Ifx_GTM_ATOM_CH_SOMS*)0xF010E984u)




#define GTM_ATOM3_CH3_CTRL_SOMS (GTM_ATOM3_CH3_SOMS)


#define GTM_ATOM3_CH3_SR0 (*(volatile Ifx_GTM_ATOM_CH_SR0*)0xF010E988u)


#define GTM_ATOM3_CH3_SR1 (*(volatile Ifx_GTM_ATOM_CH_SR1*)0xF010E98Cu)


#define GTM_ATOM3_CH3_STAT (*(volatile Ifx_GTM_ATOM_CH_STAT*)0xF010E99Cu)


#define GTM_ATOM3_CH4_CM0 (*(volatile Ifx_GTM_ATOM_CH_CM0*)0xF010EA10u)


#define GTM_ATOM3_CH4_CM1 (*(volatile Ifx_GTM_ATOM_CH_CM1*)0xF010EA14u)


#define GTM_ATOM3_CH4_CN0 (*(volatile Ifx_GTM_ATOM_CH_CN0*)0xF010EA18u)


#define GTM_ATOM3_CH4_CTRL (*(volatile Ifx_GTM_ATOM_CH_CTRL*)0xF010EA04u)


#define GTM_ATOM3_CH4_IRQ_EN (*(volatile Ifx_GTM_ATOM_CH_IRQ_EN*)0xF010EA24u)


#define GTM_ATOM3_CH4_IRQ_FORCINT (*(volatile Ifx_GTM_ATOM_CH_IRQ_FORCINT*)0xF010EA28u)


#define GTM_ATOM3_CH4_IRQ_MODE (*(volatile Ifx_GTM_ATOM_CH_IRQ_MODE*)0xF010EA2Cu)


#define GTM_ATOM3_CH4_IRQ_NOTIFY (*(volatile Ifx_GTM_ATOM_CH_IRQ_NOTIFY*)0xF010EA20u)


#define GTM_ATOM3_CH4_RDADDR (*(volatile Ifx_GTM_ATOM_CH_RDADDR*)0xF010EA00u)


#define GTM_ATOM3_CH4_SOMC (*(volatile Ifx_GTM_ATOM_CH_SOMC*)0xF010EA04u)




#define GTM_ATOM3_CH4_CTRL_SOMC (GTM_ATOM3_CH4_SOMC)


#define GTM_ATOM3_CH4_SOMI (*(volatile Ifx_GTM_ATOM_CH_SOMI*)0xF010EA04u)




#define GTM_ATOM3_CH4_CTRL_SOMI (GTM_ATOM3_CH4_SOMI)


#define GTM_ATOM3_CH4_SOMP (*(volatile Ifx_GTM_ATOM_CH_SOMP*)0xF010EA04u)




#define GTM_ATOM3_CH4_CTRL_SOMP (GTM_ATOM3_CH4_SOMP)


#define GTM_ATOM3_CH4_SOMS (*(volatile Ifx_GTM_ATOM_CH_SOMS*)0xF010EA04u)




#define GTM_ATOM3_CH4_CTRL_SOMS (GTM_ATOM3_CH4_SOMS)


#define GTM_ATOM3_CH4_SR0 (*(volatile Ifx_GTM_ATOM_CH_SR0*)0xF010EA08u)


#define GTM_ATOM3_CH4_SR1 (*(volatile Ifx_GTM_ATOM_CH_SR1*)0xF010EA0Cu)


#define GTM_ATOM3_CH4_STAT (*(volatile Ifx_GTM_ATOM_CH_STAT*)0xF010EA1Cu)


#define GTM_ATOM3_CH5_CM0 (*(volatile Ifx_GTM_ATOM_CH_CM0*)0xF010EA90u)


#define GTM_ATOM3_CH5_CM1 (*(volatile Ifx_GTM_ATOM_CH_CM1*)0xF010EA94u)


#define GTM_ATOM3_CH5_CN0 (*(volatile Ifx_GTM_ATOM_CH_CN0*)0xF010EA98u)


#define GTM_ATOM3_CH5_CTRL (*(volatile Ifx_GTM_ATOM_CH_CTRL*)0xF010EA84u)


#define GTM_ATOM3_CH5_IRQ_EN (*(volatile Ifx_GTM_ATOM_CH_IRQ_EN*)0xF010EAA4u)


#define GTM_ATOM3_CH5_IRQ_FORCINT (*(volatile Ifx_GTM_ATOM_CH_IRQ_FORCINT*)0xF010EAA8u)


#define GTM_ATOM3_CH5_IRQ_MODE (*(volatile Ifx_GTM_ATOM_CH_IRQ_MODE*)0xF010EAACu)


#define GTM_ATOM3_CH5_IRQ_NOTIFY (*(volatile Ifx_GTM_ATOM_CH_IRQ_NOTIFY*)0xF010EAA0u)


#define GTM_ATOM3_CH5_RDADDR (*(volatile Ifx_GTM_ATOM_CH_RDADDR*)0xF010EA80u)


#define GTM_ATOM3_CH5_SOMC (*(volatile Ifx_GTM_ATOM_CH_SOMC*)0xF010EA84u)




#define GTM_ATOM3_CH5_CTRL_SOMC (GTM_ATOM3_CH5_SOMC)


#define GTM_ATOM3_CH5_SOMI (*(volatile Ifx_GTM_ATOM_CH_SOMI*)0xF010EA84u)




#define GTM_ATOM3_CH5_CTRL_SOMI (GTM_ATOM3_CH5_SOMI)


#define GTM_ATOM3_CH5_SOMP (*(volatile Ifx_GTM_ATOM_CH_SOMP*)0xF010EA84u)




#define GTM_ATOM3_CH5_CTRL_SOMP (GTM_ATOM3_CH5_SOMP)


#define GTM_ATOM3_CH5_SOMS (*(volatile Ifx_GTM_ATOM_CH_SOMS*)0xF010EA84u)




#define GTM_ATOM3_CH5_CTRL_SOMS (GTM_ATOM3_CH5_SOMS)


#define GTM_ATOM3_CH5_SR0 (*(volatile Ifx_GTM_ATOM_CH_SR0*)0xF010EA88u)


#define GTM_ATOM3_CH5_SR1 (*(volatile Ifx_GTM_ATOM_CH_SR1*)0xF010EA8Cu)


#define GTM_ATOM3_CH5_STAT (*(volatile Ifx_GTM_ATOM_CH_STAT*)0xF010EA9Cu)


#define GTM_ATOM3_CH6_CM0 (*(volatile Ifx_GTM_ATOM_CH_CM0*)0xF010EB10u)


#define GTM_ATOM3_CH6_CM1 (*(volatile Ifx_GTM_ATOM_CH_CM1*)0xF010EB14u)


#define GTM_ATOM3_CH6_CN0 (*(volatile Ifx_GTM_ATOM_CH_CN0*)0xF010EB18u)


#define GTM_ATOM3_CH6_CTRL (*(volatile Ifx_GTM_ATOM_CH_CTRL*)0xF010EB04u)


#define GTM_ATOM3_CH6_IRQ_EN (*(volatile Ifx_GTM_ATOM_CH_IRQ_EN*)0xF010EB24u)


#define GTM_ATOM3_CH6_IRQ_FORCINT (*(volatile Ifx_GTM_ATOM_CH_IRQ_FORCINT*)0xF010EB28u)


#define GTM_ATOM3_CH6_IRQ_MODE (*(volatile Ifx_GTM_ATOM_CH_IRQ_MODE*)0xF010EB2Cu)


#define GTM_ATOM3_CH6_IRQ_NOTIFY (*(volatile Ifx_GTM_ATOM_CH_IRQ_NOTIFY*)0xF010EB20u)


#define GTM_ATOM3_CH6_RDADDR (*(volatile Ifx_GTM_ATOM_CH_RDADDR*)0xF010EB00u)


#define GTM_ATOM3_CH6_SOMC (*(volatile Ifx_GTM_ATOM_CH_SOMC*)0xF010EB04u)




#define GTM_ATOM3_CH6_CTRL_SOMC (GTM_ATOM3_CH6_SOMC)


#define GTM_ATOM3_CH6_SOMI (*(volatile Ifx_GTM_ATOM_CH_SOMI*)0xF010EB04u)




#define GTM_ATOM3_CH6_CTRL_SOMI (GTM_ATOM3_CH6_SOMI)


#define GTM_ATOM3_CH6_SOMP (*(volatile Ifx_GTM_ATOM_CH_SOMP*)0xF010EB04u)




#define GTM_ATOM3_CH6_CTRL_SOMP (GTM_ATOM3_CH6_SOMP)


#define GTM_ATOM3_CH6_SOMS (*(volatile Ifx_GTM_ATOM_CH_SOMS*)0xF010EB04u)




#define GTM_ATOM3_CH6_CTRL_SOMS (GTM_ATOM3_CH6_SOMS)


#define GTM_ATOM3_CH6_SR0 (*(volatile Ifx_GTM_ATOM_CH_SR0*)0xF010EB08u)


#define GTM_ATOM3_CH6_SR1 (*(volatile Ifx_GTM_ATOM_CH_SR1*)0xF010EB0Cu)


#define GTM_ATOM3_CH6_STAT (*(volatile Ifx_GTM_ATOM_CH_STAT*)0xF010EB1Cu)


#define GTM_ATOM3_CH7_CM0 (*(volatile Ifx_GTM_ATOM_CH_CM0*)0xF010EB90u)


#define GTM_ATOM3_CH7_CM1 (*(volatile Ifx_GTM_ATOM_CH_CM1*)0xF010EB94u)


#define GTM_ATOM3_CH7_CN0 (*(volatile Ifx_GTM_ATOM_CH_CN0*)0xF010EB98u)


#define GTM_ATOM3_CH7_CTRL (*(volatile Ifx_GTM_ATOM_CH_CTRL*)0xF010EB84u)


#define GTM_ATOM3_CH7_IRQ_EN (*(volatile Ifx_GTM_ATOM_CH_IRQ_EN*)0xF010EBA4u)


#define GTM_ATOM3_CH7_IRQ_FORCINT (*(volatile Ifx_GTM_ATOM_CH_IRQ_FORCINT*)0xF010EBA8u)


#define GTM_ATOM3_CH7_IRQ_MODE (*(volatile Ifx_GTM_ATOM_CH_IRQ_MODE*)0xF010EBACu)


#define GTM_ATOM3_CH7_IRQ_NOTIFY (*(volatile Ifx_GTM_ATOM_CH_IRQ_NOTIFY*)0xF010EBA0u)


#define GTM_ATOM3_CH7_RDADDR (*(volatile Ifx_GTM_ATOM_CH_RDADDR*)0xF010EB80u)


#define GTM_ATOM3_CH7_SOMC (*(volatile Ifx_GTM_ATOM_CH_SOMC*)0xF010EB84u)




#define GTM_ATOM3_CH7_CTRL_SOMC (GTM_ATOM3_CH7_SOMC)


#define GTM_ATOM3_CH7_SOMI (*(volatile Ifx_GTM_ATOM_CH_SOMI*)0xF010EB84u)




#define GTM_ATOM3_CH7_CTRL_SOMI (GTM_ATOM3_CH7_SOMI)


#define GTM_ATOM3_CH7_SOMP (*(volatile Ifx_GTM_ATOM_CH_SOMP*)0xF010EB84u)




#define GTM_ATOM3_CH7_CTRL_SOMP (GTM_ATOM3_CH7_SOMP)


#define GTM_ATOM3_CH7_SOMS (*(volatile Ifx_GTM_ATOM_CH_SOMS*)0xF010EB84u)




#define GTM_ATOM3_CH7_CTRL_SOMS (GTM_ATOM3_CH7_SOMS)


#define GTM_ATOM3_CH7_SR0 (*(volatile Ifx_GTM_ATOM_CH_SR0*)0xF010EB88u)


#define GTM_ATOM3_CH7_SR1 (*(volatile Ifx_GTM_ATOM_CH_SR1*)0xF010EB8Cu)


#define GTM_ATOM3_CH7_STAT (*(volatile Ifx_GTM_ATOM_CH_STAT*)0xF010EB9Cu)


#define GTM_ATOM4_AGC_ACT_TB (*(volatile Ifx_GTM_ATOM_AGC_ACT_TB*)0xF010F04Cu)


#define GTM_ATOM4_AGC_ENDIS_CTRL (*(volatile Ifx_GTM_ATOM_AGC_ENDIS_CTRL*)0xF010F044u)


#define GTM_ATOM4_AGC_ENDIS_STAT (*(volatile Ifx_GTM_ATOM_AGC_ENDIS_STAT*)0xF010F048u)


#define GTM_ATOM4_AGC_FUPD_CTRL (*(volatile Ifx_GTM_ATOM_AGC_FUPD_CTRL*)0xF010F058u)


#define GTM_ATOM4_AGC_GLB_CTRL (*(volatile Ifx_GTM_ATOM_AGC_GLB_CTRL*)0xF010F040u)


#define GTM_ATOM4_AGC_INT_TRIG (*(volatile Ifx_GTM_ATOM_AGC_INT_TRIG*)0xF010F05Cu)


#define GTM_ATOM4_AGC_OUTEN_CTRL (*(volatile Ifx_GTM_ATOM_AGC_OUTEN_CTRL*)0xF010F050u)


#define GTM_ATOM4_AGC_OUTEN_STAT (*(volatile Ifx_GTM_ATOM_AGC_OUTEN_STAT*)0xF010F054u)


#define GTM_ATOM4_CH0_CM0 (*(volatile Ifx_GTM_ATOM_CH_CM0*)0xF010F010u)


#define GTM_ATOM4_CH0_CM1 (*(volatile Ifx_GTM_ATOM_CH_CM1*)0xF010F014u)


#define GTM_ATOM4_CH0_CN0 (*(volatile Ifx_GTM_ATOM_CH_CN0*)0xF010F018u)


#define GTM_ATOM4_CH0_CTRL (*(volatile Ifx_GTM_ATOM_CH_CTRL*)0xF010F004u)


#define GTM_ATOM4_CH0_IRQ_EN (*(volatile Ifx_GTM_ATOM_CH_IRQ_EN*)0xF010F024u)


#define GTM_ATOM4_CH0_IRQ_FORCINT (*(volatile Ifx_GTM_ATOM_CH_IRQ_FORCINT*)0xF010F028u)


#define GTM_ATOM4_CH0_IRQ_MODE (*(volatile Ifx_GTM_ATOM_CH_IRQ_MODE*)0xF010F02Cu)


#define GTM_ATOM4_CH0_IRQ_NOTIFY (*(volatile Ifx_GTM_ATOM_CH_IRQ_NOTIFY*)0xF010F020u)


#define GTM_ATOM4_CH0_RDADDR (*(volatile Ifx_GTM_ATOM_CH_RDADDR*)0xF010F000u)


#define GTM_ATOM4_CH0_SOMC (*(volatile Ifx_GTM_ATOM_CH_SOMC*)0xF010F004u)




#define GTM_ATOM4_CH0_CTRL_SOMC (GTM_ATOM4_CH0_SOMC)


#define GTM_ATOM4_CH0_SOMI (*(volatile Ifx_GTM_ATOM_CH_SOMI*)0xF010F004u)




#define GTM_ATOM4_CH0_CTRL_SOMI (GTM_ATOM4_CH0_SOMI)


#define GTM_ATOM4_CH0_SOMP (*(volatile Ifx_GTM_ATOM_CH_SOMP*)0xF010F004u)




#define GTM_ATOM4_CH0_CTRL_SOMP (GTM_ATOM4_CH0_SOMP)


#define GTM_ATOM4_CH0_SOMS (*(volatile Ifx_GTM_ATOM_CH_SOMS*)0xF010F004u)




#define GTM_ATOM4_CH0_CTRL_SOMS (GTM_ATOM4_CH0_SOMS)


#define GTM_ATOM4_CH0_SR0 (*(volatile Ifx_GTM_ATOM_CH_SR0*)0xF010F008u)


#define GTM_ATOM4_CH0_SR1 (*(volatile Ifx_GTM_ATOM_CH_SR1*)0xF010F00Cu)


#define GTM_ATOM4_CH0_STAT (*(volatile Ifx_GTM_ATOM_CH_STAT*)0xF010F01Cu)


#define GTM_ATOM4_CH1_CM0 (*(volatile Ifx_GTM_ATOM_CH_CM0*)0xF010F090u)


#define GTM_ATOM4_CH1_CM1 (*(volatile Ifx_GTM_ATOM_CH_CM1*)0xF010F094u)


#define GTM_ATOM4_CH1_CN0 (*(volatile Ifx_GTM_ATOM_CH_CN0*)0xF010F098u)


#define GTM_ATOM4_CH1_CTRL (*(volatile Ifx_GTM_ATOM_CH_CTRL*)0xF010F084u)


#define GTM_ATOM4_CH1_IRQ_EN (*(volatile Ifx_GTM_ATOM_CH_IRQ_EN*)0xF010F0A4u)


#define GTM_ATOM4_CH1_IRQ_FORCINT (*(volatile Ifx_GTM_ATOM_CH_IRQ_FORCINT*)0xF010F0A8u)


#define GTM_ATOM4_CH1_IRQ_MODE (*(volatile Ifx_GTM_ATOM_CH_IRQ_MODE*)0xF010F0ACu)


#define GTM_ATOM4_CH1_IRQ_NOTIFY (*(volatile Ifx_GTM_ATOM_CH_IRQ_NOTIFY*)0xF010F0A0u)


#define GTM_ATOM4_CH1_RDADDR (*(volatile Ifx_GTM_ATOM_CH_RDADDR*)0xF010F080u)


#define GTM_ATOM4_CH1_SOMC (*(volatile Ifx_GTM_ATOM_CH_SOMC*)0xF010F084u)




#define GTM_ATOM4_CH1_CTRL_SOMC (GTM_ATOM4_CH1_SOMC)


#define GTM_ATOM4_CH1_SOMI (*(volatile Ifx_GTM_ATOM_CH_SOMI*)0xF010F084u)




#define GTM_ATOM4_CH1_CTRL_SOMI (GTM_ATOM4_CH1_SOMI)


#define GTM_ATOM4_CH1_SOMP (*(volatile Ifx_GTM_ATOM_CH_SOMP*)0xF010F084u)




#define GTM_ATOM4_CH1_CTRL_SOMP (GTM_ATOM4_CH1_SOMP)


#define GTM_ATOM4_CH1_SOMS (*(volatile Ifx_GTM_ATOM_CH_SOMS*)0xF010F084u)




#define GTM_ATOM4_CH1_CTRL_SOMS (GTM_ATOM4_CH1_SOMS)


#define GTM_ATOM4_CH1_SR0 (*(volatile Ifx_GTM_ATOM_CH_SR0*)0xF010F088u)


#define GTM_ATOM4_CH1_SR1 (*(volatile Ifx_GTM_ATOM_CH_SR1*)0xF010F08Cu)


#define GTM_ATOM4_CH1_STAT (*(volatile Ifx_GTM_ATOM_CH_STAT*)0xF010F09Cu)


#define GTM_ATOM4_CH2_CM0 (*(volatile Ifx_GTM_ATOM_CH_CM0*)0xF010F110u)


#define GTM_ATOM4_CH2_CM1 (*(volatile Ifx_GTM_ATOM_CH_CM1*)0xF010F114u)


#define GTM_ATOM4_CH2_CN0 (*(volatile Ifx_GTM_ATOM_CH_CN0*)0xF010F118u)


#define GTM_ATOM4_CH2_CTRL (*(volatile Ifx_GTM_ATOM_CH_CTRL*)0xF010F104u)


#define GTM_ATOM4_CH2_IRQ_EN (*(volatile Ifx_GTM_ATOM_CH_IRQ_EN*)0xF010F124u)


#define GTM_ATOM4_CH2_IRQ_FORCINT (*(volatile Ifx_GTM_ATOM_CH_IRQ_FORCINT*)0xF010F128u)


#define GTM_ATOM4_CH2_IRQ_MODE (*(volatile Ifx_GTM_ATOM_CH_IRQ_MODE*)0xF010F12Cu)


#define GTM_ATOM4_CH2_IRQ_NOTIFY (*(volatile Ifx_GTM_ATOM_CH_IRQ_NOTIFY*)0xF010F120u)


#define GTM_ATOM4_CH2_RDADDR (*(volatile Ifx_GTM_ATOM_CH_RDADDR*)0xF010F100u)


#define GTM_ATOM4_CH2_SOMC (*(volatile Ifx_GTM_ATOM_CH_SOMC*)0xF010F104u)




#define GTM_ATOM4_CH2_CTRL_SOMC (GTM_ATOM4_CH2_SOMC)


#define GTM_ATOM4_CH2_SOMI (*(volatile Ifx_GTM_ATOM_CH_SOMI*)0xF010F104u)




#define GTM_ATOM4_CH2_CTRL_SOMI (GTM_ATOM4_CH2_SOMI)


#define GTM_ATOM4_CH2_SOMP (*(volatile Ifx_GTM_ATOM_CH_SOMP*)0xF010F104u)




#define GTM_ATOM4_CH2_CTRL_SOMP (GTM_ATOM4_CH2_SOMP)


#define GTM_ATOM4_CH2_SOMS (*(volatile Ifx_GTM_ATOM_CH_SOMS*)0xF010F104u)




#define GTM_ATOM4_CH2_CTRL_SOMS (GTM_ATOM4_CH2_SOMS)


#define GTM_ATOM4_CH2_SR0 (*(volatile Ifx_GTM_ATOM_CH_SR0*)0xF010F108u)


#define GTM_ATOM4_CH2_SR1 (*(volatile Ifx_GTM_ATOM_CH_SR1*)0xF010F10Cu)


#define GTM_ATOM4_CH2_STAT (*(volatile Ifx_GTM_ATOM_CH_STAT*)0xF010F11Cu)


#define GTM_ATOM4_CH3_CM0 (*(volatile Ifx_GTM_ATOM_CH_CM0*)0xF010F190u)


#define GTM_ATOM4_CH3_CM1 (*(volatile Ifx_GTM_ATOM_CH_CM1*)0xF010F194u)


#define GTM_ATOM4_CH3_CN0 (*(volatile Ifx_GTM_ATOM_CH_CN0*)0xF010F198u)


#define GTM_ATOM4_CH3_CTRL (*(volatile Ifx_GTM_ATOM_CH_CTRL*)0xF010F184u)


#define GTM_ATOM4_CH3_IRQ_EN (*(volatile Ifx_GTM_ATOM_CH_IRQ_EN*)0xF010F1A4u)


#define GTM_ATOM4_CH3_IRQ_FORCINT (*(volatile Ifx_GTM_ATOM_CH_IRQ_FORCINT*)0xF010F1A8u)


#define GTM_ATOM4_CH3_IRQ_MODE (*(volatile Ifx_GTM_ATOM_CH_IRQ_MODE*)0xF010F1ACu)


#define GTM_ATOM4_CH3_IRQ_NOTIFY (*(volatile Ifx_GTM_ATOM_CH_IRQ_NOTIFY*)0xF010F1A0u)


#define GTM_ATOM4_CH3_RDADDR (*(volatile Ifx_GTM_ATOM_CH_RDADDR*)0xF010F180u)


#define GTM_ATOM4_CH3_SOMC (*(volatile Ifx_GTM_ATOM_CH_SOMC*)0xF010F184u)




#define GTM_ATOM4_CH3_CTRL_SOMC (GTM_ATOM4_CH3_SOMC)


#define GTM_ATOM4_CH3_SOMI (*(volatile Ifx_GTM_ATOM_CH_SOMI*)0xF010F184u)




#define GTM_ATOM4_CH3_CTRL_SOMI (GTM_ATOM4_CH3_SOMI)


#define GTM_ATOM4_CH3_SOMP (*(volatile Ifx_GTM_ATOM_CH_SOMP*)0xF010F184u)




#define GTM_ATOM4_CH3_CTRL_SOMP (GTM_ATOM4_CH3_SOMP)


#define GTM_ATOM4_CH3_SOMS (*(volatile Ifx_GTM_ATOM_CH_SOMS*)0xF010F184u)




#define GTM_ATOM4_CH3_CTRL_SOMS (GTM_ATOM4_CH3_SOMS)


#define GTM_ATOM4_CH3_SR0 (*(volatile Ifx_GTM_ATOM_CH_SR0*)0xF010F188u)


#define GTM_ATOM4_CH3_SR1 (*(volatile Ifx_GTM_ATOM_CH_SR1*)0xF010F18Cu)


#define GTM_ATOM4_CH3_STAT (*(volatile Ifx_GTM_ATOM_CH_STAT*)0xF010F19Cu)


#define GTM_ATOM4_CH4_CM0 (*(volatile Ifx_GTM_ATOM_CH_CM0*)0xF010F210u)


#define GTM_ATOM4_CH4_CM1 (*(volatile Ifx_GTM_ATOM_CH_CM1*)0xF010F214u)


#define GTM_ATOM4_CH4_CN0 (*(volatile Ifx_GTM_ATOM_CH_CN0*)0xF010F218u)


#define GTM_ATOM4_CH4_CTRL (*(volatile Ifx_GTM_ATOM_CH_CTRL*)0xF010F204u)


#define GTM_ATOM4_CH4_IRQ_EN (*(volatile Ifx_GTM_ATOM_CH_IRQ_EN*)0xF010F224u)


#define GTM_ATOM4_CH4_IRQ_FORCINT (*(volatile Ifx_GTM_ATOM_CH_IRQ_FORCINT*)0xF010F228u)


#define GTM_ATOM4_CH4_IRQ_MODE (*(volatile Ifx_GTM_ATOM_CH_IRQ_MODE*)0xF010F22Cu)


#define GTM_ATOM4_CH4_IRQ_NOTIFY (*(volatile Ifx_GTM_ATOM_CH_IRQ_NOTIFY*)0xF010F220u)


#define GTM_ATOM4_CH4_RDADDR (*(volatile Ifx_GTM_ATOM_CH_RDADDR*)0xF010F200u)


#define GTM_ATOM4_CH4_SOMC (*(volatile Ifx_GTM_ATOM_CH_SOMC*)0xF010F204u)




#define GTM_ATOM4_CH4_CTRL_SOMC (GTM_ATOM4_CH4_SOMC)


#define GTM_ATOM4_CH4_SOMI (*(volatile Ifx_GTM_ATOM_CH_SOMI*)0xF010F204u)




#define GTM_ATOM4_CH4_CTRL_SOMI (GTM_ATOM4_CH4_SOMI)


#define GTM_ATOM4_CH4_SOMP (*(volatile Ifx_GTM_ATOM_CH_SOMP*)0xF010F204u)




#define GTM_ATOM4_CH4_CTRL_SOMP (GTM_ATOM4_CH4_SOMP)


#define GTM_ATOM4_CH4_SOMS (*(volatile Ifx_GTM_ATOM_CH_SOMS*)0xF010F204u)




#define GTM_ATOM4_CH4_CTRL_SOMS (GTM_ATOM4_CH4_SOMS)


#define GTM_ATOM4_CH4_SR0 (*(volatile Ifx_GTM_ATOM_CH_SR0*)0xF010F208u)


#define GTM_ATOM4_CH4_SR1 (*(volatile Ifx_GTM_ATOM_CH_SR1*)0xF010F20Cu)


#define GTM_ATOM4_CH4_STAT (*(volatile Ifx_GTM_ATOM_CH_STAT*)0xF010F21Cu)


#define GTM_ATOM4_CH5_CM0 (*(volatile Ifx_GTM_ATOM_CH_CM0*)0xF010F290u)


#define GTM_ATOM4_CH5_CM1 (*(volatile Ifx_GTM_ATOM_CH_CM1*)0xF010F294u)


#define GTM_ATOM4_CH5_CN0 (*(volatile Ifx_GTM_ATOM_CH_CN0*)0xF010F298u)


#define GTM_ATOM4_CH5_CTRL (*(volatile Ifx_GTM_ATOM_CH_CTRL*)0xF010F284u)


#define GTM_ATOM4_CH5_IRQ_EN (*(volatile Ifx_GTM_ATOM_CH_IRQ_EN*)0xF010F2A4u)


#define GTM_ATOM4_CH5_IRQ_FORCINT (*(volatile Ifx_GTM_ATOM_CH_IRQ_FORCINT*)0xF010F2A8u)


#define GTM_ATOM4_CH5_IRQ_MODE (*(volatile Ifx_GTM_ATOM_CH_IRQ_MODE*)0xF010F2ACu)


#define GTM_ATOM4_CH5_IRQ_NOTIFY (*(volatile Ifx_GTM_ATOM_CH_IRQ_NOTIFY*)0xF010F2A0u)


#define GTM_ATOM4_CH5_RDADDR (*(volatile Ifx_GTM_ATOM_CH_RDADDR*)0xF010F280u)


#define GTM_ATOM4_CH5_SOMC (*(volatile Ifx_GTM_ATOM_CH_SOMC*)0xF010F284u)




#define GTM_ATOM4_CH5_CTRL_SOMC (GTM_ATOM4_CH5_SOMC)


#define GTM_ATOM4_CH5_SOMI (*(volatile Ifx_GTM_ATOM_CH_SOMI*)0xF010F284u)




#define GTM_ATOM4_CH5_CTRL_SOMI (GTM_ATOM4_CH5_SOMI)


#define GTM_ATOM4_CH5_SOMP (*(volatile Ifx_GTM_ATOM_CH_SOMP*)0xF010F284u)




#define GTM_ATOM4_CH5_CTRL_SOMP (GTM_ATOM4_CH5_SOMP)


#define GTM_ATOM4_CH5_SOMS (*(volatile Ifx_GTM_ATOM_CH_SOMS*)0xF010F284u)




#define GTM_ATOM4_CH5_CTRL_SOMS (GTM_ATOM4_CH5_SOMS)


#define GTM_ATOM4_CH5_SR0 (*(volatile Ifx_GTM_ATOM_CH_SR0*)0xF010F288u)


#define GTM_ATOM4_CH5_SR1 (*(volatile Ifx_GTM_ATOM_CH_SR1*)0xF010F28Cu)


#define GTM_ATOM4_CH5_STAT (*(volatile Ifx_GTM_ATOM_CH_STAT*)0xF010F29Cu)


#define GTM_ATOM4_CH6_CM0 (*(volatile Ifx_GTM_ATOM_CH_CM0*)0xF010F310u)


#define GTM_ATOM4_CH6_CM1 (*(volatile Ifx_GTM_ATOM_CH_CM1*)0xF010F314u)


#define GTM_ATOM4_CH6_CN0 (*(volatile Ifx_GTM_ATOM_CH_CN0*)0xF010F318u)


#define GTM_ATOM4_CH6_CTRL (*(volatile Ifx_GTM_ATOM_CH_CTRL*)0xF010F304u)


#define GTM_ATOM4_CH6_IRQ_EN (*(volatile Ifx_GTM_ATOM_CH_IRQ_EN*)0xF010F324u)


#define GTM_ATOM4_CH6_IRQ_FORCINT (*(volatile Ifx_GTM_ATOM_CH_IRQ_FORCINT*)0xF010F328u)


#define GTM_ATOM4_CH6_IRQ_MODE (*(volatile Ifx_GTM_ATOM_CH_IRQ_MODE*)0xF010F32Cu)


#define GTM_ATOM4_CH6_IRQ_NOTIFY (*(volatile Ifx_GTM_ATOM_CH_IRQ_NOTIFY*)0xF010F320u)


#define GTM_ATOM4_CH6_RDADDR (*(volatile Ifx_GTM_ATOM_CH_RDADDR*)0xF010F300u)


#define GTM_ATOM4_CH6_SOMC (*(volatile Ifx_GTM_ATOM_CH_SOMC*)0xF010F304u)




#define GTM_ATOM4_CH6_CTRL_SOMC (GTM_ATOM4_CH6_SOMC)


#define GTM_ATOM4_CH6_SOMI (*(volatile Ifx_GTM_ATOM_CH_SOMI*)0xF010F304u)




#define GTM_ATOM4_CH6_CTRL_SOMI (GTM_ATOM4_CH6_SOMI)


#define GTM_ATOM4_CH6_SOMP (*(volatile Ifx_GTM_ATOM_CH_SOMP*)0xF010F304u)




#define GTM_ATOM4_CH6_CTRL_SOMP (GTM_ATOM4_CH6_SOMP)


#define GTM_ATOM4_CH6_SOMS (*(volatile Ifx_GTM_ATOM_CH_SOMS*)0xF010F304u)




#define GTM_ATOM4_CH6_CTRL_SOMS (GTM_ATOM4_CH6_SOMS)


#define GTM_ATOM4_CH6_SR0 (*(volatile Ifx_GTM_ATOM_CH_SR0*)0xF010F308u)


#define GTM_ATOM4_CH6_SR1 (*(volatile Ifx_GTM_ATOM_CH_SR1*)0xF010F30Cu)


#define GTM_ATOM4_CH6_STAT (*(volatile Ifx_GTM_ATOM_CH_STAT*)0xF010F31Cu)


#define GTM_ATOM4_CH7_CM0 (*(volatile Ifx_GTM_ATOM_CH_CM0*)0xF010F390u)


#define GTM_ATOM4_CH7_CM1 (*(volatile Ifx_GTM_ATOM_CH_CM1*)0xF010F394u)


#define GTM_ATOM4_CH7_CN0 (*(volatile Ifx_GTM_ATOM_CH_CN0*)0xF010F398u)


#define GTM_ATOM4_CH7_CTRL (*(volatile Ifx_GTM_ATOM_CH_CTRL*)0xF010F384u)


#define GTM_ATOM4_CH7_IRQ_EN (*(volatile Ifx_GTM_ATOM_CH_IRQ_EN*)0xF010F3A4u)


#define GTM_ATOM4_CH7_IRQ_FORCINT (*(volatile Ifx_GTM_ATOM_CH_IRQ_FORCINT*)0xF010F3A8u)


#define GTM_ATOM4_CH7_IRQ_MODE (*(volatile Ifx_GTM_ATOM_CH_IRQ_MODE*)0xF010F3ACu)


#define GTM_ATOM4_CH7_IRQ_NOTIFY (*(volatile Ifx_GTM_ATOM_CH_IRQ_NOTIFY*)0xF010F3A0u)


#define GTM_ATOM4_CH7_RDADDR (*(volatile Ifx_GTM_ATOM_CH_RDADDR*)0xF010F380u)


#define GTM_ATOM4_CH7_SOMC (*(volatile Ifx_GTM_ATOM_CH_SOMC*)0xF010F384u)




#define GTM_ATOM4_CH7_CTRL_SOMC (GTM_ATOM4_CH7_SOMC)


#define GTM_ATOM4_CH7_SOMI (*(volatile Ifx_GTM_ATOM_CH_SOMI*)0xF010F384u)




#define GTM_ATOM4_CH7_CTRL_SOMI (GTM_ATOM4_CH7_SOMI)


#define GTM_ATOM4_CH7_SOMP (*(volatile Ifx_GTM_ATOM_CH_SOMP*)0xF010F384u)




#define GTM_ATOM4_CH7_CTRL_SOMP (GTM_ATOM4_CH7_SOMP)


#define GTM_ATOM4_CH7_SOMS (*(volatile Ifx_GTM_ATOM_CH_SOMS*)0xF010F384u)




#define GTM_ATOM4_CH7_CTRL_SOMS (GTM_ATOM4_CH7_SOMS)


#define GTM_ATOM4_CH7_SR0 (*(volatile Ifx_GTM_ATOM_CH_SR0*)0xF010F388u)


#define GTM_ATOM4_CH7_SR1 (*(volatile Ifx_GTM_ATOM_CH_SR1*)0xF010F38Cu)


#define GTM_ATOM4_CH7_STAT (*(volatile Ifx_GTM_ATOM_CH_STAT*)0xF010F39Cu)


#define GTM_BRC_EIRQ_EN (*(volatile Ifx_GTM_BRC_EIRQ_EN*)0xF0100474u)


#define GTM_BRC_IRQ_EN (*(volatile Ifx_GTM_BRC_IRQ_EN*)0xF0100464u)


#define GTM_BRC_IRQ_FORCINT (*(volatile Ifx_GTM_BRC_IRQ_FORCINT*)0xF0100468u)


#define GTM_BRC_IRQ_MODE (*(volatile Ifx_GTM_BRC_IRQ_MODE*)0xF010046Cu)


#define GTM_BRC_IRQ_NOTIFY (*(volatile Ifx_GTM_BRC_IRQ_NOTIFY*)0xF0100460u)


#define GTM_BRC_RST (*(volatile Ifx_GTM_BRC_RST*)0xF0100470u)


#define GTM_BRC_SRC0_ADDR (*(volatile Ifx_GTM_BRC_SRC0_ADDR*)0xF0100400u)


#define GTM_BRC_SRC0_DEST (*(volatile Ifx_GTM_BRC_SRC0_DEST*)0xF0100404u)


#define GTM_BRC_SRC10_ADDR (*(volatile Ifx_GTM_BRC_SRC10_ADDR*)0xF0100450u)


#define GTM_BRC_SRC10_DEST (*(volatile Ifx_GTM_BRC_SRC10_DEST*)0xF0100454u)


#define GTM_BRC_SRC11_ADDR (*(volatile Ifx_GTM_BRC_SRC11_ADDR*)0xF0100458u)


#define GTM_BRC_SRC11_DEST (*(volatile Ifx_GTM_BRC_SRC11_DEST*)0xF010045Cu)


#define GTM_BRC_SRC1_ADDR (*(volatile Ifx_GTM_BRC_SRC1_ADDR*)0xF0100408u)


#define GTM_BRC_SRC1_DEST (*(volatile Ifx_GTM_BRC_SRC1_DEST*)0xF010040Cu)


#define GTM_BRC_SRC2_ADDR (*(volatile Ifx_GTM_BRC_SRC2_ADDR*)0xF0100410u)


#define GTM_BRC_SRC2_DEST (*(volatile Ifx_GTM_BRC_SRC2_DEST*)0xF0100414u)


#define GTM_BRC_SRC3_ADDR (*(volatile Ifx_GTM_BRC_SRC3_ADDR*)0xF0100418u)


#define GTM_BRC_SRC3_DEST (*(volatile Ifx_GTM_BRC_SRC3_DEST*)0xF010041Cu)


#define GTM_BRC_SRC4_ADDR (*(volatile Ifx_GTM_BRC_SRC4_ADDR*)0xF0100420u)


#define GTM_BRC_SRC4_DEST (*(volatile Ifx_GTM_BRC_SRC4_DEST*)0xF0100424u)


#define GTM_BRC_SRC5_ADDR (*(volatile Ifx_GTM_BRC_SRC5_ADDR*)0xF0100428u)


#define GTM_BRC_SRC5_DEST (*(volatile Ifx_GTM_BRC_SRC5_DEST*)0xF010042Cu)


#define GTM_BRC_SRC6_ADDR (*(volatile Ifx_GTM_BRC_SRC6_ADDR*)0xF0100430u)


#define GTM_BRC_SRC6_DEST (*(volatile Ifx_GTM_BRC_SRC6_DEST*)0xF0100434u)


#define GTM_BRC_SRC7_ADDR (*(volatile Ifx_GTM_BRC_SRC7_ADDR*)0xF0100438u)


#define GTM_BRC_SRC7_DEST (*(volatile Ifx_GTM_BRC_SRC7_DEST*)0xF010043Cu)


#define GTM_BRC_SRC8_ADDR (*(volatile Ifx_GTM_BRC_SRC8_ADDR*)0xF0100440u)


#define GTM_BRC_SRC8_DEST (*(volatile Ifx_GTM_BRC_SRC8_DEST*)0xF0100444u)


#define GTM_BRC_SRC9_ADDR (*(volatile Ifx_GTM_BRC_SRC9_ADDR*)0xF0100448u)


#define GTM_BRC_SRC9_DEST (*(volatile Ifx_GTM_BRC_SRC9_DEST*)0xF010044Cu)


#define GTM_BRIDGE_MODE (*(volatile Ifx_GTM_BRIDGE_MODE*)0xF0100030u)


#define GTM_BRIDGE_PTR1 (*(volatile Ifx_GTM_BRIDGE_PTR1*)0xF0100034u)


#define GTM_BRIDGE_PTR2 (*(volatile Ifx_GTM_BRIDGE_PTR2*)0xF0100038u)


#define GTM_CLC (*(volatile Ifx_GTM_CLC*)0xF019FD00u)


#define GTM_CMP_EIRQ_EN (*(volatile Ifx_GTM_CMP_EIRQ_EN*)0xF0100214u)


#define GTM_CMP_EN (*(volatile Ifx_GTM_CMP_EN*)0xF0100200u)


#define GTM_CMP_IRQ_EN (*(volatile Ifx_GTM_CMP_IRQ_EN*)0xF0100208u)


#define GTM_CMP_IRQ_FORCINT (*(volatile Ifx_GTM_CMP_IRQ_FORCINT*)0xF010020Cu)


#define GTM_CMP_IRQ_MODE (*(volatile Ifx_GTM_CMP_IRQ_MODE*)0xF0100210u)


#define GTM_CMP_IRQ_NOTIFY (*(volatile Ifx_GTM_CMP_IRQ_NOTIFY*)0xF0100204u)


#define GTM_CMU_CLK0_50_CTRL (*(volatile Ifx_GTM_CMU_CLK0_5_CTRL*)0xF010030Cu)




#define GTM_CMU_CLK_0_CTRL (GTM_CMU_CLK0_50_CTRL)


#define GTM_CMU_CLK0_51_CTRL (*(volatile Ifx_GTM_CMU_CLK0_5_CTRL*)0xF0100310u)




#define GTM_CMU_CLK_1_CTRL (GTM_CMU_CLK0_51_CTRL)


#define GTM_CMU_CLK0_52_CTRL (*(volatile Ifx_GTM_CMU_CLK0_5_CTRL*)0xF0100314u)




#define GTM_CMU_CLK_2_CTRL (GTM_CMU_CLK0_52_CTRL)


#define GTM_CMU_CLK0_53_CTRL (*(volatile Ifx_GTM_CMU_CLK0_5_CTRL*)0xF0100318u)




#define GTM_CMU_CLK_3_CTRL (GTM_CMU_CLK0_53_CTRL)


#define GTM_CMU_CLK0_54_CTRL (*(volatile Ifx_GTM_CMU_CLK0_5_CTRL*)0xF010031Cu)




#define GTM_CMU_CLK_4_CTRL (GTM_CMU_CLK0_54_CTRL)


#define GTM_CMU_CLK0_55_CTRL (*(volatile Ifx_GTM_CMU_CLK0_5_CTRL*)0xF0100320u)




#define GTM_CMU_CLK_5_CTRL (GTM_CMU_CLK0_55_CTRL)


#define GTM_CMU_CLK_6_CTRL (*(volatile Ifx_GTM_CMU_CLK_6_CTRL*)0xF0100324u)


#define GTM_CMU_CLK_7_CTRL (*(volatile Ifx_GTM_CMU_CLK_7_CTRL*)0xF0100328u)


#define GTM_CMU_CLK_EN (*(volatile Ifx_GTM_CMU_CLK_EN*)0xF0100300u)


#define GTM_CMU_ECLK0_DEN (*(volatile Ifx_GTM_CMU_ECLK_DEN*)0xF0100330u)




#define GTM_CMU_ECLK_0_DEN (GTM_CMU_ECLK0_DEN)


#define GTM_CMU_ECLK0_NUM (*(volatile Ifx_GTM_CMU_ECLK_NUM*)0xF010032Cu)




#define GTM_CMU_ECLK_0_NUM (GTM_CMU_ECLK0_NUM)


#define GTM_CMU_ECLK1_DEN (*(volatile Ifx_GTM_CMU_ECLK_DEN*)0xF0100338u)




#define GTM_CMU_ECLK_1_DEN (GTM_CMU_ECLK1_DEN)


#define GTM_CMU_ECLK1_NUM (*(volatile Ifx_GTM_CMU_ECLK_NUM*)0xF0100334u)




#define GTM_CMU_ECLK_1_NUM (GTM_CMU_ECLK1_NUM)


#define GTM_CMU_ECLK2_DEN (*(volatile Ifx_GTM_CMU_ECLK_DEN*)0xF0100340u)




#define GTM_CMU_ECLK_2_DEN (GTM_CMU_ECLK2_DEN)


#define GTM_CMU_ECLK2_NUM (*(volatile Ifx_GTM_CMU_ECLK_NUM*)0xF010033Cu)




#define GTM_CMU_ECLK_2_NUM (GTM_CMU_ECLK2_NUM)


#define GTM_CMU_FXCLK_CTRL (*(volatile Ifx_GTM_CMU_FXCLK_CTRL*)0xF0100344u)


#define GTM_CMU_GCLK_DEN (*(volatile Ifx_GTM_CMU_GCLK_DEN*)0xF0100308u)


#define GTM_CMU_GCLK_NUM (*(volatile Ifx_GTM_CMU_GCLK_NUM*)0xF0100304u)


#define GTM_CTRL (*(volatile Ifx_GTM_CTRL*)0xF0100008u)


#define GTM_DATAIN00 (*(volatile Ifx_GTM_DATAIN*)0xF019FE94u)


#define GTM_DATAIN01 (*(volatile Ifx_GTM_DATAIN*)0xF019FE98u)


#define GTM_DATAIN02 (*(volatile Ifx_GTM_DATAIN*)0xF019FE9Cu)


#define GTM_DATAIN03 (*(volatile Ifx_GTM_DATAIN*)0xF019FEA0u)


#define GTM_DATAIN10 (*(volatile Ifx_GTM_DATAIN*)0xF019FED4u)


#define GTM_DATAIN11 (*(volatile Ifx_GTM_DATAIN*)0xF019FED8u)


#define GTM_DATAIN12 (*(volatile Ifx_GTM_DATAIN*)0xF019FEDCu)


#define GTM_DATAIN13 (*(volatile Ifx_GTM_DATAIN*)0xF019FEE0u)


#define GTM_DPLL_ACB0 (*(volatile Ifx_GTM_DPLL_ACB*)0xF0128F00u)


#define GTM_DPLL_ACB1 (*(volatile Ifx_GTM_DPLL_ACB*)0xF0128F04u)


#define GTM_DPLL_ACB2 (*(volatile Ifx_GTM_DPLL_ACB*)0xF0128F08u)


#define GTM_DPLL_ACB3 (*(volatile Ifx_GTM_DPLL_ACB*)0xF0128F0Cu)


#define GTM_DPLL_ACB4 (*(volatile Ifx_GTM_DPLL_ACB*)0xF0128F10u)


#define GTM_DPLL_ACB5 (*(volatile Ifx_GTM_DPLL_ACB*)0xF0128F14u)


#define GTM_DPLL_ACT_STA (*(volatile Ifx_GTM_DPLL_ACT_STA*)0xF0128018u)


#define GTM_DPLL_ADD_IN_CAL1 (*(volatile Ifx_GTM_DPLL_ADD_IN_CAL1*)0xF0128438u)


#define GTM_DPLL_ADD_IN_CAL2 (*(volatile Ifx_GTM_DPLL_ADD_IN_CAL2*)0xF012843Cu)


#define GTM_DPLL_ADD_IN_LD1 (*(volatile Ifx_GTM_DPLL_ADD_IN_LD1*)0xF01280C8u)


#define GTM_DPLL_ADD_IN_LD2 (*(volatile Ifx_GTM_DPLL_ADD_IN_LD2*)0xF01280CCu)


#define GTM_DPLL_ADT_S0 (*(volatile Ifx_GTM_DPLL_ADT_S*)0xF0128800u)


#define GTM_DPLL_ADT_S1 (*(volatile Ifx_GTM_DPLL_ADT_S*)0xF0128804u)


#define GTM_DPLL_ADT_S10 (*(volatile Ifx_GTM_DPLL_ADT_S*)0xF0128828u)


#define GTM_DPLL_ADT_S11 (*(volatile Ifx_GTM_DPLL_ADT_S*)0xF012882Cu)


#define GTM_DPLL_ADT_S12 (*(volatile Ifx_GTM_DPLL_ADT_S*)0xF0128830u)


#define GTM_DPLL_ADT_S13 (*(volatile Ifx_GTM_DPLL_ADT_S*)0xF0128834u)


#define GTM_DPLL_ADT_S14 (*(volatile Ifx_GTM_DPLL_ADT_S*)0xF0128838u)


#define GTM_DPLL_ADT_S15 (*(volatile Ifx_GTM_DPLL_ADT_S*)0xF012883Cu)


#define GTM_DPLL_ADT_S16 (*(volatile Ifx_GTM_DPLL_ADT_S*)0xF0128840u)


#define GTM_DPLL_ADT_S17 (*(volatile Ifx_GTM_DPLL_ADT_S*)0xF0128844u)


#define GTM_DPLL_ADT_S18 (*(volatile Ifx_GTM_DPLL_ADT_S*)0xF0128848u)


#define GTM_DPLL_ADT_S19 (*(volatile Ifx_GTM_DPLL_ADT_S*)0xF012884Cu)


#define GTM_DPLL_ADT_S2 (*(volatile Ifx_GTM_DPLL_ADT_S*)0xF0128808u)


#define GTM_DPLL_ADT_S20 (*(volatile Ifx_GTM_DPLL_ADT_S*)0xF0128850u)


#define GTM_DPLL_ADT_S21 (*(volatile Ifx_GTM_DPLL_ADT_S*)0xF0128854u)


#define GTM_DPLL_ADT_S22 (*(volatile Ifx_GTM_DPLL_ADT_S*)0xF0128858u)


#define GTM_DPLL_ADT_S23 (*(volatile Ifx_GTM_DPLL_ADT_S*)0xF012885Cu)


#define GTM_DPLL_ADT_S24 (*(volatile Ifx_GTM_DPLL_ADT_S*)0xF0128860u)


#define GTM_DPLL_ADT_S25 (*(volatile Ifx_GTM_DPLL_ADT_S*)0xF0128864u)


#define GTM_DPLL_ADT_S26 (*(volatile Ifx_GTM_DPLL_ADT_S*)0xF0128868u)


#define GTM_DPLL_ADT_S27 (*(volatile Ifx_GTM_DPLL_ADT_S*)0xF012886Cu)


#define GTM_DPLL_ADT_S28 (*(volatile Ifx_GTM_DPLL_ADT_S*)0xF0128870u)


#define GTM_DPLL_ADT_S29 (*(volatile Ifx_GTM_DPLL_ADT_S*)0xF0128874u)


#define GTM_DPLL_ADT_S3 (*(volatile Ifx_GTM_DPLL_ADT_S*)0xF012880Cu)


#define GTM_DPLL_ADT_S30 (*(volatile Ifx_GTM_DPLL_ADT_S*)0xF0128878u)


#define GTM_DPLL_ADT_S31 (*(volatile Ifx_GTM_DPLL_ADT_S*)0xF012887Cu)


#define GTM_DPLL_ADT_S32 (*(volatile Ifx_GTM_DPLL_ADT_S*)0xF0128880u)


#define GTM_DPLL_ADT_S33 (*(volatile Ifx_GTM_DPLL_ADT_S*)0xF0128884u)


#define GTM_DPLL_ADT_S34 (*(volatile Ifx_GTM_DPLL_ADT_S*)0xF0128888u)


#define GTM_DPLL_ADT_S35 (*(volatile Ifx_GTM_DPLL_ADT_S*)0xF012888Cu)


#define GTM_DPLL_ADT_S36 (*(volatile Ifx_GTM_DPLL_ADT_S*)0xF0128890u)


#define GTM_DPLL_ADT_S37 (*(volatile Ifx_GTM_DPLL_ADT_S*)0xF0128894u)


#define GTM_DPLL_ADT_S38 (*(volatile Ifx_GTM_DPLL_ADT_S*)0xF0128898u)


#define GTM_DPLL_ADT_S39 (*(volatile Ifx_GTM_DPLL_ADT_S*)0xF012889Cu)


#define GTM_DPLL_ADT_S4 (*(volatile Ifx_GTM_DPLL_ADT_S*)0xF0128810u)


#define GTM_DPLL_ADT_S40 (*(volatile Ifx_GTM_DPLL_ADT_S*)0xF01288A0u)


#define GTM_DPLL_ADT_S41 (*(volatile Ifx_GTM_DPLL_ADT_S*)0xF01288A4u)


#define GTM_DPLL_ADT_S42 (*(volatile Ifx_GTM_DPLL_ADT_S*)0xF01288A8u)


#define GTM_DPLL_ADT_S43 (*(volatile Ifx_GTM_DPLL_ADT_S*)0xF01288ACu)


#define GTM_DPLL_ADT_S44 (*(volatile Ifx_GTM_DPLL_ADT_S*)0xF01288B0u)


#define GTM_DPLL_ADT_S45 (*(volatile Ifx_GTM_DPLL_ADT_S*)0xF01288B4u)


#define GTM_DPLL_ADT_S46 (*(volatile Ifx_GTM_DPLL_ADT_S*)0xF01288B8u)


#define GTM_DPLL_ADT_S47 (*(volatile Ifx_GTM_DPLL_ADT_S*)0xF01288BCu)


#define GTM_DPLL_ADT_S48 (*(volatile Ifx_GTM_DPLL_ADT_S*)0xF01288C0u)


#define GTM_DPLL_ADT_S49 (*(volatile Ifx_GTM_DPLL_ADT_S*)0xF01288C4u)


#define GTM_DPLL_ADT_S5 (*(volatile Ifx_GTM_DPLL_ADT_S*)0xF0128814u)


#define GTM_DPLL_ADT_S50 (*(volatile Ifx_GTM_DPLL_ADT_S*)0xF01288C8u)


#define GTM_DPLL_ADT_S51 (*(volatile Ifx_GTM_DPLL_ADT_S*)0xF01288CCu)


#define GTM_DPLL_ADT_S52 (*(volatile Ifx_GTM_DPLL_ADT_S*)0xF01288D0u)


#define GTM_DPLL_ADT_S53 (*(volatile Ifx_GTM_DPLL_ADT_S*)0xF01288D4u)


#define GTM_DPLL_ADT_S54 (*(volatile Ifx_GTM_DPLL_ADT_S*)0xF01288D8u)


#define GTM_DPLL_ADT_S55 (*(volatile Ifx_GTM_DPLL_ADT_S*)0xF01288DCu)


#define GTM_DPLL_ADT_S56 (*(volatile Ifx_GTM_DPLL_ADT_S*)0xF01288E0u)


#define GTM_DPLL_ADT_S57 (*(volatile Ifx_GTM_DPLL_ADT_S*)0xF01288E4u)


#define GTM_DPLL_ADT_S58 (*(volatile Ifx_GTM_DPLL_ADT_S*)0xF01288E8u)


#define GTM_DPLL_ADT_S59 (*(volatile Ifx_GTM_DPLL_ADT_S*)0xF01288ECu)


#define GTM_DPLL_ADT_S6 (*(volatile Ifx_GTM_DPLL_ADT_S*)0xF0128818u)


#define GTM_DPLL_ADT_S60 (*(volatile Ifx_GTM_DPLL_ADT_S*)0xF01288F0u)


#define GTM_DPLL_ADT_S61 (*(volatile Ifx_GTM_DPLL_ADT_S*)0xF01288F4u)


#define GTM_DPLL_ADT_S62 (*(volatile Ifx_GTM_DPLL_ADT_S*)0xF01288F8u)


#define GTM_DPLL_ADT_S63 (*(volatile Ifx_GTM_DPLL_ADT_S*)0xF01288FCu)


#define GTM_DPLL_ADT_S7 (*(volatile Ifx_GTM_DPLL_ADT_S*)0xF012881Cu)


#define GTM_DPLL_ADT_S8 (*(volatile Ifx_GTM_DPLL_ADT_S*)0xF0128820u)


#define GTM_DPLL_ADT_S9 (*(volatile Ifx_GTM_DPLL_ADT_S*)0xF0128824u)


#define GTM_DPLL_AOSV_2 (*(volatile Ifx_GTM_DPLL_AOSV_2*)0xF0128020u)


#define GTM_DPLL_APS (*(volatile Ifx_GTM_DPLL_APS*)0xF0128028u)


#define GTM_DPLL_APS_1C3 (*(volatile Ifx_GTM_DPLL_APS_1C3*)0xF0128030u)


#define GTM_DPLL_APS_SYNC (*(volatile Ifx_GTM_DPLL_APS_SYNC*)0xF01280BCu)


#define GTM_DPLL_APT (*(volatile Ifx_GTM_DPLL_APT*)0xF0128024u)


#define GTM_DPLL_APT_2C (*(volatile Ifx_GTM_DPLL_APT_2C*)0xF012802Cu)


#define GTM_DPLL_APT_SYNC (*(volatile Ifx_GTM_DPLL_APT_SYNC*)0xF01280B8u)


#define GTM_DPLL_CDT_SX (*(volatile Ifx_GTM_DPLL_CDT_SX*)0xF0128494u)


#define GTM_DPLL_CDT_SX_NOM (*(volatile Ifx_GTM_DPLL_CDT_SX_NOM*)0xF012849Cu)


#define GTM_DPLL_CDT_TX (*(volatile Ifx_GTM_DPLL_CDT_TX*)0xF0128490u)


#define GTM_DPLL_CDT_TX_NOM (*(volatile Ifx_GTM_DPLL_CDT_TX_NOM*)0xF0128498u)


#define GTM_DPLL_CNT_NUM1 (*(volatile Ifx_GTM_DPLL_CNT_NUM1*)0xF01285C8u)


#define GTM_DPLL_CNT_NUM2 (*(volatile Ifx_GTM_DPLL_CNT_NUM2*)0xF01285CCu)


#define GTM_DPLL_CRTL_1_SHADOW_STATE (*(volatile Ifx_GTM_DPLL_CRTL_1_SHADOW_STATE*)0xF01281ECu)


#define GTM_DPLL_CTRL_0 (*(volatile Ifx_GTM_DPLL_CTRL_0*)0xF0128000u)


#define GTM_DPLL_CTRL_0_SHADOW_STATE (*(volatile Ifx_GTM_DPLL_CTRL_0_SHADOW_STATE*)0xF01281E4u)


#define GTM_DPLL_CTRL_0_SHADOW_TRIGGER (*(volatile Ifx_GTM_DPLL_CTRL_0_SHADOW_TRIGGER*)0xF01281E0u)


#define GTM_DPLL_CTRL_1 (*(volatile Ifx_GTM_DPLL_CTRL_1*)0xF0128004u)


#define GTM_DPLL_CTRL_1_SHADOW_TRIGGER (*(volatile Ifx_GTM_DPLL_CTRL_1_SHADOW_TRIGGER*)0xF01281E8u)


#define GTM_DPLL_CTRL_2 (*(volatile Ifx_GTM_DPLL_CTRL_2*)0xF0128008u)


#define GTM_DPLL_CTRL_3 (*(volatile Ifx_GTM_DPLL_CTRL_3*)0xF012800Cu)


#define GTM_DPLL_CTRL_4 (*(volatile Ifx_GTM_DPLL_CTRL_4*)0xF0128010u)


#define GTM_DPLL_DLA0 (*(volatile Ifx_GTM_DPLL_DLA*)0xF0128280u)


#define GTM_DPLL_DLA1 (*(volatile Ifx_GTM_DPLL_DLA*)0xF0128284u)


#define GTM_DPLL_DLA10 (*(volatile Ifx_GTM_DPLL_DLA*)0xF01282A8u)


#define GTM_DPLL_DLA11 (*(volatile Ifx_GTM_DPLL_DLA*)0xF01282ACu)


#define GTM_DPLL_DLA12 (*(volatile Ifx_GTM_DPLL_DLA*)0xF01282B0u)


#define GTM_DPLL_DLA13 (*(volatile Ifx_GTM_DPLL_DLA*)0xF01282B4u)


#define GTM_DPLL_DLA14 (*(volatile Ifx_GTM_DPLL_DLA*)0xF01282B8u)


#define GTM_DPLL_DLA15 (*(volatile Ifx_GTM_DPLL_DLA*)0xF01282BCu)


#define GTM_DPLL_DLA16 (*(volatile Ifx_GTM_DPLL_DLA*)0xF01282C0u)


#define GTM_DPLL_DLA17 (*(volatile Ifx_GTM_DPLL_DLA*)0xF01282C4u)


#define GTM_DPLL_DLA18 (*(volatile Ifx_GTM_DPLL_DLA*)0xF01282C8u)


#define GTM_DPLL_DLA19 (*(volatile Ifx_GTM_DPLL_DLA*)0xF01282CCu)


#define GTM_DPLL_DLA2 (*(volatile Ifx_GTM_DPLL_DLA*)0xF0128288u)


#define GTM_DPLL_DLA20 (*(volatile Ifx_GTM_DPLL_DLA*)0xF01282D0u)


#define GTM_DPLL_DLA21 (*(volatile Ifx_GTM_DPLL_DLA*)0xF01282D4u)


#define GTM_DPLL_DLA22 (*(volatile Ifx_GTM_DPLL_DLA*)0xF01282D8u)


#define GTM_DPLL_DLA23 (*(volatile Ifx_GTM_DPLL_DLA*)0xF01282DCu)


#define GTM_DPLL_DLA3 (*(volatile Ifx_GTM_DPLL_DLA*)0xF012828Cu)


#define GTM_DPLL_DLA4 (*(volatile Ifx_GTM_DPLL_DLA*)0xF0128290u)


#define GTM_DPLL_DLA5 (*(volatile Ifx_GTM_DPLL_DLA*)0xF0128294u)


#define GTM_DPLL_DLA6 (*(volatile Ifx_GTM_DPLL_DLA*)0xF0128298u)


#define GTM_DPLL_DLA7 (*(volatile Ifx_GTM_DPLL_DLA*)0xF012829Cu)


#define GTM_DPLL_DLA8 (*(volatile Ifx_GTM_DPLL_DLA*)0xF01282A0u)


#define GTM_DPLL_DLA9 (*(volatile Ifx_GTM_DPLL_DLA*)0xF01282A4u)


#define GTM_DPLL_DT_S0 (*(volatile Ifx_GTM_DPLL_DT_S*)0xF0128900u)


#define GTM_DPLL_DT_S1 (*(volatile Ifx_GTM_DPLL_DT_S*)0xF0128904u)


#define GTM_DPLL_DT_S10 (*(volatile Ifx_GTM_DPLL_DT_S*)0xF0128928u)


#define GTM_DPLL_DT_S11 (*(volatile Ifx_GTM_DPLL_DT_S*)0xF012892Cu)


#define GTM_DPLL_DT_S12 (*(volatile Ifx_GTM_DPLL_DT_S*)0xF0128930u)


#define GTM_DPLL_DT_S13 (*(volatile Ifx_GTM_DPLL_DT_S*)0xF0128934u)


#define GTM_DPLL_DT_S14 (*(volatile Ifx_GTM_DPLL_DT_S*)0xF0128938u)


#define GTM_DPLL_DT_S15 (*(volatile Ifx_GTM_DPLL_DT_S*)0xF012893Cu)


#define GTM_DPLL_DT_S16 (*(volatile Ifx_GTM_DPLL_DT_S*)0xF0128940u)


#define GTM_DPLL_DT_S17 (*(volatile Ifx_GTM_DPLL_DT_S*)0xF0128944u)


#define GTM_DPLL_DT_S18 (*(volatile Ifx_GTM_DPLL_DT_S*)0xF0128948u)


#define GTM_DPLL_DT_S19 (*(volatile Ifx_GTM_DPLL_DT_S*)0xF012894Cu)


#define GTM_DPLL_DT_S2 (*(volatile Ifx_GTM_DPLL_DT_S*)0xF0128908u)


#define GTM_DPLL_DT_S20 (*(volatile Ifx_GTM_DPLL_DT_S*)0xF0128950u)


#define GTM_DPLL_DT_S21 (*(volatile Ifx_GTM_DPLL_DT_S*)0xF0128954u)


#define GTM_DPLL_DT_S22 (*(volatile Ifx_GTM_DPLL_DT_S*)0xF0128958u)


#define GTM_DPLL_DT_S23 (*(volatile Ifx_GTM_DPLL_DT_S*)0xF012895Cu)


#define GTM_DPLL_DT_S24 (*(volatile Ifx_GTM_DPLL_DT_S*)0xF0128960u)


#define GTM_DPLL_DT_S25 (*(volatile Ifx_GTM_DPLL_DT_S*)0xF0128964u)


#define GTM_DPLL_DT_S26 (*(volatile Ifx_GTM_DPLL_DT_S*)0xF0128968u)


#define GTM_DPLL_DT_S27 (*(volatile Ifx_GTM_DPLL_DT_S*)0xF012896Cu)


#define GTM_DPLL_DT_S28 (*(volatile Ifx_GTM_DPLL_DT_S*)0xF0128970u)


#define GTM_DPLL_DT_S29 (*(volatile Ifx_GTM_DPLL_DT_S*)0xF0128974u)


#define GTM_DPLL_DT_S3 (*(volatile Ifx_GTM_DPLL_DT_S*)0xF012890Cu)


#define GTM_DPLL_DT_S30 (*(volatile Ifx_GTM_DPLL_DT_S*)0xF0128978u)


#define GTM_DPLL_DT_S31 (*(volatile Ifx_GTM_DPLL_DT_S*)0xF012897Cu)


#define GTM_DPLL_DT_S32 (*(volatile Ifx_GTM_DPLL_DT_S*)0xF0128980u)


#define GTM_DPLL_DT_S33 (*(volatile Ifx_GTM_DPLL_DT_S*)0xF0128984u)


#define GTM_DPLL_DT_S34 (*(volatile Ifx_GTM_DPLL_DT_S*)0xF0128988u)


#define GTM_DPLL_DT_S35 (*(volatile Ifx_GTM_DPLL_DT_S*)0xF012898Cu)


#define GTM_DPLL_DT_S36 (*(volatile Ifx_GTM_DPLL_DT_S*)0xF0128990u)


#define GTM_DPLL_DT_S37 (*(volatile Ifx_GTM_DPLL_DT_S*)0xF0128994u)


#define GTM_DPLL_DT_S38 (*(volatile Ifx_GTM_DPLL_DT_S*)0xF0128998u)


#define GTM_DPLL_DT_S39 (*(volatile Ifx_GTM_DPLL_DT_S*)0xF012899Cu)


#define GTM_DPLL_DT_S4 (*(volatile Ifx_GTM_DPLL_DT_S*)0xF0128910u)


#define GTM_DPLL_DT_S40 (*(volatile Ifx_GTM_DPLL_DT_S*)0xF01289A0u)


#define GTM_DPLL_DT_S41 (*(volatile Ifx_GTM_DPLL_DT_S*)0xF01289A4u)


#define GTM_DPLL_DT_S42 (*(volatile Ifx_GTM_DPLL_DT_S*)0xF01289A8u)


#define GTM_DPLL_DT_S43 (*(volatile Ifx_GTM_DPLL_DT_S*)0xF01289ACu)


#define GTM_DPLL_DT_S44 (*(volatile Ifx_GTM_DPLL_DT_S*)0xF01289B0u)


#define GTM_DPLL_DT_S45 (*(volatile Ifx_GTM_DPLL_DT_S*)0xF01289B4u)


#define GTM_DPLL_DT_S46 (*(volatile Ifx_GTM_DPLL_DT_S*)0xF01289B8u)


#define GTM_DPLL_DT_S47 (*(volatile Ifx_GTM_DPLL_DT_S*)0xF01289BCu)


#define GTM_DPLL_DT_S48 (*(volatile Ifx_GTM_DPLL_DT_S*)0xF01289C0u)


#define GTM_DPLL_DT_S49 (*(volatile Ifx_GTM_DPLL_DT_S*)0xF01289C4u)


#define GTM_DPLL_DT_S5 (*(volatile Ifx_GTM_DPLL_DT_S*)0xF0128914u)


#define GTM_DPLL_DT_S50 (*(volatile Ifx_GTM_DPLL_DT_S*)0xF01289C8u)


#define GTM_DPLL_DT_S51 (*(volatile Ifx_GTM_DPLL_DT_S*)0xF01289CCu)


#define GTM_DPLL_DT_S52 (*(volatile Ifx_GTM_DPLL_DT_S*)0xF01289D0u)


#define GTM_DPLL_DT_S53 (*(volatile Ifx_GTM_DPLL_DT_S*)0xF01289D4u)


#define GTM_DPLL_DT_S54 (*(volatile Ifx_GTM_DPLL_DT_S*)0xF01289D8u)


#define GTM_DPLL_DT_S55 (*(volatile Ifx_GTM_DPLL_DT_S*)0xF01289DCu)


#define GTM_DPLL_DT_S56 (*(volatile Ifx_GTM_DPLL_DT_S*)0xF01289E0u)


#define GTM_DPLL_DT_S57 (*(volatile Ifx_GTM_DPLL_DT_S*)0xF01289E4u)


#define GTM_DPLL_DT_S58 (*(volatile Ifx_GTM_DPLL_DT_S*)0xF01289E8u)


#define GTM_DPLL_DT_S59 (*(volatile Ifx_GTM_DPLL_DT_S*)0xF01289ECu)


#define GTM_DPLL_DT_S6 (*(volatile Ifx_GTM_DPLL_DT_S*)0xF0128918u)


#define GTM_DPLL_DT_S60 (*(volatile Ifx_GTM_DPLL_DT_S*)0xF01289F0u)


#define GTM_DPLL_DT_S61 (*(volatile Ifx_GTM_DPLL_DT_S*)0xF01289F4u)


#define GTM_DPLL_DT_S62 (*(volatile Ifx_GTM_DPLL_DT_S*)0xF01289F8u)


#define GTM_DPLL_DT_S63 (*(volatile Ifx_GTM_DPLL_DT_S*)0xF01289FCu)


#define GTM_DPLL_DT_S7 (*(volatile Ifx_GTM_DPLL_DT_S*)0xF012891Cu)


#define GTM_DPLL_DT_S8 (*(volatile Ifx_GTM_DPLL_DT_S*)0xF0128920u)


#define GTM_DPLL_DT_S9 (*(volatile Ifx_GTM_DPLL_DT_S*)0xF0128924u)


#define GTM_DPLL_DT_S_ACT (*(volatile Ifx_GTM_DPLL_DT_S_ACT*)0xF012847Cu)


#define GTM_DPLL_DT_T_ACT (*(volatile Ifx_GTM_DPLL_DT_T_ACT*)0xF0128478u)


#define GTM_DPLL_DTA0 (*(volatile Ifx_GTM_DPLL_DTA*)0xF0128380u)


#define GTM_DPLL_DTA1 (*(volatile Ifx_GTM_DPLL_DTA*)0xF0128384u)


#define GTM_DPLL_DTA10 (*(volatile Ifx_GTM_DPLL_DTA*)0xF01283A8u)


#define GTM_DPLL_DTA11 (*(volatile Ifx_GTM_DPLL_DTA*)0xF01283ACu)


#define GTM_DPLL_DTA12 (*(volatile Ifx_GTM_DPLL_DTA*)0xF01283B0u)


#define GTM_DPLL_DTA13 (*(volatile Ifx_GTM_DPLL_DTA*)0xF01283B4u)


#define GTM_DPLL_DTA14 (*(volatile Ifx_GTM_DPLL_DTA*)0xF01283B8u)


#define GTM_DPLL_DTA15 (*(volatile Ifx_GTM_DPLL_DTA*)0xF01283BCu)


#define GTM_DPLL_DTA16 (*(volatile Ifx_GTM_DPLL_DTA*)0xF01283C0u)


#define GTM_DPLL_DTA17 (*(volatile Ifx_GTM_DPLL_DTA*)0xF01283C4u)


#define GTM_DPLL_DTA18 (*(volatile Ifx_GTM_DPLL_DTA*)0xF01283C8u)


#define GTM_DPLL_DTA19 (*(volatile Ifx_GTM_DPLL_DTA*)0xF01283CCu)


#define GTM_DPLL_DTA2 (*(volatile Ifx_GTM_DPLL_DTA*)0xF0128388u)


#define GTM_DPLL_DTA20 (*(volatile Ifx_GTM_DPLL_DTA*)0xF01283D0u)


#define GTM_DPLL_DTA21 (*(volatile Ifx_GTM_DPLL_DTA*)0xF01283D4u)


#define GTM_DPLL_DTA22 (*(volatile Ifx_GTM_DPLL_DTA*)0xF01283D8u)


#define GTM_DPLL_DTA23 (*(volatile Ifx_GTM_DPLL_DTA*)0xF01283DCu)


#define GTM_DPLL_DTA3 (*(volatile Ifx_GTM_DPLL_DTA*)0xF012838Cu)


#define GTM_DPLL_DTA4 (*(volatile Ifx_GTM_DPLL_DTA*)0xF0128390u)


#define GTM_DPLL_DTA5 (*(volatile Ifx_GTM_DPLL_DTA*)0xF0128394u)


#define GTM_DPLL_DTA6 (*(volatile Ifx_GTM_DPLL_DTA*)0xF0128398u)


#define GTM_DPLL_DTA7 (*(volatile Ifx_GTM_DPLL_DTA*)0xF012839Cu)


#define GTM_DPLL_DTA8 (*(volatile Ifx_GTM_DPLL_DTA*)0xF01283A0u)


#define GTM_DPLL_DTA9 (*(volatile Ifx_GTM_DPLL_DTA*)0xF01283A4u)



#define GTM_DPLL_EDT_S (*(volatile Ifx_GTM_DPLL_EDT_S*)0xF0128488u)



#define GTM_DPLL_EDT_T (*(volatile Ifx_GTM_DPLL_EDT_T*)0xF0128480u)


#define GTM_DPLL_EIRQ_EN (*(volatile Ifx_GTM_DPLL_EIRQ_EN*)0xF0128050u)


#define GTM_DPLL_FTV_S (*(volatile Ifx_GTM_DPLL_FTV_S*)0xF0128418u)


#define GTM_DPLL_FTV_T (*(volatile Ifx_GTM_DPLL_FTV_T*)0xF0128408u)


#define GTM_DPLL_ID_PMTR0 (*(volatile Ifx_GTM_DPLL_ID_PMTR*)0xF0128100u)




#define GTM_DPLL_ID_PMTR_0 (GTM_DPLL_ID_PMTR0)


#define GTM_DPLL_ID_PMTR1 (*(volatile Ifx_GTM_DPLL_ID_PMTR*)0xF0128104u)




#define GTM_DPLL_ID_PMTR_1 (GTM_DPLL_ID_PMTR1)


#define GTM_DPLL_ID_PMTR10 (*(volatile Ifx_GTM_DPLL_ID_PMTR*)0xF0128128u)




#define GTM_DPLL_ID_PMTR_10 (GTM_DPLL_ID_PMTR10)


#define GTM_DPLL_ID_PMTR11 (*(volatile Ifx_GTM_DPLL_ID_PMTR*)0xF012812Cu)




#define GTM_DPLL_ID_PMTR_11 (GTM_DPLL_ID_PMTR11)


#define GTM_DPLL_ID_PMTR12 (*(volatile Ifx_GTM_DPLL_ID_PMTR*)0xF0128130u)




#define GTM_DPLL_ID_PMTR_12 (GTM_DPLL_ID_PMTR12)


#define GTM_DPLL_ID_PMTR13 (*(volatile Ifx_GTM_DPLL_ID_PMTR*)0xF0128134u)




#define GTM_DPLL_ID_PMTR_13 (GTM_DPLL_ID_PMTR13)


#define GTM_DPLL_ID_PMTR14 (*(volatile Ifx_GTM_DPLL_ID_PMTR*)0xF0128138u)




#define GTM_DPLL_ID_PMTR_14 (GTM_DPLL_ID_PMTR14)


#define GTM_DPLL_ID_PMTR15 (*(volatile Ifx_GTM_DPLL_ID_PMTR*)0xF012813Cu)




#define GTM_DPLL_ID_PMTR_15 (GTM_DPLL_ID_PMTR15)


#define GTM_DPLL_ID_PMTR16 (*(volatile Ifx_GTM_DPLL_ID_PMTR*)0xF0128140u)




#define GTM_DPLL_ID_PMTR_16 (GTM_DPLL_ID_PMTR16)


#define GTM_DPLL_ID_PMTR17 (*(volatile Ifx_GTM_DPLL_ID_PMTR*)0xF0128144u)




#define GTM_DPLL_ID_PMTR_17 (GTM_DPLL_ID_PMTR17)


#define GTM_DPLL_ID_PMTR18 (*(volatile Ifx_GTM_DPLL_ID_PMTR*)0xF0128148u)




#define GTM_DPLL_ID_PMTR_18 (GTM_DPLL_ID_PMTR18)


#define GTM_DPLL_ID_PMTR19 (*(volatile Ifx_GTM_DPLL_ID_PMTR*)0xF012814Cu)




#define GTM_DPLL_ID_PMTR_19 (GTM_DPLL_ID_PMTR19)


#define GTM_DPLL_ID_PMTR2 (*(volatile Ifx_GTM_DPLL_ID_PMTR*)0xF0128108u)




#define GTM_DPLL_ID_PMTR_2 (GTM_DPLL_ID_PMTR2)


#define GTM_DPLL_ID_PMTR20 (*(volatile Ifx_GTM_DPLL_ID_PMTR*)0xF0128150u)




#define GTM_DPLL_ID_PMTR_20 (GTM_DPLL_ID_PMTR20)


#define GTM_DPLL_ID_PMTR21 (*(volatile Ifx_GTM_DPLL_ID_PMTR*)0xF0128154u)




#define GTM_DPLL_ID_PMTR_21 (GTM_DPLL_ID_PMTR21)


#define GTM_DPLL_ID_PMTR22 (*(volatile Ifx_GTM_DPLL_ID_PMTR*)0xF0128158u)




#define GTM_DPLL_ID_PMTR_22 (GTM_DPLL_ID_PMTR22)


#define GTM_DPLL_ID_PMTR23 (*(volatile Ifx_GTM_DPLL_ID_PMTR*)0xF012815Cu)




#define GTM_DPLL_ID_PMTR_23 (GTM_DPLL_ID_PMTR23)


#define GTM_DPLL_ID_PMTR3 (*(volatile Ifx_GTM_DPLL_ID_PMTR*)0xF012810Cu)




#define GTM_DPLL_ID_PMTR_3 (GTM_DPLL_ID_PMTR3)


#define GTM_DPLL_ID_PMTR4 (*(volatile Ifx_GTM_DPLL_ID_PMTR*)0xF0128110u)




#define GTM_DPLL_ID_PMTR_4 (GTM_DPLL_ID_PMTR4)


#define GTM_DPLL_ID_PMTR5 (*(volatile Ifx_GTM_DPLL_ID_PMTR*)0xF0128114u)




#define GTM_DPLL_ID_PMTR_5 (GTM_DPLL_ID_PMTR5)


#define GTM_DPLL_ID_PMTR6 (*(volatile Ifx_GTM_DPLL_ID_PMTR*)0xF0128118u)




#define GTM_DPLL_ID_PMTR_6 (GTM_DPLL_ID_PMTR6)


#define GTM_DPLL_ID_PMTR7 (*(volatile Ifx_GTM_DPLL_ID_PMTR*)0xF012811Cu)




#define GTM_DPLL_ID_PMTR_7 (GTM_DPLL_ID_PMTR7)


#define GTM_DPLL_ID_PMTR8 (*(volatile Ifx_GTM_DPLL_ID_PMTR*)0xF0128120u)




#define GTM_DPLL_ID_PMTR_8 (GTM_DPLL_ID_PMTR8)


#define GTM_DPLL_ID_PMTR9 (*(volatile Ifx_GTM_DPLL_ID_PMTR*)0xF0128124u)




#define GTM_DPLL_ID_PMTR_9 (GTM_DPLL_ID_PMTR9)



#define GTM_DPLL_INC_CNT1 (*(volatile Ifx_GTM_DPLL_INC_CNT1*)0xF01280B0u)



#define GTM_DPLL_INC_CNT2 (*(volatile Ifx_GTM_DPLL_INC_CNT2*)0xF01280B4u)


#define GTM_DPLL_IRQ_EN (*(volatile Ifx_GTM_DPLL_IRQ_EN*)0xF0128044u)


#define GTM_DPLL_IRQ_FORCINT (*(volatile Ifx_GTM_DPLL_IRQ_FORCINT*)0xF0128048u)


#define GTM_DPLL_IRQ_MODE (*(volatile Ifx_GTM_DPLL_IRQ_MODE*)0xF012804Cu)


#define GTM_DPLL_IRQ_NOTIFY (*(volatile Ifx_GTM_DPLL_IRQ_NOTIFY*)0xF0128040u)



#define GTM_DPLL_MEDT_S (*(volatile Ifx_GTM_DPLL_MEDT_S*)0xF012848Cu)



#define GTM_DPLL_MEDT_T (*(volatile Ifx_GTM_DPLL_MEDT_T*)0xF0128484u)


#define GTM_DPLL_MLS1 (*(volatile Ifx_GTM_DPLL_MLS1*)0xF01285C0u)


#define GTM_DPLL_MLS2 (*(volatile Ifx_GTM_DPLL_MLS2*)0xF01285C4u)



#define GTM_DPLL_MPVAL1 (*(volatile Ifx_GTM_DPLL_MPVAL1*)0xF0128440u)



#define GTM_DPLL_MPVAL2 (*(volatile Ifx_GTM_DPLL_MPVAL2*)0xF0128444u)


#define GTM_DPLL_NA0 (*(volatile Ifx_GTM_DPLL_NA*)0xF0128300u)


#define GTM_DPLL_NA1 (*(volatile Ifx_GTM_DPLL_NA*)0xF0128304u)


#define GTM_DPLL_NA10 (*(volatile Ifx_GTM_DPLL_NA*)0xF0128328u)


#define GTM_DPLL_NA11 (*(volatile Ifx_GTM_DPLL_NA*)0xF012832Cu)


#define GTM_DPLL_NA12 (*(volatile Ifx_GTM_DPLL_NA*)0xF0128330u)


#define GTM_DPLL_NA13 (*(volatile Ifx_GTM_DPLL_NA*)0xF0128334u)


#define GTM_DPLL_NA14 (*(volatile Ifx_GTM_DPLL_NA*)0xF0128338u)


#define GTM_DPLL_NA15 (*(volatile Ifx_GTM_DPLL_NA*)0xF012833Cu)


#define GTM_DPLL_NA16 (*(volatile Ifx_GTM_DPLL_NA*)0xF0128340u)


#define GTM_DPLL_NA17 (*(volatile Ifx_GTM_DPLL_NA*)0xF0128344u)


#define GTM_DPLL_NA18 (*(volatile Ifx_GTM_DPLL_NA*)0xF0128348u)


#define GTM_DPLL_NA19 (*(volatile Ifx_GTM_DPLL_NA*)0xF012834Cu)


#define GTM_DPLL_NA2 (*(volatile Ifx_GTM_DPLL_NA*)0xF0128308u)


#define GTM_DPLL_NA20 (*(volatile Ifx_GTM_DPLL_NA*)0xF0128350u)


#define GTM_DPLL_NA21 (*(volatile Ifx_GTM_DPLL_NA*)0xF0128354u)


#define GTM_DPLL_NA22 (*(volatile Ifx_GTM_DPLL_NA*)0xF0128358u)


#define GTM_DPLL_NA23 (*(volatile Ifx_GTM_DPLL_NA*)0xF012835Cu)


#define GTM_DPLL_NA3 (*(volatile Ifx_GTM_DPLL_NA*)0xF012830Cu)


#define GTM_DPLL_NA4 (*(volatile Ifx_GTM_DPLL_NA*)0xF0128310u)


#define GTM_DPLL_NA5 (*(volatile Ifx_GTM_DPLL_NA*)0xF0128314u)


#define GTM_DPLL_NA6 (*(volatile Ifx_GTM_DPLL_NA*)0xF0128318u)


#define GTM_DPLL_NA7 (*(volatile Ifx_GTM_DPLL_NA*)0xF012831Cu)


#define GTM_DPLL_NA8 (*(volatile Ifx_GTM_DPLL_NA*)0xF0128320u)


#define GTM_DPLL_NA9 (*(volatile Ifx_GTM_DPLL_NA*)0xF0128324u)


#define GTM_DPLL_NMB_S (*(volatile Ifx_GTM_DPLL_NMB_S*)0xF01285FCu)



#define GTM_DPLL_NMB_S_TAR (*(volatile Ifx_GTM_DPLL_NMB_S_TAR*)0xF0128450u)



#define GTM_DPLL_NMB_S_TAR_OLD (*(volatile Ifx_GTM_DPLL_NMB_S_TAR_OLD*)0xF0128454u)


#define GTM_DPLL_NMB_T (*(volatile Ifx_GTM_DPLL_NMB_T*)0xF01285F8u)



#define GTM_DPLL_NMB_T_TAR (*(volatile Ifx_GTM_DPLL_NMB_T_TAR*)0xF0128448u)



#define GTM_DPLL_NMB_T_TAR_OLD (*(volatile Ifx_GTM_DPLL_NMB_T_TAR_OLD*)0xF012844Cu)


#define GTM_DPLL_NTI_CNT (*(volatile Ifx_GTM_DPLL_NTI_CNT*)0xF012803Cu)


#define GTM_DPLL_NUSC (*(volatile Ifx_GTM_DPLL_NUSC*)0xF0128038u)


#define GTM_DPLL_NUTC (*(volatile Ifx_GTM_DPLL_NUTC*)0xF0128034u)


#define GTM_DPLL_OSW (*(volatile Ifx_GTM_DPLL_OSW*)0xF012801Cu)


#define GTM_DPLL_PDT_T0 (*(volatile Ifx_GTM_DPLL_PDT_T*)0xF0128500u)


#define GTM_DPLL_PDT_T1 (*(volatile Ifx_GTM_DPLL_PDT_T*)0xF0128504u)


#define GTM_DPLL_PDT_T10 (*(volatile Ifx_GTM_DPLL_PDT_T*)0xF0128528u)


#define GTM_DPLL_PDT_T11 (*(volatile Ifx_GTM_DPLL_PDT_T*)0xF012852Cu)


#define GTM_DPLL_PDT_T12 (*(volatile Ifx_GTM_DPLL_PDT_T*)0xF0128530u)


#define GTM_DPLL_PDT_T13 (*(volatile Ifx_GTM_DPLL_PDT_T*)0xF0128534u)


#define GTM_DPLL_PDT_T14 (*(volatile Ifx_GTM_DPLL_PDT_T*)0xF0128538u)


#define GTM_DPLL_PDT_T15 (*(volatile Ifx_GTM_DPLL_PDT_T*)0xF012853Cu)


#define GTM_DPLL_PDT_T16 (*(volatile Ifx_GTM_DPLL_PDT_T*)0xF0128540u)


#define GTM_DPLL_PDT_T17 (*(volatile Ifx_GTM_DPLL_PDT_T*)0xF0128544u)


#define GTM_DPLL_PDT_T18 (*(volatile Ifx_GTM_DPLL_PDT_T*)0xF0128548u)


#define GTM_DPLL_PDT_T19 (*(volatile Ifx_GTM_DPLL_PDT_T*)0xF012854Cu)


#define GTM_DPLL_PDT_T2 (*(volatile Ifx_GTM_DPLL_PDT_T*)0xF0128508u)


#define GTM_DPLL_PDT_T20 (*(volatile Ifx_GTM_DPLL_PDT_T*)0xF0128550u)


#define GTM_DPLL_PDT_T21 (*(volatile Ifx_GTM_DPLL_PDT_T*)0xF0128554u)


#define GTM_DPLL_PDT_T22 (*(volatile Ifx_GTM_DPLL_PDT_T*)0xF0128558u)


#define GTM_DPLL_PDT_T23 (*(volatile Ifx_GTM_DPLL_PDT_T*)0xF012855Cu)


#define GTM_DPLL_PDT_T3 (*(volatile Ifx_GTM_DPLL_PDT_T*)0xF012850Cu)


#define GTM_DPLL_PDT_T4 (*(volatile Ifx_GTM_DPLL_PDT_T*)0xF0128510u)


#define GTM_DPLL_PDT_T5 (*(volatile Ifx_GTM_DPLL_PDT_T*)0xF0128514u)


#define GTM_DPLL_PDT_T6 (*(volatile Ifx_GTM_DPLL_PDT_T*)0xF0128518u)


#define GTM_DPLL_PDT_T7 (*(volatile Ifx_GTM_DPLL_PDT_T*)0xF012851Cu)


#define GTM_DPLL_PDT_T8 (*(volatile Ifx_GTM_DPLL_PDT_T*)0xF0128520u)


#define GTM_DPLL_PDT_T9 (*(volatile Ifx_GTM_DPLL_PDT_T*)0xF0128524u)


#define GTM_DPLL_PSA0 (*(volatile Ifx_GTM_DPLL_PSA*)0xF0128200u)


#define GTM_DPLL_PSA1 (*(volatile Ifx_GTM_DPLL_PSA*)0xF0128204u)


#define GTM_DPLL_PSA10 (*(volatile Ifx_GTM_DPLL_PSA*)0xF0128228u)


#define GTM_DPLL_PSA11 (*(volatile Ifx_GTM_DPLL_PSA*)0xF012822Cu)


#define GTM_DPLL_PSA12 (*(volatile Ifx_GTM_DPLL_PSA*)0xF0128230u)


#define GTM_DPLL_PSA13 (*(volatile Ifx_GTM_DPLL_PSA*)0xF0128234u)


#define GTM_DPLL_PSA14 (*(volatile Ifx_GTM_DPLL_PSA*)0xF0128238u)


#define GTM_DPLL_PSA15 (*(volatile Ifx_GTM_DPLL_PSA*)0xF012823Cu)


#define GTM_DPLL_PSA16 (*(volatile Ifx_GTM_DPLL_PSA*)0xF0128240u)


#define GTM_DPLL_PSA17 (*(volatile Ifx_GTM_DPLL_PSA*)0xF0128244u)


#define GTM_DPLL_PSA18 (*(volatile Ifx_GTM_DPLL_PSA*)0xF0128248u)


#define GTM_DPLL_PSA19 (*(volatile Ifx_GTM_DPLL_PSA*)0xF012824Cu)


#define GTM_DPLL_PSA2 (*(volatile Ifx_GTM_DPLL_PSA*)0xF0128208u)


#define GTM_DPLL_PSA20 (*(volatile Ifx_GTM_DPLL_PSA*)0xF0128250u)


#define GTM_DPLL_PSA21 (*(volatile Ifx_GTM_DPLL_PSA*)0xF0128254u)


#define GTM_DPLL_PSA22 (*(volatile Ifx_GTM_DPLL_PSA*)0xF0128258u)


#define GTM_DPLL_PSA23 (*(volatile Ifx_GTM_DPLL_PSA*)0xF012825Cu)


#define GTM_DPLL_PSA3 (*(volatile Ifx_GTM_DPLL_PSA*)0xF012820Cu)


#define GTM_DPLL_PSA4 (*(volatile Ifx_GTM_DPLL_PSA*)0xF0128210u)


#define GTM_DPLL_PSA5 (*(volatile Ifx_GTM_DPLL_PSA*)0xF0128214u)


#define GTM_DPLL_PSA6 (*(volatile Ifx_GTM_DPLL_PSA*)0xF0128218u)


#define GTM_DPLL_PSA7 (*(volatile Ifx_GTM_DPLL_PSA*)0xF012821Cu)


#define GTM_DPLL_PSA8 (*(volatile Ifx_GTM_DPLL_PSA*)0xF0128220u)


#define GTM_DPLL_PSA9 (*(volatile Ifx_GTM_DPLL_PSA*)0xF0128224u)


#define GTM_DPLL_PSAC0 (*(volatile Ifx_GTM_DPLL_PSAC*)0xF0128E80u)


#define GTM_DPLL_PSAC1 (*(volatile Ifx_GTM_DPLL_PSAC*)0xF0128E84u)


#define GTM_DPLL_PSAC10 (*(volatile Ifx_GTM_DPLL_PSAC*)0xF0128EA8u)


#define GTM_DPLL_PSAC11 (*(volatile Ifx_GTM_DPLL_PSAC*)0xF0128EACu)


#define GTM_DPLL_PSAC12 (*(volatile Ifx_GTM_DPLL_PSAC*)0xF0128EB0u)


#define GTM_DPLL_PSAC13 (*(volatile Ifx_GTM_DPLL_PSAC*)0xF0128EB4u)


#define GTM_DPLL_PSAC14 (*(volatile Ifx_GTM_DPLL_PSAC*)0xF0128EB8u)


#define GTM_DPLL_PSAC15 (*(volatile Ifx_GTM_DPLL_PSAC*)0xF0128EBCu)


#define GTM_DPLL_PSAC16 (*(volatile Ifx_GTM_DPLL_PSAC*)0xF0128EC0u)


#define GTM_DPLL_PSAC17 (*(volatile Ifx_GTM_DPLL_PSAC*)0xF0128EC4u)


#define GTM_DPLL_PSAC18 (*(volatile Ifx_GTM_DPLL_PSAC*)0xF0128EC8u)


#define GTM_DPLL_PSAC19 (*(volatile Ifx_GTM_DPLL_PSAC*)0xF0128ECCu)


#define GTM_DPLL_PSAC2 (*(volatile Ifx_GTM_DPLL_PSAC*)0xF0128E88u)


#define GTM_DPLL_PSAC20 (*(volatile Ifx_GTM_DPLL_PSAC*)0xF0128ED0u)


#define GTM_DPLL_PSAC21 (*(volatile Ifx_GTM_DPLL_PSAC*)0xF0128ED4u)


#define GTM_DPLL_PSAC22 (*(volatile Ifx_GTM_DPLL_PSAC*)0xF0128ED8u)


#define GTM_DPLL_PSAC23 (*(volatile Ifx_GTM_DPLL_PSAC*)0xF0128EDCu)


#define GTM_DPLL_PSAC3 (*(volatile Ifx_GTM_DPLL_PSAC*)0xF0128E8Cu)


#define GTM_DPLL_PSAC4 (*(volatile Ifx_GTM_DPLL_PSAC*)0xF0128E90u)


#define GTM_DPLL_PSAC5 (*(volatile Ifx_GTM_DPLL_PSAC*)0xF0128E94u)


#define GTM_DPLL_PSAC6 (*(volatile Ifx_GTM_DPLL_PSAC*)0xF0128E98u)


#define GTM_DPLL_PSAC7 (*(volatile Ifx_GTM_DPLL_PSAC*)0xF0128E9Cu)


#define GTM_DPLL_PSAC8 (*(volatile Ifx_GTM_DPLL_PSAC*)0xF0128EA0u)


#define GTM_DPLL_PSAC9 (*(volatile Ifx_GTM_DPLL_PSAC*)0xF0128EA4u)


#define GTM_DPLL_PSSC (*(volatile Ifx_GTM_DPLL_PSSC*)0xF01285E4u)


#define GTM_DPLL_PSSM_0 (*(volatile Ifx_GTM_DPLL_PSSM_0*)0xF01285F0u)




#define GTM_DPLL_PSSM_OLD_1 (GTM_DPLL_PSSM_0)


#define GTM_DPLL_PSSM_1 (*(volatile Ifx_GTM_DPLL_PSSM_1*)0xF01285F4u)




#define GTM_DPLL_PSSM_OLD_0 (GTM_DPLL_PSSM_1)


#define GTM_DPLL_PSTC (*(volatile Ifx_GTM_DPLL_PSTC*)0xF01285E0u)


#define GTM_DPLL_PSTM_0 (*(volatile Ifx_GTM_DPLL_PSTM_0*)0xF01285E8u)




#define GTM_DPLL_PSTM_OLD_1 (GTM_DPLL_PSTM_0)


#define GTM_DPLL_PSTM_1 (*(volatile Ifx_GTM_DPLL_PSTM_1*)0xF01285ECu)




#define GTM_DPLL_PSTM_OLD_0 (GTM_DPLL_PSTM_1)


#define GTM_DPLL_PVT (*(volatile Ifx_GTM_DPLL_PVT*)0xF01285D0u)


#define GTM_DPLL_RAM_INI (*(volatile Ifx_GTM_DPLL_RAM_INI*)0xF01281FCu)


#define GTM_DPLL_RCDT_SX (*(volatile Ifx_GTM_DPLL_RCDT_SX*)0xF0128464u)



#define GTM_DPLL_RCDT_SX_NOM (*(volatile Ifx_GTM_DPLL_RCDT_SX_NOM*)0xF012846Cu)


#define GTM_DPLL_RCDT_TX (*(volatile Ifx_GTM_DPLL_RCDT_TX*)0xF0128460u)



#define GTM_DPLL_RCDT_TX_NOM (*(volatile Ifx_GTM_DPLL_RCDT_TX_NOM*)0xF0128468u)


#define GTM_DPLL_RDT_S0 (*(volatile Ifx_GTM_DPLL_RDT_S*)0xF0128600u)


#define GTM_DPLL_RDT_S1 (*(volatile Ifx_GTM_DPLL_RDT_S*)0xF0128604u)


#define GTM_DPLL_RDT_S10 (*(volatile Ifx_GTM_DPLL_RDT_S*)0xF0128628u)


#define GTM_DPLL_RDT_S11 (*(volatile Ifx_GTM_DPLL_RDT_S*)0xF012862Cu)


#define GTM_DPLL_RDT_S12 (*(volatile Ifx_GTM_DPLL_RDT_S*)0xF0128630u)


#define GTM_DPLL_RDT_S13 (*(volatile Ifx_GTM_DPLL_RDT_S*)0xF0128634u)


#define GTM_DPLL_RDT_S14 (*(volatile Ifx_GTM_DPLL_RDT_S*)0xF0128638u)


#define GTM_DPLL_RDT_S15 (*(volatile Ifx_GTM_DPLL_RDT_S*)0xF012863Cu)


#define GTM_DPLL_RDT_S16 (*(volatile Ifx_GTM_DPLL_RDT_S*)0xF0128640u)


#define GTM_DPLL_RDT_S17 (*(volatile Ifx_GTM_DPLL_RDT_S*)0xF0128644u)


#define GTM_DPLL_RDT_S18 (*(volatile Ifx_GTM_DPLL_RDT_S*)0xF0128648u)


#define GTM_DPLL_RDT_S19 (*(volatile Ifx_GTM_DPLL_RDT_S*)0xF012864Cu)


#define GTM_DPLL_RDT_S2 (*(volatile Ifx_GTM_DPLL_RDT_S*)0xF0128608u)


#define GTM_DPLL_RDT_S20 (*(volatile Ifx_GTM_DPLL_RDT_S*)0xF0128650u)


#define GTM_DPLL_RDT_S21 (*(volatile Ifx_GTM_DPLL_RDT_S*)0xF0128654u)


#define GTM_DPLL_RDT_S22 (*(volatile Ifx_GTM_DPLL_RDT_S*)0xF0128658u)


#define GTM_DPLL_RDT_S23 (*(volatile Ifx_GTM_DPLL_RDT_S*)0xF012865Cu)


#define GTM_DPLL_RDT_S24 (*(volatile Ifx_GTM_DPLL_RDT_S*)0xF0128660u)


#define GTM_DPLL_RDT_S25 (*(volatile Ifx_GTM_DPLL_RDT_S*)0xF0128664u)


#define GTM_DPLL_RDT_S26 (*(volatile Ifx_GTM_DPLL_RDT_S*)0xF0128668u)


#define GTM_DPLL_RDT_S27 (*(volatile Ifx_GTM_DPLL_RDT_S*)0xF012866Cu)


#define GTM_DPLL_RDT_S28 (*(volatile Ifx_GTM_DPLL_RDT_S*)0xF0128670u)


#define GTM_DPLL_RDT_S29 (*(volatile Ifx_GTM_DPLL_RDT_S*)0xF0128674u)


#define GTM_DPLL_RDT_S3 (*(volatile Ifx_GTM_DPLL_RDT_S*)0xF012860Cu)


#define GTM_DPLL_RDT_S30 (*(volatile Ifx_GTM_DPLL_RDT_S*)0xF0128678u)


#define GTM_DPLL_RDT_S31 (*(volatile Ifx_GTM_DPLL_RDT_S*)0xF012867Cu)


#define GTM_DPLL_RDT_S32 (*(volatile Ifx_GTM_DPLL_RDT_S*)0xF0128680u)


#define GTM_DPLL_RDT_S33 (*(volatile Ifx_GTM_DPLL_RDT_S*)0xF0128684u)


#define GTM_DPLL_RDT_S34 (*(volatile Ifx_GTM_DPLL_RDT_S*)0xF0128688u)


#define GTM_DPLL_RDT_S35 (*(volatile Ifx_GTM_DPLL_RDT_S*)0xF012868Cu)


#define GTM_DPLL_RDT_S36 (*(volatile Ifx_GTM_DPLL_RDT_S*)0xF0128690u)


#define GTM_DPLL_RDT_S37 (*(volatile Ifx_GTM_DPLL_RDT_S*)0xF0128694u)


#define GTM_DPLL_RDT_S38 (*(volatile Ifx_GTM_DPLL_RDT_S*)0xF0128698u)


#define GTM_DPLL_RDT_S39 (*(volatile Ifx_GTM_DPLL_RDT_S*)0xF012869Cu)


#define GTM_DPLL_RDT_S4 (*(volatile Ifx_GTM_DPLL_RDT_S*)0xF0128610u)


#define GTM_DPLL_RDT_S40 (*(volatile Ifx_GTM_DPLL_RDT_S*)0xF01286A0u)


#define GTM_DPLL_RDT_S41 (*(volatile Ifx_GTM_DPLL_RDT_S*)0xF01286A4u)


#define GTM_DPLL_RDT_S42 (*(volatile Ifx_GTM_DPLL_RDT_S*)0xF01286A8u)


#define GTM_DPLL_RDT_S43 (*(volatile Ifx_GTM_DPLL_RDT_S*)0xF01286ACu)


#define GTM_DPLL_RDT_S44 (*(volatile Ifx_GTM_DPLL_RDT_S*)0xF01286B0u)


#define GTM_DPLL_RDT_S45 (*(volatile Ifx_GTM_DPLL_RDT_S*)0xF01286B4u)


#define GTM_DPLL_RDT_S46 (*(volatile Ifx_GTM_DPLL_RDT_S*)0xF01286B8u)


#define GTM_DPLL_RDT_S47 (*(volatile Ifx_GTM_DPLL_RDT_S*)0xF01286BCu)


#define GTM_DPLL_RDT_S48 (*(volatile Ifx_GTM_DPLL_RDT_S*)0xF01286C0u)


#define GTM_DPLL_RDT_S49 (*(volatile Ifx_GTM_DPLL_RDT_S*)0xF01286C4u)


#define GTM_DPLL_RDT_S5 (*(volatile Ifx_GTM_DPLL_RDT_S*)0xF0128614u)


#define GTM_DPLL_RDT_S50 (*(volatile Ifx_GTM_DPLL_RDT_S*)0xF01286C8u)


#define GTM_DPLL_RDT_S51 (*(volatile Ifx_GTM_DPLL_RDT_S*)0xF01286CCu)


#define GTM_DPLL_RDT_S52 (*(volatile Ifx_GTM_DPLL_RDT_S*)0xF01286D0u)


#define GTM_DPLL_RDT_S53 (*(volatile Ifx_GTM_DPLL_RDT_S*)0xF01286D4u)


#define GTM_DPLL_RDT_S54 (*(volatile Ifx_GTM_DPLL_RDT_S*)0xF01286D8u)


#define GTM_DPLL_RDT_S55 (*(volatile Ifx_GTM_DPLL_RDT_S*)0xF01286DCu)


#define GTM_DPLL_RDT_S56 (*(volatile Ifx_GTM_DPLL_RDT_S*)0xF01286E0u)


#define GTM_DPLL_RDT_S57 (*(volatile Ifx_GTM_DPLL_RDT_S*)0xF01286E4u)


#define GTM_DPLL_RDT_S58 (*(volatile Ifx_GTM_DPLL_RDT_S*)0xF01286E8u)


#define GTM_DPLL_RDT_S59 (*(volatile Ifx_GTM_DPLL_RDT_S*)0xF01286ECu)


#define GTM_DPLL_RDT_S6 (*(volatile Ifx_GTM_DPLL_RDT_S*)0xF0128618u)


#define GTM_DPLL_RDT_S60 (*(volatile Ifx_GTM_DPLL_RDT_S*)0xF01286F0u)


#define GTM_DPLL_RDT_S61 (*(volatile Ifx_GTM_DPLL_RDT_S*)0xF01286F4u)


#define GTM_DPLL_RDT_S62 (*(volatile Ifx_GTM_DPLL_RDT_S*)0xF01286F8u)


#define GTM_DPLL_RDT_S63 (*(volatile Ifx_GTM_DPLL_RDT_S*)0xF01286FCu)


#define GTM_DPLL_RDT_S7 (*(volatile Ifx_GTM_DPLL_RDT_S*)0xF012861Cu)


#define GTM_DPLL_RDT_S8 (*(volatile Ifx_GTM_DPLL_RDT_S*)0xF0128620u)


#define GTM_DPLL_RDT_S9 (*(volatile Ifx_GTM_DPLL_RDT_S*)0xF0128624u)


#define GTM_DPLL_RDT_S_ACT (*(volatile Ifx_GTM_DPLL_RDT_S_ACT*)0xF0128474u)


#define GTM_DPLL_RDT_T_ACT (*(volatile Ifx_GTM_DPLL_RDT_T_ACT*)0xF0128470u)


#define GTM_DPLL_SLR (*(volatile Ifx_GTM_DPLL_SLR*)0xF01284A4u)


#define GTM_DPLL_STATUS (*(volatile Ifx_GTM_DPLL_STATUS*)0xF01280FCu)


#define GTM_DPLL_TBU_TS0_S (*(volatile Ifx_GTM_DPLL_TBU_TS0_S*)0xF01280C4u)


#define GTM_DPLL_TBU_TS0_T (*(volatile Ifx_GTM_DPLL_TBU_TS0_T*)0xF01280C0u)


#define GTM_DPLL_THMA (*(volatile Ifx_GTM_DPLL_THMA*)0xF0128424u)


#define GTM_DPLL_THMI (*(volatile Ifx_GTM_DPLL_THMI*)0xF0128420u)



#define GTM_DPLL_THVAL (*(volatile Ifx_GTM_DPLL_THVAL*)0xF0128428u)


#define GTM_DPLL_TLR (*(volatile Ifx_GTM_DPLL_TLR*)0xF01284A0u)


#define GTM_DPLL_TOV (*(volatile Ifx_GTM_DPLL_TOV*)0xF0128430u)


#define GTM_DPLL_TOV_S (*(volatile Ifx_GTM_DPLL_TOV_S*)0xF0128434u)


#define GTM_DPLL_TS_S_0 (*(volatile Ifx_GTM_DPLL_TS_S_0*)0xF0128410u)




#define GTM_DPLL_TS_S_OLD_0 (GTM_DPLL_TS_S_0)


#define GTM_DPLL_TS_S_1 (*(volatile Ifx_GTM_DPLL_TS_S_1*)0xF0128414u)




#define GTM_DPLL_TS_S_OLD_1 (GTM_DPLL_TS_S_1)


#define GTM_DPLL_TS_T_0 (*(volatile Ifx_GTM_DPLL_TS_T_0*)0xF0128400u)




#define GTM_DPLL_TS_T_OLD_0 (GTM_DPLL_TS_T_0)


#define GTM_DPLL_TS_T_1 (*(volatile Ifx_GTM_DPLL_TS_T_1*)0xF0128404u)




#define GTM_DPLL_TS_T_OLD_1 (GTM_DPLL_TS_T_1)


#define GTM_DPLL_TSAC0 (*(volatile Ifx_GTM_DPLL_TSAC*)0xF0128E00u)


#define GTM_DPLL_TSAC1 (*(volatile Ifx_GTM_DPLL_TSAC*)0xF0128E04u)


#define GTM_DPLL_TSAC10 (*(volatile Ifx_GTM_DPLL_TSAC*)0xF0128E28u)


#define GTM_DPLL_TSAC11 (*(volatile Ifx_GTM_DPLL_TSAC*)0xF0128E2Cu)


#define GTM_DPLL_TSAC12 (*(volatile Ifx_GTM_DPLL_TSAC*)0xF0128E30u)


#define GTM_DPLL_TSAC13 (*(volatile Ifx_GTM_DPLL_TSAC*)0xF0128E34u)


#define GTM_DPLL_TSAC14 (*(volatile Ifx_GTM_DPLL_TSAC*)0xF0128E38u)


#define GTM_DPLL_TSAC15 (*(volatile Ifx_GTM_DPLL_TSAC*)0xF0128E3Cu)


#define GTM_DPLL_TSAC16 (*(volatile Ifx_GTM_DPLL_TSAC*)0xF0128E40u)


#define GTM_DPLL_TSAC17 (*(volatile Ifx_GTM_DPLL_TSAC*)0xF0128E44u)


#define GTM_DPLL_TSAC18 (*(volatile Ifx_GTM_DPLL_TSAC*)0xF0128E48u)


#define GTM_DPLL_TSAC19 (*(volatile Ifx_GTM_DPLL_TSAC*)0xF0128E4Cu)


#define GTM_DPLL_TSAC2 (*(volatile Ifx_GTM_DPLL_TSAC*)0xF0128E08u)


#define GTM_DPLL_TSAC20 (*(volatile Ifx_GTM_DPLL_TSAC*)0xF0128E50u)


#define GTM_DPLL_TSAC21 (*(volatile Ifx_GTM_DPLL_TSAC*)0xF0128E54u)


#define GTM_DPLL_TSAC22 (*(volatile Ifx_GTM_DPLL_TSAC*)0xF0128E58u)


#define GTM_DPLL_TSAC23 (*(volatile Ifx_GTM_DPLL_TSAC*)0xF0128E5Cu)


#define GTM_DPLL_TSAC3 (*(volatile Ifx_GTM_DPLL_TSAC*)0xF0128E0Cu)


#define GTM_DPLL_TSAC4 (*(volatile Ifx_GTM_DPLL_TSAC*)0xF0128E10u)


#define GTM_DPLL_TSAC5 (*(volatile Ifx_GTM_DPLL_TSAC*)0xF0128E14u)


#define GTM_DPLL_TSAC6 (*(volatile Ifx_GTM_DPLL_TSAC*)0xF0128E18u)


#define GTM_DPLL_TSAC7 (*(volatile Ifx_GTM_DPLL_TSAC*)0xF0128E1Cu)


#define GTM_DPLL_TSAC8 (*(volatile Ifx_GTM_DPLL_TSAC*)0xF0128E20u)


#define GTM_DPLL_TSAC9 (*(volatile Ifx_GTM_DPLL_TSAC*)0xF0128E24u)


#define GTM_DPLL_TSF_S0 (*(volatile Ifx_GTM_DPLL_TSF_S*)0xF0128700u)


#define GTM_DPLL_TSF_S1 (*(volatile Ifx_GTM_DPLL_TSF_S*)0xF0128704u)


#define GTM_DPLL_TSF_S10 (*(volatile Ifx_GTM_DPLL_TSF_S*)0xF0128728u)


#define GTM_DPLL_TSF_S11 (*(volatile Ifx_GTM_DPLL_TSF_S*)0xF012872Cu)


#define GTM_DPLL_TSF_S12 (*(volatile Ifx_GTM_DPLL_TSF_S*)0xF0128730u)


#define GTM_DPLL_TSF_S13 (*(volatile Ifx_GTM_DPLL_TSF_S*)0xF0128734u)


#define GTM_DPLL_TSF_S14 (*(volatile Ifx_GTM_DPLL_TSF_S*)0xF0128738u)


#define GTM_DPLL_TSF_S15 (*(volatile Ifx_GTM_DPLL_TSF_S*)0xF012873Cu)


#define GTM_DPLL_TSF_S16 (*(volatile Ifx_GTM_DPLL_TSF_S*)0xF0128740u)


#define GTM_DPLL_TSF_S17 (*(volatile Ifx_GTM_DPLL_TSF_S*)0xF0128744u)


#define GTM_DPLL_TSF_S18 (*(volatile Ifx_GTM_DPLL_TSF_S*)0xF0128748u)


#define GTM_DPLL_TSF_S19 (*(volatile Ifx_GTM_DPLL_TSF_S*)0xF012874Cu)


#define GTM_DPLL_TSF_S2 (*(volatile Ifx_GTM_DPLL_TSF_S*)0xF0128708u)


#define GTM_DPLL_TSF_S20 (*(volatile Ifx_GTM_DPLL_TSF_S*)0xF0128750u)


#define GTM_DPLL_TSF_S21 (*(volatile Ifx_GTM_DPLL_TSF_S*)0xF0128754u)


#define GTM_DPLL_TSF_S22 (*(volatile Ifx_GTM_DPLL_TSF_S*)0xF0128758u)


#define GTM_DPLL_TSF_S23 (*(volatile Ifx_GTM_DPLL_TSF_S*)0xF012875Cu)


#define GTM_DPLL_TSF_S24 (*(volatile Ifx_GTM_DPLL_TSF_S*)0xF0128760u)


#define GTM_DPLL_TSF_S25 (*(volatile Ifx_GTM_DPLL_TSF_S*)0xF0128764u)


#define GTM_DPLL_TSF_S26 (*(volatile Ifx_GTM_DPLL_TSF_S*)0xF0128768u)


#define GTM_DPLL_TSF_S27 (*(volatile Ifx_GTM_DPLL_TSF_S*)0xF012876Cu)


#define GTM_DPLL_TSF_S28 (*(volatile Ifx_GTM_DPLL_TSF_S*)0xF0128770u)


#define GTM_DPLL_TSF_S29 (*(volatile Ifx_GTM_DPLL_TSF_S*)0xF0128774u)


#define GTM_DPLL_TSF_S3 (*(volatile Ifx_GTM_DPLL_TSF_S*)0xF012870Cu)


#define GTM_DPLL_TSF_S30 (*(volatile Ifx_GTM_DPLL_TSF_S*)0xF0128778u)


#define GTM_DPLL_TSF_S31 (*(volatile Ifx_GTM_DPLL_TSF_S*)0xF012877Cu)


#define GTM_DPLL_TSF_S32 (*(volatile Ifx_GTM_DPLL_TSF_S*)0xF0128780u)


#define GTM_DPLL_TSF_S33 (*(volatile Ifx_GTM_DPLL_TSF_S*)0xF0128784u)


#define GTM_DPLL_TSF_S34 (*(volatile Ifx_GTM_DPLL_TSF_S*)0xF0128788u)


#define GTM_DPLL_TSF_S35 (*(volatile Ifx_GTM_DPLL_TSF_S*)0xF012878Cu)


#define GTM_DPLL_TSF_S36 (*(volatile Ifx_GTM_DPLL_TSF_S*)0xF0128790u)


#define GTM_DPLL_TSF_S37 (*(volatile Ifx_GTM_DPLL_TSF_S*)0xF0128794u)


#define GTM_DPLL_TSF_S38 (*(volatile Ifx_GTM_DPLL_TSF_S*)0xF0128798u)


#define GTM_DPLL_TSF_S39 (*(volatile Ifx_GTM_DPLL_TSF_S*)0xF012879Cu)


#define GTM_DPLL_TSF_S4 (*(volatile Ifx_GTM_DPLL_TSF_S*)0xF0128710u)


#define GTM_DPLL_TSF_S40 (*(volatile Ifx_GTM_DPLL_TSF_S*)0xF01287A0u)


#define GTM_DPLL_TSF_S41 (*(volatile Ifx_GTM_DPLL_TSF_S*)0xF01287A4u)


#define GTM_DPLL_TSF_S42 (*(volatile Ifx_GTM_DPLL_TSF_S*)0xF01287A8u)


#define GTM_DPLL_TSF_S43 (*(volatile Ifx_GTM_DPLL_TSF_S*)0xF01287ACu)


#define GTM_DPLL_TSF_S44 (*(volatile Ifx_GTM_DPLL_TSF_S*)0xF01287B0u)


#define GTM_DPLL_TSF_S45 (*(volatile Ifx_GTM_DPLL_TSF_S*)0xF01287B4u)


#define GTM_DPLL_TSF_S46 (*(volatile Ifx_GTM_DPLL_TSF_S*)0xF01287B8u)


#define GTM_DPLL_TSF_S47 (*(volatile Ifx_GTM_DPLL_TSF_S*)0xF01287BCu)


#define GTM_DPLL_TSF_S48 (*(volatile Ifx_GTM_DPLL_TSF_S*)0xF01287C0u)


#define GTM_DPLL_TSF_S49 (*(volatile Ifx_GTM_DPLL_TSF_S*)0xF01287C4u)


#define GTM_DPLL_TSF_S5 (*(volatile Ifx_GTM_DPLL_TSF_S*)0xF0128714u)


#define GTM_DPLL_TSF_S50 (*(volatile Ifx_GTM_DPLL_TSF_S*)0xF01287C8u)


#define GTM_DPLL_TSF_S51 (*(volatile Ifx_GTM_DPLL_TSF_S*)0xF01287CCu)


#define GTM_DPLL_TSF_S52 (*(volatile Ifx_GTM_DPLL_TSF_S*)0xF01287D0u)


#define GTM_DPLL_TSF_S53 (*(volatile Ifx_GTM_DPLL_TSF_S*)0xF01287D4u)


#define GTM_DPLL_TSF_S54 (*(volatile Ifx_GTM_DPLL_TSF_S*)0xF01287D8u)


#define GTM_DPLL_TSF_S55 (*(volatile Ifx_GTM_DPLL_TSF_S*)0xF01287DCu)


#define GTM_DPLL_TSF_S56 (*(volatile Ifx_GTM_DPLL_TSF_S*)0xF01287E0u)


#define GTM_DPLL_TSF_S57 (*(volatile Ifx_GTM_DPLL_TSF_S*)0xF01287E4u)


#define GTM_DPLL_TSF_S58 (*(volatile Ifx_GTM_DPLL_TSF_S*)0xF01287E8u)


#define GTM_DPLL_TSF_S59 (*(volatile Ifx_GTM_DPLL_TSF_S*)0xF01287ECu)


#define GTM_DPLL_TSF_S6 (*(volatile Ifx_GTM_DPLL_TSF_S*)0xF0128718u)


#define GTM_DPLL_TSF_S60 (*(volatile Ifx_GTM_DPLL_TSF_S*)0xF01287F0u)


#define GTM_DPLL_TSF_S61 (*(volatile Ifx_GTM_DPLL_TSF_S*)0xF01287F4u)


#define GTM_DPLL_TSF_S62 (*(volatile Ifx_GTM_DPLL_TSF_S*)0xF01287F8u)


#define GTM_DPLL_TSF_S63 (*(volatile Ifx_GTM_DPLL_TSF_S*)0xF01287FCu)


#define GTM_DPLL_TSF_S7 (*(volatile Ifx_GTM_DPLL_TSF_S*)0xF012871Cu)


#define GTM_DPLL_TSF_S8 (*(volatile Ifx_GTM_DPLL_TSF_S*)0xF0128720u)


#define GTM_DPLL_TSF_S9 (*(volatile Ifx_GTM_DPLL_TSF_S*)0xF0128724u)


#define GTM_DXINCON (*(volatile Ifx_GTM_DXINCON*)0xF019FE90u)


#define GTM_DXOUTCON (*(volatile Ifx_GTM_DXOUTCON*)0xF019FE00u)


#define GTM_EIRQ_EN (*(volatile Ifx_GTM_EIRQ_EN*)0xF0100020u)


#define GTM_F2A0_ENABLE (*(volatile Ifx_GTM_F2A_ENABLE*)0xF0118040u)


#define GTM_F2A0_RD_CH0_ARU_RD_FIFO (*(volatile Ifx_GTM_F2A_RD_CH_ARU_RD_FIFO*)0xF0118000u)




#define GTM_F2A0_CH0_ARU_RD_FIFO (GTM_F2A0_RD_CH0_ARU_RD_FIFO)


#define GTM_F2A0_RD_CH1_ARU_RD_FIFO (*(volatile Ifx_GTM_F2A_RD_CH_ARU_RD_FIFO*)0xF0118004u)




#define GTM_F2A0_CH1_ARU_RD_FIFO (GTM_F2A0_RD_CH1_ARU_RD_FIFO)


#define GTM_F2A0_RD_CH2_ARU_RD_FIFO (*(volatile Ifx_GTM_F2A_RD_CH_ARU_RD_FIFO*)0xF0118008u)




#define GTM_F2A0_CH2_ARU_RD_FIFO (GTM_F2A0_RD_CH2_ARU_RD_FIFO)


#define GTM_F2A0_RD_CH3_ARU_RD_FIFO (*(volatile Ifx_GTM_F2A_RD_CH_ARU_RD_FIFO*)0xF011800Cu)




#define GTM_F2A0_CH3_ARU_RD_FIFO (GTM_F2A0_RD_CH3_ARU_RD_FIFO)


#define GTM_F2A0_RD_CH4_ARU_RD_FIFO (*(volatile Ifx_GTM_F2A_RD_CH_ARU_RD_FIFO*)0xF0118010u)




#define GTM_F2A0_CH4_ARU_RD_FIFO (GTM_F2A0_RD_CH4_ARU_RD_FIFO)


#define GTM_F2A0_RD_CH5_ARU_RD_FIFO (*(volatile Ifx_GTM_F2A_RD_CH_ARU_RD_FIFO*)0xF0118014u)




#define GTM_F2A0_CH5_ARU_RD_FIFO (GTM_F2A0_RD_CH5_ARU_RD_FIFO)


#define GTM_F2A0_RD_CH6_ARU_RD_FIFO (*(volatile Ifx_GTM_F2A_RD_CH_ARU_RD_FIFO*)0xF0118018u)




#define GTM_F2A0_CH6_ARU_RD_FIFO (GTM_F2A0_RD_CH6_ARU_RD_FIFO)


#define GTM_F2A0_RD_CH7_ARU_RD_FIFO (*(volatile Ifx_GTM_F2A_RD_CH_ARU_RD_FIFO*)0xF011801Cu)




#define GTM_F2A0_CH7_ARU_RD_FIFO (GTM_F2A0_RD_CH7_ARU_RD_FIFO)


#define GTM_F2A0_STR_CH0_STR_CFG (*(volatile Ifx_GTM_F2A_STR_CH_STR_CFG*)0xF0118020u)




#define GTM_F2A0_CH0_STR_CFG (GTM_F2A0_STR_CH0_STR_CFG)


#define GTM_F2A0_STR_CH1_STR_CFG (*(volatile Ifx_GTM_F2A_STR_CH_STR_CFG*)0xF0118024u)




#define GTM_F2A0_CH1_STR_CFG (GTM_F2A0_STR_CH1_STR_CFG)


#define GTM_F2A0_STR_CH2_STR_CFG (*(volatile Ifx_GTM_F2A_STR_CH_STR_CFG*)0xF0118028u)




#define GTM_F2A0_CH2_STR_CFG (GTM_F2A0_STR_CH2_STR_CFG)


#define GTM_F2A0_STR_CH3_STR_CFG (*(volatile Ifx_GTM_F2A_STR_CH_STR_CFG*)0xF011802Cu)




#define GTM_F2A0_CH3_STR_CFG (GTM_F2A0_STR_CH3_STR_CFG)


#define GTM_F2A0_STR_CH4_STR_CFG (*(volatile Ifx_GTM_F2A_STR_CH_STR_CFG*)0xF0118030u)




#define GTM_F2A0_CH4_STR_CFG (GTM_F2A0_STR_CH4_STR_CFG)


#define GTM_F2A0_STR_CH5_STR_CFG (*(volatile Ifx_GTM_F2A_STR_CH_STR_CFG*)0xF0118034u)




#define GTM_F2A0_CH5_STR_CFG (GTM_F2A0_STR_CH5_STR_CFG)


#define GTM_F2A0_STR_CH6_STR_CFG (*(volatile Ifx_GTM_F2A_STR_CH_STR_CFG*)0xF0118038u)




#define GTM_F2A0_CH6_STR_CFG (GTM_F2A0_STR_CH6_STR_CFG)


#define GTM_F2A0_STR_CH7_STR_CFG (*(volatile Ifx_GTM_F2A_STR_CH_STR_CFG*)0xF011803Cu)




#define GTM_F2A0_CH7_STR_CFG (GTM_F2A0_STR_CH7_STR_CFG)


#define GTM_FIFO0_CH0_CTRL (*(volatile Ifx_GTM_FIFO_CH_CTRL*)0xF0118400u)


#define GTM_FIFO0_CH0_EIRQ_EN (*(volatile Ifx_GTM_FIFO_CH_EIRQ_EN*)0xF0118434u)


#define GTM_FIFO0_CH0_END_ADDR (*(volatile Ifx_GTM_FIFO_CH_END_ADDR*)0xF0118404u)


#define GTM_FIFO0_CH0_FILL_LEVEL (*(volatile Ifx_GTM_FIFO_CH_FILL_LEVEL*)0xF0118418u)


#define GTM_FIFO0_CH0_IRQ_EN (*(volatile Ifx_GTM_FIFO_CH_IRQ_EN*)0xF0118428u)


#define GTM_FIFO0_CH0_IRQ_FORCINT (*(volatile Ifx_GTM_FIFO_CH_IRQ_FORCINT*)0xF011842Cu)


#define GTM_FIFO0_CH0_IRQ_MODE (*(volatile Ifx_GTM_FIFO_CH_IRQ_MODE*)0xF0118430u)


#define GTM_FIFO0_CH0_IRQ_NOTIFY (*(volatile Ifx_GTM_FIFO_CH_IRQ_NOTIFY*)0xF0118424u)


#define GTM_FIFO0_CH0_LOWER_WM (*(volatile Ifx_GTM_FIFO_CH_LOWER_WM*)0xF0118410u)


#define GTM_FIFO0_CH0_RD_PTR (*(volatile Ifx_GTM_FIFO_CH_RD_PTR*)0xF0118420u)


#define GTM_FIFO0_CH0_START_ADDR (*(volatile Ifx_GTM_FIFO_CH_START_ADDR*)0xF0118408u)


#define GTM_FIFO0_CH0_STATUS (*(volatile Ifx_GTM_FIFO_CH_STATUS*)0xF0118414u)


#define GTM_FIFO0_CH0_UPPER_WM (*(volatile Ifx_GTM_FIFO_CH_UPPER_WM*)0xF011840Cu)


#define GTM_FIFO0_CH0_WR_PTR (*(volatile Ifx_GTM_FIFO_CH_WR_PTR*)0xF011841Cu)


#define GTM_FIFO0_CH1_CTRL (*(volatile Ifx_GTM_FIFO_CH_CTRL*)0xF0118440u)


#define GTM_FIFO0_CH1_EIRQ_EN (*(volatile Ifx_GTM_FIFO_CH_EIRQ_EN*)0xF0118474u)


#define GTM_FIFO0_CH1_END_ADDR (*(volatile Ifx_GTM_FIFO_CH_END_ADDR*)0xF0118444u)


#define GTM_FIFO0_CH1_FILL_LEVEL (*(volatile Ifx_GTM_FIFO_CH_FILL_LEVEL*)0xF0118458u)


#define GTM_FIFO0_CH1_IRQ_EN (*(volatile Ifx_GTM_FIFO_CH_IRQ_EN*)0xF0118468u)


#define GTM_FIFO0_CH1_IRQ_FORCINT (*(volatile Ifx_GTM_FIFO_CH_IRQ_FORCINT*)0xF011846Cu)


#define GTM_FIFO0_CH1_IRQ_MODE (*(volatile Ifx_GTM_FIFO_CH_IRQ_MODE*)0xF0118470u)


#define GTM_FIFO0_CH1_IRQ_NOTIFY (*(volatile Ifx_GTM_FIFO_CH_IRQ_NOTIFY*)0xF0118464u)


#define GTM_FIFO0_CH1_LOWER_WM (*(volatile Ifx_GTM_FIFO_CH_LOWER_WM*)0xF0118450u)


#define GTM_FIFO0_CH1_RD_PTR (*(volatile Ifx_GTM_FIFO_CH_RD_PTR*)0xF0118460u)


#define GTM_FIFO0_CH1_START_ADDR (*(volatile Ifx_GTM_FIFO_CH_START_ADDR*)0xF0118448u)


#define GTM_FIFO0_CH1_STATUS (*(volatile Ifx_GTM_FIFO_CH_STATUS*)0xF0118454u)


#define GTM_FIFO0_CH1_UPPER_WM (*(volatile Ifx_GTM_FIFO_CH_UPPER_WM*)0xF011844Cu)


#define GTM_FIFO0_CH1_WR_PTR (*(volatile Ifx_GTM_FIFO_CH_WR_PTR*)0xF011845Cu)


#define GTM_FIFO0_CH2_CTRL (*(volatile Ifx_GTM_FIFO_CH_CTRL*)0xF0118480u)


#define GTM_FIFO0_CH2_EIRQ_EN (*(volatile Ifx_GTM_FIFO_CH_EIRQ_EN*)0xF01184B4u)


#define GTM_FIFO0_CH2_END_ADDR (*(volatile Ifx_GTM_FIFO_CH_END_ADDR*)0xF0118484u)


#define GTM_FIFO0_CH2_FILL_LEVEL (*(volatile Ifx_GTM_FIFO_CH_FILL_LEVEL*)0xF0118498u)


#define GTM_FIFO0_CH2_IRQ_EN (*(volatile Ifx_GTM_FIFO_CH_IRQ_EN*)0xF01184A8u)


#define GTM_FIFO0_CH2_IRQ_FORCINT (*(volatile Ifx_GTM_FIFO_CH_IRQ_FORCINT*)0xF01184ACu)


#define GTM_FIFO0_CH2_IRQ_MODE (*(volatile Ifx_GTM_FIFO_CH_IRQ_MODE*)0xF01184B0u)


#define GTM_FIFO0_CH2_IRQ_NOTIFY (*(volatile Ifx_GTM_FIFO_CH_IRQ_NOTIFY*)0xF01184A4u)


#define GTM_FIFO0_CH2_LOWER_WM (*(volatile Ifx_GTM_FIFO_CH_LOWER_WM*)0xF0118490u)


#define GTM_FIFO0_CH2_RD_PTR (*(volatile Ifx_GTM_FIFO_CH_RD_PTR*)0xF01184A0u)


#define GTM_FIFO0_CH2_START_ADDR (*(volatile Ifx_GTM_FIFO_CH_START_ADDR*)0xF0118488u)


#define GTM_FIFO0_CH2_STATUS (*(volatile Ifx_GTM_FIFO_CH_STATUS*)0xF0118494u)


#define GTM_FIFO0_CH2_UPPER_WM (*(volatile Ifx_GTM_FIFO_CH_UPPER_WM*)0xF011848Cu)


#define GTM_FIFO0_CH2_WR_PTR (*(volatile Ifx_GTM_FIFO_CH_WR_PTR*)0xF011849Cu)


#define GTM_FIFO0_CH3_CTRL (*(volatile Ifx_GTM_FIFO_CH_CTRL*)0xF01184C0u)


#define GTM_FIFO0_CH3_EIRQ_EN (*(volatile Ifx_GTM_FIFO_CH_EIRQ_EN*)0xF01184F4u)


#define GTM_FIFO0_CH3_END_ADDR (*(volatile Ifx_GTM_FIFO_CH_END_ADDR*)0xF01184C4u)


#define GTM_FIFO0_CH3_FILL_LEVEL (*(volatile Ifx_GTM_FIFO_CH_FILL_LEVEL*)0xF01184D8u)


#define GTM_FIFO0_CH3_IRQ_EN (*(volatile Ifx_GTM_FIFO_CH_IRQ_EN*)0xF01184E8u)


#define GTM_FIFO0_CH3_IRQ_FORCINT (*(volatile Ifx_GTM_FIFO_CH_IRQ_FORCINT*)0xF01184ECu)


#define GTM_FIFO0_CH3_IRQ_MODE (*(volatile Ifx_GTM_FIFO_CH_IRQ_MODE*)0xF01184F0u)


#define GTM_FIFO0_CH3_IRQ_NOTIFY (*(volatile Ifx_GTM_FIFO_CH_IRQ_NOTIFY*)0xF01184E4u)


#define GTM_FIFO0_CH3_LOWER_WM (*(volatile Ifx_GTM_FIFO_CH_LOWER_WM*)0xF01184D0u)


#define GTM_FIFO0_CH3_RD_PTR (*(volatile Ifx_GTM_FIFO_CH_RD_PTR*)0xF01184E0u)


#define GTM_FIFO0_CH3_START_ADDR (*(volatile Ifx_GTM_FIFO_CH_START_ADDR*)0xF01184C8u)


#define GTM_FIFO0_CH3_STATUS (*(volatile Ifx_GTM_FIFO_CH_STATUS*)0xF01184D4u)


#define GTM_FIFO0_CH3_UPPER_WM (*(volatile Ifx_GTM_FIFO_CH_UPPER_WM*)0xF01184CCu)


#define GTM_FIFO0_CH3_WR_PTR (*(volatile Ifx_GTM_FIFO_CH_WR_PTR*)0xF01184DCu)


#define GTM_FIFO0_CH4_CTRL (*(volatile Ifx_GTM_FIFO_CH_CTRL*)0xF0118500u)


#define GTM_FIFO0_CH4_EIRQ_EN (*(volatile Ifx_GTM_FIFO_CH_EIRQ_EN*)0xF0118534u)


#define GTM_FIFO0_CH4_END_ADDR (*(volatile Ifx_GTM_FIFO_CH_END_ADDR*)0xF0118504u)


#define GTM_FIFO0_CH4_FILL_LEVEL (*(volatile Ifx_GTM_FIFO_CH_FILL_LEVEL*)0xF0118518u)


#define GTM_FIFO0_CH4_IRQ_EN (*(volatile Ifx_GTM_FIFO_CH_IRQ_EN*)0xF0118528u)


#define GTM_FIFO0_CH4_IRQ_FORCINT (*(volatile Ifx_GTM_FIFO_CH_IRQ_FORCINT*)0xF011852Cu)


#define GTM_FIFO0_CH4_IRQ_MODE (*(volatile Ifx_GTM_FIFO_CH_IRQ_MODE*)0xF0118530u)


#define GTM_FIFO0_CH4_IRQ_NOTIFY (*(volatile Ifx_GTM_FIFO_CH_IRQ_NOTIFY*)0xF0118524u)


#define GTM_FIFO0_CH4_LOWER_WM (*(volatile Ifx_GTM_FIFO_CH_LOWER_WM*)0xF0118510u)


#define GTM_FIFO0_CH4_RD_PTR (*(volatile Ifx_GTM_FIFO_CH_RD_PTR*)0xF0118520u)


#define GTM_FIFO0_CH4_START_ADDR (*(volatile Ifx_GTM_FIFO_CH_START_ADDR*)0xF0118508u)


#define GTM_FIFO0_CH4_STATUS (*(volatile Ifx_GTM_FIFO_CH_STATUS*)0xF0118514u)


#define GTM_FIFO0_CH4_UPPER_WM (*(volatile Ifx_GTM_FIFO_CH_UPPER_WM*)0xF011850Cu)


#define GTM_FIFO0_CH4_WR_PTR (*(volatile Ifx_GTM_FIFO_CH_WR_PTR*)0xF011851Cu)


#define GTM_FIFO0_CH5_CTRL (*(volatile Ifx_GTM_FIFO_CH_CTRL*)0xF0118540u)


#define GTM_FIFO0_CH5_EIRQ_EN (*(volatile Ifx_GTM_FIFO_CH_EIRQ_EN*)0xF0118574u)


#define GTM_FIFO0_CH5_END_ADDR (*(volatile Ifx_GTM_FIFO_CH_END_ADDR*)0xF0118544u)


#define GTM_FIFO0_CH5_FILL_LEVEL (*(volatile Ifx_GTM_FIFO_CH_FILL_LEVEL*)0xF0118558u)


#define GTM_FIFO0_CH5_IRQ_EN (*(volatile Ifx_GTM_FIFO_CH_IRQ_EN*)0xF0118568u)


#define GTM_FIFO0_CH5_IRQ_FORCINT (*(volatile Ifx_GTM_FIFO_CH_IRQ_FORCINT*)0xF011856Cu)


#define GTM_FIFO0_CH5_IRQ_MODE (*(volatile Ifx_GTM_FIFO_CH_IRQ_MODE*)0xF0118570u)


#define GTM_FIFO0_CH5_IRQ_NOTIFY (*(volatile Ifx_GTM_FIFO_CH_IRQ_NOTIFY*)0xF0118564u)


#define GTM_FIFO0_CH5_LOWER_WM (*(volatile Ifx_GTM_FIFO_CH_LOWER_WM*)0xF0118550u)


#define GTM_FIFO0_CH5_RD_PTR (*(volatile Ifx_GTM_FIFO_CH_RD_PTR*)0xF0118560u)


#define GTM_FIFO0_CH5_START_ADDR (*(volatile Ifx_GTM_FIFO_CH_START_ADDR*)0xF0118548u)


#define GTM_FIFO0_CH5_STATUS (*(volatile Ifx_GTM_FIFO_CH_STATUS*)0xF0118554u)


#define GTM_FIFO0_CH5_UPPER_WM (*(volatile Ifx_GTM_FIFO_CH_UPPER_WM*)0xF011854Cu)


#define GTM_FIFO0_CH5_WR_PTR (*(volatile Ifx_GTM_FIFO_CH_WR_PTR*)0xF011855Cu)


#define GTM_FIFO0_CH6_CTRL (*(volatile Ifx_GTM_FIFO_CH_CTRL*)0xF0118580u)


#define GTM_FIFO0_CH6_EIRQ_EN (*(volatile Ifx_GTM_FIFO_CH_EIRQ_EN*)0xF01185B4u)


#define GTM_FIFO0_CH6_END_ADDR (*(volatile Ifx_GTM_FIFO_CH_END_ADDR*)0xF0118584u)


#define GTM_FIFO0_CH6_FILL_LEVEL (*(volatile Ifx_GTM_FIFO_CH_FILL_LEVEL*)0xF0118598u)


#define GTM_FIFO0_CH6_IRQ_EN (*(volatile Ifx_GTM_FIFO_CH_IRQ_EN*)0xF01185A8u)


#define GTM_FIFO0_CH6_IRQ_FORCINT (*(volatile Ifx_GTM_FIFO_CH_IRQ_FORCINT*)0xF01185ACu)


#define GTM_FIFO0_CH6_IRQ_MODE (*(volatile Ifx_GTM_FIFO_CH_IRQ_MODE*)0xF01185B0u)


#define GTM_FIFO0_CH6_IRQ_NOTIFY (*(volatile Ifx_GTM_FIFO_CH_IRQ_NOTIFY*)0xF01185A4u)


#define GTM_FIFO0_CH6_LOWER_WM (*(volatile Ifx_GTM_FIFO_CH_LOWER_WM*)0xF0118590u)


#define GTM_FIFO0_CH6_RD_PTR (*(volatile Ifx_GTM_FIFO_CH_RD_PTR*)0xF01185A0u)


#define GTM_FIFO0_CH6_START_ADDR (*(volatile Ifx_GTM_FIFO_CH_START_ADDR*)0xF0118588u)


#define GTM_FIFO0_CH6_STATUS (*(volatile Ifx_GTM_FIFO_CH_STATUS*)0xF0118594u)


#define GTM_FIFO0_CH6_UPPER_WM (*(volatile Ifx_GTM_FIFO_CH_UPPER_WM*)0xF011858Cu)


#define GTM_FIFO0_CH6_WR_PTR (*(volatile Ifx_GTM_FIFO_CH_WR_PTR*)0xF011859Cu)


#define GTM_FIFO0_CH7_CTRL (*(volatile Ifx_GTM_FIFO_CH_CTRL*)0xF01185C0u)


#define GTM_FIFO0_CH7_EIRQ_EN (*(volatile Ifx_GTM_FIFO_CH_EIRQ_EN*)0xF01185F4u)


#define GTM_FIFO0_CH7_END_ADDR (*(volatile Ifx_GTM_FIFO_CH_END_ADDR*)0xF01185C4u)


#define GTM_FIFO0_CH7_FILL_LEVEL (*(volatile Ifx_GTM_FIFO_CH_FILL_LEVEL*)0xF01185D8u)


#define GTM_FIFO0_CH7_IRQ_EN (*(volatile Ifx_GTM_FIFO_CH_IRQ_EN*)0xF01185E8u)


#define GTM_FIFO0_CH7_IRQ_FORCINT (*(volatile Ifx_GTM_FIFO_CH_IRQ_FORCINT*)0xF01185ECu)


#define GTM_FIFO0_CH7_IRQ_MODE (*(volatile Ifx_GTM_FIFO_CH_IRQ_MODE*)0xF01185F0u)


#define GTM_FIFO0_CH7_IRQ_NOTIFY (*(volatile Ifx_GTM_FIFO_CH_IRQ_NOTIFY*)0xF01185E4u)


#define GTM_FIFO0_CH7_LOWER_WM (*(volatile Ifx_GTM_FIFO_CH_LOWER_WM*)0xF01185D0u)


#define GTM_FIFO0_CH7_RD_PTR (*(volatile Ifx_GTM_FIFO_CH_RD_PTR*)0xF01185E0u)


#define GTM_FIFO0_CH7_START_ADDR (*(volatile Ifx_GTM_FIFO_CH_START_ADDR*)0xF01185C8u)


#define GTM_FIFO0_CH7_STATUS (*(volatile Ifx_GTM_FIFO_CH_STATUS*)0xF01185D4u)


#define GTM_FIFO0_CH7_UPPER_WM (*(volatile Ifx_GTM_FIFO_CH_UPPER_WM*)0xF01185CCu)


#define GTM_FIFO0_CH7_WR_PTR (*(volatile Ifx_GTM_FIFO_CH_WR_PTR*)0xF01185DCu)


#define GTM_ICM_IRQG_0 (*(volatile Ifx_GTM_ICM_IRQG_0*)0xF0100600u)


#define GTM_ICM_IRQG_1 (*(volatile Ifx_GTM_ICM_IRQG_1*)0xF0100604u)


#define GTM_ICM_IRQG_10 (*(volatile Ifx_GTM_ICM_IRQG_10*)0xF0100628u)


#define GTM_ICM_IRQG_2 (*(volatile Ifx_GTM_ICM_IRQG_2*)0xF0100608u)


#define GTM_ICM_IRQG_4 (*(volatile Ifx_GTM_ICM_IRQG_4*)0xF0100610u)


#define GTM_ICM_IRQG_6 (*(volatile Ifx_GTM_ICM_IRQG_6*)0xF0100618u)


#define GTM_ICM_IRQG_7 (*(volatile Ifx_GTM_ICM_IRQG_7*)0xF010061Cu)


#define GTM_ICM_IRQG_9 (*(volatile Ifx_GTM_ICM_IRQG_9*)0xF0100624u)


#define GTM_ICM_IRQG_CEI0 (*(volatile Ifx_GTM_ICM_IRQG_CEI0*)0xF0100634u)


#define GTM_ICM_IRQG_CEI1 (*(volatile Ifx_GTM_ICM_IRQG_CEI1*)0xF0100638u)


#define GTM_ICM_IRQG_CEI3 (*(volatile Ifx_GTM_ICM_IRQG_CEI3*)0xF0100640u)


#define GTM_ICM_IRQG_MEI (*(volatile Ifx_GTM_ICM_IRQG_MEI*)0xF0100630u)


#define GTM_INOUTSEL_CAN_OUTSEL (*(volatile Ifx_GTM_INOUTSEL_CAN_OUTSEL*)0xF019FDA0u)




#define GTM_CANOUTSEL (GTM_INOUTSEL_CAN_OUTSEL)


#define GTM_INOUTSEL_DSADC_INSEL0 (*(volatile Ifx_GTM_INOUTSEL_DSADC_INSEL*)0xF019FD7Cu)




#define GTM_DSADCINSEL0 (GTM_INOUTSEL_DSADC_INSEL0)


#define GTM_INOUTSEL_DSADC_INSEL1 (*(volatile Ifx_GTM_INOUTSEL_DSADC_INSEL*)0xF019FD80u)




#define GTM_DSADCINSEL1 (GTM_INOUTSEL_DSADC_INSEL1)


#define GTM_INOUTSEL_DSADC_INSEL2 (*(volatile Ifx_GTM_INOUTSEL_DSADC_INSEL*)0xF019FD84u)




#define GTM_DSADCINSEL2 (GTM_INOUTSEL_DSADC_INSEL2)


#define GTM_INOUTSEL_DSADC_OUTSEL00 (*(volatile Ifx_GTM_INOUTSEL_DSADC_OUTSEL0*)0xF019FD88u)




#define GTM_DSADCOUTSEL00 (GTM_INOUTSEL_DSADC_OUTSEL00)


#define GTM_INOUTSEL_DSADC_OUTSEL10 (*(volatile Ifx_GTM_INOUTSEL_DSADC_OUTSEL0*)0xF019FD90u)




#define GTM_DSADCOUTSEL10 (GTM_INOUTSEL_DSADC_OUTSEL10)


#define GTM_INOUTSEL_PSI5_OUTSEL0 (*(volatile Ifx_GTM_INOUTSEL_PSI5_OUTSEL0*)0xF019FDA4u)




#define GTM_PSI5OUTSEL0 (GTM_INOUTSEL_PSI5_OUTSEL0)


#define GTM_INOUTSEL_PSI5S_OUTSEL (*(volatile Ifx_GTM_INOUTSEL_PSI5S_OUTSEL*)0xF019FDA8u)




#define GTM_PSI5SOUTSEL (GTM_INOUTSEL_PSI5S_OUTSEL)


#define GTM_INOUTSEL_T_OUTSEL0 (*(volatile Ifx_GTM_INOUTSEL_T_OUTSEL*)0xF019FD30u)




#define GTM_TOUTSEL0 (GTM_INOUTSEL_T_OUTSEL0)


#define GTM_INOUTSEL_T_OUTSEL1 (*(volatile Ifx_GTM_INOUTSEL_T_OUTSEL*)0xF019FD34u)




#define GTM_TOUTSEL1 (GTM_INOUTSEL_T_OUTSEL1)


#define GTM_INOUTSEL_T_OUTSEL10 (*(volatile Ifx_GTM_INOUTSEL_T_OUTSEL*)0xF019FD58u)




#define GTM_TOUTSEL10 (GTM_INOUTSEL_T_OUTSEL10)


#define GTM_INOUTSEL_T_OUTSEL11 (*(volatile Ifx_GTM_INOUTSEL_T_OUTSEL*)0xF019FD5Cu)




#define GTM_TOUTSEL11 (GTM_INOUTSEL_T_OUTSEL11)


#define GTM_INOUTSEL_T_OUTSEL12 (*(volatile Ifx_GTM_INOUTSEL_T_OUTSEL*)0xF019FD60u)




#define GTM_TOUTSEL12 (GTM_INOUTSEL_T_OUTSEL12)


#define GTM_INOUTSEL_T_OUTSEL13 (*(volatile Ifx_GTM_INOUTSEL_T_OUTSEL*)0xF019FD64u)




#define GTM_TOUTSEL13 (GTM_INOUTSEL_T_OUTSEL13)


#define GTM_INOUTSEL_T_OUTSEL14 (*(volatile Ifx_GTM_INOUTSEL_T_OUTSEL*)0xF019FD68u)




#define GTM_TOUTSEL14 (GTM_INOUTSEL_T_OUTSEL14)


#define GTM_INOUTSEL_T_OUTSEL2 (*(volatile Ifx_GTM_INOUTSEL_T_OUTSEL*)0xF019FD38u)




#define GTM_TOUTSEL2 (GTM_INOUTSEL_T_OUTSEL2)


#define GTM_INOUTSEL_T_OUTSEL3 (*(volatile Ifx_GTM_INOUTSEL_T_OUTSEL*)0xF019FD3Cu)




#define GTM_TOUTSEL3 (GTM_INOUTSEL_T_OUTSEL3)


#define GTM_INOUTSEL_T_OUTSEL4 (*(volatile Ifx_GTM_INOUTSEL_T_OUTSEL*)0xF019FD40u)




#define GTM_TOUTSEL4 (GTM_INOUTSEL_T_OUTSEL4)


#define GTM_INOUTSEL_T_OUTSEL5 (*(volatile Ifx_GTM_INOUTSEL_T_OUTSEL*)0xF019FD44u)




#define GTM_TOUTSEL5 (GTM_INOUTSEL_T_OUTSEL5)


#define GTM_INOUTSEL_T_OUTSEL6 (*(volatile Ifx_GTM_INOUTSEL_T_OUTSEL*)0xF019FD48u)




#define GTM_TOUTSEL6 (GTM_INOUTSEL_T_OUTSEL6)


#define GTM_INOUTSEL_T_OUTSEL7 (*(volatile Ifx_GTM_INOUTSEL_T_OUTSEL*)0xF019FD4Cu)




#define GTM_TOUTSEL7 (GTM_INOUTSEL_T_OUTSEL7)


#define GTM_INOUTSEL_T_OUTSEL8 (*(volatile Ifx_GTM_INOUTSEL_T_OUTSEL*)0xF019FD50u)




#define GTM_TOUTSEL8 (GTM_INOUTSEL_T_OUTSEL8)


#define GTM_INOUTSEL_T_OUTSEL9 (*(volatile Ifx_GTM_INOUTSEL_T_OUTSEL*)0xF019FD54u)




#define GTM_TOUTSEL9 (GTM_INOUTSEL_T_OUTSEL9)


#define GTM_INOUTSEL_TIM0_INSEL (*(volatile Ifx_GTM_INOUTSEL_TIM_INSEL*)0xF019FD10u)




#define GTM_TIM0INSEL (GTM_INOUTSEL_TIM0_INSEL)


#define GTM_INOUTSEL_TIM1_INSEL (*(volatile Ifx_GTM_INOUTSEL_TIM_INSEL*)0xF019FD14u)




#define GTM_TIM1INSEL (GTM_INOUTSEL_TIM1_INSEL)


#define GTM_INOUTSEL_TIM2_INSEL (*(volatile Ifx_GTM_INOUTSEL_TIM_INSEL*)0xF019FD18u)




#define GTM_TIM2INSEL (GTM_INOUTSEL_TIM2_INSEL)


#define GTM_INOUTSEL_TIM3_INSEL (*(volatile Ifx_GTM_INOUTSEL_TIM_INSEL*)0xF019FD1Cu)




#define GTM_TIM3INSEL (GTM_INOUTSEL_TIM3_INSEL)


#define GTM_IRQ_EN (*(volatile Ifx_GTM_IRQ_EN*)0xF0100014u)


#define GTM_IRQ_FORCINT (*(volatile Ifx_GTM_IRQ_FORCINT*)0xF0100018u)


#define GTM_IRQ_MODE (*(volatile Ifx_GTM_IRQ_MODE*)0xF010001Cu)


#define GTM_IRQ_NOTIFY (*(volatile Ifx_GTM_IRQ_NOTIFY*)0xF0100010u)


#define GTM_KRST0 (*(volatile Ifx_GTM_KRST0*)0xF019FDF4u)


#define GTM_KRST1 (*(volatile Ifx_GTM_KRST1*)0xF019FDF0u)


#define GTM_KRSTCLR (*(volatile Ifx_GTM_KRSTCLR*)0xF019FDECu)


#define GTM_MAP_CTRL (*(volatile Ifx_GTM_MAP_CTRL*)0xF0100F00u)


#define GTM_MCFG_CTRL (*(volatile Ifx_GTM_MCFG_CTRL*)0xF0100F40u)


#define GTM_MCS0_CH0_ACB (*(volatile Ifx_GTM_MCS_CH_ACB*)0xF0130024u)


#define GTM_MCS0_CH0_CTRG (*(volatile Ifx_GTM_MCS_CH0_CTRG*)0xF0130028u)




#define GTM_MCS0_CTRG (GTM_MCS0_CH0_CTRG)


#define GTM_MCS0_CH0_CTRL (*(volatile Ifx_GTM_MCS_CH_CTRL*)0xF0130020u)


#define GTM_MCS0_CH0_EIRQ_EN (*(volatile Ifx_GTM_MCS_CH_EIRQ_EN*)0xF0130054u)


#define GTM_MCS0_CH0_IRQ_EN (*(volatile Ifx_GTM_MCS_CH_IRQ_EN*)0xF0130048u)


#define GTM_MCS0_CH0_IRQ_FORCINT (*(volatile Ifx_GTM_MCS_CH_IRQ_FORCINT*)0xF013004Cu)


#define GTM_MCS0_CH0_IRQ_MODE (*(volatile Ifx_GTM_MCS_CH_IRQ_MODE*)0xF0130050u)


#define GTM_MCS0_CH0_IRQ_NOTIFY (*(volatile Ifx_GTM_MCS_CH_IRQ_NOTIFY*)0xF0130044u)


#define GTM_MCS0_CH0_PC (*(volatile Ifx_GTM_MCS_CH_PC*)0xF0130040u)


#define GTM_MCS0_CH0_R0 (*(volatile Ifx_GTM_MCS_CH_R0*)0xF0130000u)


#define GTM_MCS0_CH0_R1 (*(volatile Ifx_GTM_MCS_CH_R1*)0xF0130004u)


#define GTM_MCS0_CH0_R2 (*(volatile Ifx_GTM_MCS_CH_R2*)0xF0130008u)


#define GTM_MCS0_CH0_R3 (*(volatile Ifx_GTM_MCS_CH_R3*)0xF013000Cu)


#define GTM_MCS0_CH0_R4 (*(volatile Ifx_GTM_MCS_CH_R4*)0xF0130010u)


#define GTM_MCS0_CH0_R5 (*(volatile Ifx_GTM_MCS_CH_R5*)0xF0130014u)


#define GTM_MCS0_CH0_R6 (*(volatile Ifx_GTM_MCS_CH_R6*)0xF0130018u)


#define GTM_MCS0_CH0_R7 (*(volatile Ifx_GTM_MCS_CH_R7*)0xF013001Cu)


#define GTM_MCS0_CH0_STRG (*(volatile Ifx_GTM_MCS_CH0_STRG*)0xF013002Cu)




#define GTM_MCS0_STRG (GTM_MCS0_CH0_STRG)


#define GTM_MCS0_CH1_ACB (*(volatile Ifx_GTM_MCS_CH_ACB*)0xF01300A4u)


#define GTM_MCS0_CH1_CTRL (*(volatile Ifx_GTM_MCS_CH_CTRL*)0xF01300A0u)


#define GTM_MCS0_CH1_EIRQ_EN (*(volatile Ifx_GTM_MCS_CH_EIRQ_EN*)0xF01300D4u)


#define GTM_MCS0_CH1_IRQ_EN (*(volatile Ifx_GTM_MCS_CH_IRQ_EN*)0xF01300C8u)


#define GTM_MCS0_CH1_IRQ_FORCINT (*(volatile Ifx_GTM_MCS_CH_IRQ_FORCINT*)0xF01300CCu)


#define GTM_MCS0_CH1_IRQ_MODE (*(volatile Ifx_GTM_MCS_CH_IRQ_MODE*)0xF01300D0u)


#define GTM_MCS0_CH1_IRQ_NOTIFY (*(volatile Ifx_GTM_MCS_CH_IRQ_NOTIFY*)0xF01300C4u)


#define GTM_MCS0_CH1_PC (*(volatile Ifx_GTM_MCS_CH_PC*)0xF01300C0u)


#define GTM_MCS0_CH1_R0 (*(volatile Ifx_GTM_MCS_CH_R0*)0xF0130080u)


#define GTM_MCS0_CH1_R1 (*(volatile Ifx_GTM_MCS_CH_R1*)0xF0130084u)


#define GTM_MCS0_CH1_R2 (*(volatile Ifx_GTM_MCS_CH_R2*)0xF0130088u)


#define GTM_MCS0_CH1_R3 (*(volatile Ifx_GTM_MCS_CH_R3*)0xF013008Cu)


#define GTM_MCS0_CH1_R4 (*(volatile Ifx_GTM_MCS_CH_R4*)0xF0130090u)


#define GTM_MCS0_CH1_R5 (*(volatile Ifx_GTM_MCS_CH_R5*)0xF0130094u)


#define GTM_MCS0_CH1_R6 (*(volatile Ifx_GTM_MCS_CH_R6*)0xF0130098u)


#define GTM_MCS0_CH1_R7 (*(volatile Ifx_GTM_MCS_CH_R7*)0xF013009Cu)


#define GTM_MCS0_CH2_ACB (*(volatile Ifx_GTM_MCS_CH_ACB*)0xF0130124u)


#define GTM_MCS0_CH2_CTRL (*(volatile Ifx_GTM_MCS_CH_CTRL*)0xF0130120u)


#define GTM_MCS0_CH2_EIRQ_EN (*(volatile Ifx_GTM_MCS_CH_EIRQ_EN*)0xF0130154u)


#define GTM_MCS0_CH2_IRQ_EN (*(volatile Ifx_GTM_MCS_CH_IRQ_EN*)0xF0130148u)


#define GTM_MCS0_CH2_IRQ_FORCINT (*(volatile Ifx_GTM_MCS_CH_IRQ_FORCINT*)0xF013014Cu)


#define GTM_MCS0_CH2_IRQ_MODE (*(volatile Ifx_GTM_MCS_CH_IRQ_MODE*)0xF0130150u)


#define GTM_MCS0_CH2_IRQ_NOTIFY (*(volatile Ifx_GTM_MCS_CH_IRQ_NOTIFY*)0xF0130144u)


#define GTM_MCS0_CH2_PC (*(volatile Ifx_GTM_MCS_CH_PC*)0xF0130140u)


#define GTM_MCS0_CH2_R0 (*(volatile Ifx_GTM_MCS_CH_R0*)0xF0130100u)


#define GTM_MCS0_CH2_R1 (*(volatile Ifx_GTM_MCS_CH_R1*)0xF0130104u)


#define GTM_MCS0_CH2_R2 (*(volatile Ifx_GTM_MCS_CH_R2*)0xF0130108u)


#define GTM_MCS0_CH2_R3 (*(volatile Ifx_GTM_MCS_CH_R3*)0xF013010Cu)


#define GTM_MCS0_CH2_R4 (*(volatile Ifx_GTM_MCS_CH_R4*)0xF0130110u)


#define GTM_MCS0_CH2_R5 (*(volatile Ifx_GTM_MCS_CH_R5*)0xF0130114u)


#define GTM_MCS0_CH2_R6 (*(volatile Ifx_GTM_MCS_CH_R6*)0xF0130118u)


#define GTM_MCS0_CH2_R7 (*(volatile Ifx_GTM_MCS_CH_R7*)0xF013011Cu)


#define GTM_MCS0_CH3_ACB (*(volatile Ifx_GTM_MCS_CH_ACB*)0xF01301A4u)


#define GTM_MCS0_CH3_CTRL (*(volatile Ifx_GTM_MCS_CH_CTRL*)0xF01301A0u)


#define GTM_MCS0_CH3_EIRQ_EN (*(volatile Ifx_GTM_MCS_CH_EIRQ_EN*)0xF01301D4u)


#define GTM_MCS0_CH3_IRQ_EN (*(volatile Ifx_GTM_MCS_CH_IRQ_EN*)0xF01301C8u)


#define GTM_MCS0_CH3_IRQ_FORCINT (*(volatile Ifx_GTM_MCS_CH_IRQ_FORCINT*)0xF01301CCu)


#define GTM_MCS0_CH3_IRQ_MODE (*(volatile Ifx_GTM_MCS_CH_IRQ_MODE*)0xF01301D0u)


#define GTM_MCS0_CH3_IRQ_NOTIFY (*(volatile Ifx_GTM_MCS_CH_IRQ_NOTIFY*)0xF01301C4u)


#define GTM_MCS0_CH3_PC (*(volatile Ifx_GTM_MCS_CH_PC*)0xF01301C0u)


#define GTM_MCS0_CH3_R0 (*(volatile Ifx_GTM_MCS_CH_R0*)0xF0130180u)


#define GTM_MCS0_CH3_R1 (*(volatile Ifx_GTM_MCS_CH_R1*)0xF0130184u)


#define GTM_MCS0_CH3_R2 (*(volatile Ifx_GTM_MCS_CH_R2*)0xF0130188u)


#define GTM_MCS0_CH3_R3 (*(volatile Ifx_GTM_MCS_CH_R3*)0xF013018Cu)


#define GTM_MCS0_CH3_R4 (*(volatile Ifx_GTM_MCS_CH_R4*)0xF0130190u)


#define GTM_MCS0_CH3_R5 (*(volatile Ifx_GTM_MCS_CH_R5*)0xF0130194u)


#define GTM_MCS0_CH3_R6 (*(volatile Ifx_GTM_MCS_CH_R6*)0xF0130198u)


#define GTM_MCS0_CH3_R7 (*(volatile Ifx_GTM_MCS_CH_R7*)0xF013019Cu)


#define GTM_MCS0_CH4_ACB (*(volatile Ifx_GTM_MCS_CH_ACB*)0xF0130224u)


#define GTM_MCS0_CH4_CTRL (*(volatile Ifx_GTM_MCS_CH_CTRL*)0xF0130220u)


#define GTM_MCS0_CH4_EIRQ_EN (*(volatile Ifx_GTM_MCS_CH_EIRQ_EN*)0xF0130254u)


#define GTM_MCS0_CH4_IRQ_EN (*(volatile Ifx_GTM_MCS_CH_IRQ_EN*)0xF0130248u)


#define GTM_MCS0_CH4_IRQ_FORCINT (*(volatile Ifx_GTM_MCS_CH_IRQ_FORCINT*)0xF013024Cu)


#define GTM_MCS0_CH4_IRQ_MODE (*(volatile Ifx_GTM_MCS_CH_IRQ_MODE*)0xF0130250u)


#define GTM_MCS0_CH4_IRQ_NOTIFY (*(volatile Ifx_GTM_MCS_CH_IRQ_NOTIFY*)0xF0130244u)


#define GTM_MCS0_CH4_PC (*(volatile Ifx_GTM_MCS_CH_PC*)0xF0130240u)


#define GTM_MCS0_CH4_R0 (*(volatile Ifx_GTM_MCS_CH_R0*)0xF0130200u)


#define GTM_MCS0_CH4_R1 (*(volatile Ifx_GTM_MCS_CH_R1*)0xF0130204u)


#define GTM_MCS0_CH4_R2 (*(volatile Ifx_GTM_MCS_CH_R2*)0xF0130208u)


#define GTM_MCS0_CH4_R3 (*(volatile Ifx_GTM_MCS_CH_R3*)0xF013020Cu)


#define GTM_MCS0_CH4_R4 (*(volatile Ifx_GTM_MCS_CH_R4*)0xF0130210u)


#define GTM_MCS0_CH4_R5 (*(volatile Ifx_GTM_MCS_CH_R5*)0xF0130214u)


#define GTM_MCS0_CH4_R6 (*(volatile Ifx_GTM_MCS_CH_R6*)0xF0130218u)


#define GTM_MCS0_CH4_R7 (*(volatile Ifx_GTM_MCS_CH_R7*)0xF013021Cu)


#define GTM_MCS0_CH5_ACB (*(volatile Ifx_GTM_MCS_CH_ACB*)0xF01302A4u)


#define GTM_MCS0_CH5_CTRL (*(volatile Ifx_GTM_MCS_CH_CTRL*)0xF01302A0u)


#define GTM_MCS0_CH5_EIRQ_EN (*(volatile Ifx_GTM_MCS_CH_EIRQ_EN*)0xF01302D4u)


#define GTM_MCS0_CH5_IRQ_EN (*(volatile Ifx_GTM_MCS_CH_IRQ_EN*)0xF01302C8u)


#define GTM_MCS0_CH5_IRQ_FORCINT (*(volatile Ifx_GTM_MCS_CH_IRQ_FORCINT*)0xF01302CCu)


#define GTM_MCS0_CH5_IRQ_MODE (*(volatile Ifx_GTM_MCS_CH_IRQ_MODE*)0xF01302D0u)


#define GTM_MCS0_CH5_IRQ_NOTIFY (*(volatile Ifx_GTM_MCS_CH_IRQ_NOTIFY*)0xF01302C4u)


#define GTM_MCS0_CH5_PC (*(volatile Ifx_GTM_MCS_CH_PC*)0xF01302C0u)


#define GTM_MCS0_CH5_R0 (*(volatile Ifx_GTM_MCS_CH_R0*)0xF0130280u)


#define GTM_MCS0_CH5_R1 (*(volatile Ifx_GTM_MCS_CH_R1*)0xF0130284u)


#define GTM_MCS0_CH5_R2 (*(volatile Ifx_GTM_MCS_CH_R2*)0xF0130288u)


#define GTM_MCS0_CH5_R3 (*(volatile Ifx_GTM_MCS_CH_R3*)0xF013028Cu)


#define GTM_MCS0_CH5_R4 (*(volatile Ifx_GTM_MCS_CH_R4*)0xF0130290u)


#define GTM_MCS0_CH5_R5 (*(volatile Ifx_GTM_MCS_CH_R5*)0xF0130294u)


#define GTM_MCS0_CH5_R6 (*(volatile Ifx_GTM_MCS_CH_R6*)0xF0130298u)


#define GTM_MCS0_CH5_R7 (*(volatile Ifx_GTM_MCS_CH_R7*)0xF013029Cu)


#define GTM_MCS0_CH6_ACB (*(volatile Ifx_GTM_MCS_CH_ACB*)0xF0130324u)


#define GTM_MCS0_CH6_CTRL (*(volatile Ifx_GTM_MCS_CH_CTRL*)0xF0130320u)


#define GTM_MCS0_CH6_EIRQ_EN (*(volatile Ifx_GTM_MCS_CH_EIRQ_EN*)0xF0130354u)


#define GTM_MCS0_CH6_IRQ_EN (*(volatile Ifx_GTM_MCS_CH_IRQ_EN*)0xF0130348u)


#define GTM_MCS0_CH6_IRQ_FORCINT (*(volatile Ifx_GTM_MCS_CH_IRQ_FORCINT*)0xF013034Cu)


#define GTM_MCS0_CH6_IRQ_MODE (*(volatile Ifx_GTM_MCS_CH_IRQ_MODE*)0xF0130350u)


#define GTM_MCS0_CH6_IRQ_NOTIFY (*(volatile Ifx_GTM_MCS_CH_IRQ_NOTIFY*)0xF0130344u)


#define GTM_MCS0_CH6_PC (*(volatile Ifx_GTM_MCS_CH_PC*)0xF0130340u)


#define GTM_MCS0_CH6_R0 (*(volatile Ifx_GTM_MCS_CH_R0*)0xF0130300u)


#define GTM_MCS0_CH6_R1 (*(volatile Ifx_GTM_MCS_CH_R1*)0xF0130304u)


#define GTM_MCS0_CH6_R2 (*(volatile Ifx_GTM_MCS_CH_R2*)0xF0130308u)


#define GTM_MCS0_CH6_R3 (*(volatile Ifx_GTM_MCS_CH_R3*)0xF013030Cu)


#define GTM_MCS0_CH6_R4 (*(volatile Ifx_GTM_MCS_CH_R4*)0xF0130310u)


#define GTM_MCS0_CH6_R5 (*(volatile Ifx_GTM_MCS_CH_R5*)0xF0130314u)


#define GTM_MCS0_CH6_R6 (*(volatile Ifx_GTM_MCS_CH_R6*)0xF0130318u)


#define GTM_MCS0_CH6_R7 (*(volatile Ifx_GTM_MCS_CH_R7*)0xF013031Cu)


#define GTM_MCS0_CH7_ACB (*(volatile Ifx_GTM_MCS_CH_ACB*)0xF01303A4u)


#define GTM_MCS0_CH7_CTRL (*(volatile Ifx_GTM_MCS_CH_CTRL*)0xF01303A0u)


#define GTM_MCS0_CH7_EIRQ_EN (*(volatile Ifx_GTM_MCS_CH_EIRQ_EN*)0xF01303D4u)


#define GTM_MCS0_CH7_IRQ_EN (*(volatile Ifx_GTM_MCS_CH_IRQ_EN*)0xF01303C8u)


#define GTM_MCS0_CH7_IRQ_FORCINT (*(volatile Ifx_GTM_MCS_CH_IRQ_FORCINT*)0xF01303CCu)


#define GTM_MCS0_CH7_IRQ_MODE (*(volatile Ifx_GTM_MCS_CH_IRQ_MODE*)0xF01303D0u)


#define GTM_MCS0_CH7_IRQ_NOTIFY (*(volatile Ifx_GTM_MCS_CH_IRQ_NOTIFY*)0xF01303C4u)


#define GTM_MCS0_CH7_PC (*(volatile Ifx_GTM_MCS_CH_PC*)0xF01303C0u)


#define GTM_MCS0_CH7_R0 (*(volatile Ifx_GTM_MCS_CH_R0*)0xF0130380u)


#define GTM_MCS0_CH7_R1 (*(volatile Ifx_GTM_MCS_CH_R1*)0xF0130384u)


#define GTM_MCS0_CH7_R2 (*(volatile Ifx_GTM_MCS_CH_R2*)0xF0130388u)


#define GTM_MCS0_CH7_R3 (*(volatile Ifx_GTM_MCS_CH_R3*)0xF013038Cu)


#define GTM_MCS0_CH7_R4 (*(volatile Ifx_GTM_MCS_CH_R4*)0xF0130390u)


#define GTM_MCS0_CH7_R5 (*(volatile Ifx_GTM_MCS_CH_R5*)0xF0130394u)


#define GTM_MCS0_CH7_R6 (*(volatile Ifx_GTM_MCS_CH_R6*)0xF0130398u)


#define GTM_MCS0_CH7_R7 (*(volatile Ifx_GTM_MCS_CH_R7*)0xF013039Cu)


#define GTM_MCS0_CTRL (*(volatile Ifx_GTM_MCS_CTRL*)0xF0130074u)


#define GTM_MCS0_ERR (*(volatile Ifx_GTM_MCS_ERR*)0xF013007Cu)


#define GTM_MCS0_RST (*(volatile Ifx_GTM_MCS_RST*)0xF0130078u)


#define GTM_MCS1_CH0_ACB (*(volatile Ifx_GTM_MCS_CH_ACB*)0xF0131024u)


#define GTM_MCS1_CH0_CTRG (*(volatile Ifx_GTM_MCS_CH0_CTRG*)0xF0131028u)




#define GTM_MCS1_CTRG (GTM_MCS1_CH0_CTRG)


#define GTM_MCS1_CH0_CTRL (*(volatile Ifx_GTM_MCS_CH_CTRL*)0xF0131020u)


#define GTM_MCS1_CH0_EIRQ_EN (*(volatile Ifx_GTM_MCS_CH_EIRQ_EN*)0xF0131054u)


#define GTM_MCS1_CH0_IRQ_EN (*(volatile Ifx_GTM_MCS_CH_IRQ_EN*)0xF0131048u)


#define GTM_MCS1_CH0_IRQ_FORCINT (*(volatile Ifx_GTM_MCS_CH_IRQ_FORCINT*)0xF013104Cu)


#define GTM_MCS1_CH0_IRQ_MODE (*(volatile Ifx_GTM_MCS_CH_IRQ_MODE*)0xF0131050u)


#define GTM_MCS1_CH0_IRQ_NOTIFY (*(volatile Ifx_GTM_MCS_CH_IRQ_NOTIFY*)0xF0131044u)


#define GTM_MCS1_CH0_PC (*(volatile Ifx_GTM_MCS_CH_PC*)0xF0131040u)


#define GTM_MCS1_CH0_R0 (*(volatile Ifx_GTM_MCS_CH_R0*)0xF0131000u)


#define GTM_MCS1_CH0_R1 (*(volatile Ifx_GTM_MCS_CH_R1*)0xF0131004u)


#define GTM_MCS1_CH0_R2 (*(volatile Ifx_GTM_MCS_CH_R2*)0xF0131008u)


#define GTM_MCS1_CH0_R3 (*(volatile Ifx_GTM_MCS_CH_R3*)0xF013100Cu)


#define GTM_MCS1_CH0_R4 (*(volatile Ifx_GTM_MCS_CH_R4*)0xF0131010u)


#define GTM_MCS1_CH0_R5 (*(volatile Ifx_GTM_MCS_CH_R5*)0xF0131014u)


#define GTM_MCS1_CH0_R6 (*(volatile Ifx_GTM_MCS_CH_R6*)0xF0131018u)


#define GTM_MCS1_CH0_R7 (*(volatile Ifx_GTM_MCS_CH_R7*)0xF013101Cu)


#define GTM_MCS1_CH0_STRG (*(volatile Ifx_GTM_MCS_CH0_STRG*)0xF013102Cu)




#define GTM_MCS1_STRG (GTM_MCS1_CH0_STRG)


#define GTM_MCS1_CH1_ACB (*(volatile Ifx_GTM_MCS_CH_ACB*)0xF01310A4u)


#define GTM_MCS1_CH1_CTRL (*(volatile Ifx_GTM_MCS_CH_CTRL*)0xF01310A0u)


#define GTM_MCS1_CH1_EIRQ_EN (*(volatile Ifx_GTM_MCS_CH_EIRQ_EN*)0xF01310D4u)


#define GTM_MCS1_CH1_IRQ_EN (*(volatile Ifx_GTM_MCS_CH_IRQ_EN*)0xF01310C8u)


#define GTM_MCS1_CH1_IRQ_FORCINT (*(volatile Ifx_GTM_MCS_CH_IRQ_FORCINT*)0xF01310CCu)


#define GTM_MCS1_CH1_IRQ_MODE (*(volatile Ifx_GTM_MCS_CH_IRQ_MODE*)0xF01310D0u)


#define GTM_MCS1_CH1_IRQ_NOTIFY (*(volatile Ifx_GTM_MCS_CH_IRQ_NOTIFY*)0xF01310C4u)


#define GTM_MCS1_CH1_PC (*(volatile Ifx_GTM_MCS_CH_PC*)0xF01310C0u)


#define GTM_MCS1_CH1_R0 (*(volatile Ifx_GTM_MCS_CH_R0*)0xF0131080u)


#define GTM_MCS1_CH1_R1 (*(volatile Ifx_GTM_MCS_CH_R1*)0xF0131084u)


#define GTM_MCS1_CH1_R2 (*(volatile Ifx_GTM_MCS_CH_R2*)0xF0131088u)


#define GTM_MCS1_CH1_R3 (*(volatile Ifx_GTM_MCS_CH_R3*)0xF013108Cu)


#define GTM_MCS1_CH1_R4 (*(volatile Ifx_GTM_MCS_CH_R4*)0xF0131090u)


#define GTM_MCS1_CH1_R5 (*(volatile Ifx_GTM_MCS_CH_R5*)0xF0131094u)


#define GTM_MCS1_CH1_R6 (*(volatile Ifx_GTM_MCS_CH_R6*)0xF0131098u)


#define GTM_MCS1_CH1_R7 (*(volatile Ifx_GTM_MCS_CH_R7*)0xF013109Cu)


#define GTM_MCS1_CH2_ACB (*(volatile Ifx_GTM_MCS_CH_ACB*)0xF0131124u)


#define GTM_MCS1_CH2_CTRL (*(volatile Ifx_GTM_MCS_CH_CTRL*)0xF0131120u)


#define GTM_MCS1_CH2_EIRQ_EN (*(volatile Ifx_GTM_MCS_CH_EIRQ_EN*)0xF0131154u)


#define GTM_MCS1_CH2_IRQ_EN (*(volatile Ifx_GTM_MCS_CH_IRQ_EN*)0xF0131148u)


#define GTM_MCS1_CH2_IRQ_FORCINT (*(volatile Ifx_GTM_MCS_CH_IRQ_FORCINT*)0xF013114Cu)


#define GTM_MCS1_CH2_IRQ_MODE (*(volatile Ifx_GTM_MCS_CH_IRQ_MODE*)0xF0131150u)


#define GTM_MCS1_CH2_IRQ_NOTIFY (*(volatile Ifx_GTM_MCS_CH_IRQ_NOTIFY*)0xF0131144u)


#define GTM_MCS1_CH2_PC (*(volatile Ifx_GTM_MCS_CH_PC*)0xF0131140u)


#define GTM_MCS1_CH2_R0 (*(volatile Ifx_GTM_MCS_CH_R0*)0xF0131100u)


#define GTM_MCS1_CH2_R1 (*(volatile Ifx_GTM_MCS_CH_R1*)0xF0131104u)


#define GTM_MCS1_CH2_R2 (*(volatile Ifx_GTM_MCS_CH_R2*)0xF0131108u)


#define GTM_MCS1_CH2_R3 (*(volatile Ifx_GTM_MCS_CH_R3*)0xF013110Cu)


#define GTM_MCS1_CH2_R4 (*(volatile Ifx_GTM_MCS_CH_R4*)0xF0131110u)


#define GTM_MCS1_CH2_R5 (*(volatile Ifx_GTM_MCS_CH_R5*)0xF0131114u)


#define GTM_MCS1_CH2_R6 (*(volatile Ifx_GTM_MCS_CH_R6*)0xF0131118u)


#define GTM_MCS1_CH2_R7 (*(volatile Ifx_GTM_MCS_CH_R7*)0xF013111Cu)


#define GTM_MCS1_CH3_ACB (*(volatile Ifx_GTM_MCS_CH_ACB*)0xF01311A4u)


#define GTM_MCS1_CH3_CTRL (*(volatile Ifx_GTM_MCS_CH_CTRL*)0xF01311A0u)


#define GTM_MCS1_CH3_EIRQ_EN (*(volatile Ifx_GTM_MCS_CH_EIRQ_EN*)0xF01311D4u)


#define GTM_MCS1_CH3_IRQ_EN (*(volatile Ifx_GTM_MCS_CH_IRQ_EN*)0xF01311C8u)


#define GTM_MCS1_CH3_IRQ_FORCINT (*(volatile Ifx_GTM_MCS_CH_IRQ_FORCINT*)0xF01311CCu)


#define GTM_MCS1_CH3_IRQ_MODE (*(volatile Ifx_GTM_MCS_CH_IRQ_MODE*)0xF01311D0u)


#define GTM_MCS1_CH3_IRQ_NOTIFY (*(volatile Ifx_GTM_MCS_CH_IRQ_NOTIFY*)0xF01311C4u)


#define GTM_MCS1_CH3_PC (*(volatile Ifx_GTM_MCS_CH_PC*)0xF01311C0u)


#define GTM_MCS1_CH3_R0 (*(volatile Ifx_GTM_MCS_CH_R0*)0xF0131180u)


#define GTM_MCS1_CH3_R1 (*(volatile Ifx_GTM_MCS_CH_R1*)0xF0131184u)


#define GTM_MCS1_CH3_R2 (*(volatile Ifx_GTM_MCS_CH_R2*)0xF0131188u)


#define GTM_MCS1_CH3_R3 (*(volatile Ifx_GTM_MCS_CH_R3*)0xF013118Cu)


#define GTM_MCS1_CH3_R4 (*(volatile Ifx_GTM_MCS_CH_R4*)0xF0131190u)


#define GTM_MCS1_CH3_R5 (*(volatile Ifx_GTM_MCS_CH_R5*)0xF0131194u)


#define GTM_MCS1_CH3_R6 (*(volatile Ifx_GTM_MCS_CH_R6*)0xF0131198u)


#define GTM_MCS1_CH3_R7 (*(volatile Ifx_GTM_MCS_CH_R7*)0xF013119Cu)


#define GTM_MCS1_CH4_ACB (*(volatile Ifx_GTM_MCS_CH_ACB*)0xF0131224u)


#define GTM_MCS1_CH4_CTRL (*(volatile Ifx_GTM_MCS_CH_CTRL*)0xF0131220u)


#define GTM_MCS1_CH4_EIRQ_EN (*(volatile Ifx_GTM_MCS_CH_EIRQ_EN*)0xF0131254u)


#define GTM_MCS1_CH4_IRQ_EN (*(volatile Ifx_GTM_MCS_CH_IRQ_EN*)0xF0131248u)


#define GTM_MCS1_CH4_IRQ_FORCINT (*(volatile Ifx_GTM_MCS_CH_IRQ_FORCINT*)0xF013124Cu)


#define GTM_MCS1_CH4_IRQ_MODE (*(volatile Ifx_GTM_MCS_CH_IRQ_MODE*)0xF0131250u)


#define GTM_MCS1_CH4_IRQ_NOTIFY (*(volatile Ifx_GTM_MCS_CH_IRQ_NOTIFY*)0xF0131244u)


#define GTM_MCS1_CH4_PC (*(volatile Ifx_GTM_MCS_CH_PC*)0xF0131240u)


#define GTM_MCS1_CH4_R0 (*(volatile Ifx_GTM_MCS_CH_R0*)0xF0131200u)


#define GTM_MCS1_CH4_R1 (*(volatile Ifx_GTM_MCS_CH_R1*)0xF0131204u)


#define GTM_MCS1_CH4_R2 (*(volatile Ifx_GTM_MCS_CH_R2*)0xF0131208u)


#define GTM_MCS1_CH4_R3 (*(volatile Ifx_GTM_MCS_CH_R3*)0xF013120Cu)


#define GTM_MCS1_CH4_R4 (*(volatile Ifx_GTM_MCS_CH_R4*)0xF0131210u)


#define GTM_MCS1_CH4_R5 (*(volatile Ifx_GTM_MCS_CH_R5*)0xF0131214u)


#define GTM_MCS1_CH4_R6 (*(volatile Ifx_GTM_MCS_CH_R6*)0xF0131218u)


#define GTM_MCS1_CH4_R7 (*(volatile Ifx_GTM_MCS_CH_R7*)0xF013121Cu)


#define GTM_MCS1_CH5_ACB (*(volatile Ifx_GTM_MCS_CH_ACB*)0xF01312A4u)


#define GTM_MCS1_CH5_CTRL (*(volatile Ifx_GTM_MCS_CH_CTRL*)0xF01312A0u)


#define GTM_MCS1_CH5_EIRQ_EN (*(volatile Ifx_GTM_MCS_CH_EIRQ_EN*)0xF01312D4u)


#define GTM_MCS1_CH5_IRQ_EN (*(volatile Ifx_GTM_MCS_CH_IRQ_EN*)0xF01312C8u)


#define GTM_MCS1_CH5_IRQ_FORCINT (*(volatile Ifx_GTM_MCS_CH_IRQ_FORCINT*)0xF01312CCu)


#define GTM_MCS1_CH5_IRQ_MODE (*(volatile Ifx_GTM_MCS_CH_IRQ_MODE*)0xF01312D0u)


#define GTM_MCS1_CH5_IRQ_NOTIFY (*(volatile Ifx_GTM_MCS_CH_IRQ_NOTIFY*)0xF01312C4u)


#define GTM_MCS1_CH5_PC (*(volatile Ifx_GTM_MCS_CH_PC*)0xF01312C0u)


#define GTM_MCS1_CH5_R0 (*(volatile Ifx_GTM_MCS_CH_R0*)0xF0131280u)


#define GTM_MCS1_CH5_R1 (*(volatile Ifx_GTM_MCS_CH_R1*)0xF0131284u)


#define GTM_MCS1_CH5_R2 (*(volatile Ifx_GTM_MCS_CH_R2*)0xF0131288u)


#define GTM_MCS1_CH5_R3 (*(volatile Ifx_GTM_MCS_CH_R3*)0xF013128Cu)


#define GTM_MCS1_CH5_R4 (*(volatile Ifx_GTM_MCS_CH_R4*)0xF0131290u)


#define GTM_MCS1_CH5_R5 (*(volatile Ifx_GTM_MCS_CH_R5*)0xF0131294u)


#define GTM_MCS1_CH5_R6 (*(volatile Ifx_GTM_MCS_CH_R6*)0xF0131298u)


#define GTM_MCS1_CH5_R7 (*(volatile Ifx_GTM_MCS_CH_R7*)0xF013129Cu)


#define GTM_MCS1_CH6_ACB (*(volatile Ifx_GTM_MCS_CH_ACB*)0xF0131324u)


#define GTM_MCS1_CH6_CTRL (*(volatile Ifx_GTM_MCS_CH_CTRL*)0xF0131320u)


#define GTM_MCS1_CH6_EIRQ_EN (*(volatile Ifx_GTM_MCS_CH_EIRQ_EN*)0xF0131354u)


#define GTM_MCS1_CH6_IRQ_EN (*(volatile Ifx_GTM_MCS_CH_IRQ_EN*)0xF0131348u)


#define GTM_MCS1_CH6_IRQ_FORCINT (*(volatile Ifx_GTM_MCS_CH_IRQ_FORCINT*)0xF013134Cu)


#define GTM_MCS1_CH6_IRQ_MODE (*(volatile Ifx_GTM_MCS_CH_IRQ_MODE*)0xF0131350u)


#define GTM_MCS1_CH6_IRQ_NOTIFY (*(volatile Ifx_GTM_MCS_CH_IRQ_NOTIFY*)0xF0131344u)


#define GTM_MCS1_CH6_PC (*(volatile Ifx_GTM_MCS_CH_PC*)0xF0131340u)


#define GTM_MCS1_CH6_R0 (*(volatile Ifx_GTM_MCS_CH_R0*)0xF0131300u)


#define GTM_MCS1_CH6_R1 (*(volatile Ifx_GTM_MCS_CH_R1*)0xF0131304u)


#define GTM_MCS1_CH6_R2 (*(volatile Ifx_GTM_MCS_CH_R2*)0xF0131308u)


#define GTM_MCS1_CH6_R3 (*(volatile Ifx_GTM_MCS_CH_R3*)0xF013130Cu)


#define GTM_MCS1_CH6_R4 (*(volatile Ifx_GTM_MCS_CH_R4*)0xF0131310u)


#define GTM_MCS1_CH6_R5 (*(volatile Ifx_GTM_MCS_CH_R5*)0xF0131314u)


#define GTM_MCS1_CH6_R6 (*(volatile Ifx_GTM_MCS_CH_R6*)0xF0131318u)


#define GTM_MCS1_CH6_R7 (*(volatile Ifx_GTM_MCS_CH_R7*)0xF013131Cu)


#define GTM_MCS1_CH7_ACB (*(volatile Ifx_GTM_MCS_CH_ACB*)0xF01313A4u)


#define GTM_MCS1_CH7_CTRL (*(volatile Ifx_GTM_MCS_CH_CTRL*)0xF01313A0u)


#define GTM_MCS1_CH7_EIRQ_EN (*(volatile Ifx_GTM_MCS_CH_EIRQ_EN*)0xF01313D4u)


#define GTM_MCS1_CH7_IRQ_EN (*(volatile Ifx_GTM_MCS_CH_IRQ_EN*)0xF01313C8u)


#define GTM_MCS1_CH7_IRQ_FORCINT (*(volatile Ifx_GTM_MCS_CH_IRQ_FORCINT*)0xF01313CCu)


#define GTM_MCS1_CH7_IRQ_MODE (*(volatile Ifx_GTM_MCS_CH_IRQ_MODE*)0xF01313D0u)


#define GTM_MCS1_CH7_IRQ_NOTIFY (*(volatile Ifx_GTM_MCS_CH_IRQ_NOTIFY*)0xF01313C4u)


#define GTM_MCS1_CH7_PC (*(volatile Ifx_GTM_MCS_CH_PC*)0xF01313C0u)


#define GTM_MCS1_CH7_R0 (*(volatile Ifx_GTM_MCS_CH_R0*)0xF0131380u)


#define GTM_MCS1_CH7_R1 (*(volatile Ifx_GTM_MCS_CH_R1*)0xF0131384u)


#define GTM_MCS1_CH7_R2 (*(volatile Ifx_GTM_MCS_CH_R2*)0xF0131388u)


#define GTM_MCS1_CH7_R3 (*(volatile Ifx_GTM_MCS_CH_R3*)0xF013138Cu)


#define GTM_MCS1_CH7_R4 (*(volatile Ifx_GTM_MCS_CH_R4*)0xF0131390u)


#define GTM_MCS1_CH7_R5 (*(volatile Ifx_GTM_MCS_CH_R5*)0xF0131394u)


#define GTM_MCS1_CH7_R6 (*(volatile Ifx_GTM_MCS_CH_R6*)0xF0131398u)


#define GTM_MCS1_CH7_R7 (*(volatile Ifx_GTM_MCS_CH_R7*)0xF013139Cu)


#define GTM_MCS1_CTRL (*(volatile Ifx_GTM_MCS_CTRL*)0xF0131074u)


#define GTM_MCS1_ERR (*(volatile Ifx_GTM_MCS_ERR*)0xF013107Cu)


#define GTM_MCS1_RST (*(volatile Ifx_GTM_MCS_RST*)0xF0131078u)


#define GTM_MCS2_CH0_ACB (*(volatile Ifx_GTM_MCS_CH_ACB*)0xF0132024u)


#define GTM_MCS2_CH0_CTRG (*(volatile Ifx_GTM_MCS_CH0_CTRG*)0xF0132028u)




#define GTM_MCS2_CTRG (GTM_MCS2_CH0_CTRG)


#define GTM_MCS2_CH0_CTRL (*(volatile Ifx_GTM_MCS_CH_CTRL*)0xF0132020u)


#define GTM_MCS2_CH0_EIRQ_EN (*(volatile Ifx_GTM_MCS_CH_EIRQ_EN*)0xF0132054u)


#define GTM_MCS2_CH0_IRQ_EN (*(volatile Ifx_GTM_MCS_CH_IRQ_EN*)0xF0132048u)


#define GTM_MCS2_CH0_IRQ_FORCINT (*(volatile Ifx_GTM_MCS_CH_IRQ_FORCINT*)0xF013204Cu)


#define GTM_MCS2_CH0_IRQ_MODE (*(volatile Ifx_GTM_MCS_CH_IRQ_MODE*)0xF0132050u)


#define GTM_MCS2_CH0_IRQ_NOTIFY (*(volatile Ifx_GTM_MCS_CH_IRQ_NOTIFY*)0xF0132044u)


#define GTM_MCS2_CH0_PC (*(volatile Ifx_GTM_MCS_CH_PC*)0xF0132040u)


#define GTM_MCS2_CH0_R0 (*(volatile Ifx_GTM_MCS_CH_R0*)0xF0132000u)


#define GTM_MCS2_CH0_R1 (*(volatile Ifx_GTM_MCS_CH_R1*)0xF0132004u)


#define GTM_MCS2_CH0_R2 (*(volatile Ifx_GTM_MCS_CH_R2*)0xF0132008u)


#define GTM_MCS2_CH0_R3 (*(volatile Ifx_GTM_MCS_CH_R3*)0xF013200Cu)


#define GTM_MCS2_CH0_R4 (*(volatile Ifx_GTM_MCS_CH_R4*)0xF0132010u)


#define GTM_MCS2_CH0_R5 (*(volatile Ifx_GTM_MCS_CH_R5*)0xF0132014u)


#define GTM_MCS2_CH0_R6 (*(volatile Ifx_GTM_MCS_CH_R6*)0xF0132018u)


#define GTM_MCS2_CH0_R7 (*(volatile Ifx_GTM_MCS_CH_R7*)0xF013201Cu)


#define GTM_MCS2_CH0_STRG (*(volatile Ifx_GTM_MCS_CH0_STRG*)0xF013202Cu)




#define GTM_MCS2_STRG (GTM_MCS2_CH0_STRG)


#define GTM_MCS2_CH1_ACB (*(volatile Ifx_GTM_MCS_CH_ACB*)0xF01320A4u)


#define GTM_MCS2_CH1_CTRL (*(volatile Ifx_GTM_MCS_CH_CTRL*)0xF01320A0u)


#define GTM_MCS2_CH1_EIRQ_EN (*(volatile Ifx_GTM_MCS_CH_EIRQ_EN*)0xF01320D4u)


#define GTM_MCS2_CH1_IRQ_EN (*(volatile Ifx_GTM_MCS_CH_IRQ_EN*)0xF01320C8u)


#define GTM_MCS2_CH1_IRQ_FORCINT (*(volatile Ifx_GTM_MCS_CH_IRQ_FORCINT*)0xF01320CCu)


#define GTM_MCS2_CH1_IRQ_MODE (*(volatile Ifx_GTM_MCS_CH_IRQ_MODE*)0xF01320D0u)


#define GTM_MCS2_CH1_IRQ_NOTIFY (*(volatile Ifx_GTM_MCS_CH_IRQ_NOTIFY*)0xF01320C4u)


#define GTM_MCS2_CH1_PC (*(volatile Ifx_GTM_MCS_CH_PC*)0xF01320C0u)


#define GTM_MCS2_CH1_R0 (*(volatile Ifx_GTM_MCS_CH_R0*)0xF0132080u)


#define GTM_MCS2_CH1_R1 (*(volatile Ifx_GTM_MCS_CH_R1*)0xF0132084u)


#define GTM_MCS2_CH1_R2 (*(volatile Ifx_GTM_MCS_CH_R2*)0xF0132088u)


#define GTM_MCS2_CH1_R3 (*(volatile Ifx_GTM_MCS_CH_R3*)0xF013208Cu)


#define GTM_MCS2_CH1_R4 (*(volatile Ifx_GTM_MCS_CH_R4*)0xF0132090u)


#define GTM_MCS2_CH1_R5 (*(volatile Ifx_GTM_MCS_CH_R5*)0xF0132094u)


#define GTM_MCS2_CH1_R6 (*(volatile Ifx_GTM_MCS_CH_R6*)0xF0132098u)


#define GTM_MCS2_CH1_R7 (*(volatile Ifx_GTM_MCS_CH_R7*)0xF013209Cu)


#define GTM_MCS2_CH2_ACB (*(volatile Ifx_GTM_MCS_CH_ACB*)0xF0132124u)


#define GTM_MCS2_CH2_CTRL (*(volatile Ifx_GTM_MCS_CH_CTRL*)0xF0132120u)


#define GTM_MCS2_CH2_EIRQ_EN (*(volatile Ifx_GTM_MCS_CH_EIRQ_EN*)0xF0132154u)


#define GTM_MCS2_CH2_IRQ_EN (*(volatile Ifx_GTM_MCS_CH_IRQ_EN*)0xF0132148u)


#define GTM_MCS2_CH2_IRQ_FORCINT (*(volatile Ifx_GTM_MCS_CH_IRQ_FORCINT*)0xF013214Cu)


#define GTM_MCS2_CH2_IRQ_MODE (*(volatile Ifx_GTM_MCS_CH_IRQ_MODE*)0xF0132150u)


#define GTM_MCS2_CH2_IRQ_NOTIFY (*(volatile Ifx_GTM_MCS_CH_IRQ_NOTIFY*)0xF0132144u)


#define GTM_MCS2_CH2_PC (*(volatile Ifx_GTM_MCS_CH_PC*)0xF0132140u)


#define GTM_MCS2_CH2_R0 (*(volatile Ifx_GTM_MCS_CH_R0*)0xF0132100u)


#define GTM_MCS2_CH2_R1 (*(volatile Ifx_GTM_MCS_CH_R1*)0xF0132104u)


#define GTM_MCS2_CH2_R2 (*(volatile Ifx_GTM_MCS_CH_R2*)0xF0132108u)


#define GTM_MCS2_CH2_R3 (*(volatile Ifx_GTM_MCS_CH_R3*)0xF013210Cu)


#define GTM_MCS2_CH2_R4 (*(volatile Ifx_GTM_MCS_CH_R4*)0xF0132110u)


#define GTM_MCS2_CH2_R5 (*(volatile Ifx_GTM_MCS_CH_R5*)0xF0132114u)


#define GTM_MCS2_CH2_R6 (*(volatile Ifx_GTM_MCS_CH_R6*)0xF0132118u)


#define GTM_MCS2_CH2_R7 (*(volatile Ifx_GTM_MCS_CH_R7*)0xF013211Cu)


#define GTM_MCS2_CH3_ACB (*(volatile Ifx_GTM_MCS_CH_ACB*)0xF01321A4u)


#define GTM_MCS2_CH3_CTRL (*(volatile Ifx_GTM_MCS_CH_CTRL*)0xF01321A0u)


#define GTM_MCS2_CH3_EIRQ_EN (*(volatile Ifx_GTM_MCS_CH_EIRQ_EN*)0xF01321D4u)


#define GTM_MCS2_CH3_IRQ_EN (*(volatile Ifx_GTM_MCS_CH_IRQ_EN*)0xF01321C8u)


#define GTM_MCS2_CH3_IRQ_FORCINT (*(volatile Ifx_GTM_MCS_CH_IRQ_FORCINT*)0xF01321CCu)


#define GTM_MCS2_CH3_IRQ_MODE (*(volatile Ifx_GTM_MCS_CH_IRQ_MODE*)0xF01321D0u)


#define GTM_MCS2_CH3_IRQ_NOTIFY (*(volatile Ifx_GTM_MCS_CH_IRQ_NOTIFY*)0xF01321C4u)


#define GTM_MCS2_CH3_PC (*(volatile Ifx_GTM_MCS_CH_PC*)0xF01321C0u)


#define GTM_MCS2_CH3_R0 (*(volatile Ifx_GTM_MCS_CH_R0*)0xF0132180u)


#define GTM_MCS2_CH3_R1 (*(volatile Ifx_GTM_MCS_CH_R1*)0xF0132184u)


#define GTM_MCS2_CH3_R2 (*(volatile Ifx_GTM_MCS_CH_R2*)0xF0132188u)


#define GTM_MCS2_CH3_R3 (*(volatile Ifx_GTM_MCS_CH_R3*)0xF013218Cu)


#define GTM_MCS2_CH3_R4 (*(volatile Ifx_GTM_MCS_CH_R4*)0xF0132190u)


#define GTM_MCS2_CH3_R5 (*(volatile Ifx_GTM_MCS_CH_R5*)0xF0132194u)


#define GTM_MCS2_CH3_R6 (*(volatile Ifx_GTM_MCS_CH_R6*)0xF0132198u)


#define GTM_MCS2_CH3_R7 (*(volatile Ifx_GTM_MCS_CH_R7*)0xF013219Cu)


#define GTM_MCS2_CH4_ACB (*(volatile Ifx_GTM_MCS_CH_ACB*)0xF0132224u)


#define GTM_MCS2_CH4_CTRL (*(volatile Ifx_GTM_MCS_CH_CTRL*)0xF0132220u)


#define GTM_MCS2_CH4_EIRQ_EN (*(volatile Ifx_GTM_MCS_CH_EIRQ_EN*)0xF0132254u)


#define GTM_MCS2_CH4_IRQ_EN (*(volatile Ifx_GTM_MCS_CH_IRQ_EN*)0xF0132248u)


#define GTM_MCS2_CH4_IRQ_FORCINT (*(volatile Ifx_GTM_MCS_CH_IRQ_FORCINT*)0xF013224Cu)


#define GTM_MCS2_CH4_IRQ_MODE (*(volatile Ifx_GTM_MCS_CH_IRQ_MODE*)0xF0132250u)


#define GTM_MCS2_CH4_IRQ_NOTIFY (*(volatile Ifx_GTM_MCS_CH_IRQ_NOTIFY*)0xF0132244u)


#define GTM_MCS2_CH4_PC (*(volatile Ifx_GTM_MCS_CH_PC*)0xF0132240u)


#define GTM_MCS2_CH4_R0 (*(volatile Ifx_GTM_MCS_CH_R0*)0xF0132200u)


#define GTM_MCS2_CH4_R1 (*(volatile Ifx_GTM_MCS_CH_R1*)0xF0132204u)


#define GTM_MCS2_CH4_R2 (*(volatile Ifx_GTM_MCS_CH_R2*)0xF0132208u)


#define GTM_MCS2_CH4_R3 (*(volatile Ifx_GTM_MCS_CH_R3*)0xF013220Cu)


#define GTM_MCS2_CH4_R4 (*(volatile Ifx_GTM_MCS_CH_R4*)0xF0132210u)


#define GTM_MCS2_CH4_R5 (*(volatile Ifx_GTM_MCS_CH_R5*)0xF0132214u)


#define GTM_MCS2_CH4_R6 (*(volatile Ifx_GTM_MCS_CH_R6*)0xF0132218u)


#define GTM_MCS2_CH4_R7 (*(volatile Ifx_GTM_MCS_CH_R7*)0xF013221Cu)


#define GTM_MCS2_CH5_ACB (*(volatile Ifx_GTM_MCS_CH_ACB*)0xF01322A4u)


#define GTM_MCS2_CH5_CTRL (*(volatile Ifx_GTM_MCS_CH_CTRL*)0xF01322A0u)


#define GTM_MCS2_CH5_EIRQ_EN (*(volatile Ifx_GTM_MCS_CH_EIRQ_EN*)0xF01322D4u)


#define GTM_MCS2_CH5_IRQ_EN (*(volatile Ifx_GTM_MCS_CH_IRQ_EN*)0xF01322C8u)


#define GTM_MCS2_CH5_IRQ_FORCINT (*(volatile Ifx_GTM_MCS_CH_IRQ_FORCINT*)0xF01322CCu)


#define GTM_MCS2_CH5_IRQ_MODE (*(volatile Ifx_GTM_MCS_CH_IRQ_MODE*)0xF01322D0u)


#define GTM_MCS2_CH5_IRQ_NOTIFY (*(volatile Ifx_GTM_MCS_CH_IRQ_NOTIFY*)0xF01322C4u)


#define GTM_MCS2_CH5_PC (*(volatile Ifx_GTM_MCS_CH_PC*)0xF01322C0u)


#define GTM_MCS2_CH5_R0 (*(volatile Ifx_GTM_MCS_CH_R0*)0xF0132280u)


#define GTM_MCS2_CH5_R1 (*(volatile Ifx_GTM_MCS_CH_R1*)0xF0132284u)


#define GTM_MCS2_CH5_R2 (*(volatile Ifx_GTM_MCS_CH_R2*)0xF0132288u)


#define GTM_MCS2_CH5_R3 (*(volatile Ifx_GTM_MCS_CH_R3*)0xF013228Cu)


#define GTM_MCS2_CH5_R4 (*(volatile Ifx_GTM_MCS_CH_R4*)0xF0132290u)


#define GTM_MCS2_CH5_R5 (*(volatile Ifx_GTM_MCS_CH_R5*)0xF0132294u)


#define GTM_MCS2_CH5_R6 (*(volatile Ifx_GTM_MCS_CH_R6*)0xF0132298u)


#define GTM_MCS2_CH5_R7 (*(volatile Ifx_GTM_MCS_CH_R7*)0xF013229Cu)


#define GTM_MCS2_CH6_ACB (*(volatile Ifx_GTM_MCS_CH_ACB*)0xF0132324u)


#define GTM_MCS2_CH6_CTRL (*(volatile Ifx_GTM_MCS_CH_CTRL*)0xF0132320u)


#define GTM_MCS2_CH6_EIRQ_EN (*(volatile Ifx_GTM_MCS_CH_EIRQ_EN*)0xF0132354u)


#define GTM_MCS2_CH6_IRQ_EN (*(volatile Ifx_GTM_MCS_CH_IRQ_EN*)0xF0132348u)


#define GTM_MCS2_CH6_IRQ_FORCINT (*(volatile Ifx_GTM_MCS_CH_IRQ_FORCINT*)0xF013234Cu)


#define GTM_MCS2_CH6_IRQ_MODE (*(volatile Ifx_GTM_MCS_CH_IRQ_MODE*)0xF0132350u)


#define GTM_MCS2_CH6_IRQ_NOTIFY (*(volatile Ifx_GTM_MCS_CH_IRQ_NOTIFY*)0xF0132344u)


#define GTM_MCS2_CH6_PC (*(volatile Ifx_GTM_MCS_CH_PC*)0xF0132340u)


#define GTM_MCS2_CH6_R0 (*(volatile Ifx_GTM_MCS_CH_R0*)0xF0132300u)


#define GTM_MCS2_CH6_R1 (*(volatile Ifx_GTM_MCS_CH_R1*)0xF0132304u)


#define GTM_MCS2_CH6_R2 (*(volatile Ifx_GTM_MCS_CH_R2*)0xF0132308u)


#define GTM_MCS2_CH6_R3 (*(volatile Ifx_GTM_MCS_CH_R3*)0xF013230Cu)


#define GTM_MCS2_CH6_R4 (*(volatile Ifx_GTM_MCS_CH_R4*)0xF0132310u)


#define GTM_MCS2_CH6_R5 (*(volatile Ifx_GTM_MCS_CH_R5*)0xF0132314u)


#define GTM_MCS2_CH6_R6 (*(volatile Ifx_GTM_MCS_CH_R6*)0xF0132318u)


#define GTM_MCS2_CH6_R7 (*(volatile Ifx_GTM_MCS_CH_R7*)0xF013231Cu)


#define GTM_MCS2_CH7_ACB (*(volatile Ifx_GTM_MCS_CH_ACB*)0xF01323A4u)


#define GTM_MCS2_CH7_CTRL (*(volatile Ifx_GTM_MCS_CH_CTRL*)0xF01323A0u)


#define GTM_MCS2_CH7_EIRQ_EN (*(volatile Ifx_GTM_MCS_CH_EIRQ_EN*)0xF01323D4u)


#define GTM_MCS2_CH7_IRQ_EN (*(volatile Ifx_GTM_MCS_CH_IRQ_EN*)0xF01323C8u)


#define GTM_MCS2_CH7_IRQ_FORCINT (*(volatile Ifx_GTM_MCS_CH_IRQ_FORCINT*)0xF01323CCu)


#define GTM_MCS2_CH7_IRQ_MODE (*(volatile Ifx_GTM_MCS_CH_IRQ_MODE*)0xF01323D0u)


#define GTM_MCS2_CH7_IRQ_NOTIFY (*(volatile Ifx_GTM_MCS_CH_IRQ_NOTIFY*)0xF01323C4u)


#define GTM_MCS2_CH7_PC (*(volatile Ifx_GTM_MCS_CH_PC*)0xF01323C0u)


#define GTM_MCS2_CH7_R0 (*(volatile Ifx_GTM_MCS_CH_R0*)0xF0132380u)


#define GTM_MCS2_CH7_R1 (*(volatile Ifx_GTM_MCS_CH_R1*)0xF0132384u)


#define GTM_MCS2_CH7_R2 (*(volatile Ifx_GTM_MCS_CH_R2*)0xF0132388u)


#define GTM_MCS2_CH7_R3 (*(volatile Ifx_GTM_MCS_CH_R3*)0xF013238Cu)


#define GTM_MCS2_CH7_R4 (*(volatile Ifx_GTM_MCS_CH_R4*)0xF0132390u)


#define GTM_MCS2_CH7_R5 (*(volatile Ifx_GTM_MCS_CH_R5*)0xF0132394u)


#define GTM_MCS2_CH7_R6 (*(volatile Ifx_GTM_MCS_CH_R6*)0xF0132398u)


#define GTM_MCS2_CH7_R7 (*(volatile Ifx_GTM_MCS_CH_R7*)0xF013239Cu)


#define GTM_MCS2_CTRL (*(volatile Ifx_GTM_MCS_CTRL*)0xF0132074u)


#define GTM_MCS2_ERR (*(volatile Ifx_GTM_MCS_ERR*)0xF013207Cu)


#define GTM_MCS2_RST (*(volatile Ifx_GTM_MCS_RST*)0xF0132078u)


#define GTM_MCS3_CH0_ACB (*(volatile Ifx_GTM_MCS_CH_ACB*)0xF0133024u)


#define GTM_MCS3_CH0_CTRG (*(volatile Ifx_GTM_MCS_CH0_CTRG*)0xF0133028u)




#define GTM_MCS3_CTRG (GTM_MCS3_CH0_CTRG)


#define GTM_MCS3_CH0_CTRL (*(volatile Ifx_GTM_MCS_CH_CTRL*)0xF0133020u)


#define GTM_MCS3_CH0_EIRQ_EN (*(volatile Ifx_GTM_MCS_CH_EIRQ_EN*)0xF0133054u)


#define GTM_MCS3_CH0_IRQ_EN (*(volatile Ifx_GTM_MCS_CH_IRQ_EN*)0xF0133048u)


#define GTM_MCS3_CH0_IRQ_FORCINT (*(volatile Ifx_GTM_MCS_CH_IRQ_FORCINT*)0xF013304Cu)


#define GTM_MCS3_CH0_IRQ_MODE (*(volatile Ifx_GTM_MCS_CH_IRQ_MODE*)0xF0133050u)


#define GTM_MCS3_CH0_IRQ_NOTIFY (*(volatile Ifx_GTM_MCS_CH_IRQ_NOTIFY*)0xF0133044u)


#define GTM_MCS3_CH0_PC (*(volatile Ifx_GTM_MCS_CH_PC*)0xF0133040u)


#define GTM_MCS3_CH0_R0 (*(volatile Ifx_GTM_MCS_CH_R0*)0xF0133000u)


#define GTM_MCS3_CH0_R1 (*(volatile Ifx_GTM_MCS_CH_R1*)0xF0133004u)


#define GTM_MCS3_CH0_R2 (*(volatile Ifx_GTM_MCS_CH_R2*)0xF0133008u)


#define GTM_MCS3_CH0_R3 (*(volatile Ifx_GTM_MCS_CH_R3*)0xF013300Cu)


#define GTM_MCS3_CH0_R4 (*(volatile Ifx_GTM_MCS_CH_R4*)0xF0133010u)


#define GTM_MCS3_CH0_R5 (*(volatile Ifx_GTM_MCS_CH_R5*)0xF0133014u)


#define GTM_MCS3_CH0_R6 (*(volatile Ifx_GTM_MCS_CH_R6*)0xF0133018u)


#define GTM_MCS3_CH0_R7 (*(volatile Ifx_GTM_MCS_CH_R7*)0xF013301Cu)


#define GTM_MCS3_CH0_STRG (*(volatile Ifx_GTM_MCS_CH0_STRG*)0xF013302Cu)




#define GTM_MCS3_STRG (GTM_MCS3_CH0_STRG)


#define GTM_MCS3_CH1_ACB (*(volatile Ifx_GTM_MCS_CH_ACB*)0xF01330A4u)


#define GTM_MCS3_CH1_CTRL (*(volatile Ifx_GTM_MCS_CH_CTRL*)0xF01330A0u)


#define GTM_MCS3_CH1_EIRQ_EN (*(volatile Ifx_GTM_MCS_CH_EIRQ_EN*)0xF01330D4u)


#define GTM_MCS3_CH1_IRQ_EN (*(volatile Ifx_GTM_MCS_CH_IRQ_EN*)0xF01330C8u)


#define GTM_MCS3_CH1_IRQ_FORCINT (*(volatile Ifx_GTM_MCS_CH_IRQ_FORCINT*)0xF01330CCu)


#define GTM_MCS3_CH1_IRQ_MODE (*(volatile Ifx_GTM_MCS_CH_IRQ_MODE*)0xF01330D0u)


#define GTM_MCS3_CH1_IRQ_NOTIFY (*(volatile Ifx_GTM_MCS_CH_IRQ_NOTIFY*)0xF01330C4u)


#define GTM_MCS3_CH1_PC (*(volatile Ifx_GTM_MCS_CH_PC*)0xF01330C0u)


#define GTM_MCS3_CH1_R0 (*(volatile Ifx_GTM_MCS_CH_R0*)0xF0133080u)


#define GTM_MCS3_CH1_R1 (*(volatile Ifx_GTM_MCS_CH_R1*)0xF0133084u)


#define GTM_MCS3_CH1_R2 (*(volatile Ifx_GTM_MCS_CH_R2*)0xF0133088u)


#define GTM_MCS3_CH1_R3 (*(volatile Ifx_GTM_MCS_CH_R3*)0xF013308Cu)


#define GTM_MCS3_CH1_R4 (*(volatile Ifx_GTM_MCS_CH_R4*)0xF0133090u)


#define GTM_MCS3_CH1_R5 (*(volatile Ifx_GTM_MCS_CH_R5*)0xF0133094u)


#define GTM_MCS3_CH1_R6 (*(volatile Ifx_GTM_MCS_CH_R6*)0xF0133098u)


#define GTM_MCS3_CH1_R7 (*(volatile Ifx_GTM_MCS_CH_R7*)0xF013309Cu)


#define GTM_MCS3_CH2_ACB (*(volatile Ifx_GTM_MCS_CH_ACB*)0xF0133124u)


#define GTM_MCS3_CH2_CTRL (*(volatile Ifx_GTM_MCS_CH_CTRL*)0xF0133120u)


#define GTM_MCS3_CH2_EIRQ_EN (*(volatile Ifx_GTM_MCS_CH_EIRQ_EN*)0xF0133154u)


#define GTM_MCS3_CH2_IRQ_EN (*(volatile Ifx_GTM_MCS_CH_IRQ_EN*)0xF0133148u)


#define GTM_MCS3_CH2_IRQ_FORCINT (*(volatile Ifx_GTM_MCS_CH_IRQ_FORCINT*)0xF013314Cu)


#define GTM_MCS3_CH2_IRQ_MODE (*(volatile Ifx_GTM_MCS_CH_IRQ_MODE*)0xF0133150u)


#define GTM_MCS3_CH2_IRQ_NOTIFY (*(volatile Ifx_GTM_MCS_CH_IRQ_NOTIFY*)0xF0133144u)


#define GTM_MCS3_CH2_PC (*(volatile Ifx_GTM_MCS_CH_PC*)0xF0133140u)


#define GTM_MCS3_CH2_R0 (*(volatile Ifx_GTM_MCS_CH_R0*)0xF0133100u)


#define GTM_MCS3_CH2_R1 (*(volatile Ifx_GTM_MCS_CH_R1*)0xF0133104u)


#define GTM_MCS3_CH2_R2 (*(volatile Ifx_GTM_MCS_CH_R2*)0xF0133108u)


#define GTM_MCS3_CH2_R3 (*(volatile Ifx_GTM_MCS_CH_R3*)0xF013310Cu)


#define GTM_MCS3_CH2_R4 (*(volatile Ifx_GTM_MCS_CH_R4*)0xF0133110u)


#define GTM_MCS3_CH2_R5 (*(volatile Ifx_GTM_MCS_CH_R5*)0xF0133114u)


#define GTM_MCS3_CH2_R6 (*(volatile Ifx_GTM_MCS_CH_R6*)0xF0133118u)


#define GTM_MCS3_CH2_R7 (*(volatile Ifx_GTM_MCS_CH_R7*)0xF013311Cu)


#define GTM_MCS3_CH3_ACB (*(volatile Ifx_GTM_MCS_CH_ACB*)0xF01331A4u)


#define GTM_MCS3_CH3_CTRL (*(volatile Ifx_GTM_MCS_CH_CTRL*)0xF01331A0u)


#define GTM_MCS3_CH3_EIRQ_EN (*(volatile Ifx_GTM_MCS_CH_EIRQ_EN*)0xF01331D4u)


#define GTM_MCS3_CH3_IRQ_EN (*(volatile Ifx_GTM_MCS_CH_IRQ_EN*)0xF01331C8u)


#define GTM_MCS3_CH3_IRQ_FORCINT (*(volatile Ifx_GTM_MCS_CH_IRQ_FORCINT*)0xF01331CCu)


#define GTM_MCS3_CH3_IRQ_MODE (*(volatile Ifx_GTM_MCS_CH_IRQ_MODE*)0xF01331D0u)


#define GTM_MCS3_CH3_IRQ_NOTIFY (*(volatile Ifx_GTM_MCS_CH_IRQ_NOTIFY*)0xF01331C4u)


#define GTM_MCS3_CH3_PC (*(volatile Ifx_GTM_MCS_CH_PC*)0xF01331C0u)


#define GTM_MCS3_CH3_R0 (*(volatile Ifx_GTM_MCS_CH_R0*)0xF0133180u)


#define GTM_MCS3_CH3_R1 (*(volatile Ifx_GTM_MCS_CH_R1*)0xF0133184u)


#define GTM_MCS3_CH3_R2 (*(volatile Ifx_GTM_MCS_CH_R2*)0xF0133188u)


#define GTM_MCS3_CH3_R3 (*(volatile Ifx_GTM_MCS_CH_R3*)0xF013318Cu)


#define GTM_MCS3_CH3_R4 (*(volatile Ifx_GTM_MCS_CH_R4*)0xF0133190u)


#define GTM_MCS3_CH3_R5 (*(volatile Ifx_GTM_MCS_CH_R5*)0xF0133194u)


#define GTM_MCS3_CH3_R6 (*(volatile Ifx_GTM_MCS_CH_R6*)0xF0133198u)


#define GTM_MCS3_CH3_R7 (*(volatile Ifx_GTM_MCS_CH_R7*)0xF013319Cu)


#define GTM_MCS3_CH4_ACB (*(volatile Ifx_GTM_MCS_CH_ACB*)0xF0133224u)


#define GTM_MCS3_CH4_CTRL (*(volatile Ifx_GTM_MCS_CH_CTRL*)0xF0133220u)


#define GTM_MCS3_CH4_EIRQ_EN (*(volatile Ifx_GTM_MCS_CH_EIRQ_EN*)0xF0133254u)


#define GTM_MCS3_CH4_IRQ_EN (*(volatile Ifx_GTM_MCS_CH_IRQ_EN*)0xF0133248u)


#define GTM_MCS3_CH4_IRQ_FORCINT (*(volatile Ifx_GTM_MCS_CH_IRQ_FORCINT*)0xF013324Cu)


#define GTM_MCS3_CH4_IRQ_MODE (*(volatile Ifx_GTM_MCS_CH_IRQ_MODE*)0xF0133250u)


#define GTM_MCS3_CH4_IRQ_NOTIFY (*(volatile Ifx_GTM_MCS_CH_IRQ_NOTIFY*)0xF0133244u)


#define GTM_MCS3_CH4_PC (*(volatile Ifx_GTM_MCS_CH_PC*)0xF0133240u)


#define GTM_MCS3_CH4_R0 (*(volatile Ifx_GTM_MCS_CH_R0*)0xF0133200u)


#define GTM_MCS3_CH4_R1 (*(volatile Ifx_GTM_MCS_CH_R1*)0xF0133204u)


#define GTM_MCS3_CH4_R2 (*(volatile Ifx_GTM_MCS_CH_R2*)0xF0133208u)


#define GTM_MCS3_CH4_R3 (*(volatile Ifx_GTM_MCS_CH_R3*)0xF013320Cu)


#define GTM_MCS3_CH4_R4 (*(volatile Ifx_GTM_MCS_CH_R4*)0xF0133210u)


#define GTM_MCS3_CH4_R5 (*(volatile Ifx_GTM_MCS_CH_R5*)0xF0133214u)


#define GTM_MCS3_CH4_R6 (*(volatile Ifx_GTM_MCS_CH_R6*)0xF0133218u)


#define GTM_MCS3_CH4_R7 (*(volatile Ifx_GTM_MCS_CH_R7*)0xF013321Cu)


#define GTM_MCS3_CH5_ACB (*(volatile Ifx_GTM_MCS_CH_ACB*)0xF01332A4u)


#define GTM_MCS3_CH5_CTRL (*(volatile Ifx_GTM_MCS_CH_CTRL*)0xF01332A0u)


#define GTM_MCS3_CH5_EIRQ_EN (*(volatile Ifx_GTM_MCS_CH_EIRQ_EN*)0xF01332D4u)


#define GTM_MCS3_CH5_IRQ_EN (*(volatile Ifx_GTM_MCS_CH_IRQ_EN*)0xF01332C8u)


#define GTM_MCS3_CH5_IRQ_FORCINT (*(volatile Ifx_GTM_MCS_CH_IRQ_FORCINT*)0xF01332CCu)


#define GTM_MCS3_CH5_IRQ_MODE (*(volatile Ifx_GTM_MCS_CH_IRQ_MODE*)0xF01332D0u)


#define GTM_MCS3_CH5_IRQ_NOTIFY (*(volatile Ifx_GTM_MCS_CH_IRQ_NOTIFY*)0xF01332C4u)


#define GTM_MCS3_CH5_PC (*(volatile Ifx_GTM_MCS_CH_PC*)0xF01332C0u)


#define GTM_MCS3_CH5_R0 (*(volatile Ifx_GTM_MCS_CH_R0*)0xF0133280u)


#define GTM_MCS3_CH5_R1 (*(volatile Ifx_GTM_MCS_CH_R1*)0xF0133284u)


#define GTM_MCS3_CH5_R2 (*(volatile Ifx_GTM_MCS_CH_R2*)0xF0133288u)


#define GTM_MCS3_CH5_R3 (*(volatile Ifx_GTM_MCS_CH_R3*)0xF013328Cu)


#define GTM_MCS3_CH5_R4 (*(volatile Ifx_GTM_MCS_CH_R4*)0xF0133290u)


#define GTM_MCS3_CH5_R5 (*(volatile Ifx_GTM_MCS_CH_R5*)0xF0133294u)


#define GTM_MCS3_CH5_R6 (*(volatile Ifx_GTM_MCS_CH_R6*)0xF0133298u)


#define GTM_MCS3_CH5_R7 (*(volatile Ifx_GTM_MCS_CH_R7*)0xF013329Cu)


#define GTM_MCS3_CH6_ACB (*(volatile Ifx_GTM_MCS_CH_ACB*)0xF0133324u)


#define GTM_MCS3_CH6_CTRL (*(volatile Ifx_GTM_MCS_CH_CTRL*)0xF0133320u)


#define GTM_MCS3_CH6_EIRQ_EN (*(volatile Ifx_GTM_MCS_CH_EIRQ_EN*)0xF0133354u)


#define GTM_MCS3_CH6_IRQ_EN (*(volatile Ifx_GTM_MCS_CH_IRQ_EN*)0xF0133348u)


#define GTM_MCS3_CH6_IRQ_FORCINT (*(volatile Ifx_GTM_MCS_CH_IRQ_FORCINT*)0xF013334Cu)


#define GTM_MCS3_CH6_IRQ_MODE (*(volatile Ifx_GTM_MCS_CH_IRQ_MODE*)0xF0133350u)


#define GTM_MCS3_CH6_IRQ_NOTIFY (*(volatile Ifx_GTM_MCS_CH_IRQ_NOTIFY*)0xF0133344u)


#define GTM_MCS3_CH6_PC (*(volatile Ifx_GTM_MCS_CH_PC*)0xF0133340u)


#define GTM_MCS3_CH6_R0 (*(volatile Ifx_GTM_MCS_CH_R0*)0xF0133300u)


#define GTM_MCS3_CH6_R1 (*(volatile Ifx_GTM_MCS_CH_R1*)0xF0133304u)


#define GTM_MCS3_CH6_R2 (*(volatile Ifx_GTM_MCS_CH_R2*)0xF0133308u)


#define GTM_MCS3_CH6_R3 (*(volatile Ifx_GTM_MCS_CH_R3*)0xF013330Cu)


#define GTM_MCS3_CH6_R4 (*(volatile Ifx_GTM_MCS_CH_R4*)0xF0133310u)


#define GTM_MCS3_CH6_R5 (*(volatile Ifx_GTM_MCS_CH_R5*)0xF0133314u)


#define GTM_MCS3_CH6_R6 (*(volatile Ifx_GTM_MCS_CH_R6*)0xF0133318u)


#define GTM_MCS3_CH6_R7 (*(volatile Ifx_GTM_MCS_CH_R7*)0xF013331Cu)


#define GTM_MCS3_CH7_ACB (*(volatile Ifx_GTM_MCS_CH_ACB*)0xF01333A4u)


#define GTM_MCS3_CH7_CTRL (*(volatile Ifx_GTM_MCS_CH_CTRL*)0xF01333A0u)


#define GTM_MCS3_CH7_EIRQ_EN (*(volatile Ifx_GTM_MCS_CH_EIRQ_EN*)0xF01333D4u)


#define GTM_MCS3_CH7_IRQ_EN (*(volatile Ifx_GTM_MCS_CH_IRQ_EN*)0xF01333C8u)


#define GTM_MCS3_CH7_IRQ_FORCINT (*(volatile Ifx_GTM_MCS_CH_IRQ_FORCINT*)0xF01333CCu)


#define GTM_MCS3_CH7_IRQ_MODE (*(volatile Ifx_GTM_MCS_CH_IRQ_MODE*)0xF01333D0u)


#define GTM_MCS3_CH7_IRQ_NOTIFY (*(volatile Ifx_GTM_MCS_CH_IRQ_NOTIFY*)0xF01333C4u)


#define GTM_MCS3_CH7_PC (*(volatile Ifx_GTM_MCS_CH_PC*)0xF01333C0u)


#define GTM_MCS3_CH7_R0 (*(volatile Ifx_GTM_MCS_CH_R0*)0xF0133380u)


#define GTM_MCS3_CH7_R1 (*(volatile Ifx_GTM_MCS_CH_R1*)0xF0133384u)


#define GTM_MCS3_CH7_R2 (*(volatile Ifx_GTM_MCS_CH_R2*)0xF0133388u)


#define GTM_MCS3_CH7_R3 (*(volatile Ifx_GTM_MCS_CH_R3*)0xF013338Cu)


#define GTM_MCS3_CH7_R4 (*(volatile Ifx_GTM_MCS_CH_R4*)0xF0133390u)


#define GTM_MCS3_CH7_R5 (*(volatile Ifx_GTM_MCS_CH_R5*)0xF0133394u)


#define GTM_MCS3_CH7_R6 (*(volatile Ifx_GTM_MCS_CH_R6*)0xF0133398u)


#define GTM_MCS3_CH7_R7 (*(volatile Ifx_GTM_MCS_CH_R7*)0xF013339Cu)


#define GTM_MCS3_CTRL (*(volatile Ifx_GTM_MCS_CTRL*)0xF0133074u)


#define GTM_MCS3_ERR (*(volatile Ifx_GTM_MCS_ERR*)0xF013307Cu)


#define GTM_MCS3_RST (*(volatile Ifx_GTM_MCS_RST*)0xF0133078u)


#define GTM_MCSINTCLR (*(volatile Ifx_GTM_MCSINTCLR*)0xF019FE74u)


#define GTM_MCSINTSTAT (*(volatile Ifx_GTM_MCSINTSTAT*)0xF019FE70u)


#define GTM_MON_ACTIVITY_0 (*(volatile Ifx_GTM_MON_ACTIVITY_0*)0xF0100184u)


#define GTM_MON_STATUS (*(volatile Ifx_GTM_MON_STATUS*)0xF0100180u)


#define GTM_MSCIN0_INHCON (*(volatile Ifx_GTM_MSCIN_INHCON*)0xF019FF64u)




#define GTM_MSC0INHCON (GTM_MSCIN0_INHCON)


#define GTM_MSCIN0_INLCON (*(volatile Ifx_GTM_MSCIN_INLCON*)0xF019FF60u)




#define GTM_MSC0INLCON (GTM_MSCIN0_INLCON)


#define GTM_MSCIN1_INHCON (*(volatile Ifx_GTM_MSCIN_INHCON*)0xF019FF6Cu)




#define GTM_MSC1INHCON (GTM_MSCIN1_INHCON)


#define GTM_MSCIN1_INLCON (*(volatile Ifx_GTM_MSCIN_INLCON*)0xF019FF68u)




#define GTM_MSC1INLCON (GTM_MSCIN1_INLCON)


#define GTM_MSCSET_1S0_CON0 (*(volatile Ifx_GTM_MSCSET_CON0*)0xF019FF00u)




#define GTM_MSCSET1CON0 (GTM_MSCSET_1S0_CON0)


#define GTM_MSCSET_1S0_CON1 (*(volatile Ifx_GTM_MSCSET_CON1*)0xF019FF04u)




#define GTM_MSCSET1CON1 (GTM_MSCSET_1S0_CON1)


#define GTM_MSCSET_1S0_CON2 (*(volatile Ifx_GTM_MSCSET_CON2*)0xF019FF08u)




#define GTM_MSCSET1CON2 (GTM_MSCSET_1S0_CON2)


#define GTM_MSCSET_1S0_CON3 (*(volatile Ifx_GTM_MSCSET_CON3*)0xF019FF0Cu)




#define GTM_MSCSET1CON3 (GTM_MSCSET_1S0_CON3)


#define GTM_MSCSET_1S1_CON0 (*(volatile Ifx_GTM_MSCSET_CON0*)0xF019FF10u)




#define GTM_MSCSET2CON0 (GTM_MSCSET_1S1_CON0)


#define GTM_MSCSET_1S1_CON1 (*(volatile Ifx_GTM_MSCSET_CON1*)0xF019FF14u)




#define GTM_MSCSET2CON1 (GTM_MSCSET_1S1_CON1)


#define GTM_MSCSET_1S1_CON2 (*(volatile Ifx_GTM_MSCSET_CON2*)0xF019FF18u)




#define GTM_MSCSET2CON2 (GTM_MSCSET_1S1_CON2)


#define GTM_MSCSET_1S1_CON3 (*(volatile Ifx_GTM_MSCSET_CON3*)0xF019FF1Cu)




#define GTM_MSCSET2CON3 (GTM_MSCSET_1S1_CON3)


#define GTM_MSCSET_1S2_CON0 (*(volatile Ifx_GTM_MSCSET_CON0*)0xF019FF20u)




#define GTM_MSCSET3CON0 (GTM_MSCSET_1S2_CON0)


#define GTM_MSCSET_1S2_CON1 (*(volatile Ifx_GTM_MSCSET_CON1*)0xF019FF24u)




#define GTM_MSCSET3CON1 (GTM_MSCSET_1S2_CON1)


#define GTM_MSCSET_1S2_CON2 (*(volatile Ifx_GTM_MSCSET_CON2*)0xF019FF28u)




#define GTM_MSCSET3CON2 (GTM_MSCSET_1S2_CON2)


#define GTM_MSCSET_1S2_CON3 (*(volatile Ifx_GTM_MSCSET_CON3*)0xF019FF2Cu)




#define GTM_MSCSET3CON3 (GTM_MSCSET_1S2_CON3)


#define GTM_MSCSET_1S3_CON0 (*(volatile Ifx_GTM_MSCSET_CON0*)0xF019FF30u)




#define GTM_MSCSET4CON0 (GTM_MSCSET_1S3_CON0)


#define GTM_MSCSET_1S3_CON1 (*(volatile Ifx_GTM_MSCSET_CON1*)0xF019FF34u)




#define GTM_MSCSET4CON1 (GTM_MSCSET_1S3_CON1)


#define GTM_MSCSET_1S3_CON2 (*(volatile Ifx_GTM_MSCSET_CON2*)0xF019FF38u)




#define GTM_MSCSET4CON2 (GTM_MSCSET_1S3_CON2)


#define GTM_MSCSET_1S3_CON3 (*(volatile Ifx_GTM_MSCSET_CON3*)0xF019FF3Cu)




#define GTM_MSCSET4CON3 (GTM_MSCSET_1S3_CON3)


#define GTM_OCS (*(volatile Ifx_GTM_OCS*)0xF019FDE8u)


#define GTM_ODA (*(volatile Ifx_GTM_ODA*)0xF019FDDCu)


#define GTM_OTBU0T (*(volatile Ifx_GTM_OTBU0T*)0xF019FDC4u)


#define GTM_OTBU1T (*(volatile Ifx_GTM_OTBU1T*)0xF019FDC8u)


#define GTM_OTBU2T (*(volatile Ifx_GTM_OTBU2T*)0xF019FDCCu)


#define GTM_OTSC0 (*(volatile Ifx_GTM_OTSC0*)0xF019FDD4u)


#define GTM_OTSC1 (*(volatile Ifx_GTM_OTSC1*)0xF019FDD8u)


#define GTM_OTSS (*(volatile Ifx_GTM_OTSS*)0xF019FDD0u)


#define GTM_REV (*(volatile Ifx_GTM_REV*)0xF0100000u)


#define GTM_RST (*(volatile Ifx_GTM_RST*)0xF0100004u)


#define GTM_SPE0_CMP (*(volatile Ifx_GTM_SPE_CMP*)0xF0100844u)


#define GTM_SPE0_CNT (*(volatile Ifx_GTM_SPE_CNT*)0xF0100840u)


#define GTM_SPE0_CTRL_STAT (*(volatile Ifx_GTM_SPE_CTRL_STAT*)0xF0100800u)


#define GTM_SPE0_EIRQ_EN (*(volatile Ifx_GTM_SPE_EIRQ_EN*)0xF010083Cu)


#define GTM_SPE0_IRQ_EN (*(volatile Ifx_GTM_SPE_IRQ_EN*)0xF0100830u)


#define GTM_SPE0_IRQ_FORCINT (*(volatile Ifx_GTM_SPE_IRQ_FORCINT*)0xF0100834u)


#define GTM_SPE0_IRQ_MODE (*(volatile Ifx_GTM_SPE_IRQ_MODE*)0xF0100838u)


#define GTM_SPE0_IRQ_NOTIFY (*(volatile Ifx_GTM_SPE_IRQ_NOTIFY*)0xF010082Cu)


#define GTM_SPE0_OUT_CTRL (*(volatile Ifx_GTM_SPE_OUT_CTRL*)0xF0100828u)


#define GTM_SPE0_OUT_PAT0 (*(volatile Ifx_GTM_SPE_OUT_PAT*)0xF0100808u)


#define GTM_SPE0_OUT_PAT1 (*(volatile Ifx_GTM_SPE_OUT_PAT*)0xF010080Cu)


#define GTM_SPE0_OUT_PAT2 (*(volatile Ifx_GTM_SPE_OUT_PAT*)0xF0100810u)


#define GTM_SPE0_OUT_PAT3 (*(volatile Ifx_GTM_SPE_OUT_PAT*)0xF0100814u)


#define GTM_SPE0_OUT_PAT4 (*(volatile Ifx_GTM_SPE_OUT_PAT*)0xF0100818u)


#define GTM_SPE0_OUT_PAT5 (*(volatile Ifx_GTM_SPE_OUT_PAT*)0xF010081Cu)


#define GTM_SPE0_OUT_PAT6 (*(volatile Ifx_GTM_SPE_OUT_PAT*)0xF0100820u)


#define GTM_SPE0_OUT_PAT7 (*(volatile Ifx_GTM_SPE_OUT_PAT*)0xF0100824u)


#define GTM_SPE0_PAT (*(volatile Ifx_GTM_SPE_PAT*)0xF0100804u)


#define GTM_SPE1_CMP (*(volatile Ifx_GTM_SPE_CMP*)0xF01008C4u)


#define GTM_SPE1_CNT (*(volatile Ifx_GTM_SPE_CNT*)0xF01008C0u)


#define GTM_SPE1_CTRL_STAT (*(volatile Ifx_GTM_SPE_CTRL_STAT*)0xF0100880u)


#define GTM_SPE1_EIRQ_EN (*(volatile Ifx_GTM_SPE_EIRQ_EN*)0xF01008BCu)


#define GTM_SPE1_IRQ_EN (*(volatile Ifx_GTM_SPE_IRQ_EN*)0xF01008B0u)


#define GTM_SPE1_IRQ_FORCINT (*(volatile Ifx_GTM_SPE_IRQ_FORCINT*)0xF01008B4u)


#define GTM_SPE1_IRQ_MODE (*(volatile Ifx_GTM_SPE_IRQ_MODE*)0xF01008B8u)


#define GTM_SPE1_IRQ_NOTIFY (*(volatile Ifx_GTM_SPE_IRQ_NOTIFY*)0xF01008ACu)


#define GTM_SPE1_OUT_CTRL (*(volatile Ifx_GTM_SPE_OUT_CTRL*)0xF01008A8u)


#define GTM_SPE1_OUT_PAT0 (*(volatile Ifx_GTM_SPE_OUT_PAT*)0xF0100888u)


#define GTM_SPE1_OUT_PAT1 (*(volatile Ifx_GTM_SPE_OUT_PAT*)0xF010088Cu)


#define GTM_SPE1_OUT_PAT2 (*(volatile Ifx_GTM_SPE_OUT_PAT*)0xF0100890u)


#define GTM_SPE1_OUT_PAT3 (*(volatile Ifx_GTM_SPE_OUT_PAT*)0xF0100894u)


#define GTM_SPE1_OUT_PAT4 (*(volatile Ifx_GTM_SPE_OUT_PAT*)0xF0100898u)


#define GTM_SPE1_OUT_PAT5 (*(volatile Ifx_GTM_SPE_OUT_PAT*)0xF010089Cu)


#define GTM_SPE1_OUT_PAT6 (*(volatile Ifx_GTM_SPE_OUT_PAT*)0xF01008A0u)


#define GTM_SPE1_OUT_PAT7 (*(volatile Ifx_GTM_SPE_OUT_PAT*)0xF01008A4u)


#define GTM_SPE1_PAT (*(volatile Ifx_GTM_SPE_PAT*)0xF0100884u)


#define GTM_TBU_CH0_BASE (*(volatile Ifx_GTM_TBU_CH0_BASE*)0xF0100108u)


#define GTM_TBU_CH0_CTRL (*(volatile Ifx_GTM_TBU_CH0_CTRL*)0xF0100104u)


#define GTM_TBU_CH1_BASE (*(volatile Ifx_GTM_TBU_CH1_BASE*)0xF0100110u)


#define GTM_TBU_CH1_CTRL (*(volatile Ifx_GTM_TBU_CH1_CTRL*)0xF010010Cu)


#define GTM_TBU_CH2_BASE (*(volatile Ifx_GTM_TBU_CH2_BASE*)0xF0100118u)


#define GTM_TBU_CH2_CTRL (*(volatile Ifx_GTM_TBU_CH2_CTRL*)0xF0100114u)


#define GTM_TBU_CHEN (*(volatile Ifx_GTM_TBU_CHEN*)0xF0100100u)


#define GTM_TIM0_CH0_CNT (*(volatile Ifx_GTM_TIM_CH_CNT*)0xF0101008u)


#define GTM_TIM0_CH0_CNTS (*(volatile Ifx_GTM_TIM_CH_CNTS*)0xF0101010u)


#define GTM_TIM0_CH0_CTRL (*(volatile Ifx_GTM_TIM_CH_CTRL*)0xF0101024u)


#define GTM_TIM0_CH0_ECNT (*(volatile Ifx_GTM_TIM_CH_ECNT*)0xF010100Cu)


#define GTM_TIM0_CH0_ECTRL (*(volatile Ifx_GTM_TIM_CH_ECTRL*)0xF0101028u)


#define GTM_TIM0_CH0_EIRQ_EN (*(volatile Ifx_GTM_TIM_CH_EIRQ_EN*)0xF010103Cu)


#define GTM_TIM0_CH0_FLT_FE (*(volatile Ifx_GTM_TIM_CH_FLT_FE*)0xF0101020u)


#define GTM_TIM0_CH0_FLT_RE (*(volatile Ifx_GTM_TIM_CH_FLT_RE*)0xF010101Cu)


#define GTM_TIM0_CH0_GPR0 (*(volatile Ifx_GTM_TIM_CH_GPR0*)0xF0101000u)


#define GTM_TIM0_CH0_GPR1 (*(volatile Ifx_GTM_TIM_CH_GPR1*)0xF0101004u)


#define GTM_TIM0_CH0_IRQ_EN (*(volatile Ifx_GTM_TIM_CH_IRQ_EN*)0xF0101030u)


#define GTM_TIM0_CH0_IRQ_FORCINT (*(volatile Ifx_GTM_TIM_CH_IRQ_FORCINT*)0xF0101034u)


#define GTM_TIM0_CH0_IRQ_MODE (*(volatile Ifx_GTM_TIM_CH_IRQ_MODE*)0xF0101038u)


#define GTM_TIM0_CH0_IRQ_NOTIFY (*(volatile Ifx_GTM_TIM_CH_IRQ_NOTIFY*)0xF010102Cu)


#define GTM_TIM0_CH0_TDUC (*(volatile Ifx_GTM_TIM_CH_TDUC*)0xF0101014u)


#define GTM_TIM0_CH0_TDUV (*(volatile Ifx_GTM_TIM_CH_TDUV*)0xF0101018u)


#define GTM_TIM0_CH1_CNT (*(volatile Ifx_GTM_TIM_CH_CNT*)0xF0101088u)


#define GTM_TIM0_CH1_CNTS (*(volatile Ifx_GTM_TIM_CH_CNTS*)0xF0101090u)


#define GTM_TIM0_CH1_CTRL (*(volatile Ifx_GTM_TIM_CH_CTRL*)0xF01010A4u)


#define GTM_TIM0_CH1_ECNT (*(volatile Ifx_GTM_TIM_CH_ECNT*)0xF010108Cu)


#define GTM_TIM0_CH1_ECTRL (*(volatile Ifx_GTM_TIM_CH_ECTRL*)0xF01010A8u)


#define GTM_TIM0_CH1_EIRQ_EN (*(volatile Ifx_GTM_TIM_CH_EIRQ_EN*)0xF01010BCu)


#define GTM_TIM0_CH1_FLT_FE (*(volatile Ifx_GTM_TIM_CH_FLT_FE*)0xF01010A0u)


#define GTM_TIM0_CH1_FLT_RE (*(volatile Ifx_GTM_TIM_CH_FLT_RE*)0xF010109Cu)


#define GTM_TIM0_CH1_GPR0 (*(volatile Ifx_GTM_TIM_CH_GPR0*)0xF0101080u)


#define GTM_TIM0_CH1_GPR1 (*(volatile Ifx_GTM_TIM_CH_GPR1*)0xF0101084u)


#define GTM_TIM0_CH1_IRQ_EN (*(volatile Ifx_GTM_TIM_CH_IRQ_EN*)0xF01010B0u)


#define GTM_TIM0_CH1_IRQ_FORCINT (*(volatile Ifx_GTM_TIM_CH_IRQ_FORCINT*)0xF01010B4u)


#define GTM_TIM0_CH1_IRQ_MODE (*(volatile Ifx_GTM_TIM_CH_IRQ_MODE*)0xF01010B8u)


#define GTM_TIM0_CH1_IRQ_NOTIFY (*(volatile Ifx_GTM_TIM_CH_IRQ_NOTIFY*)0xF01010ACu)


#define GTM_TIM0_CH1_TDUC (*(volatile Ifx_GTM_TIM_CH_TDUC*)0xF0101094u)


#define GTM_TIM0_CH1_TDUV (*(volatile Ifx_GTM_TIM_CH_TDUV*)0xF0101098u)


#define GTM_TIM0_CH2_CNT (*(volatile Ifx_GTM_TIM_CH_CNT*)0xF0101108u)


#define GTM_TIM0_CH2_CNTS (*(volatile Ifx_GTM_TIM_CH_CNTS*)0xF0101110u)


#define GTM_TIM0_CH2_CTRL (*(volatile Ifx_GTM_TIM_CH_CTRL*)0xF0101124u)


#define GTM_TIM0_CH2_ECNT (*(volatile Ifx_GTM_TIM_CH_ECNT*)0xF010110Cu)


#define GTM_TIM0_CH2_ECTRL (*(volatile Ifx_GTM_TIM_CH_ECTRL*)0xF0101128u)


#define GTM_TIM0_CH2_EIRQ_EN (*(volatile Ifx_GTM_TIM_CH_EIRQ_EN*)0xF010113Cu)


#define GTM_TIM0_CH2_FLT_FE (*(volatile Ifx_GTM_TIM_CH_FLT_FE*)0xF0101120u)


#define GTM_TIM0_CH2_FLT_RE (*(volatile Ifx_GTM_TIM_CH_FLT_RE*)0xF010111Cu)


#define GTM_TIM0_CH2_GPR0 (*(volatile Ifx_GTM_TIM_CH_GPR0*)0xF0101100u)


#define GTM_TIM0_CH2_GPR1 (*(volatile Ifx_GTM_TIM_CH_GPR1*)0xF0101104u)


#define GTM_TIM0_CH2_IRQ_EN (*(volatile Ifx_GTM_TIM_CH_IRQ_EN*)0xF0101130u)


#define GTM_TIM0_CH2_IRQ_FORCINT (*(volatile Ifx_GTM_TIM_CH_IRQ_FORCINT*)0xF0101134u)


#define GTM_TIM0_CH2_IRQ_MODE (*(volatile Ifx_GTM_TIM_CH_IRQ_MODE*)0xF0101138u)


#define GTM_TIM0_CH2_IRQ_NOTIFY (*(volatile Ifx_GTM_TIM_CH_IRQ_NOTIFY*)0xF010112Cu)


#define GTM_TIM0_CH2_TDUC (*(volatile Ifx_GTM_TIM_CH_TDUC*)0xF0101114u)


#define GTM_TIM0_CH2_TDUV (*(volatile Ifx_GTM_TIM_CH_TDUV*)0xF0101118u)


#define GTM_TIM0_CH3_CNT (*(volatile Ifx_GTM_TIM_CH_CNT*)0xF0101188u)


#define GTM_TIM0_CH3_CNTS (*(volatile Ifx_GTM_TIM_CH_CNTS*)0xF0101190u)


#define GTM_TIM0_CH3_CTRL (*(volatile Ifx_GTM_TIM_CH_CTRL*)0xF01011A4u)


#define GTM_TIM0_CH3_ECNT (*(volatile Ifx_GTM_TIM_CH_ECNT*)0xF010118Cu)


#define GTM_TIM0_CH3_ECTRL (*(volatile Ifx_GTM_TIM_CH_ECTRL*)0xF01011A8u)


#define GTM_TIM0_CH3_EIRQ_EN (*(volatile Ifx_GTM_TIM_CH_EIRQ_EN*)0xF01011BCu)


#define GTM_TIM0_CH3_FLT_FE (*(volatile Ifx_GTM_TIM_CH_FLT_FE*)0xF01011A0u)


#define GTM_TIM0_CH3_FLT_RE (*(volatile Ifx_GTM_TIM_CH_FLT_RE*)0xF010119Cu)


#define GTM_TIM0_CH3_GPR0 (*(volatile Ifx_GTM_TIM_CH_GPR0*)0xF0101180u)


#define GTM_TIM0_CH3_GPR1 (*(volatile Ifx_GTM_TIM_CH_GPR1*)0xF0101184u)


#define GTM_TIM0_CH3_IRQ_EN (*(volatile Ifx_GTM_TIM_CH_IRQ_EN*)0xF01011B0u)


#define GTM_TIM0_CH3_IRQ_FORCINT (*(volatile Ifx_GTM_TIM_CH_IRQ_FORCINT*)0xF01011B4u)


#define GTM_TIM0_CH3_IRQ_MODE (*(volatile Ifx_GTM_TIM_CH_IRQ_MODE*)0xF01011B8u)


#define GTM_TIM0_CH3_IRQ_NOTIFY (*(volatile Ifx_GTM_TIM_CH_IRQ_NOTIFY*)0xF01011ACu)


#define GTM_TIM0_CH3_TDUC (*(volatile Ifx_GTM_TIM_CH_TDUC*)0xF0101194u)


#define GTM_TIM0_CH3_TDUV (*(volatile Ifx_GTM_TIM_CH_TDUV*)0xF0101198u)


#define GTM_TIM0_CH4_CNT (*(volatile Ifx_GTM_TIM_CH_CNT*)0xF0101208u)


#define GTM_TIM0_CH4_CNTS (*(volatile Ifx_GTM_TIM_CH_CNTS*)0xF0101210u)


#define GTM_TIM0_CH4_CTRL (*(volatile Ifx_GTM_TIM_CH_CTRL*)0xF0101224u)


#define GTM_TIM0_CH4_ECNT (*(volatile Ifx_GTM_TIM_CH_ECNT*)0xF010120Cu)


#define GTM_TIM0_CH4_ECTRL (*(volatile Ifx_GTM_TIM_CH_ECTRL*)0xF0101228u)


#define GTM_TIM0_CH4_EIRQ_EN (*(volatile Ifx_GTM_TIM_CH_EIRQ_EN*)0xF010123Cu)


#define GTM_TIM0_CH4_FLT_FE (*(volatile Ifx_GTM_TIM_CH_FLT_FE*)0xF0101220u)


#define GTM_TIM0_CH4_FLT_RE (*(volatile Ifx_GTM_TIM_CH_FLT_RE*)0xF010121Cu)


#define GTM_TIM0_CH4_GPR0 (*(volatile Ifx_GTM_TIM_CH_GPR0*)0xF0101200u)


#define GTM_TIM0_CH4_GPR1 (*(volatile Ifx_GTM_TIM_CH_GPR1*)0xF0101204u)


#define GTM_TIM0_CH4_IRQ_EN (*(volatile Ifx_GTM_TIM_CH_IRQ_EN*)0xF0101230u)


#define GTM_TIM0_CH4_IRQ_FORCINT (*(volatile Ifx_GTM_TIM_CH_IRQ_FORCINT*)0xF0101234u)


#define GTM_TIM0_CH4_IRQ_MODE (*(volatile Ifx_GTM_TIM_CH_IRQ_MODE*)0xF0101238u)


#define GTM_TIM0_CH4_IRQ_NOTIFY (*(volatile Ifx_GTM_TIM_CH_IRQ_NOTIFY*)0xF010122Cu)


#define GTM_TIM0_CH4_TDUC (*(volatile Ifx_GTM_TIM_CH_TDUC*)0xF0101214u)


#define GTM_TIM0_CH4_TDUV (*(volatile Ifx_GTM_TIM_CH_TDUV*)0xF0101218u)


#define GTM_TIM0_CH5_CNT (*(volatile Ifx_GTM_TIM_CH_CNT*)0xF0101288u)


#define GTM_TIM0_CH5_CNTS (*(volatile Ifx_GTM_TIM_CH_CNTS*)0xF0101290u)


#define GTM_TIM0_CH5_CTRL (*(volatile Ifx_GTM_TIM_CH_CTRL*)0xF01012A4u)


#define GTM_TIM0_CH5_ECNT (*(volatile Ifx_GTM_TIM_CH_ECNT*)0xF010128Cu)


#define GTM_TIM0_CH5_ECTRL (*(volatile Ifx_GTM_TIM_CH_ECTRL*)0xF01012A8u)


#define GTM_TIM0_CH5_EIRQ_EN (*(volatile Ifx_GTM_TIM_CH_EIRQ_EN*)0xF01012BCu)


#define GTM_TIM0_CH5_FLT_FE (*(volatile Ifx_GTM_TIM_CH_FLT_FE*)0xF01012A0u)


#define GTM_TIM0_CH5_FLT_RE (*(volatile Ifx_GTM_TIM_CH_FLT_RE*)0xF010129Cu)


#define GTM_TIM0_CH5_GPR0 (*(volatile Ifx_GTM_TIM_CH_GPR0*)0xF0101280u)


#define GTM_TIM0_CH5_GPR1 (*(volatile Ifx_GTM_TIM_CH_GPR1*)0xF0101284u)


#define GTM_TIM0_CH5_IRQ_EN (*(volatile Ifx_GTM_TIM_CH_IRQ_EN*)0xF01012B0u)


#define GTM_TIM0_CH5_IRQ_FORCINT (*(volatile Ifx_GTM_TIM_CH_IRQ_FORCINT*)0xF01012B4u)


#define GTM_TIM0_CH5_IRQ_MODE (*(volatile Ifx_GTM_TIM_CH_IRQ_MODE*)0xF01012B8u)


#define GTM_TIM0_CH5_IRQ_NOTIFY (*(volatile Ifx_GTM_TIM_CH_IRQ_NOTIFY*)0xF01012ACu)


#define GTM_TIM0_CH5_TDUC (*(volatile Ifx_GTM_TIM_CH_TDUC*)0xF0101294u)


#define GTM_TIM0_CH5_TDUV (*(volatile Ifx_GTM_TIM_CH_TDUV*)0xF0101298u)


#define GTM_TIM0_CH6_CNT (*(volatile Ifx_GTM_TIM_CH_CNT*)0xF0101308u)


#define GTM_TIM0_CH6_CNTS (*(volatile Ifx_GTM_TIM_CH_CNTS*)0xF0101310u)


#define GTM_TIM0_CH6_CTRL (*(volatile Ifx_GTM_TIM_CH_CTRL*)0xF0101324u)


#define GTM_TIM0_CH6_ECNT (*(volatile Ifx_GTM_TIM_CH_ECNT*)0xF010130Cu)


#define GTM_TIM0_CH6_ECTRL (*(volatile Ifx_GTM_TIM_CH_ECTRL*)0xF0101328u)


#define GTM_TIM0_CH6_EIRQ_EN (*(volatile Ifx_GTM_TIM_CH_EIRQ_EN*)0xF010133Cu)


#define GTM_TIM0_CH6_FLT_FE (*(volatile Ifx_GTM_TIM_CH_FLT_FE*)0xF0101320u)


#define GTM_TIM0_CH6_FLT_RE (*(volatile Ifx_GTM_TIM_CH_FLT_RE*)0xF010131Cu)


#define GTM_TIM0_CH6_GPR0 (*(volatile Ifx_GTM_TIM_CH_GPR0*)0xF0101300u)


#define GTM_TIM0_CH6_GPR1 (*(volatile Ifx_GTM_TIM_CH_GPR1*)0xF0101304u)


#define GTM_TIM0_CH6_IRQ_EN (*(volatile Ifx_GTM_TIM_CH_IRQ_EN*)0xF0101330u)


#define GTM_TIM0_CH6_IRQ_FORCINT (*(volatile Ifx_GTM_TIM_CH_IRQ_FORCINT*)0xF0101334u)


#define GTM_TIM0_CH6_IRQ_MODE (*(volatile Ifx_GTM_TIM_CH_IRQ_MODE*)0xF0101338u)


#define GTM_TIM0_CH6_IRQ_NOTIFY (*(volatile Ifx_GTM_TIM_CH_IRQ_NOTIFY*)0xF010132Cu)


#define GTM_TIM0_CH6_TDUC (*(volatile Ifx_GTM_TIM_CH_TDUC*)0xF0101314u)


#define GTM_TIM0_CH6_TDUV (*(volatile Ifx_GTM_TIM_CH_TDUV*)0xF0101318u)


#define GTM_TIM0_CH7_CNT (*(volatile Ifx_GTM_TIM_CH_CNT*)0xF0101388u)


#define GTM_TIM0_CH7_CNTS (*(volatile Ifx_GTM_TIM_CH_CNTS*)0xF0101390u)


#define GTM_TIM0_CH7_CTRL (*(volatile Ifx_GTM_TIM_CH_CTRL*)0xF01013A4u)


#define GTM_TIM0_CH7_ECNT (*(volatile Ifx_GTM_TIM_CH_ECNT*)0xF010138Cu)


#define GTM_TIM0_CH7_ECTRL (*(volatile Ifx_GTM_TIM_CH_ECTRL*)0xF01013A8u)


#define GTM_TIM0_CH7_EIRQ_EN (*(volatile Ifx_GTM_TIM_CH_EIRQ_EN*)0xF01013BCu)


#define GTM_TIM0_CH7_FLT_FE (*(volatile Ifx_GTM_TIM_CH_FLT_FE*)0xF01013A0u)


#define GTM_TIM0_CH7_FLT_RE (*(volatile Ifx_GTM_TIM_CH_FLT_RE*)0xF010139Cu)


#define GTM_TIM0_CH7_GPR0 (*(volatile Ifx_GTM_TIM_CH_GPR0*)0xF0101380u)


#define GTM_TIM0_CH7_GPR1 (*(volatile Ifx_GTM_TIM_CH_GPR1*)0xF0101384u)


#define GTM_TIM0_CH7_IRQ_EN (*(volatile Ifx_GTM_TIM_CH_IRQ_EN*)0xF01013B0u)


#define GTM_TIM0_CH7_IRQ_FORCINT (*(volatile Ifx_GTM_TIM_CH_IRQ_FORCINT*)0xF01013B4u)


#define GTM_TIM0_CH7_IRQ_MODE (*(volatile Ifx_GTM_TIM_CH_IRQ_MODE*)0xF01013B8u)


#define GTM_TIM0_CH7_IRQ_NOTIFY (*(volatile Ifx_GTM_TIM_CH_IRQ_NOTIFY*)0xF01013ACu)


#define GTM_TIM0_CH7_TDUC (*(volatile Ifx_GTM_TIM_CH_TDUC*)0xF0101394u)


#define GTM_TIM0_CH7_TDUV (*(volatile Ifx_GTM_TIM_CH_TDUV*)0xF0101398u)


#define GTM_TIM0_IN_SRC (*(volatile Ifx_GTM_TIM_IN_SRC*)0xF0101078u)


#define GTM_TIM0_RST (*(volatile Ifx_GTM_TIM_RST*)0xF010107Cu)


#define GTM_TIM1_CH0_CNT (*(volatile Ifx_GTM_TIM_CH_CNT*)0xF0101808u)


#define GTM_TIM1_CH0_CNTS (*(volatile Ifx_GTM_TIM_CH_CNTS*)0xF0101810u)


#define GTM_TIM1_CH0_CTRL (*(volatile Ifx_GTM_TIM_CH_CTRL*)0xF0101824u)


#define GTM_TIM1_CH0_ECNT (*(volatile Ifx_GTM_TIM_CH_ECNT*)0xF010180Cu)


#define GTM_TIM1_CH0_ECTRL (*(volatile Ifx_GTM_TIM_CH_ECTRL*)0xF0101828u)


#define GTM_TIM1_CH0_EIRQ_EN (*(volatile Ifx_GTM_TIM_CH_EIRQ_EN*)0xF010183Cu)


#define GTM_TIM1_CH0_FLT_FE (*(volatile Ifx_GTM_TIM_CH_FLT_FE*)0xF0101820u)


#define GTM_TIM1_CH0_FLT_RE (*(volatile Ifx_GTM_TIM_CH_FLT_RE*)0xF010181Cu)


#define GTM_TIM1_CH0_GPR0 (*(volatile Ifx_GTM_TIM_CH_GPR0*)0xF0101800u)


#define GTM_TIM1_CH0_GPR1 (*(volatile Ifx_GTM_TIM_CH_GPR1*)0xF0101804u)


#define GTM_TIM1_CH0_IRQ_EN (*(volatile Ifx_GTM_TIM_CH_IRQ_EN*)0xF0101830u)


#define GTM_TIM1_CH0_IRQ_FORCINT (*(volatile Ifx_GTM_TIM_CH_IRQ_FORCINT*)0xF0101834u)


#define GTM_TIM1_CH0_IRQ_MODE (*(volatile Ifx_GTM_TIM_CH_IRQ_MODE*)0xF0101838u)


#define GTM_TIM1_CH0_IRQ_NOTIFY (*(volatile Ifx_GTM_TIM_CH_IRQ_NOTIFY*)0xF010182Cu)


#define GTM_TIM1_CH0_TDUC (*(volatile Ifx_GTM_TIM_CH_TDUC*)0xF0101814u)


#define GTM_TIM1_CH0_TDUV (*(volatile Ifx_GTM_TIM_CH_TDUV*)0xF0101818u)


#define GTM_TIM1_CH1_CNT (*(volatile Ifx_GTM_TIM_CH_CNT*)0xF0101888u)


#define GTM_TIM1_CH1_CNTS (*(volatile Ifx_GTM_TIM_CH_CNTS*)0xF0101890u)


#define GTM_TIM1_CH1_CTRL (*(volatile Ifx_GTM_TIM_CH_CTRL*)0xF01018A4u)


#define GTM_TIM1_CH1_ECNT (*(volatile Ifx_GTM_TIM_CH_ECNT*)0xF010188Cu)


#define GTM_TIM1_CH1_ECTRL (*(volatile Ifx_GTM_TIM_CH_ECTRL*)0xF01018A8u)


#define GTM_TIM1_CH1_EIRQ_EN (*(volatile Ifx_GTM_TIM_CH_EIRQ_EN*)0xF01018BCu)


#define GTM_TIM1_CH1_FLT_FE (*(volatile Ifx_GTM_TIM_CH_FLT_FE*)0xF01018A0u)


#define GTM_TIM1_CH1_FLT_RE (*(volatile Ifx_GTM_TIM_CH_FLT_RE*)0xF010189Cu)


#define GTM_TIM1_CH1_GPR0 (*(volatile Ifx_GTM_TIM_CH_GPR0*)0xF0101880u)


#define GTM_TIM1_CH1_GPR1 (*(volatile Ifx_GTM_TIM_CH_GPR1*)0xF0101884u)


#define GTM_TIM1_CH1_IRQ_EN (*(volatile Ifx_GTM_TIM_CH_IRQ_EN*)0xF01018B0u)


#define GTM_TIM1_CH1_IRQ_FORCINT (*(volatile Ifx_GTM_TIM_CH_IRQ_FORCINT*)0xF01018B4u)


#define GTM_TIM1_CH1_IRQ_MODE (*(volatile Ifx_GTM_TIM_CH_IRQ_MODE*)0xF01018B8u)


#define GTM_TIM1_CH1_IRQ_NOTIFY (*(volatile Ifx_GTM_TIM_CH_IRQ_NOTIFY*)0xF01018ACu)


#define GTM_TIM1_CH1_TDUC (*(volatile Ifx_GTM_TIM_CH_TDUC*)0xF0101894u)


#define GTM_TIM1_CH1_TDUV (*(volatile Ifx_GTM_TIM_CH_TDUV*)0xF0101898u)


#define GTM_TIM1_CH2_CNT (*(volatile Ifx_GTM_TIM_CH_CNT*)0xF0101908u)


#define GTM_TIM1_CH2_CNTS (*(volatile Ifx_GTM_TIM_CH_CNTS*)0xF0101910u)


#define GTM_TIM1_CH2_CTRL (*(volatile Ifx_GTM_TIM_CH_CTRL*)0xF0101924u)


#define GTM_TIM1_CH2_ECNT (*(volatile Ifx_GTM_TIM_CH_ECNT*)0xF010190Cu)


#define GTM_TIM1_CH2_ECTRL (*(volatile Ifx_GTM_TIM_CH_ECTRL*)0xF0101928u)


#define GTM_TIM1_CH2_EIRQ_EN (*(volatile Ifx_GTM_TIM_CH_EIRQ_EN*)0xF010193Cu)


#define GTM_TIM1_CH2_FLT_FE (*(volatile Ifx_GTM_TIM_CH_FLT_FE*)0xF0101920u)


#define GTM_TIM1_CH2_FLT_RE (*(volatile Ifx_GTM_TIM_CH_FLT_RE*)0xF010191Cu)


#define GTM_TIM1_CH2_GPR0 (*(volatile Ifx_GTM_TIM_CH_GPR0*)0xF0101900u)


#define GTM_TIM1_CH2_GPR1 (*(volatile Ifx_GTM_TIM_CH_GPR1*)0xF0101904u)


#define GTM_TIM1_CH2_IRQ_EN (*(volatile Ifx_GTM_TIM_CH_IRQ_EN*)0xF0101930u)


#define GTM_TIM1_CH2_IRQ_FORCINT (*(volatile Ifx_GTM_TIM_CH_IRQ_FORCINT*)0xF0101934u)


#define GTM_TIM1_CH2_IRQ_MODE (*(volatile Ifx_GTM_TIM_CH_IRQ_MODE*)0xF0101938u)


#define GTM_TIM1_CH2_IRQ_NOTIFY (*(volatile Ifx_GTM_TIM_CH_IRQ_NOTIFY*)0xF010192Cu)


#define GTM_TIM1_CH2_TDUC (*(volatile Ifx_GTM_TIM_CH_TDUC*)0xF0101914u)


#define GTM_TIM1_CH2_TDUV (*(volatile Ifx_GTM_TIM_CH_TDUV*)0xF0101918u)


#define GTM_TIM1_CH3_CNT (*(volatile Ifx_GTM_TIM_CH_CNT*)0xF0101988u)


#define GTM_TIM1_CH3_CNTS (*(volatile Ifx_GTM_TIM_CH_CNTS*)0xF0101990u)


#define GTM_TIM1_CH3_CTRL (*(volatile Ifx_GTM_TIM_CH_CTRL*)0xF01019A4u)


#define GTM_TIM1_CH3_ECNT (*(volatile Ifx_GTM_TIM_CH_ECNT*)0xF010198Cu)


#define GTM_TIM1_CH3_ECTRL (*(volatile Ifx_GTM_TIM_CH_ECTRL*)0xF01019A8u)


#define GTM_TIM1_CH3_EIRQ_EN (*(volatile Ifx_GTM_TIM_CH_EIRQ_EN*)0xF01019BCu)


#define GTM_TIM1_CH3_FLT_FE (*(volatile Ifx_GTM_TIM_CH_FLT_FE*)0xF01019A0u)


#define GTM_TIM1_CH3_FLT_RE (*(volatile Ifx_GTM_TIM_CH_FLT_RE*)0xF010199Cu)


#define GTM_TIM1_CH3_GPR0 (*(volatile Ifx_GTM_TIM_CH_GPR0*)0xF0101980u)


#define GTM_TIM1_CH3_GPR1 (*(volatile Ifx_GTM_TIM_CH_GPR1*)0xF0101984u)


#define GTM_TIM1_CH3_IRQ_EN (*(volatile Ifx_GTM_TIM_CH_IRQ_EN*)0xF01019B0u)


#define GTM_TIM1_CH3_IRQ_FORCINT (*(volatile Ifx_GTM_TIM_CH_IRQ_FORCINT*)0xF01019B4u)


#define GTM_TIM1_CH3_IRQ_MODE (*(volatile Ifx_GTM_TIM_CH_IRQ_MODE*)0xF01019B8u)


#define GTM_TIM1_CH3_IRQ_NOTIFY (*(volatile Ifx_GTM_TIM_CH_IRQ_NOTIFY*)0xF01019ACu)


#define GTM_TIM1_CH3_TDUC (*(volatile Ifx_GTM_TIM_CH_TDUC*)0xF0101994u)


#define GTM_TIM1_CH3_TDUV (*(volatile Ifx_GTM_TIM_CH_TDUV*)0xF0101998u)


#define GTM_TIM1_CH4_CNT (*(volatile Ifx_GTM_TIM_CH_CNT*)0xF0101A08u)


#define GTM_TIM1_CH4_CNTS (*(volatile Ifx_GTM_TIM_CH_CNTS*)0xF0101A10u)


#define GTM_TIM1_CH4_CTRL (*(volatile Ifx_GTM_TIM_CH_CTRL*)0xF0101A24u)


#define GTM_TIM1_CH4_ECNT (*(volatile Ifx_GTM_TIM_CH_ECNT*)0xF0101A0Cu)


#define GTM_TIM1_CH4_ECTRL (*(volatile Ifx_GTM_TIM_CH_ECTRL*)0xF0101A28u)


#define GTM_TIM1_CH4_EIRQ_EN (*(volatile Ifx_GTM_TIM_CH_EIRQ_EN*)0xF0101A3Cu)


#define GTM_TIM1_CH4_FLT_FE (*(volatile Ifx_GTM_TIM_CH_FLT_FE*)0xF0101A20u)


#define GTM_TIM1_CH4_FLT_RE (*(volatile Ifx_GTM_TIM_CH_FLT_RE*)0xF0101A1Cu)


#define GTM_TIM1_CH4_GPR0 (*(volatile Ifx_GTM_TIM_CH_GPR0*)0xF0101A00u)


#define GTM_TIM1_CH4_GPR1 (*(volatile Ifx_GTM_TIM_CH_GPR1*)0xF0101A04u)


#define GTM_TIM1_CH4_IRQ_EN (*(volatile Ifx_GTM_TIM_CH_IRQ_EN*)0xF0101A30u)


#define GTM_TIM1_CH4_IRQ_FORCINT (*(volatile Ifx_GTM_TIM_CH_IRQ_FORCINT*)0xF0101A34u)


#define GTM_TIM1_CH4_IRQ_MODE (*(volatile Ifx_GTM_TIM_CH_IRQ_MODE*)0xF0101A38u)


#define GTM_TIM1_CH4_IRQ_NOTIFY (*(volatile Ifx_GTM_TIM_CH_IRQ_NOTIFY*)0xF0101A2Cu)


#define GTM_TIM1_CH4_TDUC (*(volatile Ifx_GTM_TIM_CH_TDUC*)0xF0101A14u)


#define GTM_TIM1_CH4_TDUV (*(volatile Ifx_GTM_TIM_CH_TDUV*)0xF0101A18u)


#define GTM_TIM1_CH5_CNT (*(volatile Ifx_GTM_TIM_CH_CNT*)0xF0101A88u)


#define GTM_TIM1_CH5_CNTS (*(volatile Ifx_GTM_TIM_CH_CNTS*)0xF0101A90u)


#define GTM_TIM1_CH5_CTRL (*(volatile Ifx_GTM_TIM_CH_CTRL*)0xF0101AA4u)


#define GTM_TIM1_CH5_ECNT (*(volatile Ifx_GTM_TIM_CH_ECNT*)0xF0101A8Cu)


#define GTM_TIM1_CH5_ECTRL (*(volatile Ifx_GTM_TIM_CH_ECTRL*)0xF0101AA8u)


#define GTM_TIM1_CH5_EIRQ_EN (*(volatile Ifx_GTM_TIM_CH_EIRQ_EN*)0xF0101ABCu)


#define GTM_TIM1_CH5_FLT_FE (*(volatile Ifx_GTM_TIM_CH_FLT_FE*)0xF0101AA0u)


#define GTM_TIM1_CH5_FLT_RE (*(volatile Ifx_GTM_TIM_CH_FLT_RE*)0xF0101A9Cu)


#define GTM_TIM1_CH5_GPR0 (*(volatile Ifx_GTM_TIM_CH_GPR0*)0xF0101A80u)


#define GTM_TIM1_CH5_GPR1 (*(volatile Ifx_GTM_TIM_CH_GPR1*)0xF0101A84u)


#define GTM_TIM1_CH5_IRQ_EN (*(volatile Ifx_GTM_TIM_CH_IRQ_EN*)0xF0101AB0u)


#define GTM_TIM1_CH5_IRQ_FORCINT (*(volatile Ifx_GTM_TIM_CH_IRQ_FORCINT*)0xF0101AB4u)


#define GTM_TIM1_CH5_IRQ_MODE (*(volatile Ifx_GTM_TIM_CH_IRQ_MODE*)0xF0101AB8u)


#define GTM_TIM1_CH5_IRQ_NOTIFY (*(volatile Ifx_GTM_TIM_CH_IRQ_NOTIFY*)0xF0101AACu)


#define GTM_TIM1_CH5_TDUC (*(volatile Ifx_GTM_TIM_CH_TDUC*)0xF0101A94u)


#define GTM_TIM1_CH5_TDUV (*(volatile Ifx_GTM_TIM_CH_TDUV*)0xF0101A98u)


#define GTM_TIM1_CH6_CNT (*(volatile Ifx_GTM_TIM_CH_CNT*)0xF0101B08u)


#define GTM_TIM1_CH6_CNTS (*(volatile Ifx_GTM_TIM_CH_CNTS*)0xF0101B10u)


#define GTM_TIM1_CH6_CTRL (*(volatile Ifx_GTM_TIM_CH_CTRL*)0xF0101B24u)


#define GTM_TIM1_CH6_ECNT (*(volatile Ifx_GTM_TIM_CH_ECNT*)0xF0101B0Cu)


#define GTM_TIM1_CH6_ECTRL (*(volatile Ifx_GTM_TIM_CH_ECTRL*)0xF0101B28u)


#define GTM_TIM1_CH6_EIRQ_EN (*(volatile Ifx_GTM_TIM_CH_EIRQ_EN*)0xF0101B3Cu)


#define GTM_TIM1_CH6_FLT_FE (*(volatile Ifx_GTM_TIM_CH_FLT_FE*)0xF0101B20u)


#define GTM_TIM1_CH6_FLT_RE (*(volatile Ifx_GTM_TIM_CH_FLT_RE*)0xF0101B1Cu)


#define GTM_TIM1_CH6_GPR0 (*(volatile Ifx_GTM_TIM_CH_GPR0*)0xF0101B00u)


#define GTM_TIM1_CH6_GPR1 (*(volatile Ifx_GTM_TIM_CH_GPR1*)0xF0101B04u)


#define GTM_TIM1_CH6_IRQ_EN (*(volatile Ifx_GTM_TIM_CH_IRQ_EN*)0xF0101B30u)


#define GTM_TIM1_CH6_IRQ_FORCINT (*(volatile Ifx_GTM_TIM_CH_IRQ_FORCINT*)0xF0101B34u)


#define GTM_TIM1_CH6_IRQ_MODE (*(volatile Ifx_GTM_TIM_CH_IRQ_MODE*)0xF0101B38u)


#define GTM_TIM1_CH6_IRQ_NOTIFY (*(volatile Ifx_GTM_TIM_CH_IRQ_NOTIFY*)0xF0101B2Cu)


#define GTM_TIM1_CH6_TDUC (*(volatile Ifx_GTM_TIM_CH_TDUC*)0xF0101B14u)


#define GTM_TIM1_CH6_TDUV (*(volatile Ifx_GTM_TIM_CH_TDUV*)0xF0101B18u)


#define GTM_TIM1_CH7_CNT (*(volatile Ifx_GTM_TIM_CH_CNT*)0xF0101B88u)


#define GTM_TIM1_CH7_CNTS (*(volatile Ifx_GTM_TIM_CH_CNTS*)0xF0101B90u)


#define GTM_TIM1_CH7_CTRL (*(volatile Ifx_GTM_TIM_CH_CTRL*)0xF0101BA4u)


#define GTM_TIM1_CH7_ECNT (*(volatile Ifx_GTM_TIM_CH_ECNT*)0xF0101B8Cu)


#define GTM_TIM1_CH7_ECTRL (*(volatile Ifx_GTM_TIM_CH_ECTRL*)0xF0101BA8u)


#define GTM_TIM1_CH7_EIRQ_EN (*(volatile Ifx_GTM_TIM_CH_EIRQ_EN*)0xF0101BBCu)


#define GTM_TIM1_CH7_FLT_FE (*(volatile Ifx_GTM_TIM_CH_FLT_FE*)0xF0101BA0u)


#define GTM_TIM1_CH7_FLT_RE (*(volatile Ifx_GTM_TIM_CH_FLT_RE*)0xF0101B9Cu)


#define GTM_TIM1_CH7_GPR0 (*(volatile Ifx_GTM_TIM_CH_GPR0*)0xF0101B80u)


#define GTM_TIM1_CH7_GPR1 (*(volatile Ifx_GTM_TIM_CH_GPR1*)0xF0101B84u)


#define GTM_TIM1_CH7_IRQ_EN (*(volatile Ifx_GTM_TIM_CH_IRQ_EN*)0xF0101BB0u)


#define GTM_TIM1_CH7_IRQ_FORCINT (*(volatile Ifx_GTM_TIM_CH_IRQ_FORCINT*)0xF0101BB4u)


#define GTM_TIM1_CH7_IRQ_MODE (*(volatile Ifx_GTM_TIM_CH_IRQ_MODE*)0xF0101BB8u)


#define GTM_TIM1_CH7_IRQ_NOTIFY (*(volatile Ifx_GTM_TIM_CH_IRQ_NOTIFY*)0xF0101BACu)


#define GTM_TIM1_CH7_TDUC (*(volatile Ifx_GTM_TIM_CH_TDUC*)0xF0101B94u)


#define GTM_TIM1_CH7_TDUV (*(volatile Ifx_GTM_TIM_CH_TDUV*)0xF0101B98u)


#define GTM_TIM1_IN_SRC (*(volatile Ifx_GTM_TIM_IN_SRC*)0xF0101878u)


#define GTM_TIM1_RST (*(volatile Ifx_GTM_TIM_RST*)0xF010187Cu)


#define GTM_TIM2_CH0_CNT (*(volatile Ifx_GTM_TIM_CH_CNT*)0xF0102008u)


#define GTM_TIM2_CH0_CNTS (*(volatile Ifx_GTM_TIM_CH_CNTS*)0xF0102010u)


#define GTM_TIM2_CH0_CTRL (*(volatile Ifx_GTM_TIM_CH_CTRL*)0xF0102024u)


#define GTM_TIM2_CH0_ECNT (*(volatile Ifx_GTM_TIM_CH_ECNT*)0xF010200Cu)


#define GTM_TIM2_CH0_ECTRL (*(volatile Ifx_GTM_TIM_CH_ECTRL*)0xF0102028u)


#define GTM_TIM2_CH0_EIRQ_EN (*(volatile Ifx_GTM_TIM_CH_EIRQ_EN*)0xF010203Cu)


#define GTM_TIM2_CH0_FLT_FE (*(volatile Ifx_GTM_TIM_CH_FLT_FE*)0xF0102020u)


#define GTM_TIM2_CH0_FLT_RE (*(volatile Ifx_GTM_TIM_CH_FLT_RE*)0xF010201Cu)


#define GTM_TIM2_CH0_GPR0 (*(volatile Ifx_GTM_TIM_CH_GPR0*)0xF0102000u)


#define GTM_TIM2_CH0_GPR1 (*(volatile Ifx_GTM_TIM_CH_GPR1*)0xF0102004u)


#define GTM_TIM2_CH0_IRQ_EN (*(volatile Ifx_GTM_TIM_CH_IRQ_EN*)0xF0102030u)


#define GTM_TIM2_CH0_IRQ_FORCINT (*(volatile Ifx_GTM_TIM_CH_IRQ_FORCINT*)0xF0102034u)


#define GTM_TIM2_CH0_IRQ_MODE (*(volatile Ifx_GTM_TIM_CH_IRQ_MODE*)0xF0102038u)


#define GTM_TIM2_CH0_IRQ_NOTIFY (*(volatile Ifx_GTM_TIM_CH_IRQ_NOTIFY*)0xF010202Cu)


#define GTM_TIM2_CH0_TDUC (*(volatile Ifx_GTM_TIM_CH_TDUC*)0xF0102014u)


#define GTM_TIM2_CH0_TDUV (*(volatile Ifx_GTM_TIM_CH_TDUV*)0xF0102018u)


#define GTM_TIM2_CH1_CNT (*(volatile Ifx_GTM_TIM_CH_CNT*)0xF0102088u)


#define GTM_TIM2_CH1_CNTS (*(volatile Ifx_GTM_TIM_CH_CNTS*)0xF0102090u)


#define GTM_TIM2_CH1_CTRL (*(volatile Ifx_GTM_TIM_CH_CTRL*)0xF01020A4u)


#define GTM_TIM2_CH1_ECNT (*(volatile Ifx_GTM_TIM_CH_ECNT*)0xF010208Cu)


#define GTM_TIM2_CH1_ECTRL (*(volatile Ifx_GTM_TIM_CH_ECTRL*)0xF01020A8u)


#define GTM_TIM2_CH1_EIRQ_EN (*(volatile Ifx_GTM_TIM_CH_EIRQ_EN*)0xF01020BCu)


#define GTM_TIM2_CH1_FLT_FE (*(volatile Ifx_GTM_TIM_CH_FLT_FE*)0xF01020A0u)


#define GTM_TIM2_CH1_FLT_RE (*(volatile Ifx_GTM_TIM_CH_FLT_RE*)0xF010209Cu)


#define GTM_TIM2_CH1_GPR0 (*(volatile Ifx_GTM_TIM_CH_GPR0*)0xF0102080u)


#define GTM_TIM2_CH1_GPR1 (*(volatile Ifx_GTM_TIM_CH_GPR1*)0xF0102084u)


#define GTM_TIM2_CH1_IRQ_EN (*(volatile Ifx_GTM_TIM_CH_IRQ_EN*)0xF01020B0u)


#define GTM_TIM2_CH1_IRQ_FORCINT (*(volatile Ifx_GTM_TIM_CH_IRQ_FORCINT*)0xF01020B4u)


#define GTM_TIM2_CH1_IRQ_MODE (*(volatile Ifx_GTM_TIM_CH_IRQ_MODE*)0xF01020B8u)


#define GTM_TIM2_CH1_IRQ_NOTIFY (*(volatile Ifx_GTM_TIM_CH_IRQ_NOTIFY*)0xF01020ACu)


#define GTM_TIM2_CH1_TDUC (*(volatile Ifx_GTM_TIM_CH_TDUC*)0xF0102094u)


#define GTM_TIM2_CH1_TDUV (*(volatile Ifx_GTM_TIM_CH_TDUV*)0xF0102098u)


#define GTM_TIM2_CH2_CNT (*(volatile Ifx_GTM_TIM_CH_CNT*)0xF0102108u)


#define GTM_TIM2_CH2_CNTS (*(volatile Ifx_GTM_TIM_CH_CNTS*)0xF0102110u)


#define GTM_TIM2_CH2_CTRL (*(volatile Ifx_GTM_TIM_CH_CTRL*)0xF0102124u)


#define GTM_TIM2_CH2_ECNT (*(volatile Ifx_GTM_TIM_CH_ECNT*)0xF010210Cu)


#define GTM_TIM2_CH2_ECTRL (*(volatile Ifx_GTM_TIM_CH_ECTRL*)0xF0102128u)


#define GTM_TIM2_CH2_EIRQ_EN (*(volatile Ifx_GTM_TIM_CH_EIRQ_EN*)0xF010213Cu)


#define GTM_TIM2_CH2_FLT_FE (*(volatile Ifx_GTM_TIM_CH_FLT_FE*)0xF0102120u)


#define GTM_TIM2_CH2_FLT_RE (*(volatile Ifx_GTM_TIM_CH_FLT_RE*)0xF010211Cu)


#define GTM_TIM2_CH2_GPR0 (*(volatile Ifx_GTM_TIM_CH_GPR0*)0xF0102100u)


#define GTM_TIM2_CH2_GPR1 (*(volatile Ifx_GTM_TIM_CH_GPR1*)0xF0102104u)


#define GTM_TIM2_CH2_IRQ_EN (*(volatile Ifx_GTM_TIM_CH_IRQ_EN*)0xF0102130u)


#define GTM_TIM2_CH2_IRQ_FORCINT (*(volatile Ifx_GTM_TIM_CH_IRQ_FORCINT*)0xF0102134u)


#define GTM_TIM2_CH2_IRQ_MODE (*(volatile Ifx_GTM_TIM_CH_IRQ_MODE*)0xF0102138u)


#define GTM_TIM2_CH2_IRQ_NOTIFY (*(volatile Ifx_GTM_TIM_CH_IRQ_NOTIFY*)0xF010212Cu)


#define GTM_TIM2_CH2_TDUC (*(volatile Ifx_GTM_TIM_CH_TDUC*)0xF0102114u)


#define GTM_TIM2_CH2_TDUV (*(volatile Ifx_GTM_TIM_CH_TDUV*)0xF0102118u)


#define GTM_TIM2_CH3_CNT (*(volatile Ifx_GTM_TIM_CH_CNT*)0xF0102188u)


#define GTM_TIM2_CH3_CNTS (*(volatile Ifx_GTM_TIM_CH_CNTS*)0xF0102190u)


#define GTM_TIM2_CH3_CTRL (*(volatile Ifx_GTM_TIM_CH_CTRL*)0xF01021A4u)


#define GTM_TIM2_CH3_ECNT (*(volatile Ifx_GTM_TIM_CH_ECNT*)0xF010218Cu)


#define GTM_TIM2_CH3_ECTRL (*(volatile Ifx_GTM_TIM_CH_ECTRL*)0xF01021A8u)


#define GTM_TIM2_CH3_EIRQ_EN (*(volatile Ifx_GTM_TIM_CH_EIRQ_EN*)0xF01021BCu)


#define GTM_TIM2_CH3_FLT_FE (*(volatile Ifx_GTM_TIM_CH_FLT_FE*)0xF01021A0u)


#define GTM_TIM2_CH3_FLT_RE (*(volatile Ifx_GTM_TIM_CH_FLT_RE*)0xF010219Cu)


#define GTM_TIM2_CH3_GPR0 (*(volatile Ifx_GTM_TIM_CH_GPR0*)0xF0102180u)


#define GTM_TIM2_CH3_GPR1 (*(volatile Ifx_GTM_TIM_CH_GPR1*)0xF0102184u)


#define GTM_TIM2_CH3_IRQ_EN (*(volatile Ifx_GTM_TIM_CH_IRQ_EN*)0xF01021B0u)


#define GTM_TIM2_CH3_IRQ_FORCINT (*(volatile Ifx_GTM_TIM_CH_IRQ_FORCINT*)0xF01021B4u)


#define GTM_TIM2_CH3_IRQ_MODE (*(volatile Ifx_GTM_TIM_CH_IRQ_MODE*)0xF01021B8u)


#define GTM_TIM2_CH3_IRQ_NOTIFY (*(volatile Ifx_GTM_TIM_CH_IRQ_NOTIFY*)0xF01021ACu)


#define GTM_TIM2_CH3_TDUC (*(volatile Ifx_GTM_TIM_CH_TDUC*)0xF0102194u)


#define GTM_TIM2_CH3_TDUV (*(volatile Ifx_GTM_TIM_CH_TDUV*)0xF0102198u)


#define GTM_TIM2_CH4_CNT (*(volatile Ifx_GTM_TIM_CH_CNT*)0xF0102208u)


#define GTM_TIM2_CH4_CNTS (*(volatile Ifx_GTM_TIM_CH_CNTS*)0xF0102210u)


#define GTM_TIM2_CH4_CTRL (*(volatile Ifx_GTM_TIM_CH_CTRL*)0xF0102224u)


#define GTM_TIM2_CH4_ECNT (*(volatile Ifx_GTM_TIM_CH_ECNT*)0xF010220Cu)


#define GTM_TIM2_CH4_ECTRL (*(volatile Ifx_GTM_TIM_CH_ECTRL*)0xF0102228u)


#define GTM_TIM2_CH4_EIRQ_EN (*(volatile Ifx_GTM_TIM_CH_EIRQ_EN*)0xF010223Cu)


#define GTM_TIM2_CH4_FLT_FE (*(volatile Ifx_GTM_TIM_CH_FLT_FE*)0xF0102220u)


#define GTM_TIM2_CH4_FLT_RE (*(volatile Ifx_GTM_TIM_CH_FLT_RE*)0xF010221Cu)


#define GTM_TIM2_CH4_GPR0 (*(volatile Ifx_GTM_TIM_CH_GPR0*)0xF0102200u)


#define GTM_TIM2_CH4_GPR1 (*(volatile Ifx_GTM_TIM_CH_GPR1*)0xF0102204u)


#define GTM_TIM2_CH4_IRQ_EN (*(volatile Ifx_GTM_TIM_CH_IRQ_EN*)0xF0102230u)


#define GTM_TIM2_CH4_IRQ_FORCINT (*(volatile Ifx_GTM_TIM_CH_IRQ_FORCINT*)0xF0102234u)


#define GTM_TIM2_CH4_IRQ_MODE (*(volatile Ifx_GTM_TIM_CH_IRQ_MODE*)0xF0102238u)


#define GTM_TIM2_CH4_IRQ_NOTIFY (*(volatile Ifx_GTM_TIM_CH_IRQ_NOTIFY*)0xF010222Cu)


#define GTM_TIM2_CH4_TDUC (*(volatile Ifx_GTM_TIM_CH_TDUC*)0xF0102214u)


#define GTM_TIM2_CH4_TDUV (*(volatile Ifx_GTM_TIM_CH_TDUV*)0xF0102218u)


#define GTM_TIM2_CH5_CNT (*(volatile Ifx_GTM_TIM_CH_CNT*)0xF0102288u)


#define GTM_TIM2_CH5_CNTS (*(volatile Ifx_GTM_TIM_CH_CNTS*)0xF0102290u)


#define GTM_TIM2_CH5_CTRL (*(volatile Ifx_GTM_TIM_CH_CTRL*)0xF01022A4u)


#define GTM_TIM2_CH5_ECNT (*(volatile Ifx_GTM_TIM_CH_ECNT*)0xF010228Cu)


#define GTM_TIM2_CH5_ECTRL (*(volatile Ifx_GTM_TIM_CH_ECTRL*)0xF01022A8u)


#define GTM_TIM2_CH5_EIRQ_EN (*(volatile Ifx_GTM_TIM_CH_EIRQ_EN*)0xF01022BCu)


#define GTM_TIM2_CH5_FLT_FE (*(volatile Ifx_GTM_TIM_CH_FLT_FE*)0xF01022A0u)


#define GTM_TIM2_CH5_FLT_RE (*(volatile Ifx_GTM_TIM_CH_FLT_RE*)0xF010229Cu)


#define GTM_TIM2_CH5_GPR0 (*(volatile Ifx_GTM_TIM_CH_GPR0*)0xF0102280u)


#define GTM_TIM2_CH5_GPR1 (*(volatile Ifx_GTM_TIM_CH_GPR1*)0xF0102284u)


#define GTM_TIM2_CH5_IRQ_EN (*(volatile Ifx_GTM_TIM_CH_IRQ_EN*)0xF01022B0u)


#define GTM_TIM2_CH5_IRQ_FORCINT (*(volatile Ifx_GTM_TIM_CH_IRQ_FORCINT*)0xF01022B4u)


#define GTM_TIM2_CH5_IRQ_MODE (*(volatile Ifx_GTM_TIM_CH_IRQ_MODE*)0xF01022B8u)


#define GTM_TIM2_CH5_IRQ_NOTIFY (*(volatile Ifx_GTM_TIM_CH_IRQ_NOTIFY*)0xF01022ACu)


#define GTM_TIM2_CH5_TDUC (*(volatile Ifx_GTM_TIM_CH_TDUC*)0xF0102294u)


#define GTM_TIM2_CH5_TDUV (*(volatile Ifx_GTM_TIM_CH_TDUV*)0xF0102298u)


#define GTM_TIM2_CH6_CNT (*(volatile Ifx_GTM_TIM_CH_CNT*)0xF0102308u)


#define GTM_TIM2_CH6_CNTS (*(volatile Ifx_GTM_TIM_CH_CNTS*)0xF0102310u)


#define GTM_TIM2_CH6_CTRL (*(volatile Ifx_GTM_TIM_CH_CTRL*)0xF0102324u)


#define GTM_TIM2_CH6_ECNT (*(volatile Ifx_GTM_TIM_CH_ECNT*)0xF010230Cu)


#define GTM_TIM2_CH6_ECTRL (*(volatile Ifx_GTM_TIM_CH_ECTRL*)0xF0102328u)


#define GTM_TIM2_CH6_EIRQ_EN (*(volatile Ifx_GTM_TIM_CH_EIRQ_EN*)0xF010233Cu)


#define GTM_TIM2_CH6_FLT_FE (*(volatile Ifx_GTM_TIM_CH_FLT_FE*)0xF0102320u)


#define GTM_TIM2_CH6_FLT_RE (*(volatile Ifx_GTM_TIM_CH_FLT_RE*)0xF010231Cu)


#define GTM_TIM2_CH6_GPR0 (*(volatile Ifx_GTM_TIM_CH_GPR0*)0xF0102300u)


#define GTM_TIM2_CH6_GPR1 (*(volatile Ifx_GTM_TIM_CH_GPR1*)0xF0102304u)


#define GTM_TIM2_CH6_IRQ_EN (*(volatile Ifx_GTM_TIM_CH_IRQ_EN*)0xF0102330u)


#define GTM_TIM2_CH6_IRQ_FORCINT (*(volatile Ifx_GTM_TIM_CH_IRQ_FORCINT*)0xF0102334u)


#define GTM_TIM2_CH6_IRQ_MODE (*(volatile Ifx_GTM_TIM_CH_IRQ_MODE*)0xF0102338u)


#define GTM_TIM2_CH6_IRQ_NOTIFY (*(volatile Ifx_GTM_TIM_CH_IRQ_NOTIFY*)0xF010232Cu)


#define GTM_TIM2_CH6_TDUC (*(volatile Ifx_GTM_TIM_CH_TDUC*)0xF0102314u)


#define GTM_TIM2_CH6_TDUV (*(volatile Ifx_GTM_TIM_CH_TDUV*)0xF0102318u)


#define GTM_TIM2_CH7_CNT (*(volatile Ifx_GTM_TIM_CH_CNT*)0xF0102388u)


#define GTM_TIM2_CH7_CNTS (*(volatile Ifx_GTM_TIM_CH_CNTS*)0xF0102390u)


#define GTM_TIM2_CH7_CTRL (*(volatile Ifx_GTM_TIM_CH_CTRL*)0xF01023A4u)


#define GTM_TIM2_CH7_ECNT (*(volatile Ifx_GTM_TIM_CH_ECNT*)0xF010238Cu)


#define GTM_TIM2_CH7_ECTRL (*(volatile Ifx_GTM_TIM_CH_ECTRL*)0xF01023A8u)


#define GTM_TIM2_CH7_EIRQ_EN (*(volatile Ifx_GTM_TIM_CH_EIRQ_EN*)0xF01023BCu)


#define GTM_TIM2_CH7_FLT_FE (*(volatile Ifx_GTM_TIM_CH_FLT_FE*)0xF01023A0u)


#define GTM_TIM2_CH7_FLT_RE (*(volatile Ifx_GTM_TIM_CH_FLT_RE*)0xF010239Cu)


#define GTM_TIM2_CH7_GPR0 (*(volatile Ifx_GTM_TIM_CH_GPR0*)0xF0102380u)


#define GTM_TIM2_CH7_GPR1 (*(volatile Ifx_GTM_TIM_CH_GPR1*)0xF0102384u)


#define GTM_TIM2_CH7_IRQ_EN (*(volatile Ifx_GTM_TIM_CH_IRQ_EN*)0xF01023B0u)


#define GTM_TIM2_CH7_IRQ_FORCINT (*(volatile Ifx_GTM_TIM_CH_IRQ_FORCINT*)0xF01023B4u)


#define GTM_TIM2_CH7_IRQ_MODE (*(volatile Ifx_GTM_TIM_CH_IRQ_MODE*)0xF01023B8u)


#define GTM_TIM2_CH7_IRQ_NOTIFY (*(volatile Ifx_GTM_TIM_CH_IRQ_NOTIFY*)0xF01023ACu)


#define GTM_TIM2_CH7_TDUC (*(volatile Ifx_GTM_TIM_CH_TDUC*)0xF0102394u)


#define GTM_TIM2_CH7_TDUV (*(volatile Ifx_GTM_TIM_CH_TDUV*)0xF0102398u)


#define GTM_TIM2_IN_SRC (*(volatile Ifx_GTM_TIM_IN_SRC*)0xF0102078u)


#define GTM_TIM2_RST (*(volatile Ifx_GTM_TIM_RST*)0xF010207Cu)


#define GTM_TIM3_CH0_CNT (*(volatile Ifx_GTM_TIM_CH_CNT*)0xF0102808u)


#define GTM_TIM3_CH0_CNTS (*(volatile Ifx_GTM_TIM_CH_CNTS*)0xF0102810u)


#define GTM_TIM3_CH0_CTRL (*(volatile Ifx_GTM_TIM_CH_CTRL*)0xF0102824u)


#define GTM_TIM3_CH0_ECNT (*(volatile Ifx_GTM_TIM_CH_ECNT*)0xF010280Cu)


#define GTM_TIM3_CH0_ECTRL (*(volatile Ifx_GTM_TIM_CH_ECTRL*)0xF0102828u)


#define GTM_TIM3_CH0_EIRQ_EN (*(volatile Ifx_GTM_TIM_CH_EIRQ_EN*)0xF010283Cu)


#define GTM_TIM3_CH0_FLT_FE (*(volatile Ifx_GTM_TIM_CH_FLT_FE*)0xF0102820u)


#define GTM_TIM3_CH0_FLT_RE (*(volatile Ifx_GTM_TIM_CH_FLT_RE*)0xF010281Cu)


#define GTM_TIM3_CH0_GPR0 (*(volatile Ifx_GTM_TIM_CH_GPR0*)0xF0102800u)


#define GTM_TIM3_CH0_GPR1 (*(volatile Ifx_GTM_TIM_CH_GPR1*)0xF0102804u)


#define GTM_TIM3_CH0_IRQ_EN (*(volatile Ifx_GTM_TIM_CH_IRQ_EN*)0xF0102830u)


#define GTM_TIM3_CH0_IRQ_FORCINT (*(volatile Ifx_GTM_TIM_CH_IRQ_FORCINT*)0xF0102834u)


#define GTM_TIM3_CH0_IRQ_MODE (*(volatile Ifx_GTM_TIM_CH_IRQ_MODE*)0xF0102838u)


#define GTM_TIM3_CH0_IRQ_NOTIFY (*(volatile Ifx_GTM_TIM_CH_IRQ_NOTIFY*)0xF010282Cu)


#define GTM_TIM3_CH0_TDUC (*(volatile Ifx_GTM_TIM_CH_TDUC*)0xF0102814u)


#define GTM_TIM3_CH0_TDUV (*(volatile Ifx_GTM_TIM_CH_TDUV*)0xF0102818u)


#define GTM_TIM3_CH1_CNT (*(volatile Ifx_GTM_TIM_CH_CNT*)0xF0102888u)


#define GTM_TIM3_CH1_CNTS (*(volatile Ifx_GTM_TIM_CH_CNTS*)0xF0102890u)


#define GTM_TIM3_CH1_CTRL (*(volatile Ifx_GTM_TIM_CH_CTRL*)0xF01028A4u)


#define GTM_TIM3_CH1_ECNT (*(volatile Ifx_GTM_TIM_CH_ECNT*)0xF010288Cu)


#define GTM_TIM3_CH1_ECTRL (*(volatile Ifx_GTM_TIM_CH_ECTRL*)0xF01028A8u)


#define GTM_TIM3_CH1_EIRQ_EN (*(volatile Ifx_GTM_TIM_CH_EIRQ_EN*)0xF01028BCu)


#define GTM_TIM3_CH1_FLT_FE (*(volatile Ifx_GTM_TIM_CH_FLT_FE*)0xF01028A0u)


#define GTM_TIM3_CH1_FLT_RE (*(volatile Ifx_GTM_TIM_CH_FLT_RE*)0xF010289Cu)


#define GTM_TIM3_CH1_GPR0 (*(volatile Ifx_GTM_TIM_CH_GPR0*)0xF0102880u)


#define GTM_TIM3_CH1_GPR1 (*(volatile Ifx_GTM_TIM_CH_GPR1*)0xF0102884u)


#define GTM_TIM3_CH1_IRQ_EN (*(volatile Ifx_GTM_TIM_CH_IRQ_EN*)0xF01028B0u)


#define GTM_TIM3_CH1_IRQ_FORCINT (*(volatile Ifx_GTM_TIM_CH_IRQ_FORCINT*)0xF01028B4u)


#define GTM_TIM3_CH1_IRQ_MODE (*(volatile Ifx_GTM_TIM_CH_IRQ_MODE*)0xF01028B8u)


#define GTM_TIM3_CH1_IRQ_NOTIFY (*(volatile Ifx_GTM_TIM_CH_IRQ_NOTIFY*)0xF01028ACu)


#define GTM_TIM3_CH1_TDUC (*(volatile Ifx_GTM_TIM_CH_TDUC*)0xF0102894u)


#define GTM_TIM3_CH1_TDUV (*(volatile Ifx_GTM_TIM_CH_TDUV*)0xF0102898u)


#define GTM_TIM3_CH2_CNT (*(volatile Ifx_GTM_TIM_CH_CNT*)0xF0102908u)


#define GTM_TIM3_CH2_CNTS (*(volatile Ifx_GTM_TIM_CH_CNTS*)0xF0102910u)


#define GTM_TIM3_CH2_CTRL (*(volatile Ifx_GTM_TIM_CH_CTRL*)0xF0102924u)


#define GTM_TIM3_CH2_ECNT (*(volatile Ifx_GTM_TIM_CH_ECNT*)0xF010290Cu)


#define GTM_TIM3_CH2_ECTRL (*(volatile Ifx_GTM_TIM_CH_ECTRL*)0xF0102928u)


#define GTM_TIM3_CH2_EIRQ_EN (*(volatile Ifx_GTM_TIM_CH_EIRQ_EN*)0xF010293Cu)


#define GTM_TIM3_CH2_FLT_FE (*(volatile Ifx_GTM_TIM_CH_FLT_FE*)0xF0102920u)


#define GTM_TIM3_CH2_FLT_RE (*(volatile Ifx_GTM_TIM_CH_FLT_RE*)0xF010291Cu)


#define GTM_TIM3_CH2_GPR0 (*(volatile Ifx_GTM_TIM_CH_GPR0*)0xF0102900u)


#define GTM_TIM3_CH2_GPR1 (*(volatile Ifx_GTM_TIM_CH_GPR1*)0xF0102904u)


#define GTM_TIM3_CH2_IRQ_EN (*(volatile Ifx_GTM_TIM_CH_IRQ_EN*)0xF0102930u)


#define GTM_TIM3_CH2_IRQ_FORCINT (*(volatile Ifx_GTM_TIM_CH_IRQ_FORCINT*)0xF0102934u)


#define GTM_TIM3_CH2_IRQ_MODE (*(volatile Ifx_GTM_TIM_CH_IRQ_MODE*)0xF0102938u)


#define GTM_TIM3_CH2_IRQ_NOTIFY (*(volatile Ifx_GTM_TIM_CH_IRQ_NOTIFY*)0xF010292Cu)


#define GTM_TIM3_CH2_TDUC (*(volatile Ifx_GTM_TIM_CH_TDUC*)0xF0102914u)


#define GTM_TIM3_CH2_TDUV (*(volatile Ifx_GTM_TIM_CH_TDUV*)0xF0102918u)


#define GTM_TIM3_CH3_CNT (*(volatile Ifx_GTM_TIM_CH_CNT*)0xF0102988u)


#define GTM_TIM3_CH3_CNTS (*(volatile Ifx_GTM_TIM_CH_CNTS*)0xF0102990u)


#define GTM_TIM3_CH3_CTRL (*(volatile Ifx_GTM_TIM_CH_CTRL*)0xF01029A4u)


#define GTM_TIM3_CH3_ECNT (*(volatile Ifx_GTM_TIM_CH_ECNT*)0xF010298Cu)


#define GTM_TIM3_CH3_ECTRL (*(volatile Ifx_GTM_TIM_CH_ECTRL*)0xF01029A8u)


#define GTM_TIM3_CH3_EIRQ_EN (*(volatile Ifx_GTM_TIM_CH_EIRQ_EN*)0xF01029BCu)


#define GTM_TIM3_CH3_FLT_FE (*(volatile Ifx_GTM_TIM_CH_FLT_FE*)0xF01029A0u)


#define GTM_TIM3_CH3_FLT_RE (*(volatile Ifx_GTM_TIM_CH_FLT_RE*)0xF010299Cu)


#define GTM_TIM3_CH3_GPR0 (*(volatile Ifx_GTM_TIM_CH_GPR0*)0xF0102980u)


#define GTM_TIM3_CH3_GPR1 (*(volatile Ifx_GTM_TIM_CH_GPR1*)0xF0102984u)


#define GTM_TIM3_CH3_IRQ_EN (*(volatile Ifx_GTM_TIM_CH_IRQ_EN*)0xF01029B0u)


#define GTM_TIM3_CH3_IRQ_FORCINT (*(volatile Ifx_GTM_TIM_CH_IRQ_FORCINT*)0xF01029B4u)


#define GTM_TIM3_CH3_IRQ_MODE (*(volatile Ifx_GTM_TIM_CH_IRQ_MODE*)0xF01029B8u)


#define GTM_TIM3_CH3_IRQ_NOTIFY (*(volatile Ifx_GTM_TIM_CH_IRQ_NOTIFY*)0xF01029ACu)


#define GTM_TIM3_CH3_TDUC (*(volatile Ifx_GTM_TIM_CH_TDUC*)0xF0102994u)


#define GTM_TIM3_CH3_TDUV (*(volatile Ifx_GTM_TIM_CH_TDUV*)0xF0102998u)


#define GTM_TIM3_CH4_CNT (*(volatile Ifx_GTM_TIM_CH_CNT*)0xF0102A08u)


#define GTM_TIM3_CH4_CNTS (*(volatile Ifx_GTM_TIM_CH_CNTS*)0xF0102A10u)


#define GTM_TIM3_CH4_CTRL (*(volatile Ifx_GTM_TIM_CH_CTRL*)0xF0102A24u)


#define GTM_TIM3_CH4_ECNT (*(volatile Ifx_GTM_TIM_CH_ECNT*)0xF0102A0Cu)


#define GTM_TIM3_CH4_ECTRL (*(volatile Ifx_GTM_TIM_CH_ECTRL*)0xF0102A28u)


#define GTM_TIM3_CH4_EIRQ_EN (*(volatile Ifx_GTM_TIM_CH_EIRQ_EN*)0xF0102A3Cu)


#define GTM_TIM3_CH4_FLT_FE (*(volatile Ifx_GTM_TIM_CH_FLT_FE*)0xF0102A20u)


#define GTM_TIM3_CH4_FLT_RE (*(volatile Ifx_GTM_TIM_CH_FLT_RE*)0xF0102A1Cu)


#define GTM_TIM3_CH4_GPR0 (*(volatile Ifx_GTM_TIM_CH_GPR0*)0xF0102A00u)


#define GTM_TIM3_CH4_GPR1 (*(volatile Ifx_GTM_TIM_CH_GPR1*)0xF0102A04u)


#define GTM_TIM3_CH4_IRQ_EN (*(volatile Ifx_GTM_TIM_CH_IRQ_EN*)0xF0102A30u)


#define GTM_TIM3_CH4_IRQ_FORCINT (*(volatile Ifx_GTM_TIM_CH_IRQ_FORCINT*)0xF0102A34u)


#define GTM_TIM3_CH4_IRQ_MODE (*(volatile Ifx_GTM_TIM_CH_IRQ_MODE*)0xF0102A38u)


#define GTM_TIM3_CH4_IRQ_NOTIFY (*(volatile Ifx_GTM_TIM_CH_IRQ_NOTIFY*)0xF0102A2Cu)


#define GTM_TIM3_CH4_TDUC (*(volatile Ifx_GTM_TIM_CH_TDUC*)0xF0102A14u)


#define GTM_TIM3_CH4_TDUV (*(volatile Ifx_GTM_TIM_CH_TDUV*)0xF0102A18u)


#define GTM_TIM3_CH5_CNT (*(volatile Ifx_GTM_TIM_CH_CNT*)0xF0102A88u)


#define GTM_TIM3_CH5_CNTS (*(volatile Ifx_GTM_TIM_CH_CNTS*)0xF0102A90u)


#define GTM_TIM3_CH5_CTRL (*(volatile Ifx_GTM_TIM_CH_CTRL*)0xF0102AA4u)


#define GTM_TIM3_CH5_ECNT (*(volatile Ifx_GTM_TIM_CH_ECNT*)0xF0102A8Cu)


#define GTM_TIM3_CH5_ECTRL (*(volatile Ifx_GTM_TIM_CH_ECTRL*)0xF0102AA8u)


#define GTM_TIM3_CH5_EIRQ_EN (*(volatile Ifx_GTM_TIM_CH_EIRQ_EN*)0xF0102ABCu)


#define GTM_TIM3_CH5_FLT_FE (*(volatile Ifx_GTM_TIM_CH_FLT_FE*)0xF0102AA0u)


#define GTM_TIM3_CH5_FLT_RE (*(volatile Ifx_GTM_TIM_CH_FLT_RE*)0xF0102A9Cu)


#define GTM_TIM3_CH5_GPR0 (*(volatile Ifx_GTM_TIM_CH_GPR0*)0xF0102A80u)


#define GTM_TIM3_CH5_GPR1 (*(volatile Ifx_GTM_TIM_CH_GPR1*)0xF0102A84u)


#define GTM_TIM3_CH5_IRQ_EN (*(volatile Ifx_GTM_TIM_CH_IRQ_EN*)0xF0102AB0u)


#define GTM_TIM3_CH5_IRQ_FORCINT (*(volatile Ifx_GTM_TIM_CH_IRQ_FORCINT*)0xF0102AB4u)


#define GTM_TIM3_CH5_IRQ_MODE (*(volatile Ifx_GTM_TIM_CH_IRQ_MODE*)0xF0102AB8u)


#define GTM_TIM3_CH5_IRQ_NOTIFY (*(volatile Ifx_GTM_TIM_CH_IRQ_NOTIFY*)0xF0102AACu)


#define GTM_TIM3_CH5_TDUC (*(volatile Ifx_GTM_TIM_CH_TDUC*)0xF0102A94u)


#define GTM_TIM3_CH5_TDUV (*(volatile Ifx_GTM_TIM_CH_TDUV*)0xF0102A98u)


#define GTM_TIM3_CH6_CNT (*(volatile Ifx_GTM_TIM_CH_CNT*)0xF0102B08u)


#define GTM_TIM3_CH6_CNTS (*(volatile Ifx_GTM_TIM_CH_CNTS*)0xF0102B10u)


#define GTM_TIM3_CH6_CTRL (*(volatile Ifx_GTM_TIM_CH_CTRL*)0xF0102B24u)


#define GTM_TIM3_CH6_ECNT (*(volatile Ifx_GTM_TIM_CH_ECNT*)0xF0102B0Cu)


#define GTM_TIM3_CH6_ECTRL (*(volatile Ifx_GTM_TIM_CH_ECTRL*)0xF0102B28u)


#define GTM_TIM3_CH6_EIRQ_EN (*(volatile Ifx_GTM_TIM_CH_EIRQ_EN*)0xF0102B3Cu)


#define GTM_TIM3_CH6_FLT_FE (*(volatile Ifx_GTM_TIM_CH_FLT_FE*)0xF0102B20u)


#define GTM_TIM3_CH6_FLT_RE (*(volatile Ifx_GTM_TIM_CH_FLT_RE*)0xF0102B1Cu)


#define GTM_TIM3_CH6_GPR0 (*(volatile Ifx_GTM_TIM_CH_GPR0*)0xF0102B00u)


#define GTM_TIM3_CH6_GPR1 (*(volatile Ifx_GTM_TIM_CH_GPR1*)0xF0102B04u)


#define GTM_TIM3_CH6_IRQ_EN (*(volatile Ifx_GTM_TIM_CH_IRQ_EN*)0xF0102B30u)


#define GTM_TIM3_CH6_IRQ_FORCINT (*(volatile Ifx_GTM_TIM_CH_IRQ_FORCINT*)0xF0102B34u)


#define GTM_TIM3_CH6_IRQ_MODE (*(volatile Ifx_GTM_TIM_CH_IRQ_MODE*)0xF0102B38u)


#define GTM_TIM3_CH6_IRQ_NOTIFY (*(volatile Ifx_GTM_TIM_CH_IRQ_NOTIFY*)0xF0102B2Cu)


#define GTM_TIM3_CH6_TDUC (*(volatile Ifx_GTM_TIM_CH_TDUC*)0xF0102B14u)


#define GTM_TIM3_CH6_TDUV (*(volatile Ifx_GTM_TIM_CH_TDUV*)0xF0102B18u)


#define GTM_TIM3_CH7_CNT (*(volatile Ifx_GTM_TIM_CH_CNT*)0xF0102B88u)


#define GTM_TIM3_CH7_CNTS (*(volatile Ifx_GTM_TIM_CH_CNTS*)0xF0102B90u)


#define GTM_TIM3_CH7_CTRL (*(volatile Ifx_GTM_TIM_CH_CTRL*)0xF0102BA4u)


#define GTM_TIM3_CH7_ECNT (*(volatile Ifx_GTM_TIM_CH_ECNT*)0xF0102B8Cu)


#define GTM_TIM3_CH7_ECTRL (*(volatile Ifx_GTM_TIM_CH_ECTRL*)0xF0102BA8u)


#define GTM_TIM3_CH7_EIRQ_EN (*(volatile Ifx_GTM_TIM_CH_EIRQ_EN*)0xF0102BBCu)


#define GTM_TIM3_CH7_FLT_FE (*(volatile Ifx_GTM_TIM_CH_FLT_FE*)0xF0102BA0u)


#define GTM_TIM3_CH7_FLT_RE (*(volatile Ifx_GTM_TIM_CH_FLT_RE*)0xF0102B9Cu)


#define GTM_TIM3_CH7_GPR0 (*(volatile Ifx_GTM_TIM_CH_GPR0*)0xF0102B80u)


#define GTM_TIM3_CH7_GPR1 (*(volatile Ifx_GTM_TIM_CH_GPR1*)0xF0102B84u)


#define GTM_TIM3_CH7_IRQ_EN (*(volatile Ifx_GTM_TIM_CH_IRQ_EN*)0xF0102BB0u)


#define GTM_TIM3_CH7_IRQ_FORCINT (*(volatile Ifx_GTM_TIM_CH_IRQ_FORCINT*)0xF0102BB4u)


#define GTM_TIM3_CH7_IRQ_MODE (*(volatile Ifx_GTM_TIM_CH_IRQ_MODE*)0xF0102BB8u)


#define GTM_TIM3_CH7_IRQ_NOTIFY (*(volatile Ifx_GTM_TIM_CH_IRQ_NOTIFY*)0xF0102BACu)


#define GTM_TIM3_CH7_TDUC (*(volatile Ifx_GTM_TIM_CH_TDUC*)0xF0102B94u)


#define GTM_TIM3_CH7_TDUV (*(volatile Ifx_GTM_TIM_CH_TDUV*)0xF0102B98u)


#define GTM_TIM3_IN_SRC (*(volatile Ifx_GTM_TIM_IN_SRC*)0xF0102878u)


#define GTM_TIM3_RST (*(volatile Ifx_GTM_TIM_RST*)0xF010287Cu)


#define GTM_TIM_AUX_IN_SRC0 (*(volatile Ifx_GTM_TIM_AUX_IN_SRC*)0xF0100040u)




#define GTM_TIM0_AUX_IN_SRC (GTM_TIM_AUX_IN_SRC0)


#define GTM_TIM_AUX_IN_SRC1 (*(volatile Ifx_GTM_TIM_AUX_IN_SRC*)0xF0100044u)




#define GTM_TIM1_AUX_IN_SRC (GTM_TIM_AUX_IN_SRC1)


#define GTM_TIM_AUX_IN_SRC2 (*(volatile Ifx_GTM_TIM_AUX_IN_SRC*)0xF0100048u)




#define GTM_TIM2_AUX_IN_SRC (GTM_TIM_AUX_IN_SRC2)


#define GTM_TIM_AUX_IN_SRC3 (*(volatile Ifx_GTM_TIM_AUX_IN_SRC*)0xF010004Cu)




#define GTM_TIM3_AUX_IN_SRC (GTM_TIM_AUX_IN_SRC3)


#define GTM_TOM0_CH0_CM0 (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF010800Cu)


#define GTM_TOM0_CH0_CM1 (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF0108010u)


#define GTM_TOM0_CH0_CN0 (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF0108014u)


#define GTM_TOM0_CH0_CTRL (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF0108000u)


#define GTM_TOM0_CH0_IRQ_EN (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF0108020u)


#define GTM_TOM0_CH0_IRQ_FORCINT (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF0108024u)


#define GTM_TOM0_CH0_IRQ_MODE (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF0108028u)


#define GTM_TOM0_CH0_IRQ_NOTIFY (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF010801Cu)


#define GTM_TOM0_CH0_SR0 (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF0108004u)


#define GTM_TOM0_CH0_SR1 (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF0108008u)


#define GTM_TOM0_CH0_STAT (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF0108018u)


#define GTM_TOM0_CH10_CM0 (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF010828Cu)


#define GTM_TOM0_CH10_CM1 (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF0108290u)


#define GTM_TOM0_CH10_CN0 (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF0108294u)


#define GTM_TOM0_CH10_CTRL (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF0108280u)


#define GTM_TOM0_CH10_IRQ_EN (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF01082A0u)


#define GTM_TOM0_CH10_IRQ_FORCINT (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF01082A4u)


#define GTM_TOM0_CH10_IRQ_MODE (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF01082A8u)


#define GTM_TOM0_CH10_IRQ_NOTIFY (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF010829Cu)


#define GTM_TOM0_CH10_SR0 (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF0108284u)


#define GTM_TOM0_CH10_SR1 (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF0108288u)


#define GTM_TOM0_CH10_STAT (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF0108298u)


#define GTM_TOM0_CH11_CM0 (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF01082CCu)


#define GTM_TOM0_CH11_CM1 (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF01082D0u)


#define GTM_TOM0_CH11_CN0 (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF01082D4u)


#define GTM_TOM0_CH11_CTRL (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF01082C0u)


#define GTM_TOM0_CH11_IRQ_EN (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF01082E0u)


#define GTM_TOM0_CH11_IRQ_FORCINT (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF01082E4u)


#define GTM_TOM0_CH11_IRQ_MODE (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF01082E8u)


#define GTM_TOM0_CH11_IRQ_NOTIFY (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF01082DCu)


#define GTM_TOM0_CH11_SR0 (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF01082C4u)


#define GTM_TOM0_CH11_SR1 (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF01082C8u)


#define GTM_TOM0_CH11_STAT (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF01082D8u)


#define GTM_TOM0_CH12_CM0 (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF010830Cu)


#define GTM_TOM0_CH12_CM1 (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF0108310u)


#define GTM_TOM0_CH12_CN0 (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF0108314u)


#define GTM_TOM0_CH12_CTRL (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF0108300u)


#define GTM_TOM0_CH12_IRQ_EN (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF0108320u)


#define GTM_TOM0_CH12_IRQ_FORCINT (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF0108324u)


#define GTM_TOM0_CH12_IRQ_MODE (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF0108328u)


#define GTM_TOM0_CH12_IRQ_NOTIFY (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF010831Cu)


#define GTM_TOM0_CH12_SR0 (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF0108304u)


#define GTM_TOM0_CH12_SR1 (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF0108308u)


#define GTM_TOM0_CH12_STAT (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF0108318u)


#define GTM_TOM0_CH13_CM0 (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF010834Cu)


#define GTM_TOM0_CH13_CM1 (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF0108350u)


#define GTM_TOM0_CH13_CN0 (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF0108354u)


#define GTM_TOM0_CH13_CTRL (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF0108340u)


#define GTM_TOM0_CH13_IRQ_EN (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF0108360u)


#define GTM_TOM0_CH13_IRQ_FORCINT (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF0108364u)


#define GTM_TOM0_CH13_IRQ_MODE (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF0108368u)


#define GTM_TOM0_CH13_IRQ_NOTIFY (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF010835Cu)


#define GTM_TOM0_CH13_SR0 (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF0108344u)


#define GTM_TOM0_CH13_SR1 (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF0108348u)


#define GTM_TOM0_CH13_STAT (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF0108358u)


#define GTM_TOM0_CH14_CM0 (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF010838Cu)


#define GTM_TOM0_CH14_CM1 (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF0108390u)


#define GTM_TOM0_CH14_CN0 (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF0108394u)


#define GTM_TOM0_CH14_CTRL (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF0108380u)


#define GTM_TOM0_CH14_IRQ_EN (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF01083A0u)


#define GTM_TOM0_CH14_IRQ_FORCINT (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF01083A4u)


#define GTM_TOM0_CH14_IRQ_MODE (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF01083A8u)


#define GTM_TOM0_CH14_IRQ_NOTIFY (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF010839Cu)


#define GTM_TOM0_CH14_SR0 (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF0108384u)


#define GTM_TOM0_CH14_SR1 (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF0108388u)


#define GTM_TOM0_CH14_STAT (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF0108398u)


#define GTM_TOM0_CH15_CM0 (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF01083CCu)


#define GTM_TOM0_CH15_CM1 (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF01083D0u)


#define GTM_TOM0_CH15_CN0 (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF01083D4u)


#define GTM_TOM0_CH15_CTRL (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF01083C0u)


#define GTM_TOM0_CH15_IRQ_EN (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF01083E0u)


#define GTM_TOM0_CH15_IRQ_FORCINT (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF01083E4u)


#define GTM_TOM0_CH15_IRQ_MODE (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF01083E8u)


#define GTM_TOM0_CH15_IRQ_NOTIFY (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF01083DCu)


#define GTM_TOM0_CH15_SR0 (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF01083C4u)


#define GTM_TOM0_CH15_SR1 (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF01083C8u)


#define GTM_TOM0_CH15_STAT (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF01083D8u)


#define GTM_TOM0_CH1_CM0 (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF010804Cu)


#define GTM_TOM0_CH1_CM1 (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF0108050u)


#define GTM_TOM0_CH1_CN0 (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF0108054u)


#define GTM_TOM0_CH1_CTRL (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF0108040u)


#define GTM_TOM0_CH1_IRQ_EN (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF0108060u)


#define GTM_TOM0_CH1_IRQ_FORCINT (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF0108064u)


#define GTM_TOM0_CH1_IRQ_MODE (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF0108068u)


#define GTM_TOM0_CH1_IRQ_NOTIFY (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF010805Cu)


#define GTM_TOM0_CH1_SR0 (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF0108044u)


#define GTM_TOM0_CH1_SR1 (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF0108048u)


#define GTM_TOM0_CH1_STAT (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF0108058u)


#define GTM_TOM0_CH2_CM0 (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF010808Cu)


#define GTM_TOM0_CH2_CM1 (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF0108090u)


#define GTM_TOM0_CH2_CN0 (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF0108094u)


#define GTM_TOM0_CH2_CTRL (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF0108080u)


#define GTM_TOM0_CH2_IRQ_EN (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF01080A0u)


#define GTM_TOM0_CH2_IRQ_FORCINT (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF01080A4u)


#define GTM_TOM0_CH2_IRQ_MODE (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF01080A8u)


#define GTM_TOM0_CH2_IRQ_NOTIFY (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF010809Cu)


#define GTM_TOM0_CH2_SR0 (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF0108084u)


#define GTM_TOM0_CH2_SR1 (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF0108088u)


#define GTM_TOM0_CH2_STAT (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF0108098u)


#define GTM_TOM0_CH3_CM0 (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF01080CCu)


#define GTM_TOM0_CH3_CM1 (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF01080D0u)


#define GTM_TOM0_CH3_CN0 (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF01080D4u)


#define GTM_TOM0_CH3_CTRL (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF01080C0u)


#define GTM_TOM0_CH3_IRQ_EN (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF01080E0u)


#define GTM_TOM0_CH3_IRQ_FORCINT (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF01080E4u)


#define GTM_TOM0_CH3_IRQ_MODE (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF01080E8u)


#define GTM_TOM0_CH3_IRQ_NOTIFY (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF01080DCu)


#define GTM_TOM0_CH3_SR0 (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF01080C4u)


#define GTM_TOM0_CH3_SR1 (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF01080C8u)


#define GTM_TOM0_CH3_STAT (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF01080D8u)


#define GTM_TOM0_CH4_CM0 (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF010810Cu)


#define GTM_TOM0_CH4_CM1 (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF0108110u)


#define GTM_TOM0_CH4_CN0 (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF0108114u)


#define GTM_TOM0_CH4_CTRL (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF0108100u)


#define GTM_TOM0_CH4_IRQ_EN (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF0108120u)


#define GTM_TOM0_CH4_IRQ_FORCINT (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF0108124u)


#define GTM_TOM0_CH4_IRQ_MODE (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF0108128u)


#define GTM_TOM0_CH4_IRQ_NOTIFY (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF010811Cu)


#define GTM_TOM0_CH4_SR0 (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF0108104u)


#define GTM_TOM0_CH4_SR1 (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF0108108u)


#define GTM_TOM0_CH4_STAT (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF0108118u)


#define GTM_TOM0_CH5_CM0 (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF010814Cu)


#define GTM_TOM0_CH5_CM1 (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF0108150u)


#define GTM_TOM0_CH5_CN0 (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF0108154u)


#define GTM_TOM0_CH5_CTRL (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF0108140u)


#define GTM_TOM0_CH5_IRQ_EN (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF0108160u)


#define GTM_TOM0_CH5_IRQ_FORCINT (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF0108164u)


#define GTM_TOM0_CH5_IRQ_MODE (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF0108168u)


#define GTM_TOM0_CH5_IRQ_NOTIFY (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF010815Cu)


#define GTM_TOM0_CH5_SR0 (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF0108144u)


#define GTM_TOM0_CH5_SR1 (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF0108148u)


#define GTM_TOM0_CH5_STAT (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF0108158u)


#define GTM_TOM0_CH6_CM0 (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF010818Cu)


#define GTM_TOM0_CH6_CM1 (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF0108190u)


#define GTM_TOM0_CH6_CN0 (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF0108194u)


#define GTM_TOM0_CH6_CTRL (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF0108180u)


#define GTM_TOM0_CH6_IRQ_EN (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF01081A0u)


#define GTM_TOM0_CH6_IRQ_FORCINT (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF01081A4u)


#define GTM_TOM0_CH6_IRQ_MODE (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF01081A8u)


#define GTM_TOM0_CH6_IRQ_NOTIFY (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF010819Cu)


#define GTM_TOM0_CH6_SR0 (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF0108184u)


#define GTM_TOM0_CH6_SR1 (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF0108188u)


#define GTM_TOM0_CH6_STAT (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF0108198u)


#define GTM_TOM0_CH7_CM0 (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF01081CCu)


#define GTM_TOM0_CH7_CM1 (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF01081D0u)


#define GTM_TOM0_CH7_CN0 (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF01081D4u)


#define GTM_TOM0_CH7_CTRL (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF01081C0u)


#define GTM_TOM0_CH7_IRQ_EN (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF01081E0u)


#define GTM_TOM0_CH7_IRQ_FORCINT (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF01081E4u)


#define GTM_TOM0_CH7_IRQ_MODE (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF01081E8u)


#define GTM_TOM0_CH7_IRQ_NOTIFY (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF01081DCu)


#define GTM_TOM0_CH7_SR0 (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF01081C4u)


#define GTM_TOM0_CH7_SR1 (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF01081C8u)


#define GTM_TOM0_CH7_STAT (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF01081D8u)


#define GTM_TOM0_CH8_CM0 (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF010820Cu)


#define GTM_TOM0_CH8_CM1 (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF0108210u)


#define GTM_TOM0_CH8_CN0 (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF0108214u)


#define GTM_TOM0_CH8_CTRL (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF0108200u)


#define GTM_TOM0_CH8_IRQ_EN (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF0108220u)


#define GTM_TOM0_CH8_IRQ_FORCINT (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF0108224u)


#define GTM_TOM0_CH8_IRQ_MODE (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF0108228u)


#define GTM_TOM0_CH8_IRQ_NOTIFY (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF010821Cu)


#define GTM_TOM0_CH8_SR0 (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF0108204u)


#define GTM_TOM0_CH8_SR1 (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF0108208u)


#define GTM_TOM0_CH8_STAT (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF0108218u)


#define GTM_TOM0_CH9_CM0 (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF010824Cu)


#define GTM_TOM0_CH9_CM1 (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF0108250u)


#define GTM_TOM0_CH9_CN0 (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF0108254u)


#define GTM_TOM0_CH9_CTRL (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF0108240u)


#define GTM_TOM0_CH9_IRQ_EN (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF0108260u)


#define GTM_TOM0_CH9_IRQ_FORCINT (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF0108264u)


#define GTM_TOM0_CH9_IRQ_MODE (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF0108268u)


#define GTM_TOM0_CH9_IRQ_NOTIFY (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF010825Cu)


#define GTM_TOM0_CH9_SR0 (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF0108244u)


#define GTM_TOM0_CH9_SR1 (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF0108248u)


#define GTM_TOM0_CH9_STAT (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF0108258u)


#define GTM_TOM0_TGC0_ACT_TB (*(volatile Ifx_GTM_TOM_TGC0_ACT_TB*)0xF0108034u)


#define GTM_TOM0_TGC0_ENDIS_CTRL (*(volatile Ifx_GTM_TOM_TGC0_ENDIS_CTRL*)0xF0108070u)


#define GTM_TOM0_TGC0_ENDIS_STAT (*(volatile Ifx_GTM_TOM_TGC0_ENDIS_STAT*)0xF0108074u)


#define GTM_TOM0_TGC0_FUPD_CTRL (*(volatile Ifx_GTM_TOM_TGC0_FUPD_CTRL*)0xF0108038u)


#define GTM_TOM0_TGC0_GLB_CTRL (*(volatile Ifx_GTM_TOM_TGC0_GLB_CTRL*)0xF0108030u)


#define GTM_TOM0_TGC0_INT_TRIG (*(volatile Ifx_GTM_TOM_TGC0_INT_TRIG*)0xF010803Cu)


#define GTM_TOM0_TGC0_OUTEN_CTRL (*(volatile Ifx_GTM_TOM_TGC0_OUTEN_CTRL*)0xF0108078u)


#define GTM_TOM0_TGC0_OUTEN_STAT (*(volatile Ifx_GTM_TOM_TGC0_OUTEN_STAT*)0xF010807Cu)


#define GTM_TOM0_TGC1_ACT_TB (*(volatile Ifx_GTM_TOM_TGC1_ACT_TB*)0xF0108234u)


#define GTM_TOM0_TGC1_ENDIS_CTRL (*(volatile Ifx_GTM_TOM_TGC1_ENDIS_CTRL*)0xF0108270u)


#define GTM_TOM0_TGC1_ENDIS_STAT (*(volatile Ifx_GTM_TOM_TGC1_ENDIS_STAT*)0xF0108274u)


#define GTM_TOM0_TGC1_FUPD_CTRL (*(volatile Ifx_GTM_TOM_TGC1_FUPD_CTRL*)0xF0108238u)


#define GTM_TOM0_TGC1_GLB_CTRL (*(volatile Ifx_GTM_TOM_TGC1_GLB_CTRL*)0xF0108230u)


#define GTM_TOM0_TGC1_INT_TRIG (*(volatile Ifx_GTM_TOM_TGC1_INT_TRIG*)0xF010823Cu)


#define GTM_TOM0_TGC1_OUTEN_CTRL (*(volatile Ifx_GTM_TOM_TGC1_OUTEN_CTRL*)0xF0108278u)


#define GTM_TOM0_TGC1_OUTEN_STAT (*(volatile Ifx_GTM_TOM_TGC1_OUTEN_STAT*)0xF010827Cu)


#define GTM_TOM1_CH0_CM0 (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF010880Cu)


#define GTM_TOM1_CH0_CM1 (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF0108810u)


#define GTM_TOM1_CH0_CN0 (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF0108814u)


#define GTM_TOM1_CH0_CTRL (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF0108800u)


#define GTM_TOM1_CH0_IRQ_EN (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF0108820u)


#define GTM_TOM1_CH0_IRQ_FORCINT (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF0108824u)


#define GTM_TOM1_CH0_IRQ_MODE (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF0108828u)


#define GTM_TOM1_CH0_IRQ_NOTIFY (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF010881Cu)


#define GTM_TOM1_CH0_SR0 (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF0108804u)


#define GTM_TOM1_CH0_SR1 (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF0108808u)


#define GTM_TOM1_CH0_STAT (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF0108818u)


#define GTM_TOM1_CH10_CM0 (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF0108A8Cu)


#define GTM_TOM1_CH10_CM1 (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF0108A90u)


#define GTM_TOM1_CH10_CN0 (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF0108A94u)


#define GTM_TOM1_CH10_CTRL (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF0108A80u)


#define GTM_TOM1_CH10_IRQ_EN (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF0108AA0u)


#define GTM_TOM1_CH10_IRQ_FORCINT (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF0108AA4u)


#define GTM_TOM1_CH10_IRQ_MODE (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF0108AA8u)


#define GTM_TOM1_CH10_IRQ_NOTIFY (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF0108A9Cu)


#define GTM_TOM1_CH10_SR0 (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF0108A84u)


#define GTM_TOM1_CH10_SR1 (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF0108A88u)


#define GTM_TOM1_CH10_STAT (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF0108A98u)


#define GTM_TOM1_CH11_CM0 (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF0108ACCu)


#define GTM_TOM1_CH11_CM1 (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF0108AD0u)


#define GTM_TOM1_CH11_CN0 (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF0108AD4u)


#define GTM_TOM1_CH11_CTRL (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF0108AC0u)


#define GTM_TOM1_CH11_IRQ_EN (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF0108AE0u)


#define GTM_TOM1_CH11_IRQ_FORCINT (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF0108AE4u)


#define GTM_TOM1_CH11_IRQ_MODE (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF0108AE8u)


#define GTM_TOM1_CH11_IRQ_NOTIFY (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF0108ADCu)


#define GTM_TOM1_CH11_SR0 (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF0108AC4u)


#define GTM_TOM1_CH11_SR1 (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF0108AC8u)


#define GTM_TOM1_CH11_STAT (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF0108AD8u)


#define GTM_TOM1_CH12_CM0 (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF0108B0Cu)


#define GTM_TOM1_CH12_CM1 (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF0108B10u)


#define GTM_TOM1_CH12_CN0 (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF0108B14u)


#define GTM_TOM1_CH12_CTRL (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF0108B00u)


#define GTM_TOM1_CH12_IRQ_EN (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF0108B20u)


#define GTM_TOM1_CH12_IRQ_FORCINT (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF0108B24u)


#define GTM_TOM1_CH12_IRQ_MODE (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF0108B28u)


#define GTM_TOM1_CH12_IRQ_NOTIFY (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF0108B1Cu)


#define GTM_TOM1_CH12_SR0 (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF0108B04u)


#define GTM_TOM1_CH12_SR1 (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF0108B08u)


#define GTM_TOM1_CH12_STAT (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF0108B18u)


#define GTM_TOM1_CH13_CM0 (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF0108B4Cu)


#define GTM_TOM1_CH13_CM1 (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF0108B50u)


#define GTM_TOM1_CH13_CN0 (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF0108B54u)


#define GTM_TOM1_CH13_CTRL (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF0108B40u)


#define GTM_TOM1_CH13_IRQ_EN (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF0108B60u)


#define GTM_TOM1_CH13_IRQ_FORCINT (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF0108B64u)


#define GTM_TOM1_CH13_IRQ_MODE (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF0108B68u)


#define GTM_TOM1_CH13_IRQ_NOTIFY (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF0108B5Cu)


#define GTM_TOM1_CH13_SR0 (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF0108B44u)


#define GTM_TOM1_CH13_SR1 (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF0108B48u)


#define GTM_TOM1_CH13_STAT (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF0108B58u)


#define GTM_TOM1_CH14_CM0 (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF0108B8Cu)


#define GTM_TOM1_CH14_CM1 (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF0108B90u)


#define GTM_TOM1_CH14_CN0 (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF0108B94u)


#define GTM_TOM1_CH14_CTRL (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF0108B80u)


#define GTM_TOM1_CH14_IRQ_EN (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF0108BA0u)


#define GTM_TOM1_CH14_IRQ_FORCINT (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF0108BA4u)


#define GTM_TOM1_CH14_IRQ_MODE (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF0108BA8u)


#define GTM_TOM1_CH14_IRQ_NOTIFY (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF0108B9Cu)


#define GTM_TOM1_CH14_SR0 (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF0108B84u)


#define GTM_TOM1_CH14_SR1 (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF0108B88u)


#define GTM_TOM1_CH14_STAT (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF0108B98u)


#define GTM_TOM1_CH15_CM0 (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF0108BCCu)


#define GTM_TOM1_CH15_CM1 (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF0108BD0u)


#define GTM_TOM1_CH15_CN0 (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF0108BD4u)


#define GTM_TOM1_CH15_CTRL (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF0108BC0u)


#define GTM_TOM1_CH15_IRQ_EN (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF0108BE0u)


#define GTM_TOM1_CH15_IRQ_FORCINT (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF0108BE4u)


#define GTM_TOM1_CH15_IRQ_MODE (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF0108BE8u)


#define GTM_TOM1_CH15_IRQ_NOTIFY (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF0108BDCu)


#define GTM_TOM1_CH15_SR0 (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF0108BC4u)


#define GTM_TOM1_CH15_SR1 (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF0108BC8u)


#define GTM_TOM1_CH15_STAT (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF0108BD8u)


#define GTM_TOM1_CH1_CM0 (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF010884Cu)


#define GTM_TOM1_CH1_CM1 (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF0108850u)


#define GTM_TOM1_CH1_CN0 (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF0108854u)


#define GTM_TOM1_CH1_CTRL (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF0108840u)


#define GTM_TOM1_CH1_IRQ_EN (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF0108860u)


#define GTM_TOM1_CH1_IRQ_FORCINT (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF0108864u)


#define GTM_TOM1_CH1_IRQ_MODE (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF0108868u)


#define GTM_TOM1_CH1_IRQ_NOTIFY (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF010885Cu)


#define GTM_TOM1_CH1_SR0 (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF0108844u)


#define GTM_TOM1_CH1_SR1 (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF0108848u)


#define GTM_TOM1_CH1_STAT (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF0108858u)


#define GTM_TOM1_CH2_CM0 (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF010888Cu)


#define GTM_TOM1_CH2_CM1 (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF0108890u)


#define GTM_TOM1_CH2_CN0 (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF0108894u)


#define GTM_TOM1_CH2_CTRL (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF0108880u)


#define GTM_TOM1_CH2_IRQ_EN (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF01088A0u)


#define GTM_TOM1_CH2_IRQ_FORCINT (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF01088A4u)


#define GTM_TOM1_CH2_IRQ_MODE (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF01088A8u)


#define GTM_TOM1_CH2_IRQ_NOTIFY (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF010889Cu)


#define GTM_TOM1_CH2_SR0 (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF0108884u)


#define GTM_TOM1_CH2_SR1 (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF0108888u)


#define GTM_TOM1_CH2_STAT (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF0108898u)


#define GTM_TOM1_CH3_CM0 (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF01088CCu)


#define GTM_TOM1_CH3_CM1 (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF01088D0u)


#define GTM_TOM1_CH3_CN0 (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF01088D4u)


#define GTM_TOM1_CH3_CTRL (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF01088C0u)


#define GTM_TOM1_CH3_IRQ_EN (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF01088E0u)


#define GTM_TOM1_CH3_IRQ_FORCINT (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF01088E4u)


#define GTM_TOM1_CH3_IRQ_MODE (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF01088E8u)


#define GTM_TOM1_CH3_IRQ_NOTIFY (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF01088DCu)


#define GTM_TOM1_CH3_SR0 (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF01088C4u)


#define GTM_TOM1_CH3_SR1 (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF01088C8u)


#define GTM_TOM1_CH3_STAT (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF01088D8u)


#define GTM_TOM1_CH4_CM0 (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF010890Cu)


#define GTM_TOM1_CH4_CM1 (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF0108910u)


#define GTM_TOM1_CH4_CN0 (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF0108914u)


#define GTM_TOM1_CH4_CTRL (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF0108900u)


#define GTM_TOM1_CH4_IRQ_EN (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF0108920u)


#define GTM_TOM1_CH4_IRQ_FORCINT (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF0108924u)


#define GTM_TOM1_CH4_IRQ_MODE (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF0108928u)


#define GTM_TOM1_CH4_IRQ_NOTIFY (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF010891Cu)


#define GTM_TOM1_CH4_SR0 (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF0108904u)


#define GTM_TOM1_CH4_SR1 (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF0108908u)


#define GTM_TOM1_CH4_STAT (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF0108918u)


#define GTM_TOM1_CH5_CM0 (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF010894Cu)


#define GTM_TOM1_CH5_CM1 (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF0108950u)


#define GTM_TOM1_CH5_CN0 (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF0108954u)


#define GTM_TOM1_CH5_CTRL (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF0108940u)


#define GTM_TOM1_CH5_IRQ_EN (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF0108960u)


#define GTM_TOM1_CH5_IRQ_FORCINT (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF0108964u)


#define GTM_TOM1_CH5_IRQ_MODE (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF0108968u)


#define GTM_TOM1_CH5_IRQ_NOTIFY (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF010895Cu)


#define GTM_TOM1_CH5_SR0 (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF0108944u)


#define GTM_TOM1_CH5_SR1 (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF0108948u)


#define GTM_TOM1_CH5_STAT (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF0108958u)


#define GTM_TOM1_CH6_CM0 (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF010898Cu)


#define GTM_TOM1_CH6_CM1 (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF0108990u)


#define GTM_TOM1_CH6_CN0 (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF0108994u)


#define GTM_TOM1_CH6_CTRL (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF0108980u)


#define GTM_TOM1_CH6_IRQ_EN (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF01089A0u)


#define GTM_TOM1_CH6_IRQ_FORCINT (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF01089A4u)


#define GTM_TOM1_CH6_IRQ_MODE (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF01089A8u)


#define GTM_TOM1_CH6_IRQ_NOTIFY (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF010899Cu)


#define GTM_TOM1_CH6_SR0 (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF0108984u)


#define GTM_TOM1_CH6_SR1 (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF0108988u)


#define GTM_TOM1_CH6_STAT (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF0108998u)


#define GTM_TOM1_CH7_CM0 (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF01089CCu)


#define GTM_TOM1_CH7_CM1 (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF01089D0u)


#define GTM_TOM1_CH7_CN0 (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF01089D4u)


#define GTM_TOM1_CH7_CTRL (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF01089C0u)


#define GTM_TOM1_CH7_IRQ_EN (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF01089E0u)


#define GTM_TOM1_CH7_IRQ_FORCINT (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF01089E4u)


#define GTM_TOM1_CH7_IRQ_MODE (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF01089E8u)


#define GTM_TOM1_CH7_IRQ_NOTIFY (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF01089DCu)


#define GTM_TOM1_CH7_SR0 (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF01089C4u)


#define GTM_TOM1_CH7_SR1 (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF01089C8u)


#define GTM_TOM1_CH7_STAT (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF01089D8u)


#define GTM_TOM1_CH8_CM0 (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF0108A0Cu)


#define GTM_TOM1_CH8_CM1 (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF0108A10u)


#define GTM_TOM1_CH8_CN0 (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF0108A14u)


#define GTM_TOM1_CH8_CTRL (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF0108A00u)


#define GTM_TOM1_CH8_IRQ_EN (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF0108A20u)


#define GTM_TOM1_CH8_IRQ_FORCINT (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF0108A24u)


#define GTM_TOM1_CH8_IRQ_MODE (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF0108A28u)


#define GTM_TOM1_CH8_IRQ_NOTIFY (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF0108A1Cu)


#define GTM_TOM1_CH8_SR0 (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF0108A04u)


#define GTM_TOM1_CH8_SR1 (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF0108A08u)


#define GTM_TOM1_CH8_STAT (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF0108A18u)


#define GTM_TOM1_CH9_CM0 (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF0108A4Cu)


#define GTM_TOM1_CH9_CM1 (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF0108A50u)


#define GTM_TOM1_CH9_CN0 (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF0108A54u)


#define GTM_TOM1_CH9_CTRL (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF0108A40u)


#define GTM_TOM1_CH9_IRQ_EN (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF0108A60u)


#define GTM_TOM1_CH9_IRQ_FORCINT (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF0108A64u)


#define GTM_TOM1_CH9_IRQ_MODE (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF0108A68u)


#define GTM_TOM1_CH9_IRQ_NOTIFY (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF0108A5Cu)


#define GTM_TOM1_CH9_SR0 (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF0108A44u)


#define GTM_TOM1_CH9_SR1 (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF0108A48u)


#define GTM_TOM1_CH9_STAT (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF0108A58u)


#define GTM_TOM1_TGC0_ACT_TB (*(volatile Ifx_GTM_TOM_TGC0_ACT_TB*)0xF0108834u)


#define GTM_TOM1_TGC0_ENDIS_CTRL (*(volatile Ifx_GTM_TOM_TGC0_ENDIS_CTRL*)0xF0108870u)


#define GTM_TOM1_TGC0_ENDIS_STAT (*(volatile Ifx_GTM_TOM_TGC0_ENDIS_STAT*)0xF0108874u)


#define GTM_TOM1_TGC0_FUPD_CTRL (*(volatile Ifx_GTM_TOM_TGC0_FUPD_CTRL*)0xF0108838u)


#define GTM_TOM1_TGC0_GLB_CTRL (*(volatile Ifx_GTM_TOM_TGC0_GLB_CTRL*)0xF0108830u)


#define GTM_TOM1_TGC0_INT_TRIG (*(volatile Ifx_GTM_TOM_TGC0_INT_TRIG*)0xF010883Cu)


#define GTM_TOM1_TGC0_OUTEN_CTRL (*(volatile Ifx_GTM_TOM_TGC0_OUTEN_CTRL*)0xF0108878u)


#define GTM_TOM1_TGC0_OUTEN_STAT (*(volatile Ifx_GTM_TOM_TGC0_OUTEN_STAT*)0xF010887Cu)


#define GTM_TOM1_TGC1_ACT_TB (*(volatile Ifx_GTM_TOM_TGC1_ACT_TB*)0xF0108A34u)


#define GTM_TOM1_TGC1_ENDIS_CTRL (*(volatile Ifx_GTM_TOM_TGC1_ENDIS_CTRL*)0xF0108A70u)


#define GTM_TOM1_TGC1_ENDIS_STAT (*(volatile Ifx_GTM_TOM_TGC1_ENDIS_STAT*)0xF0108A74u)


#define GTM_TOM1_TGC1_FUPD_CTRL (*(volatile Ifx_GTM_TOM_TGC1_FUPD_CTRL*)0xF0108A38u)


#define GTM_TOM1_TGC1_GLB_CTRL (*(volatile Ifx_GTM_TOM_TGC1_GLB_CTRL*)0xF0108A30u)


#define GTM_TOM1_TGC1_INT_TRIG (*(volatile Ifx_GTM_TOM_TGC1_INT_TRIG*)0xF0108A3Cu)


#define GTM_TOM1_TGC1_OUTEN_CTRL (*(volatile Ifx_GTM_TOM_TGC1_OUTEN_CTRL*)0xF0108A78u)


#define GTM_TOM1_TGC1_OUTEN_STAT (*(volatile Ifx_GTM_TOM_TGC1_OUTEN_STAT*)0xF0108A7Cu)


#define GTM_TOM2_CH0_CM0 (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF010900Cu)


#define GTM_TOM2_CH0_CM1 (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF0109010u)


#define GTM_TOM2_CH0_CN0 (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF0109014u)


#define GTM_TOM2_CH0_CTRL (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF0109000u)


#define GTM_TOM2_CH0_IRQ_EN (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF0109020u)


#define GTM_TOM2_CH0_IRQ_FORCINT (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF0109024u)


#define GTM_TOM2_CH0_IRQ_MODE (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF0109028u)


#define GTM_TOM2_CH0_IRQ_NOTIFY (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF010901Cu)


#define GTM_TOM2_CH0_SR0 (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF0109004u)


#define GTM_TOM2_CH0_SR1 (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF0109008u)


#define GTM_TOM2_CH0_STAT (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF0109018u)


#define GTM_TOM2_CH10_CM0 (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF010928Cu)


#define GTM_TOM2_CH10_CM1 (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF0109290u)


#define GTM_TOM2_CH10_CN0 (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF0109294u)


#define GTM_TOM2_CH10_CTRL (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF0109280u)


#define GTM_TOM2_CH10_IRQ_EN (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF01092A0u)


#define GTM_TOM2_CH10_IRQ_FORCINT (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF01092A4u)


#define GTM_TOM2_CH10_IRQ_MODE (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF01092A8u)


#define GTM_TOM2_CH10_IRQ_NOTIFY (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF010929Cu)


#define GTM_TOM2_CH10_SR0 (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF0109284u)


#define GTM_TOM2_CH10_SR1 (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF0109288u)


#define GTM_TOM2_CH10_STAT (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF0109298u)


#define GTM_TOM2_CH11_CM0 (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF01092CCu)


#define GTM_TOM2_CH11_CM1 (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF01092D0u)


#define GTM_TOM2_CH11_CN0 (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF01092D4u)


#define GTM_TOM2_CH11_CTRL (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF01092C0u)


#define GTM_TOM2_CH11_IRQ_EN (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF01092E0u)


#define GTM_TOM2_CH11_IRQ_FORCINT (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF01092E4u)


#define GTM_TOM2_CH11_IRQ_MODE (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF01092E8u)


#define GTM_TOM2_CH11_IRQ_NOTIFY (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF01092DCu)


#define GTM_TOM2_CH11_SR0 (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF01092C4u)


#define GTM_TOM2_CH11_SR1 (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF01092C8u)


#define GTM_TOM2_CH11_STAT (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF01092D8u)


#define GTM_TOM2_CH12_CM0 (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF010930Cu)


#define GTM_TOM2_CH12_CM1 (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF0109310u)


#define GTM_TOM2_CH12_CN0 (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF0109314u)


#define GTM_TOM2_CH12_CTRL (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF0109300u)


#define GTM_TOM2_CH12_IRQ_EN (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF0109320u)


#define GTM_TOM2_CH12_IRQ_FORCINT (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF0109324u)


#define GTM_TOM2_CH12_IRQ_MODE (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF0109328u)


#define GTM_TOM2_CH12_IRQ_NOTIFY (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF010931Cu)


#define GTM_TOM2_CH12_SR0 (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF0109304u)


#define GTM_TOM2_CH12_SR1 (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF0109308u)


#define GTM_TOM2_CH12_STAT (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF0109318u)


#define GTM_TOM2_CH13_CM0 (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF010934Cu)


#define GTM_TOM2_CH13_CM1 (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF0109350u)


#define GTM_TOM2_CH13_CN0 (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF0109354u)


#define GTM_TOM2_CH13_CTRL (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF0109340u)


#define GTM_TOM2_CH13_IRQ_EN (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF0109360u)


#define GTM_TOM2_CH13_IRQ_FORCINT (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF0109364u)


#define GTM_TOM2_CH13_IRQ_MODE (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF0109368u)


#define GTM_TOM2_CH13_IRQ_NOTIFY (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF010935Cu)


#define GTM_TOM2_CH13_SR0 (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF0109344u)


#define GTM_TOM2_CH13_SR1 (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF0109348u)


#define GTM_TOM2_CH13_STAT (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF0109358u)


#define GTM_TOM2_CH14_CM0 (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF010938Cu)


#define GTM_TOM2_CH14_CM1 (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF0109390u)


#define GTM_TOM2_CH14_CN0 (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF0109394u)


#define GTM_TOM2_CH14_CTRL (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF0109380u)


#define GTM_TOM2_CH14_IRQ_EN (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF01093A0u)


#define GTM_TOM2_CH14_IRQ_FORCINT (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF01093A4u)


#define GTM_TOM2_CH14_IRQ_MODE (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF01093A8u)


#define GTM_TOM2_CH14_IRQ_NOTIFY (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF010939Cu)


#define GTM_TOM2_CH14_SR0 (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF0109384u)


#define GTM_TOM2_CH14_SR1 (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF0109388u)


#define GTM_TOM2_CH14_STAT (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF0109398u)


#define GTM_TOM2_CH15_CM0 (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF01093CCu)


#define GTM_TOM2_CH15_CM1 (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF01093D0u)


#define GTM_TOM2_CH15_CN0 (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF01093D4u)


#define GTM_TOM2_CH15_CTRL (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF01093C0u)


#define GTM_TOM2_CH15_IRQ_EN (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF01093E0u)


#define GTM_TOM2_CH15_IRQ_FORCINT (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF01093E4u)


#define GTM_TOM2_CH15_IRQ_MODE (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF01093E8u)


#define GTM_TOM2_CH15_IRQ_NOTIFY (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF01093DCu)


#define GTM_TOM2_CH15_SR0 (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF01093C4u)


#define GTM_TOM2_CH15_SR1 (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF01093C8u)


#define GTM_TOM2_CH15_STAT (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF01093D8u)


#define GTM_TOM2_CH1_CM0 (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF010904Cu)


#define GTM_TOM2_CH1_CM1 (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF0109050u)


#define GTM_TOM2_CH1_CN0 (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF0109054u)


#define GTM_TOM2_CH1_CTRL (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF0109040u)


#define GTM_TOM2_CH1_IRQ_EN (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF0109060u)


#define GTM_TOM2_CH1_IRQ_FORCINT (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF0109064u)


#define GTM_TOM2_CH1_IRQ_MODE (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF0109068u)


#define GTM_TOM2_CH1_IRQ_NOTIFY (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF010905Cu)


#define GTM_TOM2_CH1_SR0 (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF0109044u)


#define GTM_TOM2_CH1_SR1 (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF0109048u)


#define GTM_TOM2_CH1_STAT (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF0109058u)


#define GTM_TOM2_CH2_CM0 (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF010908Cu)


#define GTM_TOM2_CH2_CM1 (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF0109090u)


#define GTM_TOM2_CH2_CN0 (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF0109094u)


#define GTM_TOM2_CH2_CTRL (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF0109080u)


#define GTM_TOM2_CH2_IRQ_EN (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF01090A0u)


#define GTM_TOM2_CH2_IRQ_FORCINT (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF01090A4u)


#define GTM_TOM2_CH2_IRQ_MODE (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF01090A8u)


#define GTM_TOM2_CH2_IRQ_NOTIFY (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF010909Cu)


#define GTM_TOM2_CH2_SR0 (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF0109084u)


#define GTM_TOM2_CH2_SR1 (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF0109088u)


#define GTM_TOM2_CH2_STAT (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF0109098u)


#define GTM_TOM2_CH3_CM0 (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF01090CCu)


#define GTM_TOM2_CH3_CM1 (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF01090D0u)


#define GTM_TOM2_CH3_CN0 (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF01090D4u)


#define GTM_TOM2_CH3_CTRL (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF01090C0u)


#define GTM_TOM2_CH3_IRQ_EN (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF01090E0u)


#define GTM_TOM2_CH3_IRQ_FORCINT (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF01090E4u)


#define GTM_TOM2_CH3_IRQ_MODE (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF01090E8u)


#define GTM_TOM2_CH3_IRQ_NOTIFY (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF01090DCu)


#define GTM_TOM2_CH3_SR0 (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF01090C4u)


#define GTM_TOM2_CH3_SR1 (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF01090C8u)


#define GTM_TOM2_CH3_STAT (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF01090D8u)


#define GTM_TOM2_CH4_CM0 (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF010910Cu)


#define GTM_TOM2_CH4_CM1 (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF0109110u)


#define GTM_TOM2_CH4_CN0 (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF0109114u)


#define GTM_TOM2_CH4_CTRL (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF0109100u)


#define GTM_TOM2_CH4_IRQ_EN (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF0109120u)


#define GTM_TOM2_CH4_IRQ_FORCINT (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF0109124u)


#define GTM_TOM2_CH4_IRQ_MODE (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF0109128u)


#define GTM_TOM2_CH4_IRQ_NOTIFY (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF010911Cu)


#define GTM_TOM2_CH4_SR0 (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF0109104u)


#define GTM_TOM2_CH4_SR1 (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF0109108u)


#define GTM_TOM2_CH4_STAT (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF0109118u)


#define GTM_TOM2_CH5_CM0 (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF010914Cu)


#define GTM_TOM2_CH5_CM1 (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF0109150u)


#define GTM_TOM2_CH5_CN0 (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF0109154u)


#define GTM_TOM2_CH5_CTRL (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF0109140u)


#define GTM_TOM2_CH5_IRQ_EN (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF0109160u)


#define GTM_TOM2_CH5_IRQ_FORCINT (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF0109164u)


#define GTM_TOM2_CH5_IRQ_MODE (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF0109168u)


#define GTM_TOM2_CH5_IRQ_NOTIFY (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF010915Cu)


#define GTM_TOM2_CH5_SR0 (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF0109144u)


#define GTM_TOM2_CH5_SR1 (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF0109148u)


#define GTM_TOM2_CH5_STAT (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF0109158u)


#define GTM_TOM2_CH6_CM0 (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF010918Cu)


#define GTM_TOM2_CH6_CM1 (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF0109190u)


#define GTM_TOM2_CH6_CN0 (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF0109194u)


#define GTM_TOM2_CH6_CTRL (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF0109180u)


#define GTM_TOM2_CH6_IRQ_EN (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF01091A0u)


#define GTM_TOM2_CH6_IRQ_FORCINT (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF01091A4u)


#define GTM_TOM2_CH6_IRQ_MODE (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF01091A8u)


#define GTM_TOM2_CH6_IRQ_NOTIFY (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF010919Cu)


#define GTM_TOM2_CH6_SR0 (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF0109184u)


#define GTM_TOM2_CH6_SR1 (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF0109188u)


#define GTM_TOM2_CH6_STAT (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF0109198u)


#define GTM_TOM2_CH7_CM0 (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF01091CCu)


#define GTM_TOM2_CH7_CM1 (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF01091D0u)


#define GTM_TOM2_CH7_CN0 (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF01091D4u)


#define GTM_TOM2_CH7_CTRL (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF01091C0u)


#define GTM_TOM2_CH7_IRQ_EN (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF01091E0u)


#define GTM_TOM2_CH7_IRQ_FORCINT (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF01091E4u)


#define GTM_TOM2_CH7_IRQ_MODE (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF01091E8u)


#define GTM_TOM2_CH7_IRQ_NOTIFY (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF01091DCu)


#define GTM_TOM2_CH7_SR0 (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF01091C4u)


#define GTM_TOM2_CH7_SR1 (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF01091C8u)


#define GTM_TOM2_CH7_STAT (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF01091D8u)


#define GTM_TOM2_CH8_CM0 (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF010920Cu)


#define GTM_TOM2_CH8_CM1 (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF0109210u)


#define GTM_TOM2_CH8_CN0 (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF0109214u)


#define GTM_TOM2_CH8_CTRL (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF0109200u)


#define GTM_TOM2_CH8_IRQ_EN (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF0109220u)


#define GTM_TOM2_CH8_IRQ_FORCINT (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF0109224u)


#define GTM_TOM2_CH8_IRQ_MODE (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF0109228u)


#define GTM_TOM2_CH8_IRQ_NOTIFY (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF010921Cu)


#define GTM_TOM2_CH8_SR0 (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF0109204u)


#define GTM_TOM2_CH8_SR1 (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF0109208u)


#define GTM_TOM2_CH8_STAT (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF0109218u)


#define GTM_TOM2_CH9_CM0 (*(volatile Ifx_GTM_TOM_CH_CM0*)0xF010924Cu)


#define GTM_TOM2_CH9_CM1 (*(volatile Ifx_GTM_TOM_CH_CM1*)0xF0109250u)


#define GTM_TOM2_CH9_CN0 (*(volatile Ifx_GTM_TOM_CH_CN0*)0xF0109254u)


#define GTM_TOM2_CH9_CTRL (*(volatile Ifx_GTM_TOM_CH_CTRL*)0xF0109240u)


#define GTM_TOM2_CH9_IRQ_EN (*(volatile Ifx_GTM_TOM_CH_IRQ_EN*)0xF0109260u)


#define GTM_TOM2_CH9_IRQ_FORCINT (*(volatile Ifx_GTM_TOM_CH_IRQ_FORCINT*)0xF0109264u)


#define GTM_TOM2_CH9_IRQ_MODE (*(volatile Ifx_GTM_TOM_CH_IRQ_MODE*)0xF0109268u)


#define GTM_TOM2_CH9_IRQ_NOTIFY (*(volatile Ifx_GTM_TOM_CH_IRQ_NOTIFY*)0xF010925Cu)


#define GTM_TOM2_CH9_SR0 (*(volatile Ifx_GTM_TOM_CH_SR0*)0xF0109244u)


#define GTM_TOM2_CH9_SR1 (*(volatile Ifx_GTM_TOM_CH_SR1*)0xF0109248u)


#define GTM_TOM2_CH9_STAT (*(volatile Ifx_GTM_TOM_CH_STAT*)0xF0109258u)


#define GTM_TOM2_TGC0_ACT_TB (*(volatile Ifx_GTM_TOM_TGC0_ACT_TB*)0xF0109034u)


#define GTM_TOM2_TGC0_ENDIS_CTRL (*(volatile Ifx_GTM_TOM_TGC0_ENDIS_CTRL*)0xF0109070u)


#define GTM_TOM2_TGC0_ENDIS_STAT (*(volatile Ifx_GTM_TOM_TGC0_ENDIS_STAT*)0xF0109074u)


#define GTM_TOM2_TGC0_FUPD_CTRL (*(volatile Ifx_GTM_TOM_TGC0_FUPD_CTRL*)0xF0109038u)


#define GTM_TOM2_TGC0_GLB_CTRL (*(volatile Ifx_GTM_TOM_TGC0_GLB_CTRL*)0xF0109030u)


#define GTM_TOM2_TGC0_INT_TRIG (*(volatile Ifx_GTM_TOM_TGC0_INT_TRIG*)0xF010903Cu)


#define GTM_TOM2_TGC0_OUTEN_CTRL (*(volatile Ifx_GTM_TOM_TGC0_OUTEN_CTRL*)0xF0109078u)


#define GTM_TOM2_TGC0_OUTEN_STAT (*(volatile Ifx_GTM_TOM_TGC0_OUTEN_STAT*)0xF010907Cu)


#define GTM_TOM2_TGC1_ACT_TB (*(volatile Ifx_GTM_TOM_TGC1_ACT_TB*)0xF0109234u)


#define GTM_TOM2_TGC1_ENDIS_CTRL (*(volatile Ifx_GTM_TOM_TGC1_ENDIS_CTRL*)0xF0109270u)


#define GTM_TOM2_TGC1_ENDIS_STAT (*(volatile Ifx_GTM_TOM_TGC1_ENDIS_STAT*)0xF0109274u)


#define GTM_TOM2_TGC1_FUPD_CTRL (*(volatile Ifx_GTM_TOM_TGC1_FUPD_CTRL*)0xF0109238u)


#define GTM_TOM2_TGC1_GLB_CTRL (*(volatile Ifx_GTM_TOM_TGC1_GLB_CTRL*)0xF0109230u)


#define GTM_TOM2_TGC1_INT_TRIG (*(volatile Ifx_GTM_TOM_TGC1_INT_TRIG*)0xF010923Cu)


#define GTM_TOM2_TGC1_OUTEN_CTRL (*(volatile Ifx_GTM_TOM_TGC1_OUTEN_CTRL*)0xF0109278u)


#define GTM_TOM2_TGC1_OUTEN_STAT (*(volatile Ifx_GTM_TOM_TGC1_OUTEN_STAT*)0xF010927Cu)


#define GTM_TRIGOUT00 (*(volatile Ifx_GTM_TRIGOUT*)0xF019FE04u)


#define GTM_TRIGOUT01 (*(volatile Ifx_GTM_TRIGOUT*)0xF019FE08u)


#define GTM_TRIGOUT02 (*(volatile Ifx_GTM_TRIGOUT*)0xF019FE0Cu)


#define GTM_TRIGOUT03 (*(volatile Ifx_GTM_TRIGOUT*)0xF019FE10u)


#define GTM_TRIGOUT10 (*(volatile Ifx_GTM_TRIGOUT*)0xF019FE44u)


#define GTM_TRIGOUT11 (*(volatile Ifx_GTM_TRIGOUT*)0xF019FE48u)


#define GTM_TRIGOUT12 (*(volatile Ifx_GTM_TRIGOUT*)0xF019FE4Cu)


#define GTM_TRIGOUT13 (*(volatile Ifx_GTM_TRIGOUT*)0xF019FE50u)
# 44 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_reg.h" 2 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxHsct_reg.h" 1 3
# 34 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxHsct_reg.h" 3
#define IFXHSCT_REG_H 1

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxHsct_regdef.h" 1 3
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxHsct_regdef.h" 3
#define IFXHSCT_REGDEF_H 1







typedef struct _Ifx_HSCT_ACCEN0_Bits
{
    unsigned int EN0:1;
    unsigned int EN1:1;
    unsigned int EN2:1;
    unsigned int EN3:1;
    unsigned int EN4:1;
    unsigned int EN5:1;
    unsigned int EN6:1;
    unsigned int EN7:1;
    unsigned int EN8:1;
    unsigned int EN9:1;
    unsigned int EN10:1;
    unsigned int EN11:1;
    unsigned int EN12:1;
    unsigned int EN13:1;
    unsigned int EN14:1;
    unsigned int EN15:1;
    unsigned int EN16:1;
    unsigned int EN17:1;
    unsigned int EN18:1;
    unsigned int EN19:1;
    unsigned int EN20:1;
    unsigned int EN21:1;
    unsigned int EN22:1;
    unsigned int EN23:1;
    unsigned int EN24:1;
    unsigned int EN25:1;
    unsigned int EN26:1;
    unsigned int EN27:1;
    unsigned int EN28:1;
    unsigned int EN29:1;
    unsigned int EN30:1;
    unsigned int EN31:1;
} Ifx_HSCT_ACCEN0_Bits;


typedef struct _Ifx_HSCT_ACCEN1_Bits
{
    unsigned int reserved_0:32;
} Ifx_HSCT_ACCEN1_Bits;


typedef struct _Ifx_HSCT_CLC_Bits
{
    unsigned int DISR:1;
    unsigned int DISS:1;
    unsigned int reserved_2:1;
    unsigned int EDIS:1;
    unsigned int reserved_4:28;
} Ifx_HSCT_CLC_Bits;


typedef struct _Ifx_HSCT_CONFIGPHY_Bits
{
    unsigned int reserved_0:1;
    unsigned int PLLPON:1;
    unsigned int PLLPE:6;
    unsigned int PLLWMF:6;
    unsigned int PLLKPKI:1;
    unsigned int PHYRST:1;
    unsigned int PLLKP:3;
    unsigned int PLLKI:3;
    unsigned int PLLIVR:4;
    unsigned int reserved_26:2;
    unsigned int OSCCLKEN:1;
    unsigned int reserved_29:3;
} Ifx_HSCT_CONFIGPHY_Bits;


typedef struct _Ifx_HSCT_CTSCTRL_Bits
{
    unsigned int CTS_FRAME:1;
    unsigned int CTS_TXD:1;
    unsigned int CTS_RXD:1;
    unsigned int HSSL_CTS_FBD:1;
    unsigned int reserved_4:28;
} Ifx_HSCT_CTSCTRL_Bits;


typedef struct _Ifx_HSCT_DISABLE_Bits
{
    unsigned int TX_DIS:1;
    unsigned int RX_DIS:1;
    unsigned int RX_HEPD:1;
    unsigned int reserved_3:29;
} Ifx_HSCT_DISABLE_Bits;


typedef struct _Ifx_HSCT_ID_Bits
{
    unsigned int MOD_REV:8;
    unsigned int MOD_TYPE:8;
    unsigned int MODNUMBER:16;
} Ifx_HSCT_ID_Bits;


typedef struct _Ifx_HSCT_IFCTRL_Bits
{
    unsigned int IFCVS:8;
    unsigned int SIFCV:1;
    unsigned int reserved_9:7;
    unsigned int MRXSPEED:2;
    unsigned int MTXSPEED:2;
    unsigned int IFTESTMD:1;
    unsigned int reserved_21:11;
} Ifx_HSCT_IFCTRL_Bits;


typedef struct _Ifx_HSCT_IFSTAT_Bits
{
    unsigned int RX_STAT:3;
    unsigned int TX_STAT:2;
    unsigned int reserved_5:27;
} Ifx_HSCT_IFSTAT_Bits;


typedef struct _Ifx_HSCT_INIT_Bits
{
    unsigned int reserved_0:1;
    unsigned int SYS_CLK_EN:1;
    unsigned int SRCF:1;
    unsigned int IFM:1;
    unsigned int reserved_4:6;
    unsigned int LHLR:1;
    unsigned int reserved_11:5;
    unsigned int TXHD:3;
    unsigned int RXHD:3;
    unsigned int reserved_22:10;
} Ifx_HSCT_INIT_Bits;


typedef struct _Ifx_HSCT_IRQ_Bits
{
    unsigned int reserved_0:1;
    unsigned int HER:1;
    unsigned int PYER:1;
    unsigned int CER:1;
    unsigned int IFCFS:1;
    unsigned int SMER:1;
    unsigned int USMSF:1;
    unsigned int PLER:1;
    unsigned int USM:1;
    unsigned int PAR:1;
    unsigned int TXTE:1;
    unsigned int SFO:1;
    unsigned int SFU:1;
    unsigned int reserved_13:19;
} Ifx_HSCT_IRQ_Bits;


typedef struct _Ifx_HSCT_IRQCLR_Bits
{
    unsigned int reserved_0:1;
    unsigned int HERCLR:1;
    unsigned int PYERCLR:1;
    unsigned int CERCLR:1;
    unsigned int IFCFSCLR:1;
    unsigned int SMERCLR:1;
    unsigned int USMSFCLR:1;
    unsigned int PLERCLR:1;
    unsigned int USMCLR:1;
    unsigned int PARCLR:1;
    unsigned int TXTECLR:1;
    unsigned int SFOCLR:1;
    unsigned int SFUCLR:1;
    unsigned int reserved_13:19;
} Ifx_HSCT_IRQCLR_Bits;


typedef struct _Ifx_HSCT_IRQEN_Bits
{
    unsigned int reserved_0:1;
    unsigned int HEREN:1;
    unsigned int PYEREN:1;
    unsigned int CEREN:1;
    unsigned int IFCFSEN:1;
    unsigned int SMEREN:1;
    unsigned int USMSFEN:1;
    unsigned int PLEREN:1;
    unsigned int USMEN:1;
    unsigned int PAREN:1;
    unsigned int TXTEEN:1;
    unsigned int SFOEN:1;
    unsigned int SFUEN:1;
    unsigned int reserved_13:19;
} Ifx_HSCT_IRQEN_Bits;


typedef struct _Ifx_HSCT_KRST0_Bits
{
    unsigned int RST:1;
    unsigned int RSTSTAT:1;
    unsigned int reserved_2:30;
} Ifx_HSCT_KRST0_Bits;


typedef struct _Ifx_HSCT_KRST1_Bits
{
    unsigned int RST:1;
    unsigned int reserved_1:31;
} Ifx_HSCT_KRST1_Bits;


typedef struct _Ifx_HSCT_KRSTCLR_Bits
{
    unsigned int CLR:1;
    unsigned int reserved_1:31;
} Ifx_HSCT_KRSTCLR_Bits;


typedef struct _Ifx_HSCT_OCS_Bits
{
    unsigned int TGS:2;
    unsigned int TGB:1;
    unsigned int TG_P:1;
    unsigned int reserved_4:20;
    unsigned int SUS:4;
    unsigned int SUS_P:1;
    unsigned int SUSSTA:1;
    unsigned int reserved_30:2;
} Ifx_HSCT_OCS_Bits;


typedef struct _Ifx_HSCT_SLEEPCTRL_Bits
{
    unsigned int SLPEN:1;
    unsigned int SLPCLKG:1;
    unsigned int reserved_2:30;
} Ifx_HSCT_SLEEPCTRL_Bits;


typedef struct _Ifx_HSCT_STAT_Bits
{
    unsigned int RX_PSIZE:3;
    unsigned int RX_CHANNEL:4;
    unsigned int RX_SLEEP:1;
    unsigned int TX_SLEEP:1;
    unsigned int reserved_9:3;
    unsigned int TX_PSIZE:3;
    unsigned int reserved_15:1;
    unsigned int TX_CHANNEL_TYPE:4;
    unsigned int reserved_20:4;
    unsigned int LIFCCMDR:8;
} Ifx_HSCT_STAT_Bits;


typedef struct _Ifx_HSCT_STATPHY_Bits
{
    unsigned int PLOCK:1;
    unsigned int RXLSA:1;
    unsigned int TXLSA:1;
    unsigned int reserved_3:29;
} Ifx_HSCT_STATPHY_Bits;


typedef struct _Ifx_HSCT_USMR_Bits
{
    unsigned int USMR:32;
} Ifx_HSCT_USMR_Bits;


typedef struct _Ifx_HSCT_USMS_Bits
{
    unsigned int USMS:32;
} Ifx_HSCT_USMS_Bits;







typedef union
{
    unsigned int U;
    signed int I;
    Ifx_HSCT_ACCEN0_Bits B;
} Ifx_HSCT_ACCEN0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_HSCT_ACCEN1_Bits B;
} Ifx_HSCT_ACCEN1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_HSCT_CLC_Bits B;
} Ifx_HSCT_CLC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_HSCT_CONFIGPHY_Bits B;
} Ifx_HSCT_CONFIGPHY;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_HSCT_CTSCTRL_Bits B;
} Ifx_HSCT_CTSCTRL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_HSCT_DISABLE_Bits B;
} Ifx_HSCT_DISABLE;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_HSCT_ID_Bits B;
} Ifx_HSCT_ID;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_HSCT_IFCTRL_Bits B;
} Ifx_HSCT_IFCTRL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_HSCT_IFSTAT_Bits B;
} Ifx_HSCT_IFSTAT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_HSCT_INIT_Bits B;
} Ifx_HSCT_INIT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_HSCT_IRQ_Bits B;
} Ifx_HSCT_IRQ;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_HSCT_IRQCLR_Bits B;
} Ifx_HSCT_IRQCLR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_HSCT_IRQEN_Bits B;
} Ifx_HSCT_IRQEN;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_HSCT_KRST0_Bits B;
} Ifx_HSCT_KRST0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_HSCT_KRST1_Bits B;
} Ifx_HSCT_KRST1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_HSCT_KRSTCLR_Bits B;
} Ifx_HSCT_KRSTCLR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_HSCT_OCS_Bits B;
} Ifx_HSCT_OCS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_HSCT_SLEEPCTRL_Bits B;
} Ifx_HSCT_SLEEPCTRL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_HSCT_STAT_Bits B;
} Ifx_HSCT_STAT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_HSCT_STATPHY_Bits B;
} Ifx_HSCT_STATPHY;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_HSCT_USMR_Bits B;
} Ifx_HSCT_USMR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_HSCT_USMS_Bits B;
} Ifx_HSCT_USMS;
# 502 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxHsct_regdef.h" 3
typedef volatile struct _Ifx_HSCT
{
    Ifx_HSCT_CLC CLC;
    unsigned char reserved_4[4];
    Ifx_HSCT_ID ID;
    unsigned char reserved_C[4];
    Ifx_HSCT_INIT INIT;
    Ifx_HSCT_IFCTRL IFCTRL;
    Ifx_HSCT_SLEEPCTRL SLEEPCTRL;
    Ifx_HSCT_CTSCTRL CTSCTRL;
    Ifx_HSCT_DISABLE DISABLE;
    Ifx_HSCT_STAT STAT;
    Ifx_HSCT_IFSTAT IFSTAT;
    unsigned char reserved_2C[4];
    Ifx_HSCT_CONFIGPHY CONFIGPHY;
    Ifx_HSCT_STATPHY STATPHY;
    unsigned char reserved_38[8];
    Ifx_HSCT_IRQ IRQ;
    Ifx_HSCT_IRQEN IRQEN;
    Ifx_HSCT_IRQCLR IRQCLR;
    unsigned char reserved_4C[4];
    Ifx_HSCT_USMR USMR;
    Ifx_HSCT_USMS USMS;
    unsigned char reserved_58[65424];
    Ifx_HSCT_OCS OCS;
    Ifx_HSCT_KRSTCLR KRSTCLR;
    Ifx_HSCT_KRST1 KRST1;
    Ifx_HSCT_KRST0 KRST0;
    Ifx_HSCT_ACCEN1 ACCEN1;
    Ifx_HSCT_ACCEN0 ACCEN0;
} Ifx_HSCT;
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxHsct_reg.h" 2 3





#define MODULE_HSCT (*(Ifx_HSCT*)0xF0090000u)







#define HSCT_ACCEN0 (*(volatile Ifx_HSCT_ACCEN0*)0xF009FFFCu)


#define HSCT_ACCEN1 (*(volatile Ifx_HSCT_ACCEN1*)0xF009FFF8u)


#define HSCT_CLC (*(volatile Ifx_HSCT_CLC*)0xF0090000u)


#define HSCT_CONFIGPHY (*(volatile Ifx_HSCT_CONFIGPHY*)0xF0090030u)


#define HSCT_CTSCTRL (*(volatile Ifx_HSCT_CTSCTRL*)0xF009001Cu)


#define HSCT_DISABLE (*(volatile Ifx_HSCT_DISABLE*)0xF0090020u)


#define HSCT_ID (*(volatile Ifx_HSCT_ID*)0xF0090008u)


#define HSCT_IFCTRL (*(volatile Ifx_HSCT_IFCTRL*)0xF0090014u)


#define HSCT_IFSTAT (*(volatile Ifx_HSCT_IFSTAT*)0xF0090028u)


#define HSCT_INIT (*(volatile Ifx_HSCT_INIT*)0xF0090010u)


#define HSCT_IRQ (*(volatile Ifx_HSCT_IRQ*)0xF0090040u)


#define HSCT_IRQCLR (*(volatile Ifx_HSCT_IRQCLR*)0xF0090048u)


#define HSCT_IRQEN (*(volatile Ifx_HSCT_IRQEN*)0xF0090044u)


#define HSCT_KRST0 (*(volatile Ifx_HSCT_KRST0*)0xF009FFF4u)


#define HSCT_KRST1 (*(volatile Ifx_HSCT_KRST1*)0xF009FFF0u)


#define HSCT_KRSTCLR (*(volatile Ifx_HSCT_KRSTCLR*)0xF009FFECu)


#define HSCT_OCS (*(volatile Ifx_HSCT_OCS*)0xF009FFE8u)


#define HSCT_SLEEPCTRL (*(volatile Ifx_HSCT_SLEEPCTRL*)0xF0090018u)


#define HSCT_STAT (*(volatile Ifx_HSCT_STAT*)0xF0090024u)


#define HSCT_STATPHY (*(volatile Ifx_HSCT_STATPHY*)0xF0090034u)


#define HSCT_USMR (*(volatile Ifx_HSCT_USMR*)0xF0090050u)


#define HSCT_USMS (*(volatile Ifx_HSCT_USMS*)0xF0090054u)
# 45 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_reg.h" 2 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxHssl_reg.h" 1 3
# 34 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxHssl_reg.h" 3
#define IFXHSSL_REG_H 1

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxHssl_regdef.h" 1 3
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxHssl_regdef.h" 3
#define IFXHSSL_REGDEF_H 1







typedef struct _Ifx_HSSL_ACCEN0_Bits
{
    unsigned int EN0:1;
    unsigned int EN1:1;
    unsigned int EN2:1;
    unsigned int EN3:1;
    unsigned int EN4:1;
    unsigned int EN5:1;
    unsigned int EN6:1;
    unsigned int EN7:1;
    unsigned int EN8:1;
    unsigned int EN9:1;
    unsigned int EN10:1;
    unsigned int EN11:1;
    unsigned int EN12:1;
    unsigned int EN13:1;
    unsigned int EN14:1;
    unsigned int EN15:1;
    unsigned int EN16:1;
    unsigned int EN17:1;
    unsigned int EN18:1;
    unsigned int EN19:1;
    unsigned int EN20:1;
    unsigned int EN21:1;
    unsigned int EN22:1;
    unsigned int EN23:1;
    unsigned int EN24:1;
    unsigned int EN25:1;
    unsigned int EN26:1;
    unsigned int EN27:1;
    unsigned int EN28:1;
    unsigned int EN29:1;
    unsigned int EN30:1;
    unsigned int EN31:1;
} Ifx_HSSL_ACCEN0_Bits;


typedef struct _Ifx_HSSL_ACCEN1_Bits
{
    unsigned int reserved_0:32;
} Ifx_HSSL_ACCEN1_Bits;


typedef struct _Ifx_HSSL_AR_Bits
{
    unsigned int ARW0:2;
    unsigned int ARW1:2;
    unsigned int ARW2:2;
    unsigned int ARW3:2;
    unsigned int reserved_8:8;
    unsigned int MAVCH:2;
    unsigned int reserved_18:14;
} Ifx_HSSL_AR_Bits;


typedef struct _Ifx_HSSL_AW_AWEND_Bits
{
    unsigned int reserved_0:8;
    unsigned int AWE:24;
} Ifx_HSSL_AW_AWEND_Bits;


typedef struct _Ifx_HSSL_AW_AWSTART_Bits
{
    unsigned int reserved_0:8;
    unsigned int AWS:24;
} Ifx_HSSL_AW_AWSTART_Bits;


typedef struct _Ifx_HSSL_CFG_Bits
{
    unsigned int PREDIV:14;
    unsigned int reserved_14:2;
    unsigned int SMT:1;
    unsigned int SMR:1;
    unsigned int SCM:1;
    unsigned int CCC:1;
    unsigned int reserved_20:12;
} Ifx_HSSL_CFG_Bits;


typedef struct _Ifx_HSSL_CLC_Bits
{
    unsigned int DISR:1;
    unsigned int DISS:1;
    unsigned int reserved_2:1;
    unsigned int EDIS:1;
    unsigned int reserved_4:28;
} Ifx_HSSL_CLC_Bits;


typedef struct _Ifx_HSSL_CRC_Bits
{
    unsigned int XORMASK:16;
    unsigned int XEN:1;
    unsigned int reserved_17:15;
} Ifx_HSSL_CRC_Bits;


typedef struct _Ifx_HSSL_I_ICON_Bits
{
    unsigned int IDQ:1;
    unsigned int TQ:1;
    unsigned int LETT:3;
    unsigned int CETT:3;
    unsigned int TOCV:8;
    unsigned int DATLEN:2;
    unsigned int RWT:2;
    unsigned int BSY:1;
    unsigned int ITTAG:3;
    unsigned int TOREL:8;
} Ifx_HSSL_I_ICON_Bits;


typedef struct _Ifx_HSSL_I_IRD_Bits
{
    unsigned int DATA:32;
} Ifx_HSSL_I_IRD_Bits;


typedef struct _Ifx_HSSL_I_IRWA_Bits
{
    unsigned int ADDRESS:32;
} Ifx_HSSL_I_IRWA_Bits;


typedef struct _Ifx_HSSL_I_IWD_Bits
{
    unsigned int DATA:32;
} Ifx_HSSL_I_IWD_Bits;


typedef struct _Ifx_HSSL_ID_Bits
{
    unsigned int MODREV:8;
    unsigned int MODTYPE:8;
    unsigned int MODNUMBER:16;
} Ifx_HSSL_ID_Bits;


typedef struct _Ifx_HSSL_IS_CA_Bits
{
    unsigned int reserved_0:5;
    unsigned int CURR:27;
} Ifx_HSSL_IS_CA_Bits;


typedef struct _Ifx_HSSL_IS_FC_Bits
{
    unsigned int RELCOUNT:16;
    unsigned int CURCOUNT:16;
} Ifx_HSSL_IS_FC_Bits;


typedef struct _Ifx_HSSL_ISSA_Bits
{
    unsigned int reserved_0:5;
    unsigned int START:27;
} Ifx_HSSL_ISSA_Bits;


typedef struct _Ifx_HSSL_KRST0_Bits
{
    unsigned int RST:1;
    unsigned int RSTSTAT:1;
    unsigned int reserved_2:30;
} Ifx_HSSL_KRST0_Bits;


typedef struct _Ifx_HSSL_KRST1_Bits
{
    unsigned int RST:1;
    unsigned int reserved_1:31;
} Ifx_HSSL_KRST1_Bits;


typedef struct _Ifx_HSSL_KRSTCLR_Bits
{
    unsigned int CLR:1;
    unsigned int reserved_1:31;
} Ifx_HSSL_KRSTCLR_Bits;


typedef struct _Ifx_HSSL_MFLAGS_Bits
{
    unsigned int NACK:4;
    unsigned int TTE:4;
    unsigned int TIMEOUT:4;
    unsigned int UNEXPECTED:4;
    unsigned int reserved_16:2;
    unsigned int TMB:1;
    unsigned int IMB:1;
    unsigned int ISB:1;
    unsigned int MAV:1;
    unsigned int SRIE:1;
    unsigned int PIE1:1;
    unsigned int PIE2:1;
    unsigned int CRCE:1;
    unsigned int reserved_26:2;
    unsigned int TSE:1;
    unsigned int TEI:1;
    unsigned int TEO:1;
    unsigned int INI:1;
} Ifx_HSSL_MFLAGS_Bits;


typedef struct _Ifx_HSSL_MFLAGSCL_Bits
{
    unsigned int NACKC:4;
    unsigned int TTEC:4;
    unsigned int TIMEOUTC:4;
    unsigned int UNEXPECTEDC:4;
    unsigned int reserved_16:2;
    unsigned int TMBC:1;
    unsigned int IMBC:1;
    unsigned int ISBC:1;
    unsigned int MAVC:1;
    unsigned int SRIEC:1;
    unsigned int PIE1C:1;
    unsigned int PIE2C:1;
    unsigned int CRCEC:1;
    unsigned int reserved_26:2;
    unsigned int TSEC:1;
    unsigned int reserved_29:1;
    unsigned int TEOC:1;
    unsigned int INIC:1;
} Ifx_HSSL_MFLAGSCL_Bits;


typedef struct _Ifx_HSSL_MFLAGSEN_Bits
{
    unsigned int NACKEN:4;
    unsigned int TTEEN:4;
    unsigned int TIMEOUTEN:4;
    unsigned int UNEXPECTEDEN:4;
    unsigned int reserved_16:5;
    unsigned int MAVEN:1;
    unsigned int SRIEEN:1;
    unsigned int PIE1EN:1;
    unsigned int PIE2EN:1;
    unsigned int CRCEEN:1;
    unsigned int reserved_26:3;
    unsigned int TEIEN:1;
    unsigned int reserved_30:2;
} Ifx_HSSL_MFLAGSEN_Bits;


typedef struct _Ifx_HSSL_MFLAGSSET_Bits
{
    unsigned int NACKS:4;
    unsigned int TTES:4;
    unsigned int TIMEOUTS:4;
    unsigned int UNEXPECTEDS:4;
    unsigned int reserved_16:2;
    unsigned int TMBS:1;
    unsigned int IMBS:1;
    unsigned int ISBS:1;
    unsigned int MAVS:1;
    unsigned int SRIES:1;
    unsigned int PIE1S:1;
    unsigned int PIE2S:1;
    unsigned int CRCES:1;
    unsigned int reserved_26:2;
    unsigned int TSES:1;
    unsigned int reserved_29:1;
    unsigned int TEOS:1;
    unsigned int INIS:1;
} Ifx_HSSL_MFLAGSSET_Bits;


typedef struct _Ifx_HSSL_OCS_Bits
{
    unsigned int TGS:2;
    unsigned int TGB:1;
    unsigned int TG_P:1;
    unsigned int reserved_4:20;
    unsigned int SUS:4;
    unsigned int SUS_P:1;
    unsigned int SUSSTA:1;
    unsigned int reserved_30:2;
} Ifx_HSSL_OCS_Bits;


typedef struct _Ifx_HSSL_QFLAGS_Bits
{
    unsigned int I:4;
    unsigned int T:4;
    unsigned int R:4;
    unsigned int reserved_12:4;
    unsigned int E0:2;
    unsigned int E1:2;
    unsigned int E2:2;
    unsigned int E3:2;
    unsigned int reserved_24:4;
    unsigned int IS:1;
    unsigned int RS:1;
    unsigned int TS:1;
    unsigned int ES:1;
} Ifx_HSSL_QFLAGS_Bits;


typedef struct _Ifx_HSSL_SFSFLAGS_Bits
{
    unsigned int RXFL:2;
    unsigned int TXFL:2;
    unsigned int EXFL:2;
    unsigned int reserved_6:9;
    unsigned int ISF:1;
    unsigned int reserved_16:16;
} Ifx_HSSL_SFSFLAGS_Bits;


typedef struct _Ifx_HSSL_T_TCA_Bits
{
    unsigned int A:32;
} Ifx_HSSL_T_TCA_Bits;


typedef struct _Ifx_HSSL_T_TCD_Bits
{
    unsigned int D:32;
} Ifx_HSSL_T_TCD_Bits;


typedef struct _Ifx_HSSL_TIDADD_Bits
{
    unsigned int A:32;
} Ifx_HSSL_TIDADD_Bits;


typedef struct _Ifx_HSSL_TS_CA_Bits
{
    unsigned int reserved_0:5;
    unsigned int CURR:27;
} Ifx_HSSL_TS_CA_Bits;


typedef struct _Ifx_HSSL_TS_FC_Bits
{
    unsigned int RELCOUNT:16;
    unsigned int CURCOUNT:16;
} Ifx_HSSL_TS_FC_Bits;


typedef struct _Ifx_HSSL_TSSA_Bits
{
    unsigned int reserved_0:5;
    unsigned int ADDR:27;
} Ifx_HSSL_TSSA_Bits;


typedef struct _Ifx_HSSL_TSTAT_Bits
{
    unsigned int LASTCC0:5;
    unsigned int LASTTT0:3;
    unsigned int LASTCC1:5;
    unsigned int LASTTT1:3;
    unsigned int LASTCC2:5;
    unsigned int LASTTT2:3;
    unsigned int LASTCC3:5;
    unsigned int LASTTT3:3;
} Ifx_HSSL_TSTAT_Bits;







typedef union
{
    unsigned int U;
    signed int I;
    Ifx_HSSL_ACCEN0_Bits B;
} Ifx_HSSL_ACCEN0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_HSSL_ACCEN1_Bits B;
} Ifx_HSSL_ACCEN1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_HSSL_AR_Bits B;
} Ifx_HSSL_AR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_HSSL_AW_AWEND_Bits B;
} Ifx_HSSL_AW_AWEND;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_HSSL_AW_AWSTART_Bits B;
} Ifx_HSSL_AW_AWSTART;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_HSSL_CFG_Bits B;
} Ifx_HSSL_CFG;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_HSSL_CLC_Bits B;
} Ifx_HSSL_CLC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_HSSL_CRC_Bits B;
} Ifx_HSSL_CRC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_HSSL_I_ICON_Bits B;
} Ifx_HSSL_I_ICON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_HSSL_I_IRD_Bits B;
} Ifx_HSSL_I_IRD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_HSSL_I_IRWA_Bits B;
} Ifx_HSSL_I_IRWA;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_HSSL_I_IWD_Bits B;
} Ifx_HSSL_I_IWD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_HSSL_ID_Bits B;
} Ifx_HSSL_ID;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_HSSL_IS_CA_Bits B;
} Ifx_HSSL_IS_CA;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_HSSL_IS_FC_Bits B;
} Ifx_HSSL_IS_FC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_HSSL_ISSA_Bits B;
} Ifx_HSSL_ISSA;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_HSSL_KRST0_Bits B;
} Ifx_HSSL_KRST0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_HSSL_KRST1_Bits B;
} Ifx_HSSL_KRST1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_HSSL_KRSTCLR_Bits B;
} Ifx_HSSL_KRSTCLR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_HSSL_MFLAGS_Bits B;
} Ifx_HSSL_MFLAGS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_HSSL_MFLAGSCL_Bits B;
} Ifx_HSSL_MFLAGSCL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_HSSL_MFLAGSEN_Bits B;
} Ifx_HSSL_MFLAGSEN;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_HSSL_MFLAGSSET_Bits B;
} Ifx_HSSL_MFLAGSSET;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_HSSL_OCS_Bits B;
} Ifx_HSSL_OCS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_HSSL_QFLAGS_Bits B;
} Ifx_HSSL_QFLAGS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_HSSL_SFSFLAGS_Bits B;
} Ifx_HSSL_SFSFLAGS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_HSSL_T_TCA_Bits B;
} Ifx_HSSL_T_TCA;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_HSSL_T_TCD_Bits B;
} Ifx_HSSL_T_TCD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_HSSL_TIDADD_Bits B;
} Ifx_HSSL_TIDADD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_HSSL_TS_CA_Bits B;
} Ifx_HSSL_TS_CA;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_HSSL_TS_FC_Bits B;
} Ifx_HSSL_TS_FC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_HSSL_TSSA_Bits B;
} Ifx_HSSL_TSSA;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_HSSL_TSTAT_Bits B;
} Ifx_HSSL_TSTAT;
# 686 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxHssl_regdef.h" 3
typedef volatile struct _Ifx_HSSL_AW
{
    Ifx_HSSL_AW_AWSTART AWSTART;
    Ifx_HSSL_AW_AWEND AWEND;
} Ifx_HSSL_AW;


typedef volatile struct _Ifx_HSSL_I
{
    Ifx_HSSL_I_IWD IWD;
    Ifx_HSSL_I_ICON ICON;
    Ifx_HSSL_I_IRWA IRWA;
    Ifx_HSSL_I_IRD IRD;
} Ifx_HSSL_I;


typedef volatile struct _Ifx_HSSL_IS
{
    Ifx_HSSL_ISSA SA[2];
    Ifx_HSSL_IS_CA CA;
    Ifx_HSSL_IS_FC FC;
} Ifx_HSSL_IS;


typedef volatile struct _Ifx_HSSL_T
{
    Ifx_HSSL_T_TCD TCD;
    Ifx_HSSL_T_TCA TCA;
} Ifx_HSSL_T;


typedef volatile struct _Ifx_HSSL_TS
{
    Ifx_HSSL_TSSA SA[2];
    Ifx_HSSL_TS_CA CA;
    Ifx_HSSL_TS_FC FC;
} Ifx_HSSL_TS;
# 735 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxHssl_regdef.h" 3
typedef volatile struct _Ifx_HSSL
{
    Ifx_HSSL_CLC CLC;
    unsigned char reserved_4[4];
    Ifx_HSSL_ID ID;
    Ifx_HSSL_CRC CRC;
    Ifx_HSSL_CFG CFG;
    Ifx_HSSL_QFLAGS QFLAGS;
    Ifx_HSSL_MFLAGS MFLAGS;
    Ifx_HSSL_MFLAGSSET MFLAGSSET;
    Ifx_HSSL_MFLAGSCL MFLAGSCL;
    Ifx_HSSL_MFLAGSEN MFLAGSEN;
    Ifx_HSSL_SFSFLAGS SFSFLAGS;
    unsigned char reserved_2C[4];
    Ifx_HSSL_I I[4];
    Ifx_HSSL_T T[4];
    Ifx_HSSL_TSTAT TSTAT;
    Ifx_HSSL_TIDADD TIDADD;
    unsigned char reserved_98[8];
    Ifx_HSSL_IS IS;
    Ifx_HSSL_TS TS;
    Ifx_HSSL_AW AW[4];
    Ifx_HSSL_AR AR;
    unsigned char reserved_E4[4];
    Ifx_HSSL_OCS OCS;
    Ifx_HSSL_KRSTCLR KRSTCLR;
    Ifx_HSSL_KRST1 KRST1;
    Ifx_HSSL_KRST0 KRST0;
    Ifx_HSSL_ACCEN1 ACCEN1;
    Ifx_HSSL_ACCEN0 ACCEN0;
    unsigned char reserved_100[768];
} Ifx_HSSL;
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxHssl_reg.h" 2 3





#define MODULE_HSSL (*(Ifx_HSSL*)0xF0080000u)







#define HSSL_ACCEN0 (*(volatile Ifx_HSSL_ACCEN0*)0xF00800FCu)


#define HSSL_ACCEN1 (*(volatile Ifx_HSSL_ACCEN1*)0xF00800F8u)


#define HSSL_AR (*(volatile Ifx_HSSL_AR*)0xF00800E0u)


#define HSSL_AW0_AWEND (*(volatile Ifx_HSSL_AW_AWEND*)0xF00800C4u)




#define HSSL_AWEND0 (HSSL_AW0_AWEND)


#define HSSL_AW0_AWSTART (*(volatile Ifx_HSSL_AW_AWSTART*)0xF00800C0u)




#define HSSL_AWSTART0 (HSSL_AW0_AWSTART)


#define HSSL_AW1_AWEND (*(volatile Ifx_HSSL_AW_AWEND*)0xF00800CCu)




#define HSSL_AWEND1 (HSSL_AW1_AWEND)


#define HSSL_AW1_AWSTART (*(volatile Ifx_HSSL_AW_AWSTART*)0xF00800C8u)




#define HSSL_AWSTART1 (HSSL_AW1_AWSTART)


#define HSSL_AW2_AWEND (*(volatile Ifx_HSSL_AW_AWEND*)0xF00800D4u)




#define HSSL_AWEND2 (HSSL_AW2_AWEND)


#define HSSL_AW2_AWSTART (*(volatile Ifx_HSSL_AW_AWSTART*)0xF00800D0u)




#define HSSL_AWSTART2 (HSSL_AW2_AWSTART)


#define HSSL_AW3_AWEND (*(volatile Ifx_HSSL_AW_AWEND*)0xF00800DCu)




#define HSSL_AWEND3 (HSSL_AW3_AWEND)


#define HSSL_AW3_AWSTART (*(volatile Ifx_HSSL_AW_AWSTART*)0xF00800D8u)




#define HSSL_AWSTART3 (HSSL_AW3_AWSTART)


#define HSSL_CFG (*(volatile Ifx_HSSL_CFG*)0xF0080010u)


#define HSSL_CLC (*(volatile Ifx_HSSL_CLC*)0xF0080000u)


#define HSSL_CRC (*(volatile Ifx_HSSL_CRC*)0xF008000Cu)


#define HSSL_I0_ICON (*(volatile Ifx_HSSL_I_ICON*)0xF0080034u)




#define HSSL_ICON0 (HSSL_I0_ICON)


#define HSSL_I0_IRD (*(volatile Ifx_HSSL_I_IRD*)0xF008003Cu)




#define HSSL_IRD0 (HSSL_I0_IRD)


#define HSSL_I0_IRWA (*(volatile Ifx_HSSL_I_IRWA*)0xF0080038u)




#define HSSL_IRWA0 (HSSL_I0_IRWA)


#define HSSL_I0_IWD (*(volatile Ifx_HSSL_I_IWD*)0xF0080030u)




#define HSSL_IWD0 (HSSL_I0_IWD)


#define HSSL_I1_ICON (*(volatile Ifx_HSSL_I_ICON*)0xF0080044u)




#define HSSL_ICON1 (HSSL_I1_ICON)


#define HSSL_I1_IRD (*(volatile Ifx_HSSL_I_IRD*)0xF008004Cu)




#define HSSL_IRD1 (HSSL_I1_IRD)


#define HSSL_I1_IRWA (*(volatile Ifx_HSSL_I_IRWA*)0xF0080048u)




#define HSSL_IRWA1 (HSSL_I1_IRWA)


#define HSSL_I1_IWD (*(volatile Ifx_HSSL_I_IWD*)0xF0080040u)




#define HSSL_IWD1 (HSSL_I1_IWD)


#define HSSL_I2_ICON (*(volatile Ifx_HSSL_I_ICON*)0xF0080054u)




#define HSSL_ICON2 (HSSL_I2_ICON)


#define HSSL_I2_IRD (*(volatile Ifx_HSSL_I_IRD*)0xF008005Cu)




#define HSSL_IRD2 (HSSL_I2_IRD)


#define HSSL_I2_IRWA (*(volatile Ifx_HSSL_I_IRWA*)0xF0080058u)




#define HSSL_IRWA2 (HSSL_I2_IRWA)


#define HSSL_I2_IWD (*(volatile Ifx_HSSL_I_IWD*)0xF0080050u)




#define HSSL_IWD2 (HSSL_I2_IWD)


#define HSSL_I3_ICON (*(volatile Ifx_HSSL_I_ICON*)0xF0080064u)




#define HSSL_ICON3 (HSSL_I3_ICON)


#define HSSL_I3_IRD (*(volatile Ifx_HSSL_I_IRD*)0xF008006Cu)




#define HSSL_IRD3 (HSSL_I3_IRD)


#define HSSL_I3_IRWA (*(volatile Ifx_HSSL_I_IRWA*)0xF0080068u)




#define HSSL_IRWA3 (HSSL_I3_IRWA)


#define HSSL_I3_IWD (*(volatile Ifx_HSSL_I_IWD*)0xF0080060u)




#define HSSL_IWD3 (HSSL_I3_IWD)


#define HSSL_ID (*(volatile Ifx_HSSL_ID*)0xF0080008u)


#define HSSL_IS_CA (*(volatile Ifx_HSSL_IS_CA*)0xF00800A8u)




#define HSSL_ISCA (HSSL_IS_CA)


#define HSSL_IS_FC (*(volatile Ifx_HSSL_IS_FC*)0xF00800ACu)




#define HSSL_ISFC (HSSL_IS_FC)


#define HSSL_IS_SA0 (*(volatile Ifx_HSSL_ISSA*)0xF00800A0u)




#define HSSL_ISSA0 (HSSL_IS_SA0)


#define HSSL_IS_SA1 (*(volatile Ifx_HSSL_ISSA*)0xF00800A4u)




#define HSSL_ISSA1 (HSSL_IS_SA1)


#define HSSL_KRST0 (*(volatile Ifx_HSSL_KRST0*)0xF00800F4u)


#define HSSL_KRST1 (*(volatile Ifx_HSSL_KRST1*)0xF00800F0u)


#define HSSL_KRSTCLR (*(volatile Ifx_HSSL_KRSTCLR*)0xF00800ECu)


#define HSSL_MFLAGS (*(volatile Ifx_HSSL_MFLAGS*)0xF0080018u)


#define HSSL_MFLAGSCL (*(volatile Ifx_HSSL_MFLAGSCL*)0xF0080020u)


#define HSSL_MFLAGSEN (*(volatile Ifx_HSSL_MFLAGSEN*)0xF0080024u)


#define HSSL_MFLAGSSET (*(volatile Ifx_HSSL_MFLAGSSET*)0xF008001Cu)


#define HSSL_OCS (*(volatile Ifx_HSSL_OCS*)0xF00800E8u)


#define HSSL_QFLAGS (*(volatile Ifx_HSSL_QFLAGS*)0xF0080014u)


#define HSSL_SFSFLAGS (*(volatile Ifx_HSSL_SFSFLAGS*)0xF0080028u)


#define HSSL_T0_TCA (*(volatile Ifx_HSSL_T_TCA*)0xF0080074u)




#define HSSL_TCA0 (HSSL_T0_TCA)


#define HSSL_T0_TCD (*(volatile Ifx_HSSL_T_TCD*)0xF0080070u)




#define HSSL_TCD0 (HSSL_T0_TCD)


#define HSSL_T1_TCA (*(volatile Ifx_HSSL_T_TCA*)0xF008007Cu)




#define HSSL_TCA1 (HSSL_T1_TCA)


#define HSSL_T1_TCD (*(volatile Ifx_HSSL_T_TCD*)0xF0080078u)




#define HSSL_TCD1 (HSSL_T1_TCD)


#define HSSL_T2_TCA (*(volatile Ifx_HSSL_T_TCA*)0xF0080084u)




#define HSSL_TCA2 (HSSL_T2_TCA)


#define HSSL_T2_TCD (*(volatile Ifx_HSSL_T_TCD*)0xF0080080u)




#define HSSL_TCD2 (HSSL_T2_TCD)


#define HSSL_T3_TCA (*(volatile Ifx_HSSL_T_TCA*)0xF008008Cu)




#define HSSL_TCA3 (HSSL_T3_TCA)


#define HSSL_T3_TCD (*(volatile Ifx_HSSL_T_TCD*)0xF0080088u)




#define HSSL_TCD3 (HSSL_T3_TCD)


#define HSSL_TIDADD (*(volatile Ifx_HSSL_TIDADD*)0xF0080094u)


#define HSSL_TS_CA (*(volatile Ifx_HSSL_TS_CA*)0xF00800B8u)




#define HSSL_TSCA (HSSL_TS_CA)


#define HSSL_TS_FC (*(volatile Ifx_HSSL_TS_FC*)0xF00800BCu)




#define HSSL_TSFC (HSSL_TS_FC)


#define HSSL_TS_SA0 (*(volatile Ifx_HSSL_TSSA*)0xF00800B0u)




#define HSSL_TSSA0 (HSSL_TS_SA0)


#define HSSL_TS_SA1 (*(volatile Ifx_HSSL_TSSA*)0xF00800B4u)




#define HSSL_TSSA1 (HSSL_TS_SA1)


#define HSSL_TSTAT (*(volatile Ifx_HSSL_TSTAT*)0xF0080090u)
# 46 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_reg.h" 2 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxI2c_reg.h" 1 3
# 34 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxI2c_reg.h" 3
#define IFXI2C_REG_H 1

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxI2c_regdef.h" 1 3
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxI2c_regdef.h" 3
#define IFXI2C_REGDEF_H 1







typedef struct _Ifx_I2C_ACCEN0_Bits
{
    unsigned int EN0:1;
    unsigned int EN1:1;
    unsigned int EN2:1;
    unsigned int EN3:1;
    unsigned int EN4:1;
    unsigned int EN5:1;
    unsigned int EN6:1;
    unsigned int EN7:1;
    unsigned int EN8:1;
    unsigned int EN9:1;
    unsigned int EN10:1;
    unsigned int EN11:1;
    unsigned int EN12:1;
    unsigned int EN13:1;
    unsigned int EN14:1;
    unsigned int EN15:1;
    unsigned int EN16:1;
    unsigned int EN17:1;
    unsigned int EN18:1;
    unsigned int EN19:1;
    unsigned int EN20:1;
    unsigned int EN21:1;
    unsigned int EN22:1;
    unsigned int EN23:1;
    unsigned int EN24:1;
    unsigned int EN25:1;
    unsigned int EN26:1;
    unsigned int EN27:1;
    unsigned int EN28:1;
    unsigned int EN29:1;
    unsigned int EN30:1;
    unsigned int EN31:1;
} Ifx_I2C_ACCEN0_Bits;


typedef struct _Ifx_I2C_ACCEN1_Bits
{
    unsigned int reserved_0:32;
} Ifx_I2C_ACCEN1_Bits;


typedef struct _Ifx_I2C_ADDRCFG_Bits
{
    unsigned int ADR:10;
    unsigned int reserved_10:6;
    unsigned int TBAM:1;
    unsigned int GCE:1;
    unsigned int MCE:1;
    unsigned int MnS:1;
    unsigned int SONA:1;
    unsigned int SOPE:1;
    unsigned int reserved_22:10;
} Ifx_I2C_ADDRCFG_Bits;


typedef struct _Ifx_I2C_BUSSTAT_Bits
{
    unsigned int BS:2;
    unsigned int RnW:1;
    unsigned int reserved_3:29;
} Ifx_I2C_BUSSTAT_Bits;


typedef struct _Ifx_I2C_CLC1_Bits
{
    unsigned int DISR:1;
    unsigned int DISS:1;
    unsigned int SPEN:1;
    unsigned int EDIS:1;
    unsigned int SBWE:1;
    unsigned int FSOE:1;
    unsigned int reserved_6:2;
    unsigned int RMC:8;
    unsigned int reserved_16:16;
} Ifx_I2C_CLC1_Bits;


typedef struct _Ifx_I2C_CLC_Bits
{
    unsigned int DISR:1;
    unsigned int DISS:1;
    unsigned int reserved_2:30;
} Ifx_I2C_CLC_Bits;


typedef struct _Ifx_I2C_ENDDCTRL_Bits
{
    unsigned int SETRSC:1;
    unsigned int SETEND:1;
    unsigned int reserved_2:30;
} Ifx_I2C_ENDDCTRL_Bits;


typedef struct _Ifx_I2C_ERRIRQSC_Bits
{
    unsigned int RXF_UFL:1;
    unsigned int RXF_OFL:1;
    unsigned int TXF_UFL:1;
    unsigned int TXF_OFL:1;
    unsigned int reserved_4:28;
} Ifx_I2C_ERRIRQSC_Bits;


typedef struct _Ifx_I2C_ERRIRQSM_Bits
{
    unsigned int RXF_UFL:1;
    unsigned int RXF_OFL:1;
    unsigned int TXF_UFL:1;
    unsigned int TXF_OFL:1;
    unsigned int reserved_4:28;
} Ifx_I2C_ERRIRQSM_Bits;


typedef struct _Ifx_I2C_ERRIRQSS_Bits
{
    unsigned int RXF_UFL:1;
    unsigned int RXF_OFL:1;
    unsigned int TXF_UFL:1;
    unsigned int TXF_OFL:1;
    unsigned int reserved_4:28;
} Ifx_I2C_ERRIRQSS_Bits;


typedef struct _Ifx_I2C_FDIVCFG_Bits
{
    unsigned int DEC:11;
    unsigned int reserved_11:5;
    unsigned int INC:8;
    unsigned int reserved_24:8;
} Ifx_I2C_FDIVCFG_Bits;


typedef struct _Ifx_I2C_FDIVHIGHCFG_Bits
{
    unsigned int DEC:11;
    unsigned int reserved_11:5;
    unsigned int INC:8;
    unsigned int reserved_24:8;
} Ifx_I2C_FDIVHIGHCFG_Bits;


typedef struct _Ifx_I2C_FFSSTAT_Bits
{
    unsigned int FFS:6;
    unsigned int reserved_6:26;
} Ifx_I2C_FFSSTAT_Bits;


typedef struct _Ifx_I2C_FIFOCFG_Bits
{
    unsigned int RXBS:2;
    unsigned int reserved_2:2;
    unsigned int TXBS:2;
    unsigned int reserved_6:2;
    unsigned int RXFA:2;
    unsigned int reserved_10:2;
    unsigned int TXFA:2;
    unsigned int reserved_14:2;
    unsigned int RXFC:1;
    unsigned int TXFC:1;
    unsigned int reserved_18:14;
} Ifx_I2C_FIFOCFG_Bits;


typedef struct _Ifx_I2C_GPCTL_Bits
{
    unsigned int PISEL:3;
    unsigned int reserved_3:29;
} Ifx_I2C_GPCTL_Bits;


typedef struct _Ifx_I2C_ICR_Bits
{
    unsigned int LSREQ_INT:1;
    unsigned int SREQ_INT:1;
    unsigned int LBREQ_INT:1;
    unsigned int BREQ_INT:1;
    unsigned int reserved_4:28;
} Ifx_I2C_ICR_Bits;


typedef struct _Ifx_I2C_ID_Bits
{
    unsigned int MOD_REV:8;
    unsigned int MODNUMBER:8;
    unsigned int reserved_16:16;
} Ifx_I2C_ID_Bits;


typedef struct _Ifx_I2C_IMSC_Bits
{
    unsigned int LSREQ_INT:1;
    unsigned int SREQ_INT:1;
    unsigned int LBREQ_INT:1;
    unsigned int BREQ_INT:1;
    unsigned int I2C_ERR_INT:1;
    unsigned int I2C_P_INT:1;
    unsigned int reserved_6:26;
} Ifx_I2C_IMSC_Bits;


typedef struct _Ifx_I2C_ISR_Bits
{
    unsigned int LSREQ_INT:1;
    unsigned int SREQ_INT:1;
    unsigned int LBREQ_INT:1;
    unsigned int BREQ_INT:1;
    unsigned int I2C_ERR_INT:1;
    unsigned int I2C_P_INT:1;
    unsigned int reserved_6:26;
} Ifx_I2C_ISR_Bits;


typedef struct _Ifx_I2C_KRST0_Bits
{
    unsigned int RST:1;
    unsigned int RSTSTAT:1;
    unsigned int reserved_2:30;
} Ifx_I2C_KRST0_Bits;


typedef struct _Ifx_I2C_KRST1_Bits
{
    unsigned int RST:1;
    unsigned int reserved_1:31;
} Ifx_I2C_KRST1_Bits;


typedef struct _Ifx_I2C_KRSTCLR_Bits
{
    unsigned int CLR:1;
    unsigned int reserved_1:31;
} Ifx_I2C_KRSTCLR_Bits;


typedef struct _Ifx_I2C_MIS_Bits
{
    unsigned int LSREQ_INT:1;
    unsigned int SREQ_INT:1;
    unsigned int LBREQ_INT:1;
    unsigned int BREQ_INT:1;
    unsigned int I2C_ERR_INT:1;
    unsigned int I2C_P_INT:1;
    unsigned int reserved_6:26;
} Ifx_I2C_MIS_Bits;


typedef struct _Ifx_I2C_MODID_Bits
{
    unsigned int MOD_REV:8;
    unsigned int MOD_TYPE:8;
    unsigned int MODNUMBER:16;
} Ifx_I2C_MODID_Bits;


typedef struct _Ifx_I2C_MRPSCTRL_Bits
{
    unsigned int MRPS:14;
    unsigned int reserved_14:18;
} Ifx_I2C_MRPSCTRL_Bits;


typedef struct _Ifx_I2C_PIRQSC_Bits
{
    unsigned int AM:1;
    unsigned int GC:1;
    unsigned int MC:1;
    unsigned int AL:1;
    unsigned int NACK:1;
    unsigned int TX_END:1;
    unsigned int RX:1;
    unsigned int reserved_7:25;
} Ifx_I2C_PIRQSC_Bits;


typedef struct _Ifx_I2C_PIRQSM_Bits
{
    unsigned int AM:1;
    unsigned int GC:1;
    unsigned int MC:1;
    unsigned int AL:1;
    unsigned int NACK:1;
    unsigned int TX_END:1;
    unsigned int RX:1;
    unsigned int reserved_7:25;
} Ifx_I2C_PIRQSM_Bits;


typedef struct _Ifx_I2C_PIRQSS_Bits
{
    unsigned int AM:1;
    unsigned int GC:1;
    unsigned int MC:1;
    unsigned int AL:1;
    unsigned int NACK:1;
    unsigned int TX_END:1;
    unsigned int RX:1;
    unsigned int reserved_7:25;
} Ifx_I2C_PIRQSS_Bits;


typedef struct _Ifx_I2C_RIS_Bits
{
    unsigned int LSREQ_INT:1;
    unsigned int SREQ_INT:1;
    unsigned int LBREQ_INT:1;
    unsigned int BREQ_INT:1;
    unsigned int I2C_ERR_INT:1;
    unsigned int I2C_P_INT:1;
    unsigned int reserved_6:26;
} Ifx_I2C_RIS_Bits;


typedef struct _Ifx_I2C_RPSSTAT_Bits
{
    unsigned int RPS:14;
    unsigned int reserved_14:18;
} Ifx_I2C_RPSSTAT_Bits;


typedef struct _Ifx_I2C_RUNCTRL_Bits
{
    unsigned int RUN:1;
    unsigned int reserved_1:31;
} Ifx_I2C_RUNCTRL_Bits;


typedef struct _Ifx_I2C_RXD_Bits
{
    unsigned int RXD:32;
} Ifx_I2C_RXD_Bits;


typedef struct _Ifx_I2C_TIMCFG_Bits
{
    unsigned int SDA_DEL_HD_DAT:6;
    unsigned int HS_SDA_DEL_HD_DAT:3;
    unsigned int SCL_DEL_HD_STA:3;
    unsigned int reserved_12:2;
    unsigned int EN_SCL_LOW_LEN:1;
    unsigned int FS_SCL_LOW:1;
    unsigned int HS_SDA_DEL:3;
    unsigned int reserved_19:5;
    unsigned int SCL_LOW_LEN:8;
} Ifx_I2C_TIMCFG_Bits;


typedef struct _Ifx_I2C_TPSCTRL_Bits
{
    unsigned int TPS:14;
    unsigned int reserved_14:18;
} Ifx_I2C_TPSCTRL_Bits;


typedef struct _Ifx_I2C_TXD_Bits
{
    unsigned int TXD:32;
} Ifx_I2C_TXD_Bits;







typedef union
{
    unsigned int U;
    signed int I;
    Ifx_I2C_ACCEN0_Bits B;
} Ifx_I2C_ACCEN0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_I2C_ACCEN1_Bits B;
} Ifx_I2C_ACCEN1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_I2C_ADDRCFG_Bits B;
} Ifx_I2C_ADDRCFG;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_I2C_BUSSTAT_Bits B;
} Ifx_I2C_BUSSTAT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_I2C_CLC_Bits B;
} Ifx_I2C_CLC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_I2C_CLC1_Bits B;
} Ifx_I2C_CLC1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_I2C_ENDDCTRL_Bits B;
} Ifx_I2C_ENDDCTRL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_I2C_ERRIRQSC_Bits B;
} Ifx_I2C_ERRIRQSC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_I2C_ERRIRQSM_Bits B;
} Ifx_I2C_ERRIRQSM;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_I2C_ERRIRQSS_Bits B;
} Ifx_I2C_ERRIRQSS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_I2C_FDIVCFG_Bits B;
} Ifx_I2C_FDIVCFG;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_I2C_FDIVHIGHCFG_Bits B;
} Ifx_I2C_FDIVHIGHCFG;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_I2C_FFSSTAT_Bits B;
} Ifx_I2C_FFSSTAT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_I2C_FIFOCFG_Bits B;
} Ifx_I2C_FIFOCFG;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_I2C_GPCTL_Bits B;
} Ifx_I2C_GPCTL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_I2C_ICR_Bits B;
} Ifx_I2C_ICR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_I2C_ID_Bits B;
} Ifx_I2C_ID;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_I2C_IMSC_Bits B;
} Ifx_I2C_IMSC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_I2C_ISR_Bits B;
} Ifx_I2C_ISR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_I2C_KRST0_Bits B;
} Ifx_I2C_KRST0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_I2C_KRST1_Bits B;
} Ifx_I2C_KRST1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_I2C_KRSTCLR_Bits B;
} Ifx_I2C_KRSTCLR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_I2C_MIS_Bits B;
} Ifx_I2C_MIS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_I2C_MODID_Bits B;
} Ifx_I2C_MODID;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_I2C_MRPSCTRL_Bits B;
} Ifx_I2C_MRPSCTRL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_I2C_PIRQSC_Bits B;
} Ifx_I2C_PIRQSC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_I2C_PIRQSM_Bits B;
} Ifx_I2C_PIRQSM;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_I2C_PIRQSS_Bits B;
} Ifx_I2C_PIRQSS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_I2C_RIS_Bits B;
} Ifx_I2C_RIS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_I2C_RPSSTAT_Bits B;
} Ifx_I2C_RPSSTAT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_I2C_RUNCTRL_Bits B;
} Ifx_I2C_RUNCTRL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_I2C_RXD_Bits B;
} Ifx_I2C_RXD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_I2C_TIMCFG_Bits B;
} Ifx_I2C_TIMCFG;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_I2C_TPSCTRL_Bits B;
} Ifx_I2C_TPSCTRL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_I2C_TXD_Bits B;
} Ifx_I2C_TXD;
# 700 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxI2c_regdef.h" 3
typedef volatile struct _Ifx_I2C
{
    Ifx_I2C_CLC1 CLC1;
    unsigned char reserved_4[4];
    Ifx_I2C_ID ID;
    unsigned char reserved_C[4];
    Ifx_I2C_RUNCTRL RUNCTRL;
    Ifx_I2C_ENDDCTRL ENDDCTRL;
    Ifx_I2C_FDIVCFG FDIVCFG;
    Ifx_I2C_FDIVHIGHCFG FDIVHIGHCFG;
    Ifx_I2C_ADDRCFG ADDRCFG;
    Ifx_I2C_BUSSTAT BUSSTAT;
    Ifx_I2C_FIFOCFG FIFOCFG;
    Ifx_I2C_MRPSCTRL MRPSCTRL;
    Ifx_I2C_RPSSTAT RPSSTAT;
    Ifx_I2C_TPSCTRL TPSCTRL;
    Ifx_I2C_FFSSTAT FFSSTAT;
    unsigned char reserved_3C[4];
    Ifx_I2C_TIMCFG TIMCFG;
    unsigned char reserved_44[28];
    Ifx_I2C_ERRIRQSM ERRIRQSM;
    Ifx_I2C_ERRIRQSS ERRIRQSS;
    Ifx_I2C_ERRIRQSC ERRIRQSC;
    unsigned char reserved_6C[4];
    Ifx_I2C_PIRQSM PIRQSM;
    Ifx_I2C_PIRQSS PIRQSS;
    Ifx_I2C_PIRQSC PIRQSC;
    unsigned char reserved_7C[4];
    Ifx_I2C_RIS RIS;
    Ifx_I2C_IMSC IMSC;
    Ifx_I2C_MIS MIS;
    Ifx_I2C_ICR ICR;
    Ifx_I2C_ISR ISR;
    unsigned char reserved_94[32620];
    Ifx_I2C_TXD TXD;
    unsigned char reserved_8004[16380];
    Ifx_I2C_RXD RXD;
    unsigned char reserved_C004[16380];
    Ifx_I2C_CLC CLC;
    Ifx_I2C_MODID MODID;
    Ifx_I2C_GPCTL GPCTL;
    Ifx_I2C_ACCEN0 ACCEN0;
    Ifx_I2C_ACCEN1 ACCEN1;
    Ifx_I2C_KRST0 KRST0;
    Ifx_I2C_KRST1 KRST1;
    Ifx_I2C_KRSTCLR KRSTCLR;
    unsigned char reserved_10020[224];
} Ifx_I2C;
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxI2c_reg.h" 2 3





#define MODULE_I2C0 (*(Ifx_I2C*)0xF00C0000u)







#define I2C0_ACCEN0 (*(volatile Ifx_I2C_ACCEN0*)0xF00D000Cu)


#define I2C0_ACCEN1 (*(volatile Ifx_I2C_ACCEN1*)0xF00D0010u)


#define I2C0_ADDRCFG (*(volatile Ifx_I2C_ADDRCFG*)0xF00C0020u)


#define I2C0_BUSSTAT (*(volatile Ifx_I2C_BUSSTAT*)0xF00C0024u)


#define I2C0_CLC (*(volatile Ifx_I2C_CLC*)0xF00D0000u)


#define I2C0_CLC1 (*(volatile Ifx_I2C_CLC1*)0xF00C0000u)


#define I2C0_ENDDCTRL (*(volatile Ifx_I2C_ENDDCTRL*)0xF00C0014u)


#define I2C0_ERRIRQSC (*(volatile Ifx_I2C_ERRIRQSC*)0xF00C0068u)


#define I2C0_ERRIRQSM (*(volatile Ifx_I2C_ERRIRQSM*)0xF00C0060u)


#define I2C0_ERRIRQSS (*(volatile Ifx_I2C_ERRIRQSS*)0xF00C0064u)


#define I2C0_FDIVCFG (*(volatile Ifx_I2C_FDIVCFG*)0xF00C0018u)


#define I2C0_FDIVHIGHCFG (*(volatile Ifx_I2C_FDIVHIGHCFG*)0xF00C001Cu)


#define I2C0_FFSSTAT (*(volatile Ifx_I2C_FFSSTAT*)0xF00C0038u)


#define I2C0_FIFOCFG (*(volatile Ifx_I2C_FIFOCFG*)0xF00C0028u)


#define I2C0_GPCTL (*(volatile Ifx_I2C_GPCTL*)0xF00D0008u)


#define I2C0_ICR (*(volatile Ifx_I2C_ICR*)0xF00C008Cu)


#define I2C0_ID (*(volatile Ifx_I2C_ID*)0xF00C0008u)


#define I2C0_IMSC (*(volatile Ifx_I2C_IMSC*)0xF00C0084u)


#define I2C0_ISR (*(volatile Ifx_I2C_ISR*)0xF00C0090u)


#define I2C0_KRST0 (*(volatile Ifx_I2C_KRST0*)0xF00D0014u)


#define I2C0_KRST1 (*(volatile Ifx_I2C_KRST1*)0xF00D0018u)


#define I2C0_KRSTCLR (*(volatile Ifx_I2C_KRSTCLR*)0xF00D001Cu)


#define I2C0_MIS (*(volatile Ifx_I2C_MIS*)0xF00C0088u)


#define I2C0_MODID (*(volatile Ifx_I2C_MODID*)0xF00D0004u)


#define I2C0_MRPSCTRL (*(volatile Ifx_I2C_MRPSCTRL*)0xF00C002Cu)


#define I2C0_PIRQSC (*(volatile Ifx_I2C_PIRQSC*)0xF00C0078u)


#define I2C0_PIRQSM (*(volatile Ifx_I2C_PIRQSM*)0xF00C0070u)


#define I2C0_PIRQSS (*(volatile Ifx_I2C_PIRQSS*)0xF00C0074u)


#define I2C0_RIS (*(volatile Ifx_I2C_RIS*)0xF00C0080u)


#define I2C0_RPSSTAT (*(volatile Ifx_I2C_RPSSTAT*)0xF00C0030u)


#define I2C0_RUNCTRL (*(volatile Ifx_I2C_RUNCTRL*)0xF00C0010u)


#define I2C0_RXD (*(volatile Ifx_I2C_RXD*)0xF00CC000u)


#define I2C0_TIMCFG (*(volatile Ifx_I2C_TIMCFG*)0xF00C0040u)


#define I2C0_TPSCTRL (*(volatile Ifx_I2C_TPSCTRL*)0xF00C0034u)


#define I2C0_TXD (*(volatile Ifx_I2C_TXD*)0xF00C8000u)
# 47 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_reg.h" 2 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxInt_reg.h" 1 3
# 34 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxInt_reg.h" 3
#define IFXINT_REG_H 1

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxInt_regdef.h" 1 3
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxInt_regdef.h" 3
#define IFXINT_REGDEF_H 1







typedef struct _Ifx_INT_ACCEN00_Bits
{
    unsigned int EN0:1;
    unsigned int EN1:1;
    unsigned int EN2:1;
    unsigned int EN3:1;
    unsigned int EN4:1;
    unsigned int EN5:1;
    unsigned int EN6:1;
    unsigned int EN7:1;
    unsigned int EN8:1;
    unsigned int EN9:1;
    unsigned int EN10:1;
    unsigned int EN11:1;
    unsigned int EN12:1;
    unsigned int EN13:1;
    unsigned int EN14:1;
    unsigned int EN15:1;
    unsigned int EN16:1;
    unsigned int EN17:1;
    unsigned int EN18:1;
    unsigned int EN19:1;
    unsigned int EN20:1;
    unsigned int EN21:1;
    unsigned int EN22:1;
    unsigned int EN23:1;
    unsigned int EN24:1;
    unsigned int EN25:1;
    unsigned int EN26:1;
    unsigned int EN27:1;
    unsigned int EN28:1;
    unsigned int EN29:1;
    unsigned int EN30:1;
    unsigned int EN31:1;
} Ifx_INT_ACCEN00_Bits;


typedef struct _Ifx_INT_ACCEN01_Bits
{
    unsigned int reserved_0:32;
} Ifx_INT_ACCEN01_Bits;


typedef struct _Ifx_INT_ACCEN10_Bits
{
    unsigned int EN0:1;
    unsigned int EN1:1;
    unsigned int EN2:1;
    unsigned int EN3:1;
    unsigned int EN4:1;
    unsigned int EN5:1;
    unsigned int EN6:1;
    unsigned int EN7:1;
    unsigned int EN8:1;
    unsigned int EN9:1;
    unsigned int EN10:1;
    unsigned int EN11:1;
    unsigned int EN12:1;
    unsigned int EN13:1;
    unsigned int EN14:1;
    unsigned int EN15:1;
    unsigned int EN16:1;
    unsigned int EN17:1;
    unsigned int EN18:1;
    unsigned int EN19:1;
    unsigned int EN20:1;
    unsigned int EN21:1;
    unsigned int EN22:1;
    unsigned int EN23:1;
    unsigned int EN24:1;
    unsigned int EN25:1;
    unsigned int EN26:1;
    unsigned int EN27:1;
    unsigned int EN28:1;
    unsigned int EN29:1;
    unsigned int EN30:1;
    unsigned int EN31:1;
} Ifx_INT_ACCEN10_Bits;


typedef struct _Ifx_INT_ACCEN11_Bits
{
    unsigned int reserved_0:32;
} Ifx_INT_ACCEN11_Bits;


typedef struct _Ifx_INT_ICU_ECR_Bits
{
    unsigned int PN:8;
    unsigned int reserved_8:2;
    unsigned int ECC:6;
    unsigned int ID:10;
    unsigned int reserved_26:4;
    unsigned int EOV:1;
    unsigned int STAT:1;
} Ifx_INT_ICU_ECR_Bits;


typedef struct _Ifx_INT_ICU_LASR_Bits
{
    unsigned int PN:8;
    unsigned int reserved_8:2;
    unsigned int ECC:6;
    unsigned int ID:10;
    unsigned int reserved_26:6;
} Ifx_INT_ICU_LASR_Bits;


typedef struct _Ifx_INT_ICU_LWSR_Bits
{
    unsigned int PN:8;
    unsigned int reserved_8:2;
    unsigned int ECC:6;
    unsigned int ID:10;
    unsigned int reserved_26:5;
    unsigned int STAT:1;
} Ifx_INT_ICU_LWSR_Bits;


typedef struct _Ifx_INT_ID_Bits
{
    unsigned int MOD_REV:8;
    unsigned int MOD_TYPE:8;
    unsigned int MODNUMBER:16;
} Ifx_INT_ID_Bits;


typedef struct _Ifx_INT_OIT_Bits
{
    unsigned int TOS0:2;
    unsigned int reserved_2:5;
    unsigned int OE0:1;
    unsigned int TOS1:2;
    unsigned int reserved_10:5;
    unsigned int OE1:1;
    unsigned int reserved_16:16;
} Ifx_INT_OIT_Bits;


typedef struct _Ifx_INT_OIXMS_Bits
{
    unsigned int MIRQ:10;
    unsigned int reserved_10:22;
} Ifx_INT_OIXMS_Bits;


typedef struct _Ifx_INT_OIXS0_Bits
{
    unsigned int IRQ0:10;
    unsigned int reserved_10:6;
    unsigned int IRQ1:10;
    unsigned int reserved_26:6;
} Ifx_INT_OIXS0_Bits;


typedef struct _Ifx_INT_OIXS1_Bits
{
    unsigned int IRQ2:10;
    unsigned int reserved_10:6;
    unsigned int IRQ3:10;
    unsigned int reserved_26:6;
} Ifx_INT_OIXS1_Bits;


typedef struct _Ifx_INT_OIXTS_Bits
{
    unsigned int TGS:2;
    unsigned int reserved_2:6;
    unsigned int OBS:2;
    unsigned int reserved_10:22;
} Ifx_INT_OIXTS_Bits;


typedef struct _Ifx_INT_OMISN_Bits
{
    unsigned int OTGB0:16;
    unsigned int OTGB1:16;
} Ifx_INT_OMISN_Bits;


typedef struct _Ifx_INT_OMISP_Bits
{
    unsigned int OTGB0:16;
    unsigned int OTGB1:16;
} Ifx_INT_OMISP_Bits;


typedef struct _Ifx_INT_OOBS_Bits
{
    unsigned int OTGB0:16;
    unsigned int OTGB1:16;
} Ifx_INT_OOBS_Bits;


typedef struct _Ifx_INT_OSSIC_Bits
{
    unsigned int TGS:2;
    unsigned int TGB:1;
    unsigned int reserved_3:29;
} Ifx_INT_OSSIC_Bits;


typedef struct _Ifx_INT_SRB_Bits
{
    unsigned int TRIG0:1;
    unsigned int TRIG1:1;
    unsigned int TRIG2:1;
    unsigned int TRIG3:1;
    unsigned int reserved_4:28;
} Ifx_INT_SRB_Bits;







typedef union
{
    unsigned int U;
    signed int I;
    Ifx_INT_ACCEN00_Bits B;
} Ifx_INT_ACCEN00;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_INT_ACCEN01_Bits B;
} Ifx_INT_ACCEN01;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_INT_ACCEN10_Bits B;
} Ifx_INT_ACCEN10;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_INT_ACCEN11_Bits B;
} Ifx_INT_ACCEN11;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_INT_ICU_ECR_Bits B;
} Ifx_INT_ICU_ECR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_INT_ICU_LASR_Bits B;
} Ifx_INT_ICU_LASR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_INT_ICU_LWSR_Bits B;
} Ifx_INT_ICU_LWSR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_INT_ID_Bits B;
} Ifx_INT_ID;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_INT_OIT_Bits B;
} Ifx_INT_OIT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_INT_OIXMS_Bits B;
} Ifx_INT_OIXMS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_INT_OIXS0_Bits B;
} Ifx_INT_OIXS0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_INT_OIXS1_Bits B;
} Ifx_INT_OIXS1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_INT_OIXTS_Bits B;
} Ifx_INT_OIXTS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_INT_OMISN_Bits B;
} Ifx_INT_OMISN;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_INT_OMISP_Bits B;
} Ifx_INT_OMISP;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_INT_OOBS_Bits B;
} Ifx_INT_OOBS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_INT_OSSIC_Bits B;
} Ifx_INT_OSSIC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_INT_SRB_Bits B;
} Ifx_INT_SRB;
# 414 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxInt_regdef.h" 3
typedef volatile struct _Ifx_INT_ICU
{
    Ifx_INT_ICU_LWSR LWSR;
    Ifx_INT_ICU_LASR LASR;
    Ifx_INT_ICU_ECR ECR;
    unsigned char reserved_C[4];
} Ifx_INT_ICU;
# 433 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxInt_regdef.h" 3
typedef volatile struct _Ifx_INT
{
    unsigned char reserved_0[8];
    Ifx_INT_ID ID;
    unsigned char reserved_C[4];
    Ifx_INT_SRB SRB0;
    Ifx_INT_SRB SRB1;
    Ifx_INT_SRB SRB2;
    unsigned char reserved_1C[100];
    Ifx_INT_OOBS OOBS;
    Ifx_INT_OSSIC OSSIC;
    Ifx_INT_OIXTS OIXTS;
    Ifx_INT_OIXMS OIXMS;
    Ifx_INT_OIXS0 OIXS0;
    Ifx_INT_OIXS1 OIXS1;
    unsigned char reserved_98[8];
    Ifx_INT_OIT OIT;
    Ifx_INT_OMISP OMISP;
    Ifx_INT_OMISN OMISN;
    unsigned char reserved_AC[68];
    Ifx_INT_ACCEN01 ACCEN01;
    Ifx_INT_ACCEN00 ACCEN00;
    Ifx_INT_ACCEN11 ACCEN11;
    Ifx_INT_ACCEN10 ACCEN10;
    Ifx_INT_ICU CH[4];
    unsigned char reserved_140[3776];
} Ifx_INT;
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxInt_reg.h" 2 3





#define MODULE_INT (*(Ifx_INT*)0xF0037000u)







#define INT_ACCEN00 (*(volatile Ifx_INT_ACCEN00*)0xF00370F4u)


#define INT_ACCEN01 (*(volatile Ifx_INT_ACCEN01*)0xF00370F0u)


#define INT_ACCEN10 (*(volatile Ifx_INT_ACCEN10*)0xF00370FCu)


#define INT_ACCEN11 (*(volatile Ifx_INT_ACCEN11*)0xF00370F8u)


#define INT_CH0_ECR (*(volatile Ifx_INT_ICU_ECR*)0xF0037108u)




#define INT_ECR0 (INT_CH0_ECR)


#define INT_CH0_LASR (*(volatile Ifx_INT_ICU_LASR*)0xF0037104u)




#define INT_LASR0 (INT_CH0_LASR)


#define INT_CH0_LWSR (*(volatile Ifx_INT_ICU_LWSR*)0xF0037100u)




#define INT_LWSR0 (INT_CH0_LWSR)


#define INT_CH1_ECR (*(volatile Ifx_INT_ICU_ECR*)0xF0037118u)




#define INT_ECR1 (INT_CH1_ECR)


#define INT_CH1_LASR (*(volatile Ifx_INT_ICU_LASR*)0xF0037114u)




#define INT_LASR1 (INT_CH1_LASR)


#define INT_CH1_LWSR (*(volatile Ifx_INT_ICU_LWSR*)0xF0037110u)




#define INT_LWSR1 (INT_CH1_LWSR)


#define INT_CH2_ECR (*(volatile Ifx_INT_ICU_ECR*)0xF0037128u)




#define INT_ECR2 (INT_CH2_ECR)


#define INT_CH2_LASR (*(volatile Ifx_INT_ICU_LASR*)0xF0037124u)




#define INT_LASR2 (INT_CH2_LASR)


#define INT_CH2_LWSR (*(volatile Ifx_INT_ICU_LWSR*)0xF0037120u)




#define INT_LWSR2 (INT_CH2_LWSR)


#define INT_CH3_ECR (*(volatile Ifx_INT_ICU_ECR*)0xF0037138u)




#define INT_ECR3 (INT_CH3_ECR)


#define INT_CH3_LASR (*(volatile Ifx_INT_ICU_LASR*)0xF0037134u)




#define INT_LASR3 (INT_CH3_LASR)


#define INT_CH3_LWSR (*(volatile Ifx_INT_ICU_LWSR*)0xF0037130u)




#define INT_LWSR3 (INT_CH3_LWSR)


#define INT_ID (*(volatile Ifx_INT_ID*)0xF0037008u)


#define INT_OIT (*(volatile Ifx_INT_OIT*)0xF00370A0u)


#define INT_OIXMS (*(volatile Ifx_INT_OIXMS*)0xF003708Cu)


#define INT_OIXS0 (*(volatile Ifx_INT_OIXS0*)0xF0037090u)


#define INT_OIXS1 (*(volatile Ifx_INT_OIXS1*)0xF0037094u)


#define INT_OIXTS (*(volatile Ifx_INT_OIXTS*)0xF0037088u)


#define INT_OMISN (*(volatile Ifx_INT_OMISN*)0xF00370A8u)


#define INT_OMISP (*(volatile Ifx_INT_OMISP*)0xF00370A4u)


#define INT_OOBS (*(volatile Ifx_INT_OOBS*)0xF0037080u)


#define INT_OSSIC (*(volatile Ifx_INT_OSSIC*)0xF0037084u)


#define INT_SRB0 (*(volatile Ifx_INT_SRB*)0xF0037010u)


#define INT_SRB1 (*(volatile Ifx_INT_SRB*)0xF0037014u)


#define INT_SRB2 (*(volatile Ifx_INT_SRB*)0xF0037018u)
# 48 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_reg.h" 2 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxIom_reg.h" 1 3
# 34 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxIom_reg.h" 3
#define IFXIOM_REG_H 1

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxIom_regdef.h" 1 3
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxIom_regdef.h" 3
#define IFXIOM_REGDEF_H 1







typedef struct _Ifx_IOM_ACCEN0_Bits
{
    unsigned int EN0:1;
    unsigned int EN1:1;
    unsigned int EN2:1;
    unsigned int EN3:1;
    unsigned int EN4:1;
    unsigned int EN5:1;
    unsigned int EN6:1;
    unsigned int EN7:1;
    unsigned int EN8:1;
    unsigned int EN9:1;
    unsigned int EN10:1;
    unsigned int EN11:1;
    unsigned int EN12:1;
    unsigned int EN13:1;
    unsigned int EN14:1;
    unsigned int EN15:1;
    unsigned int EN16:1;
    unsigned int EN17:1;
    unsigned int EN18:1;
    unsigned int EN19:1;
    unsigned int EN20:1;
    unsigned int EN21:1;
    unsigned int EN22:1;
    unsigned int EN23:1;
    unsigned int EN24:1;
    unsigned int EN25:1;
    unsigned int EN26:1;
    unsigned int EN27:1;
    unsigned int EN28:1;
    unsigned int EN29:1;
    unsigned int EN30:1;
    unsigned int EN31:1;
} Ifx_IOM_ACCEN0_Bits;


typedef struct _Ifx_IOM_ACCEN1_Bits
{
    unsigned int reserved_0:32;
} Ifx_IOM_ACCEN1_Bits;


typedef struct _Ifx_IOM_CLC_Bits
{
    unsigned int DISR:1;
    unsigned int DISS:1;
    unsigned int reserved_2:1;
    unsigned int EDIS:1;
    unsigned int reserved_4:4;
    unsigned int RMC:8;
    unsigned int reserved_16:16;
} Ifx_IOM_CLC_Bits;


typedef struct _Ifx_IOM_ECMCCFG_Bits
{
    unsigned int SELC0:4;
    unsigned int THRC0:4;
    unsigned int SELC1:4;
    unsigned int THCR1:4;
    unsigned int SELC2:4;
    unsigned int THCR2:4;
    unsigned int SELC3:4;
    unsigned int THCR3:4;
} Ifx_IOM_ECMCCFG_Bits;


typedef struct _Ifx_IOM_ECMETH0_Bits
{
    unsigned int ETA0:1;
    unsigned int ETA1:1;
    unsigned int ETA2:1;
    unsigned int ETA3:1;
    unsigned int ETA4:1;
    unsigned int ETA5:1;
    unsigned int ETA6:1;
    unsigned int ETA7:1;
    unsigned int ETA8:1;
    unsigned int ETA9:1;
    unsigned int ETA10:1;
    unsigned int ETA11:1;
    unsigned int ETA12:1;
    unsigned int ETA13:1;
    unsigned int ETA14:1;
    unsigned int ETA15:1;
    unsigned int ETB0:1;
    unsigned int ETB1:1;
    unsigned int ETB2:1;
    unsigned int ETB3:1;
    unsigned int ETB4:1;
    unsigned int ETB5:1;
    unsigned int ETB6:1;
    unsigned int ETB7:1;
    unsigned int ETB8:1;
    unsigned int ETB9:1;
    unsigned int ETB10:1;
    unsigned int ETB11:1;
    unsigned int ETB12:1;
    unsigned int ETB13:1;
    unsigned int ETB14:1;
    unsigned int ETB15:1;
} Ifx_IOM_ECMETH0_Bits;


typedef struct _Ifx_IOM_ECMETH1_Bits
{
    unsigned int ETC0:1;
    unsigned int ETC1:1;
    unsigned int ETC2:1;
    unsigned int ETC3:1;
    unsigned int ETC4:1;
    unsigned int ETC5:1;
    unsigned int ETC6:1;
    unsigned int ETC7:1;
    unsigned int ETC8:1;
    unsigned int ETC9:1;
    unsigned int ETC10:1;
    unsigned int ETC11:1;
    unsigned int ETC12:1;
    unsigned int ETC13:1;
    unsigned int ETC14:1;
    unsigned int ETC15:1;
    unsigned int ETD0:1;
    unsigned int ETD1:1;
    unsigned int ETD2:1;
    unsigned int ETD3:1;
    unsigned int ETD4:1;
    unsigned int ETD5:1;
    unsigned int ETD6:1;
    unsigned int ETD7:1;
    unsigned int ETD8:1;
    unsigned int ETD9:1;
    unsigned int ETD10:1;
    unsigned int ETD11:1;
    unsigned int ETD12:1;
    unsigned int ETD13:1;
    unsigned int ETD14:1;
    unsigned int ETD15:1;
} Ifx_IOM_ECMETH1_Bits;


typedef struct _Ifx_IOM_ECMSELR_Bits
{
    unsigned int CES0:1;
    unsigned int CES1:1;
    unsigned int CES2:1;
    unsigned int CES3:1;
    unsigned int CES4:1;
    unsigned int CES5:1;
    unsigned int CES6:1;
    unsigned int CES7:1;
    unsigned int CES8:1;
    unsigned int CES9:1;
    unsigned int CES10:1;
    unsigned int CES11:1;
    unsigned int CES12:1;
    unsigned int CES13:1;
    unsigned int CES14:1;
    unsigned int CES15:1;
    unsigned int CTS0:1;
    unsigned int CTS1:1;
    unsigned int CTS2:1;
    unsigned int CTS3:1;
    unsigned int reserved_20:12;
} Ifx_IOM_ECMSELR_Bits;


typedef struct _Ifx_IOM_FPCCTR_Bits
{
    unsigned int CMP:16;
    unsigned int MOD:3;
    unsigned int ISM:2;
    unsigned int reserved_21:1;
    unsigned int RTG:1;
    unsigned int reserved_23:1;
    unsigned int ISR:3;
    unsigned int reserved_27:5;
} Ifx_IOM_FPCCTR_Bits;


typedef struct _Ifx_IOM_FPCESR_Bits
{
    unsigned int FEG0:1;
    unsigned int FEG1:1;
    unsigned int FEG2:1;
    unsigned int FEG3:1;
    unsigned int FEG4:1;
    unsigned int FEG5:1;
    unsigned int FEG6:1;
    unsigned int FEG7:1;
    unsigned int FEG8:1;
    unsigned int FEG9:1;
    unsigned int FEG10:1;
    unsigned int FEG11:1;
    unsigned int FEG12:1;
    unsigned int FEG13:1;
    unsigned int FEG14:1;
    unsigned int FEG15:1;
    unsigned int REG0:1;
    unsigned int REG1:1;
    unsigned int REG2:1;
    unsigned int REG3:1;
    unsigned int REG4:1;
    unsigned int REG5:1;
    unsigned int REG6:1;
    unsigned int REG7:1;
    unsigned int REG8:1;
    unsigned int REG9:1;
    unsigned int REG10:1;
    unsigned int REG11:1;
    unsigned int REG12:1;
    unsigned int REG13:1;
    unsigned int REG14:1;
    unsigned int REG15:1;
} Ifx_IOM_FPCESR_Bits;


typedef struct _Ifx_IOM_FPCTIM_Bits
{
    unsigned int TIM:16;
    unsigned int reserved_16:16;
} Ifx_IOM_FPCTIM_Bits;


typedef struct _Ifx_IOM_GTMEXR_Bits
{
    unsigned int EN0:1;
    unsigned int EN1:1;
    unsigned int EN2:1;
    unsigned int EN3:1;
    unsigned int EN4:1;
    unsigned int EN5:1;
    unsigned int EN6:1;
    unsigned int EN7:1;
    unsigned int reserved_8:24;
} Ifx_IOM_GTMEXR_Bits;


typedef struct _Ifx_IOM_ID_Bits
{
    unsigned int MOD_REV:8;
    unsigned int MOD_TYPE:8;
    unsigned int MODNUMBER:16;
} Ifx_IOM_ID_Bits;


typedef struct _Ifx_IOM_KRST0_Bits
{
    unsigned int RST:1;
    unsigned int RSTSTAT:1;
    unsigned int reserved_2:30;
} Ifx_IOM_KRST0_Bits;


typedef struct _Ifx_IOM_KRST1_Bits
{
    unsigned int RST:1;
    unsigned int reserved_1:31;
} Ifx_IOM_KRST1_Bits;


typedef struct _Ifx_IOM_KRSTCLR_Bits
{
    unsigned int CLR:1;
    unsigned int reserved_1:31;
} Ifx_IOM_KRSTCLR_Bits;


typedef struct _Ifx_IOM_LAMCFG_Bits
{
    unsigned int IVR:1;
    unsigned int IVM:1;
    unsigned int MOS:1;
    unsigned int RMS:1;
    unsigned int EWS:1;
    unsigned int reserved_5:3;
    unsigned int EDS:4;
    unsigned int IVW:1;
    unsigned int reserved_13:3;
    unsigned int MCS:4;
    unsigned int RCS:4;
    unsigned int reserved_24:8;
} Ifx_IOM_LAMCFG_Bits;


typedef struct _Ifx_IOM_LAMEWC_Bits
{
    unsigned int CNT:24;
    unsigned int reserved_24:8;
} Ifx_IOM_LAMEWC_Bits;


typedef struct _Ifx_IOM_LAMEWS_Bits
{
    unsigned int THR:24;
    unsigned int reserved_24:8;
} Ifx_IOM_LAMEWS_Bits;







typedef union
{
    unsigned int U;
    signed int I;
    Ifx_IOM_ACCEN0_Bits B;
} Ifx_IOM_ACCEN0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_IOM_ACCEN1_Bits B;
} Ifx_IOM_ACCEN1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_IOM_CLC_Bits B;
} Ifx_IOM_CLC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_IOM_ECMCCFG_Bits B;
} Ifx_IOM_ECMCCFG;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_IOM_ECMETH0_Bits B;
} Ifx_IOM_ECMETH0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_IOM_ECMETH1_Bits B;
} Ifx_IOM_ECMETH1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_IOM_ECMSELR_Bits B;
} Ifx_IOM_ECMSELR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_IOM_FPCCTR_Bits B;
} Ifx_IOM_FPCCTR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_IOM_FPCESR_Bits B;
} Ifx_IOM_FPCESR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_IOM_FPCTIM_Bits B;
} Ifx_IOM_FPCTIM;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_IOM_GTMEXR_Bits B;
} Ifx_IOM_GTMEXR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_IOM_ID_Bits B;
} Ifx_IOM_ID;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_IOM_KRST0_Bits B;
} Ifx_IOM_KRST0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_IOM_KRST1_Bits B;
} Ifx_IOM_KRST1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_IOM_KRSTCLR_Bits B;
} Ifx_IOM_KRSTCLR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_IOM_LAMCFG_Bits B;
} Ifx_IOM_LAMCFG;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_IOM_LAMEWC_Bits B;
} Ifx_IOM_LAMEWC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_IOM_LAMEWS_Bits B;
} Ifx_IOM_LAMEWS;
# 502 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxIom_regdef.h" 3
typedef volatile struct _Ifx_IOM
{
    Ifx_IOM_CLC CLC;
    unsigned char reserved_4[4];
    Ifx_IOM_ID ID;
    unsigned char reserved_C[16];
    Ifx_IOM_KRSTCLR KRSTCLR;
    Ifx_IOM_KRST1 KRST1;
    Ifx_IOM_KRST0 KRST0;
    Ifx_IOM_ACCEN1 ACCEN1;
    Ifx_IOM_ACCEN0 ACCEN0;
    Ifx_IOM_ECMCCFG ECMCCFG;
    Ifx_IOM_ECMSELR ECMSELR;
    Ifx_IOM_ECMETH0 ECMETH0;
    Ifx_IOM_ECMETH1 ECMETH1;
    Ifx_IOM_GTMEXR GTMEXR;
    unsigned char reserved_44[52];
    Ifx_IOM_FPCESR FPCESR;
    unsigned char reserved_7C[4];
    Ifx_IOM_FPCCTR FPCCTR[16];
    Ifx_IOM_FPCTIM FPCTIM[16];
    Ifx_IOM_LAMEWC LAMEWC[16];
    unsigned char reserved_140[64];
    Ifx_IOM_LAMCFG LAMCFG[16];
    Ifx_IOM_LAMEWS LAMEWS[16];
} Ifx_IOM;
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxIom_reg.h" 2 3





#define MODULE_IOM (*(Ifx_IOM*)0xF0035000u)







#define IOM_ACCEN0 (*(volatile Ifx_IOM_ACCEN0*)0xF003502Cu)


#define IOM_ACCEN1 (*(volatile Ifx_IOM_ACCEN1*)0xF0035028u)


#define IOM_CLC (*(volatile Ifx_IOM_CLC*)0xF0035000u)


#define IOM_ECMCCFG (*(volatile Ifx_IOM_ECMCCFG*)0xF0035030u)


#define IOM_ECMETH0 (*(volatile Ifx_IOM_ECMETH0*)0xF0035038u)


#define IOM_ECMETH1 (*(volatile Ifx_IOM_ECMETH1*)0xF003503Cu)


#define IOM_ECMSELR (*(volatile Ifx_IOM_ECMSELR*)0xF0035034u)


#define IOM_FPCCTR0 (*(volatile Ifx_IOM_FPCCTR*)0xF0035080u)


#define IOM_FPCCTR1 (*(volatile Ifx_IOM_FPCCTR*)0xF0035084u)


#define IOM_FPCCTR10 (*(volatile Ifx_IOM_FPCCTR*)0xF00350A8u)


#define IOM_FPCCTR11 (*(volatile Ifx_IOM_FPCCTR*)0xF00350ACu)


#define IOM_FPCCTR12 (*(volatile Ifx_IOM_FPCCTR*)0xF00350B0u)


#define IOM_FPCCTR13 (*(volatile Ifx_IOM_FPCCTR*)0xF00350B4u)


#define IOM_FPCCTR14 (*(volatile Ifx_IOM_FPCCTR*)0xF00350B8u)


#define IOM_FPCCTR15 (*(volatile Ifx_IOM_FPCCTR*)0xF00350BCu)


#define IOM_FPCCTR2 (*(volatile Ifx_IOM_FPCCTR*)0xF0035088u)


#define IOM_FPCCTR3 (*(volatile Ifx_IOM_FPCCTR*)0xF003508Cu)


#define IOM_FPCCTR4 (*(volatile Ifx_IOM_FPCCTR*)0xF0035090u)


#define IOM_FPCCTR5 (*(volatile Ifx_IOM_FPCCTR*)0xF0035094u)


#define IOM_FPCCTR6 (*(volatile Ifx_IOM_FPCCTR*)0xF0035098u)


#define IOM_FPCCTR7 (*(volatile Ifx_IOM_FPCCTR*)0xF003509Cu)


#define IOM_FPCCTR8 (*(volatile Ifx_IOM_FPCCTR*)0xF00350A0u)


#define IOM_FPCCTR9 (*(volatile Ifx_IOM_FPCCTR*)0xF00350A4u)



#define IOM_FPCESR (*(volatile Ifx_IOM_FPCESR*)0xF0035078u)


#define IOM_FPCTIM0 (*(volatile Ifx_IOM_FPCTIM*)0xF00350C0u)


#define IOM_FPCTIM1 (*(volatile Ifx_IOM_FPCTIM*)0xF00350C4u)


#define IOM_FPCTIM10 (*(volatile Ifx_IOM_FPCTIM*)0xF00350E8u)


#define IOM_FPCTIM11 (*(volatile Ifx_IOM_FPCTIM*)0xF00350ECu)


#define IOM_FPCTIM12 (*(volatile Ifx_IOM_FPCTIM*)0xF00350F0u)


#define IOM_FPCTIM13 (*(volatile Ifx_IOM_FPCTIM*)0xF00350F4u)


#define IOM_FPCTIM14 (*(volatile Ifx_IOM_FPCTIM*)0xF00350F8u)


#define IOM_FPCTIM15 (*(volatile Ifx_IOM_FPCTIM*)0xF00350FCu)


#define IOM_FPCTIM2 (*(volatile Ifx_IOM_FPCTIM*)0xF00350C8u)


#define IOM_FPCTIM3 (*(volatile Ifx_IOM_FPCTIM*)0xF00350CCu)


#define IOM_FPCTIM4 (*(volatile Ifx_IOM_FPCTIM*)0xF00350D0u)


#define IOM_FPCTIM5 (*(volatile Ifx_IOM_FPCTIM*)0xF00350D4u)


#define IOM_FPCTIM6 (*(volatile Ifx_IOM_FPCTIM*)0xF00350D8u)


#define IOM_FPCTIM7 (*(volatile Ifx_IOM_FPCTIM*)0xF00350DCu)


#define IOM_FPCTIM8 (*(volatile Ifx_IOM_FPCTIM*)0xF00350E0u)


#define IOM_FPCTIM9 (*(volatile Ifx_IOM_FPCTIM*)0xF00350E4u)


#define IOM_GTMEXR (*(volatile Ifx_IOM_GTMEXR*)0xF0035040u)


#define IOM_ID (*(volatile Ifx_IOM_ID*)0xF0035008u)


#define IOM_KRST0 (*(volatile Ifx_IOM_KRST0*)0xF0035024u)


#define IOM_KRST1 (*(volatile Ifx_IOM_KRST1*)0xF0035020u)


#define IOM_KRSTCLR (*(volatile Ifx_IOM_KRSTCLR*)0xF003501Cu)


#define IOM_LAMCFG0 (*(volatile Ifx_IOM_LAMCFG*)0xF0035180u)


#define IOM_LAMCFG1 (*(volatile Ifx_IOM_LAMCFG*)0xF0035184u)


#define IOM_LAMCFG10 (*(volatile Ifx_IOM_LAMCFG*)0xF00351A8u)


#define IOM_LAMCFG11 (*(volatile Ifx_IOM_LAMCFG*)0xF00351ACu)


#define IOM_LAMCFG12 (*(volatile Ifx_IOM_LAMCFG*)0xF00351B0u)


#define IOM_LAMCFG13 (*(volatile Ifx_IOM_LAMCFG*)0xF00351B4u)


#define IOM_LAMCFG14 (*(volatile Ifx_IOM_LAMCFG*)0xF00351B8u)


#define IOM_LAMCFG15 (*(volatile Ifx_IOM_LAMCFG*)0xF00351BCu)


#define IOM_LAMCFG2 (*(volatile Ifx_IOM_LAMCFG*)0xF0035188u)


#define IOM_LAMCFG3 (*(volatile Ifx_IOM_LAMCFG*)0xF003518Cu)


#define IOM_LAMCFG4 (*(volatile Ifx_IOM_LAMCFG*)0xF0035190u)


#define IOM_LAMCFG5 (*(volatile Ifx_IOM_LAMCFG*)0xF0035194u)


#define IOM_LAMCFG6 (*(volatile Ifx_IOM_LAMCFG*)0xF0035198u)


#define IOM_LAMCFG7 (*(volatile Ifx_IOM_LAMCFG*)0xF003519Cu)


#define IOM_LAMCFG8 (*(volatile Ifx_IOM_LAMCFG*)0xF00351A0u)


#define IOM_LAMCFG9 (*(volatile Ifx_IOM_LAMCFG*)0xF00351A4u)


#define IOM_LAMEWC0 (*(volatile Ifx_IOM_LAMEWC*)0xF0035100u)


#define IOM_LAMEWC1 (*(volatile Ifx_IOM_LAMEWC*)0xF0035104u)


#define IOM_LAMEWC10 (*(volatile Ifx_IOM_LAMEWC*)0xF0035128u)


#define IOM_LAMEWC11 (*(volatile Ifx_IOM_LAMEWC*)0xF003512Cu)


#define IOM_LAMEWC12 (*(volatile Ifx_IOM_LAMEWC*)0xF0035130u)


#define IOM_LAMEWC13 (*(volatile Ifx_IOM_LAMEWC*)0xF0035134u)


#define IOM_LAMEWC14 (*(volatile Ifx_IOM_LAMEWC*)0xF0035138u)


#define IOM_LAMEWC15 (*(volatile Ifx_IOM_LAMEWC*)0xF003513Cu)


#define IOM_LAMEWC2 (*(volatile Ifx_IOM_LAMEWC*)0xF0035108u)


#define IOM_LAMEWC3 (*(volatile Ifx_IOM_LAMEWC*)0xF003510Cu)


#define IOM_LAMEWC4 (*(volatile Ifx_IOM_LAMEWC*)0xF0035110u)


#define IOM_LAMEWC5 (*(volatile Ifx_IOM_LAMEWC*)0xF0035114u)


#define IOM_LAMEWC6 (*(volatile Ifx_IOM_LAMEWC*)0xF0035118u)


#define IOM_LAMEWC7 (*(volatile Ifx_IOM_LAMEWC*)0xF003511Cu)


#define IOM_LAMEWC8 (*(volatile Ifx_IOM_LAMEWC*)0xF0035120u)


#define IOM_LAMEWC9 (*(volatile Ifx_IOM_LAMEWC*)0xF0035124u)


#define IOM_LAMEWS0 (*(volatile Ifx_IOM_LAMEWS*)0xF00351C0u)


#define IOM_LAMEWS1 (*(volatile Ifx_IOM_LAMEWS*)0xF00351C4u)


#define IOM_LAMEWS10 (*(volatile Ifx_IOM_LAMEWS*)0xF00351E8u)


#define IOM_LAMEWS11 (*(volatile Ifx_IOM_LAMEWS*)0xF00351ECu)


#define IOM_LAMEWS12 (*(volatile Ifx_IOM_LAMEWS*)0xF00351F0u)


#define IOM_LAMEWS13 (*(volatile Ifx_IOM_LAMEWS*)0xF00351F4u)


#define IOM_LAMEWS14 (*(volatile Ifx_IOM_LAMEWS*)0xF00351F8u)


#define IOM_LAMEWS15 (*(volatile Ifx_IOM_LAMEWS*)0xF00351FCu)


#define IOM_LAMEWS2 (*(volatile Ifx_IOM_LAMEWS*)0xF00351C8u)


#define IOM_LAMEWS3 (*(volatile Ifx_IOM_LAMEWS*)0xF00351CCu)


#define IOM_LAMEWS4 (*(volatile Ifx_IOM_LAMEWS*)0xF00351D0u)


#define IOM_LAMEWS5 (*(volatile Ifx_IOM_LAMEWS*)0xF00351D4u)


#define IOM_LAMEWS6 (*(volatile Ifx_IOM_LAMEWS*)0xF00351D8u)


#define IOM_LAMEWS7 (*(volatile Ifx_IOM_LAMEWS*)0xF00351DCu)


#define IOM_LAMEWS8 (*(volatile Ifx_IOM_LAMEWS*)0xF00351E0u)


#define IOM_LAMEWS9 (*(volatile Ifx_IOM_LAMEWS*)0xF00351E4u)
# 49 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_reg.h" 2 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxLmu_reg.h" 1 3
# 34 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxLmu_reg.h" 3
#define IFXLMU_REG_H 1

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxLmu_regdef.h" 1 3
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxLmu_regdef.h" 3
#define IFXLMU_REGDEF_H 1







typedef struct _Ifx_LMU_ACCEN0_Bits
{
    volatile unsigned int EN0:1;
    volatile unsigned int EN1:1;
    volatile unsigned int EN2:1;
    volatile unsigned int EN3:1;
    volatile unsigned int EN4:1;
    volatile unsigned int EN5:1;
    volatile unsigned int EN6:1;
    volatile unsigned int EN7:1;
    volatile unsigned int EN8:1;
    volatile unsigned int EN9:1;
    volatile unsigned int EN10:1;
    volatile unsigned int EN11:1;
    volatile unsigned int EN12:1;
    volatile unsigned int EN13:1;
    volatile unsigned int EN14:1;
    volatile unsigned int EN15:1;
    volatile unsigned int EN16:1;
    volatile unsigned int EN17:1;
    volatile unsigned int EN18:1;
    volatile unsigned int EN19:1;
    volatile unsigned int EN20:1;
    volatile unsigned int EN21:1;
    volatile unsigned int EN22:1;
    volatile unsigned int EN23:1;
    volatile unsigned int EN24:1;
    volatile unsigned int EN25:1;
    volatile unsigned int EN26:1;
    volatile unsigned int EN27:1;
    volatile unsigned int EN28:1;
    volatile unsigned int EN29:1;
    volatile unsigned int EN30:1;
    volatile unsigned int EN31:1;
} Ifx_LMU_ACCEN0_Bits;


typedef struct _Ifx_LMU_ACCEN1_Bits
{
    volatile unsigned int reserved_0:32;
} Ifx_LMU_ACCEN1_Bits;


typedef struct _Ifx_LMU_BUFCON_Bits
{
    volatile unsigned int TAG1:6;
    volatile unsigned int reserved_6:2;
    volatile unsigned int TAG2:6;
    volatile unsigned int reserved_14:8;
    volatile unsigned int EREN:1;
    volatile unsigned int EPEN:1;
    volatile unsigned int reserved_24:6;
    volatile unsigned int EN1:1;
    volatile unsigned int EN2:1;
} Ifx_LMU_BUFCON_Bits;


typedef struct _Ifx_LMU_CLC_Bits
{
    volatile unsigned int DISR:1;
    volatile unsigned int DISS:1;
    volatile unsigned int reserved_2:30;
} Ifx_LMU_CLC_Bits;


typedef struct _Ifx_LMU_MEMCON_Bits
{
    volatile unsigned int OLDAEN:1;
    volatile unsigned int POLDAEN:1;
    volatile unsigned int INTERR:1;
    volatile unsigned int ERERR:1;
    volatile unsigned int RMWERR:1;
    volatile unsigned int EWERR:1;
    volatile unsigned int DATAERR:1;
    volatile unsigned int ADDERR:1;
    volatile unsigned int PMIC:1;
    volatile unsigned int ERRDIS:1;
    volatile unsigned int reserved_10:2;
    volatile unsigned int WSTATES:4;
    volatile unsigned int reserved_16:16;
} Ifx_LMU_MEMCON_Bits;


typedef struct _Ifx_LMU_MODID_Bits
{
    volatile unsigned int ID_VALUE:32;
} Ifx_LMU_MODID_Bits;


typedef struct _Ifx_LMU_RGN_ACCENA_Bits
{
    volatile unsigned int EN0:1;
    volatile unsigned int EN1:1;
    volatile unsigned int EN2:1;
    volatile unsigned int EN3:1;
    volatile unsigned int EN4:1;
    volatile unsigned int EN5:1;
    volatile unsigned int EN6:1;
    volatile unsigned int EN7:1;
    volatile unsigned int EN8:1;
    volatile unsigned int EN9:1;
    volatile unsigned int EN10:1;
    volatile unsigned int EN11:1;
    volatile unsigned int EN12:1;
    volatile unsigned int EN13:1;
    volatile unsigned int EN14:1;
    volatile unsigned int EN15:1;
    volatile unsigned int EN16:1;
    volatile unsigned int EN17:1;
    volatile unsigned int EN18:1;
    volatile unsigned int EN19:1;
    volatile unsigned int EN20:1;
    volatile unsigned int EN21:1;
    volatile unsigned int EN22:1;
    volatile unsigned int EN23:1;
    volatile unsigned int EN24:1;
    volatile unsigned int EN25:1;
    volatile unsigned int EN26:1;
    volatile unsigned int EN27:1;
    volatile unsigned int EN28:1;
    volatile unsigned int EN29:1;
    volatile unsigned int EN30:1;
    volatile unsigned int EN31:1;
} Ifx_LMU_RGN_ACCENA_Bits;


typedef struct _Ifx_LMU_RGN_ACCENB_Bits
{
    volatile unsigned int reserved_0:32;
} Ifx_LMU_RGN_ACCENB_Bits;


typedef struct _Ifx_LMU_RGN_LA_Bits
{
    volatile unsigned int reserved_0:5;
    volatile unsigned int ADDR:23;
    volatile unsigned int reserved_28:4;
} Ifx_LMU_RGN_LA_Bits;


typedef struct _Ifx_LMU_RGN_UA_Bits
{
    volatile unsigned int reserved_0:5;
    volatile unsigned int ADDR:24;
    volatile unsigned int reserved_29:3;
} Ifx_LMU_RGN_UA_Bits;







typedef union
{
    unsigned int U;
    signed int I;
    Ifx_LMU_ACCEN0_Bits B;
} Ifx_LMU_ACCEN0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_LMU_ACCEN1_Bits B;
} Ifx_LMU_ACCEN1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_LMU_BUFCON_Bits B;
} Ifx_LMU_BUFCON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_LMU_CLC_Bits B;
} Ifx_LMU_CLC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_LMU_MEMCON_Bits B;
} Ifx_LMU_MEMCON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_LMU_MODID_Bits B;
} Ifx_LMU_MODID;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_LMU_RGN_ACCENA_Bits B;
} Ifx_LMU_RGN_ACCENA;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_LMU_RGN_ACCENB_Bits B;
} Ifx_LMU_RGN_ACCENB;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_LMU_RGN_LA_Bits B;
} Ifx_LMU_RGN_LA;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_LMU_RGN_UA_Bits B;
} Ifx_LMU_RGN_UA;
# 286 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxLmu_regdef.h" 3
typedef volatile struct _Ifx_LMU_RGN
{
    Ifx_LMU_RGN_LA LA;
    Ifx_LMU_RGN_UA UA;
    Ifx_LMU_RGN_ACCENA ACCENA;
    Ifx_LMU_RGN_ACCENB ACCENB;
} Ifx_LMU_RGN;
# 305 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxLmu_regdef.h" 3
typedef volatile struct _Ifx_LMU
{
    Ifx_LMU_CLC CLC;
    unsigned char reserved_4[4];
    Ifx_LMU_MODID MODID;
    unsigned char reserved_C[4];
    Ifx_LMU_ACCEN0 ACCEN0;
    Ifx_LMU_ACCEN1 ACCEN1;
    unsigned char reserved_18[8];
    Ifx_LMU_MEMCON MEMCON;
    unsigned char reserved_24[12];
    Ifx_LMU_BUFCON BUFCON[3];
    unsigned char reserved_3C[20];
    Ifx_LMU_RGN RGN[8];
    unsigned char reserved_D0[48];
} Ifx_LMU;
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxLmu_reg.h" 2 3





#define MODULE_LMU (*(Ifx_LMU*)0xF8700800u)







#define LMU_ACCEN0 (*(volatile Ifx_LMU_ACCEN0*)0xF8700810u)


#define LMU_ACCEN1 (*(volatile Ifx_LMU_ACCEN1*)0xF8700814u)


#define LMU_BUFCON0 (*(volatile Ifx_LMU_BUFCON*)0xF8700830u)


#define LMU_BUFCON1 (*(volatile Ifx_LMU_BUFCON*)0xF8700834u)


#define LMU_BUFCON2 (*(volatile Ifx_LMU_BUFCON*)0xF8700838u)


#define LMU_CLC (*(volatile Ifx_LMU_CLC*)0xF8700800u)


#define LMU_MEMCON (*(volatile Ifx_LMU_MEMCON*)0xF8700820u)


#define LMU_MODID (*(volatile Ifx_LMU_MODID*)0xF8700808u)


#define LMU_RGN0_ACCENA (*(volatile Ifx_LMU_RGN_ACCENA*)0xF8700858u)




#define LMU_RGNACCENA0 (LMU_RGN0_ACCENA)


#define LMU_RGN0_ACCENB (*(volatile Ifx_LMU_RGN_ACCENB*)0xF870085Cu)




#define LMU_RGNACCENB0 (LMU_RGN0_ACCENB)


#define LMU_RGN0_LA (*(volatile Ifx_LMU_RGN_LA*)0xF8700850u)




#define LMU_RGNLA0 (LMU_RGN0_LA)


#define LMU_RGN0_UA (*(volatile Ifx_LMU_RGN_UA*)0xF8700854u)




#define LMU_RGNUA0 (LMU_RGN0_UA)


#define LMU_RGN1_ACCENA (*(volatile Ifx_LMU_RGN_ACCENA*)0xF8700868u)




#define LMU_RGNACCENA1 (LMU_RGN1_ACCENA)


#define LMU_RGN1_ACCENB (*(volatile Ifx_LMU_RGN_ACCENB*)0xF870086Cu)




#define LMU_RGNACCENB1 (LMU_RGN1_ACCENB)


#define LMU_RGN1_LA (*(volatile Ifx_LMU_RGN_LA*)0xF8700860u)




#define LMU_RGNLA1 (LMU_RGN1_LA)


#define LMU_RGN1_UA (*(volatile Ifx_LMU_RGN_UA*)0xF8700864u)




#define LMU_RGNUA1 (LMU_RGN1_UA)


#define LMU_RGN2_ACCENA (*(volatile Ifx_LMU_RGN_ACCENA*)0xF8700878u)




#define LMU_RGNACCENA2 (LMU_RGN2_ACCENA)


#define LMU_RGN2_ACCENB (*(volatile Ifx_LMU_RGN_ACCENB*)0xF870087Cu)




#define LMU_RGNACCENB2 (LMU_RGN2_ACCENB)


#define LMU_RGN2_LA (*(volatile Ifx_LMU_RGN_LA*)0xF8700870u)




#define LMU_RGNLA2 (LMU_RGN2_LA)


#define LMU_RGN2_UA (*(volatile Ifx_LMU_RGN_UA*)0xF8700874u)




#define LMU_RGNUA2 (LMU_RGN2_UA)


#define LMU_RGN3_ACCENA (*(volatile Ifx_LMU_RGN_ACCENA*)0xF8700888u)




#define LMU_RGNACCENA3 (LMU_RGN3_ACCENA)


#define LMU_RGN3_ACCENB (*(volatile Ifx_LMU_RGN_ACCENB*)0xF870088Cu)




#define LMU_RGNACCENB3 (LMU_RGN3_ACCENB)


#define LMU_RGN3_LA (*(volatile Ifx_LMU_RGN_LA*)0xF8700880u)




#define LMU_RGNLA3 (LMU_RGN3_LA)


#define LMU_RGN3_UA (*(volatile Ifx_LMU_RGN_UA*)0xF8700884u)




#define LMU_RGNUA3 (LMU_RGN3_UA)


#define LMU_RGN4_ACCENA (*(volatile Ifx_LMU_RGN_ACCENA*)0xF8700898u)




#define LMU_RGNACCENA4 (LMU_RGN4_ACCENA)


#define LMU_RGN4_ACCENB (*(volatile Ifx_LMU_RGN_ACCENB*)0xF870089Cu)




#define LMU_RGNACCENB4 (LMU_RGN4_ACCENB)


#define LMU_RGN4_LA (*(volatile Ifx_LMU_RGN_LA*)0xF8700890u)




#define LMU_RGNLA4 (LMU_RGN4_LA)


#define LMU_RGN4_UA (*(volatile Ifx_LMU_RGN_UA*)0xF8700894u)




#define LMU_RGNUA4 (LMU_RGN4_UA)


#define LMU_RGN5_ACCENA (*(volatile Ifx_LMU_RGN_ACCENA*)0xF87008A8u)




#define LMU_RGNACCENA5 (LMU_RGN5_ACCENA)


#define LMU_RGN5_ACCENB (*(volatile Ifx_LMU_RGN_ACCENB*)0xF87008ACu)




#define LMU_RGNACCENB5 (LMU_RGN5_ACCENB)


#define LMU_RGN5_LA (*(volatile Ifx_LMU_RGN_LA*)0xF87008A0u)




#define LMU_RGNLA5 (LMU_RGN5_LA)


#define LMU_RGN5_UA (*(volatile Ifx_LMU_RGN_UA*)0xF87008A4u)




#define LMU_RGNUA5 (LMU_RGN5_UA)


#define LMU_RGN6_ACCENA (*(volatile Ifx_LMU_RGN_ACCENA*)0xF87008B8u)




#define LMU_RGNACCENA6 (LMU_RGN6_ACCENA)


#define LMU_RGN6_ACCENB (*(volatile Ifx_LMU_RGN_ACCENB*)0xF87008BCu)




#define LMU_RGNACCENB6 (LMU_RGN6_ACCENB)


#define LMU_RGN6_LA (*(volatile Ifx_LMU_RGN_LA*)0xF87008B0u)




#define LMU_RGNLA6 (LMU_RGN6_LA)


#define LMU_RGN6_UA (*(volatile Ifx_LMU_RGN_UA*)0xF87008B4u)




#define LMU_RGNUA6 (LMU_RGN6_UA)


#define LMU_RGN7_ACCENA (*(volatile Ifx_LMU_RGN_ACCENA*)0xF87008C8u)




#define LMU_RGNACCENA7 (LMU_RGN7_ACCENA)


#define LMU_RGN7_ACCENB (*(volatile Ifx_LMU_RGN_ACCENB*)0xF87008CCu)




#define LMU_RGNACCENB7 (LMU_RGN7_ACCENB)


#define LMU_RGN7_LA (*(volatile Ifx_LMU_RGN_LA*)0xF87008C0u)




#define LMU_RGNLA7 (LMU_RGN7_LA)


#define LMU_RGN7_UA (*(volatile Ifx_LMU_RGN_UA*)0xF87008C4u)




#define LMU_RGNUA7 (LMU_RGN7_UA)
# 50 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_reg.h" 2 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxMc_reg.h" 1 3
# 295 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxMc_reg.h" 3
#define IFXMC_REG_H 1

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxMc_regdef.h" 1 3
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxMc_regdef.h" 3
#define IFXMC_REGDEF_H 1







typedef struct _Ifx_MC_CONFIG0_Bits
{
    volatile unsigned short ACCSTYPE:8;
    volatile unsigned short reserved_8:4;
    volatile unsigned short NUMACCS:4;
} Ifx_MC_CONFIG0_Bits;


typedef struct _Ifx_MC_CONFIG1_Bits
{
    volatile unsigned short ACCSPAT:8;
    volatile unsigned short SELFASTB:4;
    volatile unsigned short AG_MOD:4;
} Ifx_MC_CONFIG1_Bits;


typedef struct _Ifx_MC_ECCD_Bits
{
    volatile unsigned short SERR:1;
    volatile unsigned short CERR:1;
    volatile unsigned short UERR:1;
    volatile unsigned short AERR:1;
    volatile unsigned short TRC:1;
    volatile unsigned short VAL:5;
    volatile unsigned short reserved_10:1;
    volatile unsigned short CENE:1;
    volatile unsigned short UENE:1;
    volatile unsigned short AENE:1;
    volatile unsigned short ECE:1;
    volatile unsigned short EOV:1;
} Ifx_MC_ECCD_Bits;


typedef struct _Ifx_MC_ECCS_Bits
{
    volatile unsigned short CENE:1;
    volatile unsigned short UENE:1;
    volatile unsigned short AENE:1;
    volatile unsigned short ECE:1;
    volatile unsigned short TRE:1;
    volatile unsigned short BFLE:1;
    volatile unsigned short SFLE:2;
    volatile unsigned short ECCMAP:2;
    volatile unsigned short TC_WAY_SEL:2;
    volatile unsigned short reserved_12:4;
} Ifx_MC_ECCS_Bits;


typedef struct _Ifx_MC_ETRR_Bits
{
    volatile unsigned short ADDR:13;
    volatile unsigned short MBI:3;
} Ifx_MC_ETRR_Bits;


typedef struct _Ifx_MC_MCONTROL_Bits
{
    volatile unsigned short START:1;
    volatile unsigned short RESUME:1;
    volatile unsigned short ESTF:1;
    volatile unsigned short DIR:1;
    volatile unsigned short DINIT:1;
    volatile unsigned short RCADR:1;
    volatile unsigned short ROWTOG:1;
    volatile unsigned short BITTOG:1;
    volatile unsigned short GP_BASE:1;
    volatile unsigned short FAILDMP:1;
    volatile unsigned short Res4:5;
    volatile unsigned short reserved_15:1;
} Ifx_MC_MCONTROL_Bits;


typedef struct _Ifx_MC_MSTATUS_Bits
{
    volatile unsigned short DONE:1;
    volatile unsigned short FAIL:1;
    volatile unsigned short FDA:1;
    volatile unsigned short SFAIL:1;
    volatile unsigned short reserved_4:12;
} Ifx_MC_MSTATUS_Bits;


typedef struct _Ifx_MC_RANGE_Bits
{
    volatile unsigned short ADDR:15;
    volatile unsigned short RAEN:1;
} Ifx_MC_RANGE_Bits;


typedef struct _Ifx_MC_RDBFL_Bits
{
    volatile unsigned short WDATA:16;
} Ifx_MC_RDBFL_Bits;


typedef struct _Ifx_MC_REVID_Bits
{
    volatile unsigned short REV_ID:16;
} Ifx_MC_REVID_Bits;







typedef union
{
    unsigned short U;
    signed short I;
    Ifx_MC_CONFIG0_Bits B;
} Ifx_MC_CONFIG0;


typedef union
{
    unsigned short U;
    signed short I;
    Ifx_MC_CONFIG1_Bits B;
} Ifx_MC_CONFIG1;


typedef union
{
    unsigned short U;
    signed short I;
    Ifx_MC_ECCD_Bits B;
} Ifx_MC_ECCD;


typedef union
{
    unsigned short U;
    signed short I;
    Ifx_MC_ECCS_Bits B;
} Ifx_MC_ECCS;


typedef union
{
    unsigned short U;
    signed short I;
    Ifx_MC_ETRR_Bits B;
} Ifx_MC_ETRR;


typedef union
{
    unsigned short U;
    signed short I;
    Ifx_MC_MCONTROL_Bits B;
} Ifx_MC_MCONTROL;


typedef union
{
    unsigned short U;
    signed short I;
    Ifx_MC_MSTATUS_Bits B;
} Ifx_MC_MSTATUS;


typedef union
{
    unsigned short U;
    signed short I;
    Ifx_MC_RANGE_Bits B;
} Ifx_MC_RANGE;


typedef union
{
    unsigned short U;
    signed short I;
    Ifx_MC_RDBFL_Bits B;
} Ifx_MC_RDBFL;


typedef union
{
    unsigned short U;
    signed short I;
    Ifx_MC_REVID_Bits B;
} Ifx_MC_REVID;
# 239 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxMc_regdef.h" 3
typedef volatile struct _Ifx_MC
{
    Ifx_MC_CONFIG0 CONFIG0;
    Ifx_MC_CONFIG1 CONFIG1;
    Ifx_MC_MCONTROL MCONTROL;
    Ifx_MC_MSTATUS MSTATUS;
    Ifx_MC_RANGE RANGE;
    unsigned char reserved_A[2];
    Ifx_MC_REVID REVID;
    Ifx_MC_ECCS ECCS;
    Ifx_MC_ECCD ECCD;
    Ifx_MC_ETRR ETRR[5];
    unsigned char reserved_1C[132];
    Ifx_MC_RDBFL RDBFL[40];
    unsigned char reserved_F0[16];
} Ifx_MC;
# 298 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxMc_reg.h" 2 3





#define MODULE_MC0 (*(Ifx_MC*)0xF0061000u)


#define MODULE_MC1 (*(Ifx_MC*)0xF0061100u)


#define MODULE_MC10 (*(Ifx_MC*)0xF0061A00u)


#define MODULE_MC11 (*(Ifx_MC*)0xF0061B00u)


#define MODULE_MC12 (*(Ifx_MC*)0xF0061C00u)


#define MODULE_MC13 (*(Ifx_MC*)0xF0061D00u)


#define MODULE_MC14 (*(Ifx_MC*)0xF0061E00u)


#define MODULE_MC15 (*(Ifx_MC*)0xF0061F00u)


#define MODULE_MC16 (*(Ifx_MC*)0xF0062000u)


#define MODULE_MC17 (*(Ifx_MC*)0xF0062100u)


#define MODULE_MC18 (*(Ifx_MC*)0xF0062200u)


#define MODULE_MC19 (*(Ifx_MC*)0xF0062300u)


#define MODULE_MC2 (*(Ifx_MC*)0xF0061200u)


#define MODULE_MC20 (*(Ifx_MC*)0xF0062400u)


#define MODULE_MC21 (*(Ifx_MC*)0xF0062500u)


#define MODULE_MC22 (*(Ifx_MC*)0xF0062600u)


#define MODULE_MC23 (*(Ifx_MC*)0xF0062700u)


#define MODULE_MC24 (*(Ifx_MC*)0xF0062800u)


#define MODULE_MC25 (*(Ifx_MC*)0xF0062900u)


#define MODULE_MC26 (*(Ifx_MC*)0xF0062A00u)


#define MODULE_MC27 (*(Ifx_MC*)0xF0062B00u)


#define MODULE_MC28 (*(Ifx_MC*)0xF0062C00u)


#define MODULE_MC29 (*(Ifx_MC*)0xF0062D00u)


#define MODULE_MC3 (*(Ifx_MC*)0xF0061300u)


#define MODULE_MC30 (*(Ifx_MC*)0xF0062E00u)


#define MODULE_MC31 (*(Ifx_MC*)0xF0062F00u)


#define MODULE_MC32 (*(Ifx_MC*)0xF0063000u)


#define MODULE_MC33 (*(Ifx_MC*)0xF0063100u)


#define MODULE_MC34 (*(Ifx_MC*)0xF0063200u)


#define MODULE_MC35 (*(Ifx_MC*)0xF0063300u)


#define MODULE_MC36 (*(Ifx_MC*)0xF0063400u)


#define MODULE_MC37 (*(Ifx_MC*)0xF0063500u)


#define MODULE_MC38 (*(Ifx_MC*)0xF0063600u)


#define MODULE_MC39 (*(Ifx_MC*)0xF0063700u)


#define MODULE_MC4 (*(Ifx_MC*)0xF0061400u)


#define MODULE_MC40 (*(Ifx_MC*)0xF0063800u)


#define MODULE_MC41 (*(Ifx_MC*)0xF0063900u)


#define MODULE_MC42 (*(Ifx_MC*)0xF0063A00u)


#define MODULE_MC43 (*(Ifx_MC*)0xF0063B00u)


#define MODULE_MC44 (*(Ifx_MC*)0xF0063C00u)


#define MODULE_MC45 (*(Ifx_MC*)0xF0063D00u)


#define MODULE_MC46 (*(Ifx_MC*)0xF0063E00u)


#define MODULE_MC47 (*(Ifx_MC*)0xF0063F00u)


#define MODULE_MC48 (*(Ifx_MC*)0xF0064000u)


#define MODULE_MC49 (*(Ifx_MC*)0xF0064100u)


#define MODULE_MC5 (*(Ifx_MC*)0xF0061500u)


#define MODULE_MC50 (*(Ifx_MC*)0xF0064200u)


#define MODULE_MC51 (*(Ifx_MC*)0xF0064300u)


#define MODULE_MC52 (*(Ifx_MC*)0xF0064400u)


#define MODULE_MC53 (*(Ifx_MC*)0xF0064500u)


#define MODULE_MC54 (*(Ifx_MC*)0xF0064600u)


#define MODULE_MC55 (*(Ifx_MC*)0xF0064700u)


#define MODULE_MC56 (*(Ifx_MC*)0xF0064800u)


#define MODULE_MC57 (*(Ifx_MC*)0xF0064900u)


#define MODULE_MC58 (*(Ifx_MC*)0xF0064A00u)


#define MODULE_MC59 (*(Ifx_MC*)0xF0064B00u)


#define MODULE_MC6 (*(Ifx_MC*)0xF0061600u)


#define MODULE_MC60 (*(Ifx_MC*)0xF0064C00u)


#define MODULE_MC61 (*(Ifx_MC*)0xF0064D00u)


#define MODULE_MC62 (*(Ifx_MC*)0xF0064E00u)


#define MODULE_MC63 (*(Ifx_MC*)0xF0064F00u)


#define MODULE_MC64 (*(Ifx_MC*)0xF0065000u)


#define MODULE_MC65 (*(Ifx_MC*)0xF0065100u)


#define MODULE_MC66 (*(Ifx_MC*)0xF0065200u)


#define MODULE_MC67 (*(Ifx_MC*)0xF0065300u)


#define MODULE_MC68 (*(Ifx_MC*)0xF0065400u)


#define MODULE_MC69 (*(Ifx_MC*)0xF0065500u)


#define MODULE_MC7 (*(Ifx_MC*)0xF0061700u)


#define MODULE_MC70 (*(Ifx_MC*)0xF0065600u)


#define MODULE_MC71 (*(Ifx_MC*)0xF0065700u)


#define MODULE_MC72 (*(Ifx_MC*)0xF0065800u)


#define MODULE_MC73 (*(Ifx_MC*)0xF0065900u)


#define MODULE_MC74 (*(Ifx_MC*)0xF0065A00u)


#define MODULE_MC75 (*(Ifx_MC*)0xF0065B00u)


#define MODULE_MC76 (*(Ifx_MC*)0xF0065C00u)


#define MODULE_MC77 (*(Ifx_MC*)0xF0065D00u)


#define MODULE_MC78 (*(Ifx_MC*)0xF0065E00u)


#define MODULE_MC79 (*(Ifx_MC*)0xF0065F00u)


#define MODULE_MC8 (*(Ifx_MC*)0xF0061800u)


#define MODULE_MC80 (*(Ifx_MC*)0xF0066000u)


#define MODULE_MC81 (*(Ifx_MC*)0xF0066100u)


#define MODULE_MC82 (*(Ifx_MC*)0xF0066200u)


#define MODULE_MC83 (*(Ifx_MC*)0xF0066300u)


#define MODULE_MC84 (*(Ifx_MC*)0xF0066400u)


#define MODULE_MC85 (*(Ifx_MC*)0xF0066500u)


#define MODULE_MC86 (*(Ifx_MC*)0xF0066600u)


#define MODULE_MC87 (*(Ifx_MC*)0xF0066700u)


#define MODULE_MC9 (*(Ifx_MC*)0xF0061900u)







#define MC0_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0061000u)


#define MC0_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0061002u)


#define MC0_ECCD (*(volatile Ifx_MC_ECCD*)0xF0061010u)


#define MC0_ECCS (*(volatile Ifx_MC_ECCS*)0xF006100Eu)


#define MC0_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0061012u)


#define MC0_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0061014u)


#define MC0_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0061016u)


#define MC0_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0061018u)


#define MC0_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF006101Au)


#define MC0_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0061004u)


#define MC0_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0061006u)


#define MC0_RANGE (*(volatile Ifx_MC_RANGE*)0xF0061008u)


#define MC0_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF00610A0u)


#define MC0_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF00610A2u)


#define MC0_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF00610B4u)


#define MC0_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF00610B6u)


#define MC0_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF00610B8u)


#define MC0_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF00610BAu)


#define MC0_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF00610BCu)


#define MC0_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF00610BEu)


#define MC0_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF00610C0u)


#define MC0_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF00610C2u)


#define MC0_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF00610C4u)


#define MC0_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF00610C6u)


#define MC0_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF00610A4u)


#define MC0_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF00610C8u)


#define MC0_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF00610CAu)


#define MC0_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF00610CCu)


#define MC0_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF00610CEu)


#define MC0_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF00610D0u)


#define MC0_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF00610D2u)


#define MC0_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF00610D4u)


#define MC0_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF00610D6u)


#define MC0_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF00610D8u)


#define MC0_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF00610DAu)


#define MC0_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF00610A6u)


#define MC0_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF00610DCu)


#define MC0_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF00610DEu)


#define MC0_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF00610E0u)


#define MC0_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF00610E2u)


#define MC0_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF00610E4u)


#define MC0_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF00610E6u)


#define MC0_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF00610E8u)


#define MC0_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF00610EAu)


#define MC0_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF00610ECu)


#define MC0_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF00610EEu)


#define MC0_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF00610A8u)


#define MC0_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF00610AAu)


#define MC0_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF00610ACu)


#define MC0_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF00610AEu)


#define MC0_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF00610B0u)


#define MC0_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF00610B2u)


#define MC0_REVID (*(volatile Ifx_MC_REVID*)0xF006100Cu)







#define MC1_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0061100u)


#define MC1_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0061102u)


#define MC1_ECCD (*(volatile Ifx_MC_ECCD*)0xF0061110u)


#define MC1_ECCS (*(volatile Ifx_MC_ECCS*)0xF006110Eu)


#define MC1_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0061112u)


#define MC1_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0061114u)


#define MC1_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0061116u)


#define MC1_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0061118u)


#define MC1_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF006111Au)


#define MC1_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0061104u)


#define MC1_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0061106u)


#define MC1_RANGE (*(volatile Ifx_MC_RANGE*)0xF0061108u)


#define MC1_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF00611A0u)


#define MC1_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF00611A2u)


#define MC1_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF00611B4u)


#define MC1_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF00611B6u)


#define MC1_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF00611B8u)


#define MC1_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF00611BAu)


#define MC1_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF00611BCu)


#define MC1_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF00611BEu)


#define MC1_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF00611C0u)


#define MC1_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF00611C2u)


#define MC1_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF00611C4u)


#define MC1_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF00611C6u)


#define MC1_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF00611A4u)


#define MC1_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF00611C8u)


#define MC1_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF00611CAu)


#define MC1_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF00611CCu)


#define MC1_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF00611CEu)


#define MC1_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF00611D0u)


#define MC1_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF00611D2u)


#define MC1_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF00611D4u)


#define MC1_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF00611D6u)


#define MC1_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF00611D8u)


#define MC1_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF00611DAu)


#define MC1_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF00611A6u)


#define MC1_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF00611DCu)


#define MC1_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF00611DEu)


#define MC1_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF00611E0u)


#define MC1_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF00611E2u)


#define MC1_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF00611E4u)


#define MC1_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF00611E6u)


#define MC1_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF00611E8u)


#define MC1_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF00611EAu)


#define MC1_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF00611ECu)


#define MC1_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF00611EEu)


#define MC1_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF00611A8u)


#define MC1_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF00611AAu)


#define MC1_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF00611ACu)


#define MC1_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF00611AEu)


#define MC1_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF00611B0u)


#define MC1_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF00611B2u)


#define MC1_REVID (*(volatile Ifx_MC_REVID*)0xF006110Cu)







#define MC2_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0061200u)


#define MC2_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0061202u)


#define MC2_ECCD (*(volatile Ifx_MC_ECCD*)0xF0061210u)


#define MC2_ECCS (*(volatile Ifx_MC_ECCS*)0xF006120Eu)


#define MC2_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0061212u)


#define MC2_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0061214u)


#define MC2_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0061216u)


#define MC2_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0061218u)


#define MC2_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF006121Au)


#define MC2_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0061204u)


#define MC2_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0061206u)


#define MC2_RANGE (*(volatile Ifx_MC_RANGE*)0xF0061208u)


#define MC2_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF00612A0u)


#define MC2_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF00612A2u)


#define MC2_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF00612B4u)


#define MC2_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF00612B6u)


#define MC2_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF00612B8u)


#define MC2_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF00612BAu)


#define MC2_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF00612BCu)


#define MC2_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF00612BEu)


#define MC2_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF00612C0u)


#define MC2_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF00612C2u)


#define MC2_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF00612C4u)


#define MC2_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF00612C6u)


#define MC2_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF00612A4u)


#define MC2_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF00612C8u)


#define MC2_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF00612CAu)


#define MC2_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF00612CCu)


#define MC2_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF00612CEu)


#define MC2_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF00612D0u)


#define MC2_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF00612D2u)


#define MC2_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF00612D4u)


#define MC2_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF00612D6u)


#define MC2_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF00612D8u)


#define MC2_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF00612DAu)


#define MC2_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF00612A6u)


#define MC2_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF00612DCu)


#define MC2_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF00612DEu)


#define MC2_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF00612E0u)


#define MC2_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF00612E2u)


#define MC2_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF00612E4u)


#define MC2_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF00612E6u)


#define MC2_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF00612E8u)


#define MC2_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF00612EAu)


#define MC2_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF00612ECu)


#define MC2_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF00612EEu)


#define MC2_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF00612A8u)


#define MC2_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF00612AAu)


#define MC2_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF00612ACu)


#define MC2_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF00612AEu)


#define MC2_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF00612B0u)


#define MC2_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF00612B2u)


#define MC2_REVID (*(volatile Ifx_MC_REVID*)0xF006120Cu)







#define MC3_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0061300u)


#define MC3_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0061302u)


#define MC3_ECCD (*(volatile Ifx_MC_ECCD*)0xF0061310u)


#define MC3_ECCS (*(volatile Ifx_MC_ECCS*)0xF006130Eu)


#define MC3_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0061312u)


#define MC3_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0061314u)


#define MC3_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0061316u)


#define MC3_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0061318u)


#define MC3_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF006131Au)


#define MC3_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0061304u)


#define MC3_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0061306u)


#define MC3_RANGE (*(volatile Ifx_MC_RANGE*)0xF0061308u)


#define MC3_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF00613A0u)


#define MC3_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF00613A2u)


#define MC3_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF00613B4u)


#define MC3_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF00613B6u)


#define MC3_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF00613B8u)


#define MC3_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF00613BAu)


#define MC3_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF00613BCu)


#define MC3_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF00613BEu)


#define MC3_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF00613C0u)


#define MC3_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF00613C2u)


#define MC3_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF00613C4u)


#define MC3_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF00613C6u)


#define MC3_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF00613A4u)


#define MC3_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF00613C8u)


#define MC3_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF00613CAu)


#define MC3_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF00613CCu)


#define MC3_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF00613CEu)


#define MC3_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF00613D0u)


#define MC3_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF00613D2u)


#define MC3_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF00613D4u)


#define MC3_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF00613D6u)


#define MC3_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF00613D8u)


#define MC3_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF00613DAu)


#define MC3_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF00613A6u)


#define MC3_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF00613DCu)


#define MC3_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF00613DEu)


#define MC3_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF00613E0u)


#define MC3_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF00613E2u)


#define MC3_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF00613E4u)


#define MC3_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF00613E6u)


#define MC3_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF00613E8u)


#define MC3_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF00613EAu)


#define MC3_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF00613ECu)


#define MC3_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF00613EEu)


#define MC3_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF00613A8u)


#define MC3_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF00613AAu)


#define MC3_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF00613ACu)


#define MC3_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF00613AEu)


#define MC3_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF00613B0u)


#define MC3_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF00613B2u)


#define MC3_REVID (*(volatile Ifx_MC_REVID*)0xF006130Cu)







#define MC4_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0061400u)


#define MC4_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0061402u)


#define MC4_ECCD (*(volatile Ifx_MC_ECCD*)0xF0061410u)


#define MC4_ECCS (*(volatile Ifx_MC_ECCS*)0xF006140Eu)


#define MC4_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0061412u)


#define MC4_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0061414u)


#define MC4_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0061416u)


#define MC4_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0061418u)


#define MC4_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF006141Au)


#define MC4_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0061404u)


#define MC4_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0061406u)


#define MC4_RANGE (*(volatile Ifx_MC_RANGE*)0xF0061408u)


#define MC4_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF00614A0u)


#define MC4_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF00614A2u)


#define MC4_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF00614B4u)


#define MC4_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF00614B6u)


#define MC4_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF00614B8u)


#define MC4_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF00614BAu)


#define MC4_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF00614BCu)


#define MC4_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF00614BEu)


#define MC4_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF00614C0u)


#define MC4_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF00614C2u)


#define MC4_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF00614C4u)


#define MC4_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF00614C6u)


#define MC4_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF00614A4u)


#define MC4_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF00614C8u)


#define MC4_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF00614CAu)


#define MC4_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF00614CCu)


#define MC4_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF00614CEu)


#define MC4_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF00614D0u)


#define MC4_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF00614D2u)


#define MC4_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF00614D4u)


#define MC4_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF00614D6u)


#define MC4_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF00614D8u)


#define MC4_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF00614DAu)


#define MC4_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF00614A6u)


#define MC4_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF00614DCu)


#define MC4_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF00614DEu)


#define MC4_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF00614E0u)


#define MC4_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF00614E2u)


#define MC4_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF00614E4u)


#define MC4_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF00614E6u)


#define MC4_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF00614E8u)


#define MC4_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF00614EAu)


#define MC4_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF00614ECu)


#define MC4_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF00614EEu)


#define MC4_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF00614A8u)


#define MC4_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF00614AAu)


#define MC4_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF00614ACu)


#define MC4_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF00614AEu)


#define MC4_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF00614B0u)


#define MC4_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF00614B2u)


#define MC4_REVID (*(volatile Ifx_MC_REVID*)0xF006140Cu)







#define MC5_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0061500u)


#define MC5_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0061502u)


#define MC5_ECCD (*(volatile Ifx_MC_ECCD*)0xF0061510u)


#define MC5_ECCS (*(volatile Ifx_MC_ECCS*)0xF006150Eu)


#define MC5_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0061512u)


#define MC5_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0061514u)


#define MC5_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0061516u)


#define MC5_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0061518u)


#define MC5_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF006151Au)


#define MC5_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0061504u)


#define MC5_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0061506u)


#define MC5_RANGE (*(volatile Ifx_MC_RANGE*)0xF0061508u)


#define MC5_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF00615A0u)


#define MC5_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF00615A2u)


#define MC5_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF00615B4u)


#define MC5_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF00615B6u)


#define MC5_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF00615B8u)


#define MC5_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF00615BAu)


#define MC5_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF00615BCu)


#define MC5_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF00615BEu)


#define MC5_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF00615C0u)


#define MC5_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF00615C2u)


#define MC5_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF00615C4u)


#define MC5_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF00615C6u)


#define MC5_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF00615A4u)


#define MC5_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF00615C8u)


#define MC5_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF00615CAu)


#define MC5_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF00615CCu)


#define MC5_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF00615CEu)


#define MC5_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF00615D0u)


#define MC5_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF00615D2u)


#define MC5_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF00615D4u)


#define MC5_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF00615D6u)


#define MC5_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF00615D8u)


#define MC5_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF00615DAu)


#define MC5_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF00615A6u)


#define MC5_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF00615DCu)


#define MC5_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF00615DEu)


#define MC5_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF00615E0u)


#define MC5_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF00615E2u)


#define MC5_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF00615E4u)


#define MC5_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF00615E6u)


#define MC5_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF00615E8u)


#define MC5_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF00615EAu)


#define MC5_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF00615ECu)


#define MC5_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF00615EEu)


#define MC5_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF00615A8u)


#define MC5_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF00615AAu)


#define MC5_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF00615ACu)


#define MC5_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF00615AEu)


#define MC5_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF00615B0u)


#define MC5_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF00615B2u)


#define MC5_REVID (*(volatile Ifx_MC_REVID*)0xF006150Cu)







#define MC6_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0061600u)


#define MC6_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0061602u)


#define MC6_ECCD (*(volatile Ifx_MC_ECCD*)0xF0061610u)


#define MC6_ECCS (*(volatile Ifx_MC_ECCS*)0xF006160Eu)


#define MC6_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0061612u)


#define MC6_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0061614u)


#define MC6_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0061616u)


#define MC6_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0061618u)


#define MC6_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF006161Au)


#define MC6_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0061604u)


#define MC6_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0061606u)


#define MC6_RANGE (*(volatile Ifx_MC_RANGE*)0xF0061608u)


#define MC6_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF00616A0u)


#define MC6_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF00616A2u)


#define MC6_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF00616B4u)


#define MC6_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF00616B6u)


#define MC6_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF00616B8u)


#define MC6_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF00616BAu)


#define MC6_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF00616BCu)


#define MC6_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF00616BEu)


#define MC6_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF00616C0u)


#define MC6_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF00616C2u)


#define MC6_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF00616C4u)


#define MC6_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF00616C6u)


#define MC6_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF00616A4u)


#define MC6_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF00616C8u)


#define MC6_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF00616CAu)


#define MC6_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF00616CCu)


#define MC6_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF00616CEu)


#define MC6_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF00616D0u)


#define MC6_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF00616D2u)


#define MC6_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF00616D4u)


#define MC6_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF00616D6u)


#define MC6_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF00616D8u)


#define MC6_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF00616DAu)


#define MC6_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF00616A6u)


#define MC6_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF00616DCu)


#define MC6_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF00616DEu)


#define MC6_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF00616E0u)


#define MC6_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF00616E2u)


#define MC6_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF00616E4u)


#define MC6_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF00616E6u)


#define MC6_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF00616E8u)


#define MC6_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF00616EAu)


#define MC6_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF00616ECu)


#define MC6_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF00616EEu)


#define MC6_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF00616A8u)


#define MC6_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF00616AAu)


#define MC6_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF00616ACu)


#define MC6_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF00616AEu)


#define MC6_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF00616B0u)


#define MC6_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF00616B2u)


#define MC6_REVID (*(volatile Ifx_MC_REVID*)0xF006160Cu)







#define MC7_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0061700u)


#define MC7_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0061702u)


#define MC7_ECCD (*(volatile Ifx_MC_ECCD*)0xF0061710u)


#define MC7_ECCS (*(volatile Ifx_MC_ECCS*)0xF006170Eu)


#define MC7_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0061712u)


#define MC7_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0061714u)


#define MC7_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0061716u)


#define MC7_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0061718u)


#define MC7_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF006171Au)


#define MC7_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0061704u)


#define MC7_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0061706u)


#define MC7_RANGE (*(volatile Ifx_MC_RANGE*)0xF0061708u)


#define MC7_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF00617A0u)


#define MC7_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF00617A2u)


#define MC7_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF00617B4u)


#define MC7_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF00617B6u)


#define MC7_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF00617B8u)


#define MC7_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF00617BAu)


#define MC7_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF00617BCu)


#define MC7_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF00617BEu)


#define MC7_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF00617C0u)


#define MC7_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF00617C2u)


#define MC7_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF00617C4u)


#define MC7_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF00617C6u)


#define MC7_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF00617A4u)


#define MC7_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF00617C8u)


#define MC7_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF00617CAu)


#define MC7_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF00617CCu)


#define MC7_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF00617CEu)


#define MC7_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF00617D0u)


#define MC7_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF00617D2u)


#define MC7_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF00617D4u)


#define MC7_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF00617D6u)


#define MC7_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF00617D8u)


#define MC7_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF00617DAu)


#define MC7_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF00617A6u)


#define MC7_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF00617DCu)


#define MC7_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF00617DEu)


#define MC7_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF00617E0u)


#define MC7_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF00617E2u)


#define MC7_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF00617E4u)


#define MC7_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF00617E6u)


#define MC7_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF00617E8u)


#define MC7_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF00617EAu)


#define MC7_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF00617ECu)


#define MC7_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF00617EEu)


#define MC7_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF00617A8u)


#define MC7_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF00617AAu)


#define MC7_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF00617ACu)


#define MC7_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF00617AEu)


#define MC7_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF00617B0u)


#define MC7_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF00617B2u)


#define MC7_REVID (*(volatile Ifx_MC_REVID*)0xF006170Cu)







#define MC8_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0061800u)


#define MC8_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0061802u)


#define MC8_ECCD (*(volatile Ifx_MC_ECCD*)0xF0061810u)


#define MC8_ECCS (*(volatile Ifx_MC_ECCS*)0xF006180Eu)


#define MC8_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0061812u)


#define MC8_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0061814u)


#define MC8_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0061816u)


#define MC8_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0061818u)


#define MC8_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF006181Au)


#define MC8_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0061804u)


#define MC8_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0061806u)


#define MC8_RANGE (*(volatile Ifx_MC_RANGE*)0xF0061808u)


#define MC8_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF00618A0u)


#define MC8_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF00618A2u)


#define MC8_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF00618B4u)


#define MC8_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF00618B6u)


#define MC8_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF00618B8u)


#define MC8_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF00618BAu)


#define MC8_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF00618BCu)


#define MC8_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF00618BEu)


#define MC8_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF00618C0u)


#define MC8_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF00618C2u)


#define MC8_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF00618C4u)


#define MC8_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF00618C6u)


#define MC8_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF00618A4u)


#define MC8_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF00618C8u)


#define MC8_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF00618CAu)


#define MC8_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF00618CCu)


#define MC8_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF00618CEu)


#define MC8_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF00618D0u)


#define MC8_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF00618D2u)


#define MC8_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF00618D4u)


#define MC8_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF00618D6u)


#define MC8_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF00618D8u)


#define MC8_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF00618DAu)


#define MC8_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF00618A6u)


#define MC8_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF00618DCu)


#define MC8_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF00618DEu)


#define MC8_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF00618E0u)


#define MC8_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF00618E2u)


#define MC8_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF00618E4u)


#define MC8_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF00618E6u)


#define MC8_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF00618E8u)


#define MC8_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF00618EAu)


#define MC8_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF00618ECu)


#define MC8_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF00618EEu)


#define MC8_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF00618A8u)


#define MC8_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF00618AAu)


#define MC8_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF00618ACu)


#define MC8_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF00618AEu)


#define MC8_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF00618B0u)


#define MC8_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF00618B2u)


#define MC8_REVID (*(volatile Ifx_MC_REVID*)0xF006180Cu)







#define MC9_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0061900u)


#define MC9_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0061902u)


#define MC9_ECCD (*(volatile Ifx_MC_ECCD*)0xF0061910u)


#define MC9_ECCS (*(volatile Ifx_MC_ECCS*)0xF006190Eu)


#define MC9_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0061912u)


#define MC9_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0061914u)


#define MC9_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0061916u)


#define MC9_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0061918u)


#define MC9_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF006191Au)


#define MC9_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0061904u)


#define MC9_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0061906u)


#define MC9_RANGE (*(volatile Ifx_MC_RANGE*)0xF0061908u)


#define MC9_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF00619A0u)


#define MC9_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF00619A2u)


#define MC9_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF00619B4u)


#define MC9_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF00619B6u)


#define MC9_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF00619B8u)


#define MC9_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF00619BAu)


#define MC9_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF00619BCu)


#define MC9_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF00619BEu)


#define MC9_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF00619C0u)


#define MC9_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF00619C2u)


#define MC9_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF00619C4u)


#define MC9_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF00619C6u)


#define MC9_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF00619A4u)


#define MC9_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF00619C8u)


#define MC9_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF00619CAu)


#define MC9_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF00619CCu)


#define MC9_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF00619CEu)


#define MC9_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF00619D0u)


#define MC9_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF00619D2u)


#define MC9_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF00619D4u)


#define MC9_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF00619D6u)


#define MC9_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF00619D8u)


#define MC9_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF00619DAu)


#define MC9_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF00619A6u)


#define MC9_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF00619DCu)


#define MC9_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF00619DEu)


#define MC9_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF00619E0u)


#define MC9_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF00619E2u)


#define MC9_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF00619E4u)


#define MC9_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF00619E6u)


#define MC9_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF00619E8u)


#define MC9_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF00619EAu)


#define MC9_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF00619ECu)


#define MC9_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF00619EEu)


#define MC9_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF00619A8u)


#define MC9_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF00619AAu)


#define MC9_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF00619ACu)


#define MC9_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF00619AEu)


#define MC9_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF00619B0u)


#define MC9_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF00619B2u)


#define MC9_REVID (*(volatile Ifx_MC_REVID*)0xF006190Cu)







#define MC10_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0061A00u)


#define MC10_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0061A02u)


#define MC10_ECCD (*(volatile Ifx_MC_ECCD*)0xF0061A10u)


#define MC10_ECCS (*(volatile Ifx_MC_ECCS*)0xF0061A0Eu)


#define MC10_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0061A12u)


#define MC10_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0061A14u)


#define MC10_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0061A16u)


#define MC10_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0061A18u)


#define MC10_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF0061A1Au)


#define MC10_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0061A04u)


#define MC10_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0061A06u)


#define MC10_RANGE (*(volatile Ifx_MC_RANGE*)0xF0061A08u)


#define MC10_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF0061AA0u)


#define MC10_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF0061AA2u)


#define MC10_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF0061AB4u)


#define MC10_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF0061AB6u)


#define MC10_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF0061AB8u)


#define MC10_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF0061ABAu)


#define MC10_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF0061ABCu)


#define MC10_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF0061ABEu)


#define MC10_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF0061AC0u)


#define MC10_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF0061AC2u)


#define MC10_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF0061AC4u)


#define MC10_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF0061AC6u)


#define MC10_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF0061AA4u)


#define MC10_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF0061AC8u)


#define MC10_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF0061ACAu)


#define MC10_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF0061ACCu)


#define MC10_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF0061ACEu)


#define MC10_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF0061AD0u)


#define MC10_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF0061AD2u)


#define MC10_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF0061AD4u)


#define MC10_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF0061AD6u)


#define MC10_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF0061AD8u)


#define MC10_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF0061ADAu)


#define MC10_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF0061AA6u)


#define MC10_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF0061ADCu)


#define MC10_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF0061ADEu)


#define MC10_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF0061AE0u)


#define MC10_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF0061AE2u)


#define MC10_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF0061AE4u)


#define MC10_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF0061AE6u)


#define MC10_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF0061AE8u)


#define MC10_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF0061AEAu)


#define MC10_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF0061AECu)


#define MC10_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF0061AEEu)


#define MC10_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF0061AA8u)


#define MC10_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF0061AAAu)


#define MC10_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF0061AACu)


#define MC10_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF0061AAEu)


#define MC10_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF0061AB0u)


#define MC10_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF0061AB2u)


#define MC10_REVID (*(volatile Ifx_MC_REVID*)0xF0061A0Cu)







#define MC11_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0061B00u)


#define MC11_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0061B02u)


#define MC11_ECCD (*(volatile Ifx_MC_ECCD*)0xF0061B10u)


#define MC11_ECCS (*(volatile Ifx_MC_ECCS*)0xF0061B0Eu)


#define MC11_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0061B12u)


#define MC11_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0061B14u)


#define MC11_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0061B16u)


#define MC11_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0061B18u)


#define MC11_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF0061B1Au)


#define MC11_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0061B04u)


#define MC11_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0061B06u)


#define MC11_RANGE (*(volatile Ifx_MC_RANGE*)0xF0061B08u)


#define MC11_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF0061BA0u)


#define MC11_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF0061BA2u)


#define MC11_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF0061BB4u)


#define MC11_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF0061BB6u)


#define MC11_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF0061BB8u)


#define MC11_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF0061BBAu)


#define MC11_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF0061BBCu)


#define MC11_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF0061BBEu)


#define MC11_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF0061BC0u)


#define MC11_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF0061BC2u)


#define MC11_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF0061BC4u)


#define MC11_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF0061BC6u)


#define MC11_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF0061BA4u)


#define MC11_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF0061BC8u)


#define MC11_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF0061BCAu)


#define MC11_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF0061BCCu)


#define MC11_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF0061BCEu)


#define MC11_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF0061BD0u)


#define MC11_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF0061BD2u)


#define MC11_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF0061BD4u)


#define MC11_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF0061BD6u)


#define MC11_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF0061BD8u)


#define MC11_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF0061BDAu)


#define MC11_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF0061BA6u)


#define MC11_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF0061BDCu)


#define MC11_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF0061BDEu)


#define MC11_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF0061BE0u)


#define MC11_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF0061BE2u)


#define MC11_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF0061BE4u)


#define MC11_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF0061BE6u)


#define MC11_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF0061BE8u)


#define MC11_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF0061BEAu)


#define MC11_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF0061BECu)


#define MC11_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF0061BEEu)


#define MC11_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF0061BA8u)


#define MC11_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF0061BAAu)


#define MC11_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF0061BACu)


#define MC11_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF0061BAEu)


#define MC11_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF0061BB0u)


#define MC11_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF0061BB2u)


#define MC11_REVID (*(volatile Ifx_MC_REVID*)0xF0061B0Cu)







#define MC12_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0061C00u)


#define MC12_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0061C02u)


#define MC12_ECCD (*(volatile Ifx_MC_ECCD*)0xF0061C10u)


#define MC12_ECCS (*(volatile Ifx_MC_ECCS*)0xF0061C0Eu)


#define MC12_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0061C12u)


#define MC12_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0061C14u)


#define MC12_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0061C16u)


#define MC12_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0061C18u)


#define MC12_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF0061C1Au)


#define MC12_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0061C04u)


#define MC12_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0061C06u)


#define MC12_RANGE (*(volatile Ifx_MC_RANGE*)0xF0061C08u)


#define MC12_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF0061CA0u)


#define MC12_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF0061CA2u)


#define MC12_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF0061CB4u)


#define MC12_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF0061CB6u)


#define MC12_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF0061CB8u)


#define MC12_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF0061CBAu)


#define MC12_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF0061CBCu)


#define MC12_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF0061CBEu)


#define MC12_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF0061CC0u)


#define MC12_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF0061CC2u)


#define MC12_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF0061CC4u)


#define MC12_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF0061CC6u)


#define MC12_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF0061CA4u)


#define MC12_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF0061CC8u)


#define MC12_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF0061CCAu)


#define MC12_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF0061CCCu)


#define MC12_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF0061CCEu)


#define MC12_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF0061CD0u)


#define MC12_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF0061CD2u)


#define MC12_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF0061CD4u)


#define MC12_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF0061CD6u)


#define MC12_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF0061CD8u)


#define MC12_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF0061CDAu)


#define MC12_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF0061CA6u)


#define MC12_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF0061CDCu)


#define MC12_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF0061CDEu)


#define MC12_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF0061CE0u)


#define MC12_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF0061CE2u)


#define MC12_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF0061CE4u)


#define MC12_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF0061CE6u)


#define MC12_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF0061CE8u)


#define MC12_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF0061CEAu)


#define MC12_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF0061CECu)


#define MC12_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF0061CEEu)


#define MC12_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF0061CA8u)


#define MC12_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF0061CAAu)


#define MC12_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF0061CACu)


#define MC12_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF0061CAEu)


#define MC12_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF0061CB0u)


#define MC12_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF0061CB2u)


#define MC12_REVID (*(volatile Ifx_MC_REVID*)0xF0061C0Cu)







#define MC13_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0061D00u)


#define MC13_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0061D02u)


#define MC13_ECCD (*(volatile Ifx_MC_ECCD*)0xF0061D10u)


#define MC13_ECCS (*(volatile Ifx_MC_ECCS*)0xF0061D0Eu)


#define MC13_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0061D12u)


#define MC13_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0061D14u)


#define MC13_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0061D16u)


#define MC13_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0061D18u)


#define MC13_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF0061D1Au)


#define MC13_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0061D04u)


#define MC13_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0061D06u)


#define MC13_RANGE (*(volatile Ifx_MC_RANGE*)0xF0061D08u)


#define MC13_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF0061DA0u)


#define MC13_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF0061DA2u)


#define MC13_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF0061DB4u)


#define MC13_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF0061DB6u)


#define MC13_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF0061DB8u)


#define MC13_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF0061DBAu)


#define MC13_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF0061DBCu)


#define MC13_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF0061DBEu)


#define MC13_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF0061DC0u)


#define MC13_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF0061DC2u)


#define MC13_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF0061DC4u)


#define MC13_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF0061DC6u)


#define MC13_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF0061DA4u)


#define MC13_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF0061DC8u)


#define MC13_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF0061DCAu)


#define MC13_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF0061DCCu)


#define MC13_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF0061DCEu)


#define MC13_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF0061DD0u)


#define MC13_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF0061DD2u)


#define MC13_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF0061DD4u)


#define MC13_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF0061DD6u)


#define MC13_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF0061DD8u)


#define MC13_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF0061DDAu)


#define MC13_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF0061DA6u)


#define MC13_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF0061DDCu)


#define MC13_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF0061DDEu)


#define MC13_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF0061DE0u)


#define MC13_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF0061DE2u)


#define MC13_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF0061DE4u)


#define MC13_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF0061DE6u)


#define MC13_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF0061DE8u)


#define MC13_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF0061DEAu)


#define MC13_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF0061DECu)


#define MC13_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF0061DEEu)


#define MC13_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF0061DA8u)


#define MC13_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF0061DAAu)


#define MC13_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF0061DACu)


#define MC13_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF0061DAEu)


#define MC13_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF0061DB0u)


#define MC13_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF0061DB2u)


#define MC13_REVID (*(volatile Ifx_MC_REVID*)0xF0061D0Cu)







#define MC14_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0061E00u)


#define MC14_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0061E02u)


#define MC14_ECCD (*(volatile Ifx_MC_ECCD*)0xF0061E10u)


#define MC14_ECCS (*(volatile Ifx_MC_ECCS*)0xF0061E0Eu)


#define MC14_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0061E12u)


#define MC14_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0061E14u)


#define MC14_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0061E16u)


#define MC14_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0061E18u)


#define MC14_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF0061E1Au)


#define MC14_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0061E04u)


#define MC14_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0061E06u)


#define MC14_RANGE (*(volatile Ifx_MC_RANGE*)0xF0061E08u)


#define MC14_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF0061EA0u)


#define MC14_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF0061EA2u)


#define MC14_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF0061EB4u)


#define MC14_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF0061EB6u)


#define MC14_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF0061EB8u)


#define MC14_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF0061EBAu)


#define MC14_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF0061EBCu)


#define MC14_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF0061EBEu)


#define MC14_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF0061EC0u)


#define MC14_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF0061EC2u)


#define MC14_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF0061EC4u)


#define MC14_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF0061EC6u)


#define MC14_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF0061EA4u)


#define MC14_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF0061EC8u)


#define MC14_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF0061ECAu)


#define MC14_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF0061ECCu)


#define MC14_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF0061ECEu)


#define MC14_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF0061ED0u)


#define MC14_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF0061ED2u)


#define MC14_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF0061ED4u)


#define MC14_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF0061ED6u)


#define MC14_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF0061ED8u)


#define MC14_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF0061EDAu)


#define MC14_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF0061EA6u)


#define MC14_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF0061EDCu)


#define MC14_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF0061EDEu)


#define MC14_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF0061EE0u)


#define MC14_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF0061EE2u)


#define MC14_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF0061EE4u)


#define MC14_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF0061EE6u)


#define MC14_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF0061EE8u)


#define MC14_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF0061EEAu)


#define MC14_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF0061EECu)


#define MC14_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF0061EEEu)


#define MC14_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF0061EA8u)


#define MC14_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF0061EAAu)


#define MC14_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF0061EACu)


#define MC14_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF0061EAEu)


#define MC14_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF0061EB0u)


#define MC14_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF0061EB2u)


#define MC14_REVID (*(volatile Ifx_MC_REVID*)0xF0061E0Cu)







#define MC15_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0061F00u)


#define MC15_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0061F02u)


#define MC15_ECCD (*(volatile Ifx_MC_ECCD*)0xF0061F10u)


#define MC15_ECCS (*(volatile Ifx_MC_ECCS*)0xF0061F0Eu)


#define MC15_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0061F12u)


#define MC15_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0061F14u)


#define MC15_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0061F16u)


#define MC15_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0061F18u)


#define MC15_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF0061F1Au)


#define MC15_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0061F04u)


#define MC15_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0061F06u)


#define MC15_RANGE (*(volatile Ifx_MC_RANGE*)0xF0061F08u)


#define MC15_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF0061FA0u)


#define MC15_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF0061FA2u)


#define MC15_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF0061FB4u)


#define MC15_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF0061FB6u)


#define MC15_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF0061FB8u)


#define MC15_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF0061FBAu)


#define MC15_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF0061FBCu)


#define MC15_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF0061FBEu)


#define MC15_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF0061FC0u)


#define MC15_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF0061FC2u)


#define MC15_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF0061FC4u)


#define MC15_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF0061FC6u)


#define MC15_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF0061FA4u)


#define MC15_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF0061FC8u)


#define MC15_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF0061FCAu)


#define MC15_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF0061FCCu)


#define MC15_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF0061FCEu)


#define MC15_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF0061FD0u)


#define MC15_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF0061FD2u)


#define MC15_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF0061FD4u)


#define MC15_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF0061FD6u)


#define MC15_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF0061FD8u)


#define MC15_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF0061FDAu)


#define MC15_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF0061FA6u)


#define MC15_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF0061FDCu)


#define MC15_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF0061FDEu)


#define MC15_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF0061FE0u)


#define MC15_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF0061FE2u)


#define MC15_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF0061FE4u)


#define MC15_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF0061FE6u)


#define MC15_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF0061FE8u)


#define MC15_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF0061FEAu)


#define MC15_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF0061FECu)


#define MC15_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF0061FEEu)


#define MC15_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF0061FA8u)


#define MC15_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF0061FAAu)


#define MC15_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF0061FACu)


#define MC15_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF0061FAEu)


#define MC15_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF0061FB0u)


#define MC15_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF0061FB2u)


#define MC15_REVID (*(volatile Ifx_MC_REVID*)0xF0061F0Cu)







#define MC16_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0062000u)


#define MC16_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0062002u)


#define MC16_ECCD (*(volatile Ifx_MC_ECCD*)0xF0062010u)


#define MC16_ECCS (*(volatile Ifx_MC_ECCS*)0xF006200Eu)


#define MC16_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0062012u)


#define MC16_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0062014u)


#define MC16_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0062016u)


#define MC16_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0062018u)


#define MC16_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF006201Au)


#define MC16_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0062004u)


#define MC16_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0062006u)


#define MC16_RANGE (*(volatile Ifx_MC_RANGE*)0xF0062008u)


#define MC16_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF00620A0u)


#define MC16_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF00620A2u)


#define MC16_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF00620B4u)


#define MC16_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF00620B6u)


#define MC16_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF00620B8u)


#define MC16_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF00620BAu)


#define MC16_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF00620BCu)


#define MC16_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF00620BEu)


#define MC16_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF00620C0u)


#define MC16_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF00620C2u)


#define MC16_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF00620C4u)


#define MC16_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF00620C6u)


#define MC16_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF00620A4u)


#define MC16_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF00620C8u)


#define MC16_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF00620CAu)


#define MC16_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF00620CCu)


#define MC16_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF00620CEu)


#define MC16_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF00620D0u)


#define MC16_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF00620D2u)


#define MC16_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF00620D4u)


#define MC16_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF00620D6u)


#define MC16_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF00620D8u)


#define MC16_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF00620DAu)


#define MC16_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF00620A6u)


#define MC16_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF00620DCu)


#define MC16_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF00620DEu)


#define MC16_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF00620E0u)


#define MC16_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF00620E2u)


#define MC16_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF00620E4u)


#define MC16_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF00620E6u)


#define MC16_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF00620E8u)


#define MC16_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF00620EAu)


#define MC16_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF00620ECu)


#define MC16_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF00620EEu)


#define MC16_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF00620A8u)


#define MC16_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF00620AAu)


#define MC16_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF00620ACu)


#define MC16_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF00620AEu)


#define MC16_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF00620B0u)


#define MC16_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF00620B2u)


#define MC16_REVID (*(volatile Ifx_MC_REVID*)0xF006200Cu)







#define MC17_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0062100u)


#define MC17_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0062102u)


#define MC17_ECCD (*(volatile Ifx_MC_ECCD*)0xF0062110u)


#define MC17_ECCS (*(volatile Ifx_MC_ECCS*)0xF006210Eu)


#define MC17_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0062112u)


#define MC17_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0062114u)


#define MC17_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0062116u)


#define MC17_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0062118u)


#define MC17_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF006211Au)


#define MC17_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0062104u)


#define MC17_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0062106u)


#define MC17_RANGE (*(volatile Ifx_MC_RANGE*)0xF0062108u)


#define MC17_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF00621A0u)


#define MC17_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF00621A2u)


#define MC17_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF00621B4u)


#define MC17_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF00621B6u)


#define MC17_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF00621B8u)


#define MC17_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF00621BAu)


#define MC17_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF00621BCu)


#define MC17_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF00621BEu)


#define MC17_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF00621C0u)


#define MC17_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF00621C2u)


#define MC17_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF00621C4u)


#define MC17_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF00621C6u)


#define MC17_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF00621A4u)


#define MC17_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF00621C8u)


#define MC17_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF00621CAu)


#define MC17_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF00621CCu)


#define MC17_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF00621CEu)


#define MC17_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF00621D0u)


#define MC17_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF00621D2u)


#define MC17_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF00621D4u)


#define MC17_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF00621D6u)


#define MC17_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF00621D8u)


#define MC17_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF00621DAu)


#define MC17_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF00621A6u)


#define MC17_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF00621DCu)


#define MC17_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF00621DEu)


#define MC17_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF00621E0u)


#define MC17_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF00621E2u)


#define MC17_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF00621E4u)


#define MC17_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF00621E6u)


#define MC17_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF00621E8u)


#define MC17_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF00621EAu)


#define MC17_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF00621ECu)


#define MC17_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF00621EEu)


#define MC17_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF00621A8u)


#define MC17_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF00621AAu)


#define MC17_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF00621ACu)


#define MC17_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF00621AEu)


#define MC17_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF00621B0u)


#define MC17_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF00621B2u)


#define MC17_REVID (*(volatile Ifx_MC_REVID*)0xF006210Cu)







#define MC18_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0062200u)


#define MC18_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0062202u)


#define MC18_ECCD (*(volatile Ifx_MC_ECCD*)0xF0062210u)


#define MC18_ECCS (*(volatile Ifx_MC_ECCS*)0xF006220Eu)


#define MC18_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0062212u)


#define MC18_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0062214u)


#define MC18_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0062216u)


#define MC18_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0062218u)


#define MC18_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF006221Au)


#define MC18_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0062204u)


#define MC18_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0062206u)


#define MC18_RANGE (*(volatile Ifx_MC_RANGE*)0xF0062208u)


#define MC18_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF00622A0u)


#define MC18_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF00622A2u)


#define MC18_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF00622B4u)


#define MC18_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF00622B6u)


#define MC18_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF00622B8u)


#define MC18_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF00622BAu)


#define MC18_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF00622BCu)


#define MC18_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF00622BEu)


#define MC18_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF00622C0u)


#define MC18_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF00622C2u)


#define MC18_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF00622C4u)


#define MC18_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF00622C6u)


#define MC18_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF00622A4u)


#define MC18_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF00622C8u)


#define MC18_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF00622CAu)


#define MC18_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF00622CCu)


#define MC18_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF00622CEu)


#define MC18_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF00622D0u)


#define MC18_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF00622D2u)


#define MC18_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF00622D4u)


#define MC18_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF00622D6u)


#define MC18_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF00622D8u)


#define MC18_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF00622DAu)


#define MC18_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF00622A6u)


#define MC18_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF00622DCu)


#define MC18_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF00622DEu)


#define MC18_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF00622E0u)


#define MC18_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF00622E2u)


#define MC18_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF00622E4u)


#define MC18_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF00622E6u)


#define MC18_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF00622E8u)


#define MC18_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF00622EAu)


#define MC18_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF00622ECu)


#define MC18_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF00622EEu)


#define MC18_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF00622A8u)


#define MC18_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF00622AAu)


#define MC18_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF00622ACu)


#define MC18_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF00622AEu)


#define MC18_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF00622B0u)


#define MC18_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF00622B2u)


#define MC18_REVID (*(volatile Ifx_MC_REVID*)0xF006220Cu)







#define MC19_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0062300u)


#define MC19_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0062302u)


#define MC19_ECCD (*(volatile Ifx_MC_ECCD*)0xF0062310u)


#define MC19_ECCS (*(volatile Ifx_MC_ECCS*)0xF006230Eu)


#define MC19_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0062312u)


#define MC19_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0062314u)


#define MC19_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0062316u)


#define MC19_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0062318u)


#define MC19_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF006231Au)


#define MC19_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0062304u)


#define MC19_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0062306u)


#define MC19_RANGE (*(volatile Ifx_MC_RANGE*)0xF0062308u)


#define MC19_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF00623A0u)


#define MC19_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF00623A2u)


#define MC19_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF00623B4u)


#define MC19_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF00623B6u)


#define MC19_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF00623B8u)


#define MC19_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF00623BAu)


#define MC19_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF00623BCu)


#define MC19_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF00623BEu)


#define MC19_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF00623C0u)


#define MC19_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF00623C2u)


#define MC19_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF00623C4u)


#define MC19_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF00623C6u)


#define MC19_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF00623A4u)


#define MC19_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF00623C8u)


#define MC19_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF00623CAu)


#define MC19_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF00623CCu)


#define MC19_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF00623CEu)


#define MC19_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF00623D0u)


#define MC19_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF00623D2u)


#define MC19_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF00623D4u)


#define MC19_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF00623D6u)


#define MC19_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF00623D8u)


#define MC19_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF00623DAu)


#define MC19_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF00623A6u)


#define MC19_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF00623DCu)


#define MC19_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF00623DEu)


#define MC19_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF00623E0u)


#define MC19_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF00623E2u)


#define MC19_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF00623E4u)


#define MC19_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF00623E6u)


#define MC19_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF00623E8u)


#define MC19_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF00623EAu)


#define MC19_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF00623ECu)


#define MC19_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF00623EEu)


#define MC19_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF00623A8u)


#define MC19_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF00623AAu)


#define MC19_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF00623ACu)


#define MC19_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF00623AEu)


#define MC19_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF00623B0u)


#define MC19_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF00623B2u)


#define MC19_REVID (*(volatile Ifx_MC_REVID*)0xF006230Cu)







#define MC20_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0062400u)


#define MC20_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0062402u)


#define MC20_ECCD (*(volatile Ifx_MC_ECCD*)0xF0062410u)


#define MC20_ECCS (*(volatile Ifx_MC_ECCS*)0xF006240Eu)


#define MC20_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0062412u)


#define MC20_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0062414u)


#define MC20_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0062416u)


#define MC20_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0062418u)


#define MC20_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF006241Au)


#define MC20_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0062404u)


#define MC20_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0062406u)


#define MC20_RANGE (*(volatile Ifx_MC_RANGE*)0xF0062408u)


#define MC20_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF00624A0u)


#define MC20_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF00624A2u)


#define MC20_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF00624B4u)


#define MC20_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF00624B6u)


#define MC20_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF00624B8u)


#define MC20_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF00624BAu)


#define MC20_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF00624BCu)


#define MC20_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF00624BEu)


#define MC20_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF00624C0u)


#define MC20_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF00624C2u)


#define MC20_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF00624C4u)


#define MC20_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF00624C6u)


#define MC20_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF00624A4u)


#define MC20_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF00624C8u)


#define MC20_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF00624CAu)


#define MC20_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF00624CCu)


#define MC20_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF00624CEu)


#define MC20_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF00624D0u)


#define MC20_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF00624D2u)


#define MC20_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF00624D4u)


#define MC20_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF00624D6u)


#define MC20_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF00624D8u)


#define MC20_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF00624DAu)


#define MC20_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF00624A6u)


#define MC20_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF00624DCu)


#define MC20_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF00624DEu)


#define MC20_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF00624E0u)


#define MC20_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF00624E2u)


#define MC20_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF00624E4u)


#define MC20_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF00624E6u)


#define MC20_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF00624E8u)


#define MC20_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF00624EAu)


#define MC20_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF00624ECu)


#define MC20_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF00624EEu)


#define MC20_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF00624A8u)


#define MC20_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF00624AAu)


#define MC20_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF00624ACu)


#define MC20_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF00624AEu)


#define MC20_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF00624B0u)


#define MC20_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF00624B2u)


#define MC20_REVID (*(volatile Ifx_MC_REVID*)0xF006240Cu)







#define MC21_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0062500u)


#define MC21_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0062502u)


#define MC21_ECCD (*(volatile Ifx_MC_ECCD*)0xF0062510u)


#define MC21_ECCS (*(volatile Ifx_MC_ECCS*)0xF006250Eu)


#define MC21_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0062512u)


#define MC21_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0062514u)


#define MC21_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0062516u)


#define MC21_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0062518u)


#define MC21_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF006251Au)


#define MC21_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0062504u)


#define MC21_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0062506u)


#define MC21_RANGE (*(volatile Ifx_MC_RANGE*)0xF0062508u)


#define MC21_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF00625A0u)


#define MC21_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF00625A2u)


#define MC21_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF00625B4u)


#define MC21_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF00625B6u)


#define MC21_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF00625B8u)


#define MC21_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF00625BAu)


#define MC21_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF00625BCu)


#define MC21_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF00625BEu)


#define MC21_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF00625C0u)


#define MC21_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF00625C2u)


#define MC21_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF00625C4u)


#define MC21_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF00625C6u)


#define MC21_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF00625A4u)


#define MC21_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF00625C8u)


#define MC21_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF00625CAu)


#define MC21_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF00625CCu)


#define MC21_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF00625CEu)


#define MC21_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF00625D0u)


#define MC21_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF00625D2u)


#define MC21_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF00625D4u)


#define MC21_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF00625D6u)


#define MC21_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF00625D8u)


#define MC21_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF00625DAu)


#define MC21_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF00625A6u)


#define MC21_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF00625DCu)


#define MC21_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF00625DEu)


#define MC21_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF00625E0u)


#define MC21_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF00625E2u)


#define MC21_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF00625E4u)


#define MC21_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF00625E6u)


#define MC21_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF00625E8u)


#define MC21_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF00625EAu)


#define MC21_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF00625ECu)


#define MC21_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF00625EEu)


#define MC21_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF00625A8u)


#define MC21_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF00625AAu)


#define MC21_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF00625ACu)


#define MC21_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF00625AEu)


#define MC21_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF00625B0u)


#define MC21_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF00625B2u)


#define MC21_REVID (*(volatile Ifx_MC_REVID*)0xF006250Cu)







#define MC22_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0062600u)


#define MC22_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0062602u)


#define MC22_ECCD (*(volatile Ifx_MC_ECCD*)0xF0062610u)


#define MC22_ECCS (*(volatile Ifx_MC_ECCS*)0xF006260Eu)


#define MC22_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0062612u)


#define MC22_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0062614u)


#define MC22_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0062616u)


#define MC22_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0062618u)


#define MC22_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF006261Au)


#define MC22_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0062604u)


#define MC22_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0062606u)


#define MC22_RANGE (*(volatile Ifx_MC_RANGE*)0xF0062608u)


#define MC22_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF00626A0u)


#define MC22_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF00626A2u)


#define MC22_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF00626B4u)


#define MC22_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF00626B6u)


#define MC22_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF00626B8u)


#define MC22_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF00626BAu)


#define MC22_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF00626BCu)


#define MC22_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF00626BEu)


#define MC22_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF00626C0u)


#define MC22_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF00626C2u)


#define MC22_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF00626C4u)


#define MC22_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF00626C6u)


#define MC22_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF00626A4u)


#define MC22_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF00626C8u)


#define MC22_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF00626CAu)


#define MC22_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF00626CCu)


#define MC22_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF00626CEu)


#define MC22_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF00626D0u)


#define MC22_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF00626D2u)


#define MC22_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF00626D4u)


#define MC22_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF00626D6u)


#define MC22_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF00626D8u)


#define MC22_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF00626DAu)


#define MC22_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF00626A6u)


#define MC22_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF00626DCu)


#define MC22_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF00626DEu)


#define MC22_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF00626E0u)


#define MC22_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF00626E2u)


#define MC22_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF00626E4u)


#define MC22_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF00626E6u)


#define MC22_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF00626E8u)


#define MC22_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF00626EAu)


#define MC22_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF00626ECu)


#define MC22_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF00626EEu)


#define MC22_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF00626A8u)


#define MC22_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF00626AAu)


#define MC22_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF00626ACu)


#define MC22_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF00626AEu)


#define MC22_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF00626B0u)


#define MC22_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF00626B2u)


#define MC22_REVID (*(volatile Ifx_MC_REVID*)0xF006260Cu)







#define MC23_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0062700u)


#define MC23_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0062702u)


#define MC23_ECCD (*(volatile Ifx_MC_ECCD*)0xF0062710u)


#define MC23_ECCS (*(volatile Ifx_MC_ECCS*)0xF006270Eu)


#define MC23_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0062712u)


#define MC23_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0062714u)


#define MC23_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0062716u)


#define MC23_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0062718u)


#define MC23_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF006271Au)


#define MC23_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0062704u)


#define MC23_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0062706u)


#define MC23_RANGE (*(volatile Ifx_MC_RANGE*)0xF0062708u)


#define MC23_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF00627A0u)


#define MC23_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF00627A2u)


#define MC23_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF00627B4u)


#define MC23_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF00627B6u)


#define MC23_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF00627B8u)


#define MC23_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF00627BAu)


#define MC23_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF00627BCu)


#define MC23_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF00627BEu)


#define MC23_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF00627C0u)


#define MC23_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF00627C2u)


#define MC23_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF00627C4u)


#define MC23_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF00627C6u)


#define MC23_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF00627A4u)


#define MC23_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF00627C8u)


#define MC23_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF00627CAu)


#define MC23_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF00627CCu)


#define MC23_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF00627CEu)


#define MC23_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF00627D0u)


#define MC23_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF00627D2u)


#define MC23_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF00627D4u)


#define MC23_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF00627D6u)


#define MC23_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF00627D8u)


#define MC23_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF00627DAu)


#define MC23_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF00627A6u)


#define MC23_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF00627DCu)


#define MC23_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF00627DEu)


#define MC23_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF00627E0u)


#define MC23_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF00627E2u)


#define MC23_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF00627E4u)


#define MC23_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF00627E6u)


#define MC23_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF00627E8u)


#define MC23_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF00627EAu)


#define MC23_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF00627ECu)


#define MC23_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF00627EEu)


#define MC23_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF00627A8u)


#define MC23_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF00627AAu)


#define MC23_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF00627ACu)


#define MC23_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF00627AEu)


#define MC23_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF00627B0u)


#define MC23_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF00627B2u)


#define MC23_REVID (*(volatile Ifx_MC_REVID*)0xF006270Cu)







#define MC24_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0062800u)


#define MC24_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0062802u)


#define MC24_ECCD (*(volatile Ifx_MC_ECCD*)0xF0062810u)


#define MC24_ECCS (*(volatile Ifx_MC_ECCS*)0xF006280Eu)


#define MC24_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0062812u)


#define MC24_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0062814u)


#define MC24_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0062816u)


#define MC24_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0062818u)


#define MC24_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF006281Au)


#define MC24_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0062804u)


#define MC24_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0062806u)


#define MC24_RANGE (*(volatile Ifx_MC_RANGE*)0xF0062808u)


#define MC24_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF00628A0u)


#define MC24_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF00628A2u)


#define MC24_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF00628B4u)


#define MC24_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF00628B6u)


#define MC24_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF00628B8u)


#define MC24_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF00628BAu)


#define MC24_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF00628BCu)


#define MC24_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF00628BEu)


#define MC24_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF00628C0u)


#define MC24_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF00628C2u)


#define MC24_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF00628C4u)


#define MC24_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF00628C6u)


#define MC24_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF00628A4u)


#define MC24_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF00628C8u)


#define MC24_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF00628CAu)


#define MC24_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF00628CCu)


#define MC24_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF00628CEu)


#define MC24_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF00628D0u)


#define MC24_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF00628D2u)


#define MC24_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF00628D4u)


#define MC24_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF00628D6u)


#define MC24_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF00628D8u)


#define MC24_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF00628DAu)


#define MC24_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF00628A6u)


#define MC24_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF00628DCu)


#define MC24_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF00628DEu)


#define MC24_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF00628E0u)


#define MC24_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF00628E2u)


#define MC24_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF00628E4u)


#define MC24_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF00628E6u)


#define MC24_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF00628E8u)


#define MC24_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF00628EAu)


#define MC24_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF00628ECu)


#define MC24_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF00628EEu)


#define MC24_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF00628A8u)


#define MC24_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF00628AAu)


#define MC24_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF00628ACu)


#define MC24_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF00628AEu)


#define MC24_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF00628B0u)


#define MC24_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF00628B2u)


#define MC24_REVID (*(volatile Ifx_MC_REVID*)0xF006280Cu)







#define MC25_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0062900u)


#define MC25_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0062902u)


#define MC25_ECCD (*(volatile Ifx_MC_ECCD*)0xF0062910u)


#define MC25_ECCS (*(volatile Ifx_MC_ECCS*)0xF006290Eu)


#define MC25_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0062912u)


#define MC25_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0062914u)


#define MC25_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0062916u)


#define MC25_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0062918u)


#define MC25_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF006291Au)


#define MC25_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0062904u)


#define MC25_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0062906u)


#define MC25_RANGE (*(volatile Ifx_MC_RANGE*)0xF0062908u)


#define MC25_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF00629A0u)


#define MC25_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF00629A2u)


#define MC25_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF00629B4u)


#define MC25_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF00629B6u)


#define MC25_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF00629B8u)


#define MC25_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF00629BAu)


#define MC25_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF00629BCu)


#define MC25_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF00629BEu)


#define MC25_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF00629C0u)


#define MC25_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF00629C2u)


#define MC25_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF00629C4u)


#define MC25_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF00629C6u)


#define MC25_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF00629A4u)


#define MC25_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF00629C8u)


#define MC25_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF00629CAu)


#define MC25_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF00629CCu)


#define MC25_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF00629CEu)


#define MC25_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF00629D0u)


#define MC25_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF00629D2u)


#define MC25_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF00629D4u)


#define MC25_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF00629D6u)


#define MC25_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF00629D8u)


#define MC25_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF00629DAu)


#define MC25_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF00629A6u)


#define MC25_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF00629DCu)


#define MC25_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF00629DEu)


#define MC25_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF00629E0u)


#define MC25_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF00629E2u)


#define MC25_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF00629E4u)


#define MC25_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF00629E6u)


#define MC25_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF00629E8u)


#define MC25_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF00629EAu)


#define MC25_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF00629ECu)


#define MC25_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF00629EEu)


#define MC25_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF00629A8u)


#define MC25_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF00629AAu)


#define MC25_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF00629ACu)


#define MC25_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF00629AEu)


#define MC25_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF00629B0u)


#define MC25_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF00629B2u)


#define MC25_REVID (*(volatile Ifx_MC_REVID*)0xF006290Cu)







#define MC26_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0062A00u)


#define MC26_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0062A02u)


#define MC26_ECCD (*(volatile Ifx_MC_ECCD*)0xF0062A10u)


#define MC26_ECCS (*(volatile Ifx_MC_ECCS*)0xF0062A0Eu)


#define MC26_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0062A12u)


#define MC26_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0062A14u)


#define MC26_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0062A16u)


#define MC26_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0062A18u)


#define MC26_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF0062A1Au)


#define MC26_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0062A04u)


#define MC26_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0062A06u)


#define MC26_RANGE (*(volatile Ifx_MC_RANGE*)0xF0062A08u)


#define MC26_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF0062AA0u)


#define MC26_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF0062AA2u)


#define MC26_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF0062AB4u)


#define MC26_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF0062AB6u)


#define MC26_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF0062AB8u)


#define MC26_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF0062ABAu)


#define MC26_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF0062ABCu)


#define MC26_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF0062ABEu)


#define MC26_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF0062AC0u)


#define MC26_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF0062AC2u)


#define MC26_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF0062AC4u)


#define MC26_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF0062AC6u)


#define MC26_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF0062AA4u)


#define MC26_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF0062AC8u)


#define MC26_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF0062ACAu)


#define MC26_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF0062ACCu)


#define MC26_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF0062ACEu)


#define MC26_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF0062AD0u)


#define MC26_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF0062AD2u)


#define MC26_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF0062AD4u)


#define MC26_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF0062AD6u)


#define MC26_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF0062AD8u)


#define MC26_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF0062ADAu)


#define MC26_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF0062AA6u)


#define MC26_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF0062ADCu)


#define MC26_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF0062ADEu)


#define MC26_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF0062AE0u)


#define MC26_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF0062AE2u)


#define MC26_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF0062AE4u)


#define MC26_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF0062AE6u)


#define MC26_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF0062AE8u)


#define MC26_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF0062AEAu)


#define MC26_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF0062AECu)


#define MC26_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF0062AEEu)


#define MC26_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF0062AA8u)


#define MC26_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF0062AAAu)


#define MC26_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF0062AACu)


#define MC26_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF0062AAEu)


#define MC26_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF0062AB0u)


#define MC26_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF0062AB2u)


#define MC26_REVID (*(volatile Ifx_MC_REVID*)0xF0062A0Cu)







#define MC27_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0062B00u)


#define MC27_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0062B02u)


#define MC27_ECCD (*(volatile Ifx_MC_ECCD*)0xF0062B10u)


#define MC27_ECCS (*(volatile Ifx_MC_ECCS*)0xF0062B0Eu)


#define MC27_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0062B12u)


#define MC27_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0062B14u)


#define MC27_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0062B16u)


#define MC27_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0062B18u)


#define MC27_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF0062B1Au)


#define MC27_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0062B04u)


#define MC27_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0062B06u)


#define MC27_RANGE (*(volatile Ifx_MC_RANGE*)0xF0062B08u)


#define MC27_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF0062BA0u)


#define MC27_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF0062BA2u)


#define MC27_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF0062BB4u)


#define MC27_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF0062BB6u)


#define MC27_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF0062BB8u)


#define MC27_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF0062BBAu)


#define MC27_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF0062BBCu)


#define MC27_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF0062BBEu)


#define MC27_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF0062BC0u)


#define MC27_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF0062BC2u)


#define MC27_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF0062BC4u)


#define MC27_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF0062BC6u)


#define MC27_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF0062BA4u)


#define MC27_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF0062BC8u)


#define MC27_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF0062BCAu)


#define MC27_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF0062BCCu)


#define MC27_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF0062BCEu)


#define MC27_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF0062BD0u)


#define MC27_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF0062BD2u)


#define MC27_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF0062BD4u)


#define MC27_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF0062BD6u)


#define MC27_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF0062BD8u)


#define MC27_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF0062BDAu)


#define MC27_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF0062BA6u)


#define MC27_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF0062BDCu)


#define MC27_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF0062BDEu)


#define MC27_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF0062BE0u)


#define MC27_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF0062BE2u)


#define MC27_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF0062BE4u)


#define MC27_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF0062BE6u)


#define MC27_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF0062BE8u)


#define MC27_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF0062BEAu)


#define MC27_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF0062BECu)


#define MC27_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF0062BEEu)


#define MC27_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF0062BA8u)


#define MC27_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF0062BAAu)


#define MC27_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF0062BACu)


#define MC27_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF0062BAEu)


#define MC27_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF0062BB0u)


#define MC27_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF0062BB2u)


#define MC27_REVID (*(volatile Ifx_MC_REVID*)0xF0062B0Cu)







#define MC28_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0062C00u)


#define MC28_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0062C02u)


#define MC28_ECCD (*(volatile Ifx_MC_ECCD*)0xF0062C10u)


#define MC28_ECCS (*(volatile Ifx_MC_ECCS*)0xF0062C0Eu)


#define MC28_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0062C12u)


#define MC28_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0062C14u)


#define MC28_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0062C16u)


#define MC28_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0062C18u)


#define MC28_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF0062C1Au)


#define MC28_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0062C04u)


#define MC28_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0062C06u)


#define MC28_RANGE (*(volatile Ifx_MC_RANGE*)0xF0062C08u)


#define MC28_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF0062CA0u)


#define MC28_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF0062CA2u)


#define MC28_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF0062CB4u)


#define MC28_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF0062CB6u)


#define MC28_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF0062CB8u)


#define MC28_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF0062CBAu)


#define MC28_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF0062CBCu)


#define MC28_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF0062CBEu)


#define MC28_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF0062CC0u)


#define MC28_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF0062CC2u)


#define MC28_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF0062CC4u)


#define MC28_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF0062CC6u)


#define MC28_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF0062CA4u)


#define MC28_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF0062CC8u)


#define MC28_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF0062CCAu)


#define MC28_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF0062CCCu)


#define MC28_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF0062CCEu)


#define MC28_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF0062CD0u)


#define MC28_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF0062CD2u)


#define MC28_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF0062CD4u)


#define MC28_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF0062CD6u)


#define MC28_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF0062CD8u)


#define MC28_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF0062CDAu)


#define MC28_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF0062CA6u)


#define MC28_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF0062CDCu)


#define MC28_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF0062CDEu)


#define MC28_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF0062CE0u)


#define MC28_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF0062CE2u)


#define MC28_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF0062CE4u)


#define MC28_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF0062CE6u)


#define MC28_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF0062CE8u)


#define MC28_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF0062CEAu)


#define MC28_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF0062CECu)


#define MC28_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF0062CEEu)


#define MC28_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF0062CA8u)


#define MC28_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF0062CAAu)


#define MC28_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF0062CACu)


#define MC28_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF0062CAEu)


#define MC28_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF0062CB0u)


#define MC28_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF0062CB2u)


#define MC28_REVID (*(volatile Ifx_MC_REVID*)0xF0062C0Cu)







#define MC29_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0062D00u)


#define MC29_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0062D02u)


#define MC29_ECCD (*(volatile Ifx_MC_ECCD*)0xF0062D10u)


#define MC29_ECCS (*(volatile Ifx_MC_ECCS*)0xF0062D0Eu)


#define MC29_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0062D12u)


#define MC29_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0062D14u)


#define MC29_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0062D16u)


#define MC29_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0062D18u)


#define MC29_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF0062D1Au)


#define MC29_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0062D04u)


#define MC29_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0062D06u)


#define MC29_RANGE (*(volatile Ifx_MC_RANGE*)0xF0062D08u)


#define MC29_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF0062DA0u)


#define MC29_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF0062DA2u)


#define MC29_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF0062DB4u)


#define MC29_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF0062DB6u)


#define MC29_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF0062DB8u)


#define MC29_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF0062DBAu)


#define MC29_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF0062DBCu)


#define MC29_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF0062DBEu)


#define MC29_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF0062DC0u)


#define MC29_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF0062DC2u)


#define MC29_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF0062DC4u)


#define MC29_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF0062DC6u)


#define MC29_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF0062DA4u)


#define MC29_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF0062DC8u)


#define MC29_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF0062DCAu)


#define MC29_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF0062DCCu)


#define MC29_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF0062DCEu)


#define MC29_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF0062DD0u)


#define MC29_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF0062DD2u)


#define MC29_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF0062DD4u)


#define MC29_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF0062DD6u)


#define MC29_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF0062DD8u)


#define MC29_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF0062DDAu)


#define MC29_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF0062DA6u)


#define MC29_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF0062DDCu)


#define MC29_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF0062DDEu)


#define MC29_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF0062DE0u)


#define MC29_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF0062DE2u)


#define MC29_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF0062DE4u)


#define MC29_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF0062DE6u)


#define MC29_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF0062DE8u)


#define MC29_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF0062DEAu)


#define MC29_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF0062DECu)


#define MC29_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF0062DEEu)


#define MC29_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF0062DA8u)


#define MC29_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF0062DAAu)


#define MC29_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF0062DACu)


#define MC29_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF0062DAEu)


#define MC29_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF0062DB0u)


#define MC29_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF0062DB2u)


#define MC29_REVID (*(volatile Ifx_MC_REVID*)0xF0062D0Cu)







#define MC30_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0062E00u)


#define MC30_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0062E02u)


#define MC30_ECCD (*(volatile Ifx_MC_ECCD*)0xF0062E10u)


#define MC30_ECCS (*(volatile Ifx_MC_ECCS*)0xF0062E0Eu)


#define MC30_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0062E12u)


#define MC30_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0062E14u)


#define MC30_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0062E16u)


#define MC30_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0062E18u)


#define MC30_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF0062E1Au)


#define MC30_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0062E04u)


#define MC30_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0062E06u)


#define MC30_RANGE (*(volatile Ifx_MC_RANGE*)0xF0062E08u)


#define MC30_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF0062EA0u)


#define MC30_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF0062EA2u)


#define MC30_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF0062EB4u)


#define MC30_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF0062EB6u)


#define MC30_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF0062EB8u)


#define MC30_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF0062EBAu)


#define MC30_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF0062EBCu)


#define MC30_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF0062EBEu)


#define MC30_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF0062EC0u)


#define MC30_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF0062EC2u)


#define MC30_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF0062EC4u)


#define MC30_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF0062EC6u)


#define MC30_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF0062EA4u)


#define MC30_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF0062EC8u)


#define MC30_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF0062ECAu)


#define MC30_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF0062ECCu)


#define MC30_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF0062ECEu)


#define MC30_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF0062ED0u)


#define MC30_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF0062ED2u)


#define MC30_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF0062ED4u)


#define MC30_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF0062ED6u)


#define MC30_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF0062ED8u)


#define MC30_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF0062EDAu)


#define MC30_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF0062EA6u)


#define MC30_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF0062EDCu)


#define MC30_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF0062EDEu)


#define MC30_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF0062EE0u)


#define MC30_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF0062EE2u)


#define MC30_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF0062EE4u)


#define MC30_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF0062EE6u)


#define MC30_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF0062EE8u)


#define MC30_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF0062EEAu)


#define MC30_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF0062EECu)


#define MC30_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF0062EEEu)


#define MC30_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF0062EA8u)


#define MC30_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF0062EAAu)


#define MC30_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF0062EACu)


#define MC30_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF0062EAEu)


#define MC30_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF0062EB0u)


#define MC30_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF0062EB2u)


#define MC30_REVID (*(volatile Ifx_MC_REVID*)0xF0062E0Cu)







#define MC31_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0062F00u)


#define MC31_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0062F02u)


#define MC31_ECCD (*(volatile Ifx_MC_ECCD*)0xF0062F10u)


#define MC31_ECCS (*(volatile Ifx_MC_ECCS*)0xF0062F0Eu)


#define MC31_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0062F12u)


#define MC31_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0062F14u)


#define MC31_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0062F16u)


#define MC31_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0062F18u)


#define MC31_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF0062F1Au)


#define MC31_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0062F04u)


#define MC31_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0062F06u)


#define MC31_RANGE (*(volatile Ifx_MC_RANGE*)0xF0062F08u)


#define MC31_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF0062FA0u)


#define MC31_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF0062FA2u)


#define MC31_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF0062FB4u)


#define MC31_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF0062FB6u)


#define MC31_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF0062FB8u)


#define MC31_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF0062FBAu)


#define MC31_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF0062FBCu)


#define MC31_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF0062FBEu)


#define MC31_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF0062FC0u)


#define MC31_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF0062FC2u)


#define MC31_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF0062FC4u)


#define MC31_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF0062FC6u)


#define MC31_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF0062FA4u)


#define MC31_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF0062FC8u)


#define MC31_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF0062FCAu)


#define MC31_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF0062FCCu)


#define MC31_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF0062FCEu)


#define MC31_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF0062FD0u)


#define MC31_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF0062FD2u)


#define MC31_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF0062FD4u)


#define MC31_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF0062FD6u)


#define MC31_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF0062FD8u)


#define MC31_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF0062FDAu)


#define MC31_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF0062FA6u)


#define MC31_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF0062FDCu)


#define MC31_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF0062FDEu)


#define MC31_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF0062FE0u)


#define MC31_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF0062FE2u)


#define MC31_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF0062FE4u)


#define MC31_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF0062FE6u)


#define MC31_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF0062FE8u)


#define MC31_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF0062FEAu)


#define MC31_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF0062FECu)


#define MC31_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF0062FEEu)


#define MC31_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF0062FA8u)


#define MC31_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF0062FAAu)


#define MC31_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF0062FACu)


#define MC31_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF0062FAEu)


#define MC31_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF0062FB0u)


#define MC31_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF0062FB2u)


#define MC31_REVID (*(volatile Ifx_MC_REVID*)0xF0062F0Cu)







#define MC32_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0063000u)


#define MC32_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0063002u)


#define MC32_ECCD (*(volatile Ifx_MC_ECCD*)0xF0063010u)


#define MC32_ECCS (*(volatile Ifx_MC_ECCS*)0xF006300Eu)


#define MC32_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0063012u)


#define MC32_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0063014u)


#define MC32_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0063016u)


#define MC32_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0063018u)


#define MC32_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF006301Au)


#define MC32_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0063004u)


#define MC32_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0063006u)


#define MC32_RANGE (*(volatile Ifx_MC_RANGE*)0xF0063008u)


#define MC32_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF00630A0u)


#define MC32_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF00630A2u)


#define MC32_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF00630B4u)


#define MC32_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF00630B6u)


#define MC32_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF00630B8u)


#define MC32_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF00630BAu)


#define MC32_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF00630BCu)


#define MC32_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF00630BEu)


#define MC32_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF00630C0u)


#define MC32_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF00630C2u)


#define MC32_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF00630C4u)


#define MC32_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF00630C6u)


#define MC32_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF00630A4u)


#define MC32_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF00630C8u)


#define MC32_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF00630CAu)


#define MC32_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF00630CCu)


#define MC32_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF00630CEu)


#define MC32_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF00630D0u)


#define MC32_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF00630D2u)


#define MC32_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF00630D4u)


#define MC32_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF00630D6u)


#define MC32_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF00630D8u)


#define MC32_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF00630DAu)


#define MC32_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF00630A6u)


#define MC32_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF00630DCu)


#define MC32_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF00630DEu)


#define MC32_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF00630E0u)


#define MC32_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF00630E2u)


#define MC32_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF00630E4u)


#define MC32_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF00630E6u)


#define MC32_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF00630E8u)


#define MC32_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF00630EAu)


#define MC32_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF00630ECu)


#define MC32_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF00630EEu)


#define MC32_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF00630A8u)


#define MC32_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF00630AAu)


#define MC32_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF00630ACu)


#define MC32_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF00630AEu)


#define MC32_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF00630B0u)


#define MC32_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF00630B2u)


#define MC32_REVID (*(volatile Ifx_MC_REVID*)0xF006300Cu)







#define MC33_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0063100u)


#define MC33_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0063102u)


#define MC33_ECCD (*(volatile Ifx_MC_ECCD*)0xF0063110u)


#define MC33_ECCS (*(volatile Ifx_MC_ECCS*)0xF006310Eu)


#define MC33_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0063112u)


#define MC33_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0063114u)


#define MC33_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0063116u)


#define MC33_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0063118u)


#define MC33_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF006311Au)


#define MC33_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0063104u)


#define MC33_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0063106u)


#define MC33_RANGE (*(volatile Ifx_MC_RANGE*)0xF0063108u)


#define MC33_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF00631A0u)


#define MC33_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF00631A2u)


#define MC33_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF00631B4u)


#define MC33_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF00631B6u)


#define MC33_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF00631B8u)


#define MC33_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF00631BAu)


#define MC33_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF00631BCu)


#define MC33_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF00631BEu)


#define MC33_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF00631C0u)


#define MC33_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF00631C2u)


#define MC33_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF00631C4u)


#define MC33_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF00631C6u)


#define MC33_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF00631A4u)


#define MC33_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF00631C8u)


#define MC33_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF00631CAu)


#define MC33_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF00631CCu)


#define MC33_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF00631CEu)


#define MC33_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF00631D0u)


#define MC33_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF00631D2u)


#define MC33_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF00631D4u)


#define MC33_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF00631D6u)


#define MC33_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF00631D8u)


#define MC33_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF00631DAu)


#define MC33_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF00631A6u)


#define MC33_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF00631DCu)


#define MC33_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF00631DEu)


#define MC33_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF00631E0u)


#define MC33_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF00631E2u)


#define MC33_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF00631E4u)


#define MC33_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF00631E6u)


#define MC33_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF00631E8u)


#define MC33_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF00631EAu)


#define MC33_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF00631ECu)


#define MC33_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF00631EEu)


#define MC33_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF00631A8u)


#define MC33_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF00631AAu)


#define MC33_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF00631ACu)


#define MC33_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF00631AEu)


#define MC33_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF00631B0u)


#define MC33_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF00631B2u)


#define MC33_REVID (*(volatile Ifx_MC_REVID*)0xF006310Cu)







#define MC34_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0063200u)


#define MC34_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0063202u)


#define MC34_ECCD (*(volatile Ifx_MC_ECCD*)0xF0063210u)


#define MC34_ECCS (*(volatile Ifx_MC_ECCS*)0xF006320Eu)


#define MC34_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0063212u)


#define MC34_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0063214u)


#define MC34_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0063216u)


#define MC34_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0063218u)


#define MC34_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF006321Au)


#define MC34_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0063204u)


#define MC34_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0063206u)


#define MC34_RANGE (*(volatile Ifx_MC_RANGE*)0xF0063208u)


#define MC34_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF00632A0u)


#define MC34_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF00632A2u)


#define MC34_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF00632B4u)


#define MC34_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF00632B6u)


#define MC34_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF00632B8u)


#define MC34_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF00632BAu)


#define MC34_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF00632BCu)


#define MC34_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF00632BEu)


#define MC34_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF00632C0u)


#define MC34_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF00632C2u)


#define MC34_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF00632C4u)


#define MC34_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF00632C6u)


#define MC34_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF00632A4u)


#define MC34_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF00632C8u)


#define MC34_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF00632CAu)


#define MC34_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF00632CCu)


#define MC34_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF00632CEu)


#define MC34_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF00632D0u)


#define MC34_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF00632D2u)


#define MC34_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF00632D4u)


#define MC34_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF00632D6u)


#define MC34_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF00632D8u)


#define MC34_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF00632DAu)


#define MC34_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF00632A6u)


#define MC34_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF00632DCu)


#define MC34_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF00632DEu)


#define MC34_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF00632E0u)


#define MC34_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF00632E2u)


#define MC34_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF00632E4u)


#define MC34_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF00632E6u)


#define MC34_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF00632E8u)


#define MC34_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF00632EAu)


#define MC34_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF00632ECu)


#define MC34_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF00632EEu)


#define MC34_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF00632A8u)


#define MC34_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF00632AAu)


#define MC34_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF00632ACu)


#define MC34_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF00632AEu)


#define MC34_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF00632B0u)


#define MC34_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF00632B2u)


#define MC34_REVID (*(volatile Ifx_MC_REVID*)0xF006320Cu)







#define MC35_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0063300u)


#define MC35_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0063302u)


#define MC35_ECCD (*(volatile Ifx_MC_ECCD*)0xF0063310u)


#define MC35_ECCS (*(volatile Ifx_MC_ECCS*)0xF006330Eu)


#define MC35_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0063312u)


#define MC35_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0063314u)


#define MC35_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0063316u)


#define MC35_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0063318u)


#define MC35_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF006331Au)


#define MC35_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0063304u)


#define MC35_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0063306u)


#define MC35_RANGE (*(volatile Ifx_MC_RANGE*)0xF0063308u)


#define MC35_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF00633A0u)


#define MC35_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF00633A2u)


#define MC35_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF00633B4u)


#define MC35_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF00633B6u)


#define MC35_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF00633B8u)


#define MC35_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF00633BAu)


#define MC35_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF00633BCu)


#define MC35_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF00633BEu)


#define MC35_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF00633C0u)


#define MC35_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF00633C2u)


#define MC35_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF00633C4u)


#define MC35_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF00633C6u)


#define MC35_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF00633A4u)


#define MC35_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF00633C8u)


#define MC35_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF00633CAu)


#define MC35_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF00633CCu)


#define MC35_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF00633CEu)


#define MC35_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF00633D0u)


#define MC35_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF00633D2u)


#define MC35_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF00633D4u)


#define MC35_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF00633D6u)


#define MC35_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF00633D8u)


#define MC35_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF00633DAu)


#define MC35_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF00633A6u)


#define MC35_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF00633DCu)


#define MC35_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF00633DEu)


#define MC35_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF00633E0u)


#define MC35_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF00633E2u)


#define MC35_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF00633E4u)


#define MC35_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF00633E6u)


#define MC35_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF00633E8u)


#define MC35_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF00633EAu)


#define MC35_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF00633ECu)


#define MC35_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF00633EEu)


#define MC35_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF00633A8u)


#define MC35_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF00633AAu)


#define MC35_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF00633ACu)


#define MC35_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF00633AEu)


#define MC35_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF00633B0u)


#define MC35_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF00633B2u)


#define MC35_REVID (*(volatile Ifx_MC_REVID*)0xF006330Cu)







#define MC36_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0063400u)


#define MC36_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0063402u)


#define MC36_ECCD (*(volatile Ifx_MC_ECCD*)0xF0063410u)


#define MC36_ECCS (*(volatile Ifx_MC_ECCS*)0xF006340Eu)


#define MC36_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0063412u)


#define MC36_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0063414u)


#define MC36_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0063416u)


#define MC36_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0063418u)


#define MC36_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF006341Au)


#define MC36_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0063404u)


#define MC36_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0063406u)


#define MC36_RANGE (*(volatile Ifx_MC_RANGE*)0xF0063408u)


#define MC36_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF00634A0u)


#define MC36_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF00634A2u)


#define MC36_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF00634B4u)


#define MC36_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF00634B6u)


#define MC36_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF00634B8u)


#define MC36_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF00634BAu)


#define MC36_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF00634BCu)


#define MC36_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF00634BEu)


#define MC36_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF00634C0u)


#define MC36_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF00634C2u)


#define MC36_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF00634C4u)


#define MC36_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF00634C6u)


#define MC36_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF00634A4u)


#define MC36_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF00634C8u)


#define MC36_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF00634CAu)


#define MC36_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF00634CCu)


#define MC36_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF00634CEu)


#define MC36_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF00634D0u)


#define MC36_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF00634D2u)


#define MC36_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF00634D4u)


#define MC36_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF00634D6u)


#define MC36_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF00634D8u)


#define MC36_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF00634DAu)


#define MC36_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF00634A6u)


#define MC36_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF00634DCu)


#define MC36_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF00634DEu)


#define MC36_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF00634E0u)


#define MC36_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF00634E2u)


#define MC36_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF00634E4u)


#define MC36_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF00634E6u)


#define MC36_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF00634E8u)


#define MC36_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF00634EAu)


#define MC36_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF00634ECu)


#define MC36_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF00634EEu)


#define MC36_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF00634A8u)


#define MC36_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF00634AAu)


#define MC36_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF00634ACu)


#define MC36_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF00634AEu)


#define MC36_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF00634B0u)


#define MC36_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF00634B2u)


#define MC36_REVID (*(volatile Ifx_MC_REVID*)0xF006340Cu)







#define MC37_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0063500u)


#define MC37_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0063502u)


#define MC37_ECCD (*(volatile Ifx_MC_ECCD*)0xF0063510u)


#define MC37_ECCS (*(volatile Ifx_MC_ECCS*)0xF006350Eu)


#define MC37_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0063512u)


#define MC37_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0063514u)


#define MC37_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0063516u)


#define MC37_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0063518u)


#define MC37_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF006351Au)


#define MC37_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0063504u)


#define MC37_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0063506u)


#define MC37_RANGE (*(volatile Ifx_MC_RANGE*)0xF0063508u)


#define MC37_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF00635A0u)


#define MC37_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF00635A2u)


#define MC37_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF00635B4u)


#define MC37_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF00635B6u)


#define MC37_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF00635B8u)


#define MC37_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF00635BAu)


#define MC37_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF00635BCu)


#define MC37_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF00635BEu)


#define MC37_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF00635C0u)


#define MC37_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF00635C2u)


#define MC37_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF00635C4u)


#define MC37_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF00635C6u)


#define MC37_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF00635A4u)


#define MC37_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF00635C8u)


#define MC37_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF00635CAu)


#define MC37_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF00635CCu)


#define MC37_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF00635CEu)


#define MC37_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF00635D0u)


#define MC37_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF00635D2u)


#define MC37_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF00635D4u)


#define MC37_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF00635D6u)


#define MC37_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF00635D8u)


#define MC37_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF00635DAu)


#define MC37_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF00635A6u)


#define MC37_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF00635DCu)


#define MC37_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF00635DEu)


#define MC37_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF00635E0u)


#define MC37_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF00635E2u)


#define MC37_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF00635E4u)


#define MC37_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF00635E6u)


#define MC37_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF00635E8u)


#define MC37_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF00635EAu)


#define MC37_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF00635ECu)


#define MC37_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF00635EEu)


#define MC37_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF00635A8u)


#define MC37_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF00635AAu)


#define MC37_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF00635ACu)


#define MC37_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF00635AEu)


#define MC37_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF00635B0u)


#define MC37_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF00635B2u)


#define MC37_REVID (*(volatile Ifx_MC_REVID*)0xF006350Cu)







#define MC38_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0063600u)


#define MC38_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0063602u)


#define MC38_ECCD (*(volatile Ifx_MC_ECCD*)0xF0063610u)


#define MC38_ECCS (*(volatile Ifx_MC_ECCS*)0xF006360Eu)


#define MC38_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0063612u)


#define MC38_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0063614u)


#define MC38_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0063616u)


#define MC38_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0063618u)


#define MC38_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF006361Au)


#define MC38_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0063604u)


#define MC38_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0063606u)


#define MC38_RANGE (*(volatile Ifx_MC_RANGE*)0xF0063608u)


#define MC38_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF00636A0u)


#define MC38_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF00636A2u)


#define MC38_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF00636B4u)


#define MC38_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF00636B6u)


#define MC38_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF00636B8u)


#define MC38_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF00636BAu)


#define MC38_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF00636BCu)


#define MC38_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF00636BEu)


#define MC38_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF00636C0u)


#define MC38_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF00636C2u)


#define MC38_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF00636C4u)


#define MC38_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF00636C6u)


#define MC38_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF00636A4u)


#define MC38_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF00636C8u)


#define MC38_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF00636CAu)


#define MC38_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF00636CCu)


#define MC38_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF00636CEu)


#define MC38_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF00636D0u)


#define MC38_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF00636D2u)


#define MC38_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF00636D4u)


#define MC38_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF00636D6u)


#define MC38_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF00636D8u)


#define MC38_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF00636DAu)


#define MC38_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF00636A6u)


#define MC38_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF00636DCu)


#define MC38_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF00636DEu)


#define MC38_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF00636E0u)


#define MC38_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF00636E2u)


#define MC38_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF00636E4u)


#define MC38_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF00636E6u)


#define MC38_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF00636E8u)


#define MC38_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF00636EAu)


#define MC38_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF00636ECu)


#define MC38_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF00636EEu)


#define MC38_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF00636A8u)


#define MC38_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF00636AAu)


#define MC38_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF00636ACu)


#define MC38_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF00636AEu)


#define MC38_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF00636B0u)


#define MC38_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF00636B2u)


#define MC38_REVID (*(volatile Ifx_MC_REVID*)0xF006360Cu)







#define MC39_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0063700u)


#define MC39_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0063702u)


#define MC39_ECCD (*(volatile Ifx_MC_ECCD*)0xF0063710u)


#define MC39_ECCS (*(volatile Ifx_MC_ECCS*)0xF006370Eu)


#define MC39_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0063712u)


#define MC39_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0063714u)


#define MC39_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0063716u)


#define MC39_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0063718u)


#define MC39_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF006371Au)


#define MC39_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0063704u)


#define MC39_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0063706u)


#define MC39_RANGE (*(volatile Ifx_MC_RANGE*)0xF0063708u)


#define MC39_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF00637A0u)


#define MC39_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF00637A2u)


#define MC39_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF00637B4u)


#define MC39_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF00637B6u)


#define MC39_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF00637B8u)


#define MC39_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF00637BAu)


#define MC39_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF00637BCu)


#define MC39_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF00637BEu)


#define MC39_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF00637C0u)


#define MC39_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF00637C2u)


#define MC39_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF00637C4u)


#define MC39_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF00637C6u)


#define MC39_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF00637A4u)


#define MC39_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF00637C8u)


#define MC39_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF00637CAu)


#define MC39_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF00637CCu)


#define MC39_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF00637CEu)


#define MC39_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF00637D0u)


#define MC39_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF00637D2u)


#define MC39_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF00637D4u)


#define MC39_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF00637D6u)


#define MC39_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF00637D8u)


#define MC39_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF00637DAu)


#define MC39_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF00637A6u)


#define MC39_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF00637DCu)


#define MC39_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF00637DEu)


#define MC39_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF00637E0u)


#define MC39_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF00637E2u)


#define MC39_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF00637E4u)


#define MC39_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF00637E6u)


#define MC39_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF00637E8u)


#define MC39_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF00637EAu)


#define MC39_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF00637ECu)


#define MC39_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF00637EEu)


#define MC39_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF00637A8u)


#define MC39_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF00637AAu)


#define MC39_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF00637ACu)


#define MC39_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF00637AEu)


#define MC39_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF00637B0u)


#define MC39_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF00637B2u)


#define MC39_REVID (*(volatile Ifx_MC_REVID*)0xF006370Cu)







#define MC40_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0063800u)


#define MC40_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0063802u)


#define MC40_ECCD (*(volatile Ifx_MC_ECCD*)0xF0063810u)


#define MC40_ECCS (*(volatile Ifx_MC_ECCS*)0xF006380Eu)


#define MC40_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0063812u)


#define MC40_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0063814u)


#define MC40_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0063816u)


#define MC40_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0063818u)


#define MC40_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF006381Au)


#define MC40_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0063804u)


#define MC40_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0063806u)


#define MC40_RANGE (*(volatile Ifx_MC_RANGE*)0xF0063808u)


#define MC40_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF00638A0u)


#define MC40_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF00638A2u)


#define MC40_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF00638B4u)


#define MC40_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF00638B6u)


#define MC40_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF00638B8u)


#define MC40_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF00638BAu)


#define MC40_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF00638BCu)


#define MC40_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF00638BEu)


#define MC40_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF00638C0u)


#define MC40_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF00638C2u)


#define MC40_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF00638C4u)


#define MC40_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF00638C6u)


#define MC40_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF00638A4u)


#define MC40_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF00638C8u)


#define MC40_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF00638CAu)


#define MC40_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF00638CCu)


#define MC40_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF00638CEu)


#define MC40_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF00638D0u)


#define MC40_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF00638D2u)


#define MC40_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF00638D4u)


#define MC40_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF00638D6u)


#define MC40_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF00638D8u)


#define MC40_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF00638DAu)


#define MC40_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF00638A6u)


#define MC40_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF00638DCu)


#define MC40_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF00638DEu)


#define MC40_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF00638E0u)


#define MC40_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF00638E2u)


#define MC40_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF00638E4u)


#define MC40_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF00638E6u)


#define MC40_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF00638E8u)


#define MC40_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF00638EAu)


#define MC40_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF00638ECu)


#define MC40_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF00638EEu)


#define MC40_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF00638A8u)


#define MC40_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF00638AAu)


#define MC40_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF00638ACu)


#define MC40_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF00638AEu)


#define MC40_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF00638B0u)


#define MC40_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF00638B2u)


#define MC40_REVID (*(volatile Ifx_MC_REVID*)0xF006380Cu)







#define MC41_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0063900u)


#define MC41_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0063902u)


#define MC41_ECCD (*(volatile Ifx_MC_ECCD*)0xF0063910u)


#define MC41_ECCS (*(volatile Ifx_MC_ECCS*)0xF006390Eu)


#define MC41_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0063912u)


#define MC41_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0063914u)


#define MC41_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0063916u)


#define MC41_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0063918u)


#define MC41_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF006391Au)


#define MC41_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0063904u)


#define MC41_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0063906u)


#define MC41_RANGE (*(volatile Ifx_MC_RANGE*)0xF0063908u)


#define MC41_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF00639A0u)


#define MC41_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF00639A2u)


#define MC41_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF00639B4u)


#define MC41_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF00639B6u)


#define MC41_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF00639B8u)


#define MC41_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF00639BAu)


#define MC41_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF00639BCu)


#define MC41_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF00639BEu)


#define MC41_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF00639C0u)


#define MC41_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF00639C2u)


#define MC41_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF00639C4u)


#define MC41_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF00639C6u)


#define MC41_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF00639A4u)


#define MC41_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF00639C8u)


#define MC41_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF00639CAu)


#define MC41_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF00639CCu)


#define MC41_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF00639CEu)


#define MC41_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF00639D0u)


#define MC41_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF00639D2u)


#define MC41_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF00639D4u)


#define MC41_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF00639D6u)


#define MC41_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF00639D8u)


#define MC41_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF00639DAu)


#define MC41_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF00639A6u)


#define MC41_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF00639DCu)


#define MC41_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF00639DEu)


#define MC41_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF00639E0u)


#define MC41_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF00639E2u)


#define MC41_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF00639E4u)


#define MC41_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF00639E6u)


#define MC41_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF00639E8u)


#define MC41_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF00639EAu)


#define MC41_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF00639ECu)


#define MC41_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF00639EEu)


#define MC41_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF00639A8u)


#define MC41_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF00639AAu)


#define MC41_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF00639ACu)


#define MC41_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF00639AEu)


#define MC41_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF00639B0u)


#define MC41_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF00639B2u)


#define MC41_REVID (*(volatile Ifx_MC_REVID*)0xF006390Cu)







#define MC42_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0063A00u)


#define MC42_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0063A02u)


#define MC42_ECCD (*(volatile Ifx_MC_ECCD*)0xF0063A10u)


#define MC42_ECCS (*(volatile Ifx_MC_ECCS*)0xF0063A0Eu)


#define MC42_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0063A12u)


#define MC42_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0063A14u)


#define MC42_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0063A16u)


#define MC42_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0063A18u)


#define MC42_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF0063A1Au)


#define MC42_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0063A04u)


#define MC42_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0063A06u)


#define MC42_RANGE (*(volatile Ifx_MC_RANGE*)0xF0063A08u)


#define MC42_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF0063AA0u)


#define MC42_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF0063AA2u)


#define MC42_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF0063AB4u)


#define MC42_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF0063AB6u)


#define MC42_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF0063AB8u)


#define MC42_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF0063ABAu)


#define MC42_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF0063ABCu)


#define MC42_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF0063ABEu)


#define MC42_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF0063AC0u)


#define MC42_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF0063AC2u)


#define MC42_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF0063AC4u)


#define MC42_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF0063AC6u)


#define MC42_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF0063AA4u)


#define MC42_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF0063AC8u)


#define MC42_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF0063ACAu)


#define MC42_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF0063ACCu)


#define MC42_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF0063ACEu)


#define MC42_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF0063AD0u)


#define MC42_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF0063AD2u)


#define MC42_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF0063AD4u)


#define MC42_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF0063AD6u)


#define MC42_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF0063AD8u)


#define MC42_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF0063ADAu)


#define MC42_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF0063AA6u)


#define MC42_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF0063ADCu)


#define MC42_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF0063ADEu)


#define MC42_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF0063AE0u)


#define MC42_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF0063AE2u)


#define MC42_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF0063AE4u)


#define MC42_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF0063AE6u)


#define MC42_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF0063AE8u)


#define MC42_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF0063AEAu)


#define MC42_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF0063AECu)


#define MC42_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF0063AEEu)


#define MC42_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF0063AA8u)


#define MC42_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF0063AAAu)


#define MC42_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF0063AACu)


#define MC42_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF0063AAEu)


#define MC42_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF0063AB0u)


#define MC42_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF0063AB2u)


#define MC42_REVID (*(volatile Ifx_MC_REVID*)0xF0063A0Cu)







#define MC43_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0063B00u)


#define MC43_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0063B02u)


#define MC43_ECCD (*(volatile Ifx_MC_ECCD*)0xF0063B10u)


#define MC43_ECCS (*(volatile Ifx_MC_ECCS*)0xF0063B0Eu)


#define MC43_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0063B12u)


#define MC43_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0063B14u)


#define MC43_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0063B16u)


#define MC43_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0063B18u)


#define MC43_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF0063B1Au)


#define MC43_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0063B04u)


#define MC43_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0063B06u)


#define MC43_RANGE (*(volatile Ifx_MC_RANGE*)0xF0063B08u)


#define MC43_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF0063BA0u)


#define MC43_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF0063BA2u)


#define MC43_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF0063BB4u)


#define MC43_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF0063BB6u)


#define MC43_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF0063BB8u)


#define MC43_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF0063BBAu)


#define MC43_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF0063BBCu)


#define MC43_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF0063BBEu)


#define MC43_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF0063BC0u)


#define MC43_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF0063BC2u)


#define MC43_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF0063BC4u)


#define MC43_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF0063BC6u)


#define MC43_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF0063BA4u)


#define MC43_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF0063BC8u)


#define MC43_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF0063BCAu)


#define MC43_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF0063BCCu)


#define MC43_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF0063BCEu)


#define MC43_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF0063BD0u)


#define MC43_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF0063BD2u)


#define MC43_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF0063BD4u)


#define MC43_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF0063BD6u)


#define MC43_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF0063BD8u)


#define MC43_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF0063BDAu)


#define MC43_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF0063BA6u)


#define MC43_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF0063BDCu)


#define MC43_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF0063BDEu)


#define MC43_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF0063BE0u)


#define MC43_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF0063BE2u)


#define MC43_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF0063BE4u)


#define MC43_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF0063BE6u)


#define MC43_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF0063BE8u)


#define MC43_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF0063BEAu)


#define MC43_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF0063BECu)


#define MC43_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF0063BEEu)


#define MC43_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF0063BA8u)


#define MC43_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF0063BAAu)


#define MC43_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF0063BACu)


#define MC43_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF0063BAEu)


#define MC43_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF0063BB0u)


#define MC43_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF0063BB2u)


#define MC43_REVID (*(volatile Ifx_MC_REVID*)0xF0063B0Cu)







#define MC44_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0063C00u)


#define MC44_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0063C02u)


#define MC44_ECCD (*(volatile Ifx_MC_ECCD*)0xF0063C10u)


#define MC44_ECCS (*(volatile Ifx_MC_ECCS*)0xF0063C0Eu)


#define MC44_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0063C12u)


#define MC44_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0063C14u)


#define MC44_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0063C16u)


#define MC44_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0063C18u)


#define MC44_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF0063C1Au)


#define MC44_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0063C04u)


#define MC44_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0063C06u)


#define MC44_RANGE (*(volatile Ifx_MC_RANGE*)0xF0063C08u)


#define MC44_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF0063CA0u)


#define MC44_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF0063CA2u)


#define MC44_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF0063CB4u)


#define MC44_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF0063CB6u)


#define MC44_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF0063CB8u)


#define MC44_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF0063CBAu)


#define MC44_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF0063CBCu)


#define MC44_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF0063CBEu)


#define MC44_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF0063CC0u)


#define MC44_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF0063CC2u)


#define MC44_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF0063CC4u)


#define MC44_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF0063CC6u)


#define MC44_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF0063CA4u)


#define MC44_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF0063CC8u)


#define MC44_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF0063CCAu)


#define MC44_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF0063CCCu)


#define MC44_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF0063CCEu)


#define MC44_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF0063CD0u)


#define MC44_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF0063CD2u)


#define MC44_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF0063CD4u)


#define MC44_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF0063CD6u)


#define MC44_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF0063CD8u)


#define MC44_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF0063CDAu)


#define MC44_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF0063CA6u)


#define MC44_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF0063CDCu)


#define MC44_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF0063CDEu)


#define MC44_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF0063CE0u)


#define MC44_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF0063CE2u)


#define MC44_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF0063CE4u)


#define MC44_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF0063CE6u)


#define MC44_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF0063CE8u)


#define MC44_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF0063CEAu)


#define MC44_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF0063CECu)


#define MC44_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF0063CEEu)


#define MC44_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF0063CA8u)


#define MC44_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF0063CAAu)


#define MC44_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF0063CACu)


#define MC44_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF0063CAEu)


#define MC44_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF0063CB0u)


#define MC44_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF0063CB2u)


#define MC44_REVID (*(volatile Ifx_MC_REVID*)0xF0063C0Cu)







#define MC45_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0063D00u)


#define MC45_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0063D02u)


#define MC45_ECCD (*(volatile Ifx_MC_ECCD*)0xF0063D10u)


#define MC45_ECCS (*(volatile Ifx_MC_ECCS*)0xF0063D0Eu)


#define MC45_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0063D12u)


#define MC45_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0063D14u)


#define MC45_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0063D16u)


#define MC45_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0063D18u)


#define MC45_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF0063D1Au)


#define MC45_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0063D04u)


#define MC45_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0063D06u)


#define MC45_RANGE (*(volatile Ifx_MC_RANGE*)0xF0063D08u)


#define MC45_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF0063DA0u)


#define MC45_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF0063DA2u)


#define MC45_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF0063DB4u)


#define MC45_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF0063DB6u)


#define MC45_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF0063DB8u)


#define MC45_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF0063DBAu)


#define MC45_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF0063DBCu)


#define MC45_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF0063DBEu)


#define MC45_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF0063DC0u)


#define MC45_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF0063DC2u)


#define MC45_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF0063DC4u)


#define MC45_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF0063DC6u)


#define MC45_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF0063DA4u)


#define MC45_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF0063DC8u)


#define MC45_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF0063DCAu)


#define MC45_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF0063DCCu)


#define MC45_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF0063DCEu)


#define MC45_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF0063DD0u)


#define MC45_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF0063DD2u)


#define MC45_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF0063DD4u)


#define MC45_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF0063DD6u)


#define MC45_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF0063DD8u)


#define MC45_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF0063DDAu)


#define MC45_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF0063DA6u)


#define MC45_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF0063DDCu)


#define MC45_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF0063DDEu)


#define MC45_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF0063DE0u)


#define MC45_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF0063DE2u)


#define MC45_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF0063DE4u)


#define MC45_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF0063DE6u)


#define MC45_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF0063DE8u)


#define MC45_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF0063DEAu)


#define MC45_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF0063DECu)


#define MC45_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF0063DEEu)


#define MC45_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF0063DA8u)


#define MC45_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF0063DAAu)


#define MC45_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF0063DACu)


#define MC45_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF0063DAEu)


#define MC45_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF0063DB0u)


#define MC45_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF0063DB2u)


#define MC45_REVID (*(volatile Ifx_MC_REVID*)0xF0063D0Cu)







#define MC46_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0063E00u)


#define MC46_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0063E02u)


#define MC46_ECCD (*(volatile Ifx_MC_ECCD*)0xF0063E10u)


#define MC46_ECCS (*(volatile Ifx_MC_ECCS*)0xF0063E0Eu)


#define MC46_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0063E12u)


#define MC46_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0063E14u)


#define MC46_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0063E16u)


#define MC46_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0063E18u)


#define MC46_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF0063E1Au)


#define MC46_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0063E04u)


#define MC46_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0063E06u)


#define MC46_RANGE (*(volatile Ifx_MC_RANGE*)0xF0063E08u)


#define MC46_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF0063EA0u)


#define MC46_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF0063EA2u)


#define MC46_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF0063EB4u)


#define MC46_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF0063EB6u)


#define MC46_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF0063EB8u)


#define MC46_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF0063EBAu)


#define MC46_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF0063EBCu)


#define MC46_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF0063EBEu)


#define MC46_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF0063EC0u)


#define MC46_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF0063EC2u)


#define MC46_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF0063EC4u)


#define MC46_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF0063EC6u)


#define MC46_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF0063EA4u)


#define MC46_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF0063EC8u)


#define MC46_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF0063ECAu)


#define MC46_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF0063ECCu)


#define MC46_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF0063ECEu)


#define MC46_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF0063ED0u)


#define MC46_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF0063ED2u)


#define MC46_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF0063ED4u)


#define MC46_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF0063ED6u)


#define MC46_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF0063ED8u)


#define MC46_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF0063EDAu)


#define MC46_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF0063EA6u)


#define MC46_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF0063EDCu)


#define MC46_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF0063EDEu)


#define MC46_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF0063EE0u)


#define MC46_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF0063EE2u)


#define MC46_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF0063EE4u)


#define MC46_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF0063EE6u)


#define MC46_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF0063EE8u)


#define MC46_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF0063EEAu)


#define MC46_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF0063EECu)


#define MC46_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF0063EEEu)


#define MC46_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF0063EA8u)


#define MC46_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF0063EAAu)


#define MC46_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF0063EACu)


#define MC46_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF0063EAEu)


#define MC46_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF0063EB0u)


#define MC46_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF0063EB2u)


#define MC46_REVID (*(volatile Ifx_MC_REVID*)0xF0063E0Cu)







#define MC47_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0063F00u)


#define MC47_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0063F02u)


#define MC47_ECCD (*(volatile Ifx_MC_ECCD*)0xF0063F10u)


#define MC47_ECCS (*(volatile Ifx_MC_ECCS*)0xF0063F0Eu)


#define MC47_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0063F12u)


#define MC47_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0063F14u)


#define MC47_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0063F16u)


#define MC47_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0063F18u)


#define MC47_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF0063F1Au)


#define MC47_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0063F04u)


#define MC47_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0063F06u)


#define MC47_RANGE (*(volatile Ifx_MC_RANGE*)0xF0063F08u)


#define MC47_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF0063FA0u)


#define MC47_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF0063FA2u)


#define MC47_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF0063FB4u)


#define MC47_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF0063FB6u)


#define MC47_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF0063FB8u)


#define MC47_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF0063FBAu)


#define MC47_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF0063FBCu)


#define MC47_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF0063FBEu)


#define MC47_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF0063FC0u)


#define MC47_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF0063FC2u)


#define MC47_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF0063FC4u)


#define MC47_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF0063FC6u)


#define MC47_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF0063FA4u)


#define MC47_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF0063FC8u)


#define MC47_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF0063FCAu)


#define MC47_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF0063FCCu)


#define MC47_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF0063FCEu)


#define MC47_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF0063FD0u)


#define MC47_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF0063FD2u)


#define MC47_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF0063FD4u)


#define MC47_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF0063FD6u)


#define MC47_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF0063FD8u)


#define MC47_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF0063FDAu)


#define MC47_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF0063FA6u)


#define MC47_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF0063FDCu)


#define MC47_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF0063FDEu)


#define MC47_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF0063FE0u)


#define MC47_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF0063FE2u)


#define MC47_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF0063FE4u)


#define MC47_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF0063FE6u)


#define MC47_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF0063FE8u)


#define MC47_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF0063FEAu)


#define MC47_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF0063FECu)


#define MC47_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF0063FEEu)


#define MC47_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF0063FA8u)


#define MC47_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF0063FAAu)


#define MC47_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF0063FACu)


#define MC47_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF0063FAEu)


#define MC47_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF0063FB0u)


#define MC47_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF0063FB2u)


#define MC47_REVID (*(volatile Ifx_MC_REVID*)0xF0063F0Cu)







#define MC48_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0064000u)


#define MC48_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0064002u)


#define MC48_ECCD (*(volatile Ifx_MC_ECCD*)0xF0064010u)


#define MC48_ECCS (*(volatile Ifx_MC_ECCS*)0xF006400Eu)


#define MC48_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0064012u)


#define MC48_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0064014u)


#define MC48_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0064016u)


#define MC48_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0064018u)


#define MC48_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF006401Au)


#define MC48_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0064004u)


#define MC48_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0064006u)


#define MC48_RANGE (*(volatile Ifx_MC_RANGE*)0xF0064008u)


#define MC48_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF00640A0u)


#define MC48_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF00640A2u)


#define MC48_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF00640B4u)


#define MC48_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF00640B6u)


#define MC48_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF00640B8u)


#define MC48_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF00640BAu)


#define MC48_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF00640BCu)


#define MC48_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF00640BEu)


#define MC48_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF00640C0u)


#define MC48_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF00640C2u)


#define MC48_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF00640C4u)


#define MC48_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF00640C6u)


#define MC48_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF00640A4u)


#define MC48_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF00640C8u)


#define MC48_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF00640CAu)


#define MC48_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF00640CCu)


#define MC48_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF00640CEu)


#define MC48_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF00640D0u)


#define MC48_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF00640D2u)


#define MC48_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF00640D4u)


#define MC48_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF00640D6u)


#define MC48_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF00640D8u)


#define MC48_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF00640DAu)


#define MC48_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF00640A6u)


#define MC48_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF00640DCu)


#define MC48_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF00640DEu)


#define MC48_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF00640E0u)


#define MC48_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF00640E2u)


#define MC48_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF00640E4u)


#define MC48_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF00640E6u)


#define MC48_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF00640E8u)


#define MC48_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF00640EAu)


#define MC48_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF00640ECu)


#define MC48_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF00640EEu)


#define MC48_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF00640A8u)


#define MC48_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF00640AAu)


#define MC48_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF00640ACu)


#define MC48_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF00640AEu)


#define MC48_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF00640B0u)


#define MC48_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF00640B2u)


#define MC48_REVID (*(volatile Ifx_MC_REVID*)0xF006400Cu)







#define MC49_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0064100u)


#define MC49_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0064102u)


#define MC49_ECCD (*(volatile Ifx_MC_ECCD*)0xF0064110u)


#define MC49_ECCS (*(volatile Ifx_MC_ECCS*)0xF006410Eu)


#define MC49_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0064112u)


#define MC49_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0064114u)


#define MC49_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0064116u)


#define MC49_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0064118u)


#define MC49_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF006411Au)


#define MC49_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0064104u)


#define MC49_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0064106u)


#define MC49_RANGE (*(volatile Ifx_MC_RANGE*)0xF0064108u)


#define MC49_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF00641A0u)


#define MC49_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF00641A2u)


#define MC49_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF00641B4u)


#define MC49_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF00641B6u)


#define MC49_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF00641B8u)


#define MC49_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF00641BAu)


#define MC49_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF00641BCu)


#define MC49_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF00641BEu)


#define MC49_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF00641C0u)


#define MC49_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF00641C2u)


#define MC49_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF00641C4u)


#define MC49_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF00641C6u)


#define MC49_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF00641A4u)


#define MC49_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF00641C8u)


#define MC49_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF00641CAu)


#define MC49_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF00641CCu)


#define MC49_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF00641CEu)


#define MC49_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF00641D0u)


#define MC49_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF00641D2u)


#define MC49_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF00641D4u)


#define MC49_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF00641D6u)


#define MC49_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF00641D8u)


#define MC49_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF00641DAu)


#define MC49_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF00641A6u)


#define MC49_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF00641DCu)


#define MC49_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF00641DEu)


#define MC49_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF00641E0u)


#define MC49_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF00641E2u)


#define MC49_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF00641E4u)


#define MC49_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF00641E6u)


#define MC49_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF00641E8u)


#define MC49_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF00641EAu)


#define MC49_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF00641ECu)


#define MC49_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF00641EEu)


#define MC49_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF00641A8u)


#define MC49_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF00641AAu)


#define MC49_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF00641ACu)


#define MC49_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF00641AEu)


#define MC49_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF00641B0u)


#define MC49_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF00641B2u)


#define MC49_REVID (*(volatile Ifx_MC_REVID*)0xF006410Cu)







#define MC50_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0064200u)


#define MC50_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0064202u)


#define MC50_ECCD (*(volatile Ifx_MC_ECCD*)0xF0064210u)


#define MC50_ECCS (*(volatile Ifx_MC_ECCS*)0xF006420Eu)


#define MC50_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0064212u)


#define MC50_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0064214u)


#define MC50_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0064216u)


#define MC50_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0064218u)


#define MC50_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF006421Au)


#define MC50_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0064204u)


#define MC50_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0064206u)


#define MC50_RANGE (*(volatile Ifx_MC_RANGE*)0xF0064208u)


#define MC50_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF00642A0u)


#define MC50_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF00642A2u)


#define MC50_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF00642B4u)


#define MC50_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF00642B6u)


#define MC50_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF00642B8u)


#define MC50_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF00642BAu)


#define MC50_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF00642BCu)


#define MC50_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF00642BEu)


#define MC50_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF00642C0u)


#define MC50_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF00642C2u)


#define MC50_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF00642C4u)


#define MC50_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF00642C6u)


#define MC50_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF00642A4u)


#define MC50_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF00642C8u)


#define MC50_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF00642CAu)


#define MC50_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF00642CCu)


#define MC50_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF00642CEu)


#define MC50_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF00642D0u)


#define MC50_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF00642D2u)


#define MC50_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF00642D4u)


#define MC50_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF00642D6u)


#define MC50_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF00642D8u)


#define MC50_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF00642DAu)


#define MC50_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF00642A6u)


#define MC50_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF00642DCu)


#define MC50_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF00642DEu)


#define MC50_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF00642E0u)


#define MC50_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF00642E2u)


#define MC50_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF00642E4u)


#define MC50_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF00642E6u)


#define MC50_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF00642E8u)


#define MC50_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF00642EAu)


#define MC50_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF00642ECu)


#define MC50_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF00642EEu)


#define MC50_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF00642A8u)


#define MC50_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF00642AAu)


#define MC50_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF00642ACu)


#define MC50_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF00642AEu)


#define MC50_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF00642B0u)


#define MC50_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF00642B2u)


#define MC50_REVID (*(volatile Ifx_MC_REVID*)0xF006420Cu)







#define MC51_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0064300u)


#define MC51_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0064302u)


#define MC51_ECCD (*(volatile Ifx_MC_ECCD*)0xF0064310u)


#define MC51_ECCS (*(volatile Ifx_MC_ECCS*)0xF006430Eu)


#define MC51_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0064312u)


#define MC51_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0064314u)


#define MC51_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0064316u)


#define MC51_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0064318u)


#define MC51_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF006431Au)


#define MC51_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0064304u)


#define MC51_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0064306u)


#define MC51_RANGE (*(volatile Ifx_MC_RANGE*)0xF0064308u)


#define MC51_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF00643A0u)


#define MC51_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF00643A2u)


#define MC51_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF00643B4u)


#define MC51_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF00643B6u)


#define MC51_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF00643B8u)


#define MC51_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF00643BAu)


#define MC51_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF00643BCu)


#define MC51_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF00643BEu)


#define MC51_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF00643C0u)


#define MC51_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF00643C2u)


#define MC51_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF00643C4u)


#define MC51_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF00643C6u)


#define MC51_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF00643A4u)


#define MC51_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF00643C8u)


#define MC51_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF00643CAu)


#define MC51_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF00643CCu)


#define MC51_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF00643CEu)


#define MC51_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF00643D0u)


#define MC51_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF00643D2u)


#define MC51_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF00643D4u)


#define MC51_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF00643D6u)


#define MC51_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF00643D8u)


#define MC51_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF00643DAu)


#define MC51_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF00643A6u)


#define MC51_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF00643DCu)


#define MC51_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF00643DEu)


#define MC51_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF00643E0u)


#define MC51_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF00643E2u)


#define MC51_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF00643E4u)


#define MC51_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF00643E6u)


#define MC51_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF00643E8u)


#define MC51_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF00643EAu)


#define MC51_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF00643ECu)


#define MC51_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF00643EEu)


#define MC51_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF00643A8u)


#define MC51_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF00643AAu)


#define MC51_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF00643ACu)


#define MC51_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF00643AEu)


#define MC51_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF00643B0u)


#define MC51_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF00643B2u)


#define MC51_REVID (*(volatile Ifx_MC_REVID*)0xF006430Cu)







#define MC52_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0064400u)


#define MC52_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0064402u)


#define MC52_ECCD (*(volatile Ifx_MC_ECCD*)0xF0064410u)


#define MC52_ECCS (*(volatile Ifx_MC_ECCS*)0xF006440Eu)


#define MC52_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0064412u)


#define MC52_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0064414u)


#define MC52_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0064416u)


#define MC52_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0064418u)


#define MC52_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF006441Au)


#define MC52_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0064404u)


#define MC52_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0064406u)


#define MC52_RANGE (*(volatile Ifx_MC_RANGE*)0xF0064408u)


#define MC52_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF00644A0u)


#define MC52_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF00644A2u)


#define MC52_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF00644B4u)


#define MC52_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF00644B6u)


#define MC52_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF00644B8u)


#define MC52_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF00644BAu)


#define MC52_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF00644BCu)


#define MC52_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF00644BEu)


#define MC52_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF00644C0u)


#define MC52_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF00644C2u)


#define MC52_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF00644C4u)


#define MC52_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF00644C6u)


#define MC52_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF00644A4u)


#define MC52_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF00644C8u)


#define MC52_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF00644CAu)


#define MC52_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF00644CCu)


#define MC52_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF00644CEu)


#define MC52_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF00644D0u)


#define MC52_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF00644D2u)


#define MC52_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF00644D4u)


#define MC52_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF00644D6u)


#define MC52_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF00644D8u)


#define MC52_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF00644DAu)


#define MC52_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF00644A6u)


#define MC52_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF00644DCu)


#define MC52_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF00644DEu)


#define MC52_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF00644E0u)


#define MC52_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF00644E2u)


#define MC52_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF00644E4u)


#define MC52_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF00644E6u)


#define MC52_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF00644E8u)


#define MC52_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF00644EAu)


#define MC52_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF00644ECu)


#define MC52_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF00644EEu)


#define MC52_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF00644A8u)


#define MC52_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF00644AAu)


#define MC52_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF00644ACu)


#define MC52_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF00644AEu)


#define MC52_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF00644B0u)


#define MC52_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF00644B2u)


#define MC52_REVID (*(volatile Ifx_MC_REVID*)0xF006440Cu)







#define MC53_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0064500u)


#define MC53_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0064502u)


#define MC53_ECCD (*(volatile Ifx_MC_ECCD*)0xF0064510u)


#define MC53_ECCS (*(volatile Ifx_MC_ECCS*)0xF006450Eu)


#define MC53_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0064512u)


#define MC53_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0064514u)


#define MC53_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0064516u)


#define MC53_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0064518u)


#define MC53_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF006451Au)


#define MC53_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0064504u)


#define MC53_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0064506u)


#define MC53_RANGE (*(volatile Ifx_MC_RANGE*)0xF0064508u)


#define MC53_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF00645A0u)


#define MC53_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF00645A2u)


#define MC53_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF00645B4u)


#define MC53_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF00645B6u)


#define MC53_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF00645B8u)


#define MC53_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF00645BAu)


#define MC53_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF00645BCu)


#define MC53_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF00645BEu)


#define MC53_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF00645C0u)


#define MC53_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF00645C2u)


#define MC53_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF00645C4u)


#define MC53_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF00645C6u)


#define MC53_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF00645A4u)


#define MC53_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF00645C8u)


#define MC53_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF00645CAu)


#define MC53_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF00645CCu)


#define MC53_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF00645CEu)


#define MC53_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF00645D0u)


#define MC53_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF00645D2u)


#define MC53_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF00645D4u)


#define MC53_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF00645D6u)


#define MC53_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF00645D8u)


#define MC53_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF00645DAu)


#define MC53_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF00645A6u)


#define MC53_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF00645DCu)


#define MC53_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF00645DEu)


#define MC53_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF00645E0u)


#define MC53_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF00645E2u)


#define MC53_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF00645E4u)


#define MC53_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF00645E6u)


#define MC53_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF00645E8u)


#define MC53_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF00645EAu)


#define MC53_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF00645ECu)


#define MC53_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF00645EEu)


#define MC53_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF00645A8u)


#define MC53_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF00645AAu)


#define MC53_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF00645ACu)


#define MC53_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF00645AEu)


#define MC53_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF00645B0u)


#define MC53_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF00645B2u)


#define MC53_REVID (*(volatile Ifx_MC_REVID*)0xF006450Cu)







#define MC54_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0064600u)


#define MC54_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0064602u)


#define MC54_ECCD (*(volatile Ifx_MC_ECCD*)0xF0064610u)


#define MC54_ECCS (*(volatile Ifx_MC_ECCS*)0xF006460Eu)


#define MC54_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0064612u)


#define MC54_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0064614u)


#define MC54_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0064616u)


#define MC54_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0064618u)


#define MC54_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF006461Au)


#define MC54_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0064604u)


#define MC54_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0064606u)


#define MC54_RANGE (*(volatile Ifx_MC_RANGE*)0xF0064608u)


#define MC54_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF00646A0u)


#define MC54_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF00646A2u)


#define MC54_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF00646B4u)


#define MC54_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF00646B6u)


#define MC54_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF00646B8u)


#define MC54_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF00646BAu)


#define MC54_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF00646BCu)


#define MC54_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF00646BEu)


#define MC54_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF00646C0u)


#define MC54_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF00646C2u)


#define MC54_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF00646C4u)


#define MC54_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF00646C6u)


#define MC54_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF00646A4u)


#define MC54_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF00646C8u)


#define MC54_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF00646CAu)


#define MC54_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF00646CCu)


#define MC54_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF00646CEu)


#define MC54_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF00646D0u)


#define MC54_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF00646D2u)


#define MC54_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF00646D4u)


#define MC54_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF00646D6u)


#define MC54_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF00646D8u)


#define MC54_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF00646DAu)


#define MC54_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF00646A6u)


#define MC54_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF00646DCu)


#define MC54_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF00646DEu)


#define MC54_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF00646E0u)


#define MC54_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF00646E2u)


#define MC54_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF00646E4u)


#define MC54_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF00646E6u)


#define MC54_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF00646E8u)


#define MC54_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF00646EAu)


#define MC54_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF00646ECu)


#define MC54_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF00646EEu)


#define MC54_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF00646A8u)


#define MC54_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF00646AAu)


#define MC54_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF00646ACu)


#define MC54_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF00646AEu)


#define MC54_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF00646B0u)


#define MC54_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF00646B2u)


#define MC54_REVID (*(volatile Ifx_MC_REVID*)0xF006460Cu)







#define MC55_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0064700u)


#define MC55_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0064702u)


#define MC55_ECCD (*(volatile Ifx_MC_ECCD*)0xF0064710u)


#define MC55_ECCS (*(volatile Ifx_MC_ECCS*)0xF006470Eu)


#define MC55_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0064712u)


#define MC55_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0064714u)


#define MC55_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0064716u)


#define MC55_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0064718u)


#define MC55_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF006471Au)


#define MC55_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0064704u)


#define MC55_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0064706u)


#define MC55_RANGE (*(volatile Ifx_MC_RANGE*)0xF0064708u)


#define MC55_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF00647A0u)


#define MC55_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF00647A2u)


#define MC55_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF00647B4u)


#define MC55_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF00647B6u)


#define MC55_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF00647B8u)


#define MC55_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF00647BAu)


#define MC55_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF00647BCu)


#define MC55_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF00647BEu)


#define MC55_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF00647C0u)


#define MC55_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF00647C2u)


#define MC55_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF00647C4u)


#define MC55_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF00647C6u)


#define MC55_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF00647A4u)


#define MC55_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF00647C8u)


#define MC55_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF00647CAu)


#define MC55_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF00647CCu)


#define MC55_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF00647CEu)


#define MC55_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF00647D0u)


#define MC55_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF00647D2u)


#define MC55_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF00647D4u)


#define MC55_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF00647D6u)


#define MC55_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF00647D8u)


#define MC55_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF00647DAu)


#define MC55_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF00647A6u)


#define MC55_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF00647DCu)


#define MC55_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF00647DEu)


#define MC55_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF00647E0u)


#define MC55_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF00647E2u)


#define MC55_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF00647E4u)


#define MC55_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF00647E6u)


#define MC55_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF00647E8u)


#define MC55_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF00647EAu)


#define MC55_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF00647ECu)


#define MC55_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF00647EEu)


#define MC55_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF00647A8u)


#define MC55_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF00647AAu)


#define MC55_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF00647ACu)


#define MC55_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF00647AEu)


#define MC55_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF00647B0u)


#define MC55_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF00647B2u)


#define MC55_REVID (*(volatile Ifx_MC_REVID*)0xF006470Cu)







#define MC56_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0064800u)


#define MC56_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0064802u)


#define MC56_ECCD (*(volatile Ifx_MC_ECCD*)0xF0064810u)


#define MC56_ECCS (*(volatile Ifx_MC_ECCS*)0xF006480Eu)


#define MC56_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0064812u)


#define MC56_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0064814u)


#define MC56_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0064816u)


#define MC56_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0064818u)


#define MC56_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF006481Au)


#define MC56_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0064804u)


#define MC56_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0064806u)


#define MC56_RANGE (*(volatile Ifx_MC_RANGE*)0xF0064808u)


#define MC56_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF00648A0u)


#define MC56_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF00648A2u)


#define MC56_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF00648B4u)


#define MC56_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF00648B6u)


#define MC56_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF00648B8u)


#define MC56_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF00648BAu)


#define MC56_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF00648BCu)


#define MC56_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF00648BEu)


#define MC56_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF00648C0u)


#define MC56_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF00648C2u)


#define MC56_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF00648C4u)


#define MC56_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF00648C6u)


#define MC56_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF00648A4u)


#define MC56_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF00648C8u)


#define MC56_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF00648CAu)


#define MC56_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF00648CCu)


#define MC56_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF00648CEu)


#define MC56_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF00648D0u)


#define MC56_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF00648D2u)


#define MC56_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF00648D4u)


#define MC56_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF00648D6u)


#define MC56_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF00648D8u)


#define MC56_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF00648DAu)


#define MC56_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF00648A6u)


#define MC56_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF00648DCu)


#define MC56_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF00648DEu)


#define MC56_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF00648E0u)


#define MC56_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF00648E2u)


#define MC56_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF00648E4u)


#define MC56_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF00648E6u)


#define MC56_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF00648E8u)


#define MC56_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF00648EAu)


#define MC56_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF00648ECu)


#define MC56_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF00648EEu)


#define MC56_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF00648A8u)


#define MC56_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF00648AAu)


#define MC56_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF00648ACu)


#define MC56_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF00648AEu)


#define MC56_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF00648B0u)


#define MC56_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF00648B2u)


#define MC56_REVID (*(volatile Ifx_MC_REVID*)0xF006480Cu)







#define MC57_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0064900u)


#define MC57_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0064902u)


#define MC57_ECCD (*(volatile Ifx_MC_ECCD*)0xF0064910u)


#define MC57_ECCS (*(volatile Ifx_MC_ECCS*)0xF006490Eu)


#define MC57_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0064912u)


#define MC57_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0064914u)


#define MC57_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0064916u)


#define MC57_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0064918u)


#define MC57_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF006491Au)


#define MC57_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0064904u)


#define MC57_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0064906u)


#define MC57_RANGE (*(volatile Ifx_MC_RANGE*)0xF0064908u)


#define MC57_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF00649A0u)


#define MC57_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF00649A2u)


#define MC57_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF00649B4u)


#define MC57_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF00649B6u)


#define MC57_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF00649B8u)


#define MC57_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF00649BAu)


#define MC57_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF00649BCu)


#define MC57_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF00649BEu)


#define MC57_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF00649C0u)


#define MC57_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF00649C2u)


#define MC57_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF00649C4u)


#define MC57_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF00649C6u)


#define MC57_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF00649A4u)


#define MC57_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF00649C8u)


#define MC57_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF00649CAu)


#define MC57_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF00649CCu)


#define MC57_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF00649CEu)


#define MC57_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF00649D0u)


#define MC57_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF00649D2u)


#define MC57_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF00649D4u)


#define MC57_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF00649D6u)


#define MC57_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF00649D8u)


#define MC57_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF00649DAu)


#define MC57_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF00649A6u)


#define MC57_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF00649DCu)


#define MC57_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF00649DEu)


#define MC57_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF00649E0u)


#define MC57_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF00649E2u)


#define MC57_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF00649E4u)


#define MC57_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF00649E6u)


#define MC57_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF00649E8u)


#define MC57_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF00649EAu)


#define MC57_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF00649ECu)


#define MC57_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF00649EEu)


#define MC57_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF00649A8u)


#define MC57_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF00649AAu)


#define MC57_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF00649ACu)


#define MC57_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF00649AEu)


#define MC57_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF00649B0u)


#define MC57_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF00649B2u)


#define MC57_REVID (*(volatile Ifx_MC_REVID*)0xF006490Cu)







#define MC58_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0064A00u)


#define MC58_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0064A02u)


#define MC58_ECCD (*(volatile Ifx_MC_ECCD*)0xF0064A10u)


#define MC58_ECCS (*(volatile Ifx_MC_ECCS*)0xF0064A0Eu)


#define MC58_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0064A12u)


#define MC58_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0064A14u)


#define MC58_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0064A16u)


#define MC58_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0064A18u)


#define MC58_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF0064A1Au)


#define MC58_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0064A04u)


#define MC58_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0064A06u)


#define MC58_RANGE (*(volatile Ifx_MC_RANGE*)0xF0064A08u)


#define MC58_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF0064AA0u)


#define MC58_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF0064AA2u)


#define MC58_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF0064AB4u)


#define MC58_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF0064AB6u)


#define MC58_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF0064AB8u)


#define MC58_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF0064ABAu)


#define MC58_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF0064ABCu)


#define MC58_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF0064ABEu)


#define MC58_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF0064AC0u)


#define MC58_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF0064AC2u)


#define MC58_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF0064AC4u)


#define MC58_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF0064AC6u)


#define MC58_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF0064AA4u)


#define MC58_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF0064AC8u)


#define MC58_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF0064ACAu)


#define MC58_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF0064ACCu)


#define MC58_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF0064ACEu)


#define MC58_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF0064AD0u)


#define MC58_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF0064AD2u)


#define MC58_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF0064AD4u)


#define MC58_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF0064AD6u)


#define MC58_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF0064AD8u)


#define MC58_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF0064ADAu)


#define MC58_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF0064AA6u)


#define MC58_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF0064ADCu)


#define MC58_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF0064ADEu)


#define MC58_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF0064AE0u)


#define MC58_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF0064AE2u)


#define MC58_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF0064AE4u)


#define MC58_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF0064AE6u)


#define MC58_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF0064AE8u)


#define MC58_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF0064AEAu)


#define MC58_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF0064AECu)


#define MC58_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF0064AEEu)


#define MC58_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF0064AA8u)


#define MC58_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF0064AAAu)


#define MC58_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF0064AACu)


#define MC58_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF0064AAEu)


#define MC58_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF0064AB0u)


#define MC58_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF0064AB2u)


#define MC58_REVID (*(volatile Ifx_MC_REVID*)0xF0064A0Cu)







#define MC59_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0064B00u)


#define MC59_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0064B02u)


#define MC59_ECCD (*(volatile Ifx_MC_ECCD*)0xF0064B10u)


#define MC59_ECCS (*(volatile Ifx_MC_ECCS*)0xF0064B0Eu)


#define MC59_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0064B12u)


#define MC59_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0064B14u)


#define MC59_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0064B16u)


#define MC59_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0064B18u)


#define MC59_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF0064B1Au)


#define MC59_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0064B04u)


#define MC59_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0064B06u)


#define MC59_RANGE (*(volatile Ifx_MC_RANGE*)0xF0064B08u)


#define MC59_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF0064BA0u)


#define MC59_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF0064BA2u)


#define MC59_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF0064BB4u)


#define MC59_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF0064BB6u)


#define MC59_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF0064BB8u)


#define MC59_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF0064BBAu)


#define MC59_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF0064BBCu)


#define MC59_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF0064BBEu)


#define MC59_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF0064BC0u)


#define MC59_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF0064BC2u)


#define MC59_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF0064BC4u)


#define MC59_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF0064BC6u)


#define MC59_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF0064BA4u)


#define MC59_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF0064BC8u)


#define MC59_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF0064BCAu)


#define MC59_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF0064BCCu)


#define MC59_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF0064BCEu)


#define MC59_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF0064BD0u)


#define MC59_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF0064BD2u)


#define MC59_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF0064BD4u)


#define MC59_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF0064BD6u)


#define MC59_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF0064BD8u)


#define MC59_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF0064BDAu)


#define MC59_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF0064BA6u)


#define MC59_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF0064BDCu)


#define MC59_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF0064BDEu)


#define MC59_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF0064BE0u)


#define MC59_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF0064BE2u)


#define MC59_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF0064BE4u)


#define MC59_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF0064BE6u)


#define MC59_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF0064BE8u)


#define MC59_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF0064BEAu)


#define MC59_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF0064BECu)


#define MC59_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF0064BEEu)


#define MC59_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF0064BA8u)


#define MC59_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF0064BAAu)


#define MC59_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF0064BACu)


#define MC59_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF0064BAEu)


#define MC59_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF0064BB0u)


#define MC59_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF0064BB2u)


#define MC59_REVID (*(volatile Ifx_MC_REVID*)0xF0064B0Cu)







#define MC60_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0064C00u)


#define MC60_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0064C02u)


#define MC60_ECCD (*(volatile Ifx_MC_ECCD*)0xF0064C10u)


#define MC60_ECCS (*(volatile Ifx_MC_ECCS*)0xF0064C0Eu)


#define MC60_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0064C12u)


#define MC60_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0064C14u)


#define MC60_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0064C16u)


#define MC60_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0064C18u)


#define MC60_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF0064C1Au)


#define MC60_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0064C04u)


#define MC60_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0064C06u)


#define MC60_RANGE (*(volatile Ifx_MC_RANGE*)0xF0064C08u)


#define MC60_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF0064CA0u)


#define MC60_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF0064CA2u)


#define MC60_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF0064CB4u)


#define MC60_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF0064CB6u)


#define MC60_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF0064CB8u)


#define MC60_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF0064CBAu)


#define MC60_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF0064CBCu)


#define MC60_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF0064CBEu)


#define MC60_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF0064CC0u)


#define MC60_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF0064CC2u)


#define MC60_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF0064CC4u)


#define MC60_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF0064CC6u)


#define MC60_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF0064CA4u)


#define MC60_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF0064CC8u)


#define MC60_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF0064CCAu)


#define MC60_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF0064CCCu)


#define MC60_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF0064CCEu)


#define MC60_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF0064CD0u)


#define MC60_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF0064CD2u)


#define MC60_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF0064CD4u)


#define MC60_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF0064CD6u)


#define MC60_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF0064CD8u)


#define MC60_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF0064CDAu)


#define MC60_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF0064CA6u)


#define MC60_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF0064CDCu)


#define MC60_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF0064CDEu)


#define MC60_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF0064CE0u)


#define MC60_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF0064CE2u)


#define MC60_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF0064CE4u)


#define MC60_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF0064CE6u)


#define MC60_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF0064CE8u)


#define MC60_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF0064CEAu)


#define MC60_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF0064CECu)


#define MC60_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF0064CEEu)


#define MC60_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF0064CA8u)


#define MC60_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF0064CAAu)


#define MC60_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF0064CACu)


#define MC60_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF0064CAEu)


#define MC60_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF0064CB0u)


#define MC60_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF0064CB2u)


#define MC60_REVID (*(volatile Ifx_MC_REVID*)0xF0064C0Cu)







#define MC61_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0064D00u)


#define MC61_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0064D02u)


#define MC61_ECCD (*(volatile Ifx_MC_ECCD*)0xF0064D10u)


#define MC61_ECCS (*(volatile Ifx_MC_ECCS*)0xF0064D0Eu)


#define MC61_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0064D12u)


#define MC61_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0064D14u)


#define MC61_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0064D16u)


#define MC61_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0064D18u)


#define MC61_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF0064D1Au)


#define MC61_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0064D04u)


#define MC61_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0064D06u)


#define MC61_RANGE (*(volatile Ifx_MC_RANGE*)0xF0064D08u)


#define MC61_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF0064DA0u)


#define MC61_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF0064DA2u)


#define MC61_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF0064DB4u)


#define MC61_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF0064DB6u)


#define MC61_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF0064DB8u)


#define MC61_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF0064DBAu)


#define MC61_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF0064DBCu)


#define MC61_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF0064DBEu)


#define MC61_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF0064DC0u)


#define MC61_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF0064DC2u)


#define MC61_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF0064DC4u)


#define MC61_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF0064DC6u)


#define MC61_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF0064DA4u)


#define MC61_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF0064DC8u)


#define MC61_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF0064DCAu)


#define MC61_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF0064DCCu)


#define MC61_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF0064DCEu)


#define MC61_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF0064DD0u)


#define MC61_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF0064DD2u)


#define MC61_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF0064DD4u)


#define MC61_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF0064DD6u)


#define MC61_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF0064DD8u)


#define MC61_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF0064DDAu)


#define MC61_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF0064DA6u)


#define MC61_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF0064DDCu)


#define MC61_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF0064DDEu)


#define MC61_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF0064DE0u)


#define MC61_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF0064DE2u)


#define MC61_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF0064DE4u)


#define MC61_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF0064DE6u)


#define MC61_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF0064DE8u)


#define MC61_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF0064DEAu)


#define MC61_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF0064DECu)


#define MC61_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF0064DEEu)


#define MC61_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF0064DA8u)


#define MC61_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF0064DAAu)


#define MC61_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF0064DACu)


#define MC61_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF0064DAEu)


#define MC61_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF0064DB0u)


#define MC61_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF0064DB2u)


#define MC61_REVID (*(volatile Ifx_MC_REVID*)0xF0064D0Cu)







#define MC62_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0064E00u)


#define MC62_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0064E02u)


#define MC62_ECCD (*(volatile Ifx_MC_ECCD*)0xF0064E10u)


#define MC62_ECCS (*(volatile Ifx_MC_ECCS*)0xF0064E0Eu)


#define MC62_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0064E12u)


#define MC62_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0064E14u)


#define MC62_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0064E16u)


#define MC62_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0064E18u)


#define MC62_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF0064E1Au)


#define MC62_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0064E04u)


#define MC62_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0064E06u)


#define MC62_RANGE (*(volatile Ifx_MC_RANGE*)0xF0064E08u)


#define MC62_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF0064EA0u)


#define MC62_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF0064EA2u)


#define MC62_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF0064EB4u)


#define MC62_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF0064EB6u)


#define MC62_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF0064EB8u)


#define MC62_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF0064EBAu)


#define MC62_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF0064EBCu)


#define MC62_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF0064EBEu)


#define MC62_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF0064EC0u)


#define MC62_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF0064EC2u)


#define MC62_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF0064EC4u)


#define MC62_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF0064EC6u)


#define MC62_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF0064EA4u)


#define MC62_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF0064EC8u)


#define MC62_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF0064ECAu)


#define MC62_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF0064ECCu)


#define MC62_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF0064ECEu)


#define MC62_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF0064ED0u)


#define MC62_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF0064ED2u)


#define MC62_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF0064ED4u)


#define MC62_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF0064ED6u)


#define MC62_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF0064ED8u)


#define MC62_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF0064EDAu)


#define MC62_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF0064EA6u)


#define MC62_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF0064EDCu)


#define MC62_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF0064EDEu)


#define MC62_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF0064EE0u)


#define MC62_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF0064EE2u)


#define MC62_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF0064EE4u)


#define MC62_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF0064EE6u)


#define MC62_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF0064EE8u)


#define MC62_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF0064EEAu)


#define MC62_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF0064EECu)


#define MC62_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF0064EEEu)


#define MC62_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF0064EA8u)


#define MC62_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF0064EAAu)


#define MC62_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF0064EACu)


#define MC62_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF0064EAEu)


#define MC62_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF0064EB0u)


#define MC62_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF0064EB2u)


#define MC62_REVID (*(volatile Ifx_MC_REVID*)0xF0064E0Cu)







#define MC63_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0064F00u)


#define MC63_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0064F02u)


#define MC63_ECCD (*(volatile Ifx_MC_ECCD*)0xF0064F10u)


#define MC63_ECCS (*(volatile Ifx_MC_ECCS*)0xF0064F0Eu)


#define MC63_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0064F12u)


#define MC63_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0064F14u)


#define MC63_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0064F16u)


#define MC63_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0064F18u)


#define MC63_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF0064F1Au)


#define MC63_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0064F04u)


#define MC63_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0064F06u)


#define MC63_RANGE (*(volatile Ifx_MC_RANGE*)0xF0064F08u)


#define MC63_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF0064FA0u)


#define MC63_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF0064FA2u)


#define MC63_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF0064FB4u)


#define MC63_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF0064FB6u)


#define MC63_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF0064FB8u)


#define MC63_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF0064FBAu)


#define MC63_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF0064FBCu)


#define MC63_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF0064FBEu)


#define MC63_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF0064FC0u)


#define MC63_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF0064FC2u)


#define MC63_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF0064FC4u)


#define MC63_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF0064FC6u)


#define MC63_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF0064FA4u)


#define MC63_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF0064FC8u)


#define MC63_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF0064FCAu)


#define MC63_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF0064FCCu)


#define MC63_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF0064FCEu)


#define MC63_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF0064FD0u)


#define MC63_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF0064FD2u)


#define MC63_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF0064FD4u)


#define MC63_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF0064FD6u)


#define MC63_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF0064FD8u)


#define MC63_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF0064FDAu)


#define MC63_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF0064FA6u)


#define MC63_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF0064FDCu)


#define MC63_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF0064FDEu)


#define MC63_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF0064FE0u)


#define MC63_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF0064FE2u)


#define MC63_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF0064FE4u)


#define MC63_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF0064FE6u)


#define MC63_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF0064FE8u)


#define MC63_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF0064FEAu)


#define MC63_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF0064FECu)


#define MC63_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF0064FEEu)


#define MC63_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF0064FA8u)


#define MC63_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF0064FAAu)


#define MC63_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF0064FACu)


#define MC63_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF0064FAEu)


#define MC63_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF0064FB0u)


#define MC63_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF0064FB2u)


#define MC63_REVID (*(volatile Ifx_MC_REVID*)0xF0064F0Cu)







#define MC64_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0065000u)


#define MC64_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0065002u)


#define MC64_ECCD (*(volatile Ifx_MC_ECCD*)0xF0065010u)


#define MC64_ECCS (*(volatile Ifx_MC_ECCS*)0xF006500Eu)


#define MC64_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0065012u)


#define MC64_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0065014u)


#define MC64_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0065016u)


#define MC64_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0065018u)


#define MC64_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF006501Au)


#define MC64_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0065004u)


#define MC64_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0065006u)


#define MC64_RANGE (*(volatile Ifx_MC_RANGE*)0xF0065008u)


#define MC64_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF00650A0u)


#define MC64_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF00650A2u)


#define MC64_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF00650B4u)


#define MC64_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF00650B6u)


#define MC64_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF00650B8u)


#define MC64_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF00650BAu)


#define MC64_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF00650BCu)


#define MC64_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF00650BEu)


#define MC64_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF00650C0u)


#define MC64_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF00650C2u)


#define MC64_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF00650C4u)


#define MC64_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF00650C6u)


#define MC64_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF00650A4u)


#define MC64_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF00650C8u)


#define MC64_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF00650CAu)


#define MC64_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF00650CCu)


#define MC64_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF00650CEu)


#define MC64_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF00650D0u)


#define MC64_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF00650D2u)


#define MC64_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF00650D4u)


#define MC64_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF00650D6u)


#define MC64_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF00650D8u)


#define MC64_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF00650DAu)


#define MC64_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF00650A6u)


#define MC64_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF00650DCu)


#define MC64_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF00650DEu)


#define MC64_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF00650E0u)


#define MC64_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF00650E2u)


#define MC64_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF00650E4u)


#define MC64_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF00650E6u)


#define MC64_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF00650E8u)


#define MC64_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF00650EAu)


#define MC64_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF00650ECu)


#define MC64_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF00650EEu)


#define MC64_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF00650A8u)


#define MC64_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF00650AAu)


#define MC64_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF00650ACu)


#define MC64_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF00650AEu)


#define MC64_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF00650B0u)


#define MC64_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF00650B2u)


#define MC64_REVID (*(volatile Ifx_MC_REVID*)0xF006500Cu)







#define MC65_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0065100u)


#define MC65_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0065102u)


#define MC65_ECCD (*(volatile Ifx_MC_ECCD*)0xF0065110u)


#define MC65_ECCS (*(volatile Ifx_MC_ECCS*)0xF006510Eu)


#define MC65_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0065112u)


#define MC65_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0065114u)


#define MC65_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0065116u)


#define MC65_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0065118u)


#define MC65_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF006511Au)


#define MC65_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0065104u)


#define MC65_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0065106u)


#define MC65_RANGE (*(volatile Ifx_MC_RANGE*)0xF0065108u)


#define MC65_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF00651A0u)


#define MC65_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF00651A2u)


#define MC65_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF00651B4u)


#define MC65_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF00651B6u)


#define MC65_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF00651B8u)


#define MC65_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF00651BAu)


#define MC65_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF00651BCu)


#define MC65_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF00651BEu)


#define MC65_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF00651C0u)


#define MC65_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF00651C2u)


#define MC65_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF00651C4u)


#define MC65_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF00651C6u)


#define MC65_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF00651A4u)


#define MC65_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF00651C8u)


#define MC65_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF00651CAu)


#define MC65_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF00651CCu)


#define MC65_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF00651CEu)


#define MC65_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF00651D0u)


#define MC65_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF00651D2u)


#define MC65_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF00651D4u)


#define MC65_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF00651D6u)


#define MC65_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF00651D8u)


#define MC65_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF00651DAu)


#define MC65_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF00651A6u)


#define MC65_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF00651DCu)


#define MC65_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF00651DEu)


#define MC65_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF00651E0u)


#define MC65_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF00651E2u)


#define MC65_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF00651E4u)


#define MC65_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF00651E6u)


#define MC65_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF00651E8u)


#define MC65_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF00651EAu)


#define MC65_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF00651ECu)


#define MC65_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF00651EEu)


#define MC65_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF00651A8u)


#define MC65_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF00651AAu)


#define MC65_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF00651ACu)


#define MC65_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF00651AEu)


#define MC65_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF00651B0u)


#define MC65_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF00651B2u)


#define MC65_REVID (*(volatile Ifx_MC_REVID*)0xF006510Cu)







#define MC66_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0065200u)


#define MC66_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0065202u)


#define MC66_ECCD (*(volatile Ifx_MC_ECCD*)0xF0065210u)


#define MC66_ECCS (*(volatile Ifx_MC_ECCS*)0xF006520Eu)


#define MC66_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0065212u)


#define MC66_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0065214u)


#define MC66_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0065216u)


#define MC66_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0065218u)


#define MC66_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF006521Au)


#define MC66_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0065204u)


#define MC66_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0065206u)


#define MC66_RANGE (*(volatile Ifx_MC_RANGE*)0xF0065208u)


#define MC66_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF00652A0u)


#define MC66_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF00652A2u)


#define MC66_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF00652B4u)


#define MC66_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF00652B6u)


#define MC66_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF00652B8u)


#define MC66_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF00652BAu)


#define MC66_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF00652BCu)


#define MC66_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF00652BEu)


#define MC66_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF00652C0u)


#define MC66_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF00652C2u)


#define MC66_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF00652C4u)


#define MC66_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF00652C6u)


#define MC66_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF00652A4u)


#define MC66_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF00652C8u)


#define MC66_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF00652CAu)


#define MC66_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF00652CCu)


#define MC66_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF00652CEu)


#define MC66_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF00652D0u)


#define MC66_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF00652D2u)


#define MC66_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF00652D4u)


#define MC66_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF00652D6u)


#define MC66_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF00652D8u)


#define MC66_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF00652DAu)


#define MC66_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF00652A6u)


#define MC66_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF00652DCu)


#define MC66_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF00652DEu)


#define MC66_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF00652E0u)


#define MC66_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF00652E2u)


#define MC66_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF00652E4u)


#define MC66_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF00652E6u)


#define MC66_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF00652E8u)


#define MC66_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF00652EAu)


#define MC66_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF00652ECu)


#define MC66_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF00652EEu)


#define MC66_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF00652A8u)


#define MC66_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF00652AAu)


#define MC66_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF00652ACu)


#define MC66_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF00652AEu)


#define MC66_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF00652B0u)


#define MC66_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF00652B2u)


#define MC66_REVID (*(volatile Ifx_MC_REVID*)0xF006520Cu)







#define MC67_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0065300u)


#define MC67_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0065302u)


#define MC67_ECCD (*(volatile Ifx_MC_ECCD*)0xF0065310u)


#define MC67_ECCS (*(volatile Ifx_MC_ECCS*)0xF006530Eu)


#define MC67_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0065312u)


#define MC67_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0065314u)


#define MC67_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0065316u)


#define MC67_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0065318u)


#define MC67_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF006531Au)


#define MC67_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0065304u)


#define MC67_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0065306u)


#define MC67_RANGE (*(volatile Ifx_MC_RANGE*)0xF0065308u)


#define MC67_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF00653A0u)


#define MC67_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF00653A2u)


#define MC67_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF00653B4u)


#define MC67_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF00653B6u)


#define MC67_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF00653B8u)


#define MC67_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF00653BAu)


#define MC67_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF00653BCu)


#define MC67_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF00653BEu)


#define MC67_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF00653C0u)


#define MC67_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF00653C2u)


#define MC67_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF00653C4u)


#define MC67_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF00653C6u)


#define MC67_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF00653A4u)


#define MC67_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF00653C8u)


#define MC67_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF00653CAu)


#define MC67_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF00653CCu)


#define MC67_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF00653CEu)


#define MC67_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF00653D0u)


#define MC67_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF00653D2u)


#define MC67_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF00653D4u)


#define MC67_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF00653D6u)


#define MC67_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF00653D8u)


#define MC67_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF00653DAu)


#define MC67_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF00653A6u)


#define MC67_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF00653DCu)


#define MC67_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF00653DEu)


#define MC67_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF00653E0u)


#define MC67_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF00653E2u)


#define MC67_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF00653E4u)


#define MC67_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF00653E6u)


#define MC67_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF00653E8u)


#define MC67_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF00653EAu)


#define MC67_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF00653ECu)


#define MC67_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF00653EEu)


#define MC67_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF00653A8u)


#define MC67_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF00653AAu)


#define MC67_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF00653ACu)


#define MC67_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF00653AEu)


#define MC67_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF00653B0u)


#define MC67_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF00653B2u)


#define MC67_REVID (*(volatile Ifx_MC_REVID*)0xF006530Cu)







#define MC68_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0065400u)


#define MC68_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0065402u)


#define MC68_ECCD (*(volatile Ifx_MC_ECCD*)0xF0065410u)


#define MC68_ECCS (*(volatile Ifx_MC_ECCS*)0xF006540Eu)


#define MC68_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0065412u)


#define MC68_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0065414u)


#define MC68_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0065416u)


#define MC68_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0065418u)


#define MC68_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF006541Au)


#define MC68_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0065404u)


#define MC68_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0065406u)


#define MC68_RANGE (*(volatile Ifx_MC_RANGE*)0xF0065408u)


#define MC68_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF00654A0u)


#define MC68_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF00654A2u)


#define MC68_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF00654B4u)


#define MC68_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF00654B6u)


#define MC68_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF00654B8u)


#define MC68_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF00654BAu)


#define MC68_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF00654BCu)


#define MC68_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF00654BEu)


#define MC68_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF00654C0u)


#define MC68_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF00654C2u)


#define MC68_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF00654C4u)


#define MC68_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF00654C6u)


#define MC68_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF00654A4u)


#define MC68_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF00654C8u)


#define MC68_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF00654CAu)


#define MC68_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF00654CCu)


#define MC68_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF00654CEu)


#define MC68_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF00654D0u)


#define MC68_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF00654D2u)


#define MC68_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF00654D4u)


#define MC68_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF00654D6u)


#define MC68_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF00654D8u)


#define MC68_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF00654DAu)


#define MC68_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF00654A6u)


#define MC68_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF00654DCu)


#define MC68_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF00654DEu)


#define MC68_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF00654E0u)


#define MC68_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF00654E2u)


#define MC68_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF00654E4u)


#define MC68_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF00654E6u)


#define MC68_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF00654E8u)


#define MC68_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF00654EAu)


#define MC68_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF00654ECu)


#define MC68_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF00654EEu)


#define MC68_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF00654A8u)


#define MC68_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF00654AAu)


#define MC68_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF00654ACu)


#define MC68_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF00654AEu)


#define MC68_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF00654B0u)


#define MC68_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF00654B2u)


#define MC68_REVID (*(volatile Ifx_MC_REVID*)0xF006540Cu)







#define MC69_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0065500u)


#define MC69_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0065502u)


#define MC69_ECCD (*(volatile Ifx_MC_ECCD*)0xF0065510u)


#define MC69_ECCS (*(volatile Ifx_MC_ECCS*)0xF006550Eu)


#define MC69_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0065512u)


#define MC69_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0065514u)


#define MC69_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0065516u)


#define MC69_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0065518u)


#define MC69_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF006551Au)


#define MC69_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0065504u)


#define MC69_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0065506u)


#define MC69_RANGE (*(volatile Ifx_MC_RANGE*)0xF0065508u)


#define MC69_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF00655A0u)


#define MC69_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF00655A2u)


#define MC69_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF00655B4u)


#define MC69_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF00655B6u)


#define MC69_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF00655B8u)


#define MC69_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF00655BAu)


#define MC69_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF00655BCu)


#define MC69_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF00655BEu)


#define MC69_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF00655C0u)


#define MC69_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF00655C2u)


#define MC69_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF00655C4u)


#define MC69_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF00655C6u)


#define MC69_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF00655A4u)


#define MC69_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF00655C8u)


#define MC69_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF00655CAu)


#define MC69_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF00655CCu)


#define MC69_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF00655CEu)


#define MC69_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF00655D0u)


#define MC69_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF00655D2u)


#define MC69_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF00655D4u)


#define MC69_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF00655D6u)


#define MC69_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF00655D8u)


#define MC69_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF00655DAu)


#define MC69_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF00655A6u)


#define MC69_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF00655DCu)


#define MC69_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF00655DEu)


#define MC69_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF00655E0u)


#define MC69_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF00655E2u)


#define MC69_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF00655E4u)


#define MC69_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF00655E6u)


#define MC69_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF00655E8u)


#define MC69_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF00655EAu)


#define MC69_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF00655ECu)


#define MC69_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF00655EEu)


#define MC69_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF00655A8u)


#define MC69_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF00655AAu)


#define MC69_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF00655ACu)


#define MC69_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF00655AEu)


#define MC69_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF00655B0u)


#define MC69_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF00655B2u)


#define MC69_REVID (*(volatile Ifx_MC_REVID*)0xF006550Cu)







#define MC70_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0065600u)


#define MC70_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0065602u)


#define MC70_ECCD (*(volatile Ifx_MC_ECCD*)0xF0065610u)


#define MC70_ECCS (*(volatile Ifx_MC_ECCS*)0xF006560Eu)


#define MC70_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0065612u)


#define MC70_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0065614u)


#define MC70_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0065616u)


#define MC70_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0065618u)


#define MC70_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF006561Au)


#define MC70_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0065604u)


#define MC70_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0065606u)


#define MC70_RANGE (*(volatile Ifx_MC_RANGE*)0xF0065608u)


#define MC70_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF00656A0u)


#define MC70_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF00656A2u)


#define MC70_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF00656B4u)


#define MC70_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF00656B6u)


#define MC70_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF00656B8u)


#define MC70_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF00656BAu)


#define MC70_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF00656BCu)


#define MC70_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF00656BEu)


#define MC70_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF00656C0u)


#define MC70_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF00656C2u)


#define MC70_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF00656C4u)


#define MC70_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF00656C6u)


#define MC70_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF00656A4u)


#define MC70_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF00656C8u)


#define MC70_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF00656CAu)


#define MC70_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF00656CCu)


#define MC70_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF00656CEu)


#define MC70_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF00656D0u)


#define MC70_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF00656D2u)


#define MC70_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF00656D4u)


#define MC70_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF00656D6u)


#define MC70_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF00656D8u)


#define MC70_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF00656DAu)


#define MC70_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF00656A6u)


#define MC70_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF00656DCu)


#define MC70_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF00656DEu)


#define MC70_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF00656E0u)


#define MC70_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF00656E2u)


#define MC70_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF00656E4u)


#define MC70_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF00656E6u)


#define MC70_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF00656E8u)


#define MC70_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF00656EAu)


#define MC70_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF00656ECu)


#define MC70_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF00656EEu)


#define MC70_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF00656A8u)


#define MC70_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF00656AAu)


#define MC70_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF00656ACu)


#define MC70_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF00656AEu)


#define MC70_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF00656B0u)


#define MC70_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF00656B2u)


#define MC70_REVID (*(volatile Ifx_MC_REVID*)0xF006560Cu)







#define MC71_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0065700u)


#define MC71_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0065702u)


#define MC71_ECCD (*(volatile Ifx_MC_ECCD*)0xF0065710u)


#define MC71_ECCS (*(volatile Ifx_MC_ECCS*)0xF006570Eu)


#define MC71_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0065712u)


#define MC71_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0065714u)


#define MC71_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0065716u)


#define MC71_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0065718u)


#define MC71_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF006571Au)


#define MC71_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0065704u)


#define MC71_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0065706u)


#define MC71_RANGE (*(volatile Ifx_MC_RANGE*)0xF0065708u)


#define MC71_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF00657A0u)


#define MC71_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF00657A2u)


#define MC71_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF00657B4u)


#define MC71_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF00657B6u)


#define MC71_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF00657B8u)


#define MC71_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF00657BAu)


#define MC71_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF00657BCu)


#define MC71_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF00657BEu)


#define MC71_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF00657C0u)


#define MC71_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF00657C2u)


#define MC71_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF00657C4u)


#define MC71_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF00657C6u)


#define MC71_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF00657A4u)


#define MC71_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF00657C8u)


#define MC71_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF00657CAu)


#define MC71_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF00657CCu)


#define MC71_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF00657CEu)


#define MC71_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF00657D0u)


#define MC71_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF00657D2u)


#define MC71_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF00657D4u)


#define MC71_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF00657D6u)


#define MC71_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF00657D8u)


#define MC71_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF00657DAu)


#define MC71_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF00657A6u)


#define MC71_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF00657DCu)


#define MC71_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF00657DEu)


#define MC71_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF00657E0u)


#define MC71_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF00657E2u)


#define MC71_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF00657E4u)


#define MC71_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF00657E6u)


#define MC71_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF00657E8u)


#define MC71_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF00657EAu)


#define MC71_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF00657ECu)


#define MC71_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF00657EEu)


#define MC71_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF00657A8u)


#define MC71_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF00657AAu)


#define MC71_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF00657ACu)


#define MC71_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF00657AEu)


#define MC71_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF00657B0u)


#define MC71_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF00657B2u)


#define MC71_REVID (*(volatile Ifx_MC_REVID*)0xF006570Cu)







#define MC72_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0065800u)


#define MC72_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0065802u)


#define MC72_ECCD (*(volatile Ifx_MC_ECCD*)0xF0065810u)


#define MC72_ECCS (*(volatile Ifx_MC_ECCS*)0xF006580Eu)


#define MC72_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0065812u)


#define MC72_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0065814u)


#define MC72_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0065816u)


#define MC72_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0065818u)


#define MC72_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF006581Au)


#define MC72_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0065804u)


#define MC72_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0065806u)


#define MC72_RANGE (*(volatile Ifx_MC_RANGE*)0xF0065808u)


#define MC72_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF00658A0u)


#define MC72_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF00658A2u)


#define MC72_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF00658B4u)


#define MC72_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF00658B6u)


#define MC72_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF00658B8u)


#define MC72_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF00658BAu)


#define MC72_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF00658BCu)


#define MC72_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF00658BEu)


#define MC72_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF00658C0u)


#define MC72_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF00658C2u)


#define MC72_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF00658C4u)


#define MC72_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF00658C6u)


#define MC72_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF00658A4u)


#define MC72_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF00658C8u)


#define MC72_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF00658CAu)


#define MC72_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF00658CCu)


#define MC72_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF00658CEu)


#define MC72_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF00658D0u)


#define MC72_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF00658D2u)


#define MC72_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF00658D4u)


#define MC72_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF00658D6u)


#define MC72_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF00658D8u)


#define MC72_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF00658DAu)


#define MC72_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF00658A6u)


#define MC72_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF00658DCu)


#define MC72_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF00658DEu)


#define MC72_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF00658E0u)


#define MC72_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF00658E2u)


#define MC72_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF00658E4u)


#define MC72_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF00658E6u)


#define MC72_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF00658E8u)


#define MC72_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF00658EAu)


#define MC72_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF00658ECu)


#define MC72_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF00658EEu)


#define MC72_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF00658A8u)


#define MC72_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF00658AAu)


#define MC72_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF00658ACu)


#define MC72_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF00658AEu)


#define MC72_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF00658B0u)


#define MC72_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF00658B2u)


#define MC72_REVID (*(volatile Ifx_MC_REVID*)0xF006580Cu)







#define MC73_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0065900u)


#define MC73_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0065902u)


#define MC73_ECCD (*(volatile Ifx_MC_ECCD*)0xF0065910u)


#define MC73_ECCS (*(volatile Ifx_MC_ECCS*)0xF006590Eu)


#define MC73_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0065912u)


#define MC73_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0065914u)


#define MC73_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0065916u)


#define MC73_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0065918u)


#define MC73_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF006591Au)


#define MC73_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0065904u)


#define MC73_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0065906u)


#define MC73_RANGE (*(volatile Ifx_MC_RANGE*)0xF0065908u)


#define MC73_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF00659A0u)


#define MC73_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF00659A2u)


#define MC73_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF00659B4u)


#define MC73_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF00659B6u)


#define MC73_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF00659B8u)


#define MC73_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF00659BAu)


#define MC73_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF00659BCu)


#define MC73_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF00659BEu)


#define MC73_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF00659C0u)


#define MC73_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF00659C2u)


#define MC73_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF00659C4u)


#define MC73_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF00659C6u)


#define MC73_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF00659A4u)


#define MC73_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF00659C8u)


#define MC73_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF00659CAu)


#define MC73_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF00659CCu)


#define MC73_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF00659CEu)


#define MC73_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF00659D0u)


#define MC73_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF00659D2u)


#define MC73_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF00659D4u)


#define MC73_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF00659D6u)


#define MC73_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF00659D8u)


#define MC73_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF00659DAu)


#define MC73_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF00659A6u)


#define MC73_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF00659DCu)


#define MC73_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF00659DEu)


#define MC73_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF00659E0u)


#define MC73_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF00659E2u)


#define MC73_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF00659E4u)


#define MC73_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF00659E6u)


#define MC73_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF00659E8u)


#define MC73_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF00659EAu)


#define MC73_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF00659ECu)


#define MC73_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF00659EEu)


#define MC73_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF00659A8u)


#define MC73_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF00659AAu)


#define MC73_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF00659ACu)


#define MC73_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF00659AEu)


#define MC73_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF00659B0u)


#define MC73_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF00659B2u)


#define MC73_REVID (*(volatile Ifx_MC_REVID*)0xF006590Cu)







#define MC74_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0065A00u)


#define MC74_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0065A02u)


#define MC74_ECCD (*(volatile Ifx_MC_ECCD*)0xF0065A10u)


#define MC74_ECCS (*(volatile Ifx_MC_ECCS*)0xF0065A0Eu)


#define MC74_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0065A12u)


#define MC74_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0065A14u)


#define MC74_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0065A16u)


#define MC74_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0065A18u)


#define MC74_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF0065A1Au)


#define MC74_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0065A04u)


#define MC74_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0065A06u)


#define MC74_RANGE (*(volatile Ifx_MC_RANGE*)0xF0065A08u)


#define MC74_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF0065AA0u)


#define MC74_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF0065AA2u)


#define MC74_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF0065AB4u)


#define MC74_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF0065AB6u)


#define MC74_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF0065AB8u)


#define MC74_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF0065ABAu)


#define MC74_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF0065ABCu)


#define MC74_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF0065ABEu)


#define MC74_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF0065AC0u)


#define MC74_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF0065AC2u)


#define MC74_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF0065AC4u)


#define MC74_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF0065AC6u)


#define MC74_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF0065AA4u)


#define MC74_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF0065AC8u)


#define MC74_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF0065ACAu)


#define MC74_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF0065ACCu)


#define MC74_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF0065ACEu)


#define MC74_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF0065AD0u)


#define MC74_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF0065AD2u)


#define MC74_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF0065AD4u)


#define MC74_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF0065AD6u)


#define MC74_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF0065AD8u)


#define MC74_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF0065ADAu)


#define MC74_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF0065AA6u)


#define MC74_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF0065ADCu)


#define MC74_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF0065ADEu)


#define MC74_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF0065AE0u)


#define MC74_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF0065AE2u)


#define MC74_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF0065AE4u)


#define MC74_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF0065AE6u)


#define MC74_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF0065AE8u)


#define MC74_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF0065AEAu)


#define MC74_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF0065AECu)


#define MC74_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF0065AEEu)


#define MC74_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF0065AA8u)


#define MC74_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF0065AAAu)


#define MC74_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF0065AACu)


#define MC74_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF0065AAEu)


#define MC74_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF0065AB0u)


#define MC74_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF0065AB2u)


#define MC74_REVID (*(volatile Ifx_MC_REVID*)0xF0065A0Cu)







#define MC75_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0065B00u)


#define MC75_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0065B02u)


#define MC75_ECCD (*(volatile Ifx_MC_ECCD*)0xF0065B10u)


#define MC75_ECCS (*(volatile Ifx_MC_ECCS*)0xF0065B0Eu)


#define MC75_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0065B12u)


#define MC75_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0065B14u)


#define MC75_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0065B16u)


#define MC75_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0065B18u)


#define MC75_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF0065B1Au)


#define MC75_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0065B04u)


#define MC75_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0065B06u)


#define MC75_RANGE (*(volatile Ifx_MC_RANGE*)0xF0065B08u)


#define MC75_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF0065BA0u)


#define MC75_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF0065BA2u)


#define MC75_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF0065BB4u)


#define MC75_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF0065BB6u)


#define MC75_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF0065BB8u)


#define MC75_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF0065BBAu)


#define MC75_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF0065BBCu)


#define MC75_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF0065BBEu)


#define MC75_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF0065BC0u)


#define MC75_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF0065BC2u)


#define MC75_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF0065BC4u)


#define MC75_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF0065BC6u)


#define MC75_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF0065BA4u)


#define MC75_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF0065BC8u)


#define MC75_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF0065BCAu)


#define MC75_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF0065BCCu)


#define MC75_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF0065BCEu)


#define MC75_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF0065BD0u)


#define MC75_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF0065BD2u)


#define MC75_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF0065BD4u)


#define MC75_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF0065BD6u)


#define MC75_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF0065BD8u)


#define MC75_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF0065BDAu)


#define MC75_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF0065BA6u)


#define MC75_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF0065BDCu)


#define MC75_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF0065BDEu)


#define MC75_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF0065BE0u)


#define MC75_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF0065BE2u)


#define MC75_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF0065BE4u)


#define MC75_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF0065BE6u)


#define MC75_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF0065BE8u)


#define MC75_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF0065BEAu)


#define MC75_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF0065BECu)


#define MC75_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF0065BEEu)


#define MC75_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF0065BA8u)


#define MC75_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF0065BAAu)


#define MC75_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF0065BACu)


#define MC75_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF0065BAEu)


#define MC75_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF0065BB0u)


#define MC75_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF0065BB2u)


#define MC75_REVID (*(volatile Ifx_MC_REVID*)0xF0065B0Cu)







#define MC76_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0065C00u)


#define MC76_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0065C02u)


#define MC76_ECCD (*(volatile Ifx_MC_ECCD*)0xF0065C10u)


#define MC76_ECCS (*(volatile Ifx_MC_ECCS*)0xF0065C0Eu)


#define MC76_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0065C12u)


#define MC76_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0065C14u)


#define MC76_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0065C16u)


#define MC76_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0065C18u)


#define MC76_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF0065C1Au)


#define MC76_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0065C04u)


#define MC76_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0065C06u)


#define MC76_RANGE (*(volatile Ifx_MC_RANGE*)0xF0065C08u)


#define MC76_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF0065CA0u)


#define MC76_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF0065CA2u)


#define MC76_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF0065CB4u)


#define MC76_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF0065CB6u)


#define MC76_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF0065CB8u)


#define MC76_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF0065CBAu)


#define MC76_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF0065CBCu)


#define MC76_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF0065CBEu)


#define MC76_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF0065CC0u)


#define MC76_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF0065CC2u)


#define MC76_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF0065CC4u)


#define MC76_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF0065CC6u)


#define MC76_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF0065CA4u)


#define MC76_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF0065CC8u)


#define MC76_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF0065CCAu)


#define MC76_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF0065CCCu)


#define MC76_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF0065CCEu)


#define MC76_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF0065CD0u)


#define MC76_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF0065CD2u)


#define MC76_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF0065CD4u)


#define MC76_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF0065CD6u)


#define MC76_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF0065CD8u)


#define MC76_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF0065CDAu)


#define MC76_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF0065CA6u)


#define MC76_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF0065CDCu)


#define MC76_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF0065CDEu)


#define MC76_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF0065CE0u)


#define MC76_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF0065CE2u)


#define MC76_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF0065CE4u)


#define MC76_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF0065CE6u)


#define MC76_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF0065CE8u)


#define MC76_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF0065CEAu)


#define MC76_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF0065CECu)


#define MC76_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF0065CEEu)


#define MC76_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF0065CA8u)


#define MC76_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF0065CAAu)


#define MC76_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF0065CACu)


#define MC76_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF0065CAEu)


#define MC76_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF0065CB0u)


#define MC76_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF0065CB2u)


#define MC76_REVID (*(volatile Ifx_MC_REVID*)0xF0065C0Cu)







#define MC77_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0065D00u)


#define MC77_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0065D02u)


#define MC77_ECCD (*(volatile Ifx_MC_ECCD*)0xF0065D10u)


#define MC77_ECCS (*(volatile Ifx_MC_ECCS*)0xF0065D0Eu)


#define MC77_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0065D12u)


#define MC77_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0065D14u)


#define MC77_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0065D16u)


#define MC77_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0065D18u)


#define MC77_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF0065D1Au)


#define MC77_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0065D04u)


#define MC77_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0065D06u)


#define MC77_RANGE (*(volatile Ifx_MC_RANGE*)0xF0065D08u)


#define MC77_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF0065DA0u)


#define MC77_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF0065DA2u)


#define MC77_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF0065DB4u)


#define MC77_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF0065DB6u)


#define MC77_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF0065DB8u)


#define MC77_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF0065DBAu)


#define MC77_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF0065DBCu)


#define MC77_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF0065DBEu)


#define MC77_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF0065DC0u)


#define MC77_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF0065DC2u)


#define MC77_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF0065DC4u)


#define MC77_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF0065DC6u)


#define MC77_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF0065DA4u)


#define MC77_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF0065DC8u)


#define MC77_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF0065DCAu)


#define MC77_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF0065DCCu)


#define MC77_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF0065DCEu)


#define MC77_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF0065DD0u)


#define MC77_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF0065DD2u)


#define MC77_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF0065DD4u)


#define MC77_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF0065DD6u)


#define MC77_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF0065DD8u)


#define MC77_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF0065DDAu)


#define MC77_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF0065DA6u)


#define MC77_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF0065DDCu)


#define MC77_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF0065DDEu)


#define MC77_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF0065DE0u)


#define MC77_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF0065DE2u)


#define MC77_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF0065DE4u)


#define MC77_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF0065DE6u)


#define MC77_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF0065DE8u)


#define MC77_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF0065DEAu)


#define MC77_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF0065DECu)


#define MC77_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF0065DEEu)


#define MC77_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF0065DA8u)


#define MC77_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF0065DAAu)


#define MC77_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF0065DACu)


#define MC77_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF0065DAEu)


#define MC77_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF0065DB0u)


#define MC77_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF0065DB2u)


#define MC77_REVID (*(volatile Ifx_MC_REVID*)0xF0065D0Cu)







#define MC78_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0065E00u)


#define MC78_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0065E02u)


#define MC78_ECCD (*(volatile Ifx_MC_ECCD*)0xF0065E10u)


#define MC78_ECCS (*(volatile Ifx_MC_ECCS*)0xF0065E0Eu)


#define MC78_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0065E12u)


#define MC78_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0065E14u)


#define MC78_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0065E16u)


#define MC78_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0065E18u)


#define MC78_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF0065E1Au)


#define MC78_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0065E04u)


#define MC78_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0065E06u)


#define MC78_RANGE (*(volatile Ifx_MC_RANGE*)0xF0065E08u)


#define MC78_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF0065EA0u)


#define MC78_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF0065EA2u)


#define MC78_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF0065EB4u)


#define MC78_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF0065EB6u)


#define MC78_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF0065EB8u)


#define MC78_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF0065EBAu)


#define MC78_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF0065EBCu)


#define MC78_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF0065EBEu)


#define MC78_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF0065EC0u)


#define MC78_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF0065EC2u)


#define MC78_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF0065EC4u)


#define MC78_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF0065EC6u)


#define MC78_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF0065EA4u)


#define MC78_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF0065EC8u)


#define MC78_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF0065ECAu)


#define MC78_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF0065ECCu)


#define MC78_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF0065ECEu)


#define MC78_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF0065ED0u)


#define MC78_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF0065ED2u)


#define MC78_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF0065ED4u)


#define MC78_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF0065ED6u)


#define MC78_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF0065ED8u)


#define MC78_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF0065EDAu)


#define MC78_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF0065EA6u)


#define MC78_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF0065EDCu)


#define MC78_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF0065EDEu)


#define MC78_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF0065EE0u)


#define MC78_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF0065EE2u)


#define MC78_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF0065EE4u)


#define MC78_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF0065EE6u)


#define MC78_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF0065EE8u)


#define MC78_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF0065EEAu)


#define MC78_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF0065EECu)


#define MC78_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF0065EEEu)


#define MC78_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF0065EA8u)


#define MC78_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF0065EAAu)


#define MC78_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF0065EACu)


#define MC78_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF0065EAEu)


#define MC78_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF0065EB0u)


#define MC78_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF0065EB2u)


#define MC78_REVID (*(volatile Ifx_MC_REVID*)0xF0065E0Cu)







#define MC79_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0065F00u)


#define MC79_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0065F02u)


#define MC79_ECCD (*(volatile Ifx_MC_ECCD*)0xF0065F10u)


#define MC79_ECCS (*(volatile Ifx_MC_ECCS*)0xF0065F0Eu)


#define MC79_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0065F12u)


#define MC79_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0065F14u)


#define MC79_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0065F16u)


#define MC79_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0065F18u)


#define MC79_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF0065F1Au)


#define MC79_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0065F04u)


#define MC79_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0065F06u)


#define MC79_RANGE (*(volatile Ifx_MC_RANGE*)0xF0065F08u)


#define MC79_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF0065FA0u)


#define MC79_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF0065FA2u)


#define MC79_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF0065FB4u)


#define MC79_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF0065FB6u)


#define MC79_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF0065FB8u)


#define MC79_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF0065FBAu)


#define MC79_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF0065FBCu)


#define MC79_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF0065FBEu)


#define MC79_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF0065FC0u)


#define MC79_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF0065FC2u)


#define MC79_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF0065FC4u)


#define MC79_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF0065FC6u)


#define MC79_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF0065FA4u)


#define MC79_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF0065FC8u)


#define MC79_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF0065FCAu)


#define MC79_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF0065FCCu)


#define MC79_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF0065FCEu)


#define MC79_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF0065FD0u)


#define MC79_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF0065FD2u)


#define MC79_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF0065FD4u)


#define MC79_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF0065FD6u)


#define MC79_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF0065FD8u)


#define MC79_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF0065FDAu)


#define MC79_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF0065FA6u)


#define MC79_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF0065FDCu)


#define MC79_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF0065FDEu)


#define MC79_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF0065FE0u)


#define MC79_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF0065FE2u)


#define MC79_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF0065FE4u)


#define MC79_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF0065FE6u)


#define MC79_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF0065FE8u)


#define MC79_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF0065FEAu)


#define MC79_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF0065FECu)


#define MC79_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF0065FEEu)


#define MC79_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF0065FA8u)


#define MC79_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF0065FAAu)


#define MC79_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF0065FACu)


#define MC79_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF0065FAEu)


#define MC79_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF0065FB0u)


#define MC79_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF0065FB2u)


#define MC79_REVID (*(volatile Ifx_MC_REVID*)0xF0065F0Cu)







#define MC80_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0066000u)


#define MC80_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0066002u)


#define MC80_ECCD (*(volatile Ifx_MC_ECCD*)0xF0066010u)


#define MC80_ECCS (*(volatile Ifx_MC_ECCS*)0xF006600Eu)


#define MC80_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0066012u)


#define MC80_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0066014u)


#define MC80_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0066016u)


#define MC80_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0066018u)


#define MC80_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF006601Au)


#define MC80_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0066004u)


#define MC80_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0066006u)


#define MC80_RANGE (*(volatile Ifx_MC_RANGE*)0xF0066008u)


#define MC80_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF00660A0u)


#define MC80_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF00660A2u)


#define MC80_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF00660B4u)


#define MC80_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF00660B6u)


#define MC80_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF00660B8u)


#define MC80_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF00660BAu)


#define MC80_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF00660BCu)


#define MC80_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF00660BEu)


#define MC80_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF00660C0u)


#define MC80_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF00660C2u)


#define MC80_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF00660C4u)


#define MC80_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF00660C6u)


#define MC80_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF00660A4u)


#define MC80_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF00660C8u)


#define MC80_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF00660CAu)


#define MC80_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF00660CCu)


#define MC80_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF00660CEu)


#define MC80_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF00660D0u)


#define MC80_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF00660D2u)


#define MC80_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF00660D4u)


#define MC80_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF00660D6u)


#define MC80_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF00660D8u)


#define MC80_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF00660DAu)


#define MC80_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF00660A6u)


#define MC80_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF00660DCu)


#define MC80_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF00660DEu)


#define MC80_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF00660E0u)


#define MC80_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF00660E2u)


#define MC80_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF00660E4u)


#define MC80_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF00660E6u)


#define MC80_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF00660E8u)


#define MC80_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF00660EAu)


#define MC80_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF00660ECu)


#define MC80_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF00660EEu)


#define MC80_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF00660A8u)


#define MC80_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF00660AAu)


#define MC80_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF00660ACu)


#define MC80_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF00660AEu)


#define MC80_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF00660B0u)


#define MC80_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF00660B2u)


#define MC80_REVID (*(volatile Ifx_MC_REVID*)0xF006600Cu)







#define MC81_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0066100u)


#define MC81_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0066102u)


#define MC81_ECCD (*(volatile Ifx_MC_ECCD*)0xF0066110u)


#define MC81_ECCS (*(volatile Ifx_MC_ECCS*)0xF006610Eu)


#define MC81_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0066112u)


#define MC81_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0066114u)


#define MC81_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0066116u)


#define MC81_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0066118u)


#define MC81_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF006611Au)


#define MC81_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0066104u)


#define MC81_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0066106u)


#define MC81_RANGE (*(volatile Ifx_MC_RANGE*)0xF0066108u)


#define MC81_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF00661A0u)


#define MC81_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF00661A2u)


#define MC81_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF00661B4u)


#define MC81_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF00661B6u)


#define MC81_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF00661B8u)


#define MC81_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF00661BAu)


#define MC81_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF00661BCu)


#define MC81_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF00661BEu)


#define MC81_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF00661C0u)


#define MC81_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF00661C2u)


#define MC81_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF00661C4u)


#define MC81_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF00661C6u)


#define MC81_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF00661A4u)


#define MC81_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF00661C8u)


#define MC81_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF00661CAu)


#define MC81_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF00661CCu)


#define MC81_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF00661CEu)


#define MC81_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF00661D0u)


#define MC81_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF00661D2u)


#define MC81_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF00661D4u)


#define MC81_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF00661D6u)


#define MC81_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF00661D8u)


#define MC81_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF00661DAu)


#define MC81_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF00661A6u)


#define MC81_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF00661DCu)


#define MC81_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF00661DEu)


#define MC81_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF00661E0u)


#define MC81_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF00661E2u)


#define MC81_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF00661E4u)


#define MC81_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF00661E6u)


#define MC81_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF00661E8u)


#define MC81_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF00661EAu)


#define MC81_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF00661ECu)


#define MC81_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF00661EEu)


#define MC81_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF00661A8u)


#define MC81_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF00661AAu)


#define MC81_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF00661ACu)


#define MC81_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF00661AEu)


#define MC81_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF00661B0u)


#define MC81_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF00661B2u)


#define MC81_REVID (*(volatile Ifx_MC_REVID*)0xF006610Cu)







#define MC82_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0066200u)


#define MC82_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0066202u)


#define MC82_ECCD (*(volatile Ifx_MC_ECCD*)0xF0066210u)


#define MC82_ECCS (*(volatile Ifx_MC_ECCS*)0xF006620Eu)


#define MC82_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0066212u)


#define MC82_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0066214u)


#define MC82_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0066216u)


#define MC82_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0066218u)


#define MC82_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF006621Au)


#define MC82_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0066204u)


#define MC82_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0066206u)


#define MC82_RANGE (*(volatile Ifx_MC_RANGE*)0xF0066208u)


#define MC82_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF00662A0u)


#define MC82_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF00662A2u)


#define MC82_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF00662B4u)


#define MC82_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF00662B6u)


#define MC82_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF00662B8u)


#define MC82_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF00662BAu)


#define MC82_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF00662BCu)


#define MC82_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF00662BEu)


#define MC82_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF00662C0u)


#define MC82_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF00662C2u)


#define MC82_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF00662C4u)


#define MC82_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF00662C6u)


#define MC82_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF00662A4u)


#define MC82_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF00662C8u)


#define MC82_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF00662CAu)


#define MC82_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF00662CCu)


#define MC82_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF00662CEu)


#define MC82_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF00662D0u)


#define MC82_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF00662D2u)


#define MC82_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF00662D4u)


#define MC82_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF00662D6u)


#define MC82_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF00662D8u)


#define MC82_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF00662DAu)


#define MC82_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF00662A6u)


#define MC82_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF00662DCu)


#define MC82_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF00662DEu)


#define MC82_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF00662E0u)


#define MC82_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF00662E2u)


#define MC82_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF00662E4u)


#define MC82_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF00662E6u)


#define MC82_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF00662E8u)


#define MC82_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF00662EAu)


#define MC82_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF00662ECu)


#define MC82_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF00662EEu)


#define MC82_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF00662A8u)


#define MC82_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF00662AAu)


#define MC82_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF00662ACu)


#define MC82_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF00662AEu)


#define MC82_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF00662B0u)


#define MC82_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF00662B2u)


#define MC82_REVID (*(volatile Ifx_MC_REVID*)0xF006620Cu)







#define MC83_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0066300u)


#define MC83_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0066302u)


#define MC83_ECCD (*(volatile Ifx_MC_ECCD*)0xF0066310u)


#define MC83_ECCS (*(volatile Ifx_MC_ECCS*)0xF006630Eu)


#define MC83_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0066312u)


#define MC83_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0066314u)


#define MC83_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0066316u)


#define MC83_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0066318u)


#define MC83_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF006631Au)


#define MC83_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0066304u)


#define MC83_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0066306u)


#define MC83_RANGE (*(volatile Ifx_MC_RANGE*)0xF0066308u)


#define MC83_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF00663A0u)


#define MC83_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF00663A2u)


#define MC83_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF00663B4u)


#define MC83_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF00663B6u)


#define MC83_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF00663B8u)


#define MC83_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF00663BAu)


#define MC83_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF00663BCu)


#define MC83_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF00663BEu)


#define MC83_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF00663C0u)


#define MC83_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF00663C2u)


#define MC83_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF00663C4u)


#define MC83_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF00663C6u)


#define MC83_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF00663A4u)


#define MC83_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF00663C8u)


#define MC83_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF00663CAu)


#define MC83_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF00663CCu)


#define MC83_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF00663CEu)


#define MC83_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF00663D0u)


#define MC83_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF00663D2u)


#define MC83_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF00663D4u)


#define MC83_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF00663D6u)


#define MC83_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF00663D8u)


#define MC83_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF00663DAu)


#define MC83_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF00663A6u)


#define MC83_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF00663DCu)


#define MC83_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF00663DEu)


#define MC83_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF00663E0u)


#define MC83_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF00663E2u)


#define MC83_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF00663E4u)


#define MC83_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF00663E6u)


#define MC83_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF00663E8u)


#define MC83_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF00663EAu)


#define MC83_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF00663ECu)


#define MC83_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF00663EEu)


#define MC83_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF00663A8u)


#define MC83_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF00663AAu)


#define MC83_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF00663ACu)


#define MC83_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF00663AEu)


#define MC83_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF00663B0u)


#define MC83_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF00663B2u)


#define MC83_REVID (*(volatile Ifx_MC_REVID*)0xF006630Cu)







#define MC84_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0066400u)


#define MC84_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0066402u)


#define MC84_ECCD (*(volatile Ifx_MC_ECCD*)0xF0066410u)


#define MC84_ECCS (*(volatile Ifx_MC_ECCS*)0xF006640Eu)


#define MC84_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0066412u)


#define MC84_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0066414u)


#define MC84_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0066416u)


#define MC84_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0066418u)


#define MC84_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF006641Au)


#define MC84_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0066404u)


#define MC84_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0066406u)


#define MC84_RANGE (*(volatile Ifx_MC_RANGE*)0xF0066408u)


#define MC84_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF00664A0u)


#define MC84_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF00664A2u)


#define MC84_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF00664B4u)


#define MC84_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF00664B6u)


#define MC84_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF00664B8u)


#define MC84_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF00664BAu)


#define MC84_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF00664BCu)


#define MC84_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF00664BEu)


#define MC84_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF00664C0u)


#define MC84_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF00664C2u)


#define MC84_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF00664C4u)


#define MC84_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF00664C6u)


#define MC84_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF00664A4u)


#define MC84_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF00664C8u)


#define MC84_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF00664CAu)


#define MC84_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF00664CCu)


#define MC84_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF00664CEu)


#define MC84_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF00664D0u)


#define MC84_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF00664D2u)


#define MC84_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF00664D4u)


#define MC84_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF00664D6u)


#define MC84_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF00664D8u)


#define MC84_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF00664DAu)


#define MC84_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF00664A6u)


#define MC84_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF00664DCu)


#define MC84_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF00664DEu)


#define MC84_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF00664E0u)


#define MC84_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF00664E2u)


#define MC84_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF00664E4u)


#define MC84_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF00664E6u)


#define MC84_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF00664E8u)


#define MC84_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF00664EAu)


#define MC84_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF00664ECu)


#define MC84_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF00664EEu)


#define MC84_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF00664A8u)


#define MC84_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF00664AAu)


#define MC84_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF00664ACu)


#define MC84_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF00664AEu)


#define MC84_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF00664B0u)


#define MC84_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF00664B2u)


#define MC84_REVID (*(volatile Ifx_MC_REVID*)0xF006640Cu)







#define MC85_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0066500u)


#define MC85_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0066502u)


#define MC85_ECCD (*(volatile Ifx_MC_ECCD*)0xF0066510u)


#define MC85_ECCS (*(volatile Ifx_MC_ECCS*)0xF006650Eu)


#define MC85_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0066512u)


#define MC85_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0066514u)


#define MC85_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0066516u)


#define MC85_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0066518u)


#define MC85_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF006651Au)


#define MC85_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0066504u)


#define MC85_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0066506u)


#define MC85_RANGE (*(volatile Ifx_MC_RANGE*)0xF0066508u)


#define MC85_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF00665A0u)


#define MC85_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF00665A2u)


#define MC85_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF00665B4u)


#define MC85_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF00665B6u)


#define MC85_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF00665B8u)


#define MC85_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF00665BAu)


#define MC85_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF00665BCu)


#define MC85_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF00665BEu)


#define MC85_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF00665C0u)


#define MC85_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF00665C2u)


#define MC85_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF00665C4u)


#define MC85_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF00665C6u)


#define MC85_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF00665A4u)


#define MC85_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF00665C8u)


#define MC85_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF00665CAu)


#define MC85_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF00665CCu)


#define MC85_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF00665CEu)


#define MC85_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF00665D0u)


#define MC85_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF00665D2u)


#define MC85_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF00665D4u)


#define MC85_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF00665D6u)


#define MC85_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF00665D8u)


#define MC85_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF00665DAu)


#define MC85_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF00665A6u)


#define MC85_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF00665DCu)


#define MC85_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF00665DEu)


#define MC85_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF00665E0u)


#define MC85_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF00665E2u)


#define MC85_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF00665E4u)


#define MC85_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF00665E6u)


#define MC85_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF00665E8u)


#define MC85_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF00665EAu)


#define MC85_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF00665ECu)


#define MC85_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF00665EEu)


#define MC85_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF00665A8u)


#define MC85_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF00665AAu)


#define MC85_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF00665ACu)


#define MC85_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF00665AEu)


#define MC85_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF00665B0u)


#define MC85_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF00665B2u)


#define MC85_REVID (*(volatile Ifx_MC_REVID*)0xF006650Cu)







#define MC86_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0066600u)


#define MC86_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0066602u)


#define MC86_ECCD (*(volatile Ifx_MC_ECCD*)0xF0066610u)


#define MC86_ECCS (*(volatile Ifx_MC_ECCS*)0xF006660Eu)


#define MC86_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0066612u)


#define MC86_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0066614u)


#define MC86_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0066616u)


#define MC86_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0066618u)


#define MC86_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF006661Au)


#define MC86_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0066604u)


#define MC86_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0066606u)


#define MC86_RANGE (*(volatile Ifx_MC_RANGE*)0xF0066608u)


#define MC86_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF00666A0u)


#define MC86_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF00666A2u)


#define MC86_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF00666B4u)


#define MC86_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF00666B6u)


#define MC86_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF00666B8u)


#define MC86_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF00666BAu)


#define MC86_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF00666BCu)


#define MC86_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF00666BEu)


#define MC86_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF00666C0u)


#define MC86_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF00666C2u)


#define MC86_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF00666C4u)


#define MC86_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF00666C6u)


#define MC86_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF00666A4u)


#define MC86_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF00666C8u)


#define MC86_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF00666CAu)


#define MC86_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF00666CCu)


#define MC86_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF00666CEu)


#define MC86_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF00666D0u)


#define MC86_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF00666D2u)


#define MC86_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF00666D4u)


#define MC86_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF00666D6u)


#define MC86_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF00666D8u)


#define MC86_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF00666DAu)


#define MC86_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF00666A6u)


#define MC86_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF00666DCu)


#define MC86_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF00666DEu)


#define MC86_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF00666E0u)


#define MC86_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF00666E2u)


#define MC86_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF00666E4u)


#define MC86_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF00666E6u)


#define MC86_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF00666E8u)


#define MC86_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF00666EAu)


#define MC86_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF00666ECu)


#define MC86_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF00666EEu)


#define MC86_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF00666A8u)


#define MC86_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF00666AAu)


#define MC86_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF00666ACu)


#define MC86_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF00666AEu)


#define MC86_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF00666B0u)


#define MC86_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF00666B2u)


#define MC86_REVID (*(volatile Ifx_MC_REVID*)0xF006660Cu)







#define MC87_CONFIG0 (*(volatile Ifx_MC_CONFIG0*)0xF0066700u)


#define MC87_CONFIG1 (*(volatile Ifx_MC_CONFIG1*)0xF0066702u)


#define MC87_ECCD (*(volatile Ifx_MC_ECCD*)0xF0066710u)


#define MC87_ECCS (*(volatile Ifx_MC_ECCS*)0xF006670Eu)


#define MC87_ETRR0 (*(volatile Ifx_MC_ETRR*)0xF0066712u)


#define MC87_ETRR1 (*(volatile Ifx_MC_ETRR*)0xF0066714u)


#define MC87_ETRR2 (*(volatile Ifx_MC_ETRR*)0xF0066716u)


#define MC87_ETRR3 (*(volatile Ifx_MC_ETRR*)0xF0066718u)


#define MC87_ETRR4 (*(volatile Ifx_MC_ETRR*)0xF006671Au)


#define MC87_MCONTROL (*(volatile Ifx_MC_MCONTROL*)0xF0066704u)


#define MC87_MSTATUS (*(volatile Ifx_MC_MSTATUS*)0xF0066706u)


#define MC87_RANGE (*(volatile Ifx_MC_RANGE*)0xF0066708u)


#define MC87_RDBFL0 (*(volatile Ifx_MC_RDBFL*)0xF00667A0u)


#define MC87_RDBFL1 (*(volatile Ifx_MC_RDBFL*)0xF00667A2u)


#define MC87_RDBFL10 (*(volatile Ifx_MC_RDBFL*)0xF00667B4u)


#define MC87_RDBFL11 (*(volatile Ifx_MC_RDBFL*)0xF00667B6u)


#define MC87_RDBFL12 (*(volatile Ifx_MC_RDBFL*)0xF00667B8u)


#define MC87_RDBFL13 (*(volatile Ifx_MC_RDBFL*)0xF00667BAu)


#define MC87_RDBFL14 (*(volatile Ifx_MC_RDBFL*)0xF00667BCu)


#define MC87_RDBFL15 (*(volatile Ifx_MC_RDBFL*)0xF00667BEu)


#define MC87_RDBFL16 (*(volatile Ifx_MC_RDBFL*)0xF00667C0u)


#define MC87_RDBFL17 (*(volatile Ifx_MC_RDBFL*)0xF00667C2u)


#define MC87_RDBFL18 (*(volatile Ifx_MC_RDBFL*)0xF00667C4u)


#define MC87_RDBFL19 (*(volatile Ifx_MC_RDBFL*)0xF00667C6u)


#define MC87_RDBFL2 (*(volatile Ifx_MC_RDBFL*)0xF00667A4u)


#define MC87_RDBFL20 (*(volatile Ifx_MC_RDBFL*)0xF00667C8u)


#define MC87_RDBFL21 (*(volatile Ifx_MC_RDBFL*)0xF00667CAu)


#define MC87_RDBFL22 (*(volatile Ifx_MC_RDBFL*)0xF00667CCu)


#define MC87_RDBFL23 (*(volatile Ifx_MC_RDBFL*)0xF00667CEu)


#define MC87_RDBFL24 (*(volatile Ifx_MC_RDBFL*)0xF00667D0u)


#define MC87_RDBFL25 (*(volatile Ifx_MC_RDBFL*)0xF00667D2u)


#define MC87_RDBFL26 (*(volatile Ifx_MC_RDBFL*)0xF00667D4u)


#define MC87_RDBFL27 (*(volatile Ifx_MC_RDBFL*)0xF00667D6u)


#define MC87_RDBFL28 (*(volatile Ifx_MC_RDBFL*)0xF00667D8u)


#define MC87_RDBFL29 (*(volatile Ifx_MC_RDBFL*)0xF00667DAu)


#define MC87_RDBFL3 (*(volatile Ifx_MC_RDBFL*)0xF00667A6u)


#define MC87_RDBFL30 (*(volatile Ifx_MC_RDBFL*)0xF00667DCu)


#define MC87_RDBFL31 (*(volatile Ifx_MC_RDBFL*)0xF00667DEu)


#define MC87_RDBFL32 (*(volatile Ifx_MC_RDBFL*)0xF00667E0u)


#define MC87_RDBFL33 (*(volatile Ifx_MC_RDBFL*)0xF00667E2u)


#define MC87_RDBFL34 (*(volatile Ifx_MC_RDBFL*)0xF00667E4u)


#define MC87_RDBFL35 (*(volatile Ifx_MC_RDBFL*)0xF00667E6u)


#define MC87_RDBFL36 (*(volatile Ifx_MC_RDBFL*)0xF00667E8u)


#define MC87_RDBFL37 (*(volatile Ifx_MC_RDBFL*)0xF00667EAu)


#define MC87_RDBFL38 (*(volatile Ifx_MC_RDBFL*)0xF00667ECu)


#define MC87_RDBFL39 (*(volatile Ifx_MC_RDBFL*)0xF00667EEu)


#define MC87_RDBFL4 (*(volatile Ifx_MC_RDBFL*)0xF00667A8u)


#define MC87_RDBFL5 (*(volatile Ifx_MC_RDBFL*)0xF00667AAu)


#define MC87_RDBFL6 (*(volatile Ifx_MC_RDBFL*)0xF00667ACu)


#define MC87_RDBFL7 (*(volatile Ifx_MC_RDBFL*)0xF00667AEu)


#define MC87_RDBFL8 (*(volatile Ifx_MC_RDBFL*)0xF00667B0u)


#define MC87_RDBFL9 (*(volatile Ifx_MC_RDBFL*)0xF00667B2u)


#define MC87_REVID (*(volatile Ifx_MC_REVID*)0xF006670Cu)
# 51 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_reg.h" 2 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxMsc_reg.h" 1 3
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxMsc_reg.h" 3
#define IFXMSC_REG_H 1

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxMsc_regdef.h" 1 3
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxMsc_regdef.h" 3
#define IFXMSC_REGDEF_H 1







typedef struct _Ifx_MSC_ABC_Bits
{
    unsigned int LOW:4;
    unsigned int HIGH:4;
    unsigned int OIP:2;
    unsigned int OASR:1;
    unsigned int reserved_11:1;
    unsigned int OVF:1;
    unsigned int OFM:2;
    unsigned int OIE:1;
    unsigned int NDA:3;
    unsigned int UIP:2;
    unsigned int UASR:1;
    unsigned int reserved_22:1;
    unsigned int UNF:1;
    unsigned int UFM:2;
    unsigned int UIE:1;
    unsigned int CLKSEL:3;
    unsigned int reserved_30:1;
    unsigned int ABB:1;
} Ifx_MSC_ABC_Bits;


typedef struct _Ifx_MSC_ACCEN0_Bits
{
    unsigned int EN0:1;
    unsigned int EN1:1;
    unsigned int EN2:1;
    unsigned int EN3:1;
    unsigned int EN4:1;
    unsigned int EN5:1;
    unsigned int EN6:1;
    unsigned int EN7:1;
    unsigned int EN8:1;
    unsigned int EN9:1;
    unsigned int EN10:1;
    unsigned int EN11:1;
    unsigned int EN12:1;
    unsigned int EN13:1;
    unsigned int EN14:1;
    unsigned int EN15:1;
    unsigned int EN16:1;
    unsigned int EN17:1;
    unsigned int EN18:1;
    unsigned int EN19:1;
    unsigned int EN20:1;
    unsigned int EN21:1;
    unsigned int EN22:1;
    unsigned int EN23:1;
    unsigned int EN24:1;
    unsigned int EN25:1;
    unsigned int EN26:1;
    unsigned int EN27:1;
    unsigned int EN28:1;
    unsigned int EN29:1;
    unsigned int EN30:1;
    unsigned int EN31:1;
} Ifx_MSC_ACCEN0_Bits;


typedef struct _Ifx_MSC_ACCEN1_Bits
{
    unsigned int reserved_0:32;
} Ifx_MSC_ACCEN1_Bits;


typedef struct _Ifx_MSC_CLC_Bits
{
    unsigned int DISR:1;
    unsigned int DISS:1;
    unsigned int reserved_2:1;
    unsigned int EDIS:1;
    unsigned int reserved_4:28;
} Ifx_MSC_CLC_Bits;


typedef struct _Ifx_MSC_DC_Bits
{
    unsigned int DCL:16;
    unsigned int DCH:16;
} Ifx_MSC_DC_Bits;


typedef struct _Ifx_MSC_DD_Bits
{
    unsigned int DDL:16;
    unsigned int DDH:16;
} Ifx_MSC_DD_Bits;


typedef struct _Ifx_MSC_DDE_Bits
{
    unsigned int DDLE:16;
    unsigned int DDHE:16;
} Ifx_MSC_DDE_Bits;


typedef struct _Ifx_MSC_DDM_Bits
{
    unsigned int DDLM:16;
    unsigned int DDHM:16;
} Ifx_MSC_DDM_Bits;


typedef struct _Ifx_MSC_DSC_Bits
{
    unsigned int TM:1;
    unsigned int CP:1;
    unsigned int DP:1;
    unsigned int NDBL:5;
    unsigned int NDBH:5;
    unsigned int ENSELL:1;
    unsigned int ENSELH:1;
    unsigned int DSDIS:1;
    unsigned int NBC:6;
    unsigned int reserved_22:2;
    unsigned int PPD:5;
    unsigned int reserved_29:3;
} Ifx_MSC_DSC_Bits;


typedef struct _Ifx_MSC_DSCE_Bits
{
    unsigned int NDBHE:1;
    unsigned int NDBLE:1;
    unsigned int reserved_2:12;
    unsigned int EXEN:1;
    unsigned int CCF:1;
    unsigned int INJENP0:1;
    unsigned int INJPOSP0:6;
    unsigned int reserved_23:1;
    unsigned int INJENP1:1;
    unsigned int INJPOSP1:6;
    unsigned int CDCM:1;
} Ifx_MSC_DSCE_Bits;


typedef struct _Ifx_MSC_DSDSH_Bits
{
    unsigned int SH0:2;
    unsigned int SH1:2;
    unsigned int SH2:2;
    unsigned int SH3:2;
    unsigned int SH4:2;
    unsigned int SH5:2;
    unsigned int SH6:2;
    unsigned int SH7:2;
    unsigned int SH8:2;
    unsigned int SH9:2;
    unsigned int SH10:2;
    unsigned int SH11:2;
    unsigned int SH12:2;
    unsigned int SH13:2;
    unsigned int SH14:2;
    unsigned int SH15:2;
} Ifx_MSC_DSDSH_Bits;


typedef struct _Ifx_MSC_DSDSHE_Bits
{
    unsigned int SH16:2;
    unsigned int SH17:2;
    unsigned int SH18:2;
    unsigned int SH19:2;
    unsigned int SH20:2;
    unsigned int SH21:2;
    unsigned int SH22:2;
    unsigned int SH23:2;
    unsigned int SH24:2;
    unsigned int SH25:2;
    unsigned int SH26:2;
    unsigned int SH27:2;
    unsigned int SH28:2;
    unsigned int SH29:2;
    unsigned int SH30:2;
    unsigned int SH31:2;
} Ifx_MSC_DSDSHE_Bits;


typedef struct _Ifx_MSC_DSDSL_Bits
{
    unsigned int SL0:2;
    unsigned int SL1:2;
    unsigned int SL2:2;
    unsigned int SL3:2;
    unsigned int SL4:2;
    unsigned int SL5:2;
    unsigned int SL6:2;
    unsigned int SL7:2;
    unsigned int SL8:2;
    unsigned int SL9:2;
    unsigned int SL10:2;
    unsigned int SL11:2;
    unsigned int SL12:2;
    unsigned int SL13:2;
    unsigned int SL14:2;
    unsigned int SL15:2;
} Ifx_MSC_DSDSL_Bits;


typedef struct _Ifx_MSC_DSDSLE_Bits
{
    unsigned int SL16:2;
    unsigned int SL17:2;
    unsigned int SL18:2;
    unsigned int SL19:2;
    unsigned int SL20:2;
    unsigned int SL21:2;
    unsigned int SL22:2;
    unsigned int SL23:2;
    unsigned int SL24:2;
    unsigned int SL25:2;
    unsigned int SL26:2;
    unsigned int SL27:2;
    unsigned int SL28:2;
    unsigned int SL29:2;
    unsigned int SL30:2;
    unsigned int SL31:2;
} Ifx_MSC_DSDSLE_Bits;


typedef struct _Ifx_MSC_DSS_Bits
{
    unsigned int PFC:4;
    unsigned int reserved_4:4;
    unsigned int NPTF:4;
    unsigned int reserved_12:4;
    unsigned int DC:8;
    unsigned int DFA:1;
    unsigned int CFA:1;
    unsigned int reserved_26:6;
} Ifx_MSC_DSS_Bits;


typedef struct _Ifx_MSC_DSTE_Bits
{
    unsigned int PPDE:2;
    unsigned int PPCE:6;
    unsigned int NDD:4;
    unsigned int reserved_12:20;
} Ifx_MSC_DSTE_Bits;


typedef struct _Ifx_MSC_ESR_Bits
{
    unsigned int ENL0:1;
    unsigned int ENL1:1;
    unsigned int ENL2:1;
    unsigned int ENL3:1;
    unsigned int ENL4:1;
    unsigned int ENL5:1;
    unsigned int ENL6:1;
    unsigned int ENL7:1;
    unsigned int ENL8:1;
    unsigned int ENL9:1;
    unsigned int ENL10:1;
    unsigned int ENL11:1;
    unsigned int ENL12:1;
    unsigned int ENL13:1;
    unsigned int ENL14:1;
    unsigned int ENL15:1;
    unsigned int ENH0:1;
    unsigned int ENH1:1;
    unsigned int ENH2:1;
    unsigned int ENH3:1;
    unsigned int ENH4:1;
    unsigned int ENH5:1;
    unsigned int ENH6:1;
    unsigned int ENH7:1;
    unsigned int ENH8:1;
    unsigned int ENH9:1;
    unsigned int ENH10:1;
    unsigned int ENH11:1;
    unsigned int ENH12:1;
    unsigned int ENH13:1;
    unsigned int ENH14:1;
    unsigned int ENH15:1;
} Ifx_MSC_ESR_Bits;


typedef struct _Ifx_MSC_ESRE_Bits
{
    unsigned int ENL16:1;
    unsigned int ENL17:1;
    unsigned int ENL18:1;
    unsigned int ENL19:1;
    unsigned int ENL20:1;
    unsigned int ENL21:1;
    unsigned int ENL22:1;
    unsigned int ENL23:1;
    unsigned int ENL24:1;
    unsigned int ENL25:1;
    unsigned int ENL26:1;
    unsigned int ENL27:1;
    unsigned int ENL28:1;
    unsigned int ENL29:1;
    unsigned int ENL30:1;
    unsigned int ENL31:1;
    unsigned int ENH16:1;
    unsigned int ENH17:1;
    unsigned int ENH18:1;
    unsigned int ENH19:1;
    unsigned int ENH20:1;
    unsigned int ENH21:1;
    unsigned int ENH22:1;
    unsigned int ENH23:1;
    unsigned int ENH24:1;
    unsigned int ENH25:1;
    unsigned int ENH26:1;
    unsigned int ENH27:1;
    unsigned int ENH28:1;
    unsigned int ENH29:1;
    unsigned int ENH30:1;
    unsigned int ENH31:1;
} Ifx_MSC_ESRE_Bits;


typedef struct _Ifx_MSC_FDR_Bits
{
    unsigned int STEP:10;
    unsigned int reserved_10:4;
    unsigned int DM:2;
    unsigned int RESULT:10;
    unsigned int reserved_26:4;
    unsigned int ENHW:1;
    unsigned int DISCLK:1;
} Ifx_MSC_FDR_Bits;


typedef struct _Ifx_MSC_ICR_Bits
{
    unsigned int EDIP:2;
    unsigned int EDIE:2;
    unsigned int ECIP:2;
    unsigned int reserved_6:1;
    unsigned int ECIE:1;
    unsigned int TFIP:2;
    unsigned int reserved_10:1;
    unsigned int TFIE:1;
    unsigned int RDIP:2;
    unsigned int RDIE:2;
    unsigned int reserved_16:16;
} Ifx_MSC_ICR_Bits;


typedef struct _Ifx_MSC_ID_Bits
{
    unsigned int MODREV:8;
    unsigned int MODTYPE:8;
    unsigned int MODNUMBER:16;
} Ifx_MSC_ID_Bits;


typedef struct _Ifx_MSC_ISC_Bits
{
    unsigned int CDEDI:1;
    unsigned int CDECI:1;
    unsigned int CDTFI:1;
    unsigned int CURDI:1;
    unsigned int CDP:1;
    unsigned int CCP:1;
    unsigned int CDDIS:1;
    unsigned int reserved_7:9;
    unsigned int SDEDI:1;
    unsigned int SDECI:1;
    unsigned int SDTFI:1;
    unsigned int SURDI:1;
    unsigned int SDP:1;
    unsigned int SCP:1;
    unsigned int SDDIS:1;
    unsigned int reserved_23:9;
} Ifx_MSC_ISC_Bits;


typedef struct _Ifx_MSC_ISR_Bits
{
    unsigned int DEDI:1;
    unsigned int DECI:1;
    unsigned int DTFI:1;
    unsigned int URDI:1;
    unsigned int reserved_4:28;
} Ifx_MSC_ISR_Bits;


typedef struct _Ifx_MSC_KRST0_Bits
{
    unsigned int RST:1;
    unsigned int RSTSTAT:1;
    unsigned int reserved_2:30;
} Ifx_MSC_KRST0_Bits;


typedef struct _Ifx_MSC_KRST1_Bits
{
    unsigned int RST:1;
    unsigned int reserved_1:31;
} Ifx_MSC_KRST1_Bits;


typedef struct _Ifx_MSC_KRSTCLR_Bits
{
    unsigned int CLR:1;
    unsigned int reserved_1:31;
} Ifx_MSC_KRSTCLR_Bits;


typedef struct _Ifx_MSC_OCR_Bits
{
    unsigned int CLP:1;
    unsigned int SLP:1;
    unsigned int CSLP:1;
    unsigned int ILP:1;
    unsigned int reserved_4:4;
    unsigned int CLKCTRL:1;
    unsigned int CSL:2;
    unsigned int CSH:2;
    unsigned int CSC:2;
    unsigned int reserved_15:1;
    unsigned int SDISEL:3;
    unsigned int reserved_19:13;
} Ifx_MSC_OCR_Bits;


typedef struct _Ifx_MSC_OCS_Bits
{
    unsigned int reserved_0:24;
    unsigned int SUS:4;
    unsigned int SUS_P:1;
    unsigned int SUSSTA:1;
    unsigned int reserved_30:2;
} Ifx_MSC_OCS_Bits;


typedef struct _Ifx_MSC_UD_Bits
{
    unsigned int DATA:8;
    unsigned int reserved_8:8;
    unsigned int V:1;
    unsigned int P:1;
    unsigned int C:1;
    unsigned int LABF:2;
    unsigned int IPF:1;
    unsigned int PERR:1;
    unsigned int reserved_23:9;
} Ifx_MSC_UD_Bits;


typedef struct _Ifx_MSC_USCE_Bits
{
    unsigned int USTOPRE:4;
    unsigned int USTOVAL:4;
    unsigned int USTOEN:1;
    unsigned int USTF:1;
    unsigned int USTC:1;
    unsigned int USTS:1;
    unsigned int reserved_12:1;
    unsigned int UTASR:1;
    unsigned int USTOIP:2;
    unsigned int reserved_16:16;
} Ifx_MSC_USCE_Bits;


typedef struct _Ifx_MSC_USR_Bits
{
    unsigned int UFT:1;
    unsigned int URR:3;
    unsigned int PCTR:1;
    unsigned int SRDC:1;
    unsigned int reserved_6:10;
    unsigned int UC:5;
    unsigned int reserved_21:11;
} Ifx_MSC_USR_Bits;







typedef union
{
    unsigned int U;
    signed int I;
    Ifx_MSC_ABC_Bits B;
} Ifx_MSC_ABC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_MSC_ACCEN0_Bits B;
} Ifx_MSC_ACCEN0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_MSC_ACCEN1_Bits B;
} Ifx_MSC_ACCEN1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_MSC_CLC_Bits B;
} Ifx_MSC_CLC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_MSC_DC_Bits B;
} Ifx_MSC_DC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_MSC_DD_Bits B;
} Ifx_MSC_DD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_MSC_DDE_Bits B;
} Ifx_MSC_DDE;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_MSC_DDM_Bits B;
} Ifx_MSC_DDM;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_MSC_DSC_Bits B;
} Ifx_MSC_DSC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_MSC_DSCE_Bits B;
} Ifx_MSC_DSCE;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_MSC_DSDSH_Bits B;
} Ifx_MSC_DSDSH;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_MSC_DSDSHE_Bits B;
} Ifx_MSC_DSDSHE;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_MSC_DSDSL_Bits B;
} Ifx_MSC_DSDSL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_MSC_DSDSLE_Bits B;
} Ifx_MSC_DSDSLE;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_MSC_DSS_Bits B;
} Ifx_MSC_DSS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_MSC_DSTE_Bits B;
} Ifx_MSC_DSTE;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_MSC_ESR_Bits B;
} Ifx_MSC_ESR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_MSC_ESRE_Bits B;
} Ifx_MSC_ESRE;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_MSC_FDR_Bits B;
} Ifx_MSC_FDR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_MSC_ICR_Bits B;
} Ifx_MSC_ICR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_MSC_ID_Bits B;
} Ifx_MSC_ID;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_MSC_ISC_Bits B;
} Ifx_MSC_ISC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_MSC_ISR_Bits B;
} Ifx_MSC_ISR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_MSC_KRST0_Bits B;
} Ifx_MSC_KRST0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_MSC_KRST1_Bits B;
} Ifx_MSC_KRST1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_MSC_KRSTCLR_Bits B;
} Ifx_MSC_KRSTCLR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_MSC_OCR_Bits B;
} Ifx_MSC_OCR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_MSC_OCS_Bits B;
} Ifx_MSC_OCS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_MSC_UD_Bits B;
} Ifx_MSC_UD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_MSC_USCE_Bits B;
} Ifx_MSC_USCE;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_MSC_USR_Bits B;
} Ifx_MSC_USR;
# 780 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxMsc_regdef.h" 3
typedef volatile struct _Ifx_MSC
{
    Ifx_MSC_CLC CLC;
    unsigned char reserved_4[4];
    Ifx_MSC_ID ID;
    Ifx_MSC_FDR FDR;
    Ifx_MSC_USR USR;
    Ifx_MSC_DSC DSC;
    Ifx_MSC_DSS DSS;
    Ifx_MSC_DD DD;
    Ifx_MSC_DC DC;
    Ifx_MSC_DSDSL DSDSL;
    Ifx_MSC_DSDSH DSDSH;
    Ifx_MSC_ESR ESR;
    Ifx_MSC_UD UD[4];
    Ifx_MSC_ICR ICR;
    Ifx_MSC_ISR ISR;
    Ifx_MSC_ISC ISC;
    Ifx_MSC_OCR OCR;
    unsigned char reserved_50[8];
    Ifx_MSC_DSCE DSCE;
    Ifx_MSC_USCE USCE;
    Ifx_MSC_DSDSLE DSDSLE;
    Ifx_MSC_DSDSHE DSDSHE;
    Ifx_MSC_ESRE ESRE;
    Ifx_MSC_DDE DDE;
    Ifx_MSC_DDM DDM;
    Ifx_MSC_DSTE DSTE;
    unsigned char reserved_78[8];
    Ifx_MSC_ABC ABC;
    unsigned char reserved_84[100];
    Ifx_MSC_OCS OCS;
    Ifx_MSC_KRSTCLR KRSTCLR;
    Ifx_MSC_KRST1 KRST1;
    Ifx_MSC_KRST0 KRST0;
    Ifx_MSC_ACCEN1 ACCEN1;
    Ifx_MSC_ACCEN0 ACCEN0;
} Ifx_MSC;
# 40 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxMsc_reg.h" 2 3





#define MODULE_MSC0 (*(Ifx_MSC*)0xF0002600u)


#define MODULE_MSC1 (*(Ifx_MSC*)0xF0002700u)







#define MSC0_ABC (*(volatile Ifx_MSC_ABC*)0xF0002680u)


#define MSC0_ACCEN0 (*(volatile Ifx_MSC_ACCEN0*)0xF00026FCu)


#define MSC0_ACCEN1 (*(volatile Ifx_MSC_ACCEN1*)0xF00026F8u)


#define MSC0_CLC (*(volatile Ifx_MSC_CLC*)0xF0002600u)


#define MSC0_DC (*(volatile Ifx_MSC_DC*)0xF0002620u)


#define MSC0_DD (*(volatile Ifx_MSC_DD*)0xF000261Cu)


#define MSC0_DDE (*(volatile Ifx_MSC_DDE*)0xF000266Cu)


#define MSC0_DDM (*(volatile Ifx_MSC_DDM*)0xF0002670u)


#define MSC0_DSC (*(volatile Ifx_MSC_DSC*)0xF0002614u)


#define MSC0_DSCE (*(volatile Ifx_MSC_DSCE*)0xF0002658u)


#define MSC0_DSDSH (*(volatile Ifx_MSC_DSDSH*)0xF0002628u)


#define MSC0_DSDSHE (*(volatile Ifx_MSC_DSDSHE*)0xF0002664u)


#define MSC0_DSDSL (*(volatile Ifx_MSC_DSDSL*)0xF0002624u)


#define MSC0_DSDSLE (*(volatile Ifx_MSC_DSDSLE*)0xF0002660u)


#define MSC0_DSS (*(volatile Ifx_MSC_DSS*)0xF0002618u)


#define MSC0_DSTE (*(volatile Ifx_MSC_DSTE*)0xF0002674u)


#define MSC0_ESR (*(volatile Ifx_MSC_ESR*)0xF000262Cu)


#define MSC0_ESRE (*(volatile Ifx_MSC_ESRE*)0xF0002668u)


#define MSC0_FDR (*(volatile Ifx_MSC_FDR*)0xF000260Cu)


#define MSC0_ICR (*(volatile Ifx_MSC_ICR*)0xF0002640u)


#define MSC0_ID (*(volatile Ifx_MSC_ID*)0xF0002608u)


#define MSC0_ISC (*(volatile Ifx_MSC_ISC*)0xF0002648u)


#define MSC0_ISR (*(volatile Ifx_MSC_ISR*)0xF0002644u)


#define MSC0_KRST0 (*(volatile Ifx_MSC_KRST0*)0xF00026F4u)


#define MSC0_KRST1 (*(volatile Ifx_MSC_KRST1*)0xF00026F0u)


#define MSC0_KRSTCLR (*(volatile Ifx_MSC_KRSTCLR*)0xF00026ECu)


#define MSC0_OCR (*(volatile Ifx_MSC_OCR*)0xF000264Cu)


#define MSC0_OCS (*(volatile Ifx_MSC_OCS*)0xF00026E8u)


#define MSC0_UD0 (*(volatile Ifx_MSC_UD*)0xF0002630u)


#define MSC0_UD1 (*(volatile Ifx_MSC_UD*)0xF0002634u)


#define MSC0_UD2 (*(volatile Ifx_MSC_UD*)0xF0002638u)


#define MSC0_UD3 (*(volatile Ifx_MSC_UD*)0xF000263Cu)


#define MSC0_USCE (*(volatile Ifx_MSC_USCE*)0xF000265Cu)


#define MSC0_USR (*(volatile Ifx_MSC_USR*)0xF0002610u)







#define MSC1_ABC (*(volatile Ifx_MSC_ABC*)0xF0002780u)


#define MSC1_ACCEN0 (*(volatile Ifx_MSC_ACCEN0*)0xF00027FCu)


#define MSC1_ACCEN1 (*(volatile Ifx_MSC_ACCEN1*)0xF00027F8u)


#define MSC1_CLC (*(volatile Ifx_MSC_CLC*)0xF0002700u)


#define MSC1_DC (*(volatile Ifx_MSC_DC*)0xF0002720u)


#define MSC1_DD (*(volatile Ifx_MSC_DD*)0xF000271Cu)


#define MSC1_DDE (*(volatile Ifx_MSC_DDE*)0xF000276Cu)


#define MSC1_DDM (*(volatile Ifx_MSC_DDM*)0xF0002770u)


#define MSC1_DSC (*(volatile Ifx_MSC_DSC*)0xF0002714u)


#define MSC1_DSCE (*(volatile Ifx_MSC_DSCE*)0xF0002758u)


#define MSC1_DSDSH (*(volatile Ifx_MSC_DSDSH*)0xF0002728u)


#define MSC1_DSDSHE (*(volatile Ifx_MSC_DSDSHE*)0xF0002764u)


#define MSC1_DSDSL (*(volatile Ifx_MSC_DSDSL*)0xF0002724u)


#define MSC1_DSDSLE (*(volatile Ifx_MSC_DSDSLE*)0xF0002760u)


#define MSC1_DSS (*(volatile Ifx_MSC_DSS*)0xF0002718u)


#define MSC1_DSTE (*(volatile Ifx_MSC_DSTE*)0xF0002774u)


#define MSC1_ESR (*(volatile Ifx_MSC_ESR*)0xF000272Cu)


#define MSC1_ESRE (*(volatile Ifx_MSC_ESRE*)0xF0002768u)


#define MSC1_FDR (*(volatile Ifx_MSC_FDR*)0xF000270Cu)


#define MSC1_ICR (*(volatile Ifx_MSC_ICR*)0xF0002740u)


#define MSC1_ID (*(volatile Ifx_MSC_ID*)0xF0002708u)


#define MSC1_ISC (*(volatile Ifx_MSC_ISC*)0xF0002748u)


#define MSC1_ISR (*(volatile Ifx_MSC_ISR*)0xF0002744u)


#define MSC1_KRST0 (*(volatile Ifx_MSC_KRST0*)0xF00027F4u)


#define MSC1_KRST1 (*(volatile Ifx_MSC_KRST1*)0xF00027F0u)


#define MSC1_KRSTCLR (*(volatile Ifx_MSC_KRSTCLR*)0xF00027ECu)


#define MSC1_OCR (*(volatile Ifx_MSC_OCR*)0xF000274Cu)


#define MSC1_OCS (*(volatile Ifx_MSC_OCS*)0xF00027E8u)


#define MSC1_UD0 (*(volatile Ifx_MSC_UD*)0xF0002730u)


#define MSC1_UD1 (*(volatile Ifx_MSC_UD*)0xF0002734u)


#define MSC1_UD2 (*(volatile Ifx_MSC_UD*)0xF0002738u)


#define MSC1_UD3 (*(volatile Ifx_MSC_UD*)0xF000273Cu)


#define MSC1_USCE (*(volatile Ifx_MSC_USCE*)0xF000275Cu)


#define MSC1_USR (*(volatile Ifx_MSC_USR*)0xF0002710u)
# 52 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_reg.h" 2 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxMtu_reg.h" 1 3
# 34 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxMtu_reg.h" 3
#define IFXMTU_REG_H 1

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxMtu_regdef.h" 1 3
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxMtu_regdef.h" 3
#define IFXMTU_REGDEF_H 1







typedef struct _Ifx_MTU_ACCEN0_Bits
{
    unsigned int EN0:1;
    unsigned int EN1:1;
    unsigned int EN2:1;
    unsigned int EN3:1;
    unsigned int EN4:1;
    unsigned int EN5:1;
    unsigned int EN6:1;
    unsigned int EN7:1;
    unsigned int EN8:1;
    unsigned int EN9:1;
    unsigned int EN10:1;
    unsigned int EN11:1;
    unsigned int EN12:1;
    unsigned int EN13:1;
    unsigned int EN14:1;
    unsigned int EN15:1;
    unsigned int EN16:1;
    unsigned int EN17:1;
    unsigned int EN18:1;
    unsigned int EN19:1;
    unsigned int EN20:1;
    unsigned int EN21:1;
    unsigned int EN22:1;
    unsigned int EN23:1;
    unsigned int EN24:1;
    unsigned int EN25:1;
    unsigned int EN26:1;
    unsigned int EN27:1;
    unsigned int EN28:1;
    unsigned int EN29:1;
    unsigned int EN30:1;
    unsigned int EN31:1;
} Ifx_MTU_ACCEN0_Bits;


typedef struct _Ifx_MTU_ACCEN1_Bits
{
    unsigned int reserved_0:32;
} Ifx_MTU_ACCEN1_Bits;


typedef struct _Ifx_MTU_CLC_Bits
{
    unsigned int DISR:1;
    unsigned int DISS:1;
    unsigned int Resvd:1;
    unsigned int EDIS:1;
    unsigned int reserved_4:28;
} Ifx_MTU_CLC_Bits;


typedef struct _Ifx_MTU_ID_Bits
{
    unsigned int MODREV:8;
    unsigned int MODTYPE:8;
    unsigned int MODNUMBER:16;
} Ifx_MTU_ID_Bits;


typedef struct _Ifx_MTU_MEMMAP_Bits
{
    unsigned int reserved_0:1;
    unsigned int CPU2DCMAP:1;
    unsigned int CPU2DTMAP:1;
    unsigned int reserved_3:1;
    unsigned int CPU2PCMAP:1;
    unsigned int CPU2PTMAP:1;
    unsigned int reserved_6:1;
    unsigned int CPU1DCMAP:1;
    unsigned int CPU1DTMAP:1;
    unsigned int reserved_9:1;
    unsigned int CPU1PCMAP:1;
    unsigned int CPU1PTMAP:1;
    unsigned int reserved_12:3;
    unsigned int CPU0PCMAP:1;
    unsigned int reserved_16:1;
    unsigned int CPU0PTMAP:1;
    unsigned int CPU0DxMAP:2;
    unsigned int reserved_20:12;
} Ifx_MTU_MEMMAP_Bits;


typedef struct _Ifx_MTU_MEMSTAT0_Bits
{
    unsigned int CPU2DSAIU:1;
    unsigned int reserved_1:1;
    unsigned int CPU2DTAIU:1;
    unsigned int CPU2PSAIU:1;
    unsigned int reserved_4:1;
    unsigned int CPU2PTAIU:1;
    unsigned int CPU1DSAIU:1;
    unsigned int reserved_7:1;
    unsigned int CPU1DTAIU:1;
    unsigned int CPU1PSAIU:1;
    unsigned int reserved_10:1;
    unsigned int CPU1PTAIU:1;
    unsigned int reserved_12:2;
    unsigned int CPU0DSAIU:1;
    unsigned int reserved_15:1;
    unsigned int CPU0PSAIU:1;
    unsigned int CPU0PTAIU:1;
    unsigned int reserved_18:1;
    unsigned int CPU0DxAIU:1;
    unsigned int CPU1DS2AIU:1;
    unsigned int CPU2DS2AIU:1;
    unsigned int reserved_22:1;
    unsigned int HSMCAIU:1;
    unsigned int HSMTAIU:1;
    unsigned int HSMRAIU:1;
    unsigned int FSI0AIU:1;
    unsigned int CPU0DS2AIU:1;
    unsigned int reserved_28:4;
} Ifx_MTU_MEMSTAT0_Bits;


typedef struct _Ifx_MTU_MEMSTAT1_Bits
{
    unsigned int reserved_0:32;
} Ifx_MTU_MEMSTAT1_Bits;


typedef struct _Ifx_MTU_MEMSTAT2_Bits
{
    unsigned int reserved_0:32;
} Ifx_MTU_MEMSTAT2_Bits;


typedef struct _Ifx_MTU_MEMTEST0_Bits
{
    unsigned int CPU2DSEN:1;
    unsigned int reserved_1:1;
    unsigned int CPU2DTEN:1;
    unsigned int CPU2PSEN:1;
    unsigned int reserved_4:1;
    unsigned int CPU2PTEN:1;
    unsigned int CPU1DSEN:1;
    unsigned int Res:1;
    unsigned int CPU1DTEN:1;
    unsigned int CPU1PSEN:1;
    unsigned int reserved_10:1;
    unsigned int CPU1PTEN:1;
    unsigned int LMUEN:1;
    unsigned int MMCDSEN:1;
    unsigned int CPU0DSEN:1;
    unsigned int reserved_15:1;
    unsigned int CPU0PSEN:1;
    unsigned int CPU0PTEN:1;
    unsigned int reserved_18:1;
    unsigned int CPU0DTEN:1;
    unsigned int CPUXDS2EN:2;
    unsigned int ETHEN:1;
    unsigned int reserved_23:3;
    unsigned int FSI0EN:1;
    unsigned int CPU0DS2EN:1;
    unsigned int GTMFEN:1;
    unsigned int GTMM0EN:1;
    unsigned int GTMM1EN:1;
    unsigned int GTM1AEN:1;
} Ifx_MTU_MEMTEST0_Bits;


typedef struct _Ifx_MTU_MEMTEST1_Bits
{
    unsigned int GTM1BEN:1;
    unsigned int GTM2EN:1;
    unsigned int PSI5EN:1;
    unsigned int reserved_3:1;
    unsigned int MCAN0EN:1;
    unsigned int MCAN1EN:1;
    unsigned int ERAY0OEN:1;
    unsigned int ERAY0TEN:1;
    unsigned int ERAY0MEN:1;
    unsigned int ERAY1XEN:3;
    unsigned int STBY1EN:1;
    unsigned int MCDSEN:1;
    unsigned int EMEML0EN:1;
    unsigned int EMEML1EN:1;
    unsigned int EMEML2EN:1;
    unsigned int EMEML3EN:1;
    unsigned int EMEML4EN:1;
    unsigned int EMEML5EN:1;
    unsigned int EMEML6EN:1;
    unsigned int EMEML7EN:1;
    unsigned int EMEML8EN:1;
    unsigned int EMEML9EN:1;
    unsigned int EMEML10EN:1;
    unsigned int EMEML11EN:1;
    unsigned int EMEML12EN:1;
    unsigned int EMEML13EN:1;
    unsigned int EMEML14EN:1;
    unsigned int EMEML15EN:1;
    unsigned int EMEMUXEN:2;
} Ifx_MTU_MEMTEST1_Bits;


typedef struct _Ifx_MTU_MEMTEST2_Bits
{
    unsigned int EMEMUxEN:14;
    unsigned int CIF0EN:1;
    unsigned int DAMEN:1;
    unsigned int CIF1EN:1;
    unsigned int CIF2EN:1;
    unsigned int STBY2EN:1;
    unsigned int DMAEN:1;
    unsigned int XTMxEN:2;
    unsigned int FFTxEN:2;
    unsigned int reserved_24:8;
} Ifx_MTU_MEMTEST2_Bits;







typedef union
{
    unsigned int U;
    signed int I;
    Ifx_MTU_ACCEN0_Bits B;
} Ifx_MTU_ACCEN0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_MTU_ACCEN1_Bits B;
} Ifx_MTU_ACCEN1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_MTU_CLC_Bits B;
} Ifx_MTU_CLC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_MTU_ID_Bits B;
} Ifx_MTU_ID;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_MTU_MEMMAP_Bits B;
} Ifx_MTU_MEMMAP;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_MTU_MEMSTAT0_Bits B;
} Ifx_MTU_MEMSTAT0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_MTU_MEMSTAT1_Bits B;
} Ifx_MTU_MEMSTAT1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_MTU_MEMSTAT2_Bits B;
} Ifx_MTU_MEMSTAT2;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_MTU_MEMTEST0_Bits B;
} Ifx_MTU_MEMTEST0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_MTU_MEMTEST1_Bits B;
} Ifx_MTU_MEMTEST1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_MTU_MEMTEST2_Bits B;
} Ifx_MTU_MEMTEST2;
# 358 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxMtu_regdef.h" 3
typedef volatile struct _Ifx_MTU
{
    Ifx_MTU_CLC CLC;
    unsigned char reserved_4[4];
    Ifx_MTU_ID ID;
    unsigned char reserved_C[4];
    Ifx_MTU_MEMTEST0 MEMTEST0;
    Ifx_MTU_MEMTEST1 MEMTEST1;
    Ifx_MTU_MEMTEST2 MEMTEST2;
    Ifx_MTU_MEMMAP MEMMAP;
    unsigned char reserved_20[24];
    Ifx_MTU_MEMSTAT0 MEMSTAT0;
    Ifx_MTU_MEMSTAT1 MEMSTAT1;
    Ifx_MTU_MEMSTAT2 MEMSTAT2;
    unsigned char reserved_44[180];
    Ifx_MTU_ACCEN1 ACCEN1;
    Ifx_MTU_ACCEN0 ACCEN0;
    unsigned char reserved_100[1];
} Ifx_MTU;
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxMtu_reg.h" 2 3





#define MODULE_MTU (*(Ifx_MTU*)0xF0060000u)







#define MTU_ACCEN0 (*(volatile Ifx_MTU_ACCEN0*)0xF00600FCu)


#define MTU_ACCEN1 (*(volatile Ifx_MTU_ACCEN1*)0xF00600F8u)


#define MTU_CLC (*(volatile Ifx_MTU_CLC*)0xF0060000u)


#define MTU_ID (*(volatile Ifx_MTU_ID*)0xF0060008u)


#define MTU_MEMMAP (*(volatile Ifx_MTU_MEMMAP*)0xF006001Cu)


#define MTU_MEMSTAT0 (*(volatile Ifx_MTU_MEMSTAT0*)0xF0060038u)


#define MTU_MEMSTAT1 (*(volatile Ifx_MTU_MEMSTAT1*)0xF006003Cu)


#define MTU_MEMSTAT2 (*(volatile Ifx_MTU_MEMSTAT2*)0xF0060040u)


#define MTU_MEMTEST0 (*(volatile Ifx_MTU_MEMTEST0*)0xF0060010u)


#define MTU_MEMTEST1 (*(volatile Ifx_MTU_MEMTEST1*)0xF0060014u)


#define MTU_MEMTEST2 (*(volatile Ifx_MTU_MEMTEST2*)0xF0060018u)
# 53 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_reg.h" 2 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxOvc_reg.h" 1 3
# 40 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxOvc_reg.h" 3
#define IFXOVC_REG_H 1

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxOvc_regdef.h" 1 3
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxOvc_regdef.h" 3
#define IFXOVC_REGDEF_H 1







typedef struct _Ifx_OVC_BLK_OMASK_Bits
{
    volatile unsigned int reserved_0:5;
    volatile unsigned int OMASK:12;
    volatile unsigned int ONE:11;
    volatile unsigned int reserved_28:4;
} Ifx_OVC_BLK_OMASK_Bits;


typedef struct _Ifx_OVC_BLK_OTAR_Bits
{
    volatile unsigned int reserved_0:5;
    volatile unsigned int TBASE:23;
    volatile unsigned int reserved_28:4;
} Ifx_OVC_BLK_OTAR_Bits;


typedef struct _Ifx_OVC_BLK_RABR_Bits
{
    volatile unsigned int reserved_0:5;
    volatile unsigned int OBASE:17;
    volatile unsigned int reserved_22:2;
    volatile unsigned int OMEM:3;
    volatile unsigned int reserved_27:4;
    volatile unsigned int OVEN:1;
} Ifx_OVC_BLK_RABR_Bits;


typedef struct _Ifx_OVC_OSEL_Bits
{
    volatile unsigned int SHOVEN0:1;
    volatile unsigned int SHOVEN1:1;
    volatile unsigned int SHOVEN2:1;
    volatile unsigned int SHOVEN3:1;
    volatile unsigned int SHOVEN4:1;
    volatile unsigned int SHOVEN5:1;
    volatile unsigned int SHOVEN6:1;
    volatile unsigned int SHOVEN7:1;
    volatile unsigned int SHOVEN8:1;
    volatile unsigned int SHOVEN9:1;
    volatile unsigned int SHOVEN10:1;
    volatile unsigned int SHOVEN11:1;
    volatile unsigned int SHOVEN12:1;
    volatile unsigned int SHOVEN13:1;
    volatile unsigned int SHOVEN14:1;
    volatile unsigned int SHOVEN15:1;
    volatile unsigned int SHOVEN16:1;
    volatile unsigned int SHOVEN17:1;
    volatile unsigned int SHOVEN18:1;
    volatile unsigned int SHOVEN19:1;
    volatile unsigned int SHOVEN20:1;
    volatile unsigned int SHOVEN21:1;
    volatile unsigned int SHOVEN22:1;
    volatile unsigned int SHOVEN23:1;
    volatile unsigned int SHOVEN24:1;
    volatile unsigned int SHOVEN25:1;
    volatile unsigned int SHOVEN26:1;
    volatile unsigned int SHOVEN27:1;
    volatile unsigned int SHOVEN28:1;
    volatile unsigned int SHOVEN29:1;
    volatile unsigned int SHOVEN30:1;
    volatile unsigned int SHOVEN31:1;
} Ifx_OVC_OSEL_Bits;







typedef union
{
    unsigned int U;
    signed int I;
    Ifx_OVC_BLK_OMASK_Bits B;
} Ifx_OVC_BLK_OMASK;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_OVC_BLK_OTAR_Bits B;
} Ifx_OVC_BLK_OTAR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_OVC_BLK_RABR_Bits B;
} Ifx_OVC_BLK_RABR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_OVC_OSEL_Bits B;
} Ifx_OVC_OSEL;
# 155 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxOvc_regdef.h" 3
typedef volatile struct _Ifx_OVC_BLK
{
    Ifx_OVC_BLK_RABR RABR;
    Ifx_OVC_BLK_OTAR OTAR;
    Ifx_OVC_BLK_OMASK OMASK;
} Ifx_OVC_BLK;
# 173 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxOvc_regdef.h" 3
typedef volatile struct _Ifx_OVC
{
    Ifx_OVC_OSEL OSEL;
    unsigned char reserved_4[12];
    Ifx_OVC_BLK BLK[32];
    unsigned char reserved_190[112];
} Ifx_OVC;
# 43 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxOvc_reg.h" 2 3





#define MODULE_OVC0 (*(Ifx_OVC*)0xF880FB00u)


#define MODULE_OVC1 (*(Ifx_OVC*)0xF882FB00u)


#define MODULE_OVC2 (*(Ifx_OVC*)0xF884FB00u)







#define OVC0_BLK0_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF880FB18u)




#define OVC0_OMASK0 (OVC0_BLK0_OMASK)


#define OVC0_BLK0_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF880FB14u)




#define OVC0_OTAR0 (OVC0_BLK0_OTAR)


#define OVC0_BLK0_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF880FB10u)




#define OVC0_RABR0 (OVC0_BLK0_RABR)


#define OVC0_BLK10_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF880FB90u)




#define OVC0_OMASK10 (OVC0_BLK10_OMASK)


#define OVC0_BLK10_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF880FB8Cu)




#define OVC0_OTAR10 (OVC0_BLK10_OTAR)


#define OVC0_BLK10_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF880FB88u)




#define OVC0_RABR10 (OVC0_BLK10_RABR)


#define OVC0_BLK11_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF880FB9Cu)




#define OVC0_OMASK11 (OVC0_BLK11_OMASK)


#define OVC0_BLK11_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF880FB98u)




#define OVC0_OTAR11 (OVC0_BLK11_OTAR)


#define OVC0_BLK11_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF880FB94u)




#define OVC0_RABR11 (OVC0_BLK11_RABR)


#define OVC0_BLK12_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF880FBA8u)




#define OVC0_OMASK12 (OVC0_BLK12_OMASK)


#define OVC0_BLK12_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF880FBA4u)




#define OVC0_OTAR12 (OVC0_BLK12_OTAR)


#define OVC0_BLK12_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF880FBA0u)




#define OVC0_RABR12 (OVC0_BLK12_RABR)


#define OVC0_BLK13_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF880FBB4u)




#define OVC0_OMASK13 (OVC0_BLK13_OMASK)


#define OVC0_BLK13_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF880FBB0u)




#define OVC0_OTAR13 (OVC0_BLK13_OTAR)


#define OVC0_BLK13_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF880FBACu)




#define OVC0_RABR13 (OVC0_BLK13_RABR)


#define OVC0_BLK14_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF880FBC0u)




#define OVC0_OMASK14 (OVC0_BLK14_OMASK)


#define OVC0_BLK14_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF880FBBCu)




#define OVC0_OTAR14 (OVC0_BLK14_OTAR)


#define OVC0_BLK14_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF880FBB8u)




#define OVC0_RABR14 (OVC0_BLK14_RABR)


#define OVC0_BLK15_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF880FBCCu)




#define OVC0_OMASK15 (OVC0_BLK15_OMASK)


#define OVC0_BLK15_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF880FBC8u)




#define OVC0_OTAR15 (OVC0_BLK15_OTAR)


#define OVC0_BLK15_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF880FBC4u)




#define OVC0_RABR15 (OVC0_BLK15_RABR)


#define OVC0_BLK16_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF880FBD8u)




#define OVC0_OMASK16 (OVC0_BLK16_OMASK)


#define OVC0_BLK16_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF880FBD4u)




#define OVC0_OTAR16 (OVC0_BLK16_OTAR)


#define OVC0_BLK16_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF880FBD0u)




#define OVC0_RABR16 (OVC0_BLK16_RABR)


#define OVC0_BLK17_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF880FBE4u)




#define OVC0_OMASK17 (OVC0_BLK17_OMASK)


#define OVC0_BLK17_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF880FBE0u)




#define OVC0_OTAR17 (OVC0_BLK17_OTAR)


#define OVC0_BLK17_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF880FBDCu)




#define OVC0_RABR17 (OVC0_BLK17_RABR)


#define OVC0_BLK18_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF880FBF0u)




#define OVC0_OMASK18 (OVC0_BLK18_OMASK)


#define OVC0_BLK18_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF880FBECu)




#define OVC0_OTAR18 (OVC0_BLK18_OTAR)


#define OVC0_BLK18_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF880FBE8u)




#define OVC0_RABR18 (OVC0_BLK18_RABR)


#define OVC0_BLK19_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF880FBFCu)




#define OVC0_OMASK19 (OVC0_BLK19_OMASK)


#define OVC0_BLK19_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF880FBF8u)




#define OVC0_OTAR19 (OVC0_BLK19_OTAR)


#define OVC0_BLK19_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF880FBF4u)




#define OVC0_RABR19 (OVC0_BLK19_RABR)


#define OVC0_BLK1_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF880FB24u)




#define OVC0_OMASK1 (OVC0_BLK1_OMASK)


#define OVC0_BLK1_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF880FB20u)




#define OVC0_OTAR1 (OVC0_BLK1_OTAR)


#define OVC0_BLK1_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF880FB1Cu)




#define OVC0_RABR1 (OVC0_BLK1_RABR)


#define OVC0_BLK20_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF880FC08u)




#define OVC0_OMASK20 (OVC0_BLK20_OMASK)


#define OVC0_BLK20_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF880FC04u)




#define OVC0_OTAR20 (OVC0_BLK20_OTAR)


#define OVC0_BLK20_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF880FC00u)




#define OVC0_RABR20 (OVC0_BLK20_RABR)


#define OVC0_BLK21_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF880FC14u)




#define OVC0_OMASK21 (OVC0_BLK21_OMASK)


#define OVC0_BLK21_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF880FC10u)




#define OVC0_OTAR21 (OVC0_BLK21_OTAR)


#define OVC0_BLK21_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF880FC0Cu)




#define OVC0_RABR21 (OVC0_BLK21_RABR)


#define OVC0_BLK22_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF880FC20u)




#define OVC0_OMASK22 (OVC0_BLK22_OMASK)


#define OVC0_BLK22_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF880FC1Cu)




#define OVC0_OTAR22 (OVC0_BLK22_OTAR)


#define OVC0_BLK22_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF880FC18u)




#define OVC0_RABR22 (OVC0_BLK22_RABR)


#define OVC0_BLK23_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF880FC2Cu)




#define OVC0_OMASK23 (OVC0_BLK23_OMASK)


#define OVC0_BLK23_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF880FC28u)




#define OVC0_OTAR23 (OVC0_BLK23_OTAR)


#define OVC0_BLK23_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF880FC24u)




#define OVC0_RABR23 (OVC0_BLK23_RABR)


#define OVC0_BLK24_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF880FC38u)




#define OVC0_OMASK24 (OVC0_BLK24_OMASK)


#define OVC0_BLK24_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF880FC34u)




#define OVC0_OTAR24 (OVC0_BLK24_OTAR)


#define OVC0_BLK24_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF880FC30u)




#define OVC0_RABR24 (OVC0_BLK24_RABR)


#define OVC0_BLK25_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF880FC44u)




#define OVC0_OMASK25 (OVC0_BLK25_OMASK)


#define OVC0_BLK25_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF880FC40u)




#define OVC0_OTAR25 (OVC0_BLK25_OTAR)


#define OVC0_BLK25_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF880FC3Cu)




#define OVC0_RABR25 (OVC0_BLK25_RABR)


#define OVC0_BLK26_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF880FC50u)




#define OVC0_OMASK26 (OVC0_BLK26_OMASK)


#define OVC0_BLK26_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF880FC4Cu)




#define OVC0_OTAR26 (OVC0_BLK26_OTAR)


#define OVC0_BLK26_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF880FC48u)




#define OVC0_RABR26 (OVC0_BLK26_RABR)


#define OVC0_BLK27_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF880FC5Cu)




#define OVC0_OMASK27 (OVC0_BLK27_OMASK)


#define OVC0_BLK27_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF880FC58u)




#define OVC0_OTAR27 (OVC0_BLK27_OTAR)


#define OVC0_BLK27_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF880FC54u)




#define OVC0_RABR27 (OVC0_BLK27_RABR)


#define OVC0_BLK28_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF880FC68u)




#define OVC0_OMASK28 (OVC0_BLK28_OMASK)


#define OVC0_BLK28_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF880FC64u)




#define OVC0_OTAR28 (OVC0_BLK28_OTAR)


#define OVC0_BLK28_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF880FC60u)




#define OVC0_RABR28 (OVC0_BLK28_RABR)


#define OVC0_BLK29_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF880FC74u)




#define OVC0_OMASK29 (OVC0_BLK29_OMASK)


#define OVC0_BLK29_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF880FC70u)




#define OVC0_OTAR29 (OVC0_BLK29_OTAR)


#define OVC0_BLK29_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF880FC6Cu)




#define OVC0_RABR29 (OVC0_BLK29_RABR)


#define OVC0_BLK2_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF880FB30u)




#define OVC0_OMASK2 (OVC0_BLK2_OMASK)


#define OVC0_BLK2_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF880FB2Cu)




#define OVC0_OTAR2 (OVC0_BLK2_OTAR)


#define OVC0_BLK2_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF880FB28u)




#define OVC0_RABR2 (OVC0_BLK2_RABR)


#define OVC0_BLK30_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF880FC80u)




#define OVC0_OMASK30 (OVC0_BLK30_OMASK)


#define OVC0_BLK30_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF880FC7Cu)




#define OVC0_OTAR30 (OVC0_BLK30_OTAR)


#define OVC0_BLK30_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF880FC78u)




#define OVC0_RABR30 (OVC0_BLK30_RABR)


#define OVC0_BLK31_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF880FC8Cu)




#define OVC0_OMASK31 (OVC0_BLK31_OMASK)


#define OVC0_BLK31_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF880FC88u)




#define OVC0_OTAR31 (OVC0_BLK31_OTAR)


#define OVC0_BLK31_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF880FC84u)




#define OVC0_RABR31 (OVC0_BLK31_RABR)


#define OVC0_BLK3_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF880FB3Cu)




#define OVC0_OMASK3 (OVC0_BLK3_OMASK)


#define OVC0_BLK3_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF880FB38u)




#define OVC0_OTAR3 (OVC0_BLK3_OTAR)


#define OVC0_BLK3_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF880FB34u)




#define OVC0_RABR3 (OVC0_BLK3_RABR)


#define OVC0_BLK4_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF880FB48u)




#define OVC0_OMASK4 (OVC0_BLK4_OMASK)


#define OVC0_BLK4_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF880FB44u)




#define OVC0_OTAR4 (OVC0_BLK4_OTAR)


#define OVC0_BLK4_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF880FB40u)




#define OVC0_RABR4 (OVC0_BLK4_RABR)


#define OVC0_BLK5_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF880FB54u)




#define OVC0_OMASK5 (OVC0_BLK5_OMASK)


#define OVC0_BLK5_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF880FB50u)




#define OVC0_OTAR5 (OVC0_BLK5_OTAR)


#define OVC0_BLK5_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF880FB4Cu)




#define OVC0_RABR5 (OVC0_BLK5_RABR)


#define OVC0_BLK6_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF880FB60u)




#define OVC0_OMASK6 (OVC0_BLK6_OMASK)


#define OVC0_BLK6_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF880FB5Cu)




#define OVC0_OTAR6 (OVC0_BLK6_OTAR)


#define OVC0_BLK6_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF880FB58u)




#define OVC0_RABR6 (OVC0_BLK6_RABR)


#define OVC0_BLK7_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF880FB6Cu)




#define OVC0_OMASK7 (OVC0_BLK7_OMASK)


#define OVC0_BLK7_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF880FB68u)




#define OVC0_OTAR7 (OVC0_BLK7_OTAR)


#define OVC0_BLK7_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF880FB64u)




#define OVC0_RABR7 (OVC0_BLK7_RABR)


#define OVC0_BLK8_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF880FB78u)




#define OVC0_OMASK8 (OVC0_BLK8_OMASK)


#define OVC0_BLK8_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF880FB74u)




#define OVC0_OTAR8 (OVC0_BLK8_OTAR)


#define OVC0_BLK8_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF880FB70u)




#define OVC0_RABR8 (OVC0_BLK8_RABR)


#define OVC0_BLK9_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF880FB84u)




#define OVC0_OMASK9 (OVC0_BLK9_OMASK)


#define OVC0_BLK9_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF880FB80u)




#define OVC0_OTAR9 (OVC0_BLK9_OTAR)


#define OVC0_BLK9_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF880FB7Cu)




#define OVC0_RABR9 (OVC0_BLK9_RABR)


#define OVC0_OSEL (*(volatile Ifx_OVC_OSEL*)0xF880FB00u)







#define OVC1_BLK0_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF882FB18u)




#define OVC1_OMASK0 (OVC1_BLK0_OMASK)


#define OVC1_BLK0_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF882FB14u)




#define OVC1_OTAR0 (OVC1_BLK0_OTAR)


#define OVC1_BLK0_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF882FB10u)




#define OVC1_RABR0 (OVC1_BLK0_RABR)


#define OVC1_BLK10_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF882FB90u)




#define OVC1_OMASK10 (OVC1_BLK10_OMASK)


#define OVC1_BLK10_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF882FB8Cu)




#define OVC1_OTAR10 (OVC1_BLK10_OTAR)


#define OVC1_BLK10_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF882FB88u)




#define OVC1_RABR10 (OVC1_BLK10_RABR)


#define OVC1_BLK11_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF882FB9Cu)




#define OVC1_OMASK11 (OVC1_BLK11_OMASK)


#define OVC1_BLK11_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF882FB98u)




#define OVC1_OTAR11 (OVC1_BLK11_OTAR)


#define OVC1_BLK11_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF882FB94u)




#define OVC1_RABR11 (OVC1_BLK11_RABR)


#define OVC1_BLK12_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF882FBA8u)




#define OVC1_OMASK12 (OVC1_BLK12_OMASK)


#define OVC1_BLK12_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF882FBA4u)




#define OVC1_OTAR12 (OVC1_BLK12_OTAR)


#define OVC1_BLK12_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF882FBA0u)




#define OVC1_RABR12 (OVC1_BLK12_RABR)


#define OVC1_BLK13_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF882FBB4u)




#define OVC1_OMASK13 (OVC1_BLK13_OMASK)


#define OVC1_BLK13_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF882FBB0u)




#define OVC1_OTAR13 (OVC1_BLK13_OTAR)


#define OVC1_BLK13_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF882FBACu)




#define OVC1_RABR13 (OVC1_BLK13_RABR)


#define OVC1_BLK14_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF882FBC0u)




#define OVC1_OMASK14 (OVC1_BLK14_OMASK)


#define OVC1_BLK14_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF882FBBCu)




#define OVC1_OTAR14 (OVC1_BLK14_OTAR)


#define OVC1_BLK14_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF882FBB8u)




#define OVC1_RABR14 (OVC1_BLK14_RABR)


#define OVC1_BLK15_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF882FBCCu)




#define OVC1_OMASK15 (OVC1_BLK15_OMASK)


#define OVC1_BLK15_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF882FBC8u)




#define OVC1_OTAR15 (OVC1_BLK15_OTAR)


#define OVC1_BLK15_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF882FBC4u)




#define OVC1_RABR15 (OVC1_BLK15_RABR)


#define OVC1_BLK16_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF882FBD8u)




#define OVC1_OMASK16 (OVC1_BLK16_OMASK)


#define OVC1_BLK16_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF882FBD4u)




#define OVC1_OTAR16 (OVC1_BLK16_OTAR)


#define OVC1_BLK16_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF882FBD0u)




#define OVC1_RABR16 (OVC1_BLK16_RABR)


#define OVC1_BLK17_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF882FBE4u)




#define OVC1_OMASK17 (OVC1_BLK17_OMASK)


#define OVC1_BLK17_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF882FBE0u)




#define OVC1_OTAR17 (OVC1_BLK17_OTAR)


#define OVC1_BLK17_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF882FBDCu)




#define OVC1_RABR17 (OVC1_BLK17_RABR)


#define OVC1_BLK18_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF882FBF0u)




#define OVC1_OMASK18 (OVC1_BLK18_OMASK)


#define OVC1_BLK18_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF882FBECu)




#define OVC1_OTAR18 (OVC1_BLK18_OTAR)


#define OVC1_BLK18_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF882FBE8u)




#define OVC1_RABR18 (OVC1_BLK18_RABR)


#define OVC1_BLK19_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF882FBFCu)




#define OVC1_OMASK19 (OVC1_BLK19_OMASK)


#define OVC1_BLK19_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF882FBF8u)




#define OVC1_OTAR19 (OVC1_BLK19_OTAR)


#define OVC1_BLK19_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF882FBF4u)




#define OVC1_RABR19 (OVC1_BLK19_RABR)


#define OVC1_BLK1_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF882FB24u)




#define OVC1_OMASK1 (OVC1_BLK1_OMASK)


#define OVC1_BLK1_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF882FB20u)




#define OVC1_OTAR1 (OVC1_BLK1_OTAR)


#define OVC1_BLK1_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF882FB1Cu)




#define OVC1_RABR1 (OVC1_BLK1_RABR)


#define OVC1_BLK20_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF882FC08u)




#define OVC1_OMASK20 (OVC1_BLK20_OMASK)


#define OVC1_BLK20_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF882FC04u)




#define OVC1_OTAR20 (OVC1_BLK20_OTAR)


#define OVC1_BLK20_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF882FC00u)




#define OVC1_RABR20 (OVC1_BLK20_RABR)


#define OVC1_BLK21_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF882FC14u)




#define OVC1_OMASK21 (OVC1_BLK21_OMASK)


#define OVC1_BLK21_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF882FC10u)




#define OVC1_OTAR21 (OVC1_BLK21_OTAR)


#define OVC1_BLK21_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF882FC0Cu)




#define OVC1_RABR21 (OVC1_BLK21_RABR)


#define OVC1_BLK22_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF882FC20u)




#define OVC1_OMASK22 (OVC1_BLK22_OMASK)


#define OVC1_BLK22_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF882FC1Cu)




#define OVC1_OTAR22 (OVC1_BLK22_OTAR)


#define OVC1_BLK22_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF882FC18u)




#define OVC1_RABR22 (OVC1_BLK22_RABR)


#define OVC1_BLK23_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF882FC2Cu)




#define OVC1_OMASK23 (OVC1_BLK23_OMASK)


#define OVC1_BLK23_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF882FC28u)




#define OVC1_OTAR23 (OVC1_BLK23_OTAR)


#define OVC1_BLK23_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF882FC24u)




#define OVC1_RABR23 (OVC1_BLK23_RABR)


#define OVC1_BLK24_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF882FC38u)




#define OVC1_OMASK24 (OVC1_BLK24_OMASK)


#define OVC1_BLK24_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF882FC34u)




#define OVC1_OTAR24 (OVC1_BLK24_OTAR)


#define OVC1_BLK24_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF882FC30u)




#define OVC1_RABR24 (OVC1_BLK24_RABR)


#define OVC1_BLK25_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF882FC44u)




#define OVC1_OMASK25 (OVC1_BLK25_OMASK)


#define OVC1_BLK25_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF882FC40u)




#define OVC1_OTAR25 (OVC1_BLK25_OTAR)


#define OVC1_BLK25_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF882FC3Cu)




#define OVC1_RABR25 (OVC1_BLK25_RABR)


#define OVC1_BLK26_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF882FC50u)




#define OVC1_OMASK26 (OVC1_BLK26_OMASK)


#define OVC1_BLK26_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF882FC4Cu)




#define OVC1_OTAR26 (OVC1_BLK26_OTAR)


#define OVC1_BLK26_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF882FC48u)




#define OVC1_RABR26 (OVC1_BLK26_RABR)


#define OVC1_BLK27_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF882FC5Cu)




#define OVC1_OMASK27 (OVC1_BLK27_OMASK)


#define OVC1_BLK27_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF882FC58u)




#define OVC1_OTAR27 (OVC1_BLK27_OTAR)


#define OVC1_BLK27_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF882FC54u)




#define OVC1_RABR27 (OVC1_BLK27_RABR)


#define OVC1_BLK28_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF882FC68u)




#define OVC1_OMASK28 (OVC1_BLK28_OMASK)


#define OVC1_BLK28_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF882FC64u)




#define OVC1_OTAR28 (OVC1_BLK28_OTAR)


#define OVC1_BLK28_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF882FC60u)




#define OVC1_RABR28 (OVC1_BLK28_RABR)


#define OVC1_BLK29_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF882FC74u)




#define OVC1_OMASK29 (OVC1_BLK29_OMASK)


#define OVC1_BLK29_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF882FC70u)




#define OVC1_OTAR29 (OVC1_BLK29_OTAR)


#define OVC1_BLK29_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF882FC6Cu)




#define OVC1_RABR29 (OVC1_BLK29_RABR)


#define OVC1_BLK2_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF882FB30u)




#define OVC1_OMASK2 (OVC1_BLK2_OMASK)


#define OVC1_BLK2_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF882FB2Cu)




#define OVC1_OTAR2 (OVC1_BLK2_OTAR)


#define OVC1_BLK2_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF882FB28u)




#define OVC1_RABR2 (OVC1_BLK2_RABR)


#define OVC1_BLK30_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF882FC80u)




#define OVC1_OMASK30 (OVC1_BLK30_OMASK)


#define OVC1_BLK30_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF882FC7Cu)




#define OVC1_OTAR30 (OVC1_BLK30_OTAR)


#define OVC1_BLK30_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF882FC78u)




#define OVC1_RABR30 (OVC1_BLK30_RABR)


#define OVC1_BLK31_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF882FC8Cu)




#define OVC1_OMASK31 (OVC1_BLK31_OMASK)


#define OVC1_BLK31_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF882FC88u)




#define OVC1_OTAR31 (OVC1_BLK31_OTAR)


#define OVC1_BLK31_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF882FC84u)




#define OVC1_RABR31 (OVC1_BLK31_RABR)


#define OVC1_BLK3_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF882FB3Cu)




#define OVC1_OMASK3 (OVC1_BLK3_OMASK)


#define OVC1_BLK3_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF882FB38u)




#define OVC1_OTAR3 (OVC1_BLK3_OTAR)


#define OVC1_BLK3_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF882FB34u)




#define OVC1_RABR3 (OVC1_BLK3_RABR)


#define OVC1_BLK4_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF882FB48u)




#define OVC1_OMASK4 (OVC1_BLK4_OMASK)


#define OVC1_BLK4_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF882FB44u)




#define OVC1_OTAR4 (OVC1_BLK4_OTAR)


#define OVC1_BLK4_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF882FB40u)




#define OVC1_RABR4 (OVC1_BLK4_RABR)


#define OVC1_BLK5_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF882FB54u)




#define OVC1_OMASK5 (OVC1_BLK5_OMASK)


#define OVC1_BLK5_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF882FB50u)




#define OVC1_OTAR5 (OVC1_BLK5_OTAR)


#define OVC1_BLK5_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF882FB4Cu)




#define OVC1_RABR5 (OVC1_BLK5_RABR)


#define OVC1_BLK6_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF882FB60u)




#define OVC1_OMASK6 (OVC1_BLK6_OMASK)


#define OVC1_BLK6_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF882FB5Cu)




#define OVC1_OTAR6 (OVC1_BLK6_OTAR)


#define OVC1_BLK6_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF882FB58u)




#define OVC1_RABR6 (OVC1_BLK6_RABR)


#define OVC1_BLK7_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF882FB6Cu)




#define OVC1_OMASK7 (OVC1_BLK7_OMASK)


#define OVC1_BLK7_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF882FB68u)




#define OVC1_OTAR7 (OVC1_BLK7_OTAR)


#define OVC1_BLK7_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF882FB64u)




#define OVC1_RABR7 (OVC1_BLK7_RABR)


#define OVC1_BLK8_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF882FB78u)




#define OVC1_OMASK8 (OVC1_BLK8_OMASK)


#define OVC1_BLK8_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF882FB74u)




#define OVC1_OTAR8 (OVC1_BLK8_OTAR)


#define OVC1_BLK8_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF882FB70u)




#define OVC1_RABR8 (OVC1_BLK8_RABR)


#define OVC1_BLK9_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF882FB84u)




#define OVC1_OMASK9 (OVC1_BLK9_OMASK)


#define OVC1_BLK9_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF882FB80u)




#define OVC1_OTAR9 (OVC1_BLK9_OTAR)


#define OVC1_BLK9_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF882FB7Cu)




#define OVC1_RABR9 (OVC1_BLK9_RABR)


#define OVC1_OSEL (*(volatile Ifx_OVC_OSEL*)0xF882FB00u)







#define OVC2_BLK0_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF884FB18u)




#define OVC2_OMASK0 (OVC2_BLK0_OMASK)


#define OVC2_BLK0_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF884FB14u)




#define OVC2_OTAR0 (OVC2_BLK0_OTAR)


#define OVC2_BLK0_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF884FB10u)




#define OVC2_RABR0 (OVC2_BLK0_RABR)


#define OVC2_BLK10_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF884FB90u)




#define OVC2_OMASK10 (OVC2_BLK10_OMASK)


#define OVC2_BLK10_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF884FB8Cu)




#define OVC2_OTAR10 (OVC2_BLK10_OTAR)


#define OVC2_BLK10_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF884FB88u)




#define OVC2_RABR10 (OVC2_BLK10_RABR)


#define OVC2_BLK11_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF884FB9Cu)




#define OVC2_OMASK11 (OVC2_BLK11_OMASK)


#define OVC2_BLK11_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF884FB98u)




#define OVC2_OTAR11 (OVC2_BLK11_OTAR)


#define OVC2_BLK11_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF884FB94u)




#define OVC2_RABR11 (OVC2_BLK11_RABR)


#define OVC2_BLK12_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF884FBA8u)




#define OVC2_OMASK12 (OVC2_BLK12_OMASK)


#define OVC2_BLK12_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF884FBA4u)




#define OVC2_OTAR12 (OVC2_BLK12_OTAR)


#define OVC2_BLK12_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF884FBA0u)




#define OVC2_RABR12 (OVC2_BLK12_RABR)


#define OVC2_BLK13_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF884FBB4u)




#define OVC2_OMASK13 (OVC2_BLK13_OMASK)


#define OVC2_BLK13_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF884FBB0u)




#define OVC2_OTAR13 (OVC2_BLK13_OTAR)


#define OVC2_BLK13_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF884FBACu)




#define OVC2_RABR13 (OVC2_BLK13_RABR)


#define OVC2_BLK14_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF884FBC0u)




#define OVC2_OMASK14 (OVC2_BLK14_OMASK)


#define OVC2_BLK14_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF884FBBCu)




#define OVC2_OTAR14 (OVC2_BLK14_OTAR)


#define OVC2_BLK14_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF884FBB8u)




#define OVC2_RABR14 (OVC2_BLK14_RABR)


#define OVC2_BLK15_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF884FBCCu)




#define OVC2_OMASK15 (OVC2_BLK15_OMASK)


#define OVC2_BLK15_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF884FBC8u)




#define OVC2_OTAR15 (OVC2_BLK15_OTAR)


#define OVC2_BLK15_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF884FBC4u)




#define OVC2_RABR15 (OVC2_BLK15_RABR)


#define OVC2_BLK16_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF884FBD8u)




#define OVC2_OMASK16 (OVC2_BLK16_OMASK)


#define OVC2_BLK16_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF884FBD4u)




#define OVC2_OTAR16 (OVC2_BLK16_OTAR)


#define OVC2_BLK16_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF884FBD0u)




#define OVC2_RABR16 (OVC2_BLK16_RABR)


#define OVC2_BLK17_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF884FBE4u)




#define OVC2_OMASK17 (OVC2_BLK17_OMASK)


#define OVC2_BLK17_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF884FBE0u)




#define OVC2_OTAR17 (OVC2_BLK17_OTAR)


#define OVC2_BLK17_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF884FBDCu)




#define OVC2_RABR17 (OVC2_BLK17_RABR)


#define OVC2_BLK18_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF884FBF0u)




#define OVC2_OMASK18 (OVC2_BLK18_OMASK)


#define OVC2_BLK18_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF884FBECu)




#define OVC2_OTAR18 (OVC2_BLK18_OTAR)


#define OVC2_BLK18_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF884FBE8u)




#define OVC2_RABR18 (OVC2_BLK18_RABR)


#define OVC2_BLK19_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF884FBFCu)




#define OVC2_OMASK19 (OVC2_BLK19_OMASK)


#define OVC2_BLK19_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF884FBF8u)




#define OVC2_OTAR19 (OVC2_BLK19_OTAR)


#define OVC2_BLK19_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF884FBF4u)




#define OVC2_RABR19 (OVC2_BLK19_RABR)


#define OVC2_BLK1_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF884FB24u)




#define OVC2_OMASK1 (OVC2_BLK1_OMASK)


#define OVC2_BLK1_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF884FB20u)




#define OVC2_OTAR1 (OVC2_BLK1_OTAR)


#define OVC2_BLK1_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF884FB1Cu)




#define OVC2_RABR1 (OVC2_BLK1_RABR)


#define OVC2_BLK20_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF884FC08u)




#define OVC2_OMASK20 (OVC2_BLK20_OMASK)


#define OVC2_BLK20_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF884FC04u)




#define OVC2_OTAR20 (OVC2_BLK20_OTAR)


#define OVC2_BLK20_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF884FC00u)




#define OVC2_RABR20 (OVC2_BLK20_RABR)


#define OVC2_BLK21_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF884FC14u)




#define OVC2_OMASK21 (OVC2_BLK21_OMASK)


#define OVC2_BLK21_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF884FC10u)




#define OVC2_OTAR21 (OVC2_BLK21_OTAR)


#define OVC2_BLK21_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF884FC0Cu)




#define OVC2_RABR21 (OVC2_BLK21_RABR)


#define OVC2_BLK22_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF884FC20u)




#define OVC2_OMASK22 (OVC2_BLK22_OMASK)


#define OVC2_BLK22_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF884FC1Cu)




#define OVC2_OTAR22 (OVC2_BLK22_OTAR)


#define OVC2_BLK22_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF884FC18u)




#define OVC2_RABR22 (OVC2_BLK22_RABR)


#define OVC2_BLK23_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF884FC2Cu)




#define OVC2_OMASK23 (OVC2_BLK23_OMASK)


#define OVC2_BLK23_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF884FC28u)




#define OVC2_OTAR23 (OVC2_BLK23_OTAR)


#define OVC2_BLK23_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF884FC24u)




#define OVC2_RABR23 (OVC2_BLK23_RABR)


#define OVC2_BLK24_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF884FC38u)




#define OVC2_OMASK24 (OVC2_BLK24_OMASK)


#define OVC2_BLK24_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF884FC34u)




#define OVC2_OTAR24 (OVC2_BLK24_OTAR)


#define OVC2_BLK24_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF884FC30u)




#define OVC2_RABR24 (OVC2_BLK24_RABR)


#define OVC2_BLK25_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF884FC44u)




#define OVC2_OMASK25 (OVC2_BLK25_OMASK)


#define OVC2_BLK25_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF884FC40u)




#define OVC2_OTAR25 (OVC2_BLK25_OTAR)


#define OVC2_BLK25_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF884FC3Cu)




#define OVC2_RABR25 (OVC2_BLK25_RABR)


#define OVC2_BLK26_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF884FC50u)




#define OVC2_OMASK26 (OVC2_BLK26_OMASK)


#define OVC2_BLK26_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF884FC4Cu)




#define OVC2_OTAR26 (OVC2_BLK26_OTAR)


#define OVC2_BLK26_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF884FC48u)




#define OVC2_RABR26 (OVC2_BLK26_RABR)


#define OVC2_BLK27_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF884FC5Cu)




#define OVC2_OMASK27 (OVC2_BLK27_OMASK)


#define OVC2_BLK27_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF884FC58u)




#define OVC2_OTAR27 (OVC2_BLK27_OTAR)


#define OVC2_BLK27_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF884FC54u)




#define OVC2_RABR27 (OVC2_BLK27_RABR)


#define OVC2_BLK28_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF884FC68u)




#define OVC2_OMASK28 (OVC2_BLK28_OMASK)


#define OVC2_BLK28_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF884FC64u)




#define OVC2_OTAR28 (OVC2_BLK28_OTAR)


#define OVC2_BLK28_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF884FC60u)




#define OVC2_RABR28 (OVC2_BLK28_RABR)


#define OVC2_BLK29_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF884FC74u)




#define OVC2_OMASK29 (OVC2_BLK29_OMASK)


#define OVC2_BLK29_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF884FC70u)




#define OVC2_OTAR29 (OVC2_BLK29_OTAR)


#define OVC2_BLK29_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF884FC6Cu)




#define OVC2_RABR29 (OVC2_BLK29_RABR)


#define OVC2_BLK2_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF884FB30u)




#define OVC2_OMASK2 (OVC2_BLK2_OMASK)


#define OVC2_BLK2_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF884FB2Cu)




#define OVC2_OTAR2 (OVC2_BLK2_OTAR)


#define OVC2_BLK2_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF884FB28u)




#define OVC2_RABR2 (OVC2_BLK2_RABR)


#define OVC2_BLK30_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF884FC80u)




#define OVC2_OMASK30 (OVC2_BLK30_OMASK)


#define OVC2_BLK30_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF884FC7Cu)




#define OVC2_OTAR30 (OVC2_BLK30_OTAR)


#define OVC2_BLK30_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF884FC78u)




#define OVC2_RABR30 (OVC2_BLK30_RABR)


#define OVC2_BLK31_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF884FC8Cu)




#define OVC2_OMASK31 (OVC2_BLK31_OMASK)


#define OVC2_BLK31_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF884FC88u)




#define OVC2_OTAR31 (OVC2_BLK31_OTAR)


#define OVC2_BLK31_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF884FC84u)




#define OVC2_RABR31 (OVC2_BLK31_RABR)


#define OVC2_BLK3_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF884FB3Cu)




#define OVC2_OMASK3 (OVC2_BLK3_OMASK)


#define OVC2_BLK3_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF884FB38u)




#define OVC2_OTAR3 (OVC2_BLK3_OTAR)


#define OVC2_BLK3_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF884FB34u)




#define OVC2_RABR3 (OVC2_BLK3_RABR)


#define OVC2_BLK4_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF884FB48u)




#define OVC2_OMASK4 (OVC2_BLK4_OMASK)


#define OVC2_BLK4_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF884FB44u)




#define OVC2_OTAR4 (OVC2_BLK4_OTAR)


#define OVC2_BLK4_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF884FB40u)




#define OVC2_RABR4 (OVC2_BLK4_RABR)


#define OVC2_BLK5_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF884FB54u)




#define OVC2_OMASK5 (OVC2_BLK5_OMASK)


#define OVC2_BLK5_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF884FB50u)




#define OVC2_OTAR5 (OVC2_BLK5_OTAR)


#define OVC2_BLK5_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF884FB4Cu)




#define OVC2_RABR5 (OVC2_BLK5_RABR)


#define OVC2_BLK6_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF884FB60u)




#define OVC2_OMASK6 (OVC2_BLK6_OMASK)


#define OVC2_BLK6_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF884FB5Cu)




#define OVC2_OTAR6 (OVC2_BLK6_OTAR)


#define OVC2_BLK6_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF884FB58u)




#define OVC2_RABR6 (OVC2_BLK6_RABR)


#define OVC2_BLK7_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF884FB6Cu)




#define OVC2_OMASK7 (OVC2_BLK7_OMASK)


#define OVC2_BLK7_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF884FB68u)




#define OVC2_OTAR7 (OVC2_BLK7_OTAR)


#define OVC2_BLK7_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF884FB64u)




#define OVC2_RABR7 (OVC2_BLK7_RABR)


#define OVC2_BLK8_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF884FB78u)




#define OVC2_OMASK8 (OVC2_BLK8_OMASK)


#define OVC2_BLK8_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF884FB74u)




#define OVC2_OTAR8 (OVC2_BLK8_OTAR)


#define OVC2_BLK8_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF884FB70u)




#define OVC2_RABR8 (OVC2_BLK8_RABR)


#define OVC2_BLK9_OMASK (*(volatile Ifx_OVC_BLK_OMASK*)0xF884FB84u)




#define OVC2_OMASK9 (OVC2_BLK9_OMASK)


#define OVC2_BLK9_OTAR (*(volatile Ifx_OVC_BLK_OTAR*)0xF884FB80u)




#define OVC2_OTAR9 (OVC2_BLK9_OTAR)


#define OVC2_BLK9_RABR (*(volatile Ifx_OVC_BLK_RABR*)0xF884FB7Cu)




#define OVC2_RABR9 (OVC2_BLK9_RABR)


#define OVC2_OSEL (*(volatile Ifx_OVC_OSEL*)0xF884FB00u)
# 54 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_reg.h" 2 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxPmu_reg.h" 1 3
# 34 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxPmu_reg.h" 3
#define IFXPMU_REG_H 1

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxPmu_regdef.h" 1 3
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxPmu_regdef.h" 3
#define IFXPMU_REGDEF_H 1







typedef struct _Ifx_PMU_ID_Bits
{
    unsigned int MOD_REV:8;
    unsigned int MOD_TYPE:8;
    unsigned int MODNUMBER:16;
} Ifx_PMU_ID_Bits;







typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PMU_ID_Bits B;
} Ifx_PMU_ID;
# 74 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxPmu_regdef.h" 3
typedef volatile struct _Ifx_PMU
{
    unsigned char reserved_0[8];
    Ifx_PMU_ID ID;
    unsigned char reserved_C[245];
} Ifx_PMU;
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxPmu_reg.h" 2 3





#define MODULE_PMU0 (*(Ifx_PMU*)0xF8000500u)







#define PMU0_ID (*(volatile Ifx_PMU_ID*)0xF8000508u)
# 55 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_reg.h" 2 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxPort_reg.h" 1 3
# 56 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_reg.h" 2 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxPsi5_reg.h" 1 3
# 34 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxPsi5_reg.h" 3
#define IFXPSI5_REG_H 1

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxPsi5_regdef.h" 1 3
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxPsi5_regdef.h" 3
#define IFXPSI5_REGDEF_H 1







typedef struct _Ifx_PSI5_ACCEN0_Bits
{
    unsigned int EN0:1;
    unsigned int EN1:1;
    unsigned int EN2:1;
    unsigned int EN3:1;
    unsigned int EN4:1;
    unsigned int EN5:1;
    unsigned int EN6:1;
    unsigned int EN7:1;
    unsigned int EN8:1;
    unsigned int EN9:1;
    unsigned int EN10:1;
    unsigned int EN11:1;
    unsigned int EN12:1;
    unsigned int EN13:1;
    unsigned int EN14:1;
    unsigned int EN15:1;
    unsigned int EN16:1;
    unsigned int EN17:1;
    unsigned int EN18:1;
    unsigned int EN19:1;
    unsigned int EN20:1;
    unsigned int EN21:1;
    unsigned int EN22:1;
    unsigned int EN23:1;
    unsigned int EN24:1;
    unsigned int EN25:1;
    unsigned int EN26:1;
    unsigned int EN27:1;
    unsigned int EN28:1;
    unsigned int EN29:1;
    unsigned int EN30:1;
    unsigned int EN31:1;
} Ifx_PSI5_ACCEN0_Bits;


typedef struct _Ifx_PSI5_ACCEN1_Bits
{
    unsigned int reserved_0:32;
} Ifx_PSI5_ACCEN1_Bits;


typedef struct _Ifx_PSI5_CH_CTV_Bits
{
    unsigned int CTV:16;
    unsigned int CTC:16;
} Ifx_PSI5_CH_CTV_Bits;


typedef struct _Ifx_PSI5_CH_IOCR_Bits
{
    unsigned int ALTI:2;
    unsigned int reserved_2:2;
    unsigned int DEPTH:4;
    unsigned int OIE:1;
    unsigned int IIE:1;
    unsigned int reserved_10:2;
    unsigned int REG:1;
    unsigned int FEG:1;
    unsigned int CREG:1;
    unsigned int CFEG:1;
    unsigned int reserved_16:14;
    unsigned int RXM:1;
    unsigned int TXM:1;
} Ifx_PSI5_CH_IOCR_Bits;


typedef struct _Ifx_PSI5_CH_PGC_Bits
{
    unsigned int PLEN:6;
    unsigned int reserved_6:2;
    unsigned int DEL:6;
    unsigned int reserved_14:1;
    unsigned int TBS:1;
    unsigned int ETB:3;
    unsigned int PTE:1;
    unsigned int ETS:3;
    unsigned int ETE:1;
    unsigned int BYP:1;
    unsigned int BOT:7;
} Ifx_PSI5_CH_PGC_Bits;


typedef struct _Ifx_PSI5_CH_RCRA_Bits
{
    unsigned int PDL0:5;
    unsigned int PDL1:5;
    unsigned int PDL2:5;
    unsigned int PDL3:5;
    unsigned int PDL4:5;
    unsigned int PDL5:5;
    unsigned int ASYN:1;
    unsigned int AVBS:1;
} Ifx_PSI5_CH_RCRA_Bits;


typedef struct _Ifx_PSI5_CH_RCRB_Bits
{
    unsigned int MSG0:1;
    unsigned int CRC0:1;
    unsigned int FEC0:1;
    unsigned int VBS0:1;
    unsigned int MSG1:1;
    unsigned int CRC1:1;
    unsigned int FEC1:1;
    unsigned int VBS1:1;
    unsigned int MSG2:1;
    unsigned int CRC2:1;
    unsigned int FEC2:1;
    unsigned int VBS2:1;
    unsigned int MSG3:1;
    unsigned int CRC3:1;
    unsigned int FEC3:1;
    unsigned int VBS3:1;
    unsigned int MSG4:1;
    unsigned int CRC4:1;
    unsigned int FEC4:1;
    unsigned int VBS4:1;
    unsigned int MSG5:1;
    unsigned int CRC5:1;
    unsigned int FEC5:1;
    unsigned int VBS5:1;
    unsigned int reserved_24:8;
} Ifx_PSI5_CH_RCRB_Bits;


typedef struct _Ifx_PSI5_CH_RCRC_Bits
{
    unsigned int BRS:1;
    unsigned int TSP:2;
    unsigned int TSF:2;
    unsigned int TSR:1;
    unsigned int reserved_6:26;
} Ifx_PSI5_CH_RCRC_Bits;


typedef struct _Ifx_PSI5_CH_RDRH_Bits
{
    unsigned int TS:24;
    unsigned int SC:3;
    unsigned int TEI:1;
    unsigned int NBI:1;
    unsigned int MEI:1;
    unsigned int NFI:1;
    unsigned int RBI:1;
} Ifx_PSI5_CH_RDRH_Bits;


typedef struct _Ifx_PSI5_CH_RDRL_Bits
{
    unsigned int CRCI:1;
    unsigned int CRC:3;
    unsigned int RD:28;
} Ifx_PSI5_CH_RDRL_Bits;


typedef struct _Ifx_PSI5_CH_RSR_Bits
{
    unsigned int CRC:3;
    unsigned int reserved_3:5;
    unsigned int MSG:2;
    unsigned int reserved_10:22;
} Ifx_PSI5_CH_RSR_Bits;


typedef struct _Ifx_PSI5_CH_SCR_Bits
{
    unsigned int PLL:6;
    unsigned int EPS:1;
    unsigned int BSC:1;
    unsigned int SSL:6;
    unsigned int FLUS:1;
    unsigned int FLUO:1;
    unsigned int SOL:6;
    unsigned int CRC:1;
    unsigned int STA:1;
    unsigned int INH:1;
    unsigned int GO:1;
    unsigned int TPF:1;
    unsigned int TSF:1;
    unsigned int TOF:1;
    unsigned int reserved_29:2;
    unsigned int TRQ:1;
} Ifx_PSI5_CH_SCR_Bits;


typedef struct _Ifx_PSI5_CH_SDRH_Bits
{
    unsigned int SD32:1;
    unsigned int SD33:1;
    unsigned int SD34:1;
    unsigned int SD35:1;
    unsigned int SD36:1;
    unsigned int SD37:1;
    unsigned int SD38:1;
    unsigned int SD39:1;
    unsigned int SD40:1;
    unsigned int SD41:1;
    unsigned int SD42:1;
    unsigned int SD43:1;
    unsigned int SD44:1;
    unsigned int SD45:1;
    unsigned int SD46:1;
    unsigned int SD47:1;
    unsigned int SD48:1;
    unsigned int SD49:1;
    unsigned int SD50:1;
    unsigned int SD51:1;
    unsigned int SD52:1;
    unsigned int SD53:1;
    unsigned int SD54:1;
    unsigned int SD55:1;
    unsigned int SD56:1;
    unsigned int SD57:1;
    unsigned int SD58:1;
    unsigned int SD59:1;
    unsigned int SD60:1;
    unsigned int SD61:1;
    unsigned int SD62:1;
    unsigned int SD63:1;
} Ifx_PSI5_CH_SDRH_Bits;


typedef struct _Ifx_PSI5_CH_SDRL_Bits
{
    unsigned int SD0:1;
    unsigned int SD1:1;
    unsigned int SD2:1;
    unsigned int SD3:1;
    unsigned int SD4:1;
    unsigned int SD5:1;
    unsigned int SD6:1;
    unsigned int SD7:1;
    unsigned int SD8:1;
    unsigned int SD9:1;
    unsigned int SD10:1;
    unsigned int SD11:1;
    unsigned int SD12:1;
    unsigned int SD13:1;
    unsigned int SD14:1;
    unsigned int SD15:1;
    unsigned int SD16:1;
    unsigned int SD17:1;
    unsigned int SD18:1;
    unsigned int SD19:1;
    unsigned int SD20:1;
    unsigned int SD21:1;
    unsigned int SD22:1;
    unsigned int SD23:1;
    unsigned int SD24:1;
    unsigned int SD25:1;
    unsigned int SD26:1;
    unsigned int SD27:1;
    unsigned int SD28:1;
    unsigned int SD29:1;
    unsigned int SD30:1;
    unsigned int SD31:1;
} Ifx_PSI5_CH_SDRL_Bits;


typedef struct _Ifx_PSI5_CH_SDS_Bits
{
    unsigned int SD:16;
    unsigned int MID:8;
    unsigned int SCRC:6;
    unsigned int SCRI:1;
    unsigned int CON:1;
} Ifx_PSI5_CH_SDS_Bits;


typedef struct _Ifx_PSI5_CH_SFTSC_Bits
{
    unsigned int TS:24;
    unsigned int reserved_24:8;
} Ifx_PSI5_CH_SFTSC_Bits;


typedef struct _Ifx_PSI5_CH_SORH_Bits
{
    unsigned int SD32:1;
    unsigned int SD33:1;
    unsigned int SD34:1;
    unsigned int SD35:1;
    unsigned int SD36:1;
    unsigned int SD37:1;
    unsigned int SD38:1;
    unsigned int SD39:1;
    unsigned int SD40:1;
    unsigned int SD41:1;
    unsigned int SD42:1;
    unsigned int SD43:1;
    unsigned int SD44:1;
    unsigned int SD45:1;
    unsigned int SD46:1;
    unsigned int SD47:1;
    unsigned int SD48:1;
    unsigned int SD49:1;
    unsigned int SD50:1;
    unsigned int SD51:1;
    unsigned int SD52:1;
    unsigned int SD53:1;
    unsigned int SD54:1;
    unsigned int SD55:1;
    unsigned int SD56:1;
    unsigned int SD57:1;
    unsigned int SD58:1;
    unsigned int SD59:1;
    unsigned int SD60:1;
    unsigned int SD61:1;
    unsigned int SD62:1;
    unsigned int SD63:1;
} Ifx_PSI5_CH_SORH_Bits;


typedef struct _Ifx_PSI5_CH_SORL_Bits
{
    unsigned int SD0:1;
    unsigned int SD1:1;
    unsigned int SD2:1;
    unsigned int SD3:1;
    unsigned int SD4:1;
    unsigned int SD5:1;
    unsigned int SD6:1;
    unsigned int SD7:1;
    unsigned int SD8:1;
    unsigned int SD9:1;
    unsigned int SD10:1;
    unsigned int SD11:1;
    unsigned int SD12:1;
    unsigned int SD13:1;
    unsigned int SD14:1;
    unsigned int SD15:1;
    unsigned int SD16:1;
    unsigned int SD17:1;
    unsigned int SD18:1;
    unsigned int SD19:1;
    unsigned int SD20:1;
    unsigned int SD21:1;
    unsigned int SD22:1;
    unsigned int SD23:1;
    unsigned int SD24:1;
    unsigned int SD25:1;
    unsigned int SD26:1;
    unsigned int SD27:1;
    unsigned int SD28:1;
    unsigned int SD29:1;
    unsigned int SD30:1;
    unsigned int SD31:1;
} Ifx_PSI5_CH_SORL_Bits;


typedef struct _Ifx_PSI5_CH_SPTSC_Bits
{
    unsigned int TS:24;
    unsigned int reserved_24:8;
} Ifx_PSI5_CH_SPTSC_Bits;


typedef struct _Ifx_PSI5_CH_SSRH_Bits
{
    unsigned int SD32:1;
    unsigned int SD33:1;
    unsigned int SD34:1;
    unsigned int SD35:1;
    unsigned int SD36:1;
    unsigned int SD37:1;
    unsigned int SD38:1;
    unsigned int SD39:1;
    unsigned int SD40:1;
    unsigned int SD41:1;
    unsigned int SD42:1;
    unsigned int SD43:1;
    unsigned int SD44:1;
    unsigned int SD45:1;
    unsigned int SD46:1;
    unsigned int SD47:1;
    unsigned int SD48:1;
    unsigned int SD49:1;
    unsigned int SD50:1;
    unsigned int SD51:1;
    unsigned int SD52:1;
    unsigned int SD53:1;
    unsigned int SD54:1;
    unsigned int SD55:1;
    unsigned int SD56:1;
    unsigned int SD57:1;
    unsigned int SD58:1;
    unsigned int SD59:1;
    unsigned int SD60:1;
    unsigned int SD61:1;
    unsigned int SD62:1;
    unsigned int SD63:1;
} Ifx_PSI5_CH_SSRH_Bits;


typedef struct _Ifx_PSI5_CH_SSRL_Bits
{
    unsigned int SD0:1;
    unsigned int SD1:1;
    unsigned int SD2:1;
    unsigned int SD3:1;
    unsigned int SD4:1;
    unsigned int SD5:1;
    unsigned int SD6:1;
    unsigned int SD7:1;
    unsigned int SD8:1;
    unsigned int SD9:1;
    unsigned int SD10:1;
    unsigned int SD11:1;
    unsigned int SD12:1;
    unsigned int SD13:1;
    unsigned int SD14:1;
    unsigned int SD15:1;
    unsigned int SD16:1;
    unsigned int SD17:1;
    unsigned int SD18:1;
    unsigned int SD19:1;
    unsigned int SD20:1;
    unsigned int SD21:1;
    unsigned int SD22:1;
    unsigned int SD23:1;
    unsigned int SD24:1;
    unsigned int SD25:1;
    unsigned int SD26:1;
    unsigned int SD27:1;
    unsigned int SD28:1;
    unsigned int SD29:1;
    unsigned int SD30:1;
    unsigned int SD31:1;
} Ifx_PSI5_CH_SSRL_Bits;


typedef struct _Ifx_PSI5_CH_WDT_Bits
{
    unsigned int WDLxw:16;
    unsigned int reserved_16:16;
} Ifx_PSI5_CH_WDT_Bits;


typedef struct _Ifx_PSI5_CLC_Bits
{
    unsigned int DISR:1;
    unsigned int DISS:1;
    unsigned int reserved_2:30;
} Ifx_PSI5_CLC_Bits;


typedef struct _Ifx_PSI5_CRCICLR_Bits
{
    unsigned int CRCI0:1;
    unsigned int CRCI1:1;
    unsigned int CRCI2:1;
    unsigned int CRCI3:1;
    unsigned int CRCI4:1;
    unsigned int CRCI5:1;
    unsigned int CRCI6:1;
    unsigned int CRCI7:1;
    unsigned int CRCI8:1;
    unsigned int CRCI9:1;
    unsigned int CRCI10:1;
    unsigned int CRCI11:1;
    unsigned int CRCI12:1;
    unsigned int CRCI13:1;
    unsigned int CRCI14:1;
    unsigned int CRCI15:1;
    unsigned int CRCI16:1;
    unsigned int CRCI17:1;
    unsigned int CRCI18:1;
    unsigned int CRCI19:1;
    unsigned int CRCI20:1;
    unsigned int CRCI21:1;
    unsigned int CRCI22:1;
    unsigned int CRCI23:1;
    unsigned int CRCI24:1;
    unsigned int CRCI25:1;
    unsigned int CRCI26:1;
    unsigned int CRCI27:1;
    unsigned int CRCI28:1;
    unsigned int CRCI29:1;
    unsigned int CRCI30:1;
    unsigned int CRCI31:1;
} Ifx_PSI5_CRCICLR_Bits;


typedef struct _Ifx_PSI5_CRCIOV_Bits
{
    unsigned int CRCI0:1;
    unsigned int CRCI1:1;
    unsigned int CRCI2:1;
    unsigned int CRCI3:1;
    unsigned int CRCI4:1;
    unsigned int CRCI5:1;
    unsigned int CRCI6:1;
    unsigned int CRCI7:1;
    unsigned int CRCI8:1;
    unsigned int CRCI9:1;
    unsigned int CRCI10:1;
    unsigned int CRCI11:1;
    unsigned int CRCI12:1;
    unsigned int CRCI13:1;
    unsigned int CRCI14:1;
    unsigned int CRCI15:1;
    unsigned int CRCI16:1;
    unsigned int CRCI17:1;
    unsigned int CRCI18:1;
    unsigned int CRCI19:1;
    unsigned int CRCI20:1;
    unsigned int CRCI21:1;
    unsigned int CRCI22:1;
    unsigned int CRCI23:1;
    unsigned int CRCI24:1;
    unsigned int CRCI25:1;
    unsigned int CRCI26:1;
    unsigned int CRCI27:1;
    unsigned int CRCI28:1;
    unsigned int CRCI29:1;
    unsigned int CRCI30:1;
    unsigned int CRCI31:1;
} Ifx_PSI5_CRCIOV_Bits;


typedef struct _Ifx_PSI5_CRCISET_Bits
{
    unsigned int CRCI0:1;
    unsigned int CRCI1:1;
    unsigned int CRCI2:1;
    unsigned int CRCI3:1;
    unsigned int CRCI4:1;
    unsigned int CRCI5:1;
    unsigned int CRCI6:1;
    unsigned int CRCI7:1;
    unsigned int CRCI8:1;
    unsigned int CRCI9:1;
    unsigned int CRCI10:1;
    unsigned int CRCI11:1;
    unsigned int CRCI12:1;
    unsigned int CRCI13:1;
    unsigned int CRCI14:1;
    unsigned int CRCI15:1;
    unsigned int CRCI16:1;
    unsigned int CRCI17:1;
    unsigned int CRCI18:1;
    unsigned int CRCI19:1;
    unsigned int CRCI20:1;
    unsigned int CRCI21:1;
    unsigned int CRCI22:1;
    unsigned int CRCI23:1;
    unsigned int CRCI24:1;
    unsigned int CRCI25:1;
    unsigned int CRCI26:1;
    unsigned int CRCI27:1;
    unsigned int CRCI28:1;
    unsigned int CRCI29:1;
    unsigned int CRCI30:1;
    unsigned int CRCI31:1;
} Ifx_PSI5_CRCISET_Bits;


typedef struct _Ifx_PSI5_FDR_Bits
{
    unsigned int STEP:10;
    unsigned int reserved_10:4;
    unsigned int DM:2;
    unsigned int RESULT:10;
    unsigned int reserved_26:6;
} Ifx_PSI5_FDR_Bits;


typedef struct _Ifx_PSI5_FDRT_Bits
{
    unsigned int STEP:10;
    unsigned int reserved_10:4;
    unsigned int DM:2;
    unsigned int RESULT:10;
    unsigned int ECS:3;
    unsigned int ECEA:1;
    unsigned int ECEB:1;
    unsigned int ECEC:1;
} Ifx_PSI5_FDRT_Bits;


typedef struct _Ifx_PSI5_GCR_Bits
{
    unsigned int CRCI:1;
    unsigned int NBI:1;
    unsigned int MEI:1;
    unsigned int NFI:1;
    unsigned int TEI:1;
    unsigned int reserved_5:3;
    unsigned int ETC0:1;
    unsigned int ETC1:1;
    unsigned int ETC2:1;
    unsigned int ETC3:1;
    unsigned int ETC4:1;
    unsigned int reserved_13:3;
    unsigned int CEN0:1;
    unsigned int CEN1:1;
    unsigned int CEN2:1;
    unsigned int CEN3:1;
    unsigned int CEN4:1;
    unsigned int reserved_21:11;
} Ifx_PSI5_GCR_Bits;


typedef struct _Ifx_PSI5_ID_Bits
{
    unsigned int MODREV:8;
    unsigned int MODTYPE:8;
    unsigned int MODNUMBER:16;
} Ifx_PSI5_ID_Bits;


typedef struct _Ifx_PSI5_INP_Bits
{
    unsigned int RSI:4;
    unsigned int RDI:4;
    unsigned int RBI:4;
    unsigned int TDI:4;
    unsigned int TBI:4;
    unsigned int ERRI:4;
    unsigned int SDI:4;
    unsigned int FWI:4;
} Ifx_PSI5_INP_Bits;


typedef struct _Ifx_PSI5_INTCLRA_Bits
{
    unsigned int RSI:1;
    unsigned int RDI:1;
    unsigned int RBI:1;
    unsigned int TEI:1;
    unsigned int NBI:1;
    unsigned int MEI:1;
    unsigned int CRCI:1;
    unsigned int FWI:1;
    unsigned int RUI:1;
    unsigned int RMI:1;
    unsigned int TPI:1;
    unsigned int TPOI:1;
    unsigned int TSI:1;
    unsigned int TSOI:1;
    unsigned int TOI:1;
    unsigned int TOOI:1;
    unsigned int NFI:1;
    unsigned int reserved_17:15;
} Ifx_PSI5_INTCLRA_Bits;


typedef struct _Ifx_PSI5_INTCLRB_Bits
{
    unsigned int WSI0:1;
    unsigned int WSI1:1;
    unsigned int WSI2:1;
    unsigned int WSI3:1;
    unsigned int WSI4:1;
    unsigned int WSI5:1;
    unsigned int SDI0:1;
    unsigned int SDI1:1;
    unsigned int SDI2:1;
    unsigned int SDI3:1;
    unsigned int SDI4:1;
    unsigned int SDI5:1;
    unsigned int SOI0:1;
    unsigned int SOI1:1;
    unsigned int SOI2:1;
    unsigned int SOI3:1;
    unsigned int SOI4:1;
    unsigned int SOI5:1;
    unsigned int SCRI0:1;
    unsigned int SCRI1:1;
    unsigned int SCRI2:1;
    unsigned int SCRI3:1;
    unsigned int SCRI4:1;
    unsigned int SCRI5:1;
    unsigned int reserved_24:8;
} Ifx_PSI5_INTCLRB_Bits;


typedef struct _Ifx_PSI5_INTENA_Bits
{
    unsigned int RSI:1;
    unsigned int RDI:1;
    unsigned int RBI:1;
    unsigned int TEI:1;
    unsigned int NBI:1;
    unsigned int MEI:1;
    unsigned int CRCI:1;
    unsigned int FWI:1;
    unsigned int RUI:1;
    unsigned int RMI:1;
    unsigned int TPI:1;
    unsigned int TPOI:1;
    unsigned int TSI:1;
    unsigned int TSOI:1;
    unsigned int TOI:1;
    unsigned int TOOI:1;
    unsigned int NFI:1;
    unsigned int reserved_17:15;
} Ifx_PSI5_INTENA_Bits;


typedef struct _Ifx_PSI5_INTENB_Bits
{
    unsigned int WSI0:1;
    unsigned int WSI1:1;
    unsigned int WSI2:1;
    unsigned int WSI3:1;
    unsigned int WSI4:1;
    unsigned int WSI5:1;
    unsigned int SDI0:1;
    unsigned int SDI1:1;
    unsigned int SDI2:1;
    unsigned int SDI3:1;
    unsigned int SDI4:1;
    unsigned int SDI5:1;
    unsigned int SOI0:1;
    unsigned int SOI1:1;
    unsigned int SOI2:1;
    unsigned int SOI3:1;
    unsigned int SOI4:1;
    unsigned int SOI5:1;
    unsigned int SCRI0:1;
    unsigned int SCRI1:1;
    unsigned int SCRI2:1;
    unsigned int SCRI3:1;
    unsigned int SCRI4:1;
    unsigned int SCRI5:1;
    unsigned int reserved_24:8;
} Ifx_PSI5_INTENB_Bits;


typedef struct _Ifx_PSI5_INTOV_Bits
{
    unsigned int RSI:1;
    unsigned int RDI:1;
    unsigned int RBI:1;
    unsigned int TDI:1;
    unsigned int TBI:1;
    unsigned int ERRI:1;
    unsigned int SDI:1;
    unsigned int FWI:1;
    unsigned int reserved_8:24;
} Ifx_PSI5_INTOV_Bits;


typedef struct _Ifx_PSI5_INTSETA_Bits
{
    unsigned int RSI:1;
    unsigned int RDI:1;
    unsigned int RBI:1;
    unsigned int TEI:1;
    unsigned int NBI:1;
    unsigned int MEI:1;
    unsigned int CRCI:1;
    unsigned int FWI:1;
    unsigned int RUI:1;
    unsigned int RMI:1;
    unsigned int TPI:1;
    unsigned int TPOI:1;
    unsigned int TSI:1;
    unsigned int TSOI:1;
    unsigned int TOI:1;
    unsigned int TOOI:1;
    unsigned int NFI:1;
    unsigned int reserved_17:15;
} Ifx_PSI5_INTSETA_Bits;


typedef struct _Ifx_PSI5_INTSETB_Bits
{
    unsigned int WSI0:1;
    unsigned int WSI1:1;
    unsigned int WSI2:1;
    unsigned int WSI3:1;
    unsigned int WSI4:1;
    unsigned int WSI5:1;
    unsigned int SDI0:1;
    unsigned int SDI1:1;
    unsigned int SDI2:1;
    unsigned int SDI3:1;
    unsigned int SDI4:1;
    unsigned int SDI5:1;
    unsigned int SOI0:1;
    unsigned int SOI1:1;
    unsigned int SOI2:1;
    unsigned int SOI3:1;
    unsigned int SOI4:1;
    unsigned int SOI5:1;
    unsigned int SCRI0:1;
    unsigned int SCRI1:1;
    unsigned int SCRI2:1;
    unsigned int SCRI3:1;
    unsigned int SCRI4:1;
    unsigned int SCRI5:1;
    unsigned int reserved_24:8;
} Ifx_PSI5_INTSETB_Bits;


typedef struct _Ifx_PSI5_INTSTATA_Bits
{
    unsigned int RSI:1;
    unsigned int RDI:1;
    unsigned int RBI:1;
    unsigned int TEI:1;
    unsigned int NBI:1;
    unsigned int MEI:1;
    unsigned int CRCI:1;
    unsigned int FWI:1;
    unsigned int RUI:1;
    unsigned int RMI:1;
    unsigned int TPI:1;
    unsigned int TPOI:1;
    unsigned int TSI:1;
    unsigned int TSOI:1;
    unsigned int TOI:1;
    unsigned int TOOI:1;
    unsigned int NFI:1;
    unsigned int reserved_17:15;
} Ifx_PSI5_INTSTATA_Bits;


typedef struct _Ifx_PSI5_INTSTATB_Bits
{
    unsigned int WSI0:1;
    unsigned int WSI1:1;
    unsigned int WSI2:1;
    unsigned int WSI3:1;
    unsigned int WSI4:1;
    unsigned int WSI5:1;
    unsigned int SDI0:1;
    unsigned int SDI1:1;
    unsigned int SDI2:1;
    unsigned int SDI3:1;
    unsigned int SDI4:1;
    unsigned int SDI5:1;
    unsigned int SOI0:1;
    unsigned int SOI1:1;
    unsigned int SOI2:1;
    unsigned int SOI3:1;
    unsigned int SOI4:1;
    unsigned int SOI5:1;
    unsigned int SCRI0:1;
    unsigned int SCRI1:1;
    unsigned int SCRI2:1;
    unsigned int SCRI3:1;
    unsigned int SCRI4:1;
    unsigned int SCRI5:1;
    unsigned int reserved_24:8;
} Ifx_PSI5_INTSTATB_Bits;


typedef struct _Ifx_PSI5_KRST0_Bits
{
    unsigned int RST:1;
    unsigned int RSTSTAT:1;
    unsigned int reserved_2:30;
} Ifx_PSI5_KRST0_Bits;


typedef struct _Ifx_PSI5_KRST1_Bits
{
    unsigned int RST:1;
    unsigned int reserved_1:31;
} Ifx_PSI5_KRST1_Bits;


typedef struct _Ifx_PSI5_KRSTCLR_Bits
{
    unsigned int CLR:1;
    unsigned int reserved_1:31;
} Ifx_PSI5_KRSTCLR_Bits;


typedef struct _Ifx_PSI5_MEICLR_Bits
{
    unsigned int MEI0:1;
    unsigned int MEI1:1;
    unsigned int MEI2:1;
    unsigned int MEI3:1;
    unsigned int MEI4:1;
    unsigned int MEI5:1;
    unsigned int MEI6:1;
    unsigned int MEI7:1;
    unsigned int MEI8:1;
    unsigned int MEI9:1;
    unsigned int MEI10:1;
    unsigned int MEI11:1;
    unsigned int MEI12:1;
    unsigned int MEI13:1;
    unsigned int MEI14:1;
    unsigned int MEI15:1;
    unsigned int MEI16:1;
    unsigned int MEI17:1;
    unsigned int MEI18:1;
    unsigned int MEI19:1;
    unsigned int MEI20:1;
    unsigned int MEI21:1;
    unsigned int MEI22:1;
    unsigned int MEI23:1;
    unsigned int MEI24:1;
    unsigned int MEI25:1;
    unsigned int MEI26:1;
    unsigned int MEI27:1;
    unsigned int MEI28:1;
    unsigned int MEI29:1;
    unsigned int MEI30:1;
    unsigned int MEI31:1;
} Ifx_PSI5_MEICLR_Bits;


typedef struct _Ifx_PSI5_MEIOV_Bits
{
    unsigned int MEI0:1;
    unsigned int MEI1:1;
    unsigned int MEI2:1;
    unsigned int MEI3:1;
    unsigned int MEI4:1;
    unsigned int MEI5:1;
    unsigned int MEI6:1;
    unsigned int MEI7:1;
    unsigned int MEI8:1;
    unsigned int MEI9:1;
    unsigned int MEI10:1;
    unsigned int MEI11:1;
    unsigned int MEI12:1;
    unsigned int MEI13:1;
    unsigned int MEI14:1;
    unsigned int MEI15:1;
    unsigned int MEI16:1;
    unsigned int MEI17:1;
    unsigned int MEI18:1;
    unsigned int MEI19:1;
    unsigned int MEI20:1;
    unsigned int MEI21:1;
    unsigned int MEI22:1;
    unsigned int MEI23:1;
    unsigned int MEI24:1;
    unsigned int MEI25:1;
    unsigned int MEI26:1;
    unsigned int MEI27:1;
    unsigned int MEI28:1;
    unsigned int MEI29:1;
    unsigned int MEI30:1;
    unsigned int MEI31:1;
} Ifx_PSI5_MEIOV_Bits;


typedef struct _Ifx_PSI5_MEISET_Bits
{
    unsigned int MEI0:1;
    unsigned int MEI1:1;
    unsigned int MEI2:1;
    unsigned int MEI3:1;
    unsigned int MEI4:1;
    unsigned int MEI5:1;
    unsigned int MEI6:1;
    unsigned int MEI7:1;
    unsigned int MEI8:1;
    unsigned int MEI9:1;
    unsigned int MEI10:1;
    unsigned int MEI11:1;
    unsigned int MEI12:1;
    unsigned int MEI13:1;
    unsigned int MEI14:1;
    unsigned int MEI15:1;
    unsigned int MEI16:1;
    unsigned int MEI17:1;
    unsigned int MEI18:1;
    unsigned int MEI19:1;
    unsigned int MEI20:1;
    unsigned int MEI21:1;
    unsigned int MEI22:1;
    unsigned int MEI23:1;
    unsigned int MEI24:1;
    unsigned int MEI25:1;
    unsigned int MEI26:1;
    unsigned int MEI27:1;
    unsigned int MEI28:1;
    unsigned int MEI29:1;
    unsigned int MEI30:1;
    unsigned int MEI31:1;
} Ifx_PSI5_MEISET_Bits;


typedef struct _Ifx_PSI5_NBICLR_Bits
{
    unsigned int NBI0:1;
    unsigned int NBI1:1;
    unsigned int NBI2:1;
    unsigned int NBI3:1;
    unsigned int NBI4:1;
    unsigned int NBI5:1;
    unsigned int NBI6:1;
    unsigned int NBI7:1;
    unsigned int NBI8:1;
    unsigned int NBI9:1;
    unsigned int NBI10:1;
    unsigned int NBI11:1;
    unsigned int NBI12:1;
    unsigned int NBI13:1;
    unsigned int NBI14:1;
    unsigned int NBI15:1;
    unsigned int NBI16:1;
    unsigned int NBI17:1;
    unsigned int NBI18:1;
    unsigned int NBI19:1;
    unsigned int NBI20:1;
    unsigned int NBI21:1;
    unsigned int NBI22:1;
    unsigned int NBI23:1;
    unsigned int NBI24:1;
    unsigned int NBI25:1;
    unsigned int NBI26:1;
    unsigned int NBI27:1;
    unsigned int NBI28:1;
    unsigned int NBI29:1;
    unsigned int NBI30:1;
    unsigned int NBI31:1;
} Ifx_PSI5_NBICLR_Bits;


typedef struct _Ifx_PSI5_NBIOV_Bits
{
    unsigned int NBI0:1;
    unsigned int NBI1:1;
    unsigned int NBI2:1;
    unsigned int NBI3:1;
    unsigned int NBI4:1;
    unsigned int NBI5:1;
    unsigned int NBI6:1;
    unsigned int NBI7:1;
    unsigned int NBI8:1;
    unsigned int NBI9:1;
    unsigned int NBI10:1;
    unsigned int NBI11:1;
    unsigned int NBI12:1;
    unsigned int NBI13:1;
    unsigned int NBI14:1;
    unsigned int NBI15:1;
    unsigned int NBI16:1;
    unsigned int NBI17:1;
    unsigned int NBI18:1;
    unsigned int NBI19:1;
    unsigned int NBI20:1;
    unsigned int NBI21:1;
    unsigned int NBI22:1;
    unsigned int NBI23:1;
    unsigned int NBI24:1;
    unsigned int NBI25:1;
    unsigned int NBI26:1;
    unsigned int NBI27:1;
    unsigned int NBI28:1;
    unsigned int NBI29:1;
    unsigned int NBI30:1;
    unsigned int NBI31:1;
} Ifx_PSI5_NBIOV_Bits;


typedef struct _Ifx_PSI5_NBISET_Bits
{
    unsigned int NBI0:1;
    unsigned int NBI1:1;
    unsigned int NBI2:1;
    unsigned int NBI3:1;
    unsigned int NBI4:1;
    unsigned int NBI5:1;
    unsigned int NBI6:1;
    unsigned int NBI7:1;
    unsigned int NBI8:1;
    unsigned int NBI9:1;
    unsigned int NBI10:1;
    unsigned int NBI11:1;
    unsigned int NBI12:1;
    unsigned int NBI13:1;
    unsigned int NBI14:1;
    unsigned int NBI15:1;
    unsigned int NBI16:1;
    unsigned int NBI17:1;
    unsigned int NBI18:1;
    unsigned int NBI19:1;
    unsigned int NBI20:1;
    unsigned int NBI21:1;
    unsigned int NBI22:1;
    unsigned int NBI23:1;
    unsigned int NBI24:1;
    unsigned int NBI25:1;
    unsigned int NBI26:1;
    unsigned int NBI27:1;
    unsigned int NBI28:1;
    unsigned int NBI29:1;
    unsigned int NBI30:1;
    unsigned int NBI31:1;
} Ifx_PSI5_NBISET_Bits;


typedef struct _Ifx_PSI5_NFICLR_Bits
{
    unsigned int NFI0:1;
    unsigned int NFI1:1;
    unsigned int NFI2:1;
    unsigned int NFI3:1;
    unsigned int NFI4:1;
    unsigned int NFI5:1;
    unsigned int NFI6:1;
    unsigned int NFI7:1;
    unsigned int NFI8:1;
    unsigned int NFI9:1;
    unsigned int NFI10:1;
    unsigned int NFI11:1;
    unsigned int NFI12:1;
    unsigned int NFI13:1;
    unsigned int NFI14:1;
    unsigned int NFI15:1;
    unsigned int NFI16:1;
    unsigned int NFI17:1;
    unsigned int NFI18:1;
    unsigned int NFI19:1;
    unsigned int NFI20:1;
    unsigned int NFI21:1;
    unsigned int NFI22:1;
    unsigned int NFI23:1;
    unsigned int NFI24:1;
    unsigned int NFI25:1;
    unsigned int NFI26:1;
    unsigned int NFI27:1;
    unsigned int NFI28:1;
    unsigned int NFI29:1;
    unsigned int NFI30:1;
    unsigned int NFI31:1;
} Ifx_PSI5_NFICLR_Bits;


typedef struct _Ifx_PSI5_NFIOV_Bits
{
    unsigned int NFI0:1;
    unsigned int NFI1:1;
    unsigned int NFI2:1;
    unsigned int NFI3:1;
    unsigned int NFI4:1;
    unsigned int NFI5:1;
    unsigned int NFI6:1;
    unsigned int NFI7:1;
    unsigned int NFI8:1;
    unsigned int NFI9:1;
    unsigned int NFI10:1;
    unsigned int NFI11:1;
    unsigned int NFI12:1;
    unsigned int NFI13:1;
    unsigned int NFI14:1;
    unsigned int NFI15:1;
    unsigned int NFI16:1;
    unsigned int NFI17:1;
    unsigned int NFI18:1;
    unsigned int NFI19:1;
    unsigned int NFI20:1;
    unsigned int NFI21:1;
    unsigned int NFI22:1;
    unsigned int NFI23:1;
    unsigned int NFI24:1;
    unsigned int NFI25:1;
    unsigned int NFI26:1;
    unsigned int NFI27:1;
    unsigned int NFI28:1;
    unsigned int NFI29:1;
    unsigned int NFI30:1;
    unsigned int NFI31:1;
} Ifx_PSI5_NFIOV_Bits;


typedef struct _Ifx_PSI5_NFISET_Bits
{
    unsigned int NFI0:1;
    unsigned int NFI1:1;
    unsigned int NFI2:1;
    unsigned int NFI3:1;
    unsigned int NFI4:1;
    unsigned int NFI5:1;
    unsigned int NFI6:1;
    unsigned int NFI7:1;
    unsigned int NFI8:1;
    unsigned int NFI9:1;
    unsigned int NFI10:1;
    unsigned int NFI11:1;
    unsigned int NFI12:1;
    unsigned int NFI13:1;
    unsigned int NFI14:1;
    unsigned int NFI15:1;
    unsigned int NFI16:1;
    unsigned int NFI17:1;
    unsigned int NFI18:1;
    unsigned int NFI19:1;
    unsigned int NFI20:1;
    unsigned int NFI21:1;
    unsigned int NFI22:1;
    unsigned int NFI23:1;
    unsigned int NFI24:1;
    unsigned int NFI25:1;
    unsigned int NFI26:1;
    unsigned int NFI27:1;
    unsigned int NFI28:1;
    unsigned int NFI29:1;
    unsigned int NFI30:1;
    unsigned int NFI31:1;
} Ifx_PSI5_NFISET_Bits;


typedef struct _Ifx_PSI5_OCS_Bits
{
    unsigned int reserved_0:24;
    unsigned int SUS:4;
    unsigned int SUS_P:1;
    unsigned int SUSSTA:1;
    unsigned int reserved_30:2;
} Ifx_PSI5_OCS_Bits;


typedef struct _Ifx_PSI5_RDF_Bits
{
    unsigned int RD:32;
} Ifx_PSI5_RDF_Bits;


typedef struct _Ifx_PSI5_RDICLR_Bits
{
    unsigned int RDI0:1;
    unsigned int RDI1:1;
    unsigned int RDI2:1;
    unsigned int RDI3:1;
    unsigned int RDI4:1;
    unsigned int RDI5:1;
    unsigned int RDI6:1;
    unsigned int RDI7:1;
    unsigned int RDI8:1;
    unsigned int RDI9:1;
    unsigned int RDI10:1;
    unsigned int RDI11:1;
    unsigned int RDI12:1;
    unsigned int RDI13:1;
    unsigned int RDI14:1;
    unsigned int RDI15:1;
    unsigned int RDI16:1;
    unsigned int RDI17:1;
    unsigned int RDI18:1;
    unsigned int RDI19:1;
    unsigned int RDI20:1;
    unsigned int RDI21:1;
    unsigned int RDI22:1;
    unsigned int RDI23:1;
    unsigned int RDI24:1;
    unsigned int RDI25:1;
    unsigned int RDI26:1;
    unsigned int RDI27:1;
    unsigned int RDI28:1;
    unsigned int RDI29:1;
    unsigned int RDI30:1;
    unsigned int RDI31:1;
} Ifx_PSI5_RDICLR_Bits;


typedef struct _Ifx_PSI5_RDIOV_Bits
{
    unsigned int RDI0:1;
    unsigned int RDI1:1;
    unsigned int RDI2:1;
    unsigned int RDI3:1;
    unsigned int RDI4:1;
    unsigned int RDI5:1;
    unsigned int RDI6:1;
    unsigned int RDI7:1;
    unsigned int RDI8:1;
    unsigned int RDI9:1;
    unsigned int RDI10:1;
    unsigned int RDI11:1;
    unsigned int RDI12:1;
    unsigned int RDI13:1;
    unsigned int RDI14:1;
    unsigned int RDI15:1;
    unsigned int RDI16:1;
    unsigned int RDI17:1;
    unsigned int RDI18:1;
    unsigned int RDI19:1;
    unsigned int RDI20:1;
    unsigned int RDI21:1;
    unsigned int RDI22:1;
    unsigned int RDI23:1;
    unsigned int RDI24:1;
    unsigned int RDI25:1;
    unsigned int RDI26:1;
    unsigned int RDI27:1;
    unsigned int RDI28:1;
    unsigned int RDI29:1;
    unsigned int RDI30:1;
    unsigned int RDI31:1;
} Ifx_PSI5_RDIOV_Bits;


typedef struct _Ifx_PSI5_RDISET_Bits
{
    unsigned int RDI0:1;
    unsigned int RDI1:1;
    unsigned int RDI2:1;
    unsigned int RDI3:1;
    unsigned int RDI4:1;
    unsigned int RDI5:1;
    unsigned int RDI6:1;
    unsigned int RDI7:1;
    unsigned int RDI8:1;
    unsigned int RDI9:1;
    unsigned int RDI10:1;
    unsigned int RDI11:1;
    unsigned int RDI12:1;
    unsigned int RDI13:1;
    unsigned int RDI14:1;
    unsigned int RDI15:1;
    unsigned int RDI16:1;
    unsigned int RDI17:1;
    unsigned int RDI18:1;
    unsigned int RDI19:1;
    unsigned int RDI20:1;
    unsigned int RDI21:1;
    unsigned int RDI22:1;
    unsigned int RDI23:1;
    unsigned int RDI24:1;
    unsigned int RDI25:1;
    unsigned int RDI26:1;
    unsigned int RDI27:1;
    unsigned int RDI28:1;
    unsigned int RDI29:1;
    unsigned int RDI30:1;
    unsigned int RDI31:1;
} Ifx_PSI5_RDISET_Bits;


typedef struct _Ifx_PSI5_RDM_H_Bits
{
    unsigned int TS:24;
    unsigned int SC:3;
    unsigned int TEI:1;
    unsigned int NBI:1;
    unsigned int MEI:1;
    unsigned int NFI:1;
    unsigned int RMI:1;
} Ifx_PSI5_RDM_H_Bits;


typedef struct _Ifx_PSI5_RDM_L_Bits
{
    unsigned int CRCI:1;
    unsigned int CRC:3;
    unsigned int RD:28;
} Ifx_PSI5_RDM_L_Bits;


typedef struct _Ifx_PSI5_RFC_Bits
{
    unsigned int REP:6;
    unsigned int reserved_6:2;
    unsigned int WRP:6;
    unsigned int reserved_14:2;
    unsigned int FWL:5;
    unsigned int reserved_21:8;
    unsigned int WRAP:1;
    unsigned int FRQ:1;
    unsigned int FLU:1;
} Ifx_PSI5_RFC_Bits;


typedef struct _Ifx_PSI5_RMICLR_Bits
{
    unsigned int RMI0:1;
    unsigned int RMI1:1;
    unsigned int RMI2:1;
    unsigned int RMI3:1;
    unsigned int RMI4:1;
    unsigned int RMI5:1;
    unsigned int RMI6:1;
    unsigned int RMI7:1;
    unsigned int RMI8:1;
    unsigned int RMI9:1;
    unsigned int RMI10:1;
    unsigned int RMI11:1;
    unsigned int RMI12:1;
    unsigned int RMI13:1;
    unsigned int RMI14:1;
    unsigned int RMI15:1;
    unsigned int RMI16:1;
    unsigned int RMI17:1;
    unsigned int RMI18:1;
    unsigned int RMI19:1;
    unsigned int RMI20:1;
    unsigned int RMI21:1;
    unsigned int RMI22:1;
    unsigned int RMI23:1;
    unsigned int RMI24:1;
    unsigned int RMI25:1;
    unsigned int RMI26:1;
    unsigned int RMI27:1;
    unsigned int RMI28:1;
    unsigned int RMI29:1;
    unsigned int RMI30:1;
    unsigned int RMI31:1;
} Ifx_PSI5_RMICLR_Bits;


typedef struct _Ifx_PSI5_RMIOV_Bits
{
    unsigned int RMI0:1;
    unsigned int RMI1:1;
    unsigned int RMI2:1;
    unsigned int RMI3:1;
    unsigned int RMI4:1;
    unsigned int RMI5:1;
    unsigned int RMI6:1;
    unsigned int RMI7:1;
    unsigned int RMI8:1;
    unsigned int RMI9:1;
    unsigned int RMI10:1;
    unsigned int RMI11:1;
    unsigned int RMI12:1;
    unsigned int RMI13:1;
    unsigned int RMI14:1;
    unsigned int RMI15:1;
    unsigned int RMI16:1;
    unsigned int RMI17:1;
    unsigned int RMI18:1;
    unsigned int RMI19:1;
    unsigned int RMI20:1;
    unsigned int RMI21:1;
    unsigned int RMI22:1;
    unsigned int RMI23:1;
    unsigned int RMI24:1;
    unsigned int RMI25:1;
    unsigned int RMI26:1;
    unsigned int RMI27:1;
    unsigned int RMI28:1;
    unsigned int RMI29:1;
    unsigned int RMI30:1;
    unsigned int RMI31:1;
} Ifx_PSI5_RMIOV_Bits;


typedef struct _Ifx_PSI5_RMISET_Bits
{
    unsigned int RMI0:1;
    unsigned int RMI1:1;
    unsigned int RMI2:1;
    unsigned int RMI3:1;
    unsigned int RMI4:1;
    unsigned int RMI5:1;
    unsigned int RMI6:1;
    unsigned int RMI7:1;
    unsigned int RMI8:1;
    unsigned int RMI9:1;
    unsigned int RMI10:1;
    unsigned int RMI11:1;
    unsigned int RMI12:1;
    unsigned int RMI13:1;
    unsigned int RMI14:1;
    unsigned int RMI15:1;
    unsigned int RMI16:1;
    unsigned int RMI17:1;
    unsigned int RMI18:1;
    unsigned int RMI19:1;
    unsigned int RMI20:1;
    unsigned int RMI21:1;
    unsigned int RMI22:1;
    unsigned int RMI23:1;
    unsigned int RMI24:1;
    unsigned int RMI25:1;
    unsigned int RMI26:1;
    unsigned int RMI27:1;
    unsigned int RMI28:1;
    unsigned int RMI29:1;
    unsigned int RMI30:1;
    unsigned int RMI31:1;
} Ifx_PSI5_RMISET_Bits;


typedef struct _Ifx_PSI5_RSICLR_Bits
{
    unsigned int RSI0:1;
    unsigned int RSI1:1;
    unsigned int RSI2:1;
    unsigned int RSI3:1;
    unsigned int RSI4:1;
    unsigned int RSI5:1;
    unsigned int RSI6:1;
    unsigned int RSI7:1;
    unsigned int RSI8:1;
    unsigned int RSI9:1;
    unsigned int RSI10:1;
    unsigned int RSI11:1;
    unsigned int RSI12:1;
    unsigned int RSI13:1;
    unsigned int RSI14:1;
    unsigned int RSI15:1;
    unsigned int RSI16:1;
    unsigned int RSI17:1;
    unsigned int RSI18:1;
    unsigned int RSI19:1;
    unsigned int RSI20:1;
    unsigned int RSI21:1;
    unsigned int RSI22:1;
    unsigned int RSI23:1;
    unsigned int RSI24:1;
    unsigned int RSI25:1;
    unsigned int RSI26:1;
    unsigned int RSI27:1;
    unsigned int RSI28:1;
    unsigned int RSI29:1;
    unsigned int RSI30:1;
    unsigned int RSI31:1;
} Ifx_PSI5_RSICLR_Bits;


typedef struct _Ifx_PSI5_RSIOV_Bits
{
    unsigned int RSI0:1;
    unsigned int RSI1:1;
    unsigned int RSI2:1;
    unsigned int RSI3:1;
    unsigned int RSI4:1;
    unsigned int RSI5:1;
    unsigned int RSI6:1;
    unsigned int RSI7:1;
    unsigned int RSI8:1;
    unsigned int RSI9:1;
    unsigned int RSI10:1;
    unsigned int RSI11:1;
    unsigned int RSI12:1;
    unsigned int RSI13:1;
    unsigned int RSI14:1;
    unsigned int RSI15:1;
    unsigned int RSI16:1;
    unsigned int RSI17:1;
    unsigned int RSI18:1;
    unsigned int RSI19:1;
    unsigned int RSI20:1;
    unsigned int RSI21:1;
    unsigned int RSI22:1;
    unsigned int RSI23:1;
    unsigned int RSI24:1;
    unsigned int RSI25:1;
    unsigned int RSI26:1;
    unsigned int RSI27:1;
    unsigned int RSI28:1;
    unsigned int RSI29:1;
    unsigned int RSI30:1;
    unsigned int RSI31:1;
} Ifx_PSI5_RSIOV_Bits;


typedef struct _Ifx_PSI5_RSISET_Bits
{
    unsigned int RSI0:1;
    unsigned int RSI1:1;
    unsigned int RSI2:1;
    unsigned int RSI3:1;
    unsigned int RSI4:1;
    unsigned int RSI5:1;
    unsigned int RSI6:1;
    unsigned int RSI7:1;
    unsigned int RSI8:1;
    unsigned int RSI9:1;
    unsigned int RSI10:1;
    unsigned int RSI11:1;
    unsigned int RSI12:1;
    unsigned int RSI13:1;
    unsigned int RSI14:1;
    unsigned int RSI15:1;
    unsigned int RSI16:1;
    unsigned int RSI17:1;
    unsigned int RSI18:1;
    unsigned int RSI19:1;
    unsigned int RSI20:1;
    unsigned int RSI21:1;
    unsigned int RSI22:1;
    unsigned int RSI23:1;
    unsigned int RSI24:1;
    unsigned int RSI25:1;
    unsigned int RSI26:1;
    unsigned int RSI27:1;
    unsigned int RSI28:1;
    unsigned int RSI29:1;
    unsigned int RSI30:1;
    unsigned int RSI31:1;
} Ifx_PSI5_RSISET_Bits;


typedef struct _Ifx_PSI5_TEICLR_Bits
{
    unsigned int TEI0:1;
    unsigned int TEI1:1;
    unsigned int TEI2:1;
    unsigned int TEI3:1;
    unsigned int TEI4:1;
    unsigned int TEI5:1;
    unsigned int TEI6:1;
    unsigned int TEI7:1;
    unsigned int TEI8:1;
    unsigned int TEI9:1;
    unsigned int TEI10:1;
    unsigned int TEI11:1;
    unsigned int TEI12:1;
    unsigned int TEI13:1;
    unsigned int TEI14:1;
    unsigned int TEI15:1;
    unsigned int TEI16:1;
    unsigned int TEI17:1;
    unsigned int TEI18:1;
    unsigned int TEI19:1;
    unsigned int TEI20:1;
    unsigned int TEI21:1;
    unsigned int TEI22:1;
    unsigned int TEI23:1;
    unsigned int TEI24:1;
    unsigned int TEI25:1;
    unsigned int TEI26:1;
    unsigned int TEI27:1;
    unsigned int TEI28:1;
    unsigned int TEI29:1;
    unsigned int TEI30:1;
    unsigned int TEI31:1;
} Ifx_PSI5_TEICLR_Bits;


typedef struct _Ifx_PSI5_TEIOV_Bits
{
    unsigned int TEI0:1;
    unsigned int TEI1:1;
    unsigned int TEI2:1;
    unsigned int TEI3:1;
    unsigned int TEI4:1;
    unsigned int TEI5:1;
    unsigned int TEI6:1;
    unsigned int TEI7:1;
    unsigned int TEI8:1;
    unsigned int TEI9:1;
    unsigned int TEI10:1;
    unsigned int TEI11:1;
    unsigned int TEI12:1;
    unsigned int TEI13:1;
    unsigned int TEI14:1;
    unsigned int TEI15:1;
    unsigned int TEI16:1;
    unsigned int TEI17:1;
    unsigned int TEI18:1;
    unsigned int TEI19:1;
    unsigned int TEI20:1;
    unsigned int TEI21:1;
    unsigned int TEI22:1;
    unsigned int TEI23:1;
    unsigned int TEI24:1;
    unsigned int TEI25:1;
    unsigned int TEI26:1;
    unsigned int TEI27:1;
    unsigned int TEI28:1;
    unsigned int TEI29:1;
    unsigned int TEI30:1;
    unsigned int TEI31:1;
} Ifx_PSI5_TEIOV_Bits;


typedef struct _Ifx_PSI5_TEISET_Bits
{
    unsigned int TEI0:1;
    unsigned int TEI1:1;
    unsigned int TEI2:1;
    unsigned int TEI3:1;
    unsigned int TEI4:1;
    unsigned int TEI5:1;
    unsigned int TEI6:1;
    unsigned int TEI7:1;
    unsigned int TEI8:1;
    unsigned int TEI9:1;
    unsigned int TEI10:1;
    unsigned int TEI11:1;
    unsigned int TEI12:1;
    unsigned int TEI13:1;
    unsigned int TEI14:1;
    unsigned int TEI15:1;
    unsigned int TEI16:1;
    unsigned int TEI17:1;
    unsigned int TEI18:1;
    unsigned int TEI19:1;
    unsigned int TEI20:1;
    unsigned int TEI21:1;
    unsigned int TEI22:1;
    unsigned int TEI23:1;
    unsigned int TEI24:1;
    unsigned int TEI25:1;
    unsigned int TEI26:1;
    unsigned int TEI27:1;
    unsigned int TEI28:1;
    unsigned int TEI29:1;
    unsigned int TEI30:1;
    unsigned int TEI31:1;
} Ifx_PSI5_TEISET_Bits;


typedef struct _Ifx_PSI5_TSR_Bits
{
    unsigned int CTS:24;
    unsigned int ETB:3;
    unsigned int TBS:1;
    unsigned int reserved_28:2;
    unsigned int ACLR:1;
    unsigned int CLR:1;
} Ifx_PSI5_TSR_Bits;







typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_ACCEN0_Bits B;
} Ifx_PSI5_ACCEN0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_ACCEN1_Bits B;
} Ifx_PSI5_ACCEN1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_CH_CTV_Bits B;
} Ifx_PSI5_CH_CTV;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_CH_IOCR_Bits B;
} Ifx_PSI5_CH_IOCR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_CH_PGC_Bits B;
} Ifx_PSI5_CH_PGC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_CH_RCRA_Bits B;
} Ifx_PSI5_CH_RCRA;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_CH_RCRB_Bits B;
} Ifx_PSI5_CH_RCRB;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_CH_RCRC_Bits B;
} Ifx_PSI5_CH_RCRC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_CH_RDRH_Bits B;
} Ifx_PSI5_CH_RDRH;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_CH_RDRL_Bits B;
} Ifx_PSI5_CH_RDRL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_CH_RSR_Bits B;
} Ifx_PSI5_CH_RSR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_CH_SCR_Bits B;
} Ifx_PSI5_CH_SCR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_CH_SDRH_Bits B;
} Ifx_PSI5_CH_SDRH;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_CH_SDRL_Bits B;
} Ifx_PSI5_CH_SDRL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_CH_SDS_Bits B;
} Ifx_PSI5_CH_SDS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_CH_SFTSC_Bits B;
} Ifx_PSI5_CH_SFTSC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_CH_SORH_Bits B;
} Ifx_PSI5_CH_SORH;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_CH_SORL_Bits B;
} Ifx_PSI5_CH_SORL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_CH_SPTSC_Bits B;
} Ifx_PSI5_CH_SPTSC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_CH_SSRH_Bits B;
} Ifx_PSI5_CH_SSRH;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_CH_SSRL_Bits B;
} Ifx_PSI5_CH_SSRL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_CH_WDT_Bits B;
} Ifx_PSI5_CH_WDT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_CLC_Bits B;
} Ifx_PSI5_CLC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_CRCICLR_Bits B;
} Ifx_PSI5_CRCICLR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_CRCIOV_Bits B;
} Ifx_PSI5_CRCIOV;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_CRCISET_Bits B;
} Ifx_PSI5_CRCISET;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_FDR_Bits B;
} Ifx_PSI5_FDR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_FDRT_Bits B;
} Ifx_PSI5_FDRT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_GCR_Bits B;
} Ifx_PSI5_GCR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_ID_Bits B;
} Ifx_PSI5_ID;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_INP_Bits B;
} Ifx_PSI5_INP;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_INTCLRA_Bits B;
} Ifx_PSI5_INTCLRA;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_INTCLRB_Bits B;
} Ifx_PSI5_INTCLRB;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_INTENA_Bits B;
} Ifx_PSI5_INTENA;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_INTENB_Bits B;
} Ifx_PSI5_INTENB;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_INTOV_Bits B;
} Ifx_PSI5_INTOV;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_INTSETA_Bits B;
} Ifx_PSI5_INTSETA;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_INTSETB_Bits B;
} Ifx_PSI5_INTSETB;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_INTSTATA_Bits B;
} Ifx_PSI5_INTSTATA;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_INTSTATB_Bits B;
} Ifx_PSI5_INTSTATB;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_KRST0_Bits B;
} Ifx_PSI5_KRST0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_KRST1_Bits B;
} Ifx_PSI5_KRST1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_KRSTCLR_Bits B;
} Ifx_PSI5_KRSTCLR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_MEICLR_Bits B;
} Ifx_PSI5_MEICLR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_MEIOV_Bits B;
} Ifx_PSI5_MEIOV;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_MEISET_Bits B;
} Ifx_PSI5_MEISET;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_NBICLR_Bits B;
} Ifx_PSI5_NBICLR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_NBIOV_Bits B;
} Ifx_PSI5_NBIOV;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_NBISET_Bits B;
} Ifx_PSI5_NBISET;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_NFICLR_Bits B;
} Ifx_PSI5_NFICLR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_NFIOV_Bits B;
} Ifx_PSI5_NFIOV;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_NFISET_Bits B;
} Ifx_PSI5_NFISET;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_OCS_Bits B;
} Ifx_PSI5_OCS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_RDF_Bits B;
} Ifx_PSI5_RDF;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_RDICLR_Bits B;
} Ifx_PSI5_RDICLR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_RDIOV_Bits B;
} Ifx_PSI5_RDIOV;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_RDISET_Bits B;
} Ifx_PSI5_RDISET;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_RDM_H_Bits B;
} Ifx_PSI5_RDM_H;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_RDM_L_Bits B;
} Ifx_PSI5_RDM_L;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_RFC_Bits B;
} Ifx_PSI5_RFC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_RMICLR_Bits B;
} Ifx_PSI5_RMICLR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_RMIOV_Bits B;
} Ifx_PSI5_RMIOV;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_RMISET_Bits B;
} Ifx_PSI5_RMISET;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_RSICLR_Bits B;
} Ifx_PSI5_RSICLR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_RSIOV_Bits B;
} Ifx_PSI5_RSIOV;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_RSISET_Bits B;
} Ifx_PSI5_RSISET;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_TEICLR_Bits B;
} Ifx_PSI5_TEICLR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_TEIOV_Bits B;
} Ifx_PSI5_TEIOV;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_TEISET_Bits B;
} Ifx_PSI5_TEISET;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5_TSR_Bits B;
} Ifx_PSI5_TSR;
# 2330 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxPsi5_regdef.h" 3
typedef volatile struct _Ifx_PSI5_CH
{
    Ifx_PSI5_CH_IOCR IOCR;
    Ifx_PSI5_CH_RCRA RCRA;
    Ifx_PSI5_CH_RCRB RCRB;
    Ifx_PSI5_CH_RCRC RCRC;
    Ifx_PSI5_CH_WDT WDT[7];
    Ifx_PSI5_CH_RSR RSR;
    Ifx_PSI5_CH_SDS SDS[6];
    Ifx_PSI5_CH_SPTSC SPTSC;
    Ifx_PSI5_CH_SFTSC SFTSC;
    Ifx_PSI5_CH_RDRL RDRL;
    Ifx_PSI5_CH_RDRH RDRH;
    Ifx_PSI5_CH_PGC PGC;
    Ifx_PSI5_CH_CTV CTV;
    Ifx_PSI5_CH_SCR SCR;
    Ifx_PSI5_CH_SDRL SDRL;
    Ifx_PSI5_CH_SDRH SDRH;
    Ifx_PSI5_CH_SSRL SSRL;
    Ifx_PSI5_CH_SSRH SSRH;
    Ifx_PSI5_CH_SORL SORL;
    Ifx_PSI5_CH_SORH SORH;
    unsigned char reserved_7C[20];
} Ifx_PSI5_CH;


typedef volatile struct _Ifx_PSI5_RDM
{
    Ifx_PSI5_RDM_L L;
    Ifx_PSI5_RDM_H H;
} Ifx_PSI5_RDM;
# 2373 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxPsi5_regdef.h" 3
typedef volatile struct _Ifx_PSI5
{
    Ifx_PSI5_CLC CLC;
    unsigned char reserved_4[4];
    Ifx_PSI5_ID ID;
    Ifx_PSI5_FDR FDR;
    Ifx_PSI5_FDR FDRL;
    Ifx_PSI5_FDR FDRH;
    Ifx_PSI5_FDRT FDRT;
    Ifx_PSI5_TSR TSRA;
    Ifx_PSI5_TSR TSRB;
    Ifx_PSI5_TSR TSRC;
    unsigned char reserved_28[4];
    Ifx_PSI5_GCR GCR;
    Ifx_PSI5_CH CH[3];
    unsigned char reserved_1E0[280];
    Ifx_PSI5_INTOV INTOV;
    Ifx_PSI5_INP INP[3];
    unsigned char reserved_308[8];
    Ifx_PSI5_INTSTATA INTSTATA[3];
    unsigned char reserved_31C[8];
    Ifx_PSI5_INTSTATB INTSTATB[3];
    unsigned char reserved_330[8];
    Ifx_PSI5_INTSETA INTSETA[3];
    unsigned char reserved_344[8];
    Ifx_PSI5_INTSETB INTSETB[3];
    unsigned char reserved_358[8];
    Ifx_PSI5_INTCLRA INTCLRA[3];
    unsigned char reserved_36C[8];
    Ifx_PSI5_INTCLRB INTCLRB[3];
    unsigned char reserved_380[8];
    Ifx_PSI5_INTENA INTENA[3];
    unsigned char reserved_394[8];
    Ifx_PSI5_INTENB INTENB[3];
    unsigned char reserved_3A8[36];
    Ifx_PSI5_OCS OCS;
    Ifx_PSI5_ACCEN0 ACCEN0;
    Ifx_PSI5_ACCEN1 ACCEN1;
    Ifx_PSI5_KRST0 KRST0;
    Ifx_PSI5_KRST1 KRST1;
    Ifx_PSI5_KRSTCLR KRSTCLR;
    Ifx_PSI5_RFC RFC[3];
    unsigned char reserved_3F0[8];
    Ifx_PSI5_RDF RDF[3];
    unsigned char reserved_404[8];
    Ifx_PSI5_RSIOV RSIOV[3];
    unsigned char reserved_418[8];
    Ifx_PSI5_RMIOV RMIOV[3];
    unsigned char reserved_42C[8];
    Ifx_PSI5_NBIOV NBIOV[3];
    unsigned char reserved_440[8];
    Ifx_PSI5_TEIOV TEIOV[3];
    unsigned char reserved_454[8];
    Ifx_PSI5_CRCIOV CRCIOV[3];
    unsigned char reserved_468[8];
    Ifx_PSI5_RDIOV RDIOV[3];
    unsigned char reserved_47C[8];
    Ifx_PSI5_NFIOV NFIOV[3];
    unsigned char reserved_490[8];
    Ifx_PSI5_MEIOV MEIOV[3];
    unsigned char reserved_4A4[8];
    Ifx_PSI5_RSISET RSISET[3];
    unsigned char reserved_4B8[8];
    Ifx_PSI5_RMISET RMISET[3];
    unsigned char reserved_4CC[8];
    Ifx_PSI5_NBISET NBISET[3];
    unsigned char reserved_4E0[8];
    Ifx_PSI5_TEISET TEISET[3];
    unsigned char reserved_4F4[8];
    Ifx_PSI5_CRCISET CRCISET[3];
    unsigned char reserved_508[8];
    Ifx_PSI5_RDISET RDISET[3];
    unsigned char reserved_51C[8];
    Ifx_PSI5_NFISET NFISET[3];
    unsigned char reserved_530[8];
    Ifx_PSI5_MEISET MEISET[3];
    unsigned char reserved_544[8];
    Ifx_PSI5_RSICLR RSICLR[3];
    unsigned char reserved_558[8];
    Ifx_PSI5_RMICLR RMICLR[3];
    unsigned char reserved_56C[8];
    Ifx_PSI5_NBICLR NBICLR[3];
    unsigned char reserved_580[8];
    Ifx_PSI5_TEICLR TEICLR[3];
    unsigned char reserved_594[8];
    Ifx_PSI5_CRCICLR CRCICLR[3];
    unsigned char reserved_5A8[8];
    Ifx_PSI5_RDICLR RDICLR[3];
    unsigned char reserved_5BC[8];
    Ifx_PSI5_NFICLR NFICLR[3];
    unsigned char reserved_5D0[8];
    Ifx_PSI5_MEICLR MEICLR[3];
    unsigned char reserved_5E4[28];
    Ifx_PSI5_RDM RDM[3][32];
    unsigned char reserved_900[512];
} Ifx_PSI5;
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxPsi5_reg.h" 2 3





#define MODULE_PSI5 (*(Ifx_PSI5*)0xF0005000u)







#define PSI5_ACCEN0 (*(volatile Ifx_PSI5_ACCEN0*)0xF00053D0u)


#define PSI5_ACCEN1 (*(volatile Ifx_PSI5_ACCEN1*)0xF00053D4u)


#define PSI5_CH0_CTV (*(volatile Ifx_PSI5_CH_CTV*)0xF000508Cu)




#define PSI5_CTV0 (PSI5_CH0_CTV)


#define PSI5_CH0_IOCR (*(volatile Ifx_PSI5_CH_IOCR*)0xF0005030u)




#define PSI5_IOCR0 (PSI5_CH0_IOCR)


#define PSI5_CH0_PGC (*(volatile Ifx_PSI5_CH_PGC*)0xF0005088u)




#define PSI5_PGC0 (PSI5_CH0_PGC)


#define PSI5_CH0_RCRA (*(volatile Ifx_PSI5_CH_RCRA*)0xF0005034u)




#define PSI5_RCRA0 (PSI5_CH0_RCRA)


#define PSI5_CH0_RCRB (*(volatile Ifx_PSI5_CH_RCRB*)0xF0005038u)




#define PSI5_RCRB0 (PSI5_CH0_RCRB)


#define PSI5_CH0_RCRC (*(volatile Ifx_PSI5_CH_RCRC*)0xF000503Cu)




#define PSI5_RCRC0 (PSI5_CH0_RCRC)


#define PSI5_CH0_RDRH (*(volatile Ifx_PSI5_CH_RDRH*)0xF0005084u)




#define PSI5_RDRH0 (PSI5_CH0_RDRH)


#define PSI5_CH0_RDRL (*(volatile Ifx_PSI5_CH_RDRL*)0xF0005080u)




#define PSI5_RDRL0 (PSI5_CH0_RDRL)


#define PSI5_CH0_RSR (*(volatile Ifx_PSI5_CH_RSR*)0xF000505Cu)




#define PSI5_RSR0 (PSI5_CH0_RSR)


#define PSI5_CH0_SCR (*(volatile Ifx_PSI5_CH_SCR*)0xF0005090u)




#define PSI5_SCR0 (PSI5_CH0_SCR)


#define PSI5_CH0_SDRH (*(volatile Ifx_PSI5_CH_SDRH*)0xF0005098u)




#define PSI5_SDRH0 (PSI5_CH0_SDRH)


#define PSI5_CH0_SDRL (*(volatile Ifx_PSI5_CH_SDRL*)0xF0005094u)




#define PSI5_SDRL0 (PSI5_CH0_SDRL)


#define PSI5_CH0_SDS0 (*(volatile Ifx_PSI5_CH_SDS*)0xF0005060u)




#define PSI5_SDS00 (PSI5_CH0_SDS0)


#define PSI5_CH0_SDS1 (*(volatile Ifx_PSI5_CH_SDS*)0xF0005064u)




#define PSI5_SDS01 (PSI5_CH0_SDS1)


#define PSI5_CH0_SDS2 (*(volatile Ifx_PSI5_CH_SDS*)0xF0005068u)




#define PSI5_SDS02 (PSI5_CH0_SDS2)


#define PSI5_CH0_SDS3 (*(volatile Ifx_PSI5_CH_SDS*)0xF000506Cu)




#define PSI5_SDS03 (PSI5_CH0_SDS3)


#define PSI5_CH0_SDS4 (*(volatile Ifx_PSI5_CH_SDS*)0xF0005070u)




#define PSI5_SDS04 (PSI5_CH0_SDS4)


#define PSI5_CH0_SDS5 (*(volatile Ifx_PSI5_CH_SDS*)0xF0005074u)




#define PSI5_SDS05 (PSI5_CH0_SDS5)


#define PSI5_CH0_SFTSC (*(volatile Ifx_PSI5_CH_SFTSC*)0xF000507Cu)




#define PSI5_SFTSC0 (PSI5_CH0_SFTSC)


#define PSI5_CH0_SORH (*(volatile Ifx_PSI5_CH_SORH*)0xF00050A8u)




#define PSI5_SORH0 (PSI5_CH0_SORH)


#define PSI5_CH0_SORL (*(volatile Ifx_PSI5_CH_SORL*)0xF00050A4u)




#define PSI5_SORL0 (PSI5_CH0_SORL)


#define PSI5_CH0_SPTSC (*(volatile Ifx_PSI5_CH_SPTSC*)0xF0005078u)




#define PSI5_SPTSC0 (PSI5_CH0_SPTSC)


#define PSI5_CH0_SSRH (*(volatile Ifx_PSI5_CH_SSRH*)0xF00050A0u)




#define PSI5_SSRH0 (PSI5_CH0_SSRH)


#define PSI5_CH0_SSRL (*(volatile Ifx_PSI5_CH_SSRL*)0xF000509Cu)




#define PSI5_SSRL0 (PSI5_CH0_SSRL)


#define PSI5_CH0_WDT0 (*(volatile Ifx_PSI5_CH_WDT*)0xF0005040u)




#define PSI5_WDT00 (PSI5_CH0_WDT0)


#define PSI5_CH0_WDT1 (*(volatile Ifx_PSI5_CH_WDT*)0xF0005044u)




#define PSI5_WDT01 (PSI5_CH0_WDT1)


#define PSI5_CH0_WDT2 (*(volatile Ifx_PSI5_CH_WDT*)0xF0005048u)




#define PSI5_WDT02 (PSI5_CH0_WDT2)


#define PSI5_CH0_WDT3 (*(volatile Ifx_PSI5_CH_WDT*)0xF000504Cu)




#define PSI5_WDT03 (PSI5_CH0_WDT3)


#define PSI5_CH0_WDT4 (*(volatile Ifx_PSI5_CH_WDT*)0xF0005050u)




#define PSI5_WDT04 (PSI5_CH0_WDT4)


#define PSI5_CH0_WDT5 (*(volatile Ifx_PSI5_CH_WDT*)0xF0005054u)




#define PSI5_WDT05 (PSI5_CH0_WDT5)


#define PSI5_CH0_WDT6 (*(volatile Ifx_PSI5_CH_WDT*)0xF0005058u)




#define PSI5_WDT06 (PSI5_CH0_WDT6)


#define PSI5_CH1_CTV (*(volatile Ifx_PSI5_CH_CTV*)0xF000511Cu)




#define PSI5_CTV1 (PSI5_CH1_CTV)


#define PSI5_CH1_IOCR (*(volatile Ifx_PSI5_CH_IOCR*)0xF00050C0u)




#define PSI5_IOCR1 (PSI5_CH1_IOCR)


#define PSI5_CH1_PGC (*(volatile Ifx_PSI5_CH_PGC*)0xF0005118u)




#define PSI5_PGC1 (PSI5_CH1_PGC)


#define PSI5_CH1_RCRA (*(volatile Ifx_PSI5_CH_RCRA*)0xF00050C4u)




#define PSI5_RCRA1 (PSI5_CH1_RCRA)


#define PSI5_CH1_RCRB (*(volatile Ifx_PSI5_CH_RCRB*)0xF00050C8u)




#define PSI5_RCRB1 (PSI5_CH1_RCRB)


#define PSI5_CH1_RCRC (*(volatile Ifx_PSI5_CH_RCRC*)0xF00050CCu)




#define PSI5_RCRC1 (PSI5_CH1_RCRC)


#define PSI5_CH1_RDRH (*(volatile Ifx_PSI5_CH_RDRH*)0xF0005114u)




#define PSI5_RDRH1 (PSI5_CH1_RDRH)


#define PSI5_CH1_RDRL (*(volatile Ifx_PSI5_CH_RDRL*)0xF0005110u)




#define PSI5_RDRL1 (PSI5_CH1_RDRL)


#define PSI5_CH1_RSR (*(volatile Ifx_PSI5_CH_RSR*)0xF00050ECu)




#define PSI5_RSR1 (PSI5_CH1_RSR)


#define PSI5_CH1_SCR (*(volatile Ifx_PSI5_CH_SCR*)0xF0005120u)




#define PSI5_SCR1 (PSI5_CH1_SCR)


#define PSI5_CH1_SDRH (*(volatile Ifx_PSI5_CH_SDRH*)0xF0005128u)




#define PSI5_SDRH1 (PSI5_CH1_SDRH)


#define PSI5_CH1_SDRL (*(volatile Ifx_PSI5_CH_SDRL*)0xF0005124u)




#define PSI5_SDRL1 (PSI5_CH1_SDRL)


#define PSI5_CH1_SDS0 (*(volatile Ifx_PSI5_CH_SDS*)0xF00050F0u)




#define PSI5_SDS10 (PSI5_CH1_SDS0)


#define PSI5_CH1_SDS1 (*(volatile Ifx_PSI5_CH_SDS*)0xF00050F4u)




#define PSI5_SDS11 (PSI5_CH1_SDS1)


#define PSI5_CH1_SDS2 (*(volatile Ifx_PSI5_CH_SDS*)0xF00050F8u)




#define PSI5_SDS12 (PSI5_CH1_SDS2)


#define PSI5_CH1_SDS3 (*(volatile Ifx_PSI5_CH_SDS*)0xF00050FCu)




#define PSI5_SDS13 (PSI5_CH1_SDS3)


#define PSI5_CH1_SDS4 (*(volatile Ifx_PSI5_CH_SDS*)0xF0005100u)




#define PSI5_SDS14 (PSI5_CH1_SDS4)


#define PSI5_CH1_SDS5 (*(volatile Ifx_PSI5_CH_SDS*)0xF0005104u)




#define PSI5_SDS15 (PSI5_CH1_SDS5)


#define PSI5_CH1_SFTSC (*(volatile Ifx_PSI5_CH_SFTSC*)0xF000510Cu)




#define PSI5_SFTSC1 (PSI5_CH1_SFTSC)


#define PSI5_CH1_SORH (*(volatile Ifx_PSI5_CH_SORH*)0xF0005138u)




#define PSI5_SORH1 (PSI5_CH1_SORH)


#define PSI5_CH1_SORL (*(volatile Ifx_PSI5_CH_SORL*)0xF0005134u)




#define PSI5_SORL1 (PSI5_CH1_SORL)


#define PSI5_CH1_SPTSC (*(volatile Ifx_PSI5_CH_SPTSC*)0xF0005108u)




#define PSI5_SPTSC1 (PSI5_CH1_SPTSC)


#define PSI5_CH1_SSRH (*(volatile Ifx_PSI5_CH_SSRH*)0xF0005130u)




#define PSI5_SSRH1 (PSI5_CH1_SSRH)


#define PSI5_CH1_SSRL (*(volatile Ifx_PSI5_CH_SSRL*)0xF000512Cu)




#define PSI5_SSRL1 (PSI5_CH1_SSRL)


#define PSI5_CH1_WDT0 (*(volatile Ifx_PSI5_CH_WDT*)0xF00050D0u)




#define PSI5_WDT10 (PSI5_CH1_WDT0)


#define PSI5_CH1_WDT1 (*(volatile Ifx_PSI5_CH_WDT*)0xF00050D4u)




#define PSI5_WDT11 (PSI5_CH1_WDT1)


#define PSI5_CH1_WDT2 (*(volatile Ifx_PSI5_CH_WDT*)0xF00050D8u)




#define PSI5_WDT12 (PSI5_CH1_WDT2)


#define PSI5_CH1_WDT3 (*(volatile Ifx_PSI5_CH_WDT*)0xF00050DCu)




#define PSI5_WDT13 (PSI5_CH1_WDT3)


#define PSI5_CH1_WDT4 (*(volatile Ifx_PSI5_CH_WDT*)0xF00050E0u)




#define PSI5_WDT14 (PSI5_CH1_WDT4)


#define PSI5_CH1_WDT5 (*(volatile Ifx_PSI5_CH_WDT*)0xF00050E4u)




#define PSI5_WDT15 (PSI5_CH1_WDT5)


#define PSI5_CH1_WDT6 (*(volatile Ifx_PSI5_CH_WDT*)0xF00050E8u)




#define PSI5_WDT16 (PSI5_CH1_WDT6)


#define PSI5_CH2_CTV (*(volatile Ifx_PSI5_CH_CTV*)0xF00051ACu)




#define PSI5_CTV2 (PSI5_CH2_CTV)


#define PSI5_CH2_IOCR (*(volatile Ifx_PSI5_CH_IOCR*)0xF0005150u)




#define PSI5_IOCR2 (PSI5_CH2_IOCR)


#define PSI5_CH2_PGC (*(volatile Ifx_PSI5_CH_PGC*)0xF00051A8u)




#define PSI5_PGC2 (PSI5_CH2_PGC)


#define PSI5_CH2_RCRA (*(volatile Ifx_PSI5_CH_RCRA*)0xF0005154u)




#define PSI5_RCRA2 (PSI5_CH2_RCRA)


#define PSI5_CH2_RCRB (*(volatile Ifx_PSI5_CH_RCRB*)0xF0005158u)




#define PSI5_RCRB2 (PSI5_CH2_RCRB)


#define PSI5_CH2_RCRC (*(volatile Ifx_PSI5_CH_RCRC*)0xF000515Cu)




#define PSI5_RCRC2 (PSI5_CH2_RCRC)


#define PSI5_CH2_RDRH (*(volatile Ifx_PSI5_CH_RDRH*)0xF00051A4u)




#define PSI5_RDRH2 (PSI5_CH2_RDRH)


#define PSI5_CH2_RDRL (*(volatile Ifx_PSI5_CH_RDRL*)0xF00051A0u)




#define PSI5_RDRL2 (PSI5_CH2_RDRL)


#define PSI5_CH2_RSR (*(volatile Ifx_PSI5_CH_RSR*)0xF000517Cu)




#define PSI5_RSR2 (PSI5_CH2_RSR)


#define PSI5_CH2_SCR (*(volatile Ifx_PSI5_CH_SCR*)0xF00051B0u)




#define PSI5_SCR2 (PSI5_CH2_SCR)


#define PSI5_CH2_SDRH (*(volatile Ifx_PSI5_CH_SDRH*)0xF00051B8u)




#define PSI5_SDRH2 (PSI5_CH2_SDRH)


#define PSI5_CH2_SDRL (*(volatile Ifx_PSI5_CH_SDRL*)0xF00051B4u)




#define PSI5_SDRL2 (PSI5_CH2_SDRL)


#define PSI5_CH2_SDS0 (*(volatile Ifx_PSI5_CH_SDS*)0xF0005180u)




#define PSI5_SDS20 (PSI5_CH2_SDS0)


#define PSI5_CH2_SDS1 (*(volatile Ifx_PSI5_CH_SDS*)0xF0005184u)




#define PSI5_SDS21 (PSI5_CH2_SDS1)


#define PSI5_CH2_SDS2 (*(volatile Ifx_PSI5_CH_SDS*)0xF0005188u)




#define PSI5_SDS22 (PSI5_CH2_SDS2)


#define PSI5_CH2_SDS3 (*(volatile Ifx_PSI5_CH_SDS*)0xF000518Cu)




#define PSI5_SDS23 (PSI5_CH2_SDS3)


#define PSI5_CH2_SDS4 (*(volatile Ifx_PSI5_CH_SDS*)0xF0005190u)




#define PSI5_SDS24 (PSI5_CH2_SDS4)


#define PSI5_CH2_SDS5 (*(volatile Ifx_PSI5_CH_SDS*)0xF0005194u)




#define PSI5_SDS25 (PSI5_CH2_SDS5)


#define PSI5_CH2_SFTSC (*(volatile Ifx_PSI5_CH_SFTSC*)0xF000519Cu)




#define PSI5_SFTSC2 (PSI5_CH2_SFTSC)


#define PSI5_CH2_SORH (*(volatile Ifx_PSI5_CH_SORH*)0xF00051C8u)




#define PSI5_SORH2 (PSI5_CH2_SORH)


#define PSI5_CH2_SORL (*(volatile Ifx_PSI5_CH_SORL*)0xF00051C4u)




#define PSI5_SORL2 (PSI5_CH2_SORL)


#define PSI5_CH2_SPTSC (*(volatile Ifx_PSI5_CH_SPTSC*)0xF0005198u)




#define PSI5_SPTSC2 (PSI5_CH2_SPTSC)


#define PSI5_CH2_SSRH (*(volatile Ifx_PSI5_CH_SSRH*)0xF00051C0u)




#define PSI5_SSRH2 (PSI5_CH2_SSRH)


#define PSI5_CH2_SSRL (*(volatile Ifx_PSI5_CH_SSRL*)0xF00051BCu)




#define PSI5_SSRL2 (PSI5_CH2_SSRL)


#define PSI5_CH2_WDT0 (*(volatile Ifx_PSI5_CH_WDT*)0xF0005160u)




#define PSI5_WDT20 (PSI5_CH2_WDT0)


#define PSI5_CH2_WDT1 (*(volatile Ifx_PSI5_CH_WDT*)0xF0005164u)




#define PSI5_WDT21 (PSI5_CH2_WDT1)


#define PSI5_CH2_WDT2 (*(volatile Ifx_PSI5_CH_WDT*)0xF0005168u)




#define PSI5_WDT22 (PSI5_CH2_WDT2)


#define PSI5_CH2_WDT3 (*(volatile Ifx_PSI5_CH_WDT*)0xF000516Cu)




#define PSI5_WDT23 (PSI5_CH2_WDT3)


#define PSI5_CH2_WDT4 (*(volatile Ifx_PSI5_CH_WDT*)0xF0005170u)




#define PSI5_WDT24 (PSI5_CH2_WDT4)


#define PSI5_CH2_WDT5 (*(volatile Ifx_PSI5_CH_WDT*)0xF0005174u)




#define PSI5_WDT25 (PSI5_CH2_WDT5)


#define PSI5_CH2_WDT6 (*(volatile Ifx_PSI5_CH_WDT*)0xF0005178u)




#define PSI5_WDT26 (PSI5_CH2_WDT6)


#define PSI5_CLC (*(volatile Ifx_PSI5_CLC*)0xF0005000u)


#define PSI5_CRCICLR0 (*(volatile Ifx_PSI5_CRCICLR*)0xF000559Cu)


#define PSI5_CRCICLR1 (*(volatile Ifx_PSI5_CRCICLR*)0xF00055A0u)


#define PSI5_CRCICLR2 (*(volatile Ifx_PSI5_CRCICLR*)0xF00055A4u)


#define PSI5_CRCIOV0 (*(volatile Ifx_PSI5_CRCIOV*)0xF000545Cu)


#define PSI5_CRCIOV1 (*(volatile Ifx_PSI5_CRCIOV*)0xF0005460u)


#define PSI5_CRCIOV2 (*(volatile Ifx_PSI5_CRCIOV*)0xF0005464u)


#define PSI5_CRCISET0 (*(volatile Ifx_PSI5_CRCISET*)0xF00054FCu)


#define PSI5_CRCISET1 (*(volatile Ifx_PSI5_CRCISET*)0xF0005500u)


#define PSI5_CRCISET2 (*(volatile Ifx_PSI5_CRCISET*)0xF0005504u)


#define PSI5_FDR (*(volatile Ifx_PSI5_FDR*)0xF000500Cu)


#define PSI5_FDRH (*(volatile Ifx_PSI5_FDR*)0xF0005014u)


#define PSI5_FDRL (*(volatile Ifx_PSI5_FDR*)0xF0005010u)


#define PSI5_FDRT (*(volatile Ifx_PSI5_FDRT*)0xF0005018u)


#define PSI5_GCR (*(volatile Ifx_PSI5_GCR*)0xF000502Cu)


#define PSI5_ID (*(volatile Ifx_PSI5_ID*)0xF0005008u)


#define PSI5_INP0 (*(volatile Ifx_PSI5_INP*)0xF00052FCu)


#define PSI5_INP1 (*(volatile Ifx_PSI5_INP*)0xF0005300u)


#define PSI5_INP2 (*(volatile Ifx_PSI5_INP*)0xF0005304u)


#define PSI5_INTCLRA0 (*(volatile Ifx_PSI5_INTCLRA*)0xF0005360u)


#define PSI5_INTCLRA1 (*(volatile Ifx_PSI5_INTCLRA*)0xF0005364u)


#define PSI5_INTCLRA2 (*(volatile Ifx_PSI5_INTCLRA*)0xF0005368u)


#define PSI5_INTCLRB0 (*(volatile Ifx_PSI5_INTCLRB*)0xF0005374u)


#define PSI5_INTCLRB1 (*(volatile Ifx_PSI5_INTCLRB*)0xF0005378u)


#define PSI5_INTCLRB2 (*(volatile Ifx_PSI5_INTCLRB*)0xF000537Cu)


#define PSI5_INTENA0 (*(volatile Ifx_PSI5_INTENA*)0xF0005388u)


#define PSI5_INTENA1 (*(volatile Ifx_PSI5_INTENA*)0xF000538Cu)


#define PSI5_INTENA2 (*(volatile Ifx_PSI5_INTENA*)0xF0005390u)


#define PSI5_INTENB0 (*(volatile Ifx_PSI5_INTENB*)0xF000539Cu)


#define PSI5_INTENB1 (*(volatile Ifx_PSI5_INTENB*)0xF00053A0u)


#define PSI5_INTENB2 (*(volatile Ifx_PSI5_INTENB*)0xF00053A4u)


#define PSI5_INTOV (*(volatile Ifx_PSI5_INTOV*)0xF00052F8u)


#define PSI5_INTSETA0 (*(volatile Ifx_PSI5_INTSETA*)0xF0005338u)


#define PSI5_INTSETA1 (*(volatile Ifx_PSI5_INTSETA*)0xF000533Cu)


#define PSI5_INTSETA2 (*(volatile Ifx_PSI5_INTSETA*)0xF0005340u)


#define PSI5_INTSETB0 (*(volatile Ifx_PSI5_INTSETB*)0xF000534Cu)


#define PSI5_INTSETB1 (*(volatile Ifx_PSI5_INTSETB*)0xF0005350u)


#define PSI5_INTSETB2 (*(volatile Ifx_PSI5_INTSETB*)0xF0005354u)


#define PSI5_INTSTATA0 (*(volatile Ifx_PSI5_INTSTATA*)0xF0005310u)


#define PSI5_INTSTATA1 (*(volatile Ifx_PSI5_INTSTATA*)0xF0005314u)


#define PSI5_INTSTATA2 (*(volatile Ifx_PSI5_INTSTATA*)0xF0005318u)


#define PSI5_INTSTATB0 (*(volatile Ifx_PSI5_INTSTATB*)0xF0005324u)


#define PSI5_INTSTATB1 (*(volatile Ifx_PSI5_INTSTATB*)0xF0005328u)


#define PSI5_INTSTATB2 (*(volatile Ifx_PSI5_INTSTATB*)0xF000532Cu)


#define PSI5_KRST0 (*(volatile Ifx_PSI5_KRST0*)0xF00053D8u)


#define PSI5_KRST1 (*(volatile Ifx_PSI5_KRST1*)0xF00053DCu)


#define PSI5_KRSTCLR (*(volatile Ifx_PSI5_KRSTCLR*)0xF00053E0u)


#define PSI5_MEICLR0 (*(volatile Ifx_PSI5_MEICLR*)0xF00055D8u)


#define PSI5_MEICLR1 (*(volatile Ifx_PSI5_MEICLR*)0xF00055DCu)


#define PSI5_MEICLR2 (*(volatile Ifx_PSI5_MEICLR*)0xF00055E0u)


#define PSI5_MEIOV0 (*(volatile Ifx_PSI5_MEIOV*)0xF0005498u)


#define PSI5_MEIOV1 (*(volatile Ifx_PSI5_MEIOV*)0xF000549Cu)


#define PSI5_MEIOV2 (*(volatile Ifx_PSI5_MEIOV*)0xF00054A0u)


#define PSI5_MEISET0 (*(volatile Ifx_PSI5_MEISET*)0xF0005538u)


#define PSI5_MEISET1 (*(volatile Ifx_PSI5_MEISET*)0xF000553Cu)


#define PSI5_MEISET2 (*(volatile Ifx_PSI5_MEISET*)0xF0005540u)


#define PSI5_NBICLR0 (*(volatile Ifx_PSI5_NBICLR*)0xF0005574u)


#define PSI5_NBICLR1 (*(volatile Ifx_PSI5_NBICLR*)0xF0005578u)


#define PSI5_NBICLR2 (*(volatile Ifx_PSI5_NBICLR*)0xF000557Cu)


#define PSI5_NBIOV0 (*(volatile Ifx_PSI5_NBIOV*)0xF0005434u)


#define PSI5_NBIOV1 (*(volatile Ifx_PSI5_NBIOV*)0xF0005438u)


#define PSI5_NBIOV2 (*(volatile Ifx_PSI5_NBIOV*)0xF000543Cu)


#define PSI5_NBISET0 (*(volatile Ifx_PSI5_NBISET*)0xF00054D4u)


#define PSI5_NBISET1 (*(volatile Ifx_PSI5_NBISET*)0xF00054D8u)


#define PSI5_NBISET2 (*(volatile Ifx_PSI5_NBISET*)0xF00054DCu)


#define PSI5_NFICLR0 (*(volatile Ifx_PSI5_NFICLR*)0xF00055C4u)


#define PSI5_NFICLR1 (*(volatile Ifx_PSI5_NFICLR*)0xF00055C8u)


#define PSI5_NFICLR2 (*(volatile Ifx_PSI5_NFICLR*)0xF00055CCu)


#define PSI5_NFIOV0 (*(volatile Ifx_PSI5_NFIOV*)0xF0005484u)


#define PSI5_NFIOV1 (*(volatile Ifx_PSI5_NFIOV*)0xF0005488u)


#define PSI5_NFIOV2 (*(volatile Ifx_PSI5_NFIOV*)0xF000548Cu)


#define PSI5_NFISET0 (*(volatile Ifx_PSI5_NFISET*)0xF0005524u)


#define PSI5_NFISET1 (*(volatile Ifx_PSI5_NFISET*)0xF0005528u)


#define PSI5_NFISET2 (*(volatile Ifx_PSI5_NFISET*)0xF000552Cu)


#define PSI5_OCS (*(volatile Ifx_PSI5_OCS*)0xF00053CCu)


#define PSI5_RDF0 (*(volatile Ifx_PSI5_RDF*)0xF00053F8u)


#define PSI5_RDF1 (*(volatile Ifx_PSI5_RDF*)0xF00053FCu)


#define PSI5_RDF2 (*(volatile Ifx_PSI5_RDF*)0xF0005400u)


#define PSI5_RDICLR0 (*(volatile Ifx_PSI5_RDICLR*)0xF00055B0u)


#define PSI5_RDICLR1 (*(volatile Ifx_PSI5_RDICLR*)0xF00055B4u)


#define PSI5_RDICLR2 (*(volatile Ifx_PSI5_RDICLR*)0xF00055B8u)


#define PSI5_RDIOV0 (*(volatile Ifx_PSI5_RDIOV*)0xF0005470u)


#define PSI5_RDIOV1 (*(volatile Ifx_PSI5_RDIOV*)0xF0005474u)


#define PSI5_RDIOV2 (*(volatile Ifx_PSI5_RDIOV*)0xF0005478u)


#define PSI5_RDISET0 (*(volatile Ifx_PSI5_RDISET*)0xF0005510u)


#define PSI5_RDISET1 (*(volatile Ifx_PSI5_RDISET*)0xF0005514u)


#define PSI5_RDISET2 (*(volatile Ifx_PSI5_RDISET*)0xF0005518u)


#define PSI5_RDM0_0_H (*(volatile Ifx_PSI5_RDM_H*)0xF0005604u)




#define PSI5_RDMH00 (PSI5_RDM0_0_H)


#define PSI5_RDM0_0_L (*(volatile Ifx_PSI5_RDM_L*)0xF0005600u)




#define PSI5_RDML00 (PSI5_RDM0_0_L)


#define PSI5_RDM0_10_H (*(volatile Ifx_PSI5_RDM_H*)0xF0005654u)




#define PSI5_RDMH010 (PSI5_RDM0_10_H)


#define PSI5_RDM0_10_L (*(volatile Ifx_PSI5_RDM_L*)0xF0005650u)




#define PSI5_RDML010 (PSI5_RDM0_10_L)


#define PSI5_RDM0_11_H (*(volatile Ifx_PSI5_RDM_H*)0xF000565Cu)




#define PSI5_RDMH011 (PSI5_RDM0_11_H)


#define PSI5_RDM0_11_L (*(volatile Ifx_PSI5_RDM_L*)0xF0005658u)




#define PSI5_RDML011 (PSI5_RDM0_11_L)


#define PSI5_RDM0_12_H (*(volatile Ifx_PSI5_RDM_H*)0xF0005664u)




#define PSI5_RDMH012 (PSI5_RDM0_12_H)


#define PSI5_RDM0_12_L (*(volatile Ifx_PSI5_RDM_L*)0xF0005660u)




#define PSI5_RDML012 (PSI5_RDM0_12_L)


#define PSI5_RDM0_13_H (*(volatile Ifx_PSI5_RDM_H*)0xF000566Cu)




#define PSI5_RDMH013 (PSI5_RDM0_13_H)


#define PSI5_RDM0_13_L (*(volatile Ifx_PSI5_RDM_L*)0xF0005668u)




#define PSI5_RDML013 (PSI5_RDM0_13_L)


#define PSI5_RDM0_14_H (*(volatile Ifx_PSI5_RDM_H*)0xF0005674u)




#define PSI5_RDMH014 (PSI5_RDM0_14_H)


#define PSI5_RDM0_14_L (*(volatile Ifx_PSI5_RDM_L*)0xF0005670u)




#define PSI5_RDML014 (PSI5_RDM0_14_L)


#define PSI5_RDM0_15_H (*(volatile Ifx_PSI5_RDM_H*)0xF000567Cu)




#define PSI5_RDMH015 (PSI5_RDM0_15_H)


#define PSI5_RDM0_15_L (*(volatile Ifx_PSI5_RDM_L*)0xF0005678u)




#define PSI5_RDML015 (PSI5_RDM0_15_L)


#define PSI5_RDM0_16_H (*(volatile Ifx_PSI5_RDM_H*)0xF0005684u)




#define PSI5_RDMH016 (PSI5_RDM0_16_H)


#define PSI5_RDM0_16_L (*(volatile Ifx_PSI5_RDM_L*)0xF0005680u)




#define PSI5_RDML016 (PSI5_RDM0_16_L)


#define PSI5_RDM0_17_H (*(volatile Ifx_PSI5_RDM_H*)0xF000568Cu)




#define PSI5_RDMH017 (PSI5_RDM0_17_H)


#define PSI5_RDM0_17_L (*(volatile Ifx_PSI5_RDM_L*)0xF0005688u)




#define PSI5_RDML017 (PSI5_RDM0_17_L)


#define PSI5_RDM0_18_H (*(volatile Ifx_PSI5_RDM_H*)0xF0005694u)




#define PSI5_RDMH018 (PSI5_RDM0_18_H)


#define PSI5_RDM0_18_L (*(volatile Ifx_PSI5_RDM_L*)0xF0005690u)




#define PSI5_RDML018 (PSI5_RDM0_18_L)


#define PSI5_RDM0_19_H (*(volatile Ifx_PSI5_RDM_H*)0xF000569Cu)




#define PSI5_RDMH019 (PSI5_RDM0_19_H)


#define PSI5_RDM0_19_L (*(volatile Ifx_PSI5_RDM_L*)0xF0005698u)




#define PSI5_RDML019 (PSI5_RDM0_19_L)


#define PSI5_RDM0_1_H (*(volatile Ifx_PSI5_RDM_H*)0xF000560Cu)




#define PSI5_RDMH01 (PSI5_RDM0_1_H)


#define PSI5_RDM0_1_L (*(volatile Ifx_PSI5_RDM_L*)0xF0005608u)




#define PSI5_RDML01 (PSI5_RDM0_1_L)


#define PSI5_RDM0_20_H (*(volatile Ifx_PSI5_RDM_H*)0xF00056A4u)




#define PSI5_RDMH020 (PSI5_RDM0_20_H)


#define PSI5_RDM0_20_L (*(volatile Ifx_PSI5_RDM_L*)0xF00056A0u)




#define PSI5_RDML020 (PSI5_RDM0_20_L)


#define PSI5_RDM0_21_H (*(volatile Ifx_PSI5_RDM_H*)0xF00056ACu)




#define PSI5_RDMH021 (PSI5_RDM0_21_H)


#define PSI5_RDM0_21_L (*(volatile Ifx_PSI5_RDM_L*)0xF00056A8u)




#define PSI5_RDML021 (PSI5_RDM0_21_L)


#define PSI5_RDM0_22_H (*(volatile Ifx_PSI5_RDM_H*)0xF00056B4u)




#define PSI5_RDMH022 (PSI5_RDM0_22_H)


#define PSI5_RDM0_22_L (*(volatile Ifx_PSI5_RDM_L*)0xF00056B0u)




#define PSI5_RDML022 (PSI5_RDM0_22_L)


#define PSI5_RDM0_23_H (*(volatile Ifx_PSI5_RDM_H*)0xF00056BCu)




#define PSI5_RDMH023 (PSI5_RDM0_23_H)


#define PSI5_RDM0_23_L (*(volatile Ifx_PSI5_RDM_L*)0xF00056B8u)




#define PSI5_RDML023 (PSI5_RDM0_23_L)


#define PSI5_RDM0_24_H (*(volatile Ifx_PSI5_RDM_H*)0xF00056C4u)




#define PSI5_RDMH024 (PSI5_RDM0_24_H)


#define PSI5_RDM0_24_L (*(volatile Ifx_PSI5_RDM_L*)0xF00056C0u)




#define PSI5_RDML024 (PSI5_RDM0_24_L)


#define PSI5_RDM0_25_H (*(volatile Ifx_PSI5_RDM_H*)0xF00056CCu)




#define PSI5_RDMH025 (PSI5_RDM0_25_H)


#define PSI5_RDM0_25_L (*(volatile Ifx_PSI5_RDM_L*)0xF00056C8u)




#define PSI5_RDML025 (PSI5_RDM0_25_L)


#define PSI5_RDM0_26_H (*(volatile Ifx_PSI5_RDM_H*)0xF00056D4u)




#define PSI5_RDMH026 (PSI5_RDM0_26_H)


#define PSI5_RDM0_26_L (*(volatile Ifx_PSI5_RDM_L*)0xF00056D0u)




#define PSI5_RDML026 (PSI5_RDM0_26_L)


#define PSI5_RDM0_27_H (*(volatile Ifx_PSI5_RDM_H*)0xF00056DCu)




#define PSI5_RDMH027 (PSI5_RDM0_27_H)


#define PSI5_RDM0_27_L (*(volatile Ifx_PSI5_RDM_L*)0xF00056D8u)




#define PSI5_RDML027 (PSI5_RDM0_27_L)


#define PSI5_RDM0_28_H (*(volatile Ifx_PSI5_RDM_H*)0xF00056E4u)




#define PSI5_RDMH028 (PSI5_RDM0_28_H)


#define PSI5_RDM0_28_L (*(volatile Ifx_PSI5_RDM_L*)0xF00056E0u)




#define PSI5_RDML028 (PSI5_RDM0_28_L)


#define PSI5_RDM0_29_H (*(volatile Ifx_PSI5_RDM_H*)0xF00056ECu)




#define PSI5_RDMH029 (PSI5_RDM0_29_H)


#define PSI5_RDM0_29_L (*(volatile Ifx_PSI5_RDM_L*)0xF00056E8u)




#define PSI5_RDML029 (PSI5_RDM0_29_L)


#define PSI5_RDM0_2_H (*(volatile Ifx_PSI5_RDM_H*)0xF0005614u)




#define PSI5_RDMH02 (PSI5_RDM0_2_H)


#define PSI5_RDM0_2_L (*(volatile Ifx_PSI5_RDM_L*)0xF0005610u)




#define PSI5_RDML02 (PSI5_RDM0_2_L)


#define PSI5_RDM0_30_H (*(volatile Ifx_PSI5_RDM_H*)0xF00056F4u)




#define PSI5_RDMH030 (PSI5_RDM0_30_H)


#define PSI5_RDM0_30_L (*(volatile Ifx_PSI5_RDM_L*)0xF00056F0u)




#define PSI5_RDML030 (PSI5_RDM0_30_L)


#define PSI5_RDM0_31_H (*(volatile Ifx_PSI5_RDM_H*)0xF00056FCu)




#define PSI5_RDMH031 (PSI5_RDM0_31_H)


#define PSI5_RDM0_31_L (*(volatile Ifx_PSI5_RDM_L*)0xF00056F8u)




#define PSI5_RDML031 (PSI5_RDM0_31_L)


#define PSI5_RDM0_3_H (*(volatile Ifx_PSI5_RDM_H*)0xF000561Cu)




#define PSI5_RDMH03 (PSI5_RDM0_3_H)


#define PSI5_RDM0_3_L (*(volatile Ifx_PSI5_RDM_L*)0xF0005618u)




#define PSI5_RDML03 (PSI5_RDM0_3_L)


#define PSI5_RDM0_4_H (*(volatile Ifx_PSI5_RDM_H*)0xF0005624u)




#define PSI5_RDMH04 (PSI5_RDM0_4_H)


#define PSI5_RDM0_4_L (*(volatile Ifx_PSI5_RDM_L*)0xF0005620u)




#define PSI5_RDML04 (PSI5_RDM0_4_L)


#define PSI5_RDM0_5_H (*(volatile Ifx_PSI5_RDM_H*)0xF000562Cu)




#define PSI5_RDMH05 (PSI5_RDM0_5_H)


#define PSI5_RDM0_5_L (*(volatile Ifx_PSI5_RDM_L*)0xF0005628u)




#define PSI5_RDML05 (PSI5_RDM0_5_L)


#define PSI5_RDM0_6_H (*(volatile Ifx_PSI5_RDM_H*)0xF0005634u)




#define PSI5_RDMH06 (PSI5_RDM0_6_H)


#define PSI5_RDM0_6_L (*(volatile Ifx_PSI5_RDM_L*)0xF0005630u)




#define PSI5_RDML06 (PSI5_RDM0_6_L)


#define PSI5_RDM0_7_H (*(volatile Ifx_PSI5_RDM_H*)0xF000563Cu)




#define PSI5_RDMH07 (PSI5_RDM0_7_H)


#define PSI5_RDM0_7_L (*(volatile Ifx_PSI5_RDM_L*)0xF0005638u)




#define PSI5_RDML07 (PSI5_RDM0_7_L)


#define PSI5_RDM0_8_H (*(volatile Ifx_PSI5_RDM_H*)0xF0005644u)




#define PSI5_RDMH08 (PSI5_RDM0_8_H)


#define PSI5_RDM0_8_L (*(volatile Ifx_PSI5_RDM_L*)0xF0005640u)




#define PSI5_RDML08 (PSI5_RDM0_8_L)


#define PSI5_RDM0_9_H (*(volatile Ifx_PSI5_RDM_H*)0xF000564Cu)




#define PSI5_RDMH09 (PSI5_RDM0_9_H)


#define PSI5_RDM0_9_L (*(volatile Ifx_PSI5_RDM_L*)0xF0005648u)




#define PSI5_RDML09 (PSI5_RDM0_9_L)


#define PSI5_RDM1_0_H (*(volatile Ifx_PSI5_RDM_H*)0xF0005704u)




#define PSI5_RDMH10 (PSI5_RDM1_0_H)


#define PSI5_RDM1_0_L (*(volatile Ifx_PSI5_RDM_L*)0xF0005700u)




#define PSI5_RDML10 (PSI5_RDM1_0_L)


#define PSI5_RDM1_10_H (*(volatile Ifx_PSI5_RDM_H*)0xF0005754u)




#define PSI5_RDMH110 (PSI5_RDM1_10_H)


#define PSI5_RDM1_10_L (*(volatile Ifx_PSI5_RDM_L*)0xF0005750u)




#define PSI5_RDML110 (PSI5_RDM1_10_L)


#define PSI5_RDM1_11_H (*(volatile Ifx_PSI5_RDM_H*)0xF000575Cu)




#define PSI5_RDMH111 (PSI5_RDM1_11_H)


#define PSI5_RDM1_11_L (*(volatile Ifx_PSI5_RDM_L*)0xF0005758u)




#define PSI5_RDML111 (PSI5_RDM1_11_L)


#define PSI5_RDM1_12_H (*(volatile Ifx_PSI5_RDM_H*)0xF0005764u)




#define PSI5_RDMH112 (PSI5_RDM1_12_H)


#define PSI5_RDM1_12_L (*(volatile Ifx_PSI5_RDM_L*)0xF0005760u)




#define PSI5_RDML112 (PSI5_RDM1_12_L)


#define PSI5_RDM1_13_H (*(volatile Ifx_PSI5_RDM_H*)0xF000576Cu)




#define PSI5_RDMH113 (PSI5_RDM1_13_H)


#define PSI5_RDM1_13_L (*(volatile Ifx_PSI5_RDM_L*)0xF0005768u)




#define PSI5_RDML113 (PSI5_RDM1_13_L)


#define PSI5_RDM1_14_H (*(volatile Ifx_PSI5_RDM_H*)0xF0005774u)




#define PSI5_RDMH114 (PSI5_RDM1_14_H)


#define PSI5_RDM1_14_L (*(volatile Ifx_PSI5_RDM_L*)0xF0005770u)




#define PSI5_RDML114 (PSI5_RDM1_14_L)


#define PSI5_RDM1_15_H (*(volatile Ifx_PSI5_RDM_H*)0xF000577Cu)




#define PSI5_RDMH115 (PSI5_RDM1_15_H)


#define PSI5_RDM1_15_L (*(volatile Ifx_PSI5_RDM_L*)0xF0005778u)




#define PSI5_RDML115 (PSI5_RDM1_15_L)


#define PSI5_RDM1_16_H (*(volatile Ifx_PSI5_RDM_H*)0xF0005784u)




#define PSI5_RDMH116 (PSI5_RDM1_16_H)


#define PSI5_RDM1_16_L (*(volatile Ifx_PSI5_RDM_L*)0xF0005780u)




#define PSI5_RDML116 (PSI5_RDM1_16_L)


#define PSI5_RDM1_17_H (*(volatile Ifx_PSI5_RDM_H*)0xF000578Cu)




#define PSI5_RDMH117 (PSI5_RDM1_17_H)


#define PSI5_RDM1_17_L (*(volatile Ifx_PSI5_RDM_L*)0xF0005788u)




#define PSI5_RDML117 (PSI5_RDM1_17_L)


#define PSI5_RDM1_18_H (*(volatile Ifx_PSI5_RDM_H*)0xF0005794u)




#define PSI5_RDMH118 (PSI5_RDM1_18_H)


#define PSI5_RDM1_18_L (*(volatile Ifx_PSI5_RDM_L*)0xF0005790u)




#define PSI5_RDML118 (PSI5_RDM1_18_L)


#define PSI5_RDM1_19_H (*(volatile Ifx_PSI5_RDM_H*)0xF000579Cu)




#define PSI5_RDMH119 (PSI5_RDM1_19_H)


#define PSI5_RDM1_19_L (*(volatile Ifx_PSI5_RDM_L*)0xF0005798u)




#define PSI5_RDML119 (PSI5_RDM1_19_L)


#define PSI5_RDM1_1_H (*(volatile Ifx_PSI5_RDM_H*)0xF000570Cu)




#define PSI5_RDMH11 (PSI5_RDM1_1_H)


#define PSI5_RDM1_1_L (*(volatile Ifx_PSI5_RDM_L*)0xF0005708u)




#define PSI5_RDML11 (PSI5_RDM1_1_L)


#define PSI5_RDM1_20_H (*(volatile Ifx_PSI5_RDM_H*)0xF00057A4u)




#define PSI5_RDMH120 (PSI5_RDM1_20_H)


#define PSI5_RDM1_20_L (*(volatile Ifx_PSI5_RDM_L*)0xF00057A0u)




#define PSI5_RDML120 (PSI5_RDM1_20_L)


#define PSI5_RDM1_21_H (*(volatile Ifx_PSI5_RDM_H*)0xF00057ACu)




#define PSI5_RDMH121 (PSI5_RDM1_21_H)


#define PSI5_RDM1_21_L (*(volatile Ifx_PSI5_RDM_L*)0xF00057A8u)




#define PSI5_RDML121 (PSI5_RDM1_21_L)


#define PSI5_RDM1_22_H (*(volatile Ifx_PSI5_RDM_H*)0xF00057B4u)




#define PSI5_RDMH122 (PSI5_RDM1_22_H)


#define PSI5_RDM1_22_L (*(volatile Ifx_PSI5_RDM_L*)0xF00057B0u)




#define PSI5_RDML122 (PSI5_RDM1_22_L)


#define PSI5_RDM1_23_H (*(volatile Ifx_PSI5_RDM_H*)0xF00057BCu)




#define PSI5_RDMH123 (PSI5_RDM1_23_H)


#define PSI5_RDM1_23_L (*(volatile Ifx_PSI5_RDM_L*)0xF00057B8u)




#define PSI5_RDML123 (PSI5_RDM1_23_L)


#define PSI5_RDM1_24_H (*(volatile Ifx_PSI5_RDM_H*)0xF00057C4u)




#define PSI5_RDMH124 (PSI5_RDM1_24_H)


#define PSI5_RDM1_24_L (*(volatile Ifx_PSI5_RDM_L*)0xF00057C0u)




#define PSI5_RDML124 (PSI5_RDM1_24_L)


#define PSI5_RDM1_25_H (*(volatile Ifx_PSI5_RDM_H*)0xF00057CCu)




#define PSI5_RDMH125 (PSI5_RDM1_25_H)


#define PSI5_RDM1_25_L (*(volatile Ifx_PSI5_RDM_L*)0xF00057C8u)




#define PSI5_RDML125 (PSI5_RDM1_25_L)


#define PSI5_RDM1_26_H (*(volatile Ifx_PSI5_RDM_H*)0xF00057D4u)




#define PSI5_RDMH126 (PSI5_RDM1_26_H)


#define PSI5_RDM1_26_L (*(volatile Ifx_PSI5_RDM_L*)0xF00057D0u)




#define PSI5_RDML126 (PSI5_RDM1_26_L)


#define PSI5_RDM1_27_H (*(volatile Ifx_PSI5_RDM_H*)0xF00057DCu)




#define PSI5_RDMH127 (PSI5_RDM1_27_H)


#define PSI5_RDM1_27_L (*(volatile Ifx_PSI5_RDM_L*)0xF00057D8u)




#define PSI5_RDML127 (PSI5_RDM1_27_L)


#define PSI5_RDM1_28_H (*(volatile Ifx_PSI5_RDM_H*)0xF00057E4u)




#define PSI5_RDMH128 (PSI5_RDM1_28_H)


#define PSI5_RDM1_28_L (*(volatile Ifx_PSI5_RDM_L*)0xF00057E0u)




#define PSI5_RDML128 (PSI5_RDM1_28_L)


#define PSI5_RDM1_29_H (*(volatile Ifx_PSI5_RDM_H*)0xF00057ECu)




#define PSI5_RDMH129 (PSI5_RDM1_29_H)


#define PSI5_RDM1_29_L (*(volatile Ifx_PSI5_RDM_L*)0xF00057E8u)




#define PSI5_RDML129 (PSI5_RDM1_29_L)


#define PSI5_RDM1_2_H (*(volatile Ifx_PSI5_RDM_H*)0xF0005714u)




#define PSI5_RDMH12 (PSI5_RDM1_2_H)


#define PSI5_RDM1_2_L (*(volatile Ifx_PSI5_RDM_L*)0xF0005710u)




#define PSI5_RDML12 (PSI5_RDM1_2_L)


#define PSI5_RDM1_30_H (*(volatile Ifx_PSI5_RDM_H*)0xF00057F4u)




#define PSI5_RDMH130 (PSI5_RDM1_30_H)


#define PSI5_RDM1_30_L (*(volatile Ifx_PSI5_RDM_L*)0xF00057F0u)




#define PSI5_RDML130 (PSI5_RDM1_30_L)


#define PSI5_RDM1_31_H (*(volatile Ifx_PSI5_RDM_H*)0xF00057FCu)




#define PSI5_RDMH131 (PSI5_RDM1_31_H)


#define PSI5_RDM1_31_L (*(volatile Ifx_PSI5_RDM_L*)0xF00057F8u)




#define PSI5_RDML131 (PSI5_RDM1_31_L)


#define PSI5_RDM1_3_H (*(volatile Ifx_PSI5_RDM_H*)0xF000571Cu)




#define PSI5_RDMH13 (PSI5_RDM1_3_H)


#define PSI5_RDM1_3_L (*(volatile Ifx_PSI5_RDM_L*)0xF0005718u)




#define PSI5_RDML13 (PSI5_RDM1_3_L)


#define PSI5_RDM1_4_H (*(volatile Ifx_PSI5_RDM_H*)0xF0005724u)




#define PSI5_RDMH14 (PSI5_RDM1_4_H)


#define PSI5_RDM1_4_L (*(volatile Ifx_PSI5_RDM_L*)0xF0005720u)




#define PSI5_RDML14 (PSI5_RDM1_4_L)


#define PSI5_RDM1_5_H (*(volatile Ifx_PSI5_RDM_H*)0xF000572Cu)




#define PSI5_RDMH15 (PSI5_RDM1_5_H)


#define PSI5_RDM1_5_L (*(volatile Ifx_PSI5_RDM_L*)0xF0005728u)




#define PSI5_RDML15 (PSI5_RDM1_5_L)


#define PSI5_RDM1_6_H (*(volatile Ifx_PSI5_RDM_H*)0xF0005734u)




#define PSI5_RDMH16 (PSI5_RDM1_6_H)


#define PSI5_RDM1_6_L (*(volatile Ifx_PSI5_RDM_L*)0xF0005730u)




#define PSI5_RDML16 (PSI5_RDM1_6_L)


#define PSI5_RDM1_7_H (*(volatile Ifx_PSI5_RDM_H*)0xF000573Cu)




#define PSI5_RDMH17 (PSI5_RDM1_7_H)


#define PSI5_RDM1_7_L (*(volatile Ifx_PSI5_RDM_L*)0xF0005738u)




#define PSI5_RDML17 (PSI5_RDM1_7_L)


#define PSI5_RDM1_8_H (*(volatile Ifx_PSI5_RDM_H*)0xF0005744u)




#define PSI5_RDMH18 (PSI5_RDM1_8_H)


#define PSI5_RDM1_8_L (*(volatile Ifx_PSI5_RDM_L*)0xF0005740u)




#define PSI5_RDML18 (PSI5_RDM1_8_L)


#define PSI5_RDM1_9_H (*(volatile Ifx_PSI5_RDM_H*)0xF000574Cu)




#define PSI5_RDMH19 (PSI5_RDM1_9_H)


#define PSI5_RDM1_9_L (*(volatile Ifx_PSI5_RDM_L*)0xF0005748u)




#define PSI5_RDML19 (PSI5_RDM1_9_L)


#define PSI5_RDM2_0_H (*(volatile Ifx_PSI5_RDM_H*)0xF0005804u)




#define PSI5_RDMH20 (PSI5_RDM2_0_H)


#define PSI5_RDM2_0_L (*(volatile Ifx_PSI5_RDM_L*)0xF0005800u)




#define PSI5_RDML20 (PSI5_RDM2_0_L)


#define PSI5_RDM2_10_H (*(volatile Ifx_PSI5_RDM_H*)0xF0005854u)




#define PSI5_RDMH210 (PSI5_RDM2_10_H)


#define PSI5_RDM2_10_L (*(volatile Ifx_PSI5_RDM_L*)0xF0005850u)




#define PSI5_RDML210 (PSI5_RDM2_10_L)


#define PSI5_RDM2_11_H (*(volatile Ifx_PSI5_RDM_H*)0xF000585Cu)




#define PSI5_RDMH211 (PSI5_RDM2_11_H)


#define PSI5_RDM2_11_L (*(volatile Ifx_PSI5_RDM_L*)0xF0005858u)




#define PSI5_RDML211 (PSI5_RDM2_11_L)


#define PSI5_RDM2_12_H (*(volatile Ifx_PSI5_RDM_H*)0xF0005864u)




#define PSI5_RDMH212 (PSI5_RDM2_12_H)


#define PSI5_RDM2_12_L (*(volatile Ifx_PSI5_RDM_L*)0xF0005860u)




#define PSI5_RDML212 (PSI5_RDM2_12_L)


#define PSI5_RDM2_13_H (*(volatile Ifx_PSI5_RDM_H*)0xF000586Cu)




#define PSI5_RDMH213 (PSI5_RDM2_13_H)


#define PSI5_RDM2_13_L (*(volatile Ifx_PSI5_RDM_L*)0xF0005868u)




#define PSI5_RDML213 (PSI5_RDM2_13_L)


#define PSI5_RDM2_14_H (*(volatile Ifx_PSI5_RDM_H*)0xF0005874u)




#define PSI5_RDMH214 (PSI5_RDM2_14_H)


#define PSI5_RDM2_14_L (*(volatile Ifx_PSI5_RDM_L*)0xF0005870u)




#define PSI5_RDML214 (PSI5_RDM2_14_L)


#define PSI5_RDM2_15_H (*(volatile Ifx_PSI5_RDM_H*)0xF000587Cu)




#define PSI5_RDMH215 (PSI5_RDM2_15_H)


#define PSI5_RDM2_15_L (*(volatile Ifx_PSI5_RDM_L*)0xF0005878u)




#define PSI5_RDML215 (PSI5_RDM2_15_L)


#define PSI5_RDM2_16_H (*(volatile Ifx_PSI5_RDM_H*)0xF0005884u)




#define PSI5_RDMH216 (PSI5_RDM2_16_H)


#define PSI5_RDM2_16_L (*(volatile Ifx_PSI5_RDM_L*)0xF0005880u)




#define PSI5_RDML216 (PSI5_RDM2_16_L)


#define PSI5_RDM2_17_H (*(volatile Ifx_PSI5_RDM_H*)0xF000588Cu)




#define PSI5_RDMH217 (PSI5_RDM2_17_H)


#define PSI5_RDM2_17_L (*(volatile Ifx_PSI5_RDM_L*)0xF0005888u)




#define PSI5_RDML217 (PSI5_RDM2_17_L)


#define PSI5_RDM2_18_H (*(volatile Ifx_PSI5_RDM_H*)0xF0005894u)




#define PSI5_RDMH218 (PSI5_RDM2_18_H)


#define PSI5_RDM2_18_L (*(volatile Ifx_PSI5_RDM_L*)0xF0005890u)




#define PSI5_RDML218 (PSI5_RDM2_18_L)


#define PSI5_RDM2_19_H (*(volatile Ifx_PSI5_RDM_H*)0xF000589Cu)




#define PSI5_RDMH219 (PSI5_RDM2_19_H)


#define PSI5_RDM2_19_L (*(volatile Ifx_PSI5_RDM_L*)0xF0005898u)




#define PSI5_RDML219 (PSI5_RDM2_19_L)


#define PSI5_RDM2_1_H (*(volatile Ifx_PSI5_RDM_H*)0xF000580Cu)




#define PSI5_RDMH21 (PSI5_RDM2_1_H)


#define PSI5_RDM2_1_L (*(volatile Ifx_PSI5_RDM_L*)0xF0005808u)




#define PSI5_RDML21 (PSI5_RDM2_1_L)


#define PSI5_RDM2_20_H (*(volatile Ifx_PSI5_RDM_H*)0xF00058A4u)




#define PSI5_RDMH220 (PSI5_RDM2_20_H)


#define PSI5_RDM2_20_L (*(volatile Ifx_PSI5_RDM_L*)0xF00058A0u)




#define PSI5_RDML220 (PSI5_RDM2_20_L)


#define PSI5_RDM2_21_H (*(volatile Ifx_PSI5_RDM_H*)0xF00058ACu)




#define PSI5_RDMH221 (PSI5_RDM2_21_H)


#define PSI5_RDM2_21_L (*(volatile Ifx_PSI5_RDM_L*)0xF00058A8u)




#define PSI5_RDML221 (PSI5_RDM2_21_L)


#define PSI5_RDM2_22_H (*(volatile Ifx_PSI5_RDM_H*)0xF00058B4u)




#define PSI5_RDMH222 (PSI5_RDM2_22_H)


#define PSI5_RDM2_22_L (*(volatile Ifx_PSI5_RDM_L*)0xF00058B0u)




#define PSI5_RDML222 (PSI5_RDM2_22_L)


#define PSI5_RDM2_23_H (*(volatile Ifx_PSI5_RDM_H*)0xF00058BCu)




#define PSI5_RDMH223 (PSI5_RDM2_23_H)


#define PSI5_RDM2_23_L (*(volatile Ifx_PSI5_RDM_L*)0xF00058B8u)




#define PSI5_RDML223 (PSI5_RDM2_23_L)


#define PSI5_RDM2_24_H (*(volatile Ifx_PSI5_RDM_H*)0xF00058C4u)




#define PSI5_RDMH224 (PSI5_RDM2_24_H)


#define PSI5_RDM2_24_L (*(volatile Ifx_PSI5_RDM_L*)0xF00058C0u)




#define PSI5_RDML224 (PSI5_RDM2_24_L)


#define PSI5_RDM2_25_H (*(volatile Ifx_PSI5_RDM_H*)0xF00058CCu)




#define PSI5_RDMH225 (PSI5_RDM2_25_H)


#define PSI5_RDM2_25_L (*(volatile Ifx_PSI5_RDM_L*)0xF00058C8u)




#define PSI5_RDML225 (PSI5_RDM2_25_L)


#define PSI5_RDM2_26_H (*(volatile Ifx_PSI5_RDM_H*)0xF00058D4u)




#define PSI5_RDMH226 (PSI5_RDM2_26_H)


#define PSI5_RDM2_26_L (*(volatile Ifx_PSI5_RDM_L*)0xF00058D0u)




#define PSI5_RDML226 (PSI5_RDM2_26_L)


#define PSI5_RDM2_27_H (*(volatile Ifx_PSI5_RDM_H*)0xF00058DCu)




#define PSI5_RDMH227 (PSI5_RDM2_27_H)


#define PSI5_RDM2_27_L (*(volatile Ifx_PSI5_RDM_L*)0xF00058D8u)




#define PSI5_RDML227 (PSI5_RDM2_27_L)


#define PSI5_RDM2_28_H (*(volatile Ifx_PSI5_RDM_H*)0xF00058E4u)




#define PSI5_RDMH228 (PSI5_RDM2_28_H)


#define PSI5_RDM2_28_L (*(volatile Ifx_PSI5_RDM_L*)0xF00058E0u)




#define PSI5_RDML228 (PSI5_RDM2_28_L)


#define PSI5_RDM2_29_H (*(volatile Ifx_PSI5_RDM_H*)0xF00058ECu)




#define PSI5_RDMH229 (PSI5_RDM2_29_H)


#define PSI5_RDM2_29_L (*(volatile Ifx_PSI5_RDM_L*)0xF00058E8u)




#define PSI5_RDML229 (PSI5_RDM2_29_L)


#define PSI5_RDM2_2_H (*(volatile Ifx_PSI5_RDM_H*)0xF0005814u)




#define PSI5_RDMH22 (PSI5_RDM2_2_H)


#define PSI5_RDM2_2_L (*(volatile Ifx_PSI5_RDM_L*)0xF0005810u)




#define PSI5_RDML22 (PSI5_RDM2_2_L)


#define PSI5_RDM2_30_H (*(volatile Ifx_PSI5_RDM_H*)0xF00058F4u)




#define PSI5_RDMH230 (PSI5_RDM2_30_H)


#define PSI5_RDM2_30_L (*(volatile Ifx_PSI5_RDM_L*)0xF00058F0u)




#define PSI5_RDML230 (PSI5_RDM2_30_L)


#define PSI5_RDM2_31_H (*(volatile Ifx_PSI5_RDM_H*)0xF00058FCu)




#define PSI5_RDMH231 (PSI5_RDM2_31_H)


#define PSI5_RDM2_31_L (*(volatile Ifx_PSI5_RDM_L*)0xF00058F8u)




#define PSI5_RDML231 (PSI5_RDM2_31_L)


#define PSI5_RDM2_3_H (*(volatile Ifx_PSI5_RDM_H*)0xF000581Cu)




#define PSI5_RDMH23 (PSI5_RDM2_3_H)


#define PSI5_RDM2_3_L (*(volatile Ifx_PSI5_RDM_L*)0xF0005818u)




#define PSI5_RDML23 (PSI5_RDM2_3_L)


#define PSI5_RDM2_4_H (*(volatile Ifx_PSI5_RDM_H*)0xF0005824u)




#define PSI5_RDMH24 (PSI5_RDM2_4_H)


#define PSI5_RDM2_4_L (*(volatile Ifx_PSI5_RDM_L*)0xF0005820u)




#define PSI5_RDML24 (PSI5_RDM2_4_L)


#define PSI5_RDM2_5_H (*(volatile Ifx_PSI5_RDM_H*)0xF000582Cu)




#define PSI5_RDMH25 (PSI5_RDM2_5_H)


#define PSI5_RDM2_5_L (*(volatile Ifx_PSI5_RDM_L*)0xF0005828u)




#define PSI5_RDML25 (PSI5_RDM2_5_L)


#define PSI5_RDM2_6_H (*(volatile Ifx_PSI5_RDM_H*)0xF0005834u)




#define PSI5_RDMH26 (PSI5_RDM2_6_H)


#define PSI5_RDM2_6_L (*(volatile Ifx_PSI5_RDM_L*)0xF0005830u)




#define PSI5_RDML26 (PSI5_RDM2_6_L)


#define PSI5_RDM2_7_H (*(volatile Ifx_PSI5_RDM_H*)0xF000583Cu)




#define PSI5_RDMH27 (PSI5_RDM2_7_H)


#define PSI5_RDM2_7_L (*(volatile Ifx_PSI5_RDM_L*)0xF0005838u)




#define PSI5_RDML27 (PSI5_RDM2_7_L)


#define PSI5_RDM2_8_H (*(volatile Ifx_PSI5_RDM_H*)0xF0005844u)




#define PSI5_RDMH28 (PSI5_RDM2_8_H)


#define PSI5_RDM2_8_L (*(volatile Ifx_PSI5_RDM_L*)0xF0005840u)




#define PSI5_RDML28 (PSI5_RDM2_8_L)


#define PSI5_RDM2_9_H (*(volatile Ifx_PSI5_RDM_H*)0xF000584Cu)




#define PSI5_RDMH29 (PSI5_RDM2_9_H)


#define PSI5_RDM2_9_L (*(volatile Ifx_PSI5_RDM_L*)0xF0005848u)




#define PSI5_RDML29 (PSI5_RDM2_9_L)


#define PSI5_RFC0 (*(volatile Ifx_PSI5_RFC*)0xF00053E4u)


#define PSI5_RFC1 (*(volatile Ifx_PSI5_RFC*)0xF00053E8u)


#define PSI5_RFC2 (*(volatile Ifx_PSI5_RFC*)0xF00053ECu)


#define PSI5_RMICLR0 (*(volatile Ifx_PSI5_RMICLR*)0xF0005560u)


#define PSI5_RMICLR1 (*(volatile Ifx_PSI5_RMICLR*)0xF0005564u)


#define PSI5_RMICLR2 (*(volatile Ifx_PSI5_RMICLR*)0xF0005568u)


#define PSI5_RMIOV0 (*(volatile Ifx_PSI5_RMIOV*)0xF0005420u)


#define PSI5_RMIOV1 (*(volatile Ifx_PSI5_RMIOV*)0xF0005424u)


#define PSI5_RMIOV2 (*(volatile Ifx_PSI5_RMIOV*)0xF0005428u)


#define PSI5_RMISET0 (*(volatile Ifx_PSI5_RMISET*)0xF00054C0u)


#define PSI5_RMISET1 (*(volatile Ifx_PSI5_RMISET*)0xF00054C4u)


#define PSI5_RMISET2 (*(volatile Ifx_PSI5_RMISET*)0xF00054C8u)


#define PSI5_RSICLR0 (*(volatile Ifx_PSI5_RSICLR*)0xF000554Cu)


#define PSI5_RSICLR1 (*(volatile Ifx_PSI5_RSICLR*)0xF0005550u)


#define PSI5_RSICLR2 (*(volatile Ifx_PSI5_RSICLR*)0xF0005554u)


#define PSI5_RSIOV0 (*(volatile Ifx_PSI5_RSIOV*)0xF000540Cu)


#define PSI5_RSIOV1 (*(volatile Ifx_PSI5_RSIOV*)0xF0005410u)


#define PSI5_RSIOV2 (*(volatile Ifx_PSI5_RSIOV*)0xF0005414u)


#define PSI5_RSISET0 (*(volatile Ifx_PSI5_RSISET*)0xF00054ACu)


#define PSI5_RSISET1 (*(volatile Ifx_PSI5_RSISET*)0xF00054B0u)


#define PSI5_RSISET2 (*(volatile Ifx_PSI5_RSISET*)0xF00054B4u)


#define PSI5_TEICLR0 (*(volatile Ifx_PSI5_TEICLR*)0xF0005588u)


#define PSI5_TEICLR1 (*(volatile Ifx_PSI5_TEICLR*)0xF000558Cu)


#define PSI5_TEICLR2 (*(volatile Ifx_PSI5_TEICLR*)0xF0005590u)


#define PSI5_TEIOV0 (*(volatile Ifx_PSI5_TEIOV*)0xF0005448u)


#define PSI5_TEIOV1 (*(volatile Ifx_PSI5_TEIOV*)0xF000544Cu)


#define PSI5_TEIOV2 (*(volatile Ifx_PSI5_TEIOV*)0xF0005450u)


#define PSI5_TEISET0 (*(volatile Ifx_PSI5_TEISET*)0xF00054E8u)


#define PSI5_TEISET1 (*(volatile Ifx_PSI5_TEISET*)0xF00054ECu)


#define PSI5_TEISET2 (*(volatile Ifx_PSI5_TEISET*)0xF00054F0u)


#define PSI5_TSRA (*(volatile Ifx_PSI5_TSR*)0xF000501Cu)


#define PSI5_TSRB (*(volatile Ifx_PSI5_TSR*)0xF0005020u)


#define PSI5_TSRC (*(volatile Ifx_PSI5_TSR*)0xF0005024u)
# 57 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_reg.h" 2 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxPsi5s_reg.h" 1 3
# 34 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxPsi5s_reg.h" 3
#define IFXPSI5S_REG_H 1

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxPsi5s_regdef.h" 1 3
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxPsi5s_regdef.h" 3
#define IFXPSI5S_REGDEF_H 1







typedef struct _Ifx_PSI5S_ACCEN0_Bits
{
    unsigned int EN0:1;
    unsigned int EN1:1;
    unsigned int EN2:1;
    unsigned int EN3:1;
    unsigned int EN4:1;
    unsigned int EN5:1;
    unsigned int EN6:1;
    unsigned int EN7:1;
    unsigned int EN8:1;
    unsigned int EN9:1;
    unsigned int EN10:1;
    unsigned int EN11:1;
    unsigned int EN12:1;
    unsigned int EN13:1;
    unsigned int EN14:1;
    unsigned int EN15:1;
    unsigned int EN16:1;
    unsigned int EN17:1;
    unsigned int EN18:1;
    unsigned int EN19:1;
    unsigned int EN20:1;
    unsigned int EN21:1;
    unsigned int EN22:1;
    unsigned int EN23:1;
    unsigned int EN24:1;
    unsigned int EN25:1;
    unsigned int EN26:1;
    unsigned int EN27:1;
    unsigned int EN28:1;
    unsigned int EN29:1;
    unsigned int EN30:1;
    unsigned int EN31:1;
} Ifx_PSI5S_ACCEN0_Bits;


typedef struct _Ifx_PSI5S_ACCEN1_Bits
{
    unsigned int reserved_0:32;
} Ifx_PSI5S_ACCEN1_Bits;


typedef struct _Ifx_PSI5S_BAR_Bits
{
    unsigned int reserved_0:2;
    unsigned int BA:30;
} Ifx_PSI5S_BAR_Bits;


typedef struct _Ifx_PSI5S_BG_Bits
{
    unsigned int BR_VALUE:13;
    unsigned int reserved_13:19;
} Ifx_PSI5S_BG_Bits;


typedef struct _Ifx_PSI5S_CDW_Bits
{
    unsigned int SD0:1;
    unsigned int SD1:1;
    unsigned int SD2:1;
    unsigned int SD3:1;
    unsigned int SD4:1;
    unsigned int SD5:1;
    unsigned int SD6:1;
    unsigned int SD7:1;
    unsigned int TSI:1;
    unsigned int reserved_9:23;
} Ifx_PSI5S_CDW_Bits;


typedef struct _Ifx_PSI5S_CLC_Bits
{
    unsigned int DISR:1;
    unsigned int DISS:1;
    unsigned int reserved_2:1;
    unsigned int EDIS:1;
    unsigned int reserved_4:28;
} Ifx_PSI5S_CLC_Bits;


typedef struct _Ifx_PSI5S_CON_Bits
{
    unsigned int M:3;
    unsigned int STP:1;
    unsigned int REN:1;
    unsigned int PEN:1;
    unsigned int FEN:1;
    unsigned int OEN:1;
    unsigned int PE:1;
    unsigned int FE:1;
    unsigned int OE:1;
    unsigned int FDE:1;
    unsigned int ODD:1;
    unsigned int BRS:1;
    unsigned int LB:1;
    unsigned int R:1;
    unsigned int MTX:3;
    unsigned int reserved_19:9;
    unsigned int ODDTX:1;
    unsigned int reserved_29:3;
} Ifx_PSI5S_CON_Bits;


typedef struct _Ifx_PSI5S_CTV_Bits
{
    unsigned int CTV:16;
    unsigned int CTC:16;
} Ifx_PSI5S_CTV_Bits;


typedef struct _Ifx_PSI5S_FCNT_Bits
{
    unsigned int FC0:3;
    unsigned int FC1:3;
    unsigned int FC2:3;
    unsigned int FC3:3;
    unsigned int FC4:3;
    unsigned int FC5:3;
    unsigned int FC6:3;
    unsigned int FC7:3;
    unsigned int NFCLR0:1;
    unsigned int NFCLR1:1;
    unsigned int NFCLR2:1;
    unsigned int NFCLR3:1;
    unsigned int NFCLR4:1;
    unsigned int NFCLR5:1;
    unsigned int NFCLR6:1;
    unsigned int NFCLR7:1;
} Ifx_PSI5S_FCNT_Bits;


typedef struct _Ifx_PSI5S_FDO_Bits
{
    unsigned int STEP:11;
    unsigned int reserved_11:3;
    unsigned int DM:2;
    unsigned int reserved_16:16;
} Ifx_PSI5S_FDO_Bits;


typedef struct _Ifx_PSI5S_FDR_Bits
{
    unsigned int STEP:10;
    unsigned int reserved_10:4;
    unsigned int DM:2;
    unsigned int RESULT:10;
    unsigned int reserved_26:6;
} Ifx_PSI5S_FDR_Bits;


typedef struct _Ifx_PSI5S_FDRT_Bits
{
    unsigned int STEP:10;
    unsigned int reserved_10:4;
    unsigned int DM:2;
    unsigned int RESULT:10;
    unsigned int ECS:3;
    unsigned int ECEA:1;
    unsigned int ECEB:1;
    unsigned int reserved_31:1;
} Ifx_PSI5S_FDRT_Bits;


typedef struct _Ifx_PSI5S_FDV_Bits
{
    unsigned int FD_VALUE:11;
    unsigned int reserved_11:21;
} Ifx_PSI5S_FDV_Bits;


typedef struct _Ifx_PSI5S_GCR_Bits
{
    unsigned int CRCI:1;
    unsigned int XCRCI:1;
    unsigned int TEI:1;
    unsigned int PE:1;
    unsigned int FE:1;
    unsigned int OE:1;
    unsigned int RBI:1;
    unsigned int HDI:1;
    unsigned int ETC0:1;
    unsigned int ETC1:1;
    unsigned int ETC2:1;
    unsigned int ETC3:1;
    unsigned int ETC4:1;
    unsigned int ETC5:1;
    unsigned int ETC6:1;
    unsigned int ETC7:1;
    unsigned int CEN0:1;
    unsigned int CEN1:1;
    unsigned int CEN2:1;
    unsigned int CEN3:1;
    unsigned int CEN4:1;
    unsigned int CEN5:1;
    unsigned int CEN6:1;
    unsigned int CEN7:1;
    unsigned int IDT:4;
    unsigned int reserved_28:3;
    unsigned int ASC:1;
} Ifx_PSI5S_GCR_Bits;


typedef struct _Ifx_PSI5S_ID_Bits
{
    unsigned int MODREV:8;
    unsigned int MODTYPE:8;
    unsigned int MODNUMBER:16;
} Ifx_PSI5S_ID_Bits;


typedef struct _Ifx_PSI5S_INP_Bits
{
    unsigned int RSI:3;
    unsigned int RDI:3;
    unsigned int RBI:3;
    unsigned int TEI:3;
    unsigned int CHCI:3;
    unsigned int CRCI:3;
    unsigned int TPI:3;
    unsigned int TPOI:3;
    unsigned int HDI:3;
    unsigned int reserved_27:5;
} Ifx_PSI5S_INP_Bits;


typedef struct _Ifx_PSI5S_INPG_Bits
{
    unsigned int TIR:3;
    unsigned int RIR:3;
    unsigned int EIR:3;
    unsigned int TBIR:3;
    unsigned int XCRCI:3;
    unsigned int FOI:3;
    unsigned int reserved_18:14;
} Ifx_PSI5S_INPG_Bits;


typedef struct _Ifx_PSI5S_INTCLR_Bits
{
    unsigned int RSI:1;
    unsigned int RDI:1;
    unsigned int RBI:1;
    unsigned int TEI:1;
    unsigned int CHCI:1;
    unsigned int CRCI:1;
    unsigned int TPI:1;
    unsigned int TPOI:1;
    unsigned int HDI:1;
    unsigned int reserved_9:23;
} Ifx_PSI5S_INTCLR_Bits;


typedef struct _Ifx_PSI5S_INTCLRG_Bits
{
    unsigned int TIR:1;
    unsigned int RIR:1;
    unsigned int EIR:1;
    unsigned int TBIR:1;
    unsigned int XCRCI:1;
    unsigned int FOI:1;
    unsigned int reserved_6:26;
} Ifx_PSI5S_INTCLRG_Bits;


typedef struct _Ifx_PSI5S_INTEN_Bits
{
    unsigned int RSI:1;
    unsigned int RDI:1;
    unsigned int RBI:1;
    unsigned int TEI:1;
    unsigned int CHCI:1;
    unsigned int CRCI:1;
    unsigned int TPI:1;
    unsigned int TPOI:1;
    unsigned int HDI:1;
    unsigned int reserved_9:23;
} Ifx_PSI5S_INTEN_Bits;


typedef struct _Ifx_PSI5S_INTENG_Bits
{
    unsigned int TIR:1;
    unsigned int RIR:1;
    unsigned int EIR:1;
    unsigned int TBIR:1;
    unsigned int XCRCI:1;
    unsigned int FOI:1;
    unsigned int reserved_6:26;
} Ifx_PSI5S_INTENG_Bits;


typedef struct _Ifx_PSI5S_INTOV_Bits
{
    unsigned int RSI:1;
    unsigned int RDI:1;
    unsigned int RBI:1;
    unsigned int TEI:1;
    unsigned int CHCI:1;
    unsigned int CRCI:1;
    unsigned int TPI:1;
    unsigned int TPOI:1;
    unsigned int HDI:1;
    unsigned int TIR:1;
    unsigned int RIR:1;
    unsigned int EIR:1;
    unsigned int TBIR:1;
    unsigned int XCRCI:1;
    unsigned int FOI:1;
    unsigned int reserved_15:17;
} Ifx_PSI5S_INTOV_Bits;


typedef struct _Ifx_PSI5S_INTSET_Bits
{
    unsigned int RSI:1;
    unsigned int RDI:1;
    unsigned int RBI:1;
    unsigned int TEI:1;
    unsigned int CHCI:1;
    unsigned int CRCI:1;
    unsigned int TPI:1;
    unsigned int TPOI:1;
    unsigned int HDI:1;
    unsigned int reserved_9:23;
} Ifx_PSI5S_INTSET_Bits;


typedef struct _Ifx_PSI5S_INTSETG_Bits
{
    unsigned int TIR:1;
    unsigned int RIR:1;
    unsigned int EIR:1;
    unsigned int TBIR:1;
    unsigned int XCRCI:1;
    unsigned int FOI:1;
    unsigned int reserved_6:26;
} Ifx_PSI5S_INTSETG_Bits;


typedef struct _Ifx_PSI5S_INTSTAT_Bits
{
    unsigned int RSI:1;
    unsigned int RDI:1;
    unsigned int RBI:1;
    unsigned int TEI:1;
    unsigned int CHCI:1;
    unsigned int CRCI:1;
    unsigned int TPI:1;
    unsigned int TPOI:1;
    unsigned int HDI:1;
    unsigned int reserved_9:23;
} Ifx_PSI5S_INTSTAT_Bits;


typedef struct _Ifx_PSI5S_INTSTATG_Bits
{
    unsigned int TIR:1;
    unsigned int RIR:1;
    unsigned int EIR:1;
    unsigned int TBIR:1;
    unsigned int XCRCI:1;
    unsigned int FOI:1;
    unsigned int reserved_6:26;
} Ifx_PSI5S_INTSTATG_Bits;


typedef struct _Ifx_PSI5S_IOCR_Bits
{
    unsigned int ALTI:2;
    unsigned int reserved_2:30;
} Ifx_PSI5S_IOCR_Bits;


typedef struct _Ifx_PSI5S_KRST0_Bits
{
    unsigned int RST:1;
    unsigned int RSTSTAT:1;
    unsigned int reserved_2:30;
} Ifx_PSI5S_KRST0_Bits;


typedef struct _Ifx_PSI5S_KRST1_Bits
{
    unsigned int RST:1;
    unsigned int reserved_1:31;
} Ifx_PSI5S_KRST1_Bits;


typedef struct _Ifx_PSI5S_KRSTCLR_Bits
{
    unsigned int CLR:1;
    unsigned int reserved_1:31;
} Ifx_PSI5S_KRSTCLR_Bits;


typedef struct _Ifx_PSI5S_NFC_Bits
{
    unsigned int NF0:3;
    unsigned int NF1:3;
    unsigned int NF2:3;
    unsigned int NF3:3;
    unsigned int NF4:3;
    unsigned int NF5:3;
    unsigned int NF6:3;
    unsigned int NF7:3;
    unsigned int reserved_24:8;
} Ifx_PSI5S_NFC_Bits;


typedef struct _Ifx_PSI5S_OCS_Bits
{
    unsigned int reserved_0:24;
    unsigned int SUS:4;
    unsigned int SUS_P:1;
    unsigned int SUSSTA:1;
    unsigned int reserved_30:2;
} Ifx_PSI5S_OCS_Bits;


typedef struct _Ifx_PSI5S_PGC_Bits
{
    unsigned int TXCMD:5;
    unsigned int reserved_5:3;
    unsigned int ATXCMD:5;
    unsigned int reserved_13:2;
    unsigned int TBS:1;
    unsigned int ETB:3;
    unsigned int PTE:1;
    unsigned int ETS:3;
    unsigned int ETE:1;
    unsigned int reserved_24:8;
} Ifx_PSI5S_PGC_Bits;


typedef struct _Ifx_PSI5S_RBUF_Bits
{
    unsigned int RD_VALUE:9;
    unsigned int reserved_9:23;
} Ifx_PSI5S_RBUF_Bits;


typedef struct _Ifx_PSI5S_RCRA_Bits
{
    unsigned int CRC0:1;
    unsigned int CRC1:1;
    unsigned int CRC2:1;
    unsigned int CRC3:1;
    unsigned int CRC4:1;
    unsigned int CRC5:1;
    unsigned int TSEN:1;
    unsigned int TSP:1;
    unsigned int TSTS:1;
    unsigned int FIDS:1;
    unsigned int WDMS:1;
    unsigned int reserved_11:5;
    unsigned int UFC0:2;
    unsigned int UFC1:2;
    unsigned int UFC2:2;
    unsigned int UFC3:2;
    unsigned int UFC4:2;
    unsigned int UFC5:2;
    unsigned int reserved_28:4;
} Ifx_PSI5S_RCRA_Bits;


typedef struct _Ifx_PSI5S_RCRB_Bits
{
    unsigned int PDL0:5;
    unsigned int PDL1:5;
    unsigned int PDL2:5;
    unsigned int PDL3:5;
    unsigned int PDL4:5;
    unsigned int PDL5:5;
    unsigned int reserved_30:2;
} Ifx_PSI5S_RCRB_Bits;


typedef struct _Ifx_PSI5S_RDR_Bits
{
    unsigned int RD0:1;
    unsigned int RD1:1;
    unsigned int RD2:1;
    unsigned int RD3:1;
    unsigned int RD4:1;
    unsigned int RD5:1;
    unsigned int RD6:1;
    unsigned int RD7:1;
    unsigned int RD8:1;
    unsigned int RD9:1;
    unsigned int RD10:1;
    unsigned int RD11:1;
    unsigned int RD12:1;
    unsigned int RD13:1;
    unsigned int RD14:1;
    unsigned int RD15:1;
    unsigned int RD16:1;
    unsigned int RD17:1;
    unsigned int RD18:1;
    unsigned int RD19:1;
    unsigned int RD20:1;
    unsigned int RD21:1;
    unsigned int RD22:1;
    unsigned int RD23:1;
    unsigned int RD24:1;
    unsigned int RD25:1;
    unsigned int RD26:1;
    unsigned int RD27:1;
    unsigned int PFC:4;
} Ifx_PSI5S_RDR_Bits;


typedef struct _Ifx_PSI5S_RDS_Bits
{
    unsigned int XCRC0:1;
    unsigned int XCRC1:1;
    unsigned int XCRC2:1;
    unsigned int XCRC3:1;
    unsigned int XCRC4:1;
    unsigned int XCRC5:1;
    unsigned int XCRCI:1;
    unsigned int CRC0:1;
    unsigned int CRC1:1;
    unsigned int CRC2:1;
    unsigned int CRCI:1;
    unsigned int ERR0:1;
    unsigned int ERR1:1;
    unsigned int HDI:1;
    unsigned int PE:1;
    unsigned int FE:1;
    unsigned int OE:1;
    unsigned int TEI:1;
    unsigned int RBI:1;
    unsigned int FID:3;
    unsigned int CID:3;
    unsigned int AFC:3;
    unsigned int PFC:4;
} Ifx_PSI5S_RDS_Bits;


typedef struct _Ifx_PSI5S_SCR_Bits
{
    unsigned int PLL:5;
    unsigned int reserved_5:1;
    unsigned int EPS:2;
    unsigned int BSC:1;
    unsigned int reserved_9:5;
    unsigned int FLUS:1;
    unsigned int reserved_15:7;
    unsigned int CRC:1;
    unsigned int STA:1;
    unsigned int reserved_24:2;
    unsigned int TPF:1;
    unsigned int reserved_27:5;
} Ifx_PSI5S_SCR_Bits;


typedef struct _Ifx_PSI5S_SDR_Bits
{
    unsigned int SD0:1;
    unsigned int SD1:1;
    unsigned int SD2:1;
    unsigned int SD3:1;
    unsigned int SD4:1;
    unsigned int SD5:1;
    unsigned int SD6:1;
    unsigned int SD7:1;
    unsigned int SD8:1;
    unsigned int SD9:1;
    unsigned int SD10:1;
    unsigned int SD11:1;
    unsigned int SD12:1;
    unsigned int SD13:1;
    unsigned int SD14:1;
    unsigned int SD15:1;
    unsigned int SD16:1;
    unsigned int SD17:1;
    unsigned int SD18:1;
    unsigned int SD19:1;
    unsigned int SD20:1;
    unsigned int SD21:1;
    unsigned int SD22:1;
    unsigned int SD23:1;
    unsigned int reserved_24:8;
} Ifx_PSI5S_SDR_Bits;


typedef struct _Ifx_PSI5S_TAR_Bits
{
    unsigned int reserved_0:2;
    unsigned int TA:30;
} Ifx_PSI5S_TAR_Bits;


typedef struct _Ifx_PSI5S_TBUF_Bits
{
    unsigned int TD_VALUE:9;
    unsigned int reserved_9:23;
} Ifx_PSI5S_TBUF_Bits;


typedef struct _Ifx_PSI5S_TSCNTA_Bits
{
    unsigned int CTS:24;
    unsigned int ETB:3;
    unsigned int TBS:1;
    unsigned int TBEA:1;
    unsigned int TBEB:1;
    unsigned int CLRA:1;
    unsigned int CLRB:1;
} Ifx_PSI5S_TSCNTA_Bits;


typedef struct _Ifx_PSI5S_TSCNTB_Bits
{
    unsigned int CTS:24;
    unsigned int ETB:3;
    unsigned int TBS:1;
    unsigned int reserved_28:4;
} Ifx_PSI5S_TSCNTB_Bits;


typedef struct _Ifx_PSI5S_TSCR_Bits
{
    unsigned int TS:24;
    unsigned int reserved_24:8;
} Ifx_PSI5S_TSCR_Bits;


typedef struct _Ifx_PSI5S_TSM_Bits
{
    unsigned int TS:24;
    unsigned int reserved_24:4;
    unsigned int PFC:4;
} Ifx_PSI5S_TSM_Bits;


typedef struct _Ifx_PSI5S_WDT_Bits
{
    unsigned int WDL:24;
    unsigned int reserved_24:8;
} Ifx_PSI5S_WDT_Bits;


typedef struct _Ifx_PSI5S_WHBCON_Bits
{
    unsigned int reserved_0:4;
    unsigned int CLRREN:1;
    unsigned int SETREN:1;
    unsigned int reserved_6:2;
    unsigned int CLRPE:1;
    unsigned int CLRFE:1;
    unsigned int CLROE:1;
    unsigned int SETPE:1;
    unsigned int SETFE:1;
    unsigned int SETOE:1;
    unsigned int reserved_14:18;
} Ifx_PSI5S_WHBCON_Bits;







typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5S_ACCEN0_Bits B;
} Ifx_PSI5S_ACCEN0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5S_ACCEN1_Bits B;
} Ifx_PSI5S_ACCEN1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5S_BAR_Bits B;
} Ifx_PSI5S_BAR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5S_BG_Bits B;
} Ifx_PSI5S_BG;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5S_CDW_Bits B;
} Ifx_PSI5S_CDW;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5S_CLC_Bits B;
} Ifx_PSI5S_CLC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5S_CON_Bits B;
} Ifx_PSI5S_CON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5S_CTV_Bits B;
} Ifx_PSI5S_CTV;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5S_FCNT_Bits B;
} Ifx_PSI5S_FCNT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5S_FDO_Bits B;
} Ifx_PSI5S_FDO;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5S_FDR_Bits B;
} Ifx_PSI5S_FDR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5S_FDRT_Bits B;
} Ifx_PSI5S_FDRT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5S_FDV_Bits B;
} Ifx_PSI5S_FDV;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5S_GCR_Bits B;
} Ifx_PSI5S_GCR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5S_ID_Bits B;
} Ifx_PSI5S_ID;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5S_INP_Bits B;
} Ifx_PSI5S_INP;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5S_INPG_Bits B;
} Ifx_PSI5S_INPG;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5S_INTCLR_Bits B;
} Ifx_PSI5S_INTCLR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5S_INTCLRG_Bits B;
} Ifx_PSI5S_INTCLRG;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5S_INTEN_Bits B;
} Ifx_PSI5S_INTEN;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5S_INTENG_Bits B;
} Ifx_PSI5S_INTENG;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5S_INTOV_Bits B;
} Ifx_PSI5S_INTOV;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5S_INTSET_Bits B;
} Ifx_PSI5S_INTSET;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5S_INTSETG_Bits B;
} Ifx_PSI5S_INTSETG;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5S_INTSTAT_Bits B;
} Ifx_PSI5S_INTSTAT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5S_INTSTATG_Bits B;
} Ifx_PSI5S_INTSTATG;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5S_IOCR_Bits B;
} Ifx_PSI5S_IOCR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5S_KRST0_Bits B;
} Ifx_PSI5S_KRST0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5S_KRST1_Bits B;
} Ifx_PSI5S_KRST1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5S_KRSTCLR_Bits B;
} Ifx_PSI5S_KRSTCLR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5S_NFC_Bits B;
} Ifx_PSI5S_NFC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5S_OCS_Bits B;
} Ifx_PSI5S_OCS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5S_PGC_Bits B;
} Ifx_PSI5S_PGC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5S_RBUF_Bits B;
} Ifx_PSI5S_RBUF;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5S_RCRA_Bits B;
} Ifx_PSI5S_RCRA;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5S_RCRB_Bits B;
} Ifx_PSI5S_RCRB;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5S_RDR_Bits B;
} Ifx_PSI5S_RDR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5S_RDS_Bits B;
} Ifx_PSI5S_RDS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5S_SCR_Bits B;
} Ifx_PSI5S_SCR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5S_SDR_Bits B;
} Ifx_PSI5S_SDR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5S_TAR_Bits B;
} Ifx_PSI5S_TAR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5S_TBUF_Bits B;
} Ifx_PSI5S_TBUF;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5S_TSCNTA_Bits B;
} Ifx_PSI5S_TSCNTA;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5S_TSCNTB_Bits B;
} Ifx_PSI5S_TSCNTB;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5S_TSCR_Bits B;
} Ifx_PSI5S_TSCR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5S_TSM_Bits B;
} Ifx_PSI5S_TSM;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5S_WDT_Bits B;
} Ifx_PSI5S_WDT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_PSI5S_WHBCON_Bits B;
} Ifx_PSI5S_WHBCON;
# 1103 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxPsi5s_regdef.h" 3
typedef volatile struct _Ifx_PSI5S
{
    Ifx_PSI5S_CLC CLC;
    unsigned char reserved_4[4];
    Ifx_PSI5S_ID ID;
    Ifx_PSI5S_FDR FDR;
    Ifx_PSI5S_FDRT FDRT;
    Ifx_PSI5S_TSCNTA TSCNTA;
    Ifx_PSI5S_TSCNTB TSCNTB;
    Ifx_PSI5S_GCR GCR;
    Ifx_PSI5S_NFC NFC;
    Ifx_PSI5S_FCNT FCNT;
    Ifx_PSI5S_IOCR IOCR;
    unsigned char reserved_2C[4];
    Ifx_PSI5S_RCRA RCRA[8];
    Ifx_PSI5S_RCRB RCRB[8];
    Ifx_PSI5S_WDT WDT[8];
    Ifx_PSI5S_TSCR TSCR[8];
    Ifx_PSI5S_RDS RDS;
    Ifx_PSI5S_RDR RDR;
    Ifx_PSI5S_TSM TSM;
    unsigned char reserved_BC[20];
    Ifx_PSI5S_TAR TAR;
    Ifx_PSI5S_BAR BAR;
    unsigned char reserved_D8[24];
    Ifx_PSI5S_PGC PGC[8];
    Ifx_PSI5S_CTV CTV[8];
    Ifx_PSI5S_SCR SCR[8];
    Ifx_PSI5S_SDR SDR[8];
    Ifx_PSI5S_CDW CDW;
    unsigned char reserved_174[156];
    Ifx_PSI5S_CON CON;
    Ifx_PSI5S_BG BG;
    Ifx_PSI5S_FDV FDV;
    Ifx_PSI5S_FDO FDO;
    Ifx_PSI5S_TBUF TBUF;
    Ifx_PSI5S_RBUF RBUF;
    unsigned char reserved_228[40];
    Ifx_PSI5S_WHBCON WHBCON;
    unsigned char reserved_254[12];
    Ifx_PSI5S_INTSTAT INTSTAT[8];
    Ifx_PSI5S_INTSET INTSET[8];
    Ifx_PSI5S_INTCLR INTCLR[8];
    Ifx_PSI5S_INTEN INTEN[8];
    Ifx_PSI5S_INP INP[8];
    Ifx_PSI5S_INTOV INTOV;
    Ifx_PSI5S_INTSTATG INTSTATG;
    Ifx_PSI5S_INTSETG INTSETG;
    Ifx_PSI5S_INTCLRG INTCLRG;
    Ifx_PSI5S_INTENG INTENG;
    Ifx_PSI5S_INPG INPG;
    unsigned char reserved_318[180];
    Ifx_PSI5S_OCS OCS;
    Ifx_PSI5S_ACCEN0 ACCEN0;
    Ifx_PSI5S_ACCEN1 ACCEN1;
    Ifx_PSI5S_KRST0 KRST0;
    Ifx_PSI5S_KRST1 KRST1;
    Ifx_PSI5S_KRSTCLR KRSTCLR;
    unsigned char reserved_3E4[3100];
} Ifx_PSI5S;
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxPsi5s_reg.h" 2 3





#define MODULE_PSI5S (*(Ifx_PSI5S*)0xF0007000u)







#define PSI5S_ACCEN0 (*(volatile Ifx_PSI5S_ACCEN0*)0xF00073D0u)


#define PSI5S_ACCEN1 (*(volatile Ifx_PSI5S_ACCEN1*)0xF00073D4u)


#define PSI5S_BAR (*(volatile Ifx_PSI5S_BAR*)0xF00070D4u)


#define PSI5S_BG (*(volatile Ifx_PSI5S_BG*)0xF0007214u)


#define PSI5S_CDW (*(volatile Ifx_PSI5S_CDW*)0xF0007170u)


#define PSI5S_CLC (*(volatile Ifx_PSI5S_CLC*)0xF0007000u)


#define PSI5S_CON (*(volatile Ifx_PSI5S_CON*)0xF0007210u)


#define PSI5S_CTV0 (*(volatile Ifx_PSI5S_CTV*)0xF0007110u)


#define PSI5S_CTV1 (*(volatile Ifx_PSI5S_CTV*)0xF0007114u)


#define PSI5S_CTV2 (*(volatile Ifx_PSI5S_CTV*)0xF0007118u)


#define PSI5S_CTV3 (*(volatile Ifx_PSI5S_CTV*)0xF000711Cu)


#define PSI5S_CTV4 (*(volatile Ifx_PSI5S_CTV*)0xF0007120u)


#define PSI5S_CTV5 (*(volatile Ifx_PSI5S_CTV*)0xF0007124u)


#define PSI5S_CTV6 (*(volatile Ifx_PSI5S_CTV*)0xF0007128u)


#define PSI5S_CTV7 (*(volatile Ifx_PSI5S_CTV*)0xF000712Cu)


#define PSI5S_FCNT (*(volatile Ifx_PSI5S_FCNT*)0xF0007024u)


#define PSI5S_FDO (*(volatile Ifx_PSI5S_FDO*)0xF000721Cu)


#define PSI5S_FDR (*(volatile Ifx_PSI5S_FDR*)0xF000700Cu)


#define PSI5S_FDRT (*(volatile Ifx_PSI5S_FDRT*)0xF0007010u)


#define PSI5S_FDV (*(volatile Ifx_PSI5S_FDV*)0xF0007218u)


#define PSI5S_GCR (*(volatile Ifx_PSI5S_GCR*)0xF000701Cu)


#define PSI5S_ID (*(volatile Ifx_PSI5S_ID*)0xF0007008u)


#define PSI5S_INP0 (*(volatile Ifx_PSI5S_INP*)0xF00072E0u)


#define PSI5S_INP1 (*(volatile Ifx_PSI5S_INP*)0xF00072E4u)


#define PSI5S_INP2 (*(volatile Ifx_PSI5S_INP*)0xF00072E8u)


#define PSI5S_INP3 (*(volatile Ifx_PSI5S_INP*)0xF00072ECu)


#define PSI5S_INP4 (*(volatile Ifx_PSI5S_INP*)0xF00072F0u)


#define PSI5S_INP5 (*(volatile Ifx_PSI5S_INP*)0xF00072F4u)


#define PSI5S_INP6 (*(volatile Ifx_PSI5S_INP*)0xF00072F8u)


#define PSI5S_INP7 (*(volatile Ifx_PSI5S_INP*)0xF00072FCu)


#define PSI5S_INPG (*(volatile Ifx_PSI5S_INPG*)0xF0007314u)


#define PSI5S_INTCLR0 (*(volatile Ifx_PSI5S_INTCLR*)0xF00072A0u)


#define PSI5S_INTCLR1 (*(volatile Ifx_PSI5S_INTCLR*)0xF00072A4u)


#define PSI5S_INTCLR2 (*(volatile Ifx_PSI5S_INTCLR*)0xF00072A8u)


#define PSI5S_INTCLR3 (*(volatile Ifx_PSI5S_INTCLR*)0xF00072ACu)


#define PSI5S_INTCLR4 (*(volatile Ifx_PSI5S_INTCLR*)0xF00072B0u)


#define PSI5S_INTCLR5 (*(volatile Ifx_PSI5S_INTCLR*)0xF00072B4u)


#define PSI5S_INTCLR6 (*(volatile Ifx_PSI5S_INTCLR*)0xF00072B8u)


#define PSI5S_INTCLR7 (*(volatile Ifx_PSI5S_INTCLR*)0xF00072BCu)


#define PSI5S_INTCLRG (*(volatile Ifx_PSI5S_INTCLRG*)0xF000730Cu)


#define PSI5S_INTEN0 (*(volatile Ifx_PSI5S_INTEN*)0xF00072C0u)


#define PSI5S_INTEN1 (*(volatile Ifx_PSI5S_INTEN*)0xF00072C4u)


#define PSI5S_INTEN2 (*(volatile Ifx_PSI5S_INTEN*)0xF00072C8u)


#define PSI5S_INTEN3 (*(volatile Ifx_PSI5S_INTEN*)0xF00072CCu)


#define PSI5S_INTEN4 (*(volatile Ifx_PSI5S_INTEN*)0xF00072D0u)


#define PSI5S_INTEN5 (*(volatile Ifx_PSI5S_INTEN*)0xF00072D4u)


#define PSI5S_INTEN6 (*(volatile Ifx_PSI5S_INTEN*)0xF00072D8u)


#define PSI5S_INTEN7 (*(volatile Ifx_PSI5S_INTEN*)0xF00072DCu)


#define PSI5S_INTENG (*(volatile Ifx_PSI5S_INTENG*)0xF0007310u)


#define PSI5S_INTOV (*(volatile Ifx_PSI5S_INTOV*)0xF0007300u)


#define PSI5S_INTSET0 (*(volatile Ifx_PSI5S_INTSET*)0xF0007280u)


#define PSI5S_INTSET1 (*(volatile Ifx_PSI5S_INTSET*)0xF0007284u)


#define PSI5S_INTSET2 (*(volatile Ifx_PSI5S_INTSET*)0xF0007288u)


#define PSI5S_INTSET3 (*(volatile Ifx_PSI5S_INTSET*)0xF000728Cu)


#define PSI5S_INTSET4 (*(volatile Ifx_PSI5S_INTSET*)0xF0007290u)


#define PSI5S_INTSET5 (*(volatile Ifx_PSI5S_INTSET*)0xF0007294u)


#define PSI5S_INTSET6 (*(volatile Ifx_PSI5S_INTSET*)0xF0007298u)


#define PSI5S_INTSET7 (*(volatile Ifx_PSI5S_INTSET*)0xF000729Cu)


#define PSI5S_INTSETG (*(volatile Ifx_PSI5S_INTSETG*)0xF0007308u)


#define PSI5S_INTSTAT0 (*(volatile Ifx_PSI5S_INTSTAT*)0xF0007260u)


#define PSI5S_INTSTAT1 (*(volatile Ifx_PSI5S_INTSTAT*)0xF0007264u)


#define PSI5S_INTSTAT2 (*(volatile Ifx_PSI5S_INTSTAT*)0xF0007268u)


#define PSI5S_INTSTAT3 (*(volatile Ifx_PSI5S_INTSTAT*)0xF000726Cu)


#define PSI5S_INTSTAT4 (*(volatile Ifx_PSI5S_INTSTAT*)0xF0007270u)


#define PSI5S_INTSTAT5 (*(volatile Ifx_PSI5S_INTSTAT*)0xF0007274u)


#define PSI5S_INTSTAT6 (*(volatile Ifx_PSI5S_INTSTAT*)0xF0007278u)


#define PSI5S_INTSTAT7 (*(volatile Ifx_PSI5S_INTSTAT*)0xF000727Cu)


#define PSI5S_INTSTATG (*(volatile Ifx_PSI5S_INTSTATG*)0xF0007304u)


#define PSI5S_IOCR (*(volatile Ifx_PSI5S_IOCR*)0xF0007028u)


#define PSI5S_KRST0 (*(volatile Ifx_PSI5S_KRST0*)0xF00073D8u)


#define PSI5S_KRST1 (*(volatile Ifx_PSI5S_KRST1*)0xF00073DCu)


#define PSI5S_KRSTCLR (*(volatile Ifx_PSI5S_KRSTCLR*)0xF00073E0u)


#define PSI5S_NFC (*(volatile Ifx_PSI5S_NFC*)0xF0007020u)


#define PSI5S_OCS (*(volatile Ifx_PSI5S_OCS*)0xF00073CCu)


#define PSI5S_PGC0 (*(volatile Ifx_PSI5S_PGC*)0xF00070F0u)


#define PSI5S_PGC1 (*(volatile Ifx_PSI5S_PGC*)0xF00070F4u)


#define PSI5S_PGC2 (*(volatile Ifx_PSI5S_PGC*)0xF00070F8u)


#define PSI5S_PGC3 (*(volatile Ifx_PSI5S_PGC*)0xF00070FCu)


#define PSI5S_PGC4 (*(volatile Ifx_PSI5S_PGC*)0xF0007100u)


#define PSI5S_PGC5 (*(volatile Ifx_PSI5S_PGC*)0xF0007104u)


#define PSI5S_PGC6 (*(volatile Ifx_PSI5S_PGC*)0xF0007108u)


#define PSI5S_PGC7 (*(volatile Ifx_PSI5S_PGC*)0xF000710Cu)


#define PSI5S_RBUF (*(volatile Ifx_PSI5S_RBUF*)0xF0007224u)


#define PSI5S_RCRA0 (*(volatile Ifx_PSI5S_RCRA*)0xF0007030u)


#define PSI5S_RCRA1 (*(volatile Ifx_PSI5S_RCRA*)0xF0007034u)


#define PSI5S_RCRA2 (*(volatile Ifx_PSI5S_RCRA*)0xF0007038u)


#define PSI5S_RCRA3 (*(volatile Ifx_PSI5S_RCRA*)0xF000703Cu)


#define PSI5S_RCRA4 (*(volatile Ifx_PSI5S_RCRA*)0xF0007040u)


#define PSI5S_RCRA5 (*(volatile Ifx_PSI5S_RCRA*)0xF0007044u)


#define PSI5S_RCRA6 (*(volatile Ifx_PSI5S_RCRA*)0xF0007048u)


#define PSI5S_RCRA7 (*(volatile Ifx_PSI5S_RCRA*)0xF000704Cu)


#define PSI5S_RCRB0 (*(volatile Ifx_PSI5S_RCRB*)0xF0007050u)


#define PSI5S_RCRB1 (*(volatile Ifx_PSI5S_RCRB*)0xF0007054u)


#define PSI5S_RCRB2 (*(volatile Ifx_PSI5S_RCRB*)0xF0007058u)


#define PSI5S_RCRB3 (*(volatile Ifx_PSI5S_RCRB*)0xF000705Cu)


#define PSI5S_RCRB4 (*(volatile Ifx_PSI5S_RCRB*)0xF0007060u)


#define PSI5S_RCRB5 (*(volatile Ifx_PSI5S_RCRB*)0xF0007064u)


#define PSI5S_RCRB6 (*(volatile Ifx_PSI5S_RCRB*)0xF0007068u)


#define PSI5S_RCRB7 (*(volatile Ifx_PSI5S_RCRB*)0xF000706Cu)


#define PSI5S_RDR (*(volatile Ifx_PSI5S_RDR*)0xF00070B4u)


#define PSI5S_RDS (*(volatile Ifx_PSI5S_RDS*)0xF00070B0u)


#define PSI5S_SCR0 (*(volatile Ifx_PSI5S_SCR*)0xF0007130u)


#define PSI5S_SCR1 (*(volatile Ifx_PSI5S_SCR*)0xF0007134u)


#define PSI5S_SCR2 (*(volatile Ifx_PSI5S_SCR*)0xF0007138u)


#define PSI5S_SCR3 (*(volatile Ifx_PSI5S_SCR*)0xF000713Cu)


#define PSI5S_SCR4 (*(volatile Ifx_PSI5S_SCR*)0xF0007140u)


#define PSI5S_SCR5 (*(volatile Ifx_PSI5S_SCR*)0xF0007144u)


#define PSI5S_SCR6 (*(volatile Ifx_PSI5S_SCR*)0xF0007148u)


#define PSI5S_SCR7 (*(volatile Ifx_PSI5S_SCR*)0xF000714Cu)


#define PSI5S_SDR0 (*(volatile Ifx_PSI5S_SDR*)0xF0007150u)


#define PSI5S_SDR1 (*(volatile Ifx_PSI5S_SDR*)0xF0007154u)


#define PSI5S_SDR2 (*(volatile Ifx_PSI5S_SDR*)0xF0007158u)


#define PSI5S_SDR3 (*(volatile Ifx_PSI5S_SDR*)0xF000715Cu)


#define PSI5S_SDR4 (*(volatile Ifx_PSI5S_SDR*)0xF0007160u)


#define PSI5S_SDR5 (*(volatile Ifx_PSI5S_SDR*)0xF0007164u)


#define PSI5S_SDR6 (*(volatile Ifx_PSI5S_SDR*)0xF0007168u)


#define PSI5S_SDR7 (*(volatile Ifx_PSI5S_SDR*)0xF000716Cu)


#define PSI5S_TAR (*(volatile Ifx_PSI5S_TAR*)0xF00070D0u)


#define PSI5S_TBUF (*(volatile Ifx_PSI5S_TBUF*)0xF0007220u)


#define PSI5S_TSCNTA (*(volatile Ifx_PSI5S_TSCNTA*)0xF0007014u)


#define PSI5S_TSCNTB (*(volatile Ifx_PSI5S_TSCNTB*)0xF0007018u)


#define PSI5S_TSCR0 (*(volatile Ifx_PSI5S_TSCR*)0xF0007090u)


#define PSI5S_TSCR1 (*(volatile Ifx_PSI5S_TSCR*)0xF0007094u)


#define PSI5S_TSCR2 (*(volatile Ifx_PSI5S_TSCR*)0xF0007098u)


#define PSI5S_TSCR3 (*(volatile Ifx_PSI5S_TSCR*)0xF000709Cu)


#define PSI5S_TSCR4 (*(volatile Ifx_PSI5S_TSCR*)0xF00070A0u)


#define PSI5S_TSCR5 (*(volatile Ifx_PSI5S_TSCR*)0xF00070A4u)


#define PSI5S_TSCR6 (*(volatile Ifx_PSI5S_TSCR*)0xF00070A8u)


#define PSI5S_TSCR7 (*(volatile Ifx_PSI5S_TSCR*)0xF00070ACu)


#define PSI5S_TSM (*(volatile Ifx_PSI5S_TSM*)0xF00070B8u)


#define PSI5S_WDT0 (*(volatile Ifx_PSI5S_WDT*)0xF0007070u)


#define PSI5S_WDT1 (*(volatile Ifx_PSI5S_WDT*)0xF0007074u)


#define PSI5S_WDT2 (*(volatile Ifx_PSI5S_WDT*)0xF0007078u)


#define PSI5S_WDT3 (*(volatile Ifx_PSI5S_WDT*)0xF000707Cu)


#define PSI5S_WDT4 (*(volatile Ifx_PSI5S_WDT*)0xF0007080u)


#define PSI5S_WDT5 (*(volatile Ifx_PSI5S_WDT*)0xF0007084u)


#define PSI5S_WDT6 (*(volatile Ifx_PSI5S_WDT*)0xF0007088u)


#define PSI5S_WDT7 (*(volatile Ifx_PSI5S_WDT*)0xF000708Cu)


#define PSI5S_WHBCON (*(volatile Ifx_PSI5S_WHBCON*)0xF0007250u)
# 58 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_reg.h" 2 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxQspi_reg.h" 1 3
# 43 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxQspi_reg.h" 3
#define IFXQSPI_REG_H 1

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxQspi_regdef.h" 1 3
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxQspi_regdef.h" 3
#define IFXQSPI_REGDEF_H 1







typedef struct _Ifx_QSPI_ACCEN0_Bits
{
    unsigned int EN0:1;
    unsigned int EN1:1;
    unsigned int EN2:1;
    unsigned int EN3:1;
    unsigned int EN4:1;
    unsigned int EN5:1;
    unsigned int EN6:1;
    unsigned int EN7:1;
    unsigned int EN8:1;
    unsigned int EN9:1;
    unsigned int EN10:1;
    unsigned int EN11:1;
    unsigned int EN12:1;
    unsigned int EN13:1;
    unsigned int EN14:1;
    unsigned int EN15:1;
    unsigned int EN16:1;
    unsigned int EN17:1;
    unsigned int EN18:1;
    unsigned int EN19:1;
    unsigned int EN20:1;
    unsigned int EN21:1;
    unsigned int EN22:1;
    unsigned int EN23:1;
    unsigned int EN24:1;
    unsigned int EN25:1;
    unsigned int EN26:1;
    unsigned int EN27:1;
    unsigned int EN28:1;
    unsigned int EN29:1;
    unsigned int EN30:1;
    unsigned int EN31:1;
} Ifx_QSPI_ACCEN0_Bits;


typedef struct _Ifx_QSPI_ACCEN1_Bits
{
    unsigned int reserved_0:32;
} Ifx_QSPI_ACCEN1_Bits;


typedef struct _Ifx_QSPI_BACON_Bits
{
    unsigned int LAST:1;
    unsigned int IPRE:3;
    unsigned int IDLE:3;
    unsigned int LPRE:3;
    unsigned int LEAD:3;
    unsigned int TPRE:3;
    unsigned int TRAIL:3;
    unsigned int PARTYP:1;
    unsigned int UINT:1;
    unsigned int MSB:1;
    unsigned int BYTE:1;
    unsigned int DL:5;
    unsigned int CS:4;
} Ifx_QSPI_BACON_Bits;


typedef struct _Ifx_QSPI_BACONENTRY_Bits
{
    unsigned int E:32;
} Ifx_QSPI_BACONENTRY_Bits;


typedef struct _Ifx_QSPI_CLC_Bits
{
    unsigned int DISR:1;
    unsigned int DISS:1;
    unsigned int reserved_2:1;
    unsigned int EDIS:1;
    unsigned int reserved_4:28;
} Ifx_QSPI_CLC_Bits;


typedef struct _Ifx_QSPI_DATAENTRY_Bits
{
    unsigned int E:32;
} Ifx_QSPI_DATAENTRY_Bits;


typedef struct _Ifx_QSPI_ECON_Bits
{
    unsigned int Q:6;
    unsigned int A:2;
    unsigned int B:2;
    unsigned int C:2;
    unsigned int CPH:1;
    unsigned int CPOL:1;
    unsigned int PAREN:1;
    unsigned int reserved_15:15;
    unsigned int BE:2;
} Ifx_QSPI_ECON_Bits;


typedef struct _Ifx_QSPI_FLAGSCLEAR_Bits
{
    unsigned int ERRORCLEARS:9;
    unsigned int TXC:1;
    unsigned int RXC:1;
    unsigned int PT1C:1;
    unsigned int PT2C:1;
    unsigned int reserved_13:2;
    unsigned int USRC:1;
    unsigned int reserved_16:16;
} Ifx_QSPI_FLAGSCLEAR_Bits;


typedef struct _Ifx_QSPI_GLOBALCON1_Bits
{
    unsigned int ERRORENS:9;
    unsigned int TXEN:1;
    unsigned int RXEN:1;
    unsigned int PT1EN:1;
    unsigned int PT2EN:1;
    unsigned int reserved_13:2;
    unsigned int USREN:1;
    unsigned int TXFIFOINT:2;
    unsigned int RXFIFOINT:2;
    unsigned int PT1:3;
    unsigned int PT2:3;
    unsigned int TXFM:2;
    unsigned int RXFM:2;
    unsigned int reserved_30:2;
} Ifx_QSPI_GLOBALCON1_Bits;


typedef struct _Ifx_QSPI_GLOBALCON_Bits
{
    unsigned int TQ:8;
    unsigned int reserved_8:1;
    unsigned int SI:1;
    unsigned int EXPECT:4;
    unsigned int LB:1;
    unsigned int DEL0:1;
    unsigned int STROBE:5;
    unsigned int SRF:1;
    unsigned int STIP:1;
    unsigned int reserved_23:1;
    unsigned int EN:1;
    unsigned int MS:2;
    unsigned int AREN:1;
    unsigned int RESETS:4;
} Ifx_QSPI_GLOBALCON_Bits;


typedef struct _Ifx_QSPI_ID_Bits
{
    unsigned int MODREV:8;
    unsigned int MODTYPE:8;
    unsigned int MODNUMBER:16;
} Ifx_QSPI_ID_Bits;


typedef struct _Ifx_QSPI_KRST0_Bits
{
    unsigned int RST:1;
    unsigned int RSTSTAT:1;
    unsigned int reserved_2:30;
} Ifx_QSPI_KRST0_Bits;


typedef struct _Ifx_QSPI_KRST1_Bits
{
    unsigned int RST:1;
    unsigned int reserved_1:31;
} Ifx_QSPI_KRST1_Bits;


typedef struct _Ifx_QSPI_KRSTCLR_Bits
{
    unsigned int CLR:1;
    unsigned int reserved_1:31;
} Ifx_QSPI_KRSTCLR_Bits;


typedef struct _Ifx_QSPI_MIXENTRY_Bits
{
    unsigned int E:32;
} Ifx_QSPI_MIXENTRY_Bits;


typedef struct _Ifx_QSPI_OCS_Bits
{
    unsigned int reserved_0:24;
    unsigned int SUS:4;
    unsigned int SUS_P:1;
    unsigned int SUSSTA:1;
    unsigned int reserved_30:2;
} Ifx_QSPI_OCS_Bits;


typedef struct _Ifx_QSPI_PISEL_Bits
{
    unsigned int MRIS:3;
    unsigned int reserved_3:1;
    unsigned int SRIS:3;
    unsigned int reserved_7:1;
    unsigned int SCIS:3;
    unsigned int reserved_11:1;
    unsigned int SLSIS:3;
    unsigned int reserved_15:17;
} Ifx_QSPI_PISEL_Bits;


typedef struct _Ifx_QSPI_RXEXIT_Bits
{
    unsigned int E:32;
} Ifx_QSPI_RXEXIT_Bits;


typedef struct _Ifx_QSPI_RXEXITD_Bits
{
    unsigned int E:32;
} Ifx_QSPI_RXEXITD_Bits;


typedef struct _Ifx_QSPI_SSOC_Bits
{
    unsigned int AOL:16;
    unsigned int OEN:16;
} Ifx_QSPI_SSOC_Bits;


typedef struct _Ifx_QSPI_STATUS1_Bits
{
    unsigned int BITCOUNT:8;
    unsigned int reserved_8:20;
    unsigned int BRDEN:1;
    unsigned int BRD:1;
    unsigned int SPDEN:1;
    unsigned int SPD:1;
} Ifx_QSPI_STATUS1_Bits;


typedef struct _Ifx_QSPI_STATUS_Bits
{
    unsigned int ERRORFLAGS:9;
    unsigned int TXF:1;
    unsigned int RXF:1;
    unsigned int PT1F:1;
    unsigned int PT2F:1;
    unsigned int reserved_13:2;
    unsigned int USRF:1;
    unsigned int TXFIFOLEVEL:3;
    unsigned int RXFIFOLEVEL:3;
    unsigned int SLAVESEL:4;
    unsigned int RPV:1;
    unsigned int TPV:1;
    unsigned int PHASE:4;
} Ifx_QSPI_STATUS_Bits;


typedef struct _Ifx_QSPI_XXLCON_Bits
{
    unsigned int XDL:16;
    unsigned int BYTECOUNT:16;
} Ifx_QSPI_XXLCON_Bits;







typedef union
{
    unsigned int U;
    signed int I;
    Ifx_QSPI_ACCEN0_Bits B;
} Ifx_QSPI_ACCEN0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_QSPI_ACCEN1_Bits B;
} Ifx_QSPI_ACCEN1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_QSPI_BACON_Bits B;
} Ifx_QSPI_BACON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_QSPI_BACONENTRY_Bits B;
} Ifx_QSPI_BACONENTRY;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_QSPI_CLC_Bits B;
} Ifx_QSPI_CLC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_QSPI_DATAENTRY_Bits B;
} Ifx_QSPI_DATAENTRY;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_QSPI_ECON_Bits B;
} Ifx_QSPI_ECON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_QSPI_FLAGSCLEAR_Bits B;
} Ifx_QSPI_FLAGSCLEAR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_QSPI_GLOBALCON_Bits B;
} Ifx_QSPI_GLOBALCON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_QSPI_GLOBALCON1_Bits B;
} Ifx_QSPI_GLOBALCON1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_QSPI_ID_Bits B;
} Ifx_QSPI_ID;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_QSPI_KRST0_Bits B;
} Ifx_QSPI_KRST0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_QSPI_KRST1_Bits B;
} Ifx_QSPI_KRST1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_QSPI_KRSTCLR_Bits B;
} Ifx_QSPI_KRSTCLR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_QSPI_MIXENTRY_Bits B;
} Ifx_QSPI_MIXENTRY;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_QSPI_OCS_Bits B;
} Ifx_QSPI_OCS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_QSPI_PISEL_Bits B;
} Ifx_QSPI_PISEL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_QSPI_RXEXIT_Bits B;
} Ifx_QSPI_RXEXIT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_QSPI_RXEXITD_Bits B;
} Ifx_QSPI_RXEXITD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_QSPI_SSOC_Bits B;
} Ifx_QSPI_SSOC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_QSPI_STATUS_Bits B;
} Ifx_QSPI_STATUS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_QSPI_STATUS1_Bits B;
} Ifx_QSPI_STATUS1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_QSPI_XXLCON_Bits B;
} Ifx_QSPI_XXLCON;
# 504 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxQspi_regdef.h" 3
typedef volatile struct _Ifx_QSPI
{
    Ifx_QSPI_CLC CLC;
    Ifx_QSPI_PISEL PISEL;
    Ifx_QSPI_ID ID;
    unsigned char reserved_C[4];
    Ifx_QSPI_GLOBALCON GLOBALCON;
    Ifx_QSPI_GLOBALCON1 GLOBALCON1;
    Ifx_QSPI_BACON BACON;
    unsigned char reserved_1C[4];
    Ifx_QSPI_ECON ECON[8];
    Ifx_QSPI_STATUS STATUS;
    Ifx_QSPI_STATUS1 STATUS1;
    Ifx_QSPI_SSOC SSOC;
    unsigned char reserved_4C[8];
    Ifx_QSPI_FLAGSCLEAR FLAGSCLEAR;
    Ifx_QSPI_XXLCON XXLCON;
    Ifx_QSPI_MIXENTRY MIXENTRY;
    Ifx_QSPI_BACONENTRY BACONENTRY;
    Ifx_QSPI_DATAENTRY DATAENTRY[8];
    unsigned char reserved_84[12];
    Ifx_QSPI_RXEXIT RXEXIT;
    Ifx_QSPI_RXEXITD RXEXITD;
    unsigned char reserved_98[80];
    Ifx_QSPI_OCS OCS;
    Ifx_QSPI_KRSTCLR KRSTCLR;
    Ifx_QSPI_KRST1 KRST1;
    Ifx_QSPI_KRST0 KRST0;
    Ifx_QSPI_ACCEN1 ACCEN1;
    Ifx_QSPI_ACCEN0 ACCEN0;
} Ifx_QSPI;
# 46 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxQspi_reg.h" 2 3





#define MODULE_QSPI0 (*(Ifx_QSPI*)0xF0001C00u)


#define MODULE_QSPI1 (*(Ifx_QSPI*)0xF0001D00u)


#define MODULE_QSPI2 (*(Ifx_QSPI*)0xF0001E00u)


#define MODULE_QSPI3 (*(Ifx_QSPI*)0xF0001F00u)







#define QSPI0_ACCEN0 (*(volatile Ifx_QSPI_ACCEN0*)0xF0001CFCu)


#define QSPI0_ACCEN1 (*(volatile Ifx_QSPI_ACCEN1*)0xF0001CF8u)


#define QSPI0_BACON (*(volatile Ifx_QSPI_BACON*)0xF0001C18u)


#define QSPI0_BACONENTRY (*(volatile Ifx_QSPI_BACONENTRY*)0xF0001C60u)


#define QSPI0_CLC (*(volatile Ifx_QSPI_CLC*)0xF0001C00u)


#define QSPI0_DATAENTRY0 (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001C64u)


#define QSPI0_DATAENTRY1 (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001C68u)


#define QSPI0_DATAENTRY2 (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001C6Cu)


#define QSPI0_DATAENTRY3 (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001C70u)


#define QSPI0_DATAENTRY4 (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001C74u)


#define QSPI0_DATAENTRY5 (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001C78u)


#define QSPI0_DATAENTRY6 (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001C7Cu)


#define QSPI0_DATAENTRY7 (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001C80u)


#define QSPI0_ECON0 (*(volatile Ifx_QSPI_ECON*)0xF0001C20u)


#define QSPI0_ECON1 (*(volatile Ifx_QSPI_ECON*)0xF0001C24u)


#define QSPI0_ECON2 (*(volatile Ifx_QSPI_ECON*)0xF0001C28u)


#define QSPI0_ECON3 (*(volatile Ifx_QSPI_ECON*)0xF0001C2Cu)


#define QSPI0_ECON4 (*(volatile Ifx_QSPI_ECON*)0xF0001C30u)


#define QSPI0_ECON5 (*(volatile Ifx_QSPI_ECON*)0xF0001C34u)


#define QSPI0_ECON6 (*(volatile Ifx_QSPI_ECON*)0xF0001C38u)


#define QSPI0_ECON7 (*(volatile Ifx_QSPI_ECON*)0xF0001C3Cu)


#define QSPI0_FLAGSCLEAR (*(volatile Ifx_QSPI_FLAGSCLEAR*)0xF0001C54u)


#define QSPI0_GLOBALCON (*(volatile Ifx_QSPI_GLOBALCON*)0xF0001C10u)


#define QSPI0_GLOBALCON1 (*(volatile Ifx_QSPI_GLOBALCON1*)0xF0001C14u)


#define QSPI0_ID (*(volatile Ifx_QSPI_ID*)0xF0001C08u)


#define QSPI0_KRST0 (*(volatile Ifx_QSPI_KRST0*)0xF0001CF4u)


#define QSPI0_KRST1 (*(volatile Ifx_QSPI_KRST1*)0xF0001CF0u)


#define QSPI0_KRSTCLR (*(volatile Ifx_QSPI_KRSTCLR*)0xF0001CECu)


#define QSPI0_MIXENTRY (*(volatile Ifx_QSPI_MIXENTRY*)0xF0001C5Cu)


#define QSPI0_OCS (*(volatile Ifx_QSPI_OCS*)0xF0001CE8u)


#define QSPI0_PISEL (*(volatile Ifx_QSPI_PISEL*)0xF0001C04u)


#define QSPI0_RXEXIT (*(volatile Ifx_QSPI_RXEXIT*)0xF0001C90u)


#define QSPI0_RXEXITD (*(volatile Ifx_QSPI_RXEXITD*)0xF0001C94u)


#define QSPI0_SSOC (*(volatile Ifx_QSPI_SSOC*)0xF0001C48u)


#define QSPI0_STATUS (*(volatile Ifx_QSPI_STATUS*)0xF0001C40u)


#define QSPI0_STATUS1 (*(volatile Ifx_QSPI_STATUS1*)0xF0001C44u)


#define QSPI0_XXLCON (*(volatile Ifx_QSPI_XXLCON*)0xF0001C58u)







#define QSPI1_ACCEN0 (*(volatile Ifx_QSPI_ACCEN0*)0xF0001DFCu)


#define QSPI1_ACCEN1 (*(volatile Ifx_QSPI_ACCEN1*)0xF0001DF8u)


#define QSPI1_BACON (*(volatile Ifx_QSPI_BACON*)0xF0001D18u)


#define QSPI1_BACONENTRY (*(volatile Ifx_QSPI_BACONENTRY*)0xF0001D60u)


#define QSPI1_CLC (*(volatile Ifx_QSPI_CLC*)0xF0001D00u)


#define QSPI1_DATAENTRY0 (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001D64u)


#define QSPI1_DATAENTRY1 (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001D68u)


#define QSPI1_DATAENTRY2 (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001D6Cu)


#define QSPI1_DATAENTRY3 (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001D70u)


#define QSPI1_DATAENTRY4 (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001D74u)


#define QSPI1_DATAENTRY5 (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001D78u)


#define QSPI1_DATAENTRY6 (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001D7Cu)


#define QSPI1_DATAENTRY7 (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001D80u)


#define QSPI1_ECON0 (*(volatile Ifx_QSPI_ECON*)0xF0001D20u)


#define QSPI1_ECON1 (*(volatile Ifx_QSPI_ECON*)0xF0001D24u)


#define QSPI1_ECON2 (*(volatile Ifx_QSPI_ECON*)0xF0001D28u)


#define QSPI1_ECON3 (*(volatile Ifx_QSPI_ECON*)0xF0001D2Cu)


#define QSPI1_ECON4 (*(volatile Ifx_QSPI_ECON*)0xF0001D30u)


#define QSPI1_ECON5 (*(volatile Ifx_QSPI_ECON*)0xF0001D34u)


#define QSPI1_ECON6 (*(volatile Ifx_QSPI_ECON*)0xF0001D38u)


#define QSPI1_ECON7 (*(volatile Ifx_QSPI_ECON*)0xF0001D3Cu)


#define QSPI1_FLAGSCLEAR (*(volatile Ifx_QSPI_FLAGSCLEAR*)0xF0001D54u)


#define QSPI1_GLOBALCON (*(volatile Ifx_QSPI_GLOBALCON*)0xF0001D10u)


#define QSPI1_GLOBALCON1 (*(volatile Ifx_QSPI_GLOBALCON1*)0xF0001D14u)


#define QSPI1_ID (*(volatile Ifx_QSPI_ID*)0xF0001D08u)


#define QSPI1_KRST0 (*(volatile Ifx_QSPI_KRST0*)0xF0001DF4u)


#define QSPI1_KRST1 (*(volatile Ifx_QSPI_KRST1*)0xF0001DF0u)


#define QSPI1_KRSTCLR (*(volatile Ifx_QSPI_KRSTCLR*)0xF0001DECu)


#define QSPI1_MIXENTRY (*(volatile Ifx_QSPI_MIXENTRY*)0xF0001D5Cu)


#define QSPI1_OCS (*(volatile Ifx_QSPI_OCS*)0xF0001DE8u)


#define QSPI1_PISEL (*(volatile Ifx_QSPI_PISEL*)0xF0001D04u)


#define QSPI1_RXEXIT (*(volatile Ifx_QSPI_RXEXIT*)0xF0001D90u)


#define QSPI1_RXEXITD (*(volatile Ifx_QSPI_RXEXITD*)0xF0001D94u)


#define QSPI1_SSOC (*(volatile Ifx_QSPI_SSOC*)0xF0001D48u)


#define QSPI1_STATUS (*(volatile Ifx_QSPI_STATUS*)0xF0001D40u)


#define QSPI1_STATUS1 (*(volatile Ifx_QSPI_STATUS1*)0xF0001D44u)


#define QSPI1_XXLCON (*(volatile Ifx_QSPI_XXLCON*)0xF0001D58u)







#define QSPI2_ACCEN0 (*(volatile Ifx_QSPI_ACCEN0*)0xF0001EFCu)


#define QSPI2_ACCEN1 (*(volatile Ifx_QSPI_ACCEN1*)0xF0001EF8u)


#define QSPI2_BACON (*(volatile Ifx_QSPI_BACON*)0xF0001E18u)


#define QSPI2_BACONENTRY (*(volatile Ifx_QSPI_BACONENTRY*)0xF0001E60u)


#define QSPI2_CLC (*(volatile Ifx_QSPI_CLC*)0xF0001E00u)


#define QSPI2_DATAENTRY0 (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001E64u)


#define QSPI2_DATAENTRY1 (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001E68u)


#define QSPI2_DATAENTRY2 (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001E6Cu)


#define QSPI2_DATAENTRY3 (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001E70u)


#define QSPI2_DATAENTRY4 (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001E74u)


#define QSPI2_DATAENTRY5 (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001E78u)


#define QSPI2_DATAENTRY6 (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001E7Cu)


#define QSPI2_DATAENTRY7 (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001E80u)


#define QSPI2_ECON0 (*(volatile Ifx_QSPI_ECON*)0xF0001E20u)


#define QSPI2_ECON1 (*(volatile Ifx_QSPI_ECON*)0xF0001E24u)


#define QSPI2_ECON2 (*(volatile Ifx_QSPI_ECON*)0xF0001E28u)


#define QSPI2_ECON3 (*(volatile Ifx_QSPI_ECON*)0xF0001E2Cu)


#define QSPI2_ECON4 (*(volatile Ifx_QSPI_ECON*)0xF0001E30u)


#define QSPI2_ECON5 (*(volatile Ifx_QSPI_ECON*)0xF0001E34u)


#define QSPI2_ECON6 (*(volatile Ifx_QSPI_ECON*)0xF0001E38u)


#define QSPI2_ECON7 (*(volatile Ifx_QSPI_ECON*)0xF0001E3Cu)


#define QSPI2_FLAGSCLEAR (*(volatile Ifx_QSPI_FLAGSCLEAR*)0xF0001E54u)


#define QSPI2_GLOBALCON (*(volatile Ifx_QSPI_GLOBALCON*)0xF0001E10u)


#define QSPI2_GLOBALCON1 (*(volatile Ifx_QSPI_GLOBALCON1*)0xF0001E14u)


#define QSPI2_ID (*(volatile Ifx_QSPI_ID*)0xF0001E08u)


#define QSPI2_KRST0 (*(volatile Ifx_QSPI_KRST0*)0xF0001EF4u)


#define QSPI2_KRST1 (*(volatile Ifx_QSPI_KRST1*)0xF0001EF0u)


#define QSPI2_KRSTCLR (*(volatile Ifx_QSPI_KRSTCLR*)0xF0001EECu)


#define QSPI2_MIXENTRY (*(volatile Ifx_QSPI_MIXENTRY*)0xF0001E5Cu)


#define QSPI2_OCS (*(volatile Ifx_QSPI_OCS*)0xF0001EE8u)


#define QSPI2_PISEL (*(volatile Ifx_QSPI_PISEL*)0xF0001E04u)


#define QSPI2_RXEXIT (*(volatile Ifx_QSPI_RXEXIT*)0xF0001E90u)


#define QSPI2_RXEXITD (*(volatile Ifx_QSPI_RXEXITD*)0xF0001E94u)


#define QSPI2_SSOC (*(volatile Ifx_QSPI_SSOC*)0xF0001E48u)


#define QSPI2_STATUS (*(volatile Ifx_QSPI_STATUS*)0xF0001E40u)


#define QSPI2_STATUS1 (*(volatile Ifx_QSPI_STATUS1*)0xF0001E44u)


#define QSPI2_XXLCON (*(volatile Ifx_QSPI_XXLCON*)0xF0001E58u)







#define QSPI3_ACCEN0 (*(volatile Ifx_QSPI_ACCEN0*)0xF0001FFCu)


#define QSPI3_ACCEN1 (*(volatile Ifx_QSPI_ACCEN1*)0xF0001FF8u)


#define QSPI3_BACON (*(volatile Ifx_QSPI_BACON*)0xF0001F18u)


#define QSPI3_BACONENTRY (*(volatile Ifx_QSPI_BACONENTRY*)0xF0001F60u)


#define QSPI3_CLC (*(volatile Ifx_QSPI_CLC*)0xF0001F00u)


#define QSPI3_DATAENTRY0 (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001F64u)


#define QSPI3_DATAENTRY1 (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001F68u)


#define QSPI3_DATAENTRY2 (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001F6Cu)


#define QSPI3_DATAENTRY3 (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001F70u)


#define QSPI3_DATAENTRY4 (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001F74u)


#define QSPI3_DATAENTRY5 (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001F78u)


#define QSPI3_DATAENTRY6 (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001F7Cu)


#define QSPI3_DATAENTRY7 (*(volatile Ifx_QSPI_DATAENTRY*)0xF0001F80u)


#define QSPI3_ECON0 (*(volatile Ifx_QSPI_ECON*)0xF0001F20u)


#define QSPI3_ECON1 (*(volatile Ifx_QSPI_ECON*)0xF0001F24u)


#define QSPI3_ECON2 (*(volatile Ifx_QSPI_ECON*)0xF0001F28u)


#define QSPI3_ECON3 (*(volatile Ifx_QSPI_ECON*)0xF0001F2Cu)


#define QSPI3_ECON4 (*(volatile Ifx_QSPI_ECON*)0xF0001F30u)


#define QSPI3_ECON5 (*(volatile Ifx_QSPI_ECON*)0xF0001F34u)


#define QSPI3_ECON6 (*(volatile Ifx_QSPI_ECON*)0xF0001F38u)


#define QSPI3_ECON7 (*(volatile Ifx_QSPI_ECON*)0xF0001F3Cu)


#define QSPI3_FLAGSCLEAR (*(volatile Ifx_QSPI_FLAGSCLEAR*)0xF0001F54u)


#define QSPI3_GLOBALCON (*(volatile Ifx_QSPI_GLOBALCON*)0xF0001F10u)


#define QSPI3_GLOBALCON1 (*(volatile Ifx_QSPI_GLOBALCON1*)0xF0001F14u)


#define QSPI3_ID (*(volatile Ifx_QSPI_ID*)0xF0001F08u)


#define QSPI3_KRST0 (*(volatile Ifx_QSPI_KRST0*)0xF0001FF4u)


#define QSPI3_KRST1 (*(volatile Ifx_QSPI_KRST1*)0xF0001FF0u)


#define QSPI3_KRSTCLR (*(volatile Ifx_QSPI_KRSTCLR*)0xF0001FECu)


#define QSPI3_MIXENTRY (*(volatile Ifx_QSPI_MIXENTRY*)0xF0001F5Cu)


#define QSPI3_OCS (*(volatile Ifx_QSPI_OCS*)0xF0001FE8u)


#define QSPI3_PISEL (*(volatile Ifx_QSPI_PISEL*)0xF0001F04u)


#define QSPI3_RXEXIT (*(volatile Ifx_QSPI_RXEXIT*)0xF0001F90u)


#define QSPI3_RXEXITD (*(volatile Ifx_QSPI_RXEXITD*)0xF0001F94u)


#define QSPI3_SSOC (*(volatile Ifx_QSPI_SSOC*)0xF0001F48u)


#define QSPI3_STATUS (*(volatile Ifx_QSPI_STATUS*)0xF0001F40u)


#define QSPI3_STATUS1 (*(volatile Ifx_QSPI_STATUS1*)0xF0001F44u)


#define QSPI3_XXLCON (*(volatile Ifx_QSPI_XXLCON*)0xF0001F58u)
# 59 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_reg.h" 2 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxSbcu_reg.h" 1 3
# 34 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxSbcu_reg.h" 3
#define IFXSBCU_REG_H 1

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxSbcu_regdef.h" 1 3
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxSbcu_regdef.h" 3
#define IFXSBCU_REGDEF_H 1







typedef struct _Ifx_SBCU_ACCEN0_Bits
{
    unsigned int EN0:1;
    unsigned int EN1:1;
    unsigned int EN2:1;
    unsigned int EN3:1;
    unsigned int EN4:1;
    unsigned int EN5:1;
    unsigned int EN6:1;
    unsigned int EN7:1;
    unsigned int EN8:1;
    unsigned int EN9:1;
    unsigned int EN10:1;
    unsigned int EN11:1;
    unsigned int EN12:1;
    unsigned int EN13:1;
    unsigned int EN14:1;
    unsigned int EN15:1;
    unsigned int EN16:1;
    unsigned int EN17:1;
    unsigned int EN18:1;
    unsigned int EN19:1;
    unsigned int EN20:1;
    unsigned int EN21:1;
    unsigned int EN22:1;
    unsigned int EN23:1;
    unsigned int EN24:1;
    unsigned int EN25:1;
    unsigned int EN26:1;
    unsigned int EN27:1;
    unsigned int EN28:1;
    unsigned int EN29:1;
    unsigned int EN30:1;
    unsigned int EN31:1;
} Ifx_SBCU_ACCEN0_Bits;


typedef struct _Ifx_SBCU_ACCEN1_Bits
{
    unsigned int reserved_0:32;
} Ifx_SBCU_ACCEN1_Bits;


typedef struct _Ifx_SBCU_CON_Bits
{
    unsigned int TOUT:16;
    unsigned int DBG:1;
    unsigned int reserved_17:7;
    unsigned int SPC:8;
} Ifx_SBCU_CON_Bits;


typedef struct _Ifx_SBCU_DBADR1_Bits
{
    unsigned int ADR1:32;
} Ifx_SBCU_DBADR1_Bits;


typedef struct _Ifx_SBCU_DBADR2_Bits
{
    unsigned int ADR2:32;
} Ifx_SBCU_DBADR2_Bits;


typedef struct _Ifx_SBCU_DBADRT_Bits
{
    unsigned int FPIADR:32;
} Ifx_SBCU_DBADRT_Bits;


typedef struct _Ifx_SBCU_DBBOS_Bits
{
    unsigned int OPC:4;
    unsigned int SVM:1;
    unsigned int reserved_5:3;
    unsigned int WR:1;
    unsigned int reserved_9:3;
    unsigned int RD:1;
    unsigned int reserved_13:19;
} Ifx_SBCU_DBBOS_Bits;


typedef struct _Ifx_SBCU_DBBOST_Bits
{
    unsigned int FPIOPC:4;
    unsigned int FPISVM:1;
    unsigned int FPIACK:2;
    unsigned int FPIRDY:1;
    unsigned int FPIWR:1;
    unsigned int FPIRST:2;
    unsigned int FPIOPS:1;
    unsigned int FPIRD:1;
    unsigned int FPIABORT:1;
    unsigned int FPITOUT:1;
    unsigned int ENDINIT:1;
    unsigned int FPITAG:6;
    unsigned int reserved_22:10;
} Ifx_SBCU_DBBOST_Bits;


typedef struct _Ifx_SBCU_DBCNTL_Bits
{
    unsigned int EO:1;
    unsigned int OA:1;
    unsigned int reserved_2:2;
    unsigned int RA:1;
    unsigned int reserved_5:7;
    unsigned int CONCOM0:1;
    unsigned int CONCOM1:1;
    unsigned int CONCOM2:1;
    unsigned int reserved_15:1;
    unsigned int ONG:1;
    unsigned int reserved_17:3;
    unsigned int ONA1:2;
    unsigned int reserved_22:2;
    unsigned int ONA2:2;
    unsigned int reserved_26:2;
    unsigned int ONBOS0:1;
    unsigned int ONBOS1:1;
    unsigned int ONBOS2:1;
    unsigned int ONBOS3:1;
} Ifx_SBCU_DBCNTL_Bits;


typedef struct _Ifx_SBCU_DBDAT_Bits
{
    unsigned int FPIDATA:32;
} Ifx_SBCU_DBDAT_Bits;


typedef struct _Ifx_SBCU_DBGNTT_Bits
{
    unsigned int DMAH:1;
    unsigned int ONE0:1;
    unsigned int ETH:1;
    unsigned int HSSL:1;
    unsigned int ONE1:1;
    unsigned int DMAM:1;
    unsigned int ONE2:1;
    unsigned int CPU0:1;
    unsigned int CPU1:1;
    unsigned int CPU2:1;
    unsigned int ONE3:2;
    unsigned int HSMRMI:1;
    unsigned int HSMCMI:1;
    unsigned int ONE4:1;
    unsigned int DMAL:1;
    unsigned int DMACHNR:8;
    unsigned int ONE5:8;
} Ifx_SBCU_DBGNTT_Bits;


typedef struct _Ifx_SBCU_DBGRNT_Bits
{
    unsigned int DMAH:1;
    unsigned int ONE0:1;
    unsigned int ETH:1;
    unsigned int HSSL:1;
    unsigned int ONE1:1;
    unsigned int DMAM:1;
    unsigned int ONE2:1;
    unsigned int CPU0:1;
    unsigned int CPU1:1;
    unsigned int CPU2:1;
    unsigned int ONE3:2;
    unsigned int HSMRMI:1;
    unsigned int HSMCMI:1;
    unsigned int ONE4:1;
    unsigned int DMAL:1;
    unsigned int reserved_16:16;
} Ifx_SBCU_DBGRNT_Bits;


typedef struct _Ifx_SBCU_EADD_Bits
{
    unsigned int FPIADR:32;
} Ifx_SBCU_EADD_Bits;


typedef struct _Ifx_SBCU_ECON_Bits
{
    unsigned int ERRCNT:14;
    unsigned int TOUT:1;
    unsigned int RDY:1;
    unsigned int ABT:1;
    unsigned int ACK:2;
    unsigned int SVM:1;
    unsigned int WRN:1;
    unsigned int RDN:1;
    unsigned int TAG:6;
    unsigned int OPC:4;
} Ifx_SBCU_ECON_Bits;


typedef struct _Ifx_SBCU_EDAT_Bits
{
    unsigned int FPIDAT:32;
} Ifx_SBCU_EDAT_Bits;


typedef struct _Ifx_SBCU_ID_Bits
{
    unsigned int MOD_REV:8;
    unsigned int MODNUMBER:8;
    unsigned int reserved_16:16;
} Ifx_SBCU_ID_Bits;


typedef struct _Ifx_SBCU_PRIOH_Bits
{
    unsigned int CPU1:4;
    unsigned int CPU2:4;
    unsigned int RESERVEDA:4;
    unsigned int RESERVEDB:4;
    unsigned int HSMRMI:4;
    unsigned int HSMCMI:4;
    unsigned int RESERVEDE:4;
    unsigned int DMAL:4;
} Ifx_SBCU_PRIOH_Bits;


typedef struct _Ifx_SBCU_PRIOL_Bits
{
    unsigned int DMAH:4;
    unsigned int RESERVED1:4;
    unsigned int ETH:4;
    unsigned int HSSL:4;
    unsigned int RESERVED4:4;
    unsigned int DMAM:4;
    unsigned int RESERVED6:4;
    unsigned int CPU0:4;
} Ifx_SBCU_PRIOL_Bits;







typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SBCU_ACCEN0_Bits B;
} Ifx_SBCU_ACCEN0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SBCU_ACCEN1_Bits B;
} Ifx_SBCU_ACCEN1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SBCU_CON_Bits B;
} Ifx_SBCU_CON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SBCU_DBADR1_Bits B;
} Ifx_SBCU_DBADR1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SBCU_DBADR2_Bits B;
} Ifx_SBCU_DBADR2;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SBCU_DBADRT_Bits B;
} Ifx_SBCU_DBADRT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SBCU_DBBOS_Bits B;
} Ifx_SBCU_DBBOS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SBCU_DBBOST_Bits B;
} Ifx_SBCU_DBBOST;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SBCU_DBCNTL_Bits B;
} Ifx_SBCU_DBCNTL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SBCU_DBDAT_Bits B;
} Ifx_SBCU_DBDAT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SBCU_DBGNTT_Bits B;
} Ifx_SBCU_DBGNTT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SBCU_DBGRNT_Bits B;
} Ifx_SBCU_DBGRNT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SBCU_EADD_Bits B;
} Ifx_SBCU_EADD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SBCU_ECON_Bits B;
} Ifx_SBCU_ECON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SBCU_EDAT_Bits B;
} Ifx_SBCU_EDAT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SBCU_ID_Bits B;
} Ifx_SBCU_ID;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SBCU_PRIOH_Bits B;
} Ifx_SBCU_PRIOH;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SBCU_PRIOL_Bits B;
} Ifx_SBCU_PRIOL;
# 436 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxSbcu_regdef.h" 3
typedef volatile struct _Ifx_SBCU
{
    unsigned char reserved_0[8];
    Ifx_SBCU_ID ID;
    unsigned char reserved_C[4];
    Ifx_SBCU_CON CON;
    Ifx_SBCU_PRIOH PRIOH;
    Ifx_SBCU_PRIOL PRIOL;
    unsigned char reserved_1C[4];
    Ifx_SBCU_ECON ECON;
    Ifx_SBCU_EADD EADD;
    Ifx_SBCU_EDAT EDAT;
    unsigned char reserved_2C[4];
    Ifx_SBCU_DBCNTL DBCNTL;
    Ifx_SBCU_DBGRNT DBGRNT;
    Ifx_SBCU_DBADR1 DBADR1;
    Ifx_SBCU_DBADR2 DBADR2;
    Ifx_SBCU_DBBOS DBBOS;
    Ifx_SBCU_DBGNTT DBGNTT;
    Ifx_SBCU_DBADRT DBADRT;
    Ifx_SBCU_DBBOST DBBOST;
    Ifx_SBCU_DBDAT DBDAT;
    unsigned char reserved_54[164];
    Ifx_SBCU_ACCEN1 ACCEN1;
    Ifx_SBCU_ACCEN0 ACCEN0;
} Ifx_SBCU;
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxSbcu_reg.h" 2 3





#define MODULE_SBCU0 (*(Ifx_SBCU*)0xF0030000u)







#define SBCU0_ACCEN0 (*(volatile Ifx_SBCU_ACCEN0*)0xF00300FCu)




#define SBCU_ACCEN0 (SBCU0_ACCEN0)


#define SBCU0_ACCEN1 (*(volatile Ifx_SBCU_ACCEN1*)0xF00300F8u)




#define SBCU_ACCEN1 (SBCU0_ACCEN1)


#define SBCU0_CON (*(volatile Ifx_SBCU_CON*)0xF0030010u)




#define SBCU_CON (SBCU0_CON)


#define SBCU0_DBADR1 (*(volatile Ifx_SBCU_DBADR1*)0xF0030038u)




#define SBCU_DBADR1 (SBCU0_DBADR1)


#define SBCU0_DBADR2 (*(volatile Ifx_SBCU_DBADR2*)0xF003003Cu)




#define SBCU_DBADR2 (SBCU0_DBADR2)


#define SBCU0_DBADRT (*(volatile Ifx_SBCU_DBADRT*)0xF0030048u)




#define SBCU_DBADRT (SBCU0_DBADRT)


#define SBCU0_DBBOS (*(volatile Ifx_SBCU_DBBOS*)0xF0030040u)




#define SBCU_DBBOS (SBCU0_DBBOS)


#define SBCU0_DBBOST (*(volatile Ifx_SBCU_DBBOST*)0xF003004Cu)




#define SBCU_DBBOST (SBCU0_DBBOST)


#define SBCU0_DBCNTL (*(volatile Ifx_SBCU_DBCNTL*)0xF0030030u)




#define SBCU_DBCNTL (SBCU0_DBCNTL)


#define SBCU0_DBDAT (*(volatile Ifx_SBCU_DBDAT*)0xF0030050u)




#define SBCU_DBDAT (SBCU0_DBDAT)


#define SBCU0_DBGNTT (*(volatile Ifx_SBCU_DBGNTT*)0xF0030044u)




#define SBCU_DBGNTT (SBCU0_DBGNTT)


#define SBCU0_DBGRNT (*(volatile Ifx_SBCU_DBGRNT*)0xF0030034u)




#define SBCU_DBGRNT (SBCU0_DBGRNT)


#define SBCU0_EADD (*(volatile Ifx_SBCU_EADD*)0xF0030024u)




#define SBCU_EADD (SBCU0_EADD)


#define SBCU0_ECON (*(volatile Ifx_SBCU_ECON*)0xF0030020u)




#define SBCU_ECON (SBCU0_ECON)


#define SBCU0_EDAT (*(volatile Ifx_SBCU_EDAT*)0xF0030028u)




#define SBCU_EDAT (SBCU0_EDAT)


#define SBCU0_ID (*(volatile Ifx_SBCU_ID*)0xF0030008u)




#define SBCU_ID (SBCU0_ID)


#define SBCU0_PRIOH (*(volatile Ifx_SBCU_PRIOH*)0xF0030014u)




#define SBCU_PRIOH (SBCU0_PRIOH)


#define SBCU0_PRIOL (*(volatile Ifx_SBCU_PRIOL*)0xF0030018u)




#define SBCU_PRIOL (SBCU0_PRIOL)
# 60 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_reg.h" 2 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxScu_reg.h" 1 3
# 34 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxScu_reg.h" 3
#define IFXSCU_REG_H 1

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxScu_regdef.h" 1 3
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxScu_regdef.h" 3
#define IFXSCU_REGDEF_H 1







typedef struct _Ifx_SCU_ACCEN0_Bits
{
    unsigned int EN0:1;
    unsigned int EN1:1;
    unsigned int EN2:1;
    unsigned int EN3:1;
    unsigned int EN4:1;
    unsigned int EN5:1;
    unsigned int EN6:1;
    unsigned int EN7:1;
    unsigned int EN8:1;
    unsigned int EN9:1;
    unsigned int EN10:1;
    unsigned int EN11:1;
    unsigned int EN12:1;
    unsigned int EN13:1;
    unsigned int EN14:1;
    unsigned int EN15:1;
    unsigned int EN16:1;
    unsigned int EN17:1;
    unsigned int EN18:1;
    unsigned int EN19:1;
    unsigned int EN20:1;
    unsigned int EN21:1;
    unsigned int EN22:1;
    unsigned int EN23:1;
    unsigned int EN24:1;
    unsigned int EN25:1;
    unsigned int EN26:1;
    unsigned int EN27:1;
    unsigned int EN28:1;
    unsigned int EN29:1;
    unsigned int EN30:1;
    unsigned int EN31:1;
} Ifx_SCU_ACCEN0_Bits;


typedef struct _Ifx_SCU_ACCEN1_Bits
{
    unsigned int reserved_0:32;
} Ifx_SCU_ACCEN1_Bits;


typedef struct _Ifx_SCU_ARSTDIS_Bits
{
    unsigned int STM0DIS:1;
    unsigned int STM1DIS:1;
    unsigned int STM2DIS:1;
    unsigned int reserved_3:29;
} Ifx_SCU_ARSTDIS_Bits;


typedef struct _Ifx_SCU_CCUCON0_Bits
{
    unsigned int BAUD1DIV:4;
    unsigned int BAUD2DIV:4;
    unsigned int SRIDIV:4;
    unsigned int LPDIV:4;
    unsigned int SPBDIV:4;
    unsigned int FSI2DIV:2;
    unsigned int reserved_22:2;
    unsigned int FSIDIV:2;
    unsigned int reserved_26:2;
    unsigned int CLKSEL:2;
    unsigned int UP:1;
    unsigned int LCK:1;
} Ifx_SCU_CCUCON0_Bits;


typedef struct _Ifx_SCU_CCUCON1_Bits
{
    unsigned int CANDIV:4;
    unsigned int ERAYDIV:4;
    unsigned int STMDIV:4;
    unsigned int GTMDIV:4;
    unsigned int ETHDIV:4;
    unsigned int ASCLINFDIV:4;
    unsigned int ASCLINSDIV:4;
    unsigned int INSEL:2;
    unsigned int UP:1;
    unsigned int LCK:1;
} Ifx_SCU_CCUCON1_Bits;


typedef struct _Ifx_SCU_CCUCON2_Bits
{
    unsigned int BBBDIV:4;
    unsigned int reserved_4:26;
    unsigned int UP:1;
    unsigned int LCK:1;
} Ifx_SCU_CCUCON2_Bits;


typedef struct _Ifx_SCU_CCUCON3_Bits
{
    unsigned int PLLDIV:6;
    unsigned int PLLSEL:2;
    unsigned int PLLERAYDIV:6;
    unsigned int PLLERAYSEL:2;
    unsigned int SRIDIV:6;
    unsigned int SRISEL:2;
    unsigned int reserved_24:5;
    unsigned int SLCK:1;
    unsigned int UP:1;
    unsigned int LCK:1;
} Ifx_SCU_CCUCON3_Bits;


typedef struct _Ifx_SCU_CCUCON4_Bits
{
    unsigned int SPBDIV:6;
    unsigned int SPBSEL:2;
    unsigned int GTMDIV:6;
    unsigned int GTMSEL:2;
    unsigned int STMDIV:6;
    unsigned int STMSEL:2;
    unsigned int reserved_24:5;
    unsigned int SLCK:1;
    unsigned int UP:1;
    unsigned int LCK:1;
} Ifx_SCU_CCUCON4_Bits;


typedef struct _Ifx_SCU_CCUCON5_Bits
{
    unsigned int MAXDIV:4;
    unsigned int reserved_4:26;
    unsigned int UP:1;
    unsigned int LCK:1;
} Ifx_SCU_CCUCON5_Bits;


typedef struct _Ifx_SCU_CCUCON6_Bits
{
    unsigned int CPU0DIV:6;
    unsigned int reserved_6:26;
} Ifx_SCU_CCUCON6_Bits;


typedef struct _Ifx_SCU_CCUCON7_Bits
{
    unsigned int CPU1DIV:6;
    unsigned int reserved_6:26;
} Ifx_SCU_CCUCON7_Bits;


typedef struct _Ifx_SCU_CCUCON8_Bits
{
    unsigned int CPU2DIV:6;
    unsigned int reserved_6:26;
} Ifx_SCU_CCUCON8_Bits;


typedef struct _Ifx_SCU_CHIPID_Bits
{
    unsigned int CHREV:6;
    unsigned int CHTEC:2;
    unsigned int CHID:8;
    unsigned int EEA:1;
    unsigned int UCODE:7;
    unsigned int FSIZE:4;
    unsigned int SP:2;
    unsigned int SEC:1;
    unsigned int reserved_31:1;
} Ifx_SCU_CHIPID_Bits;


typedef struct _Ifx_SCU_DTSCON_Bits
{
    unsigned int PWD:1;
    unsigned int START:1;
    unsigned int reserved_2:2;
    unsigned int CAL:22;
    unsigned int reserved_26:5;
    unsigned int SLCK:1;
} Ifx_SCU_DTSCON_Bits;


typedef struct _Ifx_SCU_DTSLIM_Bits
{
    unsigned int LOWER:10;
    unsigned int reserved_10:5;
    unsigned int LLU:1;
    unsigned int UPPER:10;
    unsigned int reserved_26:4;
    unsigned int SLCK:1;
    unsigned int UOF:1;
} Ifx_SCU_DTSLIM_Bits;


typedef struct _Ifx_SCU_DTSSTAT_Bits
{
    unsigned int RESULT:10;
    unsigned int reserved_10:4;
    unsigned int RDY:1;
    unsigned int BUSY:1;
    unsigned int reserved_16:16;
} Ifx_SCU_DTSSTAT_Bits;


typedef struct _Ifx_SCU_EICR_Bits
{
    unsigned int reserved_0:4;
    unsigned int EXIS0:3;
    unsigned int reserved_7:1;
    unsigned int FEN0:1;
    unsigned int REN0:1;
    unsigned int LDEN0:1;
    unsigned int EIEN0:1;
    unsigned int INP0:3;
    unsigned int reserved_15:5;
    unsigned int EXIS1:3;
    unsigned int reserved_23:1;
    unsigned int FEN1:1;
    unsigned int REN1:1;
    unsigned int LDEN1:1;
    unsigned int EIEN1:1;
    unsigned int INP1:3;
    unsigned int reserved_31:1;
} Ifx_SCU_EICR_Bits;


typedef struct _Ifx_SCU_EIFR_Bits
{
    unsigned int INTF0:1;
    unsigned int INTF1:1;
    unsigned int INTF2:1;
    unsigned int INTF3:1;
    unsigned int INTF4:1;
    unsigned int INTF5:1;
    unsigned int INTF6:1;
    unsigned int INTF7:1;
    unsigned int reserved_8:24;
} Ifx_SCU_EIFR_Bits;


typedef struct _Ifx_SCU_EMSR_Bits
{
    unsigned int POL:1;
    unsigned int MODE:1;
    unsigned int ENON:1;
    unsigned int PSEL:1;
    unsigned int reserved_4:12;
    unsigned int EMSF:1;
    unsigned int SEMSF:1;
    unsigned int reserved_18:6;
    unsigned int EMSFM:2;
    unsigned int SEMSFM:2;
    unsigned int reserved_28:4;
} Ifx_SCU_EMSR_Bits;


typedef struct _Ifx_SCU_ESRCFG_Bits
{
    unsigned int reserved_0:7;
    unsigned int EDCON:2;
    unsigned int reserved_9:23;
} Ifx_SCU_ESRCFG_Bits;


typedef struct _Ifx_SCU_ESROCFG_Bits
{
    unsigned int ARI:1;
    unsigned int ARC:1;
    unsigned int reserved_2:30;
} Ifx_SCU_ESROCFG_Bits;


typedef struct _Ifx_SCU_EVR13CON_Bits
{
    unsigned int reserved_0:28;
    unsigned int EVR13OFF:1;
    unsigned int BPEVR13OFF:1;
    unsigned int reserved_30:1;
    unsigned int LCK:1;
} Ifx_SCU_EVR13CON_Bits;


typedef struct _Ifx_SCU_EVR33CON_Bits
{
    unsigned int reserved_0:28;
    unsigned int EVR33OFF:1;
    unsigned int BPEVR33OFF:1;
    unsigned int reserved_30:1;
    unsigned int LCK:1;
} Ifx_SCU_EVR33CON_Bits;


typedef struct _Ifx_SCU_EVRADCSTAT_Bits
{
    unsigned int ADC13V:8;
    unsigned int ADC33V:8;
    unsigned int ADCSWDV:8;
    unsigned int reserved_24:7;
    unsigned int VAL:1;
} Ifx_SCU_EVRADCSTAT_Bits;


typedef struct _Ifx_SCU_EVRDVSTAT_Bits
{
    unsigned int DVS13TRIM:8;
    unsigned int reserved_8:8;
    unsigned int DVS33TRIM:8;
    unsigned int reserved_24:7;
    unsigned int VAL:1;
} Ifx_SCU_EVRDVSTAT_Bits;


typedef struct _Ifx_SCU_EVRMONCTRL_Bits
{
    unsigned int EVR13OVMOD:2;
    unsigned int reserved_2:2;
    unsigned int EVR13UVMOD:2;
    unsigned int reserved_6:2;
    unsigned int EVR33OVMOD:2;
    unsigned int reserved_10:2;
    unsigned int EVR33UVMOD:2;
    unsigned int reserved_14:2;
    unsigned int SWDOVMOD:2;
    unsigned int reserved_18:2;
    unsigned int SWDUVMOD:2;
    unsigned int reserved_22:8;
    unsigned int SLCK:1;
    unsigned int reserved_31:1;
} Ifx_SCU_EVRMONCTRL_Bits;


typedef struct _Ifx_SCU_EVROVMON_Bits
{
    unsigned int EVR13OVVAL:8;
    unsigned int EVR33OVVAL:8;
    unsigned int SWDOVVAL:8;
    unsigned int reserved_24:6;
    unsigned int SLCK:1;
    unsigned int LCK:1;
} Ifx_SCU_EVROVMON_Bits;


typedef struct _Ifx_SCU_EVRRSTCON_Bits
{
    unsigned int RST13TRIM:8;
    unsigned int reserved_8:16;
    unsigned int RST13OFF:1;
    unsigned int BPRST13OFF:1;
    unsigned int RST33OFF:1;
    unsigned int BPRST33OFF:1;
    unsigned int RSTSWDOFF:1;
    unsigned int BPRSTSWDOFF:1;
    unsigned int SLCK:1;
    unsigned int LCK:1;
} Ifx_SCU_EVRRSTCON_Bits;


typedef struct _Ifx_SCU_EVRSDCOEFF1_Bits
{
    unsigned int SD5P:8;
    unsigned int SD5I:8;
    unsigned int SD5D:8;
    unsigned int reserved_24:7;
    unsigned int LCK:1;
} Ifx_SCU_EVRSDCOEFF1_Bits;


typedef struct _Ifx_SCU_EVRSDCOEFF2_Bits
{
    unsigned int SD33P:8;
    unsigned int SD33I:8;
    unsigned int SD33D:8;
    unsigned int reserved_24:7;
    unsigned int LCK:1;
} Ifx_SCU_EVRSDCOEFF2_Bits;


typedef struct _Ifx_SCU_EVRSDCOEFF3_Bits
{
    unsigned int CT5REG0:8;
    unsigned int CT5REG1:8;
    unsigned int CT5REG2:8;
    unsigned int reserved_24:7;
    unsigned int LCK:1;
} Ifx_SCU_EVRSDCOEFF3_Bits;


typedef struct _Ifx_SCU_EVRSDCOEFF4_Bits
{
    unsigned int CT5REG3:8;
    unsigned int CT5REG4:8;
    unsigned int reserved_16:15;
    unsigned int LCK:1;
} Ifx_SCU_EVRSDCOEFF4_Bits;


typedef struct _Ifx_SCU_EVRSDCOEFF5_Bits
{
    unsigned int CT33REG0:8;
    unsigned int CT33REG1:8;
    unsigned int CT33REG2:8;
    unsigned int reserved_24:7;
    unsigned int LCK:1;
} Ifx_SCU_EVRSDCOEFF5_Bits;


typedef struct _Ifx_SCU_EVRSDCOEFF6_Bits
{
    unsigned int CT33REG3:8;
    unsigned int CT33REG4:8;
    unsigned int reserved_16:15;
    unsigned int LCK:1;
} Ifx_SCU_EVRSDCOEFF6_Bits;


typedef struct _Ifx_SCU_EVRSDCTRL1_Bits
{
    unsigned int SDFREQSPRD:16;
    unsigned int SDFREQ:8;
    unsigned int SDSTEP:4;
    unsigned int reserved_28:2;
    unsigned int SDSAMPLE:1;
    unsigned int LCK:1;
} Ifx_SCU_EVRSDCTRL1_Bits;


typedef struct _Ifx_SCU_EVRSDCTRL2_Bits
{
    unsigned int DRVP:8;
    unsigned int SDMINMAXDC:8;
    unsigned int DRVN:8;
    unsigned int SDLUT:6;
    unsigned int reserved_30:1;
    unsigned int LCK:1;
} Ifx_SCU_EVRSDCTRL2_Bits;


typedef struct _Ifx_SCU_EVRSDCTRL3_Bits
{
    unsigned int SDPWMPRE:8;
    unsigned int SDPID:8;
    unsigned int SDVOKLVL:8;
    unsigned int reserved_24:7;
    unsigned int LCK:1;
} Ifx_SCU_EVRSDCTRL3_Bits;


typedef struct _Ifx_SCU_EVRSDCTRL4_Bits
{
    unsigned int reserved_0:8;
    unsigned int SYNCDIV:3;
    unsigned int reserved_11:20;
    unsigned int LCK:1;
} Ifx_SCU_EVRSDCTRL4_Bits;


typedef struct _Ifx_SCU_EVRSTAT_Bits
{
    unsigned int EVR13:1;
    unsigned int OV13:1;
    unsigned int EVR33:1;
    unsigned int OV33:1;
    unsigned int OVSWD:1;
    unsigned int UV13:1;
    unsigned int UV33:1;
    unsigned int UVSWD:1;
    unsigned int EXTPASS13:1;
    unsigned int EXTPASS33:1;
    unsigned int BGPROK:1;
    unsigned int reserved_11:21;
} Ifx_SCU_EVRSTAT_Bits;


typedef struct _Ifx_SCU_EVRTRIM_Bits
{
    unsigned int EVR13TRIM:8;
    unsigned int SDVOUTSEL:8;
    unsigned int reserved_16:14;
    unsigned int SLCK:1;
    unsigned int LCK:1;
} Ifx_SCU_EVRTRIM_Bits;


typedef struct _Ifx_SCU_EVRUVMON_Bits
{
    unsigned int EVR13UVVAL:8;
    unsigned int EVR33UVVAL:8;
    unsigned int SWDUVVAL:8;
    unsigned int reserved_24:6;
    unsigned int SLCK:1;
    unsigned int LCK:1;
} Ifx_SCU_EVRUVMON_Bits;


typedef struct _Ifx_SCU_EXTCON_Bits
{
    unsigned int EN0:1;
    unsigned int reserved_1:1;
    unsigned int SEL0:4;
    unsigned int reserved_6:10;
    unsigned int EN1:1;
    unsigned int NSEL:1;
    unsigned int SEL1:4;
    unsigned int reserved_22:2;
    unsigned int DIV1:8;
} Ifx_SCU_EXTCON_Bits;


typedef struct _Ifx_SCU_FDR_Bits
{
    unsigned int STEP:10;
    unsigned int reserved_10:4;
    unsigned int DM:2;
    unsigned int RESULT:10;
    unsigned int reserved_26:5;
    unsigned int DISCLK:1;
} Ifx_SCU_FDR_Bits;


typedef struct _Ifx_SCU_FMR_Bits
{
    unsigned int FS0:1;
    unsigned int FS1:1;
    unsigned int FS2:1;
    unsigned int FS3:1;
    unsigned int FS4:1;
    unsigned int FS5:1;
    unsigned int FS6:1;
    unsigned int FS7:1;
    unsigned int reserved_8:8;
    unsigned int FC0:1;
    unsigned int FC1:1;
    unsigned int FC2:1;
    unsigned int FC3:1;
    unsigned int FC4:1;
    unsigned int FC5:1;
    unsigned int FC6:1;
    unsigned int FC7:1;
    unsigned int reserved_24:8;
} Ifx_SCU_FMR_Bits;


typedef struct _Ifx_SCU_ID_Bits
{
    unsigned int MODREV:8;
    unsigned int MODTYPE:8;
    unsigned int MODNUMBER:16;
} Ifx_SCU_ID_Bits;


typedef struct _Ifx_SCU_IGCR_Bits
{
    unsigned int IPEN00:1;
    unsigned int IPEN01:1;
    unsigned int IPEN02:1;
    unsigned int IPEN03:1;
    unsigned int IPEN04:1;
    unsigned int IPEN05:1;
    unsigned int IPEN06:1;
    unsigned int IPEN07:1;
    unsigned int reserved_8:5;
    unsigned int GEEN0:1;
    unsigned int IGP0:2;
    unsigned int IPEN10:1;
    unsigned int IPEN11:1;
    unsigned int IPEN12:1;
    unsigned int IPEN13:1;
    unsigned int IPEN14:1;
    unsigned int IPEN15:1;
    unsigned int IPEN16:1;
    unsigned int IPEN17:1;
    unsigned int reserved_24:5;
    unsigned int GEEN1:1;
    unsigned int IGP1:2;
} Ifx_SCU_IGCR_Bits;


typedef struct _Ifx_SCU_IN_Bits
{
    unsigned int P0:1;
    unsigned int P1:1;
    unsigned int reserved_2:30;
} Ifx_SCU_IN_Bits;


typedef struct _Ifx_SCU_IOCR_Bits
{
    unsigned int reserved_0:4;
    unsigned int PC0:4;
    unsigned int reserved_8:4;
    unsigned int PC1:4;
    unsigned int reserved_16:16;
} Ifx_SCU_IOCR_Bits;


typedef struct _Ifx_SCU_LBISTCTRL0_Bits
{
    unsigned int LBISTREQ:1;
    unsigned int LBISTREQP:1;
    unsigned int PATTERNS:14;
    unsigned int reserved_16:16;
} Ifx_SCU_LBISTCTRL0_Bits;


typedef struct _Ifx_SCU_LBISTCTRL1_Bits
{
    unsigned int SEED:23;
    unsigned int reserved_23:1;
    unsigned int SPLITSH:3;
    unsigned int BODY:1;
    unsigned int LBISTFREQU:4;
} Ifx_SCU_LBISTCTRL1_Bits;


typedef struct _Ifx_SCU_LBISTCTRL2_Bits
{
    unsigned int SIGNATURE:24;
    unsigned int reserved_24:7;
    unsigned int LBISTDONE:1;
} Ifx_SCU_LBISTCTRL2_Bits;


typedef struct _Ifx_SCU_LCLCON_Bits
{
    unsigned int reserved_0:16;
    unsigned int LS:1;
    unsigned int reserved_17:14;
    unsigned int LSEN:1;
} Ifx_SCU_LCLCON_Bits;


typedef struct _Ifx_SCU_LCLTEST_Bits
{
    unsigned int LCLT0:1;
    unsigned int LCLT1:1;
    unsigned int reserved_2:30;
} Ifx_SCU_LCLTEST_Bits;


typedef struct _Ifx_SCU_MANID_Bits
{
    unsigned int DEPT:5;
    unsigned int MANUF:11;
    unsigned int reserved_16:16;
} Ifx_SCU_MANID_Bits;


typedef struct _Ifx_SCU_OMR_Bits
{
    unsigned int PS0:1;
    unsigned int PS1:1;
    unsigned int reserved_2:14;
    unsigned int PCL0:1;
    unsigned int PCL1:1;
    unsigned int reserved_18:14;
} Ifx_SCU_OMR_Bits;


typedef struct _Ifx_SCU_OSCCON_Bits
{
    unsigned int reserved_0:1;
    unsigned int PLLLV:1;
    unsigned int OSCRES:1;
    unsigned int GAINSEL:2;
    unsigned int MODE:2;
    unsigned int SHBY:1;
    unsigned int PLLHV:1;
    unsigned int reserved_9:1;
    unsigned int X1D:1;
    unsigned int X1DEN:1;
    unsigned int reserved_12:4;
    unsigned int OSCVAL:5;
    unsigned int reserved_21:2;
    unsigned int APREN:1;
    unsigned int CAP0EN:1;
    unsigned int CAP1EN:1;
    unsigned int CAP2EN:1;
    unsigned int CAP3EN:1;
    unsigned int reserved_28:4;
} Ifx_SCU_OSCCON_Bits;


typedef struct _Ifx_SCU_OUT_Bits
{
    unsigned int P0:1;
    unsigned int P1:1;
    unsigned int reserved_2:30;
} Ifx_SCU_OUT_Bits;


typedef struct _Ifx_SCU_OVCCON_Bits
{
    unsigned int CSEL0:1;
    unsigned int CSEL1:1;
    unsigned int CSEL2:1;
    unsigned int reserved_3:13;
    unsigned int OVSTRT:1;
    unsigned int OVSTP:1;
    unsigned int DCINVAL:1;
    unsigned int reserved_19:5;
    unsigned int OVCONF:1;
    unsigned int POVCONF:1;
    unsigned int reserved_26:6;
} Ifx_SCU_OVCCON_Bits;


typedef struct _Ifx_SCU_OVCENABLE_Bits
{
    unsigned int OVEN0:1;
    unsigned int OVEN1:1;
    unsigned int OVEN2:1;
    unsigned int reserved_3:29;
} Ifx_SCU_OVCENABLE_Bits;


typedef struct _Ifx_SCU_PDISC_Bits
{
    unsigned int PDIS0:1;
    unsigned int PDIS1:1;
    unsigned int reserved_2:30;
} Ifx_SCU_PDISC_Bits;


typedef struct _Ifx_SCU_PDR_Bits
{
    unsigned int PD0:3;
    unsigned int PL0:1;
    unsigned int PD1:3;
    unsigned int PL1:1;
    unsigned int reserved_8:24;
} Ifx_SCU_PDR_Bits;


typedef struct _Ifx_SCU_PDRR_Bits
{
    unsigned int PDR0:1;
    unsigned int PDR1:1;
    unsigned int PDR2:1;
    unsigned int PDR3:1;
    unsigned int PDR4:1;
    unsigned int PDR5:1;
    unsigned int PDR6:1;
    unsigned int PDR7:1;
    unsigned int reserved_8:24;
} Ifx_SCU_PDRR_Bits;


typedef struct _Ifx_SCU_PLLCON0_Bits
{
    unsigned int VCOBYP:1;
    unsigned int VCOPWD:1;
    unsigned int MODEN:1;
    unsigned int reserved_3:1;
    unsigned int SETFINDIS:1;
    unsigned int CLRFINDIS:1;
    unsigned int OSCDISCDIS:1;
    unsigned int reserved_7:2;
    unsigned int NDIV:7;
    unsigned int PLLPWD:1;
    unsigned int reserved_17:1;
    unsigned int RESLD:1;
    unsigned int reserved_19:5;
    unsigned int PDIV:4;
    unsigned int reserved_28:4;
} Ifx_SCU_PLLCON0_Bits;


typedef struct _Ifx_SCU_PLLCON1_Bits
{
    unsigned int K2DIV:7;
    unsigned int reserved_7:1;
    unsigned int K3DIV:7;
    unsigned int reserved_15:1;
    unsigned int K1DIV:7;
    unsigned int reserved_23:9;
} Ifx_SCU_PLLCON1_Bits;


typedef struct _Ifx_SCU_PLLCON2_Bits
{
    unsigned int MODCFG:16;
    unsigned int reserved_16:16;
} Ifx_SCU_PLLCON2_Bits;


typedef struct _Ifx_SCU_PLLERAYCON0_Bits
{
    unsigned int VCOBYP:1;
    unsigned int VCOPWD:1;
    unsigned int reserved_2:2;
    unsigned int SETFINDIS:1;
    unsigned int CLRFINDIS:1;
    unsigned int OSCDISCDIS:1;
    unsigned int reserved_7:2;
    unsigned int NDIV:5;
    unsigned int reserved_14:2;
    unsigned int PLLPWD:1;
    unsigned int reserved_17:1;
    unsigned int RESLD:1;
    unsigned int reserved_19:5;
    unsigned int PDIV:4;
    unsigned int reserved_28:4;
} Ifx_SCU_PLLERAYCON0_Bits;


typedef struct _Ifx_SCU_PLLERAYCON1_Bits
{
    unsigned int K2DIV:7;
    unsigned int reserved_7:1;
    unsigned int K3DIV:4;
    unsigned int reserved_12:4;
    unsigned int K1DIV:7;
    unsigned int reserved_23:9;
} Ifx_SCU_PLLERAYCON1_Bits;


typedef struct _Ifx_SCU_PLLERAYSTAT_Bits
{
    unsigned int VCOBYST:1;
    unsigned int PWDSTAT:1;
    unsigned int VCOLOCK:1;
    unsigned int FINDIS:1;
    unsigned int K1RDY:1;
    unsigned int K2RDY:1;
    unsigned int reserved_6:26;
} Ifx_SCU_PLLERAYSTAT_Bits;


typedef struct _Ifx_SCU_PLLSTAT_Bits
{
    unsigned int VCOBYST:1;
    unsigned int reserved_1:1;
    unsigned int VCOLOCK:1;
    unsigned int FINDIS:1;
    unsigned int K1RDY:1;
    unsigned int K2RDY:1;
    unsigned int reserved_6:1;
    unsigned int MODRUN:1;
    unsigned int reserved_8:24;
} Ifx_SCU_PLLSTAT_Bits;


typedef struct _Ifx_SCU_PMCSR_Bits
{
    unsigned int REQSLP:2;
    unsigned int SMUSLP:1;
    unsigned int reserved_3:5;
    unsigned int PMST:3;
    unsigned int reserved_11:21;
} Ifx_SCU_PMCSR_Bits;


typedef struct _Ifx_SCU_PMSWCR0_Bits
{
    unsigned int reserved_0:1;
    unsigned int ESR1WKEN:1;
    unsigned int PINAWKEN:1;
    unsigned int PINBWKEN:1;
    unsigned int ESR0DFEN:1;
    unsigned int ESR0EDCON:2;
    unsigned int ESR1DFEN:1;
    unsigned int ESR1EDCON:2;
    unsigned int PINADFEN:1;
    unsigned int PINAEDCON:2;
    unsigned int PINBDFEN:1;
    unsigned int PINBEDCON:2;
    unsigned int reserved_16:1;
    unsigned int STBYRAMSEL:2;
    unsigned int reserved_19:2;
    unsigned int TRISTEN:1;
    unsigned int TRISTREQ:1;
    unsigned int PORSTDF:1;
    unsigned int PWRWKEN:1;
    unsigned int DCDCSYNC:1;
    unsigned int BLNKFIL:3;
    unsigned int ESR0TRIST:1;
    unsigned int reserved_30:1;
    unsigned int LCK:1;
} Ifx_SCU_PMSWCR0_Bits;


typedef struct _Ifx_SCU_PMSWCR1_Bits
{
    unsigned int reserved_0:8;
    unsigned int CPUIDLSEL:3;
    unsigned int reserved_11:1;
    unsigned int IRADIS:1;
    unsigned int reserved_13:11;
    unsigned int CPUSEL:3;
    unsigned int STBYEVEN:1;
    unsigned int STBYEV:3;
    unsigned int reserved_31:1;
} Ifx_SCU_PMSWCR1_Bits;


typedef struct _Ifx_SCU_PMSWSTAT_Bits
{
    unsigned int reserved_0:2;
    unsigned int ESR1WKP:1;
    unsigned int ESR1OVRUN:1;
    unsigned int PINAWKP:1;
    unsigned int PINAOVRUN:1;
    unsigned int PINBWKP:1;
    unsigned int PINBOVRUN:1;
    unsigned int PWRWKP:1;
    unsigned int PORSTDF:1;
    unsigned int HWCFGEVR:3;
    unsigned int STBYRAM:2;
    unsigned int TRIST:1;
    unsigned int reserved_16:4;
    unsigned int ESR1WKEN:1;
    unsigned int PINAWKEN:1;
    unsigned int PINBWKEN:1;
    unsigned int PWRWKEN:1;
    unsigned int BLNKFIL:3;
    unsigned int ESR0TRIST:1;
    unsigned int reserved_28:4;
} Ifx_SCU_PMSWSTAT_Bits;


typedef struct _Ifx_SCU_PMSWSTATCLR_Bits
{
    unsigned int reserved_0:2;
    unsigned int ESR1WKPCLR:1;
    unsigned int ESR1OVRUNCLR:1;
    unsigned int PINAWKPCLR:1;
    unsigned int PINAOVRUNCLR:1;
    unsigned int PINBWKPCLR:1;
    unsigned int PINBOVRUNCLR:1;
    unsigned int PWRWKPCLR:1;
    unsigned int reserved_9:23;
} Ifx_SCU_PMSWSTATCLR_Bits;


typedef struct _Ifx_SCU_RSTCON2_Bits
{
    unsigned int reserved_0:1;
    unsigned int CLRC:1;
    unsigned int reserved_2:10;
    unsigned int CSS0:1;
    unsigned int CSS1:1;
    unsigned int CSS2:1;
    unsigned int reserved_15:1;
    unsigned int USRINFO:16;
} Ifx_SCU_RSTCON2_Bits;


typedef struct _Ifx_SCU_RSTCON_Bits
{
    unsigned int ESR0:2;
    unsigned int ESR1:2;
    unsigned int reserved_4:2;
    unsigned int SMU:2;
    unsigned int SW:2;
    unsigned int STM0:2;
    unsigned int STM1:2;
    unsigned int STM2:2;
    unsigned int reserved_16:16;
} Ifx_SCU_RSTCON_Bits;


typedef struct _Ifx_SCU_RSTSTAT_Bits
{
    unsigned int ESR0:1;
    unsigned int ESR1:1;
    unsigned int reserved_2:1;
    unsigned int SMU:1;
    unsigned int SW:1;
    unsigned int STM0:1;
    unsigned int STM1:1;
    unsigned int STM2:1;
    unsigned int reserved_8:8;
    unsigned int PORST:1;
    unsigned int reserved_17:1;
    unsigned int CB0:1;
    unsigned int CB1:1;
    unsigned int CB3:1;
    unsigned int reserved_21:2;
    unsigned int EVR13:1;
    unsigned int EVR33:1;
    unsigned int SWD:1;
    unsigned int reserved_26:2;
    unsigned int STBYR:1;
    unsigned int reserved_29:3;
} Ifx_SCU_RSTSTAT_Bits;


typedef struct _Ifx_SCU_SAFECON_Bits
{
    unsigned int HBT:1;
    unsigned int reserved_1:31;
} Ifx_SCU_SAFECON_Bits;


typedef struct _Ifx_SCU_STSTAT_Bits
{
    unsigned int HWCFG:8;
    unsigned int FTM:7;
    unsigned int MODE:1;
    unsigned int reserved_16:1;
    unsigned int LUDIS:1;
    unsigned int reserved_18:1;
    unsigned int TRSTL:1;
    unsigned int SPDEN:1;
    unsigned int reserved_21:3;
    unsigned int RAMINT:1;
    unsigned int reserved_25:7;
} Ifx_SCU_STSTAT_Bits;


typedef struct _Ifx_SCU_SWRSTCON_Bits
{
    unsigned int reserved_0:1;
    unsigned int SWRSTREQ:1;
    unsigned int reserved_2:30;
} Ifx_SCU_SWRSTCON_Bits;


typedef struct _Ifx_SCU_SYSCON_Bits
{
    unsigned int CCTRIG0:1;
    unsigned int reserved_1:1;
    unsigned int RAMINTM:2;
    unsigned int SETLUDIS:1;
    unsigned int reserved_5:3;
    unsigned int DATM:1;
    unsigned int reserved_9:23;
} Ifx_SCU_SYSCON_Bits;


typedef struct _Ifx_SCU_TRAPCLR_Bits
{
    unsigned int ESR0T:1;
    unsigned int ESR1T:1;
    unsigned int reserved_2:1;
    unsigned int SMUT:1;
    unsigned int reserved_4:28;
} Ifx_SCU_TRAPCLR_Bits;


typedef struct _Ifx_SCU_TRAPDIS_Bits
{
    unsigned int ESR0T:1;
    unsigned int ESR1T:1;
    unsigned int reserved_2:1;
    unsigned int SMUT:1;
    unsigned int reserved_4:28;
} Ifx_SCU_TRAPDIS_Bits;


typedef struct _Ifx_SCU_TRAPSET_Bits
{
    unsigned int ESR0T:1;
    unsigned int ESR1T:1;
    unsigned int reserved_2:1;
    unsigned int SMUT:1;
    unsigned int reserved_4:28;
} Ifx_SCU_TRAPSET_Bits;


typedef struct _Ifx_SCU_TRAPSTAT_Bits
{
    unsigned int ESR0T:1;
    unsigned int ESR1T:1;
    unsigned int reserved_2:1;
    unsigned int SMUT:1;
    unsigned int reserved_4:28;
} Ifx_SCU_TRAPSTAT_Bits;


typedef struct _Ifx_SCU_WDTCPU_CON0_Bits
{
    volatile unsigned int ENDINIT:1;
    volatile unsigned int LCK:1;
    volatile unsigned int PW:14;
    volatile unsigned int REL:16;
} Ifx_SCU_WDTCPU_CON0_Bits;


typedef struct _Ifx_SCU_WDTCPU_CON1_Bits
{
    unsigned int reserved_0:2;
    unsigned int IR0:1;
    unsigned int DR:1;
    unsigned int reserved_4:1;
    unsigned int IR1:1;
    unsigned int UR:1;
    unsigned int PAR:1;
    unsigned int TCR:1;
    unsigned int TCTR:7;
    unsigned int reserved_16:16;
} Ifx_SCU_WDTCPU_CON1_Bits;


typedef struct _Ifx_SCU_WDTCPU_SR_Bits
{
    unsigned int AE:1;
    unsigned int OE:1;
    unsigned int IS0:1;
    unsigned int DS:1;
    unsigned int TO:1;
    unsigned int IS1:1;
    unsigned int US:1;
    unsigned int PAS:1;
    unsigned int TCS:1;
    unsigned int TCT:7;
    unsigned int TIM:16;
} Ifx_SCU_WDTCPU_SR_Bits;


typedef struct _Ifx_SCU_WDTS_CON0_Bits
{
    volatile unsigned int ENDINIT:1;
    volatile unsigned int LCK:1;
    volatile unsigned int PW:14;
    volatile unsigned int REL:16;
} Ifx_SCU_WDTS_CON0_Bits;


typedef struct _Ifx_SCU_WDTS_CON1_Bits
{
    unsigned int CLRIRF:1;
    unsigned int reserved_1:1;
    unsigned int IR0:1;
    unsigned int DR:1;
    unsigned int reserved_4:1;
    unsigned int IR1:1;
    unsigned int UR:1;
    unsigned int PAR:1;
    unsigned int TCR:1;
    unsigned int TCTR:7;
    unsigned int reserved_16:16;
} Ifx_SCU_WDTS_CON1_Bits;


typedef struct _Ifx_SCU_WDTS_SR_Bits
{
    unsigned int AE:1;
    unsigned int OE:1;
    unsigned int IS0:1;
    unsigned int DS:1;
    unsigned int TO:1;
    unsigned int IS1:1;
    unsigned int US:1;
    unsigned int PAS:1;
    unsigned int TCS:1;
    unsigned int TCT:7;
    unsigned int TIM:16;
} Ifx_SCU_WDTS_SR_Bits;







typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_ACCEN0_Bits B;
} Ifx_SCU_ACCEN0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_ACCEN1_Bits B;
} Ifx_SCU_ACCEN1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_ARSTDIS_Bits B;
} Ifx_SCU_ARSTDIS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_CCUCON0_Bits B;
} Ifx_SCU_CCUCON0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_CCUCON1_Bits B;
} Ifx_SCU_CCUCON1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_CCUCON2_Bits B;
} Ifx_SCU_CCUCON2;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_CCUCON3_Bits B;
} Ifx_SCU_CCUCON3;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_CCUCON4_Bits B;
} Ifx_SCU_CCUCON4;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_CCUCON5_Bits B;
} Ifx_SCU_CCUCON5;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_CCUCON6_Bits B;
} Ifx_SCU_CCUCON6;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_CCUCON7_Bits B;
} Ifx_SCU_CCUCON7;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_CCUCON8_Bits B;
} Ifx_SCU_CCUCON8;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_CHIPID_Bits B;
} Ifx_SCU_CHIPID;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_DTSCON_Bits B;
} Ifx_SCU_DTSCON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_DTSLIM_Bits B;
} Ifx_SCU_DTSLIM;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_DTSSTAT_Bits B;
} Ifx_SCU_DTSSTAT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_EICR_Bits B;
} Ifx_SCU_EICR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_EIFR_Bits B;
} Ifx_SCU_EIFR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_EMSR_Bits B;
} Ifx_SCU_EMSR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_ESRCFG_Bits B;
} Ifx_SCU_ESRCFG;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_ESROCFG_Bits B;
} Ifx_SCU_ESROCFG;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_EVR13CON_Bits B;
} Ifx_SCU_EVR13CON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_EVR33CON_Bits B;
} Ifx_SCU_EVR33CON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_EVRADCSTAT_Bits B;
} Ifx_SCU_EVRADCSTAT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_EVRDVSTAT_Bits B;
} Ifx_SCU_EVRDVSTAT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_EVRMONCTRL_Bits B;
} Ifx_SCU_EVRMONCTRL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_EVROVMON_Bits B;
} Ifx_SCU_EVROVMON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_EVRRSTCON_Bits B;
} Ifx_SCU_EVRRSTCON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_EVRSDCOEFF1_Bits B;
} Ifx_SCU_EVRSDCOEFF1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_EVRSDCOEFF2_Bits B;
} Ifx_SCU_EVRSDCOEFF2;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_EVRSDCOEFF3_Bits B;
} Ifx_SCU_EVRSDCOEFF3;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_EVRSDCOEFF4_Bits B;
} Ifx_SCU_EVRSDCOEFF4;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_EVRSDCOEFF5_Bits B;
} Ifx_SCU_EVRSDCOEFF5;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_EVRSDCOEFF6_Bits B;
} Ifx_SCU_EVRSDCOEFF6;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_EVRSDCTRL1_Bits B;
} Ifx_SCU_EVRSDCTRL1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_EVRSDCTRL2_Bits B;
} Ifx_SCU_EVRSDCTRL2;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_EVRSDCTRL3_Bits B;
} Ifx_SCU_EVRSDCTRL3;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_EVRSDCTRL4_Bits B;
} Ifx_SCU_EVRSDCTRL4;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_EVRSTAT_Bits B;
} Ifx_SCU_EVRSTAT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_EVRTRIM_Bits B;
} Ifx_SCU_EVRTRIM;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_EVRUVMON_Bits B;
} Ifx_SCU_EVRUVMON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_EXTCON_Bits B;
} Ifx_SCU_EXTCON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_FDR_Bits B;
} Ifx_SCU_FDR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_FMR_Bits B;
} Ifx_SCU_FMR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_ID_Bits B;
} Ifx_SCU_ID;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_IGCR_Bits B;
} Ifx_SCU_IGCR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_IN_Bits B;
} Ifx_SCU_IN;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_IOCR_Bits B;
} Ifx_SCU_IOCR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_LBISTCTRL0_Bits B;
} Ifx_SCU_LBISTCTRL0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_LBISTCTRL1_Bits B;
} Ifx_SCU_LBISTCTRL1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_LBISTCTRL2_Bits B;
} Ifx_SCU_LBISTCTRL2;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_LCLCON_Bits B;
} Ifx_SCU_LCLCON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_LCLTEST_Bits B;
} Ifx_SCU_LCLTEST;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_MANID_Bits B;
} Ifx_SCU_MANID;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_OMR_Bits B;
} Ifx_SCU_OMR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_OSCCON_Bits B;
} Ifx_SCU_OSCCON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_OUT_Bits B;
} Ifx_SCU_OUT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_OVCCON_Bits B;
} Ifx_SCU_OVCCON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_OVCENABLE_Bits B;
} Ifx_SCU_OVCENABLE;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_PDISC_Bits B;
} Ifx_SCU_PDISC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_PDR_Bits B;
} Ifx_SCU_PDR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_PDRR_Bits B;
} Ifx_SCU_PDRR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_PLLCON0_Bits B;
} Ifx_SCU_PLLCON0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_PLLCON1_Bits B;
} Ifx_SCU_PLLCON1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_PLLCON2_Bits B;
} Ifx_SCU_PLLCON2;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_PLLERAYCON0_Bits B;
} Ifx_SCU_PLLERAYCON0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_PLLERAYCON1_Bits B;
} Ifx_SCU_PLLERAYCON1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_PLLERAYSTAT_Bits B;
} Ifx_SCU_PLLERAYSTAT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_PLLSTAT_Bits B;
} Ifx_SCU_PLLSTAT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_PMCSR_Bits B;
} Ifx_SCU_PMCSR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_PMSWCR0_Bits B;
} Ifx_SCU_PMSWCR0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_PMSWCR1_Bits B;
} Ifx_SCU_PMSWCR1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_PMSWSTAT_Bits B;
} Ifx_SCU_PMSWSTAT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_PMSWSTATCLR_Bits B;
} Ifx_SCU_PMSWSTATCLR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_RSTCON_Bits B;
} Ifx_SCU_RSTCON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_RSTCON2_Bits B;
} Ifx_SCU_RSTCON2;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_RSTSTAT_Bits B;
} Ifx_SCU_RSTSTAT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_SAFECON_Bits B;
} Ifx_SCU_SAFECON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_STSTAT_Bits B;
} Ifx_SCU_STSTAT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_SWRSTCON_Bits B;
} Ifx_SCU_SWRSTCON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_SYSCON_Bits B;
} Ifx_SCU_SYSCON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_TRAPCLR_Bits B;
} Ifx_SCU_TRAPCLR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_TRAPDIS_Bits B;
} Ifx_SCU_TRAPDIS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_TRAPSET_Bits B;
} Ifx_SCU_TRAPSET;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_TRAPSTAT_Bits B;
} Ifx_SCU_TRAPSTAT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_WDTCPU_CON0_Bits B;
} Ifx_SCU_WDTCPU_CON0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_WDTCPU_CON1_Bits B;
} Ifx_SCU_WDTCPU_CON1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_WDTCPU_SR_Bits B;
} Ifx_SCU_WDTCPU_SR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_WDTS_CON0_Bits B;
} Ifx_SCU_WDTS_CON0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_WDTS_CON1_Bits B;
} Ifx_SCU_WDTS_CON1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_WDTS_SR_Bits B;
} Ifx_SCU_WDTS_SR;
# 1933 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxScu_regdef.h" 3
typedef volatile struct _Ifx_SCU_WDTCPU
{
    Ifx_SCU_WDTCPU_CON0 CON0;
    Ifx_SCU_WDTCPU_CON1 CON1;
    Ifx_SCU_WDTCPU_SR SR;
} Ifx_SCU_WDTCPU;


typedef volatile struct _Ifx_SCU_WDTS
{
    Ifx_SCU_WDTS_CON0 CON0;
    Ifx_SCU_WDTS_CON1 CON1;
    Ifx_SCU_WDTS_SR SR;
} Ifx_SCU_WDTS;
# 1959 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxScu_regdef.h" 3
typedef volatile struct _Ifx_SCU
{
    unsigned char reserved_0[8];
    Ifx_SCU_ID ID;
    unsigned char reserved_C[4];
    Ifx_SCU_OSCCON OSCCON;
    Ifx_SCU_PLLSTAT PLLSTAT;
    Ifx_SCU_PLLCON0 PLLCON0;
    Ifx_SCU_PLLCON1 PLLCON1;
    Ifx_SCU_PLLCON2 PLLCON2;
    Ifx_SCU_PLLERAYSTAT PLLERAYSTAT;
    Ifx_SCU_PLLERAYCON0 PLLERAYCON0;
    Ifx_SCU_PLLERAYCON1 PLLERAYCON1;
    Ifx_SCU_CCUCON0 CCUCON0;
    Ifx_SCU_CCUCON1 CCUCON1;
    Ifx_SCU_FDR FDR;
    Ifx_SCU_EXTCON EXTCON;
    Ifx_SCU_CCUCON2 CCUCON2;
    Ifx_SCU_CCUCON3 CCUCON3;
    Ifx_SCU_CCUCON4 CCUCON4;
    Ifx_SCU_CCUCON5 CCUCON5;
    Ifx_SCU_RSTSTAT RSTSTAT;
    unsigned char reserved_54[4];
    Ifx_SCU_RSTCON RSTCON;
    Ifx_SCU_ARSTDIS ARSTDIS;
    Ifx_SCU_SWRSTCON SWRSTCON;
    Ifx_SCU_RSTCON2 RSTCON2;
    unsigned char reserved_68[4];
    Ifx_SCU_EVRRSTCON EVRRSTCON;
    Ifx_SCU_ESRCFG ESRCFG[2];
    Ifx_SCU_ESROCFG ESROCFG;
    Ifx_SCU_SYSCON SYSCON;
    Ifx_SCU_CCUCON6 CCUCON6;
    Ifx_SCU_CCUCON7 CCUCON7;
    Ifx_SCU_CCUCON8 CCUCON8;
    unsigned char reserved_8C[16];
    Ifx_SCU_PDR PDR;
    Ifx_SCU_IOCR IOCR;
    Ifx_SCU_OUT OUT;
    Ifx_SCU_OMR OMR;
    Ifx_SCU_IN IN;
    Ifx_SCU_EVRSTAT EVRSTAT;
    Ifx_SCU_EVRDVSTAT EVRDVSTAT;
    Ifx_SCU_EVR13CON EVR13CON;
    Ifx_SCU_EVR33CON EVR33CON;
    Ifx_SCU_STSTAT STSTAT;
    unsigned char reserved_C4[4];
    Ifx_SCU_PMSWCR0 PMSWCR0;
    Ifx_SCU_PMSWSTAT PMSWSTAT;
    Ifx_SCU_PMSWSTATCLR PMSWSTATCLR;
    Ifx_SCU_PMCSR PMCSR[3];
    Ifx_SCU_DTSSTAT DTSSTAT;
    Ifx_SCU_DTSCON DTSCON;
    Ifx_SCU_PMSWCR1 PMSWCR1;
    unsigned char reserved_EC[4];
    Ifx_SCU_WDTS WDTS;
    Ifx_SCU_EMSR EMSR;
    Ifx_SCU_WDTCPU WDTCPU[3];
    Ifx_SCU_TRAPSTAT TRAPSTAT;
    Ifx_SCU_TRAPSET TRAPSET;
    Ifx_SCU_TRAPCLR TRAPCLR;
    Ifx_SCU_TRAPDIS TRAPDIS;
    Ifx_SCU_LCLCON LCLCON0;
    Ifx_SCU_LCLCON LCLCON1;
    Ifx_SCU_LCLTEST LCLTEST;
    Ifx_SCU_CHIPID CHIPID;
    Ifx_SCU_MANID MANID;
    unsigned char reserved_148[8];
    Ifx_SCU_SAFECON SAFECON;
    unsigned char reserved_154[16];
    Ifx_SCU_LBISTCTRL0 LBISTCTRL0;
    Ifx_SCU_LBISTCTRL1 LBISTCTRL1;
    Ifx_SCU_LBISTCTRL2 LBISTCTRL2;
    unsigned char reserved_170[28];
    Ifx_SCU_PDISC PDISC;
    unsigned char reserved_190[8];
    Ifx_SCU_EVRTRIM EVRTRIM;
    Ifx_SCU_EVRADCSTAT EVRADCSTAT;
    Ifx_SCU_EVRUVMON EVRUVMON;
    Ifx_SCU_EVROVMON EVROVMON;
    Ifx_SCU_EVRMONCTRL EVRMONCTRL;
    unsigned char reserved_1AC[4];
    Ifx_SCU_EVRSDCTRL1 EVRSDCTRL1;
    Ifx_SCU_EVRSDCTRL2 EVRSDCTRL2;
    Ifx_SCU_EVRSDCTRL3 EVRSDCTRL3;
    Ifx_SCU_EVRSDCTRL4 EVRSDCTRL4;
    Ifx_SCU_EVRSDCOEFF1 EVRSDCOEFF1;
    Ifx_SCU_EVRSDCOEFF2 EVRSDCOEFF2;
    Ifx_SCU_EVRSDCOEFF3 EVRSDCOEFF3;
    Ifx_SCU_EVRSDCOEFF4 EVRSDCOEFF4;
    Ifx_SCU_EVRSDCOEFF5 EVRSDCOEFF5;
    Ifx_SCU_EVRSDCOEFF6 EVRSDCOEFF6;
    unsigned char reserved_1D8[8];
    Ifx_SCU_OVCENABLE OVCENABLE;
    Ifx_SCU_OVCCON OVCCON;
    unsigned char reserved_1E8[40];
    Ifx_SCU_EICR EICR[4];
    Ifx_SCU_EIFR EIFR;
    Ifx_SCU_FMR FMR;
    Ifx_SCU_PDRR PDRR;
    Ifx_SCU_IGCR IGCR[4];
    unsigned char reserved_23C[4];
    Ifx_SCU_DTSLIM DTSLIM;
    unsigned char reserved_244[436];
    Ifx_SCU_ACCEN1 ACCEN1;
    Ifx_SCU_ACCEN0 ACCEN0;
} Ifx_SCU;
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxScu_reg.h" 2 3





#define MODULE_SCU (*(Ifx_SCU*)0xF0036000u)







#define SCU_ACCEN0 (*(volatile Ifx_SCU_ACCEN0*)0xF00363FCu)


#define SCU_ACCEN1 (*(volatile Ifx_SCU_ACCEN1*)0xF00363F8u)


#define SCU_ARSTDIS (*(volatile Ifx_SCU_ARSTDIS*)0xF003605Cu)


#define SCU_CCUCON0 (*(volatile Ifx_SCU_CCUCON0*)0xF0036030u)


#define SCU_CCUCON1 (*(volatile Ifx_SCU_CCUCON1*)0xF0036034u)


#define SCU_CCUCON2 (*(volatile Ifx_SCU_CCUCON2*)0xF0036040u)


#define SCU_CCUCON3 (*(volatile Ifx_SCU_CCUCON3*)0xF0036044u)


#define SCU_CCUCON4 (*(volatile Ifx_SCU_CCUCON4*)0xF0036048u)


#define SCU_CCUCON5 (*(volatile Ifx_SCU_CCUCON5*)0xF003604Cu)


#define SCU_CCUCON6 (*(volatile Ifx_SCU_CCUCON6*)0xF0036080u)


#define SCU_CCUCON7 (*(volatile Ifx_SCU_CCUCON7*)0xF0036084u)


#define SCU_CCUCON8 (*(volatile Ifx_SCU_CCUCON8*)0xF0036088u)


#define SCU_CHIPID (*(volatile Ifx_SCU_CHIPID*)0xF0036140u)


#define SCU_DTSCON (*(volatile Ifx_SCU_DTSCON*)0xF00360E4u)


#define SCU_DTSLIM (*(volatile Ifx_SCU_DTSLIM*)0xF0036240u)


#define SCU_DTSSTAT (*(volatile Ifx_SCU_DTSSTAT*)0xF00360E0u)


#define SCU_EICR0 (*(volatile Ifx_SCU_EICR*)0xF0036210u)


#define SCU_EICR1 (*(volatile Ifx_SCU_EICR*)0xF0036214u)


#define SCU_EICR2 (*(volatile Ifx_SCU_EICR*)0xF0036218u)


#define SCU_EICR3 (*(volatile Ifx_SCU_EICR*)0xF003621Cu)


#define SCU_EIFR (*(volatile Ifx_SCU_EIFR*)0xF0036220u)


#define SCU_EMSR (*(volatile Ifx_SCU_EMSR*)0xF00360FCu)


#define SCU_ESRCFG0 (*(volatile Ifx_SCU_ESRCFG*)0xF0036070u)


#define SCU_ESRCFG1 (*(volatile Ifx_SCU_ESRCFG*)0xF0036074u)


#define SCU_ESROCFG (*(volatile Ifx_SCU_ESROCFG*)0xF0036078u)


#define SCU_EVR13CON (*(volatile Ifx_SCU_EVR13CON*)0xF00360B8u)


#define SCU_EVR33CON (*(volatile Ifx_SCU_EVR33CON*)0xF00360BCu)


#define SCU_EVRADCSTAT (*(volatile Ifx_SCU_EVRADCSTAT*)0xF003619Cu)


#define SCU_EVRDVSTAT (*(volatile Ifx_SCU_EVRDVSTAT*)0xF00360B4u)


#define SCU_EVRMONCTRL (*(volatile Ifx_SCU_EVRMONCTRL*)0xF00361A8u)


#define SCU_EVROVMON (*(volatile Ifx_SCU_EVROVMON*)0xF00361A4u)


#define SCU_EVRRSTCON (*(volatile Ifx_SCU_EVRRSTCON*)0xF003606Cu)


#define SCU_EVRSDCOEFF1 (*(volatile Ifx_SCU_EVRSDCOEFF1*)0xF00361C0u)


#define SCU_EVRSDCOEFF2 (*(volatile Ifx_SCU_EVRSDCOEFF2*)0xF00361C4u)


#define SCU_EVRSDCOEFF3 (*(volatile Ifx_SCU_EVRSDCOEFF3*)0xF00361C8u)


#define SCU_EVRSDCOEFF4 (*(volatile Ifx_SCU_EVRSDCOEFF4*)0xF00361CCu)


#define SCU_EVRSDCOEFF5 (*(volatile Ifx_SCU_EVRSDCOEFF5*)0xF00361D0u)


#define SCU_EVRSDCOEFF6 (*(volatile Ifx_SCU_EVRSDCOEFF6*)0xF00361D4u)


#define SCU_EVRSDCTRL1 (*(volatile Ifx_SCU_EVRSDCTRL1*)0xF00361B0u)


#define SCU_EVRSDCTRL2 (*(volatile Ifx_SCU_EVRSDCTRL2*)0xF00361B4u)


#define SCU_EVRSDCTRL3 (*(volatile Ifx_SCU_EVRSDCTRL3*)0xF00361B8u)


#define SCU_EVRSDCTRL4 (*(volatile Ifx_SCU_EVRSDCTRL4*)0xF00361BCu)


#define SCU_EVRSTAT (*(volatile Ifx_SCU_EVRSTAT*)0xF00360B0u)


#define SCU_EVRTRIM (*(volatile Ifx_SCU_EVRTRIM*)0xF0036198u)


#define SCU_EVRUVMON (*(volatile Ifx_SCU_EVRUVMON*)0xF00361A0u)


#define SCU_EXTCON (*(volatile Ifx_SCU_EXTCON*)0xF003603Cu)


#define SCU_FDR (*(volatile Ifx_SCU_FDR*)0xF0036038u)


#define SCU_FMR (*(volatile Ifx_SCU_FMR*)0xF0036224u)


#define SCU_ID (*(volatile Ifx_SCU_ID*)0xF0036008u)


#define SCU_IGCR0 (*(volatile Ifx_SCU_IGCR*)0xF003622Cu)


#define SCU_IGCR1 (*(volatile Ifx_SCU_IGCR*)0xF0036230u)


#define SCU_IGCR2 (*(volatile Ifx_SCU_IGCR*)0xF0036234u)


#define SCU_IGCR3 (*(volatile Ifx_SCU_IGCR*)0xF0036238u)


#define SCU_IN (*(volatile Ifx_SCU_IN*)0xF00360ACu)


#define SCU_IOCR (*(volatile Ifx_SCU_IOCR*)0xF00360A0u)


#define SCU_LBISTCTRL0 (*(volatile Ifx_SCU_LBISTCTRL0*)0xF0036164u)


#define SCU_LBISTCTRL1 (*(volatile Ifx_SCU_LBISTCTRL1*)0xF0036168u)


#define SCU_LBISTCTRL2 (*(volatile Ifx_SCU_LBISTCTRL2*)0xF003616Cu)


#define SCU_LCLCON0 (*(volatile Ifx_SCU_LCLCON*)0xF0036134u)


#define SCU_LCLCON1 (*(volatile Ifx_SCU_LCLCON*)0xF0036138u)


#define SCU_LCLTEST (*(volatile Ifx_SCU_LCLTEST*)0xF003613Cu)


#define SCU_MANID (*(volatile Ifx_SCU_MANID*)0xF0036144u)


#define SCU_OMR (*(volatile Ifx_SCU_OMR*)0xF00360A8u)


#define SCU_OSCCON (*(volatile Ifx_SCU_OSCCON*)0xF0036010u)


#define SCU_OUT (*(volatile Ifx_SCU_OUT*)0xF00360A4u)


#define SCU_OVCCON (*(volatile Ifx_SCU_OVCCON*)0xF00361E4u)


#define SCU_OVCENABLE (*(volatile Ifx_SCU_OVCENABLE*)0xF00361E0u)


#define SCU_PDISC (*(volatile Ifx_SCU_PDISC*)0xF003618Cu)


#define SCU_PDR (*(volatile Ifx_SCU_PDR*)0xF003609Cu)


#define SCU_PDRR (*(volatile Ifx_SCU_PDRR*)0xF0036228u)


#define SCU_PLLCON0 (*(volatile Ifx_SCU_PLLCON0*)0xF0036018u)


#define SCU_PLLCON1 (*(volatile Ifx_SCU_PLLCON1*)0xF003601Cu)


#define SCU_PLLCON2 (*(volatile Ifx_SCU_PLLCON2*)0xF0036020u)


#define SCU_PLLERAYCON0 (*(volatile Ifx_SCU_PLLERAYCON0*)0xF0036028u)


#define SCU_PLLERAYCON1 (*(volatile Ifx_SCU_PLLERAYCON1*)0xF003602Cu)


#define SCU_PLLERAYSTAT (*(volatile Ifx_SCU_PLLERAYSTAT*)0xF0036024u)


#define SCU_PLLSTAT (*(volatile Ifx_SCU_PLLSTAT*)0xF0036014u)


#define SCU_PMCSR0 (*(volatile Ifx_SCU_PMCSR*)0xF00360D4u)


#define SCU_PMCSR1 (*(volatile Ifx_SCU_PMCSR*)0xF00360D8u)


#define SCU_PMCSR2 (*(volatile Ifx_SCU_PMCSR*)0xF00360DCu)


#define SCU_PMSWCR0 (*(volatile Ifx_SCU_PMSWCR0*)0xF00360C8u)


#define SCU_PMSWCR1 (*(volatile Ifx_SCU_PMSWCR1*)0xF00360E8u)


#define SCU_PMSWSTAT (*(volatile Ifx_SCU_PMSWSTAT*)0xF00360CCu)


#define SCU_PMSWSTATCLR (*(volatile Ifx_SCU_PMSWSTATCLR*)0xF00360D0u)


#define SCU_RSTCON (*(volatile Ifx_SCU_RSTCON*)0xF0036058u)


#define SCU_RSTCON2 (*(volatile Ifx_SCU_RSTCON2*)0xF0036064u)


#define SCU_RSTSTAT (*(volatile Ifx_SCU_RSTSTAT*)0xF0036050u)


#define SCU_SAFECON (*(volatile Ifx_SCU_SAFECON*)0xF0036150u)


#define SCU_STSTAT (*(volatile Ifx_SCU_STSTAT*)0xF00360C0u)


#define SCU_SWRSTCON (*(volatile Ifx_SCU_SWRSTCON*)0xF0036060u)


#define SCU_SYSCON (*(volatile Ifx_SCU_SYSCON*)0xF003607Cu)


#define SCU_TRAPCLR (*(volatile Ifx_SCU_TRAPCLR*)0xF003612Cu)


#define SCU_TRAPDIS (*(volatile Ifx_SCU_TRAPDIS*)0xF0036130u)


#define SCU_TRAPSET (*(volatile Ifx_SCU_TRAPSET*)0xF0036128u)


#define SCU_TRAPSTAT (*(volatile Ifx_SCU_TRAPSTAT*)0xF0036124u)


#define SCU_WDTCPU0_CON0 (*(volatile Ifx_SCU_WDTCPU_CON0*)0xF0036100u)




#define SCU_WDTCPU0CON0 (SCU_WDTCPU0_CON0)


#define SCU_WDTCPU0_CON1 (*(volatile Ifx_SCU_WDTCPU_CON1*)0xF0036104u)




#define SCU_WDTCPU0CON1 (SCU_WDTCPU0_CON1)


#define SCU_WDTCPU0_SR (*(volatile Ifx_SCU_WDTCPU_SR*)0xF0036108u)




#define SCU_WDTCPU0SR (SCU_WDTCPU0_SR)


#define SCU_WDTCPU1_CON0 (*(volatile Ifx_SCU_WDTCPU_CON0*)0xF003610Cu)




#define SCU_WDTCPU1CON0 (SCU_WDTCPU1_CON0)


#define SCU_WDTCPU1_CON1 (*(volatile Ifx_SCU_WDTCPU_CON1*)0xF0036110u)




#define SCU_WDTCPU1CON1 (SCU_WDTCPU1_CON1)


#define SCU_WDTCPU1_SR (*(volatile Ifx_SCU_WDTCPU_SR*)0xF0036114u)




#define SCU_WDTCPU1SR (SCU_WDTCPU1_SR)


#define SCU_WDTCPU2_CON0 (*(volatile Ifx_SCU_WDTCPU_CON0*)0xF0036118u)




#define SCU_WDTCPU2CON0 (SCU_WDTCPU2_CON0)


#define SCU_WDTCPU2_CON1 (*(volatile Ifx_SCU_WDTCPU_CON1*)0xF003611Cu)




#define SCU_WDTCPU2CON1 (SCU_WDTCPU2_CON1)


#define SCU_WDTCPU2_SR (*(volatile Ifx_SCU_WDTCPU_SR*)0xF0036120u)




#define SCU_WDTCPU2SR (SCU_WDTCPU2_SR)


#define SCU_WDTS_CON0 (*(volatile Ifx_SCU_WDTS_CON0*)0xF00360F0u)




#define SCU_WDTSCON0 (SCU_WDTS_CON0)


#define SCU_WDTS_CON1 (*(volatile Ifx_SCU_WDTS_CON1*)0xF00360F4u)




#define SCU_WDTSCON1 (SCU_WDTS_CON1)


#define SCU_WDTS_SR (*(volatile Ifx_SCU_WDTS_SR*)0xF00360F8u)




#define SCU_WDTSSR (SCU_WDTS_SR)
# 61 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_reg.h" 2 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxSent_reg.h" 1 3
# 34 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxSent_reg.h" 3
#define IFXSENT_REG_H 1

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxSent_regdef.h" 1 3
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxSent_regdef.h" 3
#define IFXSENT_REGDEF_H 1







typedef struct _Ifx_SENT_ACCEN0_Bits
{
    unsigned int EN0:1;
    unsigned int EN1:1;
    unsigned int EN2:1;
    unsigned int EN3:1;
    unsigned int EN4:1;
    unsigned int EN5:1;
    unsigned int EN6:1;
    unsigned int EN7:1;
    unsigned int EN8:1;
    unsigned int EN9:1;
    unsigned int EN10:1;
    unsigned int EN11:1;
    unsigned int EN12:1;
    unsigned int EN13:1;
    unsigned int EN14:1;
    unsigned int EN15:1;
    unsigned int EN16:1;
    unsigned int EN17:1;
    unsigned int EN18:1;
    unsigned int EN19:1;
    unsigned int EN20:1;
    unsigned int EN21:1;
    unsigned int EN22:1;
    unsigned int EN23:1;
    unsigned int EN24:1;
    unsigned int EN25:1;
    unsigned int EN26:1;
    unsigned int EN27:1;
    unsigned int EN28:1;
    unsigned int EN29:1;
    unsigned int EN30:1;
    unsigned int EN31:1;
} Ifx_SENT_ACCEN0_Bits;


typedef struct _Ifx_SENT_ACCEN1_Bits
{
    unsigned int reserved_0:32;
} Ifx_SENT_ACCEN1_Bits;


typedef struct _Ifx_SENT_CH_CFDR_Bits
{
    unsigned int DIV:12;
    unsigned int reserved_12:4;
    unsigned int DIVM:12;
    unsigned int reserved_28:4;
} Ifx_SENT_CH_CFDR_Bits;


typedef struct _Ifx_SENT_CH_CPDR_Bits
{
    unsigned int PDIV:12;
    unsigned int reserved_12:20;
} Ifx_SENT_CH_CPDR_Bits;


typedef struct _Ifx_SENT_CH_INP_Bits
{
    unsigned int RSI:4;
    unsigned int RDI:4;
    unsigned int RBI:4;
    unsigned int TDI:4;
    unsigned int TBI:4;
    unsigned int ERRI:4;
    unsigned int SDI:4;
    unsigned int WDI:4;
} Ifx_SENT_CH_INP_Bits;


typedef struct _Ifx_SENT_CH_INTCLR_Bits
{
    unsigned int RSI:1;
    unsigned int RDI:1;
    unsigned int RBI:1;
    unsigned int TDI:1;
    unsigned int TBI:1;
    unsigned int FRI:1;
    unsigned int FDI:1;
    unsigned int NNI:1;
    unsigned int NVI:1;
    unsigned int CRCI:1;
    unsigned int WSI:1;
    unsigned int SDI:1;
    unsigned int SCRI:1;
    unsigned int WDI:1;
    unsigned int reserved_14:18;
} Ifx_SENT_CH_INTCLR_Bits;


typedef struct _Ifx_SENT_CH_INTEN_Bits
{
    unsigned int RSI:1;
    unsigned int RDI:1;
    unsigned int RBI:1;
    unsigned int TDI:1;
    unsigned int TBI:1;
    unsigned int FRI:1;
    unsigned int FDI:1;
    unsigned int NNI:1;
    unsigned int NVI:1;
    unsigned int CRCI:1;
    unsigned int WSI:1;
    unsigned int SDI:1;
    unsigned int SCRI:1;
    unsigned int WDI:1;
    unsigned int reserved_14:18;
} Ifx_SENT_CH_INTEN_Bits;


typedef struct _Ifx_SENT_CH_INTSET_Bits
{
    unsigned int RSI:1;
    unsigned int RDI:1;
    unsigned int RBI:1;
    unsigned int TDI:1;
    unsigned int TBI:1;
    unsigned int FRI:1;
    unsigned int FDI:1;
    unsigned int NNI:1;
    unsigned int NVI:1;
    unsigned int CRCI:1;
    unsigned int WSI:1;
    unsigned int SDI:1;
    unsigned int SCRI:1;
    unsigned int WDI:1;
    unsigned int reserved_14:18;
} Ifx_SENT_CH_INTSET_Bits;


typedef struct _Ifx_SENT_CH_INTSTAT_Bits
{
    unsigned int RSI:1;
    unsigned int RDI:1;
    unsigned int RBI:1;
    unsigned int TDI:1;
    unsigned int TBI:1;
    unsigned int FRI:1;
    unsigned int FDI:1;
    unsigned int NNI:1;
    unsigned int NVI:1;
    unsigned int CRCI:1;
    unsigned int WSI:1;
    unsigned int SDI:1;
    unsigned int SCRI:1;
    unsigned int WDI:1;
    unsigned int reserved_14:18;
} Ifx_SENT_CH_INTSTAT_Bits;


typedef struct _Ifx_SENT_CH_IOCR_Bits
{
    unsigned int ALTI:2;
    unsigned int reserved_2:2;
    unsigned int DEPTH:4;
    unsigned int OIE:1;
    unsigned int IIE:1;
    unsigned int CEC:1;
    unsigned int reserved_11:1;
    unsigned int REG:1;
    unsigned int FEG:1;
    unsigned int CREG:1;
    unsigned int CFEG:1;
    unsigned int ETS:4;
    unsigned int EC:8;
    unsigned int CTR:1;
    unsigned int TRM:1;
    unsigned int RXM:1;
    unsigned int TXM:1;
} Ifx_SENT_CH_IOCR_Bits;


typedef struct _Ifx_SENT_CH_RCR_Bits
{
    unsigned int CEN:1;
    unsigned int IEP:1;
    unsigned int ACE:1;
    unsigned int SNI:1;
    unsigned int SDP:1;
    unsigned int SCDIS:1;
    unsigned int CDIS:1;
    unsigned int CFC:1;
    unsigned int FRL:8;
    unsigned int CRZ:1;
    unsigned int ESF:1;
    unsigned int IDE:1;
    unsigned int SUSEN:1;
    unsigned int reserved_20:12;
} Ifx_SENT_CH_RCR_Bits;


typedef struct _Ifx_SENT_CH_RSR_Bits
{
    unsigned int CRC:4;
    unsigned int CST:2;
    unsigned int reserved_6:2;
    unsigned int SCN:4;
    unsigned int reserved_12:20;
} Ifx_SENT_CH_RSR_Bits;


typedef struct _Ifx_SENT_CH_SCR_Bits
{
    unsigned int PLEN:6;
    unsigned int TRIG:2;
    unsigned int DEL:6;
    unsigned int BASE:1;
    unsigned int TRQ:1;
    unsigned int reserved_16:16;
} Ifx_SENT_CH_SCR_Bits;


typedef struct _Ifx_SENT_CH_SDS_Bits
{
    unsigned int SD:16;
    unsigned int MID:8;
    unsigned int SCRC:6;
    unsigned int reserved_30:1;
    unsigned int CON:1;
} Ifx_SENT_CH_SDS_Bits;


typedef struct _Ifx_SENT_CH_VIEW_Bits
{
    unsigned int RDNP0:3;
    unsigned int reserved_3:1;
    unsigned int RDNP1:3;
    unsigned int reserved_7:1;
    unsigned int RDNP2:3;
    unsigned int reserved_11:1;
    unsigned int RDNP3:3;
    unsigned int reserved_15:1;
    unsigned int RDNP4:3;
    unsigned int reserved_19:1;
    unsigned int RDNP5:3;
    unsigned int reserved_23:1;
    unsigned int RDNP6:3;
    unsigned int reserved_27:1;
    unsigned int RDNP7:3;
    unsigned int reserved_31:1;
} Ifx_SENT_CH_VIEW_Bits;


typedef struct _Ifx_SENT_CH_WDT_Bits
{
    unsigned int WDLx:16;
    unsigned int reserved_16:16;
} Ifx_SENT_CH_WDT_Bits;


typedef struct _Ifx_SENT_CLC_Bits
{
    unsigned int DISR:1;
    unsigned int DISS:1;
    unsigned int reserved_2:1;
    unsigned int EDIS:1;
    unsigned int reserved_4:4;
    unsigned int RMC:8;
    unsigned int reserved_16:16;
} Ifx_SENT_CLC_Bits;


typedef struct _Ifx_SENT_FDR_Bits
{
    unsigned int STEP:10;
    unsigned int reserved_10:4;
    unsigned int DM:2;
    unsigned int RESULT:10;
    unsigned int reserved_26:6;
} Ifx_SENT_FDR_Bits;


typedef struct _Ifx_SENT_ID_Bits
{
    unsigned int MODREV:8;
    unsigned int MODTYPE:8;
    unsigned int MODNUMBER:16;
} Ifx_SENT_ID_Bits;


typedef struct _Ifx_SENT_INTOV_Bits
{
    unsigned int IPC0:1;
    unsigned int IPC1:1;
    unsigned int IPC2:1;
    unsigned int IPC3:1;
    unsigned int IPC4:1;
    unsigned int IPC5:1;
    unsigned int IPC6:1;
    unsigned int IPC7:1;
    unsigned int IPC8:1;
    unsigned int IPC9:1;
    unsigned int reserved_10:22;
} Ifx_SENT_INTOV_Bits;


typedef struct _Ifx_SENT_KRST0_Bits
{
    unsigned int RST:1;
    unsigned int RSTSTAT:1;
    unsigned int reserved_2:30;
} Ifx_SENT_KRST0_Bits;


typedef struct _Ifx_SENT_KRST1_Bits
{
    unsigned int RST:1;
    unsigned int reserved_1:31;
} Ifx_SENT_KRST1_Bits;


typedef struct _Ifx_SENT_KRSTCLR_Bits
{
    unsigned int CLR:1;
    unsigned int reserved_1:31;
} Ifx_SENT_KRSTCLR_Bits;


typedef struct _Ifx_SENT_OCS_Bits
{
    unsigned int reserved_0:24;
    unsigned int SUS:4;
    unsigned int SUS_P:1;
    unsigned int SUSSTA:1;
    unsigned int reserved_30:2;
} Ifx_SENT_OCS_Bits;


typedef struct _Ifx_SENT_RDR_Bits
{
    unsigned int RD0:4;
    unsigned int RD1:4;
    unsigned int RD2:4;
    unsigned int RD3:4;
    unsigned int RD4:4;
    unsigned int RD5:4;
    unsigned int RD6:4;
    unsigned int RD7:4;
} Ifx_SENT_RDR_Bits;


typedef struct _Ifx_SENT_RTS_Bits
{
    unsigned int LTS:32;
} Ifx_SENT_RTS_Bits;


typedef struct _Ifx_SENT_TPD_Bits
{
    unsigned int TDIV:20;
    unsigned int reserved_20:12;
} Ifx_SENT_TPD_Bits;


typedef struct _Ifx_SENT_TSR_Bits
{
    unsigned int CTS:32;
} Ifx_SENT_TSR_Bits;







typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SENT_ACCEN0_Bits B;
} Ifx_SENT_ACCEN0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SENT_ACCEN1_Bits B;
} Ifx_SENT_ACCEN1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SENT_CH_CFDR_Bits B;
} Ifx_SENT_CH_CFDR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SENT_CH_CPDR_Bits B;
} Ifx_SENT_CH_CPDR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SENT_CH_INP_Bits B;
} Ifx_SENT_CH_INP;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SENT_CH_INTCLR_Bits B;
} Ifx_SENT_CH_INTCLR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SENT_CH_INTEN_Bits B;
} Ifx_SENT_CH_INTEN;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SENT_CH_INTSET_Bits B;
} Ifx_SENT_CH_INTSET;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SENT_CH_INTSTAT_Bits B;
} Ifx_SENT_CH_INTSTAT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SENT_CH_IOCR_Bits B;
} Ifx_SENT_CH_IOCR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SENT_CH_RCR_Bits B;
} Ifx_SENT_CH_RCR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SENT_CH_RSR_Bits B;
} Ifx_SENT_CH_RSR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SENT_CH_SCR_Bits B;
} Ifx_SENT_CH_SCR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SENT_CH_SDS_Bits B;
} Ifx_SENT_CH_SDS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SENT_CH_VIEW_Bits B;
} Ifx_SENT_CH_VIEW;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SENT_CH_WDT_Bits B;
} Ifx_SENT_CH_WDT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SENT_CLC_Bits B;
} Ifx_SENT_CLC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SENT_FDR_Bits B;
} Ifx_SENT_FDR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SENT_ID_Bits B;
} Ifx_SENT_ID;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SENT_INTOV_Bits B;
} Ifx_SENT_INTOV;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SENT_KRST0_Bits B;
} Ifx_SENT_KRST0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SENT_KRST1_Bits B;
} Ifx_SENT_KRST1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SENT_KRSTCLR_Bits B;
} Ifx_SENT_KRSTCLR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SENT_OCS_Bits B;
} Ifx_SENT_OCS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SENT_RDR_Bits B;
} Ifx_SENT_RDR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SENT_RTS_Bits B;
} Ifx_SENT_RTS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SENT_TPD_Bits B;
} Ifx_SENT_TPD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SENT_TSR_Bits B;
} Ifx_SENT_TSR;
# 644 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxSent_regdef.h" 3
typedef volatile struct _Ifx_SENT_CH
{
    Ifx_SENT_CH_CPDR CPDR;
    Ifx_SENT_CH_CFDR CFDR;
    Ifx_SENT_CH_RCR RCR;
    Ifx_SENT_CH_RSR RSR;
    Ifx_SENT_CH_SDS SDS;
    Ifx_SENT_CH_IOCR IOCR;
    Ifx_SENT_CH_SCR SCR;
    Ifx_SENT_CH_VIEW VIEW;
    Ifx_SENT_CH_INTSTAT INTSTAT;
    Ifx_SENT_CH_INTSET INTSET;
    Ifx_SENT_CH_INTCLR INTCLR;
    Ifx_SENT_CH_INTEN INTEN;
    Ifx_SENT_CH_INP INP;
    Ifx_SENT_CH_WDT WDT;
    unsigned char reserved_38[8];
} Ifx_SENT_CH;
# 674 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxSent_regdef.h" 3
typedef volatile struct _Ifx_SENT
{
    Ifx_SENT_CLC CLC;
    unsigned char reserved_4[4];
    Ifx_SENT_ID ID;
    Ifx_SENT_FDR FDR;
    unsigned char reserved_10[4];
    Ifx_SENT_INTOV INTOV;
    Ifx_SENT_TSR TSR;
    Ifx_SENT_TPD TPD;
    unsigned char reserved_20[96];
    Ifx_SENT_RDR RDR[10];
    unsigned char reserved_A8[64];
    Ifx_SENT_OCS OCS;
    Ifx_SENT_KRSTCLR KRSTCLR;
    Ifx_SENT_KRST1 KRST1;
    Ifx_SENT_KRST0 KRST0;
    Ifx_SENT_ACCEN1 ACCEN1;
    Ifx_SENT_ACCEN0 ACCEN0;
    Ifx_SENT_CH CH[10];
    unsigned char reserved_380[1792];
    Ifx_SENT_RTS RTS[10];
    unsigned char reserved_AA8[88];
} Ifx_SENT;
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxSent_reg.h" 2 3





#define MODULE_SENT (*(Ifx_SENT*)0xF0003000u)







#define SENT_ACCEN0 (*(volatile Ifx_SENT_ACCEN0*)0xF00030FCu)


#define SENT_ACCEN1 (*(volatile Ifx_SENT_ACCEN1*)0xF00030F8u)


#define SENT_CH0_CFDR (*(volatile Ifx_SENT_CH_CFDR*)0xF0003104u)




#define SENT_CFDR0 (SENT_CH0_CFDR)


#define SENT_CH0_CPDR (*(volatile Ifx_SENT_CH_CPDR*)0xF0003100u)




#define SENT_CPDR0 (SENT_CH0_CPDR)


#define SENT_CH0_INP (*(volatile Ifx_SENT_CH_INP*)0xF0003130u)




#define SENT_INP0 (SENT_CH0_INP)


#define SENT_CH0_INTCLR (*(volatile Ifx_SENT_CH_INTCLR*)0xF0003128u)




#define SENT_INTCLR0 (SENT_CH0_INTCLR)


#define SENT_CH0_INTEN (*(volatile Ifx_SENT_CH_INTEN*)0xF000312Cu)




#define SENT_INTEN0 (SENT_CH0_INTEN)


#define SENT_CH0_INTSET (*(volatile Ifx_SENT_CH_INTSET*)0xF0003124u)




#define SENT_INTSET0 (SENT_CH0_INTSET)


#define SENT_CH0_INTSTAT (*(volatile Ifx_SENT_CH_INTSTAT*)0xF0003120u)




#define SENT_INTSTAT0 (SENT_CH0_INTSTAT)


#define SENT_CH0_IOCR (*(volatile Ifx_SENT_CH_IOCR*)0xF0003114u)




#define SENT_IOCR0 (SENT_CH0_IOCR)


#define SENT_CH0_RCR (*(volatile Ifx_SENT_CH_RCR*)0xF0003108u)




#define SENT_RCR0 (SENT_CH0_RCR)


#define SENT_CH0_RSR (*(volatile Ifx_SENT_CH_RSR*)0xF000310Cu)




#define SENT_RSR0 (SENT_CH0_RSR)


#define SENT_CH0_SCR (*(volatile Ifx_SENT_CH_SCR*)0xF0003118u)




#define SENT_SCR0 (SENT_CH0_SCR)


#define SENT_CH0_SDS (*(volatile Ifx_SENT_CH_SDS*)0xF0003110u)




#define SENT_SDS0 (SENT_CH0_SDS)


#define SENT_CH0_VIEW (*(volatile Ifx_SENT_CH_VIEW*)0xF000311Cu)




#define SENT_VIEW0 (SENT_CH0_VIEW)


#define SENT_CH0_WDT (*(volatile Ifx_SENT_CH_WDT*)0xF0003134u)




#define SENT_WDT0 (SENT_CH0_WDT)


#define SENT_CH1_CFDR (*(volatile Ifx_SENT_CH_CFDR*)0xF0003144u)




#define SENT_CFDR1 (SENT_CH1_CFDR)


#define SENT_CH1_CPDR (*(volatile Ifx_SENT_CH_CPDR*)0xF0003140u)




#define SENT_CPDR1 (SENT_CH1_CPDR)


#define SENT_CH1_INP (*(volatile Ifx_SENT_CH_INP*)0xF0003170u)




#define SENT_INP1 (SENT_CH1_INP)


#define SENT_CH1_INTCLR (*(volatile Ifx_SENT_CH_INTCLR*)0xF0003168u)




#define SENT_INTCLR1 (SENT_CH1_INTCLR)


#define SENT_CH1_INTEN (*(volatile Ifx_SENT_CH_INTEN*)0xF000316Cu)




#define SENT_INTEN1 (SENT_CH1_INTEN)


#define SENT_CH1_INTSET (*(volatile Ifx_SENT_CH_INTSET*)0xF0003164u)




#define SENT_INTSET1 (SENT_CH1_INTSET)


#define SENT_CH1_INTSTAT (*(volatile Ifx_SENT_CH_INTSTAT*)0xF0003160u)




#define SENT_INTSTAT1 (SENT_CH1_INTSTAT)


#define SENT_CH1_IOCR (*(volatile Ifx_SENT_CH_IOCR*)0xF0003154u)




#define SENT_IOCR1 (SENT_CH1_IOCR)


#define SENT_CH1_RCR (*(volatile Ifx_SENT_CH_RCR*)0xF0003148u)




#define SENT_RCR1 (SENT_CH1_RCR)


#define SENT_CH1_RSR (*(volatile Ifx_SENT_CH_RSR*)0xF000314Cu)




#define SENT_RSR1 (SENT_CH1_RSR)


#define SENT_CH1_SCR (*(volatile Ifx_SENT_CH_SCR*)0xF0003158u)




#define SENT_SCR1 (SENT_CH1_SCR)


#define SENT_CH1_SDS (*(volatile Ifx_SENT_CH_SDS*)0xF0003150u)




#define SENT_SDS1 (SENT_CH1_SDS)


#define SENT_CH1_VIEW (*(volatile Ifx_SENT_CH_VIEW*)0xF000315Cu)




#define SENT_VIEW1 (SENT_CH1_VIEW)


#define SENT_CH1_WDT (*(volatile Ifx_SENT_CH_WDT*)0xF0003174u)




#define SENT_WDT1 (SENT_CH1_WDT)


#define SENT_CH2_CFDR (*(volatile Ifx_SENT_CH_CFDR*)0xF0003184u)




#define SENT_CFDR2 (SENT_CH2_CFDR)


#define SENT_CH2_CPDR (*(volatile Ifx_SENT_CH_CPDR*)0xF0003180u)




#define SENT_CPDR2 (SENT_CH2_CPDR)


#define SENT_CH2_INP (*(volatile Ifx_SENT_CH_INP*)0xF00031B0u)




#define SENT_INP2 (SENT_CH2_INP)


#define SENT_CH2_INTCLR (*(volatile Ifx_SENT_CH_INTCLR*)0xF00031A8u)




#define SENT_INTCLR2 (SENT_CH2_INTCLR)


#define SENT_CH2_INTEN (*(volatile Ifx_SENT_CH_INTEN*)0xF00031ACu)




#define SENT_INTEN2 (SENT_CH2_INTEN)


#define SENT_CH2_INTSET (*(volatile Ifx_SENT_CH_INTSET*)0xF00031A4u)




#define SENT_INTSET2 (SENT_CH2_INTSET)


#define SENT_CH2_INTSTAT (*(volatile Ifx_SENT_CH_INTSTAT*)0xF00031A0u)




#define SENT_INTSTAT2 (SENT_CH2_INTSTAT)


#define SENT_CH2_IOCR (*(volatile Ifx_SENT_CH_IOCR*)0xF0003194u)




#define SENT_IOCR2 (SENT_CH2_IOCR)


#define SENT_CH2_RCR (*(volatile Ifx_SENT_CH_RCR*)0xF0003188u)




#define SENT_RCR2 (SENT_CH2_RCR)


#define SENT_CH2_RSR (*(volatile Ifx_SENT_CH_RSR*)0xF000318Cu)




#define SENT_RSR2 (SENT_CH2_RSR)


#define SENT_CH2_SCR (*(volatile Ifx_SENT_CH_SCR*)0xF0003198u)




#define SENT_SCR2 (SENT_CH2_SCR)


#define SENT_CH2_SDS (*(volatile Ifx_SENT_CH_SDS*)0xF0003190u)




#define SENT_SDS2 (SENT_CH2_SDS)


#define SENT_CH2_VIEW (*(volatile Ifx_SENT_CH_VIEW*)0xF000319Cu)




#define SENT_VIEW2 (SENT_CH2_VIEW)


#define SENT_CH2_WDT (*(volatile Ifx_SENT_CH_WDT*)0xF00031B4u)




#define SENT_WDT2 (SENT_CH2_WDT)


#define SENT_CH3_CFDR (*(volatile Ifx_SENT_CH_CFDR*)0xF00031C4u)




#define SENT_CFDR3 (SENT_CH3_CFDR)


#define SENT_CH3_CPDR (*(volatile Ifx_SENT_CH_CPDR*)0xF00031C0u)




#define SENT_CPDR3 (SENT_CH3_CPDR)


#define SENT_CH3_INP (*(volatile Ifx_SENT_CH_INP*)0xF00031F0u)




#define SENT_INP3 (SENT_CH3_INP)


#define SENT_CH3_INTCLR (*(volatile Ifx_SENT_CH_INTCLR*)0xF00031E8u)




#define SENT_INTCLR3 (SENT_CH3_INTCLR)


#define SENT_CH3_INTEN (*(volatile Ifx_SENT_CH_INTEN*)0xF00031ECu)




#define SENT_INTEN3 (SENT_CH3_INTEN)


#define SENT_CH3_INTSET (*(volatile Ifx_SENT_CH_INTSET*)0xF00031E4u)




#define SENT_INTSET3 (SENT_CH3_INTSET)


#define SENT_CH3_INTSTAT (*(volatile Ifx_SENT_CH_INTSTAT*)0xF00031E0u)




#define SENT_INTSTAT3 (SENT_CH3_INTSTAT)


#define SENT_CH3_IOCR (*(volatile Ifx_SENT_CH_IOCR*)0xF00031D4u)




#define SENT_IOCR3 (SENT_CH3_IOCR)


#define SENT_CH3_RCR (*(volatile Ifx_SENT_CH_RCR*)0xF00031C8u)




#define SENT_RCR3 (SENT_CH3_RCR)


#define SENT_CH3_RSR (*(volatile Ifx_SENT_CH_RSR*)0xF00031CCu)




#define SENT_RSR3 (SENT_CH3_RSR)


#define SENT_CH3_SCR (*(volatile Ifx_SENT_CH_SCR*)0xF00031D8u)




#define SENT_SCR3 (SENT_CH3_SCR)


#define SENT_CH3_SDS (*(volatile Ifx_SENT_CH_SDS*)0xF00031D0u)




#define SENT_SDS3 (SENT_CH3_SDS)


#define SENT_CH3_VIEW (*(volatile Ifx_SENT_CH_VIEW*)0xF00031DCu)




#define SENT_VIEW3 (SENT_CH3_VIEW)


#define SENT_CH3_WDT (*(volatile Ifx_SENT_CH_WDT*)0xF00031F4u)




#define SENT_WDT3 (SENT_CH3_WDT)


#define SENT_CH4_CFDR (*(volatile Ifx_SENT_CH_CFDR*)0xF0003204u)




#define SENT_CFDR4 (SENT_CH4_CFDR)


#define SENT_CH4_CPDR (*(volatile Ifx_SENT_CH_CPDR*)0xF0003200u)




#define SENT_CPDR4 (SENT_CH4_CPDR)


#define SENT_CH4_INP (*(volatile Ifx_SENT_CH_INP*)0xF0003230u)




#define SENT_INP4 (SENT_CH4_INP)


#define SENT_CH4_INTCLR (*(volatile Ifx_SENT_CH_INTCLR*)0xF0003228u)




#define SENT_INTCLR4 (SENT_CH4_INTCLR)


#define SENT_CH4_INTEN (*(volatile Ifx_SENT_CH_INTEN*)0xF000322Cu)




#define SENT_INTEN4 (SENT_CH4_INTEN)


#define SENT_CH4_INTSET (*(volatile Ifx_SENT_CH_INTSET*)0xF0003224u)




#define SENT_INTSET4 (SENT_CH4_INTSET)


#define SENT_CH4_INTSTAT (*(volatile Ifx_SENT_CH_INTSTAT*)0xF0003220u)




#define SENT_INTSTAT4 (SENT_CH4_INTSTAT)


#define SENT_CH4_IOCR (*(volatile Ifx_SENT_CH_IOCR*)0xF0003214u)




#define SENT_IOCR4 (SENT_CH4_IOCR)


#define SENT_CH4_RCR (*(volatile Ifx_SENT_CH_RCR*)0xF0003208u)




#define SENT_RCR4 (SENT_CH4_RCR)


#define SENT_CH4_RSR (*(volatile Ifx_SENT_CH_RSR*)0xF000320Cu)




#define SENT_RSR4 (SENT_CH4_RSR)


#define SENT_CH4_SCR (*(volatile Ifx_SENT_CH_SCR*)0xF0003218u)




#define SENT_SCR4 (SENT_CH4_SCR)


#define SENT_CH4_SDS (*(volatile Ifx_SENT_CH_SDS*)0xF0003210u)




#define SENT_SDS4 (SENT_CH4_SDS)


#define SENT_CH4_VIEW (*(volatile Ifx_SENT_CH_VIEW*)0xF000321Cu)




#define SENT_VIEW4 (SENT_CH4_VIEW)


#define SENT_CH4_WDT (*(volatile Ifx_SENT_CH_WDT*)0xF0003234u)




#define SENT_WDT4 (SENT_CH4_WDT)


#define SENT_CH5_CFDR (*(volatile Ifx_SENT_CH_CFDR*)0xF0003244u)




#define SENT_CFDR5 (SENT_CH5_CFDR)


#define SENT_CH5_CPDR (*(volatile Ifx_SENT_CH_CPDR*)0xF0003240u)




#define SENT_CPDR5 (SENT_CH5_CPDR)


#define SENT_CH5_INP (*(volatile Ifx_SENT_CH_INP*)0xF0003270u)




#define SENT_INP5 (SENT_CH5_INP)


#define SENT_CH5_INTCLR (*(volatile Ifx_SENT_CH_INTCLR*)0xF0003268u)




#define SENT_INTCLR5 (SENT_CH5_INTCLR)


#define SENT_CH5_INTEN (*(volatile Ifx_SENT_CH_INTEN*)0xF000326Cu)




#define SENT_INTEN5 (SENT_CH5_INTEN)


#define SENT_CH5_INTSET (*(volatile Ifx_SENT_CH_INTSET*)0xF0003264u)




#define SENT_INTSET5 (SENT_CH5_INTSET)


#define SENT_CH5_INTSTAT (*(volatile Ifx_SENT_CH_INTSTAT*)0xF0003260u)




#define SENT_INTSTAT5 (SENT_CH5_INTSTAT)


#define SENT_CH5_IOCR (*(volatile Ifx_SENT_CH_IOCR*)0xF0003254u)




#define SENT_IOCR5 (SENT_CH5_IOCR)


#define SENT_CH5_RCR (*(volatile Ifx_SENT_CH_RCR*)0xF0003248u)




#define SENT_RCR5 (SENT_CH5_RCR)


#define SENT_CH5_RSR (*(volatile Ifx_SENT_CH_RSR*)0xF000324Cu)




#define SENT_RSR5 (SENT_CH5_RSR)


#define SENT_CH5_SCR (*(volatile Ifx_SENT_CH_SCR*)0xF0003258u)




#define SENT_SCR5 (SENT_CH5_SCR)


#define SENT_CH5_SDS (*(volatile Ifx_SENT_CH_SDS*)0xF0003250u)




#define SENT_SDS5 (SENT_CH5_SDS)


#define SENT_CH5_VIEW (*(volatile Ifx_SENT_CH_VIEW*)0xF000325Cu)




#define SENT_VIEW5 (SENT_CH5_VIEW)


#define SENT_CH5_WDT (*(volatile Ifx_SENT_CH_WDT*)0xF0003274u)




#define SENT_WDT5 (SENT_CH5_WDT)


#define SENT_CH6_CFDR (*(volatile Ifx_SENT_CH_CFDR*)0xF0003284u)




#define SENT_CFDR6 (SENT_CH6_CFDR)


#define SENT_CH6_CPDR (*(volatile Ifx_SENT_CH_CPDR*)0xF0003280u)




#define SENT_CPDR6 (SENT_CH6_CPDR)


#define SENT_CH6_INP (*(volatile Ifx_SENT_CH_INP*)0xF00032B0u)




#define SENT_INP6 (SENT_CH6_INP)


#define SENT_CH6_INTCLR (*(volatile Ifx_SENT_CH_INTCLR*)0xF00032A8u)




#define SENT_INTCLR6 (SENT_CH6_INTCLR)


#define SENT_CH6_INTEN (*(volatile Ifx_SENT_CH_INTEN*)0xF00032ACu)




#define SENT_INTEN6 (SENT_CH6_INTEN)


#define SENT_CH6_INTSET (*(volatile Ifx_SENT_CH_INTSET*)0xF00032A4u)




#define SENT_INTSET6 (SENT_CH6_INTSET)


#define SENT_CH6_INTSTAT (*(volatile Ifx_SENT_CH_INTSTAT*)0xF00032A0u)




#define SENT_INTSTAT6 (SENT_CH6_INTSTAT)


#define SENT_CH6_IOCR (*(volatile Ifx_SENT_CH_IOCR*)0xF0003294u)




#define SENT_IOCR6 (SENT_CH6_IOCR)


#define SENT_CH6_RCR (*(volatile Ifx_SENT_CH_RCR*)0xF0003288u)




#define SENT_RCR6 (SENT_CH6_RCR)


#define SENT_CH6_RSR (*(volatile Ifx_SENT_CH_RSR*)0xF000328Cu)




#define SENT_RSR6 (SENT_CH6_RSR)


#define SENT_CH6_SCR (*(volatile Ifx_SENT_CH_SCR*)0xF0003298u)




#define SENT_SCR6 (SENT_CH6_SCR)


#define SENT_CH6_SDS (*(volatile Ifx_SENT_CH_SDS*)0xF0003290u)




#define SENT_SDS6 (SENT_CH6_SDS)


#define SENT_CH6_VIEW (*(volatile Ifx_SENT_CH_VIEW*)0xF000329Cu)




#define SENT_VIEW6 (SENT_CH6_VIEW)


#define SENT_CH6_WDT (*(volatile Ifx_SENT_CH_WDT*)0xF00032B4u)




#define SENT_WDT6 (SENT_CH6_WDT)


#define SENT_CH7_CFDR (*(volatile Ifx_SENT_CH_CFDR*)0xF00032C4u)




#define SENT_CFDR7 (SENT_CH7_CFDR)


#define SENT_CH7_CPDR (*(volatile Ifx_SENT_CH_CPDR*)0xF00032C0u)




#define SENT_CPDR7 (SENT_CH7_CPDR)


#define SENT_CH7_INP (*(volatile Ifx_SENT_CH_INP*)0xF00032F0u)




#define SENT_INP7 (SENT_CH7_INP)


#define SENT_CH7_INTCLR (*(volatile Ifx_SENT_CH_INTCLR*)0xF00032E8u)




#define SENT_INTCLR7 (SENT_CH7_INTCLR)


#define SENT_CH7_INTEN (*(volatile Ifx_SENT_CH_INTEN*)0xF00032ECu)




#define SENT_INTEN7 (SENT_CH7_INTEN)


#define SENT_CH7_INTSET (*(volatile Ifx_SENT_CH_INTSET*)0xF00032E4u)




#define SENT_INTSET7 (SENT_CH7_INTSET)


#define SENT_CH7_INTSTAT (*(volatile Ifx_SENT_CH_INTSTAT*)0xF00032E0u)




#define SENT_INTSTAT7 (SENT_CH7_INTSTAT)


#define SENT_CH7_IOCR (*(volatile Ifx_SENT_CH_IOCR*)0xF00032D4u)




#define SENT_IOCR7 (SENT_CH7_IOCR)


#define SENT_CH7_RCR (*(volatile Ifx_SENT_CH_RCR*)0xF00032C8u)




#define SENT_RCR7 (SENT_CH7_RCR)


#define SENT_CH7_RSR (*(volatile Ifx_SENT_CH_RSR*)0xF00032CCu)




#define SENT_RSR7 (SENT_CH7_RSR)


#define SENT_CH7_SCR (*(volatile Ifx_SENT_CH_SCR*)0xF00032D8u)




#define SENT_SCR7 (SENT_CH7_SCR)


#define SENT_CH7_SDS (*(volatile Ifx_SENT_CH_SDS*)0xF00032D0u)




#define SENT_SDS7 (SENT_CH7_SDS)


#define SENT_CH7_VIEW (*(volatile Ifx_SENT_CH_VIEW*)0xF00032DCu)




#define SENT_VIEW7 (SENT_CH7_VIEW)


#define SENT_CH7_WDT (*(volatile Ifx_SENT_CH_WDT*)0xF00032F4u)




#define SENT_WDT7 (SENT_CH7_WDT)


#define SENT_CH8_CFDR (*(volatile Ifx_SENT_CH_CFDR*)0xF0003304u)




#define SENT_CFDR8 (SENT_CH8_CFDR)


#define SENT_CH8_CPDR (*(volatile Ifx_SENT_CH_CPDR*)0xF0003300u)




#define SENT_CPDR8 (SENT_CH8_CPDR)


#define SENT_CH8_INP (*(volatile Ifx_SENT_CH_INP*)0xF0003330u)




#define SENT_INP8 (SENT_CH8_INP)


#define SENT_CH8_INTCLR (*(volatile Ifx_SENT_CH_INTCLR*)0xF0003328u)




#define SENT_INTCLR8 (SENT_CH8_INTCLR)


#define SENT_CH8_INTEN (*(volatile Ifx_SENT_CH_INTEN*)0xF000332Cu)




#define SENT_INTEN8 (SENT_CH8_INTEN)


#define SENT_CH8_INTSET (*(volatile Ifx_SENT_CH_INTSET*)0xF0003324u)




#define SENT_INTSET8 (SENT_CH8_INTSET)


#define SENT_CH8_INTSTAT (*(volatile Ifx_SENT_CH_INTSTAT*)0xF0003320u)




#define SENT_INTSTAT8 (SENT_CH8_INTSTAT)


#define SENT_CH8_IOCR (*(volatile Ifx_SENT_CH_IOCR*)0xF0003314u)




#define SENT_IOCR8 (SENT_CH8_IOCR)


#define SENT_CH8_RCR (*(volatile Ifx_SENT_CH_RCR*)0xF0003308u)




#define SENT_RCR8 (SENT_CH8_RCR)


#define SENT_CH8_RSR (*(volatile Ifx_SENT_CH_RSR*)0xF000330Cu)




#define SENT_RSR8 (SENT_CH8_RSR)


#define SENT_CH8_SCR (*(volatile Ifx_SENT_CH_SCR*)0xF0003318u)




#define SENT_SCR8 (SENT_CH8_SCR)


#define SENT_CH8_SDS (*(volatile Ifx_SENT_CH_SDS*)0xF0003310u)




#define SENT_SDS8 (SENT_CH8_SDS)


#define SENT_CH8_VIEW (*(volatile Ifx_SENT_CH_VIEW*)0xF000331Cu)




#define SENT_VIEW8 (SENT_CH8_VIEW)


#define SENT_CH8_WDT (*(volatile Ifx_SENT_CH_WDT*)0xF0003334u)




#define SENT_WDT8 (SENT_CH8_WDT)


#define SENT_CH9_CFDR (*(volatile Ifx_SENT_CH_CFDR*)0xF0003344u)




#define SENT_CFDR9 (SENT_CH9_CFDR)


#define SENT_CH9_CPDR (*(volatile Ifx_SENT_CH_CPDR*)0xF0003340u)




#define SENT_CPDR9 (SENT_CH9_CPDR)


#define SENT_CH9_INP (*(volatile Ifx_SENT_CH_INP*)0xF0003370u)




#define SENT_INP9 (SENT_CH9_INP)


#define SENT_CH9_INTCLR (*(volatile Ifx_SENT_CH_INTCLR*)0xF0003368u)




#define SENT_INTCLR9 (SENT_CH9_INTCLR)


#define SENT_CH9_INTEN (*(volatile Ifx_SENT_CH_INTEN*)0xF000336Cu)




#define SENT_INTEN9 (SENT_CH9_INTEN)


#define SENT_CH9_INTSET (*(volatile Ifx_SENT_CH_INTSET*)0xF0003364u)




#define SENT_INTSET9 (SENT_CH9_INTSET)


#define SENT_CH9_INTSTAT (*(volatile Ifx_SENT_CH_INTSTAT*)0xF0003360u)




#define SENT_INTSTAT9 (SENT_CH9_INTSTAT)


#define SENT_CH9_IOCR (*(volatile Ifx_SENT_CH_IOCR*)0xF0003354u)




#define SENT_IOCR9 (SENT_CH9_IOCR)


#define SENT_CH9_RCR (*(volatile Ifx_SENT_CH_RCR*)0xF0003348u)




#define SENT_RCR9 (SENT_CH9_RCR)


#define SENT_CH9_RSR (*(volatile Ifx_SENT_CH_RSR*)0xF000334Cu)




#define SENT_RSR9 (SENT_CH9_RSR)


#define SENT_CH9_SCR (*(volatile Ifx_SENT_CH_SCR*)0xF0003358u)




#define SENT_SCR9 (SENT_CH9_SCR)


#define SENT_CH9_SDS (*(volatile Ifx_SENT_CH_SDS*)0xF0003350u)




#define SENT_SDS9 (SENT_CH9_SDS)


#define SENT_CH9_VIEW (*(volatile Ifx_SENT_CH_VIEW*)0xF000335Cu)




#define SENT_VIEW9 (SENT_CH9_VIEW)


#define SENT_CH9_WDT (*(volatile Ifx_SENT_CH_WDT*)0xF0003374u)




#define SENT_WDT9 (SENT_CH9_WDT)


#define SENT_CLC (*(volatile Ifx_SENT_CLC*)0xF0003000u)


#define SENT_FDR (*(volatile Ifx_SENT_FDR*)0xF000300Cu)


#define SENT_ID (*(volatile Ifx_SENT_ID*)0xF0003008u)


#define SENT_INTOV (*(volatile Ifx_SENT_INTOV*)0xF0003014u)


#define SENT_KRST0 (*(volatile Ifx_SENT_KRST0*)0xF00030F4u)


#define SENT_KRST1 (*(volatile Ifx_SENT_KRST1*)0xF00030F0u)


#define SENT_KRSTCLR (*(volatile Ifx_SENT_KRSTCLR*)0xF00030ECu)


#define SENT_OCS (*(volatile Ifx_SENT_OCS*)0xF00030E8u)


#define SENT_RDR0 (*(volatile Ifx_SENT_RDR*)0xF0003080u)


#define SENT_RDR1 (*(volatile Ifx_SENT_RDR*)0xF0003084u)


#define SENT_RDR2 (*(volatile Ifx_SENT_RDR*)0xF0003088u)


#define SENT_RDR3 (*(volatile Ifx_SENT_RDR*)0xF000308Cu)


#define SENT_RDR4 (*(volatile Ifx_SENT_RDR*)0xF0003090u)


#define SENT_RDR5 (*(volatile Ifx_SENT_RDR*)0xF0003094u)


#define SENT_RDR6 (*(volatile Ifx_SENT_RDR*)0xF0003098u)


#define SENT_RDR7 (*(volatile Ifx_SENT_RDR*)0xF000309Cu)


#define SENT_RDR8 (*(volatile Ifx_SENT_RDR*)0xF00030A0u)


#define SENT_RDR9 (*(volatile Ifx_SENT_RDR*)0xF00030A4u)


#define SENT_RTS0 (*(volatile Ifx_SENT_RTS*)0xF0003A80u)


#define SENT_RTS1 (*(volatile Ifx_SENT_RTS*)0xF0003A84u)


#define SENT_RTS2 (*(volatile Ifx_SENT_RTS*)0xF0003A88u)


#define SENT_RTS3 (*(volatile Ifx_SENT_RTS*)0xF0003A8Cu)


#define SENT_RTS4 (*(volatile Ifx_SENT_RTS*)0xF0003A90u)


#define SENT_RTS5 (*(volatile Ifx_SENT_RTS*)0xF0003A94u)


#define SENT_RTS6 (*(volatile Ifx_SENT_RTS*)0xF0003A98u)


#define SENT_RTS7 (*(volatile Ifx_SENT_RTS*)0xF0003A9Cu)


#define SENT_RTS8 (*(volatile Ifx_SENT_RTS*)0xF0003AA0u)


#define SENT_RTS9 (*(volatile Ifx_SENT_RTS*)0xF0003AA4u)


#define SENT_TPD (*(volatile Ifx_SENT_TPD*)0xF000301Cu)


#define SENT_TSR (*(volatile Ifx_SENT_TSR*)0xF0003018u)
# 62 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_reg.h" 2 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxSmu_reg.h" 1 3
# 34 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxSmu_reg.h" 3
#define IFXSMU_REG_H 1

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxSmu_regdef.h" 1 3
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxSmu_regdef.h" 3
#define IFXSMU_REGDEF_H 1







typedef struct _Ifx_SMU_ACCEN0_Bits
{
    volatile unsigned int EN0:1;
    volatile unsigned int EN1:1;
    volatile unsigned int EN2:1;
    volatile unsigned int EN3:1;
    volatile unsigned int EN4:1;
    volatile unsigned int EN5:1;
    volatile unsigned int EN6:1;
    volatile unsigned int EN7:1;
    volatile unsigned int EN8:1;
    volatile unsigned int EN9:1;
    volatile unsigned int EN10:1;
    volatile unsigned int EN11:1;
    volatile unsigned int EN12:1;
    volatile unsigned int EN13:1;
    volatile unsigned int EN14:1;
    volatile unsigned int EN15:1;
    volatile unsigned int EN16:1;
    volatile unsigned int EN17:1;
    volatile unsigned int EN18:1;
    volatile unsigned int EN19:1;
    volatile unsigned int EN20:1;
    volatile unsigned int EN21:1;
    volatile unsigned int EN22:1;
    volatile unsigned int EN23:1;
    volatile unsigned int EN24:1;
    volatile unsigned int EN25:1;
    volatile unsigned int EN26:1;
    volatile unsigned int EN27:1;
    volatile unsigned int EN28:1;
    volatile unsigned int EN29:1;
    volatile unsigned int EN30:1;
    volatile unsigned int EN31:1;
} Ifx_SMU_ACCEN0_Bits;


typedef struct _Ifx_SMU_ACCEN1_Bits
{
    volatile unsigned int reserved_0:32;
} Ifx_SMU_ACCEN1_Bits;


typedef struct _Ifx_SMU_AD_Bits
{
    volatile unsigned int DF0:1;
    volatile unsigned int DF1:1;
    volatile unsigned int DF2:1;
    volatile unsigned int DF3:1;
    volatile unsigned int DF4:1;
    volatile unsigned int DF5:1;
    volatile unsigned int DF6:1;
    volatile unsigned int DF7:1;
    volatile unsigned int DF8:1;
    volatile unsigned int DF9:1;
    volatile unsigned int DF10:1;
    volatile unsigned int DF11:1;
    volatile unsigned int DF12:1;
    volatile unsigned int DF13:1;
    volatile unsigned int DF14:1;
    volatile unsigned int DF15:1;
    volatile unsigned int DF16:1;
    volatile unsigned int DF17:1;
    volatile unsigned int DF18:1;
    volatile unsigned int DF19:1;
    volatile unsigned int DF20:1;
    volatile unsigned int DF21:1;
    volatile unsigned int DF22:1;
    volatile unsigned int DF23:1;
    volatile unsigned int DF24:1;
    volatile unsigned int DF25:1;
    volatile unsigned int DF26:1;
    volatile unsigned int DF27:1;
    volatile unsigned int DF28:1;
    volatile unsigned int DF29:1;
    volatile unsigned int DF30:1;
    volatile unsigned int DF31:1;
} Ifx_SMU_AD_Bits;


typedef struct _Ifx_SMU_AFCNT_Bits
{
    volatile unsigned int FCNT:4;
    volatile unsigned int reserved_4:4;
    volatile unsigned int ACNT:8;
    volatile unsigned int reserved_16:14;
    volatile unsigned int FCO:1;
    volatile unsigned int ACO:1;
} Ifx_SMU_AFCNT_Bits;


typedef struct _Ifx_SMU_AG_Bits
{
    volatile unsigned int SF0:1;
    volatile unsigned int SF1:1;
    volatile unsigned int SF2:1;
    volatile unsigned int SF3:1;
    volatile unsigned int SF4:1;
    volatile unsigned int SF5:1;
    volatile unsigned int SF6:1;
    volatile unsigned int SF7:1;
    volatile unsigned int SF8:1;
    volatile unsigned int SF9:1;
    volatile unsigned int SF10:1;
    volatile unsigned int SF11:1;
    volatile unsigned int SF12:1;
    volatile unsigned int SF13:1;
    volatile unsigned int SF14:1;
    volatile unsigned int SF15:1;
    volatile unsigned int SF16:1;
    volatile unsigned int SF17:1;
    volatile unsigned int SF18:1;
    volatile unsigned int SF19:1;
    volatile unsigned int SF20:1;
    volatile unsigned int SF21:1;
    volatile unsigned int SF22:1;
    volatile unsigned int SF23:1;
    volatile unsigned int SF24:1;
    volatile unsigned int SF25:1;
    volatile unsigned int SF26:1;
    volatile unsigned int SF27:1;
    volatile unsigned int SF28:1;
    volatile unsigned int SF29:1;
    volatile unsigned int SF30:1;
    volatile unsigned int SF31:1;
} Ifx_SMU_AG_Bits;


typedef struct _Ifx_SMU_AGC_Bits
{
    volatile unsigned int IGCS0:3;
    volatile unsigned int reserved_3:1;
    volatile unsigned int IGCS1:3;
    volatile unsigned int reserved_7:1;
    volatile unsigned int IGCS2:3;
    volatile unsigned int reserved_11:5;
    volatile unsigned int ICS:3;
    volatile unsigned int reserved_19:5;
    volatile unsigned int PES:5;
    volatile unsigned int EFRST:1;
    volatile unsigned int reserved_30:2;
} Ifx_SMU_AGC_Bits;


typedef struct _Ifx_SMU_AGCF_Bits
{
    volatile unsigned int CF0:1;
    volatile unsigned int CF1:1;
    volatile unsigned int CF2:1;
    volatile unsigned int CF3:1;
    volatile unsigned int CF4:1;
    volatile unsigned int CF5:1;
    volatile unsigned int CF6:1;
    volatile unsigned int CF7:1;
    volatile unsigned int CF8:1;
    volatile unsigned int CF9:1;
    volatile unsigned int CF10:1;
    volatile unsigned int CF11:1;
    volatile unsigned int CF12:1;
    volatile unsigned int CF13:1;
    volatile unsigned int CF14:1;
    volatile unsigned int CF15:1;
    volatile unsigned int CF16:1;
    volatile unsigned int CF17:1;
    volatile unsigned int CF18:1;
    volatile unsigned int CF19:1;
    volatile unsigned int CF20:1;
    volatile unsigned int CF21:1;
    volatile unsigned int CF22:1;
    volatile unsigned int CF23:1;
    volatile unsigned int CF24:1;
    volatile unsigned int CF25:1;
    volatile unsigned int CF26:1;
    volatile unsigned int CF27:1;
    volatile unsigned int CF28:1;
    volatile unsigned int CF29:1;
    volatile unsigned int CF30:1;
    volatile unsigned int CF31:1;
} Ifx_SMU_AGCF_Bits;


typedef struct _Ifx_SMU_AGFSP_Bits
{
    volatile unsigned int FE0:1;
    volatile unsigned int FE1:1;
    volatile unsigned int FE2:1;
    volatile unsigned int FE3:1;
    volatile unsigned int FE4:1;
    volatile unsigned int FE5:1;
    volatile unsigned int FE6:1;
    volatile unsigned int FE7:1;
    volatile unsigned int FE8:1;
    volatile unsigned int FE9:1;
    volatile unsigned int FE10:1;
    volatile unsigned int FE11:1;
    volatile unsigned int FE12:1;
    volatile unsigned int FE13:1;
    volatile unsigned int FE14:1;
    volatile unsigned int FE15:1;
    volatile unsigned int FE16:1;
    volatile unsigned int FE17:1;
    volatile unsigned int FE18:1;
    volatile unsigned int FE19:1;
    volatile unsigned int FE20:1;
    volatile unsigned int FE21:1;
    volatile unsigned int FE22:1;
    volatile unsigned int FE23:1;
    volatile unsigned int FE24:1;
    volatile unsigned int FE25:1;
    volatile unsigned int FE26:1;
    volatile unsigned int FE27:1;
    volatile unsigned int FE28:1;
    volatile unsigned int FE29:1;
    volatile unsigned int FE30:1;
    volatile unsigned int FE31:1;
} Ifx_SMU_AGFSP_Bits;


typedef struct _Ifx_SMU_CLC_Bits
{
    volatile unsigned int DISR:1;
    volatile unsigned int DISS:1;
    volatile unsigned int FDIS:1;
    volatile unsigned int EDIS:1;
    volatile unsigned int reserved_4:28;
} Ifx_SMU_CLC_Bits;


typedef struct _Ifx_SMU_CMD_Bits
{
    volatile unsigned int CMD:4;
    volatile unsigned int ARG:4;
    volatile unsigned int reserved_8:24;
} Ifx_SMU_CMD_Bits;


typedef struct _Ifx_SMU_DBG_Bits
{
    volatile unsigned int SSM:2;
    volatile unsigned int reserved_2:30;
} Ifx_SMU_DBG_Bits;


typedef struct _Ifx_SMU_FSP_Bits
{
    volatile unsigned int PRE1:3;
    volatile unsigned int PRE2:2;
    volatile unsigned int MODE:2;
    volatile unsigned int PES:1;
    volatile unsigned int TFSP_LOW:14;
    volatile unsigned int TFSP_HIGH:10;
} Ifx_SMU_FSP_Bits;


typedef struct _Ifx_SMU_ID_Bits
{
    volatile unsigned int MOD_REV:8;
    volatile unsigned int MOD_TYPE:8;
    volatile unsigned int MODNUMBER:16;
} Ifx_SMU_ID_Bits;


typedef struct _Ifx_SMU_KEYS_Bits
{
    volatile unsigned int CFGLCK:8;
    volatile unsigned int PERLCK:8;
    volatile unsigned int reserved_16:16;
} Ifx_SMU_KEYS_Bits;


typedef struct _Ifx_SMU_KRST0_Bits
{
    volatile unsigned int RST:1;
    volatile unsigned int RSTSTAT:1;
    volatile unsigned int reserved_2:30;
} Ifx_SMU_KRST0_Bits;


typedef struct _Ifx_SMU_KRST1_Bits
{
    volatile unsigned int RST:1;
    volatile unsigned int reserved_1:31;
} Ifx_SMU_KRST1_Bits;


typedef struct _Ifx_SMU_KRSTCLR_Bits
{
    volatile unsigned int CLR:1;
    volatile unsigned int reserved_1:31;
} Ifx_SMU_KRSTCLR_Bits;


typedef struct _Ifx_SMU_OCS_Bits
{
    volatile unsigned int TGS:2;
    volatile unsigned int TGB:1;
    volatile unsigned int TG_P:1;
    volatile unsigned int reserved_4:20;
    volatile unsigned int SUS:4;
    volatile unsigned int SUS_P:1;
    volatile unsigned int SUSSTA:1;
    volatile unsigned int reserved_30:2;
} Ifx_SMU_OCS_Bits;


typedef struct _Ifx_SMU_PCTL_Bits
{
    volatile unsigned int HWDIR:1;
    volatile unsigned int HWEN:1;
    volatile unsigned int reserved_2:5;
    volatile unsigned int PCS:1;
    volatile unsigned int reserved_8:8;
    volatile unsigned int PCFG:16;
} Ifx_SMU_PCTL_Bits;


typedef struct _Ifx_SMU_RMCTL_Bits
{
    volatile unsigned int TE:1;
    volatile unsigned int reserved_1:31;
} Ifx_SMU_RMCTL_Bits;


typedef struct _Ifx_SMU_RMEF_Bits
{
    volatile unsigned int EF0:1;
    volatile unsigned int EF1:1;
    volatile unsigned int EF2:1;
    volatile unsigned int EF3:1;
    volatile unsigned int EF4:1;
    volatile unsigned int EF5:1;
    volatile unsigned int EF6:1;
    volatile unsigned int EF7:1;
    volatile unsigned int EF8:1;
    volatile unsigned int EF9:1;
    volatile unsigned int EF10:1;
    volatile unsigned int EF11:1;
    volatile unsigned int EF12:1;
    volatile unsigned int EF13:1;
    volatile unsigned int EF14:1;
    volatile unsigned int EF15:1;
    volatile unsigned int EF16:1;
    volatile unsigned int EF17:1;
    volatile unsigned int EF18:1;
    volatile unsigned int EF19:1;
    volatile unsigned int EF20:1;
    volatile unsigned int EF21:1;
    volatile unsigned int EF22:1;
    volatile unsigned int EF23:1;
    volatile unsigned int EF24:1;
    volatile unsigned int EF25:1;
    volatile unsigned int EF26:1;
    volatile unsigned int EF27:1;
    volatile unsigned int EF28:1;
    volatile unsigned int EF29:1;
    volatile unsigned int EF30:1;
    volatile unsigned int EF31:1;
} Ifx_SMU_RMEF_Bits;


typedef struct _Ifx_SMU_RMSTS_Bits
{
    volatile unsigned int STS0:1;
    volatile unsigned int STS1:1;
    volatile unsigned int STS2:1;
    volatile unsigned int STS3:1;
    volatile unsigned int STS4:1;
    volatile unsigned int STS5:1;
    volatile unsigned int STS6:1;
    volatile unsigned int STS7:1;
    volatile unsigned int STS8:1;
    volatile unsigned int STS9:1;
    volatile unsigned int STS10:1;
    volatile unsigned int STS11:1;
    volatile unsigned int STS12:1;
    volatile unsigned int STS13:1;
    volatile unsigned int STS14:1;
    volatile unsigned int STS15:1;
    volatile unsigned int STS16:1;
    volatile unsigned int STS17:1;
    volatile unsigned int STS18:1;
    volatile unsigned int STS19:1;
    volatile unsigned int STS20:1;
    volatile unsigned int STS21:1;
    volatile unsigned int STS22:1;
    volatile unsigned int STS23:1;
    volatile unsigned int STS24:1;
    volatile unsigned int STS25:1;
    volatile unsigned int STS26:1;
    volatile unsigned int STS27:1;
    volatile unsigned int STS28:1;
    volatile unsigned int STS29:1;
    volatile unsigned int STS30:1;
    volatile unsigned int STS31:1;
} Ifx_SMU_RMSTS_Bits;


typedef struct _Ifx_SMU_RTAC0_Bits
{
    volatile unsigned int GID0:3;
    volatile unsigned int ALID0:5;
    volatile unsigned int GID1:3;
    volatile unsigned int ALID1:5;
    volatile unsigned int GID2:3;
    volatile unsigned int ALID2:5;
    volatile unsigned int GID3:3;
    volatile unsigned int ALID3:5;
} Ifx_SMU_RTAC0_Bits;


typedef struct _Ifx_SMU_RTAC1_Bits
{
    volatile unsigned int GID0:3;
    volatile unsigned int ALID0:5;
    volatile unsigned int GID1:3;
    volatile unsigned int ALID1:5;
    volatile unsigned int GID2:3;
    volatile unsigned int ALID2:5;
    volatile unsigned int GID3:3;
    volatile unsigned int ALID3:5;
} Ifx_SMU_RTAC1_Bits;


typedef struct _Ifx_SMU_RTC_Bits
{
    volatile unsigned int RT0E:1;
    volatile unsigned int RT1E:1;
    volatile unsigned int reserved_2:6;
    volatile unsigned int RTD:24;
} Ifx_SMU_RTC_Bits;


typedef struct _Ifx_SMU_STS_Bits
{
    volatile unsigned int CMD:4;
    volatile unsigned int ARG:4;
    volatile unsigned int RES:1;
    volatile unsigned int ASCE:1;
    volatile unsigned int FSP:2;
    volatile unsigned int FSTS:1;
    volatile unsigned int reserved_13:3;
    volatile unsigned int RTS0:1;
    volatile unsigned int RTME0:1;
    volatile unsigned int RTS1:1;
    volatile unsigned int RTME1:1;
    volatile unsigned int reserved_20:12;
} Ifx_SMU_STS_Bits;







typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SMU_ACCEN0_Bits B;
} Ifx_SMU_ACCEN0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SMU_ACCEN1_Bits B;
} Ifx_SMU_ACCEN1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SMU_AD_Bits B;
} Ifx_SMU_AD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SMU_AFCNT_Bits B;
} Ifx_SMU_AFCNT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SMU_AG_Bits B;
} Ifx_SMU_AG;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SMU_AGC_Bits B;
} Ifx_SMU_AGC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SMU_AGCF_Bits B;
} Ifx_SMU_AGCF;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SMU_AGFSP_Bits B;
} Ifx_SMU_AGFSP;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SMU_CLC_Bits B;
} Ifx_SMU_CLC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SMU_CMD_Bits B;
} Ifx_SMU_CMD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SMU_DBG_Bits B;
} Ifx_SMU_DBG;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SMU_FSP_Bits B;
} Ifx_SMU_FSP;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SMU_ID_Bits B;
} Ifx_SMU_ID;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SMU_KEYS_Bits B;
} Ifx_SMU_KEYS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SMU_KRST0_Bits B;
} Ifx_SMU_KRST0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SMU_KRST1_Bits B;
} Ifx_SMU_KRST1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SMU_KRSTCLR_Bits B;
} Ifx_SMU_KRSTCLR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SMU_OCS_Bits B;
} Ifx_SMU_OCS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SMU_PCTL_Bits B;
} Ifx_SMU_PCTL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SMU_RMCTL_Bits B;
} Ifx_SMU_RMCTL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SMU_RMEF_Bits B;
} Ifx_SMU_RMEF;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SMU_RMSTS_Bits B;
} Ifx_SMU_RMSTS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SMU_RTAC0_Bits B;
} Ifx_SMU_RTAC0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SMU_RTAC1_Bits B;
} Ifx_SMU_RTAC1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SMU_RTC_Bits B;
} Ifx_SMU_RTC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SMU_STS_Bits B;
} Ifx_SMU_STS;
# 715 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxSmu_regdef.h" 3
typedef volatile struct _Ifx_SMU
{
    Ifx_SMU_CLC CLC;
    unsigned char reserved_4[4];
    Ifx_SMU_ID ID;
    unsigned char reserved_C[20];
    Ifx_SMU_CMD CMD;
    Ifx_SMU_STS STS;
    Ifx_SMU_FSP FSP;
    Ifx_SMU_AGC AGC;
    Ifx_SMU_RTC RTC;
    Ifx_SMU_KEYS KEYS;
    Ifx_SMU_DBG DBG;
    Ifx_SMU_PCTL PCTL;
    Ifx_SMU_AFCNT AFCNT;
    unsigned char reserved_44[28];
    Ifx_SMU_RTAC0 RTAC0;
    Ifx_SMU_RTAC1 RTAC1;
    unsigned char reserved_68[152];
    Ifx_SMU_AGCF AGCF[7][3];
    unsigned char reserved_154[44];
    Ifx_SMU_AGFSP AGFSP[7];
    unsigned char reserved_19C[36];
    Ifx_SMU_AG AG[7];
    unsigned char reserved_1DC[36];
    Ifx_SMU_AD AD[7];
    unsigned char reserved_21C[228];
    Ifx_SMU_RMCTL RMCTL;
    Ifx_SMU_RMEF RMEF;
    Ifx_SMU_RMSTS RMSTS;
    unsigned char reserved_30C[1244];
    Ifx_SMU_OCS OCS;
    Ifx_SMU_KRSTCLR KRSTCLR;
    Ifx_SMU_KRST1 KRST1;
    Ifx_SMU_KRST0 KRST0;
    Ifx_SMU_ACCEN1 ACCEN1;
    Ifx_SMU_ACCEN0 ACCEN0;
} Ifx_SMU;
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxSmu_reg.h" 2 3





#define MODULE_SMU (*(Ifx_SMU*)0xF0036800u)







#define SMU_ACCEN0 (*(volatile Ifx_SMU_ACCEN0*)0xF0036FFCu)


#define SMU_ACCEN1 (*(volatile Ifx_SMU_ACCEN1*)0xF0036FF8u)


#define SMU_AD0 (*(volatile Ifx_SMU_AD*)0xF0036A00u)


#define SMU_AD1 (*(volatile Ifx_SMU_AD*)0xF0036A04u)


#define SMU_AD2 (*(volatile Ifx_SMU_AD*)0xF0036A08u)


#define SMU_AD3 (*(volatile Ifx_SMU_AD*)0xF0036A0Cu)


#define SMU_AD4 (*(volatile Ifx_SMU_AD*)0xF0036A10u)


#define SMU_AD5 (*(volatile Ifx_SMU_AD*)0xF0036A14u)


#define SMU_AD6 (*(volatile Ifx_SMU_AD*)0xF0036A18u)


#define SMU_AFCNT (*(volatile Ifx_SMU_AFCNT*)0xF0036840u)


#define SMU_AG0 (*(volatile Ifx_SMU_AG*)0xF00369C0u)


#define SMU_AG1 (*(volatile Ifx_SMU_AG*)0xF00369C4u)


#define SMU_AG2 (*(volatile Ifx_SMU_AG*)0xF00369C8u)


#define SMU_AG3 (*(volatile Ifx_SMU_AG*)0xF00369CCu)


#define SMU_AG4 (*(volatile Ifx_SMU_AG*)0xF00369D0u)


#define SMU_AG5 (*(volatile Ifx_SMU_AG*)0xF00369D4u)


#define SMU_AG6 (*(volatile Ifx_SMU_AG*)0xF00369D8u)


#define SMU_AGC (*(volatile Ifx_SMU_AGC*)0xF003682Cu)


#define SMU_AGCF0_0 (*(volatile Ifx_SMU_AGCF*)0xF0036900u)




#define SMU_AG0CF0 (SMU_AGCF0_0)


#define SMU_AGCF0_1 (*(volatile Ifx_SMU_AGCF*)0xF0036904u)




#define SMU_AG0CF1 (SMU_AGCF0_1)


#define SMU_AGCF0_2 (*(volatile Ifx_SMU_AGCF*)0xF0036908u)




#define SMU_AG0CF2 (SMU_AGCF0_2)


#define SMU_AGCF1_0 (*(volatile Ifx_SMU_AGCF*)0xF003690Cu)




#define SMU_AG1CF0 (SMU_AGCF1_0)


#define SMU_AGCF1_1 (*(volatile Ifx_SMU_AGCF*)0xF0036910u)




#define SMU_AG1CF1 (SMU_AGCF1_1)


#define SMU_AGCF1_2 (*(volatile Ifx_SMU_AGCF*)0xF0036914u)




#define SMU_AG1CF2 (SMU_AGCF1_2)


#define SMU_AGCF2_0 (*(volatile Ifx_SMU_AGCF*)0xF0036918u)




#define SMU_AG2CF0 (SMU_AGCF2_0)


#define SMU_AGCF2_1 (*(volatile Ifx_SMU_AGCF*)0xF003691Cu)




#define SMU_AG2CF1 (SMU_AGCF2_1)


#define SMU_AGCF2_2 (*(volatile Ifx_SMU_AGCF*)0xF0036920u)




#define SMU_AG2CF2 (SMU_AGCF2_2)


#define SMU_AGCF3_0 (*(volatile Ifx_SMU_AGCF*)0xF0036924u)




#define SMU_AG3CF0 (SMU_AGCF3_0)


#define SMU_AGCF3_1 (*(volatile Ifx_SMU_AGCF*)0xF0036928u)




#define SMU_AG3CF1 (SMU_AGCF3_1)


#define SMU_AGCF3_2 (*(volatile Ifx_SMU_AGCF*)0xF003692Cu)




#define SMU_AG3CF2 (SMU_AGCF3_2)


#define SMU_AGCF4_0 (*(volatile Ifx_SMU_AGCF*)0xF0036930u)




#define SMU_AG4CF0 (SMU_AGCF4_0)


#define SMU_AGCF4_1 (*(volatile Ifx_SMU_AGCF*)0xF0036934u)




#define SMU_AG4CF1 (SMU_AGCF4_1)


#define SMU_AGCF4_2 (*(volatile Ifx_SMU_AGCF*)0xF0036938u)




#define SMU_AG4CF2 (SMU_AGCF4_2)


#define SMU_AGCF5_0 (*(volatile Ifx_SMU_AGCF*)0xF003693Cu)




#define SMU_AG5CF0 (SMU_AGCF5_0)


#define SMU_AGCF5_1 (*(volatile Ifx_SMU_AGCF*)0xF0036940u)




#define SMU_AG5CF1 (SMU_AGCF5_1)


#define SMU_AGCF5_2 (*(volatile Ifx_SMU_AGCF*)0xF0036944u)




#define SMU_AG5CF2 (SMU_AGCF5_2)


#define SMU_AGCF6_0 (*(volatile Ifx_SMU_AGCF*)0xF0036948u)




#define SMU_AG6CF0 (SMU_AGCF6_0)


#define SMU_AGCF6_1 (*(volatile Ifx_SMU_AGCF*)0xF003694Cu)




#define SMU_AG6CF1 (SMU_AGCF6_1)


#define SMU_AGCF6_2 (*(volatile Ifx_SMU_AGCF*)0xF0036950u)




#define SMU_AG6CF2 (SMU_AGCF6_2)


#define SMU_AGFSP0 (*(volatile Ifx_SMU_AGFSP*)0xF0036980u)




#define SMU_AG0FSP (SMU_AGFSP0)


#define SMU_AGFSP1 (*(volatile Ifx_SMU_AGFSP*)0xF0036984u)




#define SMU_AG1FSP (SMU_AGFSP1)


#define SMU_AGFSP2 (*(volatile Ifx_SMU_AGFSP*)0xF0036988u)




#define SMU_AG2FSP (SMU_AGFSP2)


#define SMU_AGFSP3 (*(volatile Ifx_SMU_AGFSP*)0xF003698Cu)




#define SMU_AG3FSP (SMU_AGFSP3)


#define SMU_AGFSP4 (*(volatile Ifx_SMU_AGFSP*)0xF0036990u)




#define SMU_AG4FSP (SMU_AGFSP4)


#define SMU_AGFSP5 (*(volatile Ifx_SMU_AGFSP*)0xF0036994u)




#define SMU_AG5FSP (SMU_AGFSP5)


#define SMU_AGFSP6 (*(volatile Ifx_SMU_AGFSP*)0xF0036998u)




#define SMU_AG6FSP (SMU_AGFSP6)


#define SMU_CLC (*(volatile Ifx_SMU_CLC*)0xF0036800u)


#define SMU_CMD (*(volatile Ifx_SMU_CMD*)0xF0036820u)


#define SMU_DBG (*(volatile Ifx_SMU_DBG*)0xF0036838u)


#define SMU_FSP (*(volatile Ifx_SMU_FSP*)0xF0036828u)


#define SMU_ID (*(volatile Ifx_SMU_ID*)0xF0036808u)


#define SMU_KEYS (*(volatile Ifx_SMU_KEYS*)0xF0036834u)


#define SMU_KRST0 (*(volatile Ifx_SMU_KRST0*)0xF0036FF4u)


#define SMU_KRST1 (*(volatile Ifx_SMU_KRST1*)0xF0036FF0u)


#define SMU_KRSTCLR (*(volatile Ifx_SMU_KRSTCLR*)0xF0036FECu)


#define SMU_OCS (*(volatile Ifx_SMU_OCS*)0xF0036FE8u)


#define SMU_PCTL (*(volatile Ifx_SMU_PCTL*)0xF003683Cu)


#define SMU_RMCTL (*(volatile Ifx_SMU_RMCTL*)0xF0036B00u)


#define SMU_RMEF (*(volatile Ifx_SMU_RMEF*)0xF0036B04u)


#define SMU_RMSTS (*(volatile Ifx_SMU_RMSTS*)0xF0036B08u)


#define SMU_RTAC0 (*(volatile Ifx_SMU_RTAC0*)0xF0036860u)


#define SMU_RTAC1 (*(volatile Ifx_SMU_RTAC1*)0xF0036864u)


#define SMU_RTC (*(volatile Ifx_SMU_RTC*)0xF0036830u)


#define SMU_STS (*(volatile Ifx_SMU_STS*)0xF0036824u)
# 63 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_reg.h" 2 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxSrc_reg.h" 1 3
# 34 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxSrc_reg.h" 3
#define IFXSRC_REG_H 1

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxSrc_regdef.h" 1 3
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxSrc_regdef.h" 3
#define IFXSRC_REGDEF_H 1







typedef struct _Ifx_SRC_SRCR_Bits
{
    unsigned int SRPN:8;
    unsigned int reserved_8:2;
    unsigned int SRE:1;
    unsigned int TOS:2;
    unsigned int reserved_13:3;
    unsigned int ECC:6;
    unsigned int reserved_22:2;
    unsigned int SRR:1;
    unsigned int CLRR:1;
    unsigned int SETR:1;
    unsigned int IOV:1;
    unsigned int IOVCLR:1;
    unsigned int SWS:1;
    unsigned int SWSCLR:1;
    unsigned int reserved_31:1;
} Ifx_SRC_SRCR_Bits;







typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SRC_SRCR_Bits B;
} Ifx_SRC_SRCR;
# 86 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxSrc_regdef.h" 3
typedef volatile struct _Ifx_SRC_AGBT
{
    Ifx_SRC_SRCR SR;
} Ifx_SRC_AGBT;


typedef volatile struct _Ifx_SRC_ASCLIN
{
    Ifx_SRC_SRCR TX;
    Ifx_SRC_SRCR RX;
    Ifx_SRC_SRCR ERR;
} Ifx_SRC_ASCLIN;


typedef volatile struct _Ifx_SRC_BCUSPB
{
    Ifx_SRC_SRCR SBSRC;
} Ifx_SRC_BCUSPB;


typedef volatile struct _Ifx_SRC_CAN
{
    Ifx_SRC_SRCR INT[16];
} Ifx_SRC_CAN;


typedef volatile struct _Ifx_SRC_CCU6
{
    Ifx_SRC_SRCR SR0;
    Ifx_SRC_SRCR SR1;
    Ifx_SRC_SRCR SR2;
    Ifx_SRC_SRCR SR3;
} Ifx_SRC_CCU6;


typedef volatile struct _Ifx_SRC_CERBERUS
{
    Ifx_SRC_SRCR SR[2];
} Ifx_SRC_CERBERUS;


typedef volatile struct _Ifx_SRC_CIF
{
    Ifx_SRC_SRCR MI;
    Ifx_SRC_SRCR MIEP;
    Ifx_SRC_SRCR ISP;
    Ifx_SRC_SRCR MJPEG;
} Ifx_SRC_CIF;


typedef volatile struct _Ifx_SRC_CPU
{
    Ifx_SRC_SRCR SBSRC;
} Ifx_SRC_CPU;


typedef volatile struct _Ifx_SRC_DAM
{
    Ifx_SRC_SRCR SR[6];
} Ifx_SRC_DAM;


typedef volatile struct _Ifx_SRC_DMA
{
    Ifx_SRC_SRCR ERR;
    unsigned char reserved_4[12];
    Ifx_SRC_SRCR CH[64];
} Ifx_SRC_DMA;


typedef volatile struct _Ifx_SRC_DSADC
{
    Ifx_SRC_SRCR SRM;
    Ifx_SRC_SRCR SRA;
} Ifx_SRC_DSADC;


typedef volatile struct _Ifx_SRC_EMEM
{
    Ifx_SRC_SRCR SR;
} Ifx_SRC_EMEM;


typedef volatile struct _Ifx_SRC_ERAY
{
    Ifx_SRC_SRCR INT[2];
    Ifx_SRC_SRCR TINT[2];
    Ifx_SRC_SRCR NDAT[2];
    Ifx_SRC_SRCR MBSC[2];
    Ifx_SRC_SRCR OBUSY;
    Ifx_SRC_SRCR IBUSY;
    unsigned char reserved_28[40];
} Ifx_SRC_ERAY;


typedef volatile struct _Ifx_SRC_ETH
{
    Ifx_SRC_SRCR SR;
} Ifx_SRC_ETH;


typedef volatile struct _Ifx_SRC_FCE
{
    Ifx_SRC_SRCR SR;
} Ifx_SRC_FCE;


typedef volatile struct _Ifx_SRC_GPSR
{
    Ifx_SRC_SRCR SR0;
    Ifx_SRC_SRCR SR1;
    Ifx_SRC_SRCR SR2;
    Ifx_SRC_SRCR SR3;
    unsigned char reserved_10[16];
} Ifx_SRC_GPSR;


typedef volatile struct _Ifx_SRC_GPT12
{
    Ifx_SRC_SRCR CIRQ;
    Ifx_SRC_SRCR T2;
    Ifx_SRC_SRCR T3;
    Ifx_SRC_SRCR T4;
    Ifx_SRC_SRCR T5;
    Ifx_SRC_SRCR T6;
    unsigned char reserved_18[24];
} Ifx_SRC_GPT12;


typedef volatile struct _Ifx_SRC_GTM
{
    Ifx_SRC_SRCR AEIIRQ;
    Ifx_SRC_SRCR ARUIRQ[3];
    unsigned char reserved_10[4];
    Ifx_SRC_SRCR BRCIRQ;
    Ifx_SRC_SRCR CMPIRQ;
    Ifx_SRC_SRCR SPEIRQ[2];
    unsigned char reserved_24[8];
    Ifx_SRC_SRCR PSM[1][8];
    unsigned char reserved_4C[88];
    Ifx_SRC_SRCR DPLL[27];
    unsigned char reserved_110[96];
    Ifx_SRC_SRCR ERR;
    unsigned char reserved_174[12];
    Ifx_SRC_SRCR TIM[4][8];
    unsigned char reserved_200[384];
    Ifx_SRC_SRCR MCS[4][8];
    unsigned char reserved_400[384];
    Ifx_SRC_SRCR TOM[3][8];
    unsigned char reserved_5E0[416];
    Ifx_SRC_SRCR ATOM[5][4];
    unsigned char reserved_7D0[304];
    Ifx_SRC_SRCR MCSW0[4];
    unsigned char reserved_910[48];
    Ifx_SRC_SRCR MCSW1[4];
} Ifx_SRC_GTM;


typedef volatile struct _Ifx_SRC_HSCT
{
    Ifx_SRC_SRCR SR;
} Ifx_SRC_HSCT;


typedef volatile struct _Ifx_SRC_HSM
{
    Ifx_SRC_SRCR HSM[2];
} Ifx_SRC_HSM;


typedef volatile struct _Ifx_SRC_HSSL
{
    Ifx_SRC_SRCR COK;
    Ifx_SRC_SRCR RDI;
    Ifx_SRC_SRCR ERR;
    Ifx_SRC_SRCR TRG;
} Ifx_SRC_HSSL;


typedef volatile struct _Ifx_SRC_I2C
{
    Ifx_SRC_SRCR BREQ;
    Ifx_SRC_SRCR LBREQ;
    Ifx_SRC_SRCR SREQ;
    Ifx_SRC_SRCR LSREQ;
    Ifx_SRC_SRCR ERR;
    Ifx_SRC_SRCR P;
    unsigned char reserved_18[56];
} Ifx_SRC_I2C;


typedef volatile struct _Ifx_SRC_LMU
{
    Ifx_SRC_SRCR SR;
} Ifx_SRC_LMU;


typedef volatile struct _Ifx_SRC_MSC
{
    Ifx_SRC_SRCR SR0;
    Ifx_SRC_SRCR SR1;
    Ifx_SRC_SRCR SR2;
    Ifx_SRC_SRCR SR3;
    Ifx_SRC_SRCR SR4;
} Ifx_SRC_MSC;


typedef volatile struct _Ifx_SRC_PMU
{
    Ifx_SRC_SRCR SR;
} Ifx_SRC_PMU;


typedef volatile struct _Ifx_SRC_PSI5
{
    Ifx_SRC_SRCR SR[8];
} Ifx_SRC_PSI5;


typedef volatile struct _Ifx_SRC_PSI5S
{
    Ifx_SRC_SRCR SR[8];
} Ifx_SRC_PSI5S;


typedef volatile struct _Ifx_SRC_QSPI
{
    Ifx_SRC_SRCR TX;
    Ifx_SRC_SRCR RX;
    Ifx_SRC_SRCR ERR;
    Ifx_SRC_SRCR PT;
    unsigned char reserved_10[4];
    Ifx_SRC_SRCR U;
} Ifx_SRC_QSPI;


typedef volatile struct _Ifx_SRC_SCU
{
    Ifx_SRC_SRCR DTS;
    Ifx_SRC_SRCR ERU[4];
} Ifx_SRC_SCU;


typedef volatile struct _Ifx_SRC_SENT
{
    Ifx_SRC_SRCR SR[10];
} Ifx_SRC_SENT;


typedef volatile struct _Ifx_SRC_SMU
{
    Ifx_SRC_SRCR SR[3];
} Ifx_SRC_SMU;


typedef volatile struct _Ifx_SRC_STM
{
    Ifx_SRC_SRCR SR0;
    Ifx_SRC_SRCR SR1;
} Ifx_SRC_STM;


typedef volatile struct _Ifx_SRC_VADCCG
{
    Ifx_SRC_SRCR SR0;
    Ifx_SRC_SRCR SR1;
    Ifx_SRC_SRCR SR2;
    Ifx_SRC_SRCR SR3;
} Ifx_SRC_VADCCG;


typedef volatile struct _Ifx_SRC_VADCG
{
    Ifx_SRC_SRCR SR0;
    Ifx_SRC_SRCR SR1;
    Ifx_SRC_SRCR SR2;
    Ifx_SRC_SRCR SR3;
} Ifx_SRC_VADCG;


typedef volatile struct _Ifx_SRC_XBAR
{
    Ifx_SRC_SRCR SRC;
} Ifx_SRC_XBAR;
# 382 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxSrc_regdef.h" 3
typedef volatile struct _Ifx_SRC_GAGBT
{
    Ifx_SRC_AGBT AGBT[1];
} Ifx_SRC_GAGBT;


typedef volatile struct _Ifx_SRC_GASCLIN
{
    Ifx_SRC_ASCLIN ASCLIN[4];
} Ifx_SRC_GASCLIN;


typedef volatile struct _Ifx_SRC_GBCU
{
    Ifx_SRC_BCUSPB SPB;
} Ifx_SRC_GBCU;


typedef volatile struct _Ifx_SRC_GCAN
{
    Ifx_SRC_CAN CAN[1];
} Ifx_SRC_GCAN;


typedef volatile struct _Ifx_SRC_GCCU6
{
    Ifx_SRC_CCU6 CCU6[2];
} Ifx_SRC_GCCU6;


typedef volatile struct _Ifx_SRC_GCERBERUS
{
    Ifx_SRC_CERBERUS CERBERUS;
} Ifx_SRC_GCERBERUS;


typedef volatile struct _Ifx_SRC_GCIF
{
    Ifx_SRC_CIF CIF[1];
} Ifx_SRC_GCIF;


typedef volatile struct _Ifx_SRC_GCPU
{
    Ifx_SRC_CPU CPU[3];
} Ifx_SRC_GCPU;


typedef volatile struct _Ifx_SRC_GDAM
{
    Ifx_SRC_DAM DAM[1];
} Ifx_SRC_GDAM;


typedef volatile struct _Ifx_SRC_GDMA
{
    Ifx_SRC_DMA DMA[1];
} Ifx_SRC_GDMA;


typedef volatile struct _Ifx_SRC_GDSADC
{
    Ifx_SRC_DSADC DSADC[6];
} Ifx_SRC_GDSADC;


typedef volatile struct _Ifx_SRC_GEMEM
{
    Ifx_SRC_EMEM EMEM[1];
} Ifx_SRC_GEMEM;


typedef volatile struct _Ifx_SRC_GERAY
{
    Ifx_SRC_ERAY ERAY[1];
} Ifx_SRC_GERAY;


typedef volatile struct _Ifx_SRC_GETH
{
    Ifx_SRC_ETH ETH[1];
} Ifx_SRC_GETH;


typedef volatile struct _Ifx_SRC_GFCE
{
    Ifx_SRC_FCE FCE[1];
} Ifx_SRC_GFCE;


typedef volatile struct _Ifx_SRC_GGPSR
{
    Ifx_SRC_GPSR GPSR[3];
} Ifx_SRC_GGPSR;


typedef volatile struct _Ifx_SRC_GGPT12
{
    Ifx_SRC_GPT12 GPT12[1];
} Ifx_SRC_GGPT12;


typedef volatile struct _Ifx_SRC_GGTM
{
    Ifx_SRC_GTM GTM[1];
} Ifx_SRC_GGTM;


typedef volatile struct _Ifx_SRC_GHSCT
{
    Ifx_SRC_HSCT HSCT[1];
} Ifx_SRC_GHSCT;


typedef volatile struct _Ifx_SRC_GHSM
{
    Ifx_SRC_HSM HSM[1];
} Ifx_SRC_GHSM;


typedef volatile struct _Ifx_SRC_GHSSL
{
    Ifx_SRC_HSSL HSSL[4];
    Ifx_SRC_SRCR EXI;
} Ifx_SRC_GHSSL;


typedef volatile struct _Ifx_SRC_GI2C
{
    Ifx_SRC_I2C I2C[1];
} Ifx_SRC_GI2C;


typedef volatile struct _Ifx_SRC_GLMU
{
    Ifx_SRC_LMU LMU[1];
} Ifx_SRC_GLMU;


typedef volatile struct _Ifx_SRC_GMSC
{
    Ifx_SRC_MSC MSC[2];
} Ifx_SRC_GMSC;


typedef volatile struct _Ifx_SRC_GPMU
{
    Ifx_SRC_PMU PMU[2];
} Ifx_SRC_GPMU;


typedef volatile struct _Ifx_SRC_GPSI5
{
    Ifx_SRC_PSI5 PSI5[1];
} Ifx_SRC_GPSI5;


typedef volatile struct _Ifx_SRC_GPSI5S
{
    Ifx_SRC_PSI5S PSI5S[1];
} Ifx_SRC_GPSI5S;


typedef volatile struct _Ifx_SRC_GQSPI
{
    Ifx_SRC_QSPI QSPI[4];
} Ifx_SRC_GQSPI;


typedef volatile struct _Ifx_SRC_GSCU
{
    Ifx_SRC_SCU SCU;
} Ifx_SRC_GSCU;


typedef volatile struct _Ifx_SRC_GSENT
{
    Ifx_SRC_SENT SENT[1];
} Ifx_SRC_GSENT;


typedef volatile struct _Ifx_SRC_GSMU
{
    Ifx_SRC_SMU SMU[1];
} Ifx_SRC_GSMU;


typedef volatile struct _Ifx_SRC_GSTM
{
    Ifx_SRC_STM STM[3];
} Ifx_SRC_GSTM;


typedef volatile struct _Ifx_SRC_GVADC
{
    Ifx_SRC_VADCG G[8];
    unsigned char reserved_80[160];
    Ifx_SRC_VADCCG CG[2];
} Ifx_SRC_GVADC;


typedef volatile struct _Ifx_SRC_GXBAR
{
    Ifx_SRC_XBAR XBAR;
} Ifx_SRC_GXBAR;
# 599 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxSrc_regdef.h" 3
typedef volatile struct _Ifx_SRC
{
    Ifx_SRC_GCPU CPU;
    unsigned char reserved_C[20];
    Ifx_SRC_GEMEM EMEM;
    Ifx_SRC_GAGBT AGBT;
    unsigned char reserved_28[24];
    Ifx_SRC_GBCU BCU;
    unsigned char reserved_44[4];
    Ifx_SRC_GXBAR XBAR;
    unsigned char reserved_4C[4];
    Ifx_SRC_GCERBERUS CERBERUS;
    unsigned char reserved_58[40];
    Ifx_SRC_GASCLIN ASCLIN;
    unsigned char reserved_B0[224];
    Ifx_SRC_GQSPI QSPI;
    unsigned char reserved_1F0[160];
    Ifx_SRC_GHSCT HSCT;
    unsigned char reserved_294[12];
    Ifx_SRC_GHSSL HSSL;
    unsigned char reserved_2E4[28];
    Ifx_SRC_GI2C I2C;
    Ifx_SRC_GSENT SENT;
    unsigned char reserved_378[104];
    Ifx_SRC_GMSC MSC;
    unsigned char reserved_408[24];
    Ifx_SRC_GCCU6 CCU6;
    unsigned char reserved_440[32];
    Ifx_SRC_GGPT12 GPT12;
    Ifx_SRC_GSTM STM;
    unsigned char reserved_4A8[8];
    Ifx_SRC_GFCE FCE;
    unsigned char reserved_4B4[60];
    Ifx_SRC_GDMA DMA;
    unsigned char reserved_600[752];
    Ifx_SRC_GETH ETH;
    unsigned char reserved_8F4[12];
    Ifx_SRC_GCAN CAN;
    unsigned char reserved_940[64];
    Ifx_SRC_GVADC VADC;
    unsigned char reserved_AC0[144];
    Ifx_SRC_GDSADC DSADC;
    unsigned char reserved_B80[96];
    Ifx_SRC_GERAY ERAY;
    Ifx_SRC_GPMU PMU;
    unsigned char reserved_C38[136];
    Ifx_SRC_GHSM HSM;
    unsigned char reserved_CC8[8];
    Ifx_SRC_GSCU SCU;
    unsigned char reserved_CE4[44];
    Ifx_SRC_GSMU SMU;
    unsigned char reserved_D1C[20];
    Ifx_SRC_GPSI5 PSI5;
    unsigned char reserved_D50[32];
    Ifx_SRC_GDAM DAM;
    unsigned char reserved_D88[24];
    Ifx_SRC_GCIF CIF;
    unsigned char reserved_DB0[48];
    Ifx_SRC_GLMU LMU;
    unsigned char reserved_DE4[12];
    Ifx_SRC_GPSI5S PSI5S;
    unsigned char reserved_E10[496];
    Ifx_SRC_GGPSR GPSR;
    unsigned char reserved_1060[1440];
    Ifx_SRC_GGTM GTM;
    unsigned char reserved_1F50[176];
} Ifx_SRC;
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxSrc_reg.h" 2 3





#define MODULE_SRC (*(Ifx_SRC*)0xF0038000u)







#define SRC_AGBT_AGBT0_SR (*(volatile Ifx_SRC_SRCR*)0xF0038024u)




#define SRC_AGBT (SRC_AGBT_AGBT0_SR)


#define SRC_ASCLIN_ASCLIN0_ERR (*(volatile Ifx_SRC_SRCR*)0xF0038088u)




#define SRC_ASCLIN0ERR (SRC_ASCLIN_ASCLIN0_ERR)


#define SRC_ASCLIN_ASCLIN0_RX (*(volatile Ifx_SRC_SRCR*)0xF0038084u)




#define SRC_ASCLIN0RX (SRC_ASCLIN_ASCLIN0_RX)


#define SRC_ASCLIN_ASCLIN0_TX (*(volatile Ifx_SRC_SRCR*)0xF0038080u)




#define SRC_ASCLIN0TX (SRC_ASCLIN_ASCLIN0_TX)


#define SRC_ASCLIN_ASCLIN1_ERR (*(volatile Ifx_SRC_SRCR*)0xF0038094u)




#define SRC_ASCLIN1ERR (SRC_ASCLIN_ASCLIN1_ERR)


#define SRC_ASCLIN_ASCLIN1_RX (*(volatile Ifx_SRC_SRCR*)0xF0038090u)




#define SRC_ASCLIN1RX (SRC_ASCLIN_ASCLIN1_RX)


#define SRC_ASCLIN_ASCLIN1_TX (*(volatile Ifx_SRC_SRCR*)0xF003808Cu)




#define SRC_ASCLIN1TX (SRC_ASCLIN_ASCLIN1_TX)


#define SRC_ASCLIN_ASCLIN2_ERR (*(volatile Ifx_SRC_SRCR*)0xF00380A0u)




#define SRC_ASCLIN2ERR (SRC_ASCLIN_ASCLIN2_ERR)


#define SRC_ASCLIN_ASCLIN2_RX (*(volatile Ifx_SRC_SRCR*)0xF003809Cu)




#define SRC_ASCLIN2RX (SRC_ASCLIN_ASCLIN2_RX)


#define SRC_ASCLIN_ASCLIN2_TX (*(volatile Ifx_SRC_SRCR*)0xF0038098u)




#define SRC_ASCLIN2TX (SRC_ASCLIN_ASCLIN2_TX)


#define SRC_ASCLIN_ASCLIN3_ERR (*(volatile Ifx_SRC_SRCR*)0xF00380ACu)




#define SRC_ASCLIN3ERR (SRC_ASCLIN_ASCLIN3_ERR)


#define SRC_ASCLIN_ASCLIN3_RX (*(volatile Ifx_SRC_SRCR*)0xF00380A8u)




#define SRC_ASCLIN3RX (SRC_ASCLIN_ASCLIN3_RX)


#define SRC_ASCLIN_ASCLIN3_TX (*(volatile Ifx_SRC_SRCR*)0xF00380A4u)




#define SRC_ASCLIN3TX (SRC_ASCLIN_ASCLIN3_TX)


#define SRC_BCU_SPB_SBSRC (*(volatile Ifx_SRC_SRCR*)0xF0038040u)




#define SRC_BCUSPBSBSRC (SRC_BCU_SPB_SBSRC)


#define SRC_CAN_CAN0_INT0 (*(volatile Ifx_SRC_SRCR*)0xF0038900u)




#define SRC_CANINT0 (SRC_CAN_CAN0_INT0)


#define SRC_CAN_CAN0_INT1 (*(volatile Ifx_SRC_SRCR*)0xF0038904u)




#define SRC_CANINT1 (SRC_CAN_CAN0_INT1)


#define SRC_CAN_CAN0_INT10 (*(volatile Ifx_SRC_SRCR*)0xF0038928u)




#define SRC_CANINT10 (SRC_CAN_CAN0_INT10)


#define SRC_CAN_CAN0_INT11 (*(volatile Ifx_SRC_SRCR*)0xF003892Cu)




#define SRC_CANINT11 (SRC_CAN_CAN0_INT11)


#define SRC_CAN_CAN0_INT12 (*(volatile Ifx_SRC_SRCR*)0xF0038930u)




#define SRC_CANINT12 (SRC_CAN_CAN0_INT12)


#define SRC_CAN_CAN0_INT13 (*(volatile Ifx_SRC_SRCR*)0xF0038934u)




#define SRC_CANINT13 (SRC_CAN_CAN0_INT13)


#define SRC_CAN_CAN0_INT14 (*(volatile Ifx_SRC_SRCR*)0xF0038938u)




#define SRC_CANINT14 (SRC_CAN_CAN0_INT14)


#define SRC_CAN_CAN0_INT15 (*(volatile Ifx_SRC_SRCR*)0xF003893Cu)




#define SRC_CANINT15 (SRC_CAN_CAN0_INT15)


#define SRC_CAN_CAN0_INT2 (*(volatile Ifx_SRC_SRCR*)0xF0038908u)




#define SRC_CANINT2 (SRC_CAN_CAN0_INT2)


#define SRC_CAN_CAN0_INT3 (*(volatile Ifx_SRC_SRCR*)0xF003890Cu)




#define SRC_CANINT3 (SRC_CAN_CAN0_INT3)


#define SRC_CAN_CAN0_INT4 (*(volatile Ifx_SRC_SRCR*)0xF0038910u)




#define SRC_CANINT4 (SRC_CAN_CAN0_INT4)


#define SRC_CAN_CAN0_INT5 (*(volatile Ifx_SRC_SRCR*)0xF0038914u)




#define SRC_CANINT5 (SRC_CAN_CAN0_INT5)


#define SRC_CAN_CAN0_INT6 (*(volatile Ifx_SRC_SRCR*)0xF0038918u)




#define SRC_CANINT6 (SRC_CAN_CAN0_INT6)


#define SRC_CAN_CAN0_INT7 (*(volatile Ifx_SRC_SRCR*)0xF003891Cu)




#define SRC_CANINT7 (SRC_CAN_CAN0_INT7)


#define SRC_CAN_CAN0_INT8 (*(volatile Ifx_SRC_SRCR*)0xF0038920u)




#define SRC_CANINT8 (SRC_CAN_CAN0_INT8)


#define SRC_CAN_CAN0_INT9 (*(volatile Ifx_SRC_SRCR*)0xF0038924u)




#define SRC_CANINT9 (SRC_CAN_CAN0_INT9)


#define SRC_CCU6_CCU60_SR0 (*(volatile Ifx_SRC_SRCR*)0xF0038420u)




#define SRC_CCU60SR0 (SRC_CCU6_CCU60_SR0)


#define SRC_CCU6_CCU60_SR1 (*(volatile Ifx_SRC_SRCR*)0xF0038424u)




#define SRC_CCU60SR1 (SRC_CCU6_CCU60_SR1)


#define SRC_CCU6_CCU60_SR2 (*(volatile Ifx_SRC_SRCR*)0xF0038428u)




#define SRC_CCU60SR2 (SRC_CCU6_CCU60_SR2)


#define SRC_CCU6_CCU60_SR3 (*(volatile Ifx_SRC_SRCR*)0xF003842Cu)




#define SRC_CCU60SR3 (SRC_CCU6_CCU60_SR3)


#define SRC_CCU6_CCU61_SR0 (*(volatile Ifx_SRC_SRCR*)0xF0038430u)




#define SRC_CCU61SR0 (SRC_CCU6_CCU61_SR0)


#define SRC_CCU6_CCU61_SR1 (*(volatile Ifx_SRC_SRCR*)0xF0038434u)




#define SRC_CCU61SR1 (SRC_CCU6_CCU61_SR1)


#define SRC_CCU6_CCU61_SR2 (*(volatile Ifx_SRC_SRCR*)0xF0038438u)




#define SRC_CCU61SR2 (SRC_CCU6_CCU61_SR2)


#define SRC_CCU6_CCU61_SR3 (*(volatile Ifx_SRC_SRCR*)0xF003843Cu)




#define SRC_CCU61SR3 (SRC_CCU6_CCU61_SR3)


#define SRC_CERBERUS_CERBERUS_SR0 (*(volatile Ifx_SRC_SRCR*)0xF0038050u)




#define SRC_CERBERUS0 (SRC_CERBERUS_CERBERUS_SR0)


#define SRC_CERBERUS_CERBERUS_SR1 (*(volatile Ifx_SRC_SRCR*)0xF0038054u)




#define SRC_CERBERUS1 (SRC_CERBERUS_CERBERUS_SR1)


#define SRC_CIF_CIF0_ISP (*(volatile Ifx_SRC_SRCR*)0xF0038DA8u)




#define SRC_CIFISP (SRC_CIF_CIF0_ISP)


#define SRC_CIF_CIF0_MI (*(volatile Ifx_SRC_SRCR*)0xF0038DA0u)




#define SRC_CIFMI (SRC_CIF_CIF0_MI)


#define SRC_CIF_CIF0_MIEP (*(volatile Ifx_SRC_SRCR*)0xF0038DA4u)




#define SRC_CIFMIEP (SRC_CIF_CIF0_MIEP)


#define SRC_CIF_CIF0_MJPEG (*(volatile Ifx_SRC_SRCR*)0xF0038DACu)




#define SRC_CIFMJPEG (SRC_CIF_CIF0_MJPEG)


#define SRC_CPU_CPU0_SBSRC (*(volatile Ifx_SRC_SRCR*)0xF0038000u)




#define SRC_CPU0SBSRC (SRC_CPU_CPU0_SBSRC)


#define SRC_CPU_CPU1_SBSRC (*(volatile Ifx_SRC_SRCR*)0xF0038004u)




#define SRC_CPU1SBSRC (SRC_CPU_CPU1_SBSRC)


#define SRC_CPU_CPU2_SBSRC (*(volatile Ifx_SRC_SRCR*)0xF0038008u)




#define SRC_CPU2SBSRC (SRC_CPU_CPU2_SBSRC)


#define SRC_DAM_DAM0_SR0 (*(volatile Ifx_SRC_SRCR*)0xF0038D70u)




#define SRC_DAM0 (SRC_DAM_DAM0_SR0)


#define SRC_DAM_DAM0_SR1 (*(volatile Ifx_SRC_SRCR*)0xF0038D74u)




#define SRC_DAM1 (SRC_DAM_DAM0_SR1)


#define SRC_DAM_DAM0_SR2 (*(volatile Ifx_SRC_SRCR*)0xF0038D78u)




#define SRC_DAM2 (SRC_DAM_DAM0_SR2)


#define SRC_DAM_DAM0_SR3 (*(volatile Ifx_SRC_SRCR*)0xF0038D7Cu)




#define SRC_DAM3 (SRC_DAM_DAM0_SR3)


#define SRC_DAM_DAM0_SR4 (*(volatile Ifx_SRC_SRCR*)0xF0038D80u)




#define SRC_DAM4 (SRC_DAM_DAM0_SR4)


#define SRC_DAM_DAM0_SR5 (*(volatile Ifx_SRC_SRCR*)0xF0038D84u)




#define SRC_DAM5 (SRC_DAM_DAM0_SR5)


#define SRC_DMA_DMA0_CH0 (*(volatile Ifx_SRC_SRCR*)0xF0038500u)




#define SRC_DMACH0 (SRC_DMA_DMA0_CH0)


#define SRC_DMA_DMA0_CH1 (*(volatile Ifx_SRC_SRCR*)0xF0038504u)




#define SRC_DMACH1 (SRC_DMA_DMA0_CH1)


#define SRC_DMA_DMA0_CH10 (*(volatile Ifx_SRC_SRCR*)0xF0038528u)




#define SRC_DMACH10 (SRC_DMA_DMA0_CH10)


#define SRC_DMA_DMA0_CH11 (*(volatile Ifx_SRC_SRCR*)0xF003852Cu)




#define SRC_DMACH11 (SRC_DMA_DMA0_CH11)


#define SRC_DMA_DMA0_CH12 (*(volatile Ifx_SRC_SRCR*)0xF0038530u)




#define SRC_DMACH12 (SRC_DMA_DMA0_CH12)


#define SRC_DMA_DMA0_CH13 (*(volatile Ifx_SRC_SRCR*)0xF0038534u)




#define SRC_DMACH13 (SRC_DMA_DMA0_CH13)


#define SRC_DMA_DMA0_CH14 (*(volatile Ifx_SRC_SRCR*)0xF0038538u)




#define SRC_DMACH14 (SRC_DMA_DMA0_CH14)


#define SRC_DMA_DMA0_CH15 (*(volatile Ifx_SRC_SRCR*)0xF003853Cu)




#define SRC_DMACH15 (SRC_DMA_DMA0_CH15)


#define SRC_DMA_DMA0_CH16 (*(volatile Ifx_SRC_SRCR*)0xF0038540u)




#define SRC_DMACH16 (SRC_DMA_DMA0_CH16)


#define SRC_DMA_DMA0_CH17 (*(volatile Ifx_SRC_SRCR*)0xF0038544u)




#define SRC_DMACH17 (SRC_DMA_DMA0_CH17)


#define SRC_DMA_DMA0_CH18 (*(volatile Ifx_SRC_SRCR*)0xF0038548u)




#define SRC_DMACH18 (SRC_DMA_DMA0_CH18)


#define SRC_DMA_DMA0_CH19 (*(volatile Ifx_SRC_SRCR*)0xF003854Cu)




#define SRC_DMACH19 (SRC_DMA_DMA0_CH19)


#define SRC_DMA_DMA0_CH2 (*(volatile Ifx_SRC_SRCR*)0xF0038508u)




#define SRC_DMACH2 (SRC_DMA_DMA0_CH2)


#define SRC_DMA_DMA0_CH20 (*(volatile Ifx_SRC_SRCR*)0xF0038550u)




#define SRC_DMACH20 (SRC_DMA_DMA0_CH20)


#define SRC_DMA_DMA0_CH21 (*(volatile Ifx_SRC_SRCR*)0xF0038554u)




#define SRC_DMACH21 (SRC_DMA_DMA0_CH21)


#define SRC_DMA_DMA0_CH22 (*(volatile Ifx_SRC_SRCR*)0xF0038558u)




#define SRC_DMACH22 (SRC_DMA_DMA0_CH22)


#define SRC_DMA_DMA0_CH23 (*(volatile Ifx_SRC_SRCR*)0xF003855Cu)




#define SRC_DMACH23 (SRC_DMA_DMA0_CH23)


#define SRC_DMA_DMA0_CH24 (*(volatile Ifx_SRC_SRCR*)0xF0038560u)




#define SRC_DMACH24 (SRC_DMA_DMA0_CH24)


#define SRC_DMA_DMA0_CH25 (*(volatile Ifx_SRC_SRCR*)0xF0038564u)




#define SRC_DMACH25 (SRC_DMA_DMA0_CH25)


#define SRC_DMA_DMA0_CH26 (*(volatile Ifx_SRC_SRCR*)0xF0038568u)




#define SRC_DMACH26 (SRC_DMA_DMA0_CH26)


#define SRC_DMA_DMA0_CH27 (*(volatile Ifx_SRC_SRCR*)0xF003856Cu)




#define SRC_DMACH27 (SRC_DMA_DMA0_CH27)


#define SRC_DMA_DMA0_CH28 (*(volatile Ifx_SRC_SRCR*)0xF0038570u)




#define SRC_DMACH28 (SRC_DMA_DMA0_CH28)


#define SRC_DMA_DMA0_CH29 (*(volatile Ifx_SRC_SRCR*)0xF0038574u)




#define SRC_DMACH29 (SRC_DMA_DMA0_CH29)


#define SRC_DMA_DMA0_CH3 (*(volatile Ifx_SRC_SRCR*)0xF003850Cu)




#define SRC_DMACH3 (SRC_DMA_DMA0_CH3)


#define SRC_DMA_DMA0_CH30 (*(volatile Ifx_SRC_SRCR*)0xF0038578u)




#define SRC_DMACH30 (SRC_DMA_DMA0_CH30)


#define SRC_DMA_DMA0_CH31 (*(volatile Ifx_SRC_SRCR*)0xF003857Cu)




#define SRC_DMACH31 (SRC_DMA_DMA0_CH31)


#define SRC_DMA_DMA0_CH32 (*(volatile Ifx_SRC_SRCR*)0xF0038580u)




#define SRC_DMACH32 (SRC_DMA_DMA0_CH32)


#define SRC_DMA_DMA0_CH33 (*(volatile Ifx_SRC_SRCR*)0xF0038584u)




#define SRC_DMACH33 (SRC_DMA_DMA0_CH33)


#define SRC_DMA_DMA0_CH34 (*(volatile Ifx_SRC_SRCR*)0xF0038588u)




#define SRC_DMACH34 (SRC_DMA_DMA0_CH34)


#define SRC_DMA_DMA0_CH35 (*(volatile Ifx_SRC_SRCR*)0xF003858Cu)




#define SRC_DMACH35 (SRC_DMA_DMA0_CH35)


#define SRC_DMA_DMA0_CH36 (*(volatile Ifx_SRC_SRCR*)0xF0038590u)




#define SRC_DMACH36 (SRC_DMA_DMA0_CH36)


#define SRC_DMA_DMA0_CH37 (*(volatile Ifx_SRC_SRCR*)0xF0038594u)




#define SRC_DMACH37 (SRC_DMA_DMA0_CH37)


#define SRC_DMA_DMA0_CH38 (*(volatile Ifx_SRC_SRCR*)0xF0038598u)




#define SRC_DMACH38 (SRC_DMA_DMA0_CH38)


#define SRC_DMA_DMA0_CH39 (*(volatile Ifx_SRC_SRCR*)0xF003859Cu)




#define SRC_DMACH39 (SRC_DMA_DMA0_CH39)


#define SRC_DMA_DMA0_CH4 (*(volatile Ifx_SRC_SRCR*)0xF0038510u)




#define SRC_DMACH4 (SRC_DMA_DMA0_CH4)


#define SRC_DMA_DMA0_CH40 (*(volatile Ifx_SRC_SRCR*)0xF00385A0u)




#define SRC_DMACH40 (SRC_DMA_DMA0_CH40)


#define SRC_DMA_DMA0_CH41 (*(volatile Ifx_SRC_SRCR*)0xF00385A4u)




#define SRC_DMACH41 (SRC_DMA_DMA0_CH41)


#define SRC_DMA_DMA0_CH42 (*(volatile Ifx_SRC_SRCR*)0xF00385A8u)




#define SRC_DMACH42 (SRC_DMA_DMA0_CH42)


#define SRC_DMA_DMA0_CH43 (*(volatile Ifx_SRC_SRCR*)0xF00385ACu)




#define SRC_DMACH43 (SRC_DMA_DMA0_CH43)


#define SRC_DMA_DMA0_CH44 (*(volatile Ifx_SRC_SRCR*)0xF00385B0u)




#define SRC_DMACH44 (SRC_DMA_DMA0_CH44)


#define SRC_DMA_DMA0_CH45 (*(volatile Ifx_SRC_SRCR*)0xF00385B4u)




#define SRC_DMACH45 (SRC_DMA_DMA0_CH45)


#define SRC_DMA_DMA0_CH46 (*(volatile Ifx_SRC_SRCR*)0xF00385B8u)




#define SRC_DMACH46 (SRC_DMA_DMA0_CH46)


#define SRC_DMA_DMA0_CH47 (*(volatile Ifx_SRC_SRCR*)0xF00385BCu)




#define SRC_DMACH47 (SRC_DMA_DMA0_CH47)


#define SRC_DMA_DMA0_CH48 (*(volatile Ifx_SRC_SRCR*)0xF00385C0u)




#define SRC_DMACH48 (SRC_DMA_DMA0_CH48)


#define SRC_DMA_DMA0_CH49 (*(volatile Ifx_SRC_SRCR*)0xF00385C4u)




#define SRC_DMACH49 (SRC_DMA_DMA0_CH49)


#define SRC_DMA_DMA0_CH5 (*(volatile Ifx_SRC_SRCR*)0xF0038514u)




#define SRC_DMACH5 (SRC_DMA_DMA0_CH5)


#define SRC_DMA_DMA0_CH50 (*(volatile Ifx_SRC_SRCR*)0xF00385C8u)




#define SRC_DMACH50 (SRC_DMA_DMA0_CH50)


#define SRC_DMA_DMA0_CH51 (*(volatile Ifx_SRC_SRCR*)0xF00385CCu)




#define SRC_DMACH51 (SRC_DMA_DMA0_CH51)


#define SRC_DMA_DMA0_CH52 (*(volatile Ifx_SRC_SRCR*)0xF00385D0u)




#define SRC_DMACH52 (SRC_DMA_DMA0_CH52)


#define SRC_DMA_DMA0_CH53 (*(volatile Ifx_SRC_SRCR*)0xF00385D4u)




#define SRC_DMACH53 (SRC_DMA_DMA0_CH53)


#define SRC_DMA_DMA0_CH54 (*(volatile Ifx_SRC_SRCR*)0xF00385D8u)




#define SRC_DMACH54 (SRC_DMA_DMA0_CH54)


#define SRC_DMA_DMA0_CH55 (*(volatile Ifx_SRC_SRCR*)0xF00385DCu)




#define SRC_DMACH55 (SRC_DMA_DMA0_CH55)


#define SRC_DMA_DMA0_CH56 (*(volatile Ifx_SRC_SRCR*)0xF00385E0u)




#define SRC_DMACH56 (SRC_DMA_DMA0_CH56)


#define SRC_DMA_DMA0_CH57 (*(volatile Ifx_SRC_SRCR*)0xF00385E4u)




#define SRC_DMACH57 (SRC_DMA_DMA0_CH57)


#define SRC_DMA_DMA0_CH58 (*(volatile Ifx_SRC_SRCR*)0xF00385E8u)




#define SRC_DMACH58 (SRC_DMA_DMA0_CH58)


#define SRC_DMA_DMA0_CH59 (*(volatile Ifx_SRC_SRCR*)0xF00385ECu)




#define SRC_DMACH59 (SRC_DMA_DMA0_CH59)


#define SRC_DMA_DMA0_CH6 (*(volatile Ifx_SRC_SRCR*)0xF0038518u)




#define SRC_DMACH6 (SRC_DMA_DMA0_CH6)


#define SRC_DMA_DMA0_CH60 (*(volatile Ifx_SRC_SRCR*)0xF00385F0u)




#define SRC_DMACH60 (SRC_DMA_DMA0_CH60)


#define SRC_DMA_DMA0_CH61 (*(volatile Ifx_SRC_SRCR*)0xF00385F4u)




#define SRC_DMACH61 (SRC_DMA_DMA0_CH61)


#define SRC_DMA_DMA0_CH62 (*(volatile Ifx_SRC_SRCR*)0xF00385F8u)




#define SRC_DMACH62 (SRC_DMA_DMA0_CH62)


#define SRC_DMA_DMA0_CH63 (*(volatile Ifx_SRC_SRCR*)0xF00385FCu)




#define SRC_DMACH63 (SRC_DMA_DMA0_CH63)


#define SRC_DMA_DMA0_CH7 (*(volatile Ifx_SRC_SRCR*)0xF003851Cu)




#define SRC_DMACH7 (SRC_DMA_DMA0_CH7)


#define SRC_DMA_DMA0_CH8 (*(volatile Ifx_SRC_SRCR*)0xF0038520u)




#define SRC_DMACH8 (SRC_DMA_DMA0_CH8)


#define SRC_DMA_DMA0_CH9 (*(volatile Ifx_SRC_SRCR*)0xF0038524u)




#define SRC_DMACH9 (SRC_DMA_DMA0_CH9)


#define SRC_DMA_DMA0_ERR (*(volatile Ifx_SRC_SRCR*)0xF00384F0u)




#define SRC_DMAERR (SRC_DMA_DMA0_ERR)


#define SRC_DSADC_DSADC0_SRA (*(volatile Ifx_SRC_SRCR*)0xF0038B54u)




#define SRC_DSADCSRA0 (SRC_DSADC_DSADC0_SRA)


#define SRC_DSADC_DSADC0_SRM (*(volatile Ifx_SRC_SRCR*)0xF0038B50u)




#define SRC_DSADCSRM0 (SRC_DSADC_DSADC0_SRM)


#define SRC_DSADC_DSADC1_SRA (*(volatile Ifx_SRC_SRCR*)0xF0038B5Cu)




#define SRC_DSADCSRA1 (SRC_DSADC_DSADC1_SRA)


#define SRC_DSADC_DSADC1_SRM (*(volatile Ifx_SRC_SRCR*)0xF0038B58u)




#define SRC_DSADCSRM1 (SRC_DSADC_DSADC1_SRM)


#define SRC_DSADC_DSADC2_SRA (*(volatile Ifx_SRC_SRCR*)0xF0038B64u)




#define SRC_DSADCSRA2 (SRC_DSADC_DSADC2_SRA)


#define SRC_DSADC_DSADC2_SRM (*(volatile Ifx_SRC_SRCR*)0xF0038B60u)




#define SRC_DSADCSRM2 (SRC_DSADC_DSADC2_SRM)


#define SRC_DSADC_DSADC3_SRA (*(volatile Ifx_SRC_SRCR*)0xF0038B6Cu)




#define SRC_DSADCSRA3 (SRC_DSADC_DSADC3_SRA)


#define SRC_DSADC_DSADC3_SRM (*(volatile Ifx_SRC_SRCR*)0xF0038B68u)




#define SRC_DSADCSRM3 (SRC_DSADC_DSADC3_SRM)


#define SRC_DSADC_DSADC4_SRA (*(volatile Ifx_SRC_SRCR*)0xF0038B74u)




#define SRC_DSADCSRA4 (SRC_DSADC_DSADC4_SRA)


#define SRC_DSADC_DSADC4_SRM (*(volatile Ifx_SRC_SRCR*)0xF0038B70u)




#define SRC_DSADCSRM4 (SRC_DSADC_DSADC4_SRM)


#define SRC_DSADC_DSADC5_SRA (*(volatile Ifx_SRC_SRCR*)0xF0038B7Cu)




#define SRC_DSADCSRA5 (SRC_DSADC_DSADC5_SRA)


#define SRC_DSADC_DSADC5_SRM (*(volatile Ifx_SRC_SRCR*)0xF0038B78u)




#define SRC_DSADCSRM5 (SRC_DSADC_DSADC5_SRM)


#define SRC_EMEM_EMEM0_SR (*(volatile Ifx_SRC_SRCR*)0xF0038020u)




#define SRC_EMEM (SRC_EMEM_EMEM0_SR)


#define SRC_ERAY_ERAY0_IBUSY (*(volatile Ifx_SRC_SRCR*)0xF0038C04u)




#define SRC_ERAYIBUSY (SRC_ERAY_ERAY0_IBUSY)


#define SRC_ERAY_ERAY0_INT0 (*(volatile Ifx_SRC_SRCR*)0xF0038BE0u)




#define SRC_ERAYINT0 (SRC_ERAY_ERAY0_INT0)


#define SRC_ERAY_ERAY0_INT1 (*(volatile Ifx_SRC_SRCR*)0xF0038BE4u)




#define SRC_ERAYINT1 (SRC_ERAY_ERAY0_INT1)


#define SRC_ERAY_ERAY0_MBSC0 (*(volatile Ifx_SRC_SRCR*)0xF0038BF8u)




#define SRC_ERAYMBSC0 (SRC_ERAY_ERAY0_MBSC0)


#define SRC_ERAY_ERAY0_MBSC1 (*(volatile Ifx_SRC_SRCR*)0xF0038BFCu)




#define SRC_ERAYMBSC1 (SRC_ERAY_ERAY0_MBSC1)


#define SRC_ERAY_ERAY0_NDAT0 (*(volatile Ifx_SRC_SRCR*)0xF0038BF0u)




#define SRC_ERAYNDAT0 (SRC_ERAY_ERAY0_NDAT0)


#define SRC_ERAY_ERAY0_NDAT1 (*(volatile Ifx_SRC_SRCR*)0xF0038BF4u)




#define SRC_ERAYNDAT1 (SRC_ERAY_ERAY0_NDAT1)


#define SRC_ERAY_ERAY0_OBUSY (*(volatile Ifx_SRC_SRCR*)0xF0038C00u)




#define SRC_ERAYOBUSY (SRC_ERAY_ERAY0_OBUSY)


#define SRC_ERAY_ERAY0_TINT0 (*(volatile Ifx_SRC_SRCR*)0xF0038BE8u)




#define SRC_ERAYTINT0 (SRC_ERAY_ERAY0_TINT0)


#define SRC_ERAY_ERAY0_TINT1 (*(volatile Ifx_SRC_SRCR*)0xF0038BECu)




#define SRC_ERAYTINT1 (SRC_ERAY_ERAY0_TINT1)


#define SRC_ETH_ETH0_SR (*(volatile Ifx_SRC_SRCR*)0xF00388F0u)




#define SRC_ETH (SRC_ETH_ETH0_SR)


#define SRC_FCE_FCE0_SR (*(volatile Ifx_SRC_SRCR*)0xF00384B0u)




#define SRC_FCE (SRC_FCE_FCE0_SR)


#define SRC_GPSR_GPSR0_SR0 (*(volatile Ifx_SRC_SRCR*)0xF0039000u)




#define SRC_GPSR00 (SRC_GPSR_GPSR0_SR0)


#define SRC_GPSR_GPSR0_SR1 (*(volatile Ifx_SRC_SRCR*)0xF0039004u)




#define SRC_GPSR01 (SRC_GPSR_GPSR0_SR1)


#define SRC_GPSR_GPSR0_SR2 (*(volatile Ifx_SRC_SRCR*)0xF0039008u)




#define SRC_GPSR02 (SRC_GPSR_GPSR0_SR2)


#define SRC_GPSR_GPSR0_SR3 (*(volatile Ifx_SRC_SRCR*)0xF003900Cu)




#define SRC_GPSR03 (SRC_GPSR_GPSR0_SR3)


#define SRC_GPSR_GPSR1_SR0 (*(volatile Ifx_SRC_SRCR*)0xF0039020u)




#define SRC_GPSR10 (SRC_GPSR_GPSR1_SR0)


#define SRC_GPSR_GPSR1_SR1 (*(volatile Ifx_SRC_SRCR*)0xF0039024u)




#define SRC_GPSR11 (SRC_GPSR_GPSR1_SR1)


#define SRC_GPSR_GPSR1_SR2 (*(volatile Ifx_SRC_SRCR*)0xF0039028u)




#define SRC_GPSR12 (SRC_GPSR_GPSR1_SR2)


#define SRC_GPSR_GPSR1_SR3 (*(volatile Ifx_SRC_SRCR*)0xF003902Cu)




#define SRC_GPSR13 (SRC_GPSR_GPSR1_SR3)


#define SRC_GPSR_GPSR2_SR0 (*(volatile Ifx_SRC_SRCR*)0xF0039040u)




#define SRC_GPSR20 (SRC_GPSR_GPSR2_SR0)


#define SRC_GPSR_GPSR2_SR1 (*(volatile Ifx_SRC_SRCR*)0xF0039044u)




#define SRC_GPSR21 (SRC_GPSR_GPSR2_SR1)


#define SRC_GPSR_GPSR2_SR2 (*(volatile Ifx_SRC_SRCR*)0xF0039048u)




#define SRC_GPSR22 (SRC_GPSR_GPSR2_SR2)


#define SRC_GPSR_GPSR2_SR3 (*(volatile Ifx_SRC_SRCR*)0xF003904Cu)




#define SRC_GPSR23 (SRC_GPSR_GPSR2_SR3)


#define SRC_GPT12_GPT120_CIRQ (*(volatile Ifx_SRC_SRCR*)0xF0038460u)




#define SRC_GPT120CIRQ (SRC_GPT12_GPT120_CIRQ)


#define SRC_GPT12_GPT120_T2 (*(volatile Ifx_SRC_SRCR*)0xF0038464u)




#define SRC_GPT120T2 (SRC_GPT12_GPT120_T2)


#define SRC_GPT12_GPT120_T3 (*(volatile Ifx_SRC_SRCR*)0xF0038468u)




#define SRC_GPT120T3 (SRC_GPT12_GPT120_T3)


#define SRC_GPT12_GPT120_T4 (*(volatile Ifx_SRC_SRCR*)0xF003846Cu)




#define SRC_GPT120T4 (SRC_GPT12_GPT120_T4)


#define SRC_GPT12_GPT120_T5 (*(volatile Ifx_SRC_SRCR*)0xF0038470u)




#define SRC_GPT120T5 (SRC_GPT12_GPT120_T5)


#define SRC_GPT12_GPT120_T6 (*(volatile Ifx_SRC_SRCR*)0xF0038474u)




#define SRC_GPT120T6 (SRC_GPT12_GPT120_T6)


#define SRC_GTM_GTM0_AEIIRQ (*(volatile Ifx_SRC_SRCR*)0xF0039600u)




#define SRC_GTMAEIIRQ (SRC_GTM_GTM0_AEIIRQ)


#define SRC_GTM_GTM0_ARUIRQ0 (*(volatile Ifx_SRC_SRCR*)0xF0039604u)




#define SRC_GTMARUIRQ0 (SRC_GTM_GTM0_ARUIRQ0)


#define SRC_GTM_GTM0_ARUIRQ1 (*(volatile Ifx_SRC_SRCR*)0xF0039608u)




#define SRC_GTMARUIRQ1 (SRC_GTM_GTM0_ARUIRQ1)


#define SRC_GTM_GTM0_ARUIRQ2 (*(volatile Ifx_SRC_SRCR*)0xF003960Cu)




#define SRC_GTMARUIRQ2 (SRC_GTM_GTM0_ARUIRQ2)


#define SRC_GTM_GTM0_ATOM0_0 (*(volatile Ifx_SRC_SRCR*)0xF0039D80u)




#define SRC_GTMATOM00 (SRC_GTM_GTM0_ATOM0_0)


#define SRC_GTM_GTM0_ATOM0_1 (*(volatile Ifx_SRC_SRCR*)0xF0039D84u)




#define SRC_GTMATOM01 (SRC_GTM_GTM0_ATOM0_1)


#define SRC_GTM_GTM0_ATOM0_2 (*(volatile Ifx_SRC_SRCR*)0xF0039D88u)




#define SRC_GTMATOM02 (SRC_GTM_GTM0_ATOM0_2)


#define SRC_GTM_GTM0_ATOM0_3 (*(volatile Ifx_SRC_SRCR*)0xF0039D8Cu)




#define SRC_GTMATOM03 (SRC_GTM_GTM0_ATOM0_3)


#define SRC_GTM_GTM0_ATOM1_0 (*(volatile Ifx_SRC_SRCR*)0xF0039D90u)




#define SRC_GTMATOM10 (SRC_GTM_GTM0_ATOM1_0)


#define SRC_GTM_GTM0_ATOM1_1 (*(volatile Ifx_SRC_SRCR*)0xF0039D94u)




#define SRC_GTMATOM11 (SRC_GTM_GTM0_ATOM1_1)


#define SRC_GTM_GTM0_ATOM1_2 (*(volatile Ifx_SRC_SRCR*)0xF0039D98u)




#define SRC_GTMATOM12 (SRC_GTM_GTM0_ATOM1_2)


#define SRC_GTM_GTM0_ATOM1_3 (*(volatile Ifx_SRC_SRCR*)0xF0039D9Cu)




#define SRC_GTMATOM13 (SRC_GTM_GTM0_ATOM1_3)


#define SRC_GTM_GTM0_ATOM2_0 (*(volatile Ifx_SRC_SRCR*)0xF0039DA0u)




#define SRC_GTMATOM20 (SRC_GTM_GTM0_ATOM2_0)


#define SRC_GTM_GTM0_ATOM2_1 (*(volatile Ifx_SRC_SRCR*)0xF0039DA4u)




#define SRC_GTMATOM21 (SRC_GTM_GTM0_ATOM2_1)


#define SRC_GTM_GTM0_ATOM2_2 (*(volatile Ifx_SRC_SRCR*)0xF0039DA8u)




#define SRC_GTMATOM22 (SRC_GTM_GTM0_ATOM2_2)


#define SRC_GTM_GTM0_ATOM2_3 (*(volatile Ifx_SRC_SRCR*)0xF0039DACu)




#define SRC_GTMATOM23 (SRC_GTM_GTM0_ATOM2_3)


#define SRC_GTM_GTM0_ATOM3_0 (*(volatile Ifx_SRC_SRCR*)0xF0039DB0u)




#define SRC_GTMATOM30 (SRC_GTM_GTM0_ATOM3_0)


#define SRC_GTM_GTM0_ATOM3_1 (*(volatile Ifx_SRC_SRCR*)0xF0039DB4u)




#define SRC_GTMATOM31 (SRC_GTM_GTM0_ATOM3_1)


#define SRC_GTM_GTM0_ATOM3_2 (*(volatile Ifx_SRC_SRCR*)0xF0039DB8u)




#define SRC_GTMATOM32 (SRC_GTM_GTM0_ATOM3_2)


#define SRC_GTM_GTM0_ATOM3_3 (*(volatile Ifx_SRC_SRCR*)0xF0039DBCu)




#define SRC_GTMATOM33 (SRC_GTM_GTM0_ATOM3_3)


#define SRC_GTM_GTM0_ATOM4_0 (*(volatile Ifx_SRC_SRCR*)0xF0039DC0u)




#define SRC_GTMATOM40 (SRC_GTM_GTM0_ATOM4_0)


#define SRC_GTM_GTM0_ATOM4_1 (*(volatile Ifx_SRC_SRCR*)0xF0039DC4u)




#define SRC_GTMATOM41 (SRC_GTM_GTM0_ATOM4_1)


#define SRC_GTM_GTM0_ATOM4_2 (*(volatile Ifx_SRC_SRCR*)0xF0039DC8u)




#define SRC_GTMATOM42 (SRC_GTM_GTM0_ATOM4_2)


#define SRC_GTM_GTM0_ATOM4_3 (*(volatile Ifx_SRC_SRCR*)0xF0039DCCu)




#define SRC_GTMATOM43 (SRC_GTM_GTM0_ATOM4_3)


#define SRC_GTM_GTM0_BRCIRQ (*(volatile Ifx_SRC_SRCR*)0xF0039614u)




#define SRC_GTMBRCIRQ (SRC_GTM_GTM0_BRCIRQ)


#define SRC_GTM_GTM0_CMPIRQ (*(volatile Ifx_SRC_SRCR*)0xF0039618u)




#define SRC_GTMCMPIRQ (SRC_GTM_GTM0_CMPIRQ)


#define SRC_GTM_GTM0_DPLL0 (*(volatile Ifx_SRC_SRCR*)0xF00396A4u)




#define SRC_GTMDPLL0 (SRC_GTM_GTM0_DPLL0)


#define SRC_GTM_GTM0_DPLL1 (*(volatile Ifx_SRC_SRCR*)0xF00396A8u)




#define SRC_GTMDPLL1 (SRC_GTM_GTM0_DPLL1)


#define SRC_GTM_GTM0_DPLL10 (*(volatile Ifx_SRC_SRCR*)0xF00396CCu)




#define SRC_GTMDPLL10 (SRC_GTM_GTM0_DPLL10)


#define SRC_GTM_GTM0_DPLL11 (*(volatile Ifx_SRC_SRCR*)0xF00396D0u)




#define SRC_GTMDPLL11 (SRC_GTM_GTM0_DPLL11)


#define SRC_GTM_GTM0_DPLL12 (*(volatile Ifx_SRC_SRCR*)0xF00396D4u)




#define SRC_GTMDPLL12 (SRC_GTM_GTM0_DPLL12)


#define SRC_GTM_GTM0_DPLL13 (*(volatile Ifx_SRC_SRCR*)0xF00396D8u)




#define SRC_GTMDPLL13 (SRC_GTM_GTM0_DPLL13)


#define SRC_GTM_GTM0_DPLL14 (*(volatile Ifx_SRC_SRCR*)0xF00396DCu)




#define SRC_GTMDPLL14 (SRC_GTM_GTM0_DPLL14)


#define SRC_GTM_GTM0_DPLL15 (*(volatile Ifx_SRC_SRCR*)0xF00396E0u)




#define SRC_GTMDPLL15 (SRC_GTM_GTM0_DPLL15)


#define SRC_GTM_GTM0_DPLL16 (*(volatile Ifx_SRC_SRCR*)0xF00396E4u)




#define SRC_GTMDPLL16 (SRC_GTM_GTM0_DPLL16)


#define SRC_GTM_GTM0_DPLL17 (*(volatile Ifx_SRC_SRCR*)0xF00396E8u)




#define SRC_GTMDPLL17 (SRC_GTM_GTM0_DPLL17)


#define SRC_GTM_GTM0_DPLL18 (*(volatile Ifx_SRC_SRCR*)0xF00396ECu)




#define SRC_GTMDPLL18 (SRC_GTM_GTM0_DPLL18)


#define SRC_GTM_GTM0_DPLL19 (*(volatile Ifx_SRC_SRCR*)0xF00396F0u)




#define SRC_GTMDPLL19 (SRC_GTM_GTM0_DPLL19)


#define SRC_GTM_GTM0_DPLL2 (*(volatile Ifx_SRC_SRCR*)0xF00396ACu)




#define SRC_GTMDPLL2 (SRC_GTM_GTM0_DPLL2)


#define SRC_GTM_GTM0_DPLL20 (*(volatile Ifx_SRC_SRCR*)0xF00396F4u)




#define SRC_GTMDPLL20 (SRC_GTM_GTM0_DPLL20)


#define SRC_GTM_GTM0_DPLL21 (*(volatile Ifx_SRC_SRCR*)0xF00396F8u)




#define SRC_GTMDPLL21 (SRC_GTM_GTM0_DPLL21)


#define SRC_GTM_GTM0_DPLL22 (*(volatile Ifx_SRC_SRCR*)0xF00396FCu)




#define SRC_GTMDPLL22 (SRC_GTM_GTM0_DPLL22)


#define SRC_GTM_GTM0_DPLL23 (*(volatile Ifx_SRC_SRCR*)0xF0039700u)




#define SRC_GTMDPLL23 (SRC_GTM_GTM0_DPLL23)


#define SRC_GTM_GTM0_DPLL24 (*(volatile Ifx_SRC_SRCR*)0xF0039704u)




#define SRC_GTMDPLL24 (SRC_GTM_GTM0_DPLL24)


#define SRC_GTM_GTM0_DPLL25 (*(volatile Ifx_SRC_SRCR*)0xF0039708u)




#define SRC_GTMDPLL25 (SRC_GTM_GTM0_DPLL25)


#define SRC_GTM_GTM0_DPLL26 (*(volatile Ifx_SRC_SRCR*)0xF003970Cu)




#define SRC_GTMDPLL26 (SRC_GTM_GTM0_DPLL26)


#define SRC_GTM_GTM0_DPLL3 (*(volatile Ifx_SRC_SRCR*)0xF00396B0u)




#define SRC_GTMDPLL3 (SRC_GTM_GTM0_DPLL3)


#define SRC_GTM_GTM0_DPLL4 (*(volatile Ifx_SRC_SRCR*)0xF00396B4u)




#define SRC_GTMDPLL4 (SRC_GTM_GTM0_DPLL4)


#define SRC_GTM_GTM0_DPLL5 (*(volatile Ifx_SRC_SRCR*)0xF00396B8u)




#define SRC_GTMDPLL5 (SRC_GTM_GTM0_DPLL5)


#define SRC_GTM_GTM0_DPLL6 (*(volatile Ifx_SRC_SRCR*)0xF00396BCu)




#define SRC_GTMDPLL6 (SRC_GTM_GTM0_DPLL6)


#define SRC_GTM_GTM0_DPLL7 (*(volatile Ifx_SRC_SRCR*)0xF00396C0u)




#define SRC_GTMDPLL7 (SRC_GTM_GTM0_DPLL7)


#define SRC_GTM_GTM0_DPLL8 (*(volatile Ifx_SRC_SRCR*)0xF00396C4u)




#define SRC_GTMDPLL8 (SRC_GTM_GTM0_DPLL8)


#define SRC_GTM_GTM0_DPLL9 (*(volatile Ifx_SRC_SRCR*)0xF00396C8u)




#define SRC_GTMDPLL9 (SRC_GTM_GTM0_DPLL9)


#define SRC_GTM_GTM0_ERR (*(volatile Ifx_SRC_SRCR*)0xF0039770u)




#define SRC_GTMERR (SRC_GTM_GTM0_ERR)


#define SRC_GTM_GTM0_MCS0_0 (*(volatile Ifx_SRC_SRCR*)0xF0039980u)




#define SRC_GTMMCS00 (SRC_GTM_GTM0_MCS0_0)


#define SRC_GTM_GTM0_MCS0_1 (*(volatile Ifx_SRC_SRCR*)0xF0039984u)




#define SRC_GTMMCS01 (SRC_GTM_GTM0_MCS0_1)


#define SRC_GTM_GTM0_MCS0_2 (*(volatile Ifx_SRC_SRCR*)0xF0039988u)




#define SRC_GTMMCS02 (SRC_GTM_GTM0_MCS0_2)


#define SRC_GTM_GTM0_MCS0_3 (*(volatile Ifx_SRC_SRCR*)0xF003998Cu)




#define SRC_GTMMCS03 (SRC_GTM_GTM0_MCS0_3)


#define SRC_GTM_GTM0_MCS0_4 (*(volatile Ifx_SRC_SRCR*)0xF0039990u)




#define SRC_GTMMCS04 (SRC_GTM_GTM0_MCS0_4)


#define SRC_GTM_GTM0_MCS0_5 (*(volatile Ifx_SRC_SRCR*)0xF0039994u)




#define SRC_GTMMCS05 (SRC_GTM_GTM0_MCS0_5)


#define SRC_GTM_GTM0_MCS0_6 (*(volatile Ifx_SRC_SRCR*)0xF0039998u)




#define SRC_GTMMCS06 (SRC_GTM_GTM0_MCS0_6)


#define SRC_GTM_GTM0_MCS0_7 (*(volatile Ifx_SRC_SRCR*)0xF003999Cu)




#define SRC_GTMMCS07 (SRC_GTM_GTM0_MCS0_7)


#define SRC_GTM_GTM0_MCS1_0 (*(volatile Ifx_SRC_SRCR*)0xF00399A0u)




#define SRC_GTMMCS10 (SRC_GTM_GTM0_MCS1_0)


#define SRC_GTM_GTM0_MCS1_1 (*(volatile Ifx_SRC_SRCR*)0xF00399A4u)




#define SRC_GTMMCS11 (SRC_GTM_GTM0_MCS1_1)


#define SRC_GTM_GTM0_MCS1_2 (*(volatile Ifx_SRC_SRCR*)0xF00399A8u)




#define SRC_GTMMCS12 (SRC_GTM_GTM0_MCS1_2)


#define SRC_GTM_GTM0_MCS1_3 (*(volatile Ifx_SRC_SRCR*)0xF00399ACu)




#define SRC_GTMMCS13 (SRC_GTM_GTM0_MCS1_3)


#define SRC_GTM_GTM0_MCS1_4 (*(volatile Ifx_SRC_SRCR*)0xF00399B0u)




#define SRC_GTMMCS14 (SRC_GTM_GTM0_MCS1_4)


#define SRC_GTM_GTM0_MCS1_5 (*(volatile Ifx_SRC_SRCR*)0xF00399B4u)




#define SRC_GTMMCS15 (SRC_GTM_GTM0_MCS1_5)


#define SRC_GTM_GTM0_MCS1_6 (*(volatile Ifx_SRC_SRCR*)0xF00399B8u)




#define SRC_GTMMCS16 (SRC_GTM_GTM0_MCS1_6)


#define SRC_GTM_GTM0_MCS1_7 (*(volatile Ifx_SRC_SRCR*)0xF00399BCu)




#define SRC_GTMMCS17 (SRC_GTM_GTM0_MCS1_7)


#define SRC_GTM_GTM0_MCS2_0 (*(volatile Ifx_SRC_SRCR*)0xF00399C0u)




#define SRC_GTMMCS20 (SRC_GTM_GTM0_MCS2_0)


#define SRC_GTM_GTM0_MCS2_1 (*(volatile Ifx_SRC_SRCR*)0xF00399C4u)




#define SRC_GTMMCS21 (SRC_GTM_GTM0_MCS2_1)


#define SRC_GTM_GTM0_MCS2_2 (*(volatile Ifx_SRC_SRCR*)0xF00399C8u)




#define SRC_GTMMCS22 (SRC_GTM_GTM0_MCS2_2)


#define SRC_GTM_GTM0_MCS2_3 (*(volatile Ifx_SRC_SRCR*)0xF00399CCu)




#define SRC_GTMMCS23 (SRC_GTM_GTM0_MCS2_3)


#define SRC_GTM_GTM0_MCS2_4 (*(volatile Ifx_SRC_SRCR*)0xF00399D0u)




#define SRC_GTMMCS24 (SRC_GTM_GTM0_MCS2_4)


#define SRC_GTM_GTM0_MCS2_5 (*(volatile Ifx_SRC_SRCR*)0xF00399D4u)




#define SRC_GTMMCS25 (SRC_GTM_GTM0_MCS2_5)


#define SRC_GTM_GTM0_MCS2_6 (*(volatile Ifx_SRC_SRCR*)0xF00399D8u)




#define SRC_GTMMCS26 (SRC_GTM_GTM0_MCS2_6)


#define SRC_GTM_GTM0_MCS2_7 (*(volatile Ifx_SRC_SRCR*)0xF00399DCu)




#define SRC_GTMMCS27 (SRC_GTM_GTM0_MCS2_7)


#define SRC_GTM_GTM0_MCS3_0 (*(volatile Ifx_SRC_SRCR*)0xF00399E0u)




#define SRC_GTMMCS30 (SRC_GTM_GTM0_MCS3_0)


#define SRC_GTM_GTM0_MCS3_1 (*(volatile Ifx_SRC_SRCR*)0xF00399E4u)




#define SRC_GTMMCS31 (SRC_GTM_GTM0_MCS3_1)


#define SRC_GTM_GTM0_MCS3_2 (*(volatile Ifx_SRC_SRCR*)0xF00399E8u)




#define SRC_GTMMCS32 (SRC_GTM_GTM0_MCS3_2)


#define SRC_GTM_GTM0_MCS3_3 (*(volatile Ifx_SRC_SRCR*)0xF00399ECu)




#define SRC_GTMMCS33 (SRC_GTM_GTM0_MCS3_3)


#define SRC_GTM_GTM0_MCS3_4 (*(volatile Ifx_SRC_SRCR*)0xF00399F0u)




#define SRC_GTMMCS34 (SRC_GTM_GTM0_MCS3_4)


#define SRC_GTM_GTM0_MCS3_5 (*(volatile Ifx_SRC_SRCR*)0xF00399F4u)




#define SRC_GTMMCS35 (SRC_GTM_GTM0_MCS3_5)


#define SRC_GTM_GTM0_MCS3_6 (*(volatile Ifx_SRC_SRCR*)0xF00399F8u)




#define SRC_GTMMCS36 (SRC_GTM_GTM0_MCS3_6)


#define SRC_GTM_GTM0_MCS3_7 (*(volatile Ifx_SRC_SRCR*)0xF00399FCu)




#define SRC_GTMMCS37 (SRC_GTM_GTM0_MCS3_7)


#define SRC_GTM_GTM0_MCSW00 (*(volatile Ifx_SRC_SRCR*)0xF0039F00u)




#define SRC_GTMMCSW00 (SRC_GTM_GTM0_MCSW00)


#define SRC_GTM_GTM0_MCSW01 (*(volatile Ifx_SRC_SRCR*)0xF0039F04u)




#define SRC_GTMMCSW01 (SRC_GTM_GTM0_MCSW01)


#define SRC_GTM_GTM0_MCSW02 (*(volatile Ifx_SRC_SRCR*)0xF0039F08u)




#define SRC_GTMMCSW02 (SRC_GTM_GTM0_MCSW02)


#define SRC_GTM_GTM0_MCSW03 (*(volatile Ifx_SRC_SRCR*)0xF0039F0Cu)




#define SRC_GTMMCSW03 (SRC_GTM_GTM0_MCSW03)


#define SRC_GTM_GTM0_MCSW10 (*(volatile Ifx_SRC_SRCR*)0xF0039F40u)




#define SRC_GTMMCSW10 (SRC_GTM_GTM0_MCSW10)


#define SRC_GTM_GTM0_MCSW11 (*(volatile Ifx_SRC_SRCR*)0xF0039F44u)




#define SRC_GTMMCSW11 (SRC_GTM_GTM0_MCSW11)


#define SRC_GTM_GTM0_MCSW12 (*(volatile Ifx_SRC_SRCR*)0xF0039F48u)




#define SRC_GTMMCSW12 (SRC_GTM_GTM0_MCSW12)


#define SRC_GTM_GTM0_MCSW13 (*(volatile Ifx_SRC_SRCR*)0xF0039F4Cu)




#define SRC_GTMMCSW13 (SRC_GTM_GTM0_MCSW13)


#define SRC_GTM_GTM0_PSM0_0 (*(volatile Ifx_SRC_SRCR*)0xF003962Cu)




#define SRC_GTMPSM00 (SRC_GTM_GTM0_PSM0_0)


#define SRC_GTM_GTM0_PSM0_1 (*(volatile Ifx_SRC_SRCR*)0xF0039630u)




#define SRC_GTMPSM01 (SRC_GTM_GTM0_PSM0_1)


#define SRC_GTM_GTM0_PSM0_2 (*(volatile Ifx_SRC_SRCR*)0xF0039634u)




#define SRC_GTMPSM02 (SRC_GTM_GTM0_PSM0_2)


#define SRC_GTM_GTM0_PSM0_3 (*(volatile Ifx_SRC_SRCR*)0xF0039638u)




#define SRC_GTMPSM03 (SRC_GTM_GTM0_PSM0_3)


#define SRC_GTM_GTM0_PSM0_4 (*(volatile Ifx_SRC_SRCR*)0xF003963Cu)




#define SRC_GTMPSM04 (SRC_GTM_GTM0_PSM0_4)


#define SRC_GTM_GTM0_PSM0_5 (*(volatile Ifx_SRC_SRCR*)0xF0039640u)




#define SRC_GTMPSM05 (SRC_GTM_GTM0_PSM0_5)


#define SRC_GTM_GTM0_PSM0_6 (*(volatile Ifx_SRC_SRCR*)0xF0039644u)




#define SRC_GTMPSM06 (SRC_GTM_GTM0_PSM0_6)


#define SRC_GTM_GTM0_PSM0_7 (*(volatile Ifx_SRC_SRCR*)0xF0039648u)




#define SRC_GTMPSM07 (SRC_GTM_GTM0_PSM0_7)


#define SRC_GTM_GTM0_SPEIRQ0 (*(volatile Ifx_SRC_SRCR*)0xF003961Cu)




#define SRC_GTMSPE0IRQ (SRC_GTM_GTM0_SPEIRQ0)


#define SRC_GTM_GTM0_SPEIRQ1 (*(volatile Ifx_SRC_SRCR*)0xF0039620u)




#define SRC_GTMSPE1IRQ (SRC_GTM_GTM0_SPEIRQ1)


#define SRC_GTM_GTM0_TIM0_0 (*(volatile Ifx_SRC_SRCR*)0xF0039780u)




#define SRC_GTMTIM00 (SRC_GTM_GTM0_TIM0_0)


#define SRC_GTM_GTM0_TIM0_1 (*(volatile Ifx_SRC_SRCR*)0xF0039784u)




#define SRC_GTMTIM01 (SRC_GTM_GTM0_TIM0_1)


#define SRC_GTM_GTM0_TIM0_2 (*(volatile Ifx_SRC_SRCR*)0xF0039788u)




#define SRC_GTMTIM02 (SRC_GTM_GTM0_TIM0_2)


#define SRC_GTM_GTM0_TIM0_3 (*(volatile Ifx_SRC_SRCR*)0xF003978Cu)




#define SRC_GTMTIM03 (SRC_GTM_GTM0_TIM0_3)


#define SRC_GTM_GTM0_TIM0_4 (*(volatile Ifx_SRC_SRCR*)0xF0039790u)




#define SRC_GTMTIM04 (SRC_GTM_GTM0_TIM0_4)


#define SRC_GTM_GTM0_TIM0_5 (*(volatile Ifx_SRC_SRCR*)0xF0039794u)




#define SRC_GTMTIM05 (SRC_GTM_GTM0_TIM0_5)


#define SRC_GTM_GTM0_TIM0_6 (*(volatile Ifx_SRC_SRCR*)0xF0039798u)




#define SRC_GTMTIM06 (SRC_GTM_GTM0_TIM0_6)


#define SRC_GTM_GTM0_TIM0_7 (*(volatile Ifx_SRC_SRCR*)0xF003979Cu)




#define SRC_GTMTIM07 (SRC_GTM_GTM0_TIM0_7)


#define SRC_GTM_GTM0_TIM1_0 (*(volatile Ifx_SRC_SRCR*)0xF00397A0u)




#define SRC_GTMTIM10 (SRC_GTM_GTM0_TIM1_0)


#define SRC_GTM_GTM0_TIM1_1 (*(volatile Ifx_SRC_SRCR*)0xF00397A4u)




#define SRC_GTMTIM11 (SRC_GTM_GTM0_TIM1_1)


#define SRC_GTM_GTM0_TIM1_2 (*(volatile Ifx_SRC_SRCR*)0xF00397A8u)




#define SRC_GTMTIM12 (SRC_GTM_GTM0_TIM1_2)


#define SRC_GTM_GTM0_TIM1_3 (*(volatile Ifx_SRC_SRCR*)0xF00397ACu)




#define SRC_GTMTIM13 (SRC_GTM_GTM0_TIM1_3)


#define SRC_GTM_GTM0_TIM1_4 (*(volatile Ifx_SRC_SRCR*)0xF00397B0u)




#define SRC_GTMTIM14 (SRC_GTM_GTM0_TIM1_4)


#define SRC_GTM_GTM0_TIM1_5 (*(volatile Ifx_SRC_SRCR*)0xF00397B4u)




#define SRC_GTMTIM15 (SRC_GTM_GTM0_TIM1_5)


#define SRC_GTM_GTM0_TIM1_6 (*(volatile Ifx_SRC_SRCR*)0xF00397B8u)




#define SRC_GTMTIM16 (SRC_GTM_GTM0_TIM1_6)


#define SRC_GTM_GTM0_TIM1_7 (*(volatile Ifx_SRC_SRCR*)0xF00397BCu)




#define SRC_GTMTIM17 (SRC_GTM_GTM0_TIM1_7)


#define SRC_GTM_GTM0_TIM2_0 (*(volatile Ifx_SRC_SRCR*)0xF00397C0u)




#define SRC_GTMTIM20 (SRC_GTM_GTM0_TIM2_0)


#define SRC_GTM_GTM0_TIM2_1 (*(volatile Ifx_SRC_SRCR*)0xF00397C4u)




#define SRC_GTMTIM21 (SRC_GTM_GTM0_TIM2_1)


#define SRC_GTM_GTM0_TIM2_2 (*(volatile Ifx_SRC_SRCR*)0xF00397C8u)




#define SRC_GTMTIM22 (SRC_GTM_GTM0_TIM2_2)


#define SRC_GTM_GTM0_TIM2_3 (*(volatile Ifx_SRC_SRCR*)0xF00397CCu)




#define SRC_GTMTIM23 (SRC_GTM_GTM0_TIM2_3)


#define SRC_GTM_GTM0_TIM2_4 (*(volatile Ifx_SRC_SRCR*)0xF00397D0u)




#define SRC_GTMTIM24 (SRC_GTM_GTM0_TIM2_4)


#define SRC_GTM_GTM0_TIM2_5 (*(volatile Ifx_SRC_SRCR*)0xF00397D4u)




#define SRC_GTMTIM25 (SRC_GTM_GTM0_TIM2_5)


#define SRC_GTM_GTM0_TIM2_6 (*(volatile Ifx_SRC_SRCR*)0xF00397D8u)




#define SRC_GTMTIM26 (SRC_GTM_GTM0_TIM2_6)


#define SRC_GTM_GTM0_TIM2_7 (*(volatile Ifx_SRC_SRCR*)0xF00397DCu)




#define SRC_GTMTIM27 (SRC_GTM_GTM0_TIM2_7)


#define SRC_GTM_GTM0_TIM3_0 (*(volatile Ifx_SRC_SRCR*)0xF00397E0u)




#define SRC_GTMTIM30 (SRC_GTM_GTM0_TIM3_0)


#define SRC_GTM_GTM0_TIM3_1 (*(volatile Ifx_SRC_SRCR*)0xF00397E4u)




#define SRC_GTMTIM31 (SRC_GTM_GTM0_TIM3_1)


#define SRC_GTM_GTM0_TIM3_2 (*(volatile Ifx_SRC_SRCR*)0xF00397E8u)




#define SRC_GTMTIM32 (SRC_GTM_GTM0_TIM3_2)


#define SRC_GTM_GTM0_TIM3_3 (*(volatile Ifx_SRC_SRCR*)0xF00397ECu)




#define SRC_GTMTIM33 (SRC_GTM_GTM0_TIM3_3)


#define SRC_GTM_GTM0_TIM3_4 (*(volatile Ifx_SRC_SRCR*)0xF00397F0u)




#define SRC_GTMTIM34 (SRC_GTM_GTM0_TIM3_4)


#define SRC_GTM_GTM0_TIM3_5 (*(volatile Ifx_SRC_SRCR*)0xF00397F4u)




#define SRC_GTMTIM35 (SRC_GTM_GTM0_TIM3_5)


#define SRC_GTM_GTM0_TIM3_6 (*(volatile Ifx_SRC_SRCR*)0xF00397F8u)




#define SRC_GTMTIM36 (SRC_GTM_GTM0_TIM3_6)


#define SRC_GTM_GTM0_TIM3_7 (*(volatile Ifx_SRC_SRCR*)0xF00397FCu)




#define SRC_GTMTIM37 (SRC_GTM_GTM0_TIM3_7)


#define SRC_GTM_GTM0_TOM0_0 (*(volatile Ifx_SRC_SRCR*)0xF0039B80u)




#define SRC_GTMTOM00 (SRC_GTM_GTM0_TOM0_0)


#define SRC_GTM_GTM0_TOM0_1 (*(volatile Ifx_SRC_SRCR*)0xF0039B84u)




#define SRC_GTMTOM01 (SRC_GTM_GTM0_TOM0_1)


#define SRC_GTM_GTM0_TOM0_2 (*(volatile Ifx_SRC_SRCR*)0xF0039B88u)




#define SRC_GTMTOM02 (SRC_GTM_GTM0_TOM0_2)


#define SRC_GTM_GTM0_TOM0_3 (*(volatile Ifx_SRC_SRCR*)0xF0039B8Cu)




#define SRC_GTMTOM03 (SRC_GTM_GTM0_TOM0_3)


#define SRC_GTM_GTM0_TOM0_4 (*(volatile Ifx_SRC_SRCR*)0xF0039B90u)




#define SRC_GTMTOM04 (SRC_GTM_GTM0_TOM0_4)


#define SRC_GTM_GTM0_TOM0_5 (*(volatile Ifx_SRC_SRCR*)0xF0039B94u)




#define SRC_GTMTOM05 (SRC_GTM_GTM0_TOM0_5)


#define SRC_GTM_GTM0_TOM0_6 (*(volatile Ifx_SRC_SRCR*)0xF0039B98u)




#define SRC_GTMTOM06 (SRC_GTM_GTM0_TOM0_6)


#define SRC_GTM_GTM0_TOM0_7 (*(volatile Ifx_SRC_SRCR*)0xF0039B9Cu)




#define SRC_GTMTOM07 (SRC_GTM_GTM0_TOM0_7)


#define SRC_GTM_GTM0_TOM1_0 (*(volatile Ifx_SRC_SRCR*)0xF0039BA0u)




#define SRC_GTMTOM10 (SRC_GTM_GTM0_TOM1_0)


#define SRC_GTM_GTM0_TOM1_1 (*(volatile Ifx_SRC_SRCR*)0xF0039BA4u)




#define SRC_GTMTOM11 (SRC_GTM_GTM0_TOM1_1)


#define SRC_GTM_GTM0_TOM1_2 (*(volatile Ifx_SRC_SRCR*)0xF0039BA8u)




#define SRC_GTMTOM12 (SRC_GTM_GTM0_TOM1_2)


#define SRC_GTM_GTM0_TOM1_3 (*(volatile Ifx_SRC_SRCR*)0xF0039BACu)




#define SRC_GTMTOM13 (SRC_GTM_GTM0_TOM1_3)


#define SRC_GTM_GTM0_TOM1_4 (*(volatile Ifx_SRC_SRCR*)0xF0039BB0u)




#define SRC_GTMTOM14 (SRC_GTM_GTM0_TOM1_4)


#define SRC_GTM_GTM0_TOM1_5 (*(volatile Ifx_SRC_SRCR*)0xF0039BB4u)




#define SRC_GTMTOM15 (SRC_GTM_GTM0_TOM1_5)


#define SRC_GTM_GTM0_TOM1_6 (*(volatile Ifx_SRC_SRCR*)0xF0039BB8u)




#define SRC_GTMTOM16 (SRC_GTM_GTM0_TOM1_6)


#define SRC_GTM_GTM0_TOM1_7 (*(volatile Ifx_SRC_SRCR*)0xF0039BBCu)




#define SRC_GTMTOM17 (SRC_GTM_GTM0_TOM1_7)


#define SRC_GTM_GTM0_TOM2_0 (*(volatile Ifx_SRC_SRCR*)0xF0039BC0u)




#define SRC_GTMTOM20 (SRC_GTM_GTM0_TOM2_0)


#define SRC_GTM_GTM0_TOM2_1 (*(volatile Ifx_SRC_SRCR*)0xF0039BC4u)




#define SRC_GTMTOM21 (SRC_GTM_GTM0_TOM2_1)


#define SRC_GTM_GTM0_TOM2_2 (*(volatile Ifx_SRC_SRCR*)0xF0039BC8u)




#define SRC_GTMTOM22 (SRC_GTM_GTM0_TOM2_2)


#define SRC_GTM_GTM0_TOM2_3 (*(volatile Ifx_SRC_SRCR*)0xF0039BCCu)




#define SRC_GTMTOM23 (SRC_GTM_GTM0_TOM2_3)


#define SRC_GTM_GTM0_TOM2_4 (*(volatile Ifx_SRC_SRCR*)0xF0039BD0u)




#define SRC_GTMTOM24 (SRC_GTM_GTM0_TOM2_4)


#define SRC_GTM_GTM0_TOM2_5 (*(volatile Ifx_SRC_SRCR*)0xF0039BD4u)




#define SRC_GTMTOM25 (SRC_GTM_GTM0_TOM2_5)


#define SRC_GTM_GTM0_TOM2_6 (*(volatile Ifx_SRC_SRCR*)0xF0039BD8u)




#define SRC_GTMTOM26 (SRC_GTM_GTM0_TOM2_6)


#define SRC_GTM_GTM0_TOM2_7 (*(volatile Ifx_SRC_SRCR*)0xF0039BDCu)




#define SRC_GTMTOM27 (SRC_GTM_GTM0_TOM2_7)


#define SRC_HSCT_HSCT0_SR (*(volatile Ifx_SRC_SRCR*)0xF0038290u)




#define SRC_HSCT (SRC_HSCT_HSCT0_SR)


#define SRC_HSM_HSM0_HSM0 (*(volatile Ifx_SRC_SRCR*)0xF0038CC0u)




#define SRC_HSM0 (SRC_HSM_HSM0_HSM0)


#define SRC_HSM_HSM0_HSM1 (*(volatile Ifx_SRC_SRCR*)0xF0038CC4u)




#define SRC_HSM1 (SRC_HSM_HSM0_HSM1)


#define SRC_HSSL_EXI (*(volatile Ifx_SRC_SRCR*)0xF00382E0u)




#define SRC_HSSLEXI (SRC_HSSL_EXI)


#define SRC_HSSL_HSSL0_COK (*(volatile Ifx_SRC_SRCR*)0xF00382A0u)




#define SRC_HSSLCOK0 (SRC_HSSL_HSSL0_COK)


#define SRC_HSSL_HSSL0_ERR (*(volatile Ifx_SRC_SRCR*)0xF00382A8u)




#define SRC_HSSLERR0 (SRC_HSSL_HSSL0_ERR)


#define SRC_HSSL_HSSL0_RDI (*(volatile Ifx_SRC_SRCR*)0xF00382A4u)




#define SRC_HSSLRDI0 (SRC_HSSL_HSSL0_RDI)


#define SRC_HSSL_HSSL0_TRG (*(volatile Ifx_SRC_SRCR*)0xF00382ACu)




#define SRC_HSSLTRG0 (SRC_HSSL_HSSL0_TRG)


#define SRC_HSSL_HSSL1_COK (*(volatile Ifx_SRC_SRCR*)0xF00382B0u)




#define SRC_HSSLCOK1 (SRC_HSSL_HSSL1_COK)


#define SRC_HSSL_HSSL1_ERR (*(volatile Ifx_SRC_SRCR*)0xF00382B8u)




#define SRC_HSSLERR1 (SRC_HSSL_HSSL1_ERR)


#define SRC_HSSL_HSSL1_RDI (*(volatile Ifx_SRC_SRCR*)0xF00382B4u)




#define SRC_HSSLRDI1 (SRC_HSSL_HSSL1_RDI)


#define SRC_HSSL_HSSL1_TRG (*(volatile Ifx_SRC_SRCR*)0xF00382BCu)




#define SRC_HSSLTRG1 (SRC_HSSL_HSSL1_TRG)


#define SRC_HSSL_HSSL2_COK (*(volatile Ifx_SRC_SRCR*)0xF00382C0u)




#define SRC_HSSLCOK2 (SRC_HSSL_HSSL2_COK)


#define SRC_HSSL_HSSL2_ERR (*(volatile Ifx_SRC_SRCR*)0xF00382C8u)




#define SRC_HSSLERR2 (SRC_HSSL_HSSL2_ERR)


#define SRC_HSSL_HSSL2_RDI (*(volatile Ifx_SRC_SRCR*)0xF00382C4u)




#define SRC_HSSLRDI2 (SRC_HSSL_HSSL2_RDI)


#define SRC_HSSL_HSSL2_TRG (*(volatile Ifx_SRC_SRCR*)0xF00382CCu)




#define SRC_HSSLTRG2 (SRC_HSSL_HSSL2_TRG)


#define SRC_HSSL_HSSL3_COK (*(volatile Ifx_SRC_SRCR*)0xF00382D0u)




#define SRC_HSSLCOK3 (SRC_HSSL_HSSL3_COK)


#define SRC_HSSL_HSSL3_ERR (*(volatile Ifx_SRC_SRCR*)0xF00382D8u)




#define SRC_HSSLERR3 (SRC_HSSL_HSSL3_ERR)


#define SRC_HSSL_HSSL3_RDI (*(volatile Ifx_SRC_SRCR*)0xF00382D4u)




#define SRC_HSSLRDI3 (SRC_HSSL_HSSL3_RDI)


#define SRC_HSSL_HSSL3_TRG (*(volatile Ifx_SRC_SRCR*)0xF00382DCu)




#define SRC_HSSLTRG3 (SRC_HSSL_HSSL3_TRG)


#define SRC_I2C_I2C0_BREQ (*(volatile Ifx_SRC_SRCR*)0xF0038300u)




#define SRC_I2C0BREQ (SRC_I2C_I2C0_BREQ)


#define SRC_I2C_I2C0_ERR (*(volatile Ifx_SRC_SRCR*)0xF0038310u)




#define SRC_I2C0ERR (SRC_I2C_I2C0_ERR)


#define SRC_I2C_I2C0_LBREQ (*(volatile Ifx_SRC_SRCR*)0xF0038304u)




#define SRC_I2C0LBREQ (SRC_I2C_I2C0_LBREQ)


#define SRC_I2C_I2C0_LSREQ (*(volatile Ifx_SRC_SRCR*)0xF003830Cu)




#define SRC_I2C0LSREQ (SRC_I2C_I2C0_LSREQ)


#define SRC_I2C_I2C0_P (*(volatile Ifx_SRC_SRCR*)0xF0038314u)




#define SRC_I2C0P (SRC_I2C_I2C0_P)


#define SRC_I2C_I2C0_SREQ (*(volatile Ifx_SRC_SRCR*)0xF0038308u)




#define SRC_I2C0SREQ (SRC_I2C_I2C0_SREQ)


#define SRC_LMU_LMU0_SR (*(volatile Ifx_SRC_SRCR*)0xF0038DE0u)




#define SRC_LMU (SRC_LMU_LMU0_SR)


#define SRC_MSC_MSC0_SR0 (*(volatile Ifx_SRC_SRCR*)0xF00383E0u)




#define SRC_MSC0SR0 (SRC_MSC_MSC0_SR0)


#define SRC_MSC_MSC0_SR1 (*(volatile Ifx_SRC_SRCR*)0xF00383E4u)




#define SRC_MSC0SR1 (SRC_MSC_MSC0_SR1)


#define SRC_MSC_MSC0_SR2 (*(volatile Ifx_SRC_SRCR*)0xF00383E8u)




#define SRC_MSC0SR2 (SRC_MSC_MSC0_SR2)


#define SRC_MSC_MSC0_SR3 (*(volatile Ifx_SRC_SRCR*)0xF00383ECu)




#define SRC_MSC0SR3 (SRC_MSC_MSC0_SR3)


#define SRC_MSC_MSC0_SR4 (*(volatile Ifx_SRC_SRCR*)0xF00383F0u)




#define SRC_MSC0SR4 (SRC_MSC_MSC0_SR4)


#define SRC_MSC_MSC1_SR0 (*(volatile Ifx_SRC_SRCR*)0xF00383F4u)




#define SRC_MSC1SR0 (SRC_MSC_MSC1_SR0)


#define SRC_MSC_MSC1_SR1 (*(volatile Ifx_SRC_SRCR*)0xF00383F8u)




#define SRC_MSC1SR1 (SRC_MSC_MSC1_SR1)


#define SRC_MSC_MSC1_SR2 (*(volatile Ifx_SRC_SRCR*)0xF00383FCu)




#define SRC_MSC1SR2 (SRC_MSC_MSC1_SR2)


#define SRC_MSC_MSC1_SR3 (*(volatile Ifx_SRC_SRCR*)0xF0038400u)




#define SRC_MSC1SR3 (SRC_MSC_MSC1_SR3)


#define SRC_MSC_MSC1_SR4 (*(volatile Ifx_SRC_SRCR*)0xF0038404u)




#define SRC_MSC1SR4 (SRC_MSC_MSC1_SR4)


#define SRC_PMU_PMU0_SR (*(volatile Ifx_SRC_SRCR*)0xF0038C30u)




#define SRC_PMU00 (SRC_PMU_PMU0_SR)


#define SRC_PMU_PMU1_SR (*(volatile Ifx_SRC_SRCR*)0xF0038C34u)




#define SRC_PMU01 (SRC_PMU_PMU1_SR)


#define SRC_PSI5_PSI50_SR0 (*(volatile Ifx_SRC_SRCR*)0xF0038D30u)




#define SRC_PSI50 (SRC_PSI5_PSI50_SR0)


#define SRC_PSI5_PSI50_SR1 (*(volatile Ifx_SRC_SRCR*)0xF0038D34u)




#define SRC_PSI51 (SRC_PSI5_PSI50_SR1)


#define SRC_PSI5_PSI50_SR2 (*(volatile Ifx_SRC_SRCR*)0xF0038D38u)




#define SRC_PSI52 (SRC_PSI5_PSI50_SR2)


#define SRC_PSI5_PSI50_SR3 (*(volatile Ifx_SRC_SRCR*)0xF0038D3Cu)




#define SRC_PSI53 (SRC_PSI5_PSI50_SR3)


#define SRC_PSI5_PSI50_SR4 (*(volatile Ifx_SRC_SRCR*)0xF0038D40u)




#define SRC_PSI54 (SRC_PSI5_PSI50_SR4)


#define SRC_PSI5_PSI50_SR5 (*(volatile Ifx_SRC_SRCR*)0xF0038D44u)




#define SRC_PSI55 (SRC_PSI5_PSI50_SR5)


#define SRC_PSI5_PSI50_SR6 (*(volatile Ifx_SRC_SRCR*)0xF0038D48u)




#define SRC_PSI56 (SRC_PSI5_PSI50_SR6)


#define SRC_PSI5_PSI50_SR7 (*(volatile Ifx_SRC_SRCR*)0xF0038D4Cu)




#define SRC_PSI57 (SRC_PSI5_PSI50_SR7)


#define SRC_PSI5S_PSI5S0_SR0 (*(volatile Ifx_SRC_SRCR*)0xF0038DF0u)




#define SRC_PSI5S0 (SRC_PSI5S_PSI5S0_SR0)


#define SRC_PSI5S_PSI5S0_SR1 (*(volatile Ifx_SRC_SRCR*)0xF0038DF4u)




#define SRC_PSI5S1 (SRC_PSI5S_PSI5S0_SR1)


#define SRC_PSI5S_PSI5S0_SR2 (*(volatile Ifx_SRC_SRCR*)0xF0038DF8u)




#define SRC_PSI5S2 (SRC_PSI5S_PSI5S0_SR2)


#define SRC_PSI5S_PSI5S0_SR3 (*(volatile Ifx_SRC_SRCR*)0xF0038DFCu)




#define SRC_PSI5S3 (SRC_PSI5S_PSI5S0_SR3)


#define SRC_PSI5S_PSI5S0_SR4 (*(volatile Ifx_SRC_SRCR*)0xF0038E00u)




#define SRC_PSI5S4 (SRC_PSI5S_PSI5S0_SR4)


#define SRC_PSI5S_PSI5S0_SR5 (*(volatile Ifx_SRC_SRCR*)0xF0038E04u)




#define SRC_PSI5S5 (SRC_PSI5S_PSI5S0_SR5)


#define SRC_PSI5S_PSI5S0_SR6 (*(volatile Ifx_SRC_SRCR*)0xF0038E08u)




#define SRC_PSI5S6 (SRC_PSI5S_PSI5S0_SR6)


#define SRC_PSI5S_PSI5S0_SR7 (*(volatile Ifx_SRC_SRCR*)0xF0038E0Cu)




#define SRC_PSI5S7 (SRC_PSI5S_PSI5S0_SR7)


#define SRC_QSPI_QSPI0_ERR (*(volatile Ifx_SRC_SRCR*)0xF0038198u)




#define SRC_QSPI0ERR (SRC_QSPI_QSPI0_ERR)


#define SRC_QSPI_QSPI0_PT (*(volatile Ifx_SRC_SRCR*)0xF003819Cu)




#define SRC_QSPI0PT (SRC_QSPI_QSPI0_PT)


#define SRC_QSPI_QSPI0_RX (*(volatile Ifx_SRC_SRCR*)0xF0038194u)




#define SRC_QSPI0RX (SRC_QSPI_QSPI0_RX)


#define SRC_QSPI_QSPI0_TX (*(volatile Ifx_SRC_SRCR*)0xF0038190u)




#define SRC_QSPI0TX (SRC_QSPI_QSPI0_TX)


#define SRC_QSPI_QSPI0_U (*(volatile Ifx_SRC_SRCR*)0xF00381A4u)




#define SRC_QSPI0U (SRC_QSPI_QSPI0_U)


#define SRC_QSPI_QSPI1_ERR (*(volatile Ifx_SRC_SRCR*)0xF00381B0u)




#define SRC_QSPI1ERR (SRC_QSPI_QSPI1_ERR)


#define SRC_QSPI_QSPI1_PT (*(volatile Ifx_SRC_SRCR*)0xF00381B4u)




#define SRC_QSPI1PT (SRC_QSPI_QSPI1_PT)


#define SRC_QSPI_QSPI1_RX (*(volatile Ifx_SRC_SRCR*)0xF00381ACu)




#define SRC_QSPI1RX (SRC_QSPI_QSPI1_RX)


#define SRC_QSPI_QSPI1_TX (*(volatile Ifx_SRC_SRCR*)0xF00381A8u)




#define SRC_QSPI1TX (SRC_QSPI_QSPI1_TX)


#define SRC_QSPI_QSPI1_U (*(volatile Ifx_SRC_SRCR*)0xF00381BCu)




#define SRC_QSPI1U (SRC_QSPI_QSPI1_U)


#define SRC_QSPI_QSPI2_ERR (*(volatile Ifx_SRC_SRCR*)0xF00381C8u)




#define SRC_QSPI2ERR (SRC_QSPI_QSPI2_ERR)


#define SRC_QSPI_QSPI2_PT (*(volatile Ifx_SRC_SRCR*)0xF00381CCu)




#define SRC_QSPI2PT (SRC_QSPI_QSPI2_PT)


#define SRC_QSPI_QSPI2_RX (*(volatile Ifx_SRC_SRCR*)0xF00381C4u)




#define SRC_QSPI2RX (SRC_QSPI_QSPI2_RX)


#define SRC_QSPI_QSPI2_TX (*(volatile Ifx_SRC_SRCR*)0xF00381C0u)




#define SRC_QSPI2TX (SRC_QSPI_QSPI2_TX)


#define SRC_QSPI_QSPI2_U (*(volatile Ifx_SRC_SRCR*)0xF00381D4u)




#define SRC_QSPI2U (SRC_QSPI_QSPI2_U)


#define SRC_QSPI_QSPI3_ERR (*(volatile Ifx_SRC_SRCR*)0xF00381E0u)




#define SRC_QSPI3ERR (SRC_QSPI_QSPI3_ERR)


#define SRC_QSPI_QSPI3_PT (*(volatile Ifx_SRC_SRCR*)0xF00381E4u)




#define SRC_QSPI3PT (SRC_QSPI_QSPI3_PT)


#define SRC_QSPI_QSPI3_RX (*(volatile Ifx_SRC_SRCR*)0xF00381DCu)




#define SRC_QSPI3RX (SRC_QSPI_QSPI3_RX)


#define SRC_QSPI_QSPI3_TX (*(volatile Ifx_SRC_SRCR*)0xF00381D8u)




#define SRC_QSPI3TX (SRC_QSPI_QSPI3_TX)


#define SRC_QSPI_QSPI3_U (*(volatile Ifx_SRC_SRCR*)0xF00381ECu)




#define SRC_QSPI3U (SRC_QSPI_QSPI3_U)


#define SRC_SCU_SCU_DTS (*(volatile Ifx_SRC_SRCR*)0xF0038CD0u)




#define SRC_SCUDTS (SRC_SCU_SCU_DTS)


#define SRC_SCU_SCU_ERU0 (*(volatile Ifx_SRC_SRCR*)0xF0038CD4u)




#define SRC_SCUERU0 (SRC_SCU_SCU_ERU0)


#define SRC_SCU_SCU_ERU1 (*(volatile Ifx_SRC_SRCR*)0xF0038CD8u)




#define SRC_SCUERU1 (SRC_SCU_SCU_ERU1)


#define SRC_SCU_SCU_ERU2 (*(volatile Ifx_SRC_SRCR*)0xF0038CDCu)




#define SRC_SCUERU2 (SRC_SCU_SCU_ERU2)


#define SRC_SCU_SCU_ERU3 (*(volatile Ifx_SRC_SRCR*)0xF0038CE0u)




#define SRC_SCUERU3 (SRC_SCU_SCU_ERU3)


#define SRC_SENT_SENT0_SR0 (*(volatile Ifx_SRC_SRCR*)0xF0038350u)




#define SRC_SENT0 (SRC_SENT_SENT0_SR0)


#define SRC_SENT_SENT0_SR1 (*(volatile Ifx_SRC_SRCR*)0xF0038354u)




#define SRC_SENT1 (SRC_SENT_SENT0_SR1)


#define SRC_SENT_SENT0_SR2 (*(volatile Ifx_SRC_SRCR*)0xF0038358u)




#define SRC_SENT2 (SRC_SENT_SENT0_SR2)


#define SRC_SENT_SENT0_SR3 (*(volatile Ifx_SRC_SRCR*)0xF003835Cu)




#define SRC_SENT3 (SRC_SENT_SENT0_SR3)


#define SRC_SENT_SENT0_SR4 (*(volatile Ifx_SRC_SRCR*)0xF0038360u)




#define SRC_SENT4 (SRC_SENT_SENT0_SR4)


#define SRC_SENT_SENT0_SR5 (*(volatile Ifx_SRC_SRCR*)0xF0038364u)




#define SRC_SENT5 (SRC_SENT_SENT0_SR5)


#define SRC_SENT_SENT0_SR6 (*(volatile Ifx_SRC_SRCR*)0xF0038368u)




#define SRC_SENT6 (SRC_SENT_SENT0_SR6)


#define SRC_SENT_SENT0_SR7 (*(volatile Ifx_SRC_SRCR*)0xF003836Cu)




#define SRC_SENT7 (SRC_SENT_SENT0_SR7)


#define SRC_SENT_SENT0_SR8 (*(volatile Ifx_SRC_SRCR*)0xF0038370u)




#define SRC_SENT8 (SRC_SENT_SENT0_SR8)


#define SRC_SENT_SENT0_SR9 (*(volatile Ifx_SRC_SRCR*)0xF0038374u)




#define SRC_SENT9 (SRC_SENT_SENT0_SR9)


#define SRC_SMU_SMU0_SR0 (*(volatile Ifx_SRC_SRCR*)0xF0038D10u)




#define SRC_SMU0 (SRC_SMU_SMU0_SR0)


#define SRC_SMU_SMU0_SR1 (*(volatile Ifx_SRC_SRCR*)0xF0038D14u)




#define SRC_SMU1 (SRC_SMU_SMU0_SR1)


#define SRC_SMU_SMU0_SR2 (*(volatile Ifx_SRC_SRCR*)0xF0038D18u)




#define SRC_SMU2 (SRC_SMU_SMU0_SR2)


#define SRC_STM_STM0_SR0 (*(volatile Ifx_SRC_SRCR*)0xF0038490u)




#define SRC_STM0SR0 (SRC_STM_STM0_SR0)


#define SRC_STM_STM0_SR1 (*(volatile Ifx_SRC_SRCR*)0xF0038494u)




#define SRC_STM0SR1 (SRC_STM_STM0_SR1)


#define SRC_STM_STM1_SR0 (*(volatile Ifx_SRC_SRCR*)0xF0038498u)




#define SRC_STM1SR0 (SRC_STM_STM1_SR0)


#define SRC_STM_STM1_SR1 (*(volatile Ifx_SRC_SRCR*)0xF003849Cu)




#define SRC_STM1SR1 (SRC_STM_STM1_SR1)


#define SRC_STM_STM2_SR0 (*(volatile Ifx_SRC_SRCR*)0xF00384A0u)




#define SRC_STM2SR0 (SRC_STM_STM2_SR0)


#define SRC_STM_STM2_SR1 (*(volatile Ifx_SRC_SRCR*)0xF00384A4u)




#define SRC_STM2SR1 (SRC_STM_STM2_SR1)


#define SRC_VADC_CG0_SR0 (*(volatile Ifx_SRC_SRCR*)0xF0038AA0u)




#define SRC_VADCCG0SR0 (SRC_VADC_CG0_SR0)


#define SRC_VADC_CG0_SR1 (*(volatile Ifx_SRC_SRCR*)0xF0038AA4u)




#define SRC_VADCCG0SR1 (SRC_VADC_CG0_SR1)


#define SRC_VADC_CG0_SR2 (*(volatile Ifx_SRC_SRCR*)0xF0038AA8u)




#define SRC_VADCCG0SR2 (SRC_VADC_CG0_SR2)


#define SRC_VADC_CG0_SR3 (*(volatile Ifx_SRC_SRCR*)0xF0038AACu)




#define SRC_VADCCG0SR3 (SRC_VADC_CG0_SR3)


#define SRC_VADC_CG1_SR0 (*(volatile Ifx_SRC_SRCR*)0xF0038AB0u)




#define SRC_VADCCG1SR0 (SRC_VADC_CG1_SR0)


#define SRC_VADC_CG1_SR1 (*(volatile Ifx_SRC_SRCR*)0xF0038AB4u)




#define SRC_VADCCG1SR1 (SRC_VADC_CG1_SR1)


#define SRC_VADC_CG1_SR2 (*(volatile Ifx_SRC_SRCR*)0xF0038AB8u)




#define SRC_VADCCG1SR2 (SRC_VADC_CG1_SR2)


#define SRC_VADC_CG1_SR3 (*(volatile Ifx_SRC_SRCR*)0xF0038ABCu)




#define SRC_VADCCG1SR3 (SRC_VADC_CG1_SR3)


#define SRC_VADC_G0_SR0 (*(volatile Ifx_SRC_SRCR*)0xF0038980u)




#define SRC_VADCG0SR0 (SRC_VADC_G0_SR0)


#define SRC_VADC_G0_SR1 (*(volatile Ifx_SRC_SRCR*)0xF0038984u)




#define SRC_VADCG0SR1 (SRC_VADC_G0_SR1)


#define SRC_VADC_G0_SR2 (*(volatile Ifx_SRC_SRCR*)0xF0038988u)




#define SRC_VADCG0SR2 (SRC_VADC_G0_SR2)


#define SRC_VADC_G0_SR3 (*(volatile Ifx_SRC_SRCR*)0xF003898Cu)




#define SRC_VADCG0SR3 (SRC_VADC_G0_SR3)


#define SRC_VADC_G1_SR0 (*(volatile Ifx_SRC_SRCR*)0xF0038990u)




#define SRC_VADCG1SR0 (SRC_VADC_G1_SR0)


#define SRC_VADC_G1_SR1 (*(volatile Ifx_SRC_SRCR*)0xF0038994u)




#define SRC_VADCG1SR1 (SRC_VADC_G1_SR1)


#define SRC_VADC_G1_SR2 (*(volatile Ifx_SRC_SRCR*)0xF0038998u)




#define SRC_VADCG1SR2 (SRC_VADC_G1_SR2)


#define SRC_VADC_G1_SR3 (*(volatile Ifx_SRC_SRCR*)0xF003899Cu)




#define SRC_VADCG1SR3 (SRC_VADC_G1_SR3)


#define SRC_VADC_G2_SR0 (*(volatile Ifx_SRC_SRCR*)0xF00389A0u)




#define SRC_VADCG2SR0 (SRC_VADC_G2_SR0)


#define SRC_VADC_G2_SR1 (*(volatile Ifx_SRC_SRCR*)0xF00389A4u)




#define SRC_VADCG2SR1 (SRC_VADC_G2_SR1)


#define SRC_VADC_G2_SR2 (*(volatile Ifx_SRC_SRCR*)0xF00389A8u)




#define SRC_VADCG2SR2 (SRC_VADC_G2_SR2)


#define SRC_VADC_G2_SR3 (*(volatile Ifx_SRC_SRCR*)0xF00389ACu)




#define SRC_VADCG2SR3 (SRC_VADC_G2_SR3)


#define SRC_VADC_G3_SR0 (*(volatile Ifx_SRC_SRCR*)0xF00389B0u)




#define SRC_VADCG3SR0 (SRC_VADC_G3_SR0)


#define SRC_VADC_G3_SR1 (*(volatile Ifx_SRC_SRCR*)0xF00389B4u)




#define SRC_VADCG3SR1 (SRC_VADC_G3_SR1)


#define SRC_VADC_G3_SR2 (*(volatile Ifx_SRC_SRCR*)0xF00389B8u)




#define SRC_VADCG3SR2 (SRC_VADC_G3_SR2)


#define SRC_VADC_G3_SR3 (*(volatile Ifx_SRC_SRCR*)0xF00389BCu)




#define SRC_VADCG3SR3 (SRC_VADC_G3_SR3)


#define SRC_VADC_G4_SR0 (*(volatile Ifx_SRC_SRCR*)0xF00389C0u)




#define SRC_VADCG4SR0 (SRC_VADC_G4_SR0)


#define SRC_VADC_G4_SR1 (*(volatile Ifx_SRC_SRCR*)0xF00389C4u)




#define SRC_VADCG4SR1 (SRC_VADC_G4_SR1)


#define SRC_VADC_G4_SR2 (*(volatile Ifx_SRC_SRCR*)0xF00389C8u)




#define SRC_VADCG4SR2 (SRC_VADC_G4_SR2)


#define SRC_VADC_G4_SR3 (*(volatile Ifx_SRC_SRCR*)0xF00389CCu)




#define SRC_VADCG4SR3 (SRC_VADC_G4_SR3)


#define SRC_VADC_G5_SR0 (*(volatile Ifx_SRC_SRCR*)0xF00389D0u)




#define SRC_VADCG5SR0 (SRC_VADC_G5_SR0)


#define SRC_VADC_G5_SR1 (*(volatile Ifx_SRC_SRCR*)0xF00389D4u)




#define SRC_VADCG5SR1 (SRC_VADC_G5_SR1)


#define SRC_VADC_G5_SR2 (*(volatile Ifx_SRC_SRCR*)0xF00389D8u)




#define SRC_VADCG5SR2 (SRC_VADC_G5_SR2)


#define SRC_VADC_G5_SR3 (*(volatile Ifx_SRC_SRCR*)0xF00389DCu)




#define SRC_VADCG5SR3 (SRC_VADC_G5_SR3)


#define SRC_VADC_G6_SR0 (*(volatile Ifx_SRC_SRCR*)0xF00389E0u)




#define SRC_VADCG6SR0 (SRC_VADC_G6_SR0)


#define SRC_VADC_G6_SR1 (*(volatile Ifx_SRC_SRCR*)0xF00389E4u)




#define SRC_VADCG6SR1 (SRC_VADC_G6_SR1)


#define SRC_VADC_G6_SR2 (*(volatile Ifx_SRC_SRCR*)0xF00389E8u)




#define SRC_VADCG6SR2 (SRC_VADC_G6_SR2)


#define SRC_VADC_G6_SR3 (*(volatile Ifx_SRC_SRCR*)0xF00389ECu)




#define SRC_VADCG6SR3 (SRC_VADC_G6_SR3)


#define SRC_VADC_G7_SR0 (*(volatile Ifx_SRC_SRCR*)0xF00389F0u)




#define SRC_VADCG7SR0 (SRC_VADC_G7_SR0)


#define SRC_VADC_G7_SR1 (*(volatile Ifx_SRC_SRCR*)0xF00389F4u)




#define SRC_VADCG7SR1 (SRC_VADC_G7_SR1)


#define SRC_VADC_G7_SR2 (*(volatile Ifx_SRC_SRCR*)0xF00389F8u)




#define SRC_VADCG7SR2 (SRC_VADC_G7_SR2)


#define SRC_VADC_G7_SR3 (*(volatile Ifx_SRC_SRCR*)0xF00389FCu)




#define SRC_VADCG7SR3 (SRC_VADC_G7_SR3)


#define SRC_XBAR_XBAR_SRC (*(volatile Ifx_SRC_SRCR*)0xF0038048u)




#define SRC_XBARSRC (SRC_XBAR_XBAR_SRC)
# 64 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_reg.h" 2 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxStm_reg.h" 1 3
# 40 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxStm_reg.h" 3
#define IFXSTM_REG_H 1

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxStm_regdef.h" 1 3
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxStm_regdef.h" 3
#define IFXSTM_REGDEF_H 1







typedef struct _Ifx_STM_ACCEN0_Bits
{
    unsigned int EN0:1;
    unsigned int EN1:1;
    unsigned int EN2:1;
    unsigned int EN3:1;
    unsigned int EN4:1;
    unsigned int EN5:1;
    unsigned int EN6:1;
    unsigned int EN7:1;
    unsigned int EN8:1;
    unsigned int EN9:1;
    unsigned int EN10:1;
    unsigned int EN11:1;
    unsigned int EN12:1;
    unsigned int EN13:1;
    unsigned int EN14:1;
    unsigned int EN15:1;
    unsigned int EN16:1;
    unsigned int EN17:1;
    unsigned int EN18:1;
    unsigned int EN19:1;
    unsigned int EN20:1;
    unsigned int EN21:1;
    unsigned int EN22:1;
    unsigned int EN23:1;
    unsigned int EN24:1;
    unsigned int EN25:1;
    unsigned int EN26:1;
    unsigned int EN27:1;
    unsigned int EN28:1;
    unsigned int EN29:1;
    unsigned int EN30:1;
    unsigned int EN31:1;
} Ifx_STM_ACCEN0_Bits;


typedef struct _Ifx_STM_ACCEN1_Bits
{
    unsigned int reserved_0:32;
} Ifx_STM_ACCEN1_Bits;


typedef struct _Ifx_STM_CAP_Bits
{
    unsigned int STMCAP63_32:32;
} Ifx_STM_CAP_Bits;


typedef struct _Ifx_STM_CAPSV_Bits
{
    unsigned int STMCAP63_32:32;
} Ifx_STM_CAPSV_Bits;


typedef struct _Ifx_STM_CLC_Bits
{
    unsigned int DISR:1;
    unsigned int DISS:1;
    unsigned int reserved_2:1;
    unsigned int EDIS:1;
    unsigned int reserved_4:28;
} Ifx_STM_CLC_Bits;


typedef struct _Ifx_STM_CMCON_Bits
{
    unsigned int MSIZE0:5;
    unsigned int reserved_5:3;
    unsigned int MSTART0:5;
    unsigned int reserved_13:3;
    unsigned int MSIZE1:5;
    unsigned int reserved_21:3;
    unsigned int MSTART1:5;
    unsigned int reserved_29:3;
} Ifx_STM_CMCON_Bits;


typedef struct _Ifx_STM_CMP_Bits
{
    unsigned int CMPVAL:32;
} Ifx_STM_CMP_Bits;


typedef struct _Ifx_STM_ICR_Bits
{
    unsigned int CMP0EN:1;
    unsigned int CMP0IR:1;
    unsigned int CMP0OS:1;
    unsigned int reserved_3:1;
    unsigned int CMP1EN:1;
    unsigned int CMP1IR:1;
    unsigned int CMP1OS:1;
    unsigned int reserved_7:25;
} Ifx_STM_ICR_Bits;


typedef struct _Ifx_STM_ID_Bits
{
    unsigned int MODREV:8;
    unsigned int MODTYPE:8;
    unsigned int MODNUMBER:16;
} Ifx_STM_ID_Bits;


typedef struct _Ifx_STM_ISCR_Bits
{
    unsigned int CMP0IRR:1;
    unsigned int CMP0IRS:1;
    unsigned int CMP1IRR:1;
    unsigned int CMP1IRS:1;
    unsigned int reserved_4:28;
} Ifx_STM_ISCR_Bits;


typedef struct _Ifx_STM_KRST0_Bits
{
    unsigned int RST:1;
    unsigned int RSTSTAT:1;
    unsigned int reserved_2:30;
} Ifx_STM_KRST0_Bits;


typedef struct _Ifx_STM_KRST1_Bits
{
    unsigned int RST:1;
    unsigned int reserved_1:31;
} Ifx_STM_KRST1_Bits;


typedef struct _Ifx_STM_KRSTCLR_Bits
{
    unsigned int CLR:1;
    unsigned int reserved_1:31;
} Ifx_STM_KRSTCLR_Bits;


typedef struct _Ifx_STM_OCS_Bits
{
    unsigned int reserved_0:24;
    unsigned int SUS:4;
    unsigned int SUS_P:1;
    unsigned int SUSSTA:1;
    unsigned int reserved_30:2;
} Ifx_STM_OCS_Bits;


typedef struct _Ifx_STM_TIM0_Bits
{
    unsigned int STM31_0:32;
} Ifx_STM_TIM0_Bits;


typedef struct _Ifx_STM_TIM0SV_Bits
{
    unsigned int STM31_0:32;
} Ifx_STM_TIM0SV_Bits;


typedef struct _Ifx_STM_TIM1_Bits
{
    unsigned int STM35_4:32;
} Ifx_STM_TIM1_Bits;


typedef struct _Ifx_STM_TIM2_Bits
{
    unsigned int STM39_8:32;
} Ifx_STM_TIM2_Bits;


typedef struct _Ifx_STM_TIM3_Bits
{
    unsigned int STM43_12:32;
} Ifx_STM_TIM3_Bits;


typedef struct _Ifx_STM_TIM4_Bits
{
    unsigned int STM47_16:32;
} Ifx_STM_TIM4_Bits;


typedef struct _Ifx_STM_TIM5_Bits
{
    unsigned int STM51_20:32;
} Ifx_STM_TIM5_Bits;


typedef struct _Ifx_STM_TIM6_Bits
{
    unsigned int STM63_32:32;
} Ifx_STM_TIM6_Bits;







typedef union
{
    unsigned int U;
    signed int I;
    Ifx_STM_ACCEN0_Bits B;
} Ifx_STM_ACCEN0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_STM_ACCEN1_Bits B;
} Ifx_STM_ACCEN1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_STM_CAP_Bits B;
} Ifx_STM_CAP;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_STM_CAPSV_Bits B;
} Ifx_STM_CAPSV;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_STM_CLC_Bits B;
} Ifx_STM_CLC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_STM_CMCON_Bits B;
} Ifx_STM_CMCON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_STM_CMP_Bits B;
} Ifx_STM_CMP;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_STM_ICR_Bits B;
} Ifx_STM_ICR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_STM_ID_Bits B;
} Ifx_STM_ID;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_STM_ISCR_Bits B;
} Ifx_STM_ISCR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_STM_KRST0_Bits B;
} Ifx_STM_KRST0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_STM_KRST1_Bits B;
} Ifx_STM_KRST1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_STM_KRSTCLR_Bits B;
} Ifx_STM_KRSTCLR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_STM_OCS_Bits B;
} Ifx_STM_OCS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_STM_TIM0_Bits B;
} Ifx_STM_TIM0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_STM_TIM0SV_Bits B;
} Ifx_STM_TIM0SV;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_STM_TIM1_Bits B;
} Ifx_STM_TIM1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_STM_TIM2_Bits B;
} Ifx_STM_TIM2;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_STM_TIM3_Bits B;
} Ifx_STM_TIM3;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_STM_TIM4_Bits B;
} Ifx_STM_TIM4;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_STM_TIM5_Bits B;
} Ifx_STM_TIM5;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_STM_TIM6_Bits B;
} Ifx_STM_TIM6;
# 429 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxStm_regdef.h" 3
typedef volatile struct _Ifx_STM
{
    Ifx_STM_CLC CLC;
    unsigned char reserved_4[4];
    Ifx_STM_ID ID;
    unsigned char reserved_C[4];
    Ifx_STM_TIM0 TIM0;
    Ifx_STM_TIM1 TIM1;
    Ifx_STM_TIM2 TIM2;
    Ifx_STM_TIM3 TIM3;
    Ifx_STM_TIM4 TIM4;
    Ifx_STM_TIM5 TIM5;
    Ifx_STM_TIM6 TIM6;
    Ifx_STM_CAP CAP;
    Ifx_STM_CMP CMP[2];
    Ifx_STM_CMCON CMCON;
    Ifx_STM_ICR ICR;
    Ifx_STM_ISCR ISCR;
    unsigned char reserved_44[12];
    Ifx_STM_TIM0SV TIM0SV;
    Ifx_STM_CAPSV CAPSV;
    unsigned char reserved_58[144];
    Ifx_STM_OCS OCS;
    Ifx_STM_KRSTCLR KRSTCLR;
    Ifx_STM_KRST1 KRST1;
    Ifx_STM_KRST0 KRST0;
    Ifx_STM_ACCEN1 ACCEN1;
    Ifx_STM_ACCEN0 ACCEN0;
} Ifx_STM;
# 43 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxStm_reg.h" 2 3





#define MODULE_STM0 (*(Ifx_STM*)0xF0000000u)


#define MODULE_STM1 (*(Ifx_STM*)0xF0000100u)


#define MODULE_STM2 (*(Ifx_STM*)0xF0000200u)







#define STM0_ACCEN0 (*(volatile Ifx_STM_ACCEN0*)0xF00000FCu)


#define STM0_ACCEN1 (*(volatile Ifx_STM_ACCEN1*)0xF00000F8u)


#define STM0_CAP (*(volatile Ifx_STM_CAP*)0xF000002Cu)


#define STM0_CAPSV (*(volatile Ifx_STM_CAPSV*)0xF0000054u)


#define STM0_CLC (*(volatile Ifx_STM_CLC*)0xF0000000u)


#define STM0_CMCON (*(volatile Ifx_STM_CMCON*)0xF0000038u)


#define STM0_CMP0 (*(volatile Ifx_STM_CMP*)0xF0000030u)


#define STM0_CMP1 (*(volatile Ifx_STM_CMP*)0xF0000034u)


#define STM0_ICR (*(volatile Ifx_STM_ICR*)0xF000003Cu)


#define STM0_ID (*(volatile Ifx_STM_ID*)0xF0000008u)


#define STM0_ISCR (*(volatile Ifx_STM_ISCR*)0xF0000040u)


#define STM0_KRST0 (*(volatile Ifx_STM_KRST0*)0xF00000F4u)


#define STM0_KRST1 (*(volatile Ifx_STM_KRST1*)0xF00000F0u)


#define STM0_KRSTCLR (*(volatile Ifx_STM_KRSTCLR*)0xF00000ECu)


#define STM0_OCS (*(volatile Ifx_STM_OCS*)0xF00000E8u)


#define STM0_TIM0 (*(volatile Ifx_STM_TIM0*)0xF0000010u)


#define STM0_TIM0SV (*(volatile Ifx_STM_TIM0SV*)0xF0000050u)


#define STM0_TIM1 (*(volatile Ifx_STM_TIM1*)0xF0000014u)


#define STM0_TIM2 (*(volatile Ifx_STM_TIM2*)0xF0000018u)


#define STM0_TIM3 (*(volatile Ifx_STM_TIM3*)0xF000001Cu)


#define STM0_TIM4 (*(volatile Ifx_STM_TIM4*)0xF0000020u)


#define STM0_TIM5 (*(volatile Ifx_STM_TIM5*)0xF0000024u)


#define STM0_TIM6 (*(volatile Ifx_STM_TIM6*)0xF0000028u)







#define STM1_ACCEN0 (*(volatile Ifx_STM_ACCEN0*)0xF00001FCu)


#define STM1_ACCEN1 (*(volatile Ifx_STM_ACCEN1*)0xF00001F8u)


#define STM1_CAP (*(volatile Ifx_STM_CAP*)0xF000012Cu)


#define STM1_CAPSV (*(volatile Ifx_STM_CAPSV*)0xF0000154u)


#define STM1_CLC (*(volatile Ifx_STM_CLC*)0xF0000100u)


#define STM1_CMCON (*(volatile Ifx_STM_CMCON*)0xF0000138u)


#define STM1_CMP0 (*(volatile Ifx_STM_CMP*)0xF0000130u)


#define STM1_CMP1 (*(volatile Ifx_STM_CMP*)0xF0000134u)


#define STM1_ICR (*(volatile Ifx_STM_ICR*)0xF000013Cu)


#define STM1_ID (*(volatile Ifx_STM_ID*)0xF0000108u)


#define STM1_ISCR (*(volatile Ifx_STM_ISCR*)0xF0000140u)


#define STM1_KRST0 (*(volatile Ifx_STM_KRST0*)0xF00001F4u)


#define STM1_KRST1 (*(volatile Ifx_STM_KRST1*)0xF00001F0u)


#define STM1_KRSTCLR (*(volatile Ifx_STM_KRSTCLR*)0xF00001ECu)


#define STM1_OCS (*(volatile Ifx_STM_OCS*)0xF00001E8u)


#define STM1_TIM0 (*(volatile Ifx_STM_TIM0*)0xF0000110u)


#define STM1_TIM0SV (*(volatile Ifx_STM_TIM0SV*)0xF0000150u)


#define STM1_TIM1 (*(volatile Ifx_STM_TIM1*)0xF0000114u)


#define STM1_TIM2 (*(volatile Ifx_STM_TIM2*)0xF0000118u)


#define STM1_TIM3 (*(volatile Ifx_STM_TIM3*)0xF000011Cu)


#define STM1_TIM4 (*(volatile Ifx_STM_TIM4*)0xF0000120u)


#define STM1_TIM5 (*(volatile Ifx_STM_TIM5*)0xF0000124u)


#define STM1_TIM6 (*(volatile Ifx_STM_TIM6*)0xF0000128u)







#define STM2_ACCEN0 (*(volatile Ifx_STM_ACCEN0*)0xF00002FCu)


#define STM2_ACCEN1 (*(volatile Ifx_STM_ACCEN1*)0xF00002F8u)


#define STM2_CAP (*(volatile Ifx_STM_CAP*)0xF000022Cu)


#define STM2_CAPSV (*(volatile Ifx_STM_CAPSV*)0xF0000254u)


#define STM2_CLC (*(volatile Ifx_STM_CLC*)0xF0000200u)


#define STM2_CMCON (*(volatile Ifx_STM_CMCON*)0xF0000238u)


#define STM2_CMP0 (*(volatile Ifx_STM_CMP*)0xF0000230u)


#define STM2_CMP1 (*(volatile Ifx_STM_CMP*)0xF0000234u)


#define STM2_ICR (*(volatile Ifx_STM_ICR*)0xF000023Cu)


#define STM2_ID (*(volatile Ifx_STM_ID*)0xF0000208u)


#define STM2_ISCR (*(volatile Ifx_STM_ISCR*)0xF0000240u)


#define STM2_KRST0 (*(volatile Ifx_STM_KRST0*)0xF00002F4u)


#define STM2_KRST1 (*(volatile Ifx_STM_KRST1*)0xF00002F0u)


#define STM2_KRSTCLR (*(volatile Ifx_STM_KRSTCLR*)0xF00002ECu)


#define STM2_OCS (*(volatile Ifx_STM_OCS*)0xF00002E8u)


#define STM2_TIM0 (*(volatile Ifx_STM_TIM0*)0xF0000210u)


#define STM2_TIM0SV (*(volatile Ifx_STM_TIM0SV*)0xF0000250u)


#define STM2_TIM1 (*(volatile Ifx_STM_TIM1*)0xF0000214u)


#define STM2_TIM2 (*(volatile Ifx_STM_TIM2*)0xF0000218u)


#define STM2_TIM3 (*(volatile Ifx_STM_TIM3*)0xF000021Cu)


#define STM2_TIM4 (*(volatile Ifx_STM_TIM4*)0xF0000220u)


#define STM2_TIM5 (*(volatile Ifx_STM_TIM5*)0xF0000224u)


#define STM2_TIM6 (*(volatile Ifx_STM_TIM6*)0xF0000228u)
# 65 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_reg.h" 2 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxVadc_reg.h" 1 3
# 34 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxVadc_reg.h" 3
#define IFXVADC_REG_H 1

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxVadc_regdef.h" 1 3
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxVadc_regdef.h" 3
#define IFXVADC_REGDEF_H 1
# 49 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxVadc_regdef.h" 3
typedef struct _Ifx_VADC_ACCEN0_Bits
{
    unsigned int EN0:1;
    unsigned int EN1:1;
    unsigned int EN2:1;
    unsigned int EN3:1;
    unsigned int EN4:1;
    unsigned int EN5:1;
    unsigned int EN6:1;
    unsigned int EN7:1;
    unsigned int EN8:1;
    unsigned int EN9:1;
    unsigned int EN10:1;
    unsigned int EN11:1;
    unsigned int EN12:1;
    unsigned int EN13:1;
    unsigned int EN14:1;
    unsigned int EN15:1;
    unsigned int EN16:1;
    unsigned int EN17:1;
    unsigned int EN18:1;
    unsigned int EN19:1;
    unsigned int EN20:1;
    unsigned int EN21:1;
    unsigned int EN22:1;
    unsigned int EN23:1;
    unsigned int EN24:1;
    unsigned int EN25:1;
    unsigned int EN26:1;
    unsigned int EN27:1;
    unsigned int EN28:1;
    unsigned int EN29:1;
    unsigned int EN30:1;
    unsigned int EN31:1;
} Ifx_VADC_ACCEN0_Bits;


typedef struct _Ifx_VADC_ACCPROT0_Bits
{
    unsigned int APC0:1;
    unsigned int APC1:1;
    unsigned int APC2:1;
    unsigned int APC3:1;
    unsigned int APC4:1;
    unsigned int APC5:1;
    unsigned int APC6:1;
    unsigned int APC7:1;
    unsigned int reserved_8:7;
    unsigned int APEM:1;
    unsigned int API0:1;
    unsigned int API1:1;
    unsigned int API2:1;
    unsigned int API3:1;
    unsigned int API4:1;
    unsigned int API5:1;
    unsigned int API6:1;
    unsigned int API7:1;
    unsigned int reserved_24:7;
    unsigned int APGC:1;
} Ifx_VADC_ACCPROT0_Bits;


typedef struct _Ifx_VADC_ACCPROT1_Bits
{
    unsigned int APS0:1;
    unsigned int APS1:1;
    unsigned int APS2:1;
    unsigned int APS3:1;
    unsigned int APS4:1;
    unsigned int APS5:1;
    unsigned int APS6:1;
    unsigned int APS7:1;
    unsigned int reserved_8:7;
    unsigned int APTF:1;
    unsigned int APR0:1;
    unsigned int APR1:1;
    unsigned int APR2:1;
    unsigned int APR3:1;
    unsigned int APR4:1;
    unsigned int APR5:1;
    unsigned int APR6:1;
    unsigned int APR7:1;
    unsigned int reserved_24:8;
} Ifx_VADC_ACCPROT1_Bits;


typedef struct _Ifx_VADC_BRSCTRL_Bits
{
    unsigned int SRCRESREG:4;
    unsigned int reserved_4:4;
    unsigned int XTSEL:4;
    unsigned int XTLVL:1;
    unsigned int XTMODE:2;
    unsigned int XTWC:1;
    unsigned int GTSEL:4;
    unsigned int GTLVL:1;
    unsigned int reserved_21:2;
    unsigned int GTWC:1;
    unsigned int reserved_24:8;
} Ifx_VADC_BRSCTRL_Bits;


typedef struct _Ifx_VADC_BRSMR_Bits
{
    unsigned int ENGT:2;
    unsigned int ENTR:1;
    unsigned int ENSI:1;
    unsigned int SCAN:1;
    unsigned int LDM:1;
    unsigned int reserved_6:1;
    unsigned int REQGT:1;
    unsigned int CLRPND:1;
    unsigned int LDEV:1;
    unsigned int reserved_10:6;
    unsigned int RPTDIS:1;
    unsigned int reserved_17:15;
} Ifx_VADC_BRSMR_Bits;


typedef struct _Ifx_VADC_BRSPND_Bits
{
    unsigned int CHPNDGy:32;
} Ifx_VADC_BRSPND_Bits;


typedef struct _Ifx_VADC_BRSSEL_Bits
{
    unsigned int CHSELGy:32;
} Ifx_VADC_BRSSEL_Bits;


typedef struct _Ifx_VADC_CLC_Bits
{
    unsigned int DISR:1;
    unsigned int DISS:1;
    unsigned int reserved_2:1;
    unsigned int EDIS:1;
    unsigned int reserved_4:28;
} Ifx_VADC_CLC_Bits;


typedef struct _Ifx_VADC_EMUXSEL_Bits
{
    unsigned int EMUXGRP0:4;
    unsigned int EMUXGRP1:4;
    unsigned int reserved_8:24;
} Ifx_VADC_EMUXSEL_Bits;


typedef struct _Ifx_VADC_G_ALIAS_Bits
{
    unsigned int ALIAS0:5;
    unsigned int reserved_5:3;
    unsigned int ALIAS1:5;
    unsigned int reserved_13:19;
} Ifx_VADC_G_ALIAS_Bits;


typedef struct _Ifx_VADC_G_ARBCFG_Bits
{
    unsigned int ANONC:2;
    unsigned int reserved_2:2;
    unsigned int ARBRND:2;
    unsigned int reserved_6:1;
    unsigned int ARBM:1;
    unsigned int reserved_8:8;
    unsigned int ANONS:2;
    unsigned int CSRC:2;
    unsigned int CHNR:5;
    unsigned int SYNRUN:1;
    unsigned int reserved_26:2;
    unsigned int CAL:1;
    unsigned int CALS:1;
    unsigned int BUSY:1;
    unsigned int SAMPLE:1;
} Ifx_VADC_G_ARBCFG_Bits;


typedef struct _Ifx_VADC_G_ARBPR_Bits
{
    unsigned int PRIO0:2;
    unsigned int reserved_2:1;
    unsigned int CSM0:1;
    unsigned int PRIO1:2;
    unsigned int reserved_6:1;
    unsigned int CSM1:1;
    unsigned int PRIO2:2;
    unsigned int reserved_10:1;
    unsigned int CSM2:1;
    unsigned int reserved_12:12;
    unsigned int ASEN0:1;
    unsigned int ASEN1:1;
    unsigned int ASEN2:1;
    unsigned int reserved_27:5;
} Ifx_VADC_G_ARBPR_Bits;


typedef struct _Ifx_VADC_G_ASCTRL_Bits
{
    unsigned int SRCRESREG:4;
    unsigned int reserved_4:4;
    unsigned int XTSEL:4;
    unsigned int XTLVL:1;
    unsigned int XTMODE:2;
    unsigned int XTWC:1;
    unsigned int GTSEL:4;
    unsigned int GTLVL:1;
    unsigned int reserved_21:2;
    unsigned int GTWC:1;
    unsigned int reserved_24:4;
    unsigned int TMEN:1;
    unsigned int reserved_29:2;
    unsigned int TMWC:1;
} Ifx_VADC_G_ASCTRL_Bits;


typedef struct _Ifx_VADC_G_ASMR_Bits
{
    unsigned int ENGT:2;
    unsigned int ENTR:1;
    unsigned int ENSI:1;
    unsigned int SCAN:1;
    unsigned int LDM:1;
    unsigned int reserved_6:1;
    unsigned int REQGT:1;
    unsigned int CLRPND:1;
    unsigned int LDEV:1;
    unsigned int reserved_10:6;
    unsigned int RPTDIS:1;
    unsigned int reserved_17:15;
} Ifx_VADC_G_ASMR_Bits;


typedef struct _Ifx_VADC_G_ASPND_Bits
{
    unsigned int CHPND:32;
} Ifx_VADC_G_ASPND_Bits;


typedef struct _Ifx_VADC_G_ASSEL_Bits
{
    unsigned int CHSEL:32;
} Ifx_VADC_G_ASSEL_Bits;


typedef struct _Ifx_VADC_G_BFL_Bits
{
    unsigned int BFL0:1;
    unsigned int BFL1:1;
    unsigned int BFL2:1;
    unsigned int BFL3:1;
    unsigned int reserved_4:4;
    unsigned int BFA0:1;
    unsigned int BFA1:1;
    unsigned int BFA2:1;
    unsigned int BFA3:1;
    unsigned int reserved_12:4;
    unsigned int BFI0:1;
    unsigned int BFI1:1;
    unsigned int BFI2:1;
    unsigned int BFI3:1;
    unsigned int reserved_20:12;
} Ifx_VADC_G_BFL_Bits;


typedef struct _Ifx_VADC_G_BFLC_Bits
{
    unsigned int BFM0:4;
    unsigned int BFM1:4;
    unsigned int BFM2:4;
    unsigned int BFM3:4;
    unsigned int reserved_16:16;
} Ifx_VADC_G_BFLC_Bits;


typedef struct _Ifx_VADC_G_BFLNP_Bits
{
    unsigned int BFL0NP:4;
    unsigned int BFL1NP:4;
    unsigned int BFL2NP:4;
    unsigned int BFL3NP:4;
    unsigned int reserved_16:16;
} Ifx_VADC_G_BFLNP_Bits;


typedef struct _Ifx_VADC_G_BFLS_Bits
{
    unsigned int BFC0:1;
    unsigned int BFC1:1;
    unsigned int BFC2:1;
    unsigned int BFC3:1;
    unsigned int reserved_4:12;
    unsigned int BFS0:1;
    unsigned int BFS1:1;
    unsigned int BFS2:1;
    unsigned int BFS3:1;
    unsigned int reserved_20:12;
} Ifx_VADC_G_BFLS_Bits;


typedef struct _Ifx_VADC_G_BOUND_Bits
{
    unsigned int BOUNDARY0:12;
    unsigned int reserved_12:4;
    unsigned int BOUNDARY1:12;
    unsigned int reserved_28:4;
} Ifx_VADC_G_BOUND_Bits;


typedef struct _Ifx_VADC_G_CEFCLR_Bits
{
    unsigned int CEV0:1;
    unsigned int CEV1:1;
    unsigned int CEV2:1;
    unsigned int CEV3:1;
    unsigned int CEV4:1;
    unsigned int CEV5:1;
    unsigned int CEV6:1;
    unsigned int CEV7:1;
    unsigned int reserved_8:24;
} Ifx_VADC_G_CEFCLR_Bits;


typedef struct _Ifx_VADC_G_CEFLAG_Bits
{
    unsigned int CEV0:1;
    unsigned int CEV1:1;
    unsigned int CEV2:1;
    unsigned int CEV3:1;
    unsigned int CEV4:1;
    unsigned int CEV5:1;
    unsigned int CEV6:1;
    unsigned int CEV7:1;
    unsigned int reserved_8:24;
} Ifx_VADC_G_CEFLAG_Bits;


typedef struct _Ifx_VADC_G_CEVNP0_Bits
{
    unsigned int CEV0NP:4;
    unsigned int CEV1NP:4;
    unsigned int CEV2NP:4;
    unsigned int CEV3NP:4;
    unsigned int CEV4NP:4;
    unsigned int CEV5NP:4;
    unsigned int CEV6NP:4;
    unsigned int CEV7NP:4;
} Ifx_VADC_G_CEVNP0_Bits;


typedef struct _Ifx_VADC_G_CHASS_Bits
{
    unsigned int ASSCH0:1;
    unsigned int ASSCH1:1;
    unsigned int ASSCH2:1;
    unsigned int ASSCH3:1;
    unsigned int ASSCH4:1;
    unsigned int ASSCH5:1;
    unsigned int ASSCH6:1;
    unsigned int ASSCH7:1;
    unsigned int ASSCH8:1;
    unsigned int ASSCH9:1;
    unsigned int ASSCH10:1;
    unsigned int ASSCH11:1;
    unsigned int ASSCH12:1;
    unsigned int ASSCH13:1;
    unsigned int ASSCH14:1;
    unsigned int ASSCH15:1;
    unsigned int ASSCH16:1;
    unsigned int ASSCH17:1;
    unsigned int ASSCH18:1;
    unsigned int ASSCH19:1;
    unsigned int ASSCH20:1;
    unsigned int ASSCH21:1;
    unsigned int ASSCH22:1;
    unsigned int ASSCH23:1;
    unsigned int ASSCH24:1;
    unsigned int ASSCH25:1;
    unsigned int ASSCH26:1;
    unsigned int ASSCH27:1;
    unsigned int ASSCH28:1;
    unsigned int ASSCH29:1;
    unsigned int ASSCH30:1;
    unsigned int ASSCH31:1;
} Ifx_VADC_G_CHASS_Bits;


typedef struct _Ifx_VADC_G_CHCTR_Bits
{
    unsigned int ICLSEL:2;
    unsigned int reserved_2:2;
    unsigned int BNDSELL:2;
    unsigned int BNDSELU:2;
    unsigned int CHEVMODE:2;
    unsigned int SYNC:1;
    unsigned int REFSEL:1;
    unsigned int BNDSELX:4;
    unsigned int RESREG:4;
    unsigned int RESTBS:1;
    unsigned int RESPOS:1;
    unsigned int reserved_22:6;
    unsigned int BWDCH:2;
    unsigned int BWDEN:1;
    unsigned int reserved_31:1;
} Ifx_VADC_G_CHCTR_Bits;


typedef struct _Ifx_VADC_G_EMUXCTR_Bits
{
    unsigned int EMUXSET:3;
    unsigned int reserved_3:5;
    unsigned int EMUXACT:3;
    unsigned int reserved_11:5;
    unsigned int EMUXCH:10;
    unsigned int EMUXMODE:2;
    unsigned int EMXCOD:1;
    unsigned int EMXST:1;
    unsigned int EMXCSS:1;
    unsigned int EMXWC:1;
} Ifx_VADC_G_EMUXCTR_Bits;


typedef struct _Ifx_VADC_G_Q0R0_Bits
{
    unsigned int REQCHNR:5;
    unsigned int RF:1;
    unsigned int ENSI:1;
    unsigned int EXTR:1;
    unsigned int V:1;
    unsigned int reserved_9:23;
} Ifx_VADC_G_Q0R0_Bits;


typedef struct _Ifx_VADC_G_QBUR0_Bits
{
    unsigned int REQCHNR:5;
    unsigned int RF:1;
    unsigned int ENSI:1;
    unsigned int EXTR:1;
    unsigned int V:1;
    unsigned int reserved_9:23;
} Ifx_VADC_G_QBUR0_Bits;


typedef struct _Ifx_VADC_G_QCTRL0_Bits
{
    unsigned int SRCRESREG:4;
    unsigned int reserved_4:4;
    unsigned int XTSEL:4;
    unsigned int XTLVL:1;
    unsigned int XTMODE:2;
    unsigned int XTWC:1;
    unsigned int GTSEL:4;
    unsigned int GTLVL:1;
    unsigned int reserved_21:2;
    unsigned int GTWC:1;
    unsigned int reserved_24:4;
    unsigned int TMEN:1;
    unsigned int reserved_29:2;
    unsigned int TMWC:1;
} Ifx_VADC_G_QCTRL0_Bits;


typedef struct _Ifx_VADC_G_QINR0_Bits
{
    unsigned int REQCHNR:5;
    unsigned int RF:1;
    unsigned int ENSI:1;
    unsigned int EXTR:1;
    unsigned int reserved_8:24;
} Ifx_VADC_G_QINR0_Bits;


typedef struct _Ifx_VADC_G_QMR0_Bits
{
    unsigned int ENGT:2;
    unsigned int ENTR:1;
    unsigned int reserved_3:5;
    unsigned int CLRV:1;
    unsigned int TREV:1;
    unsigned int FLUSH:1;
    unsigned int CEV:1;
    unsigned int reserved_12:4;
    unsigned int RPTDIS:1;
    unsigned int reserved_17:15;
} Ifx_VADC_G_QMR0_Bits;


typedef struct _Ifx_VADC_G_QSR0_Bits
{
    unsigned int FILL:4;
    unsigned int reserved_4:1;
    unsigned int EMPTY:1;
    unsigned int reserved_6:1;
    unsigned int REQGT:1;
    unsigned int EV:1;
    unsigned int reserved_9:23;
} Ifx_VADC_G_QSR0_Bits;


typedef struct _Ifx_VADC_G_RCR_Bits
{
    unsigned int reserved_0:16;
    unsigned int DRCTR:4;
    unsigned int DMM:2;
    unsigned int reserved_22:2;
    unsigned int WFR:1;
    unsigned int FEN:2;
    unsigned int reserved_27:4;
    unsigned int SRGEN:1;
} Ifx_VADC_G_RCR_Bits;


typedef struct _Ifx_VADC_G_REFCLR_Bits
{
    unsigned int REV0:1;
    unsigned int REV1:1;
    unsigned int REV2:1;
    unsigned int REV3:1;
    unsigned int REV4:1;
    unsigned int REV5:1;
    unsigned int REV6:1;
    unsigned int REV7:1;
    unsigned int REV8:1;
    unsigned int REV9:1;
    unsigned int REV10:1;
    unsigned int REV11:1;
    unsigned int REV12:1;
    unsigned int REV13:1;
    unsigned int REV14:1;
    unsigned int REV15:1;
    unsigned int reserved_16:16;
} Ifx_VADC_G_REFCLR_Bits;


typedef struct _Ifx_VADC_G_REFLAG_Bits
{
    unsigned int REV0:1;
    unsigned int REV1:1;
    unsigned int REV2:1;
    unsigned int REV3:1;
    unsigned int REV4:1;
    unsigned int REV5:1;
    unsigned int REV6:1;
    unsigned int REV7:1;
    unsigned int REV8:1;
    unsigned int REV9:1;
    unsigned int REV10:1;
    unsigned int REV11:1;
    unsigned int REV12:1;
    unsigned int REV13:1;
    unsigned int REV14:1;
    unsigned int REV15:1;
    unsigned int reserved_16:16;
} Ifx_VADC_G_REFLAG_Bits;


typedef struct _Ifx_VADC_G_RES_Bits
{
    unsigned int RESULT:16;
    unsigned int DRC:4;
    unsigned int CHNR:5;
    unsigned int EMUX:3;
    unsigned int CRS:2;
    unsigned int FCR:1;
    unsigned int VF:1;
} Ifx_VADC_G_RES_Bits;


typedef struct _Ifx_VADC_G_RESD_Bits
{
    unsigned int RESULT:16;
    unsigned int DRC:4;
    unsigned int CHNR:5;
    unsigned int EMUX:3;
    unsigned int CRS:2;
    unsigned int FCR:1;
    unsigned int VF:1;
} Ifx_VADC_G_RESD_Bits;


typedef struct _Ifx_VADC_G_REVNP0_Bits
{
    unsigned int REV0NP:4;
    unsigned int REV1NP:4;
    unsigned int REV2NP:4;
    unsigned int REV3NP:4;
    unsigned int REV4NP:4;
    unsigned int REV5NP:4;
    unsigned int REV6NP:4;
    unsigned int REV7NP:4;
} Ifx_VADC_G_REVNP0_Bits;


typedef struct _Ifx_VADC_G_REVNP1_Bits
{
    unsigned int REV8NP:4;
    unsigned int REV9NP:4;
    unsigned int REV10NP:4;
    unsigned int REV11NP:4;
    unsigned int REV12NP:4;
    unsigned int REV13NP:4;
    unsigned int REV14NP:4;
    unsigned int REV15NP:4;
} Ifx_VADC_G_REVNP1_Bits;


typedef struct _Ifx_VADC_G_RRASS_Bits
{
    unsigned int ASSRR0:1;
    unsigned int ASSRR1:1;
    unsigned int ASSRR2:1;
    unsigned int ASSRR3:1;
    unsigned int ASSRR4:1;
    unsigned int ASSRR5:1;
    unsigned int ASSRR6:1;
    unsigned int ASSRR7:1;
    unsigned int ASSRR8:1;
    unsigned int ASSRR9:1;
    unsigned int ASSRR10:1;
    unsigned int ASSRR11:1;
    unsigned int ASSRR12:1;
    unsigned int ASSRR13:1;
    unsigned int ASSRR14:1;
    unsigned int ASSRR15:1;
    unsigned int reserved_16:16;
} Ifx_VADC_G_RRASS_Bits;


typedef struct _Ifx_VADC_G_SEFCLR_Bits
{
    unsigned int SEV0:1;
    unsigned int SEV1:1;
    unsigned int reserved_2:30;
} Ifx_VADC_G_SEFCLR_Bits;


typedef struct _Ifx_VADC_G_SEFLAG_Bits
{
    unsigned int SEV0:1;
    unsigned int SEV1:1;
    unsigned int reserved_2:30;
} Ifx_VADC_G_SEFLAG_Bits;


typedef struct _Ifx_VADC_G_SEVNP_Bits
{
    unsigned int SEV0NP:4;
    unsigned int SEV1NP:4;
    unsigned int reserved_8:24;
} Ifx_VADC_G_SEVNP_Bits;


typedef struct _Ifx_VADC_G_SRACT_Bits
{
    unsigned int AGSR0:1;
    unsigned int AGSR1:1;
    unsigned int AGSR2:1;
    unsigned int AGSR3:1;
    unsigned int reserved_4:4;
    unsigned int ASSR0:1;
    unsigned int ASSR1:1;
    unsigned int ASSR2:1;
    unsigned int ASSR3:1;
    unsigned int reserved_12:20;
} Ifx_VADC_G_SRACT_Bits;


typedef struct _Ifx_VADC_G_SYNCTR_Bits
{
    unsigned int STSEL:2;
    unsigned int reserved_2:2;
    unsigned int EVALR1:1;
    unsigned int EVALR2:1;
    unsigned int EVALR3:1;
    unsigned int reserved_7:25;
} Ifx_VADC_G_SYNCTR_Bits;


typedef struct _Ifx_VADC_G_VFR_Bits
{
    unsigned int VF0:1;
    unsigned int VF1:1;
    unsigned int VF2:1;
    unsigned int VF3:1;
    unsigned int VF4:1;
    unsigned int VF5:1;
    unsigned int VF6:1;
    unsigned int VF7:1;
    unsigned int VF8:1;
    unsigned int VF9:1;
    unsigned int VF10:1;
    unsigned int VF11:1;
    unsigned int VF12:1;
    unsigned int VF13:1;
    unsigned int VF14:1;
    unsigned int VF15:1;
    unsigned int reserved_16:16;
} Ifx_VADC_G_VFR_Bits;


typedef struct _Ifx_VADC_GLOBBOUND_Bits
{
    unsigned int BOUNDARY0:12;
    unsigned int reserved_12:4;
    unsigned int BOUNDARY1:12;
    unsigned int reserved_28:4;
} Ifx_VADC_GLOBBOUND_Bits;


typedef struct _Ifx_VADC_GLOBCFG_Bits
{
    unsigned int DIVA:5;
    unsigned int reserved_5:2;
    unsigned int DCMSB:1;
    unsigned int DIVD:2;
    unsigned int reserved_10:2;
    unsigned int REFPC:1;
    unsigned int reserved_13:1;
    unsigned int LOSUP:1;
    unsigned int DIVWC:1;
    unsigned int DPCAL0:1;
    unsigned int DPCAL1:1;
    unsigned int DPCAL2:1;
    unsigned int DPCAL3:1;
    unsigned int DPCAL4:1;
    unsigned int DPCAL5:1;
    unsigned int DPCAL6:1;
    unsigned int DPCAL7:1;
    unsigned int reserved_24:7;
    unsigned int SUCAL:1;
} Ifx_VADC_GLOBCFG_Bits;


typedef struct _Ifx_VADC_GLOBEFLAG_Bits
{
    unsigned int SEVGLB:1;
    unsigned int reserved_1:7;
    unsigned int REVGLB:1;
    unsigned int reserved_9:7;
    unsigned int SEVGLBCLR:1;
    unsigned int reserved_17:7;
    unsigned int REVGLBCLR:1;
    unsigned int reserved_25:7;
} Ifx_VADC_GLOBEFLAG_Bits;


typedef struct _Ifx_VADC_GLOBEVNP_Bits
{
    unsigned int SEV0NP:4;
    unsigned int reserved_4:12;
    unsigned int REV0NP:4;
    unsigned int reserved_20:12;
} Ifx_VADC_GLOBEVNP_Bits;


typedef struct _Ifx_VADC_GLOBRCR_Bits
{
    unsigned int reserved_0:16;
    unsigned int DRCTR:4;
    unsigned int reserved_20:4;
    unsigned int WFR:1;
    unsigned int reserved_25:6;
    unsigned int SRGEN:1;
} Ifx_VADC_GLOBRCR_Bits;


typedef struct _Ifx_VADC_GLOBRES_Bits
{
    unsigned int RESULT:16;
    unsigned int GNR:4;
    unsigned int CHNR:5;
    unsigned int EMUX:3;
    unsigned int CRS:2;
    unsigned int FCR:1;
    unsigned int VF:1;
} Ifx_VADC_GLOBRES_Bits;


typedef struct _Ifx_VADC_GLOBRESD_Bits
{
    unsigned int RESULT:16;
    unsigned int GNR:4;
    unsigned int CHNR:5;
    unsigned int EMUX:3;
    unsigned int CRS:2;
    unsigned int FCR:1;
    unsigned int VF:1;
} Ifx_VADC_GLOBRESD_Bits;


typedef struct _Ifx_VADC_GLOBTF_Bits
{
    unsigned int CDCH:4;
    unsigned int CDGR:4;
    unsigned int CDEN:1;
    unsigned int CDSEL:2;
    unsigned int reserved_11:4;
    unsigned int CDWC:1;
    unsigned int PDD:1;
    unsigned int MDPD:1;
    unsigned int MDPU:1;
    unsigned int reserved_19:4;
    unsigned int MDWC:1;
    unsigned int reserved_24:8;
} Ifx_VADC_GLOBTF_Bits;


typedef struct _Ifx_VADC_ICLASS_Bits
{
    unsigned int STCS:5;
    unsigned int reserved_5:3;
    unsigned int CMS:3;
    unsigned int reserved_11:5;
    unsigned int STCE:5;
    unsigned int reserved_21:3;
    unsigned int CME:3;
    unsigned int reserved_27:5;
} Ifx_VADC_ICLASS_Bits;


typedef struct _Ifx_VADC_ID_Bits
{
    unsigned int MOD_REV:8;
    unsigned int MOD_TYPE:8;
    unsigned int MODNUMBER:16;
} Ifx_VADC_ID_Bits;


typedef struct _Ifx_VADC_KRST0_Bits
{
    unsigned int RST:1;
    unsigned int RSTSTAT:1;
    unsigned int reserved_2:30;
} Ifx_VADC_KRST0_Bits;


typedef struct _Ifx_VADC_KRST1_Bits
{
    unsigned int RST:1;
    unsigned int reserved_1:31;
} Ifx_VADC_KRST1_Bits;


typedef struct _Ifx_VADC_KRSTCLR_Bits
{
    unsigned int CLR:1;
    unsigned int reserved_1:31;
} Ifx_VADC_KRSTCLR_Bits;


typedef struct _Ifx_VADC_OCS_Bits
{
    unsigned int TGS:2;
    unsigned int TGB:1;
    unsigned int TG_P:1;
    unsigned int reserved_4:20;
    unsigned int SUS:4;
    unsigned int SUS_P:1;
    unsigned int SUSSTA:1;
    unsigned int reserved_30:2;
} Ifx_VADC_OCS_Bits;







typedef union
{
    unsigned int U;
    signed int I;
    Ifx_VADC_ACCEN0_Bits B;
} Ifx_VADC_ACCEN0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_VADC_ACCPROT0_Bits B;
} Ifx_VADC_ACCPROT0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_VADC_ACCPROT1_Bits B;
} Ifx_VADC_ACCPROT1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_VADC_BRSCTRL_Bits B;
} Ifx_VADC_BRSCTRL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_VADC_BRSMR_Bits B;
} Ifx_VADC_BRSMR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_VADC_BRSPND_Bits B;
} Ifx_VADC_BRSPND;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_VADC_BRSSEL_Bits B;
} Ifx_VADC_BRSSEL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_VADC_CLC_Bits B;
} Ifx_VADC_CLC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_VADC_EMUXSEL_Bits B;
} Ifx_VADC_EMUXSEL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_VADC_G_ALIAS_Bits B;
} Ifx_VADC_G_ALIAS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_VADC_G_ARBCFG_Bits B;
} Ifx_VADC_G_ARBCFG;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_VADC_G_ARBPR_Bits B;
} Ifx_VADC_G_ARBPR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_VADC_G_ASCTRL_Bits B;
} Ifx_VADC_G_ASCTRL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_VADC_G_ASMR_Bits B;
} Ifx_VADC_G_ASMR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_VADC_G_ASPND_Bits B;
} Ifx_VADC_G_ASPND;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_VADC_G_ASSEL_Bits B;
} Ifx_VADC_G_ASSEL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_VADC_G_BFL_Bits B;
} Ifx_VADC_G_BFL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_VADC_G_BFLC_Bits B;
} Ifx_VADC_G_BFLC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_VADC_G_BFLNP_Bits B;
} Ifx_VADC_G_BFLNP;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_VADC_G_BFLS_Bits B;
} Ifx_VADC_G_BFLS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_VADC_G_BOUND_Bits B;
} Ifx_VADC_G_BOUND;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_VADC_G_CEFCLR_Bits B;
} Ifx_VADC_G_CEFCLR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_VADC_G_CEFLAG_Bits B;
} Ifx_VADC_G_CEFLAG;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_VADC_G_CEVNP0_Bits B;
} Ifx_VADC_G_CEVNP0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_VADC_G_CHASS_Bits B;
} Ifx_VADC_G_CHASS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_VADC_G_CHCTR_Bits B;
} Ifx_VADC_G_CHCTR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_VADC_G_EMUXCTR_Bits B;
} Ifx_VADC_G_EMUXCTR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_VADC_G_Q0R0_Bits B;
} Ifx_VADC_G_Q0R0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_VADC_G_QBUR0_Bits B;
} Ifx_VADC_G_QBUR0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_VADC_G_QCTRL0_Bits B;
} Ifx_VADC_G_QCTRL0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_VADC_G_QINR0_Bits B;
} Ifx_VADC_G_QINR0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_VADC_G_QMR0_Bits B;
} Ifx_VADC_G_QMR0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_VADC_G_QSR0_Bits B;
} Ifx_VADC_G_QSR0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_VADC_G_RCR_Bits B;
} Ifx_VADC_G_RCR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_VADC_G_REFCLR_Bits B;
} Ifx_VADC_G_REFCLR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_VADC_G_REFLAG_Bits B;
} Ifx_VADC_G_REFLAG;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_VADC_G_RES_Bits B;
} Ifx_VADC_G_RES;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_VADC_G_RESD_Bits B;
} Ifx_VADC_G_RESD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_VADC_G_REVNP0_Bits B;
} Ifx_VADC_G_REVNP0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_VADC_G_REVNP1_Bits B;
} Ifx_VADC_G_REVNP1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_VADC_G_RRASS_Bits B;
} Ifx_VADC_G_RRASS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_VADC_G_SEFCLR_Bits B;
} Ifx_VADC_G_SEFCLR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_VADC_G_SEFLAG_Bits B;
} Ifx_VADC_G_SEFLAG;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_VADC_G_SEVNP_Bits B;
} Ifx_VADC_G_SEVNP;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_VADC_G_SRACT_Bits B;
} Ifx_VADC_G_SRACT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_VADC_G_SYNCTR_Bits B;
} Ifx_VADC_G_SYNCTR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_VADC_G_VFR_Bits B;
} Ifx_VADC_G_VFR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_VADC_GLOBBOUND_Bits B;
} Ifx_VADC_GLOBBOUND;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_VADC_GLOBCFG_Bits B;
} Ifx_VADC_GLOBCFG;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_VADC_GLOBEFLAG_Bits B;
} Ifx_VADC_GLOBEFLAG;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_VADC_GLOBEVNP_Bits B;
} Ifx_VADC_GLOBEVNP;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_VADC_GLOBRCR_Bits B;
} Ifx_VADC_GLOBRCR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_VADC_GLOBRES_Bits B;
} Ifx_VADC_GLOBRES;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_VADC_GLOBRESD_Bits B;
} Ifx_VADC_GLOBRESD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_VADC_GLOBTF_Bits B;
} Ifx_VADC_GLOBTF;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_VADC_ICLASS_Bits B;
} Ifx_VADC_ICLASS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_VADC_ID_Bits B;
} Ifx_VADC_ID;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_VADC_KRST0_Bits B;
} Ifx_VADC_KRST0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_VADC_KRST1_Bits B;
} Ifx_VADC_KRST1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_VADC_KRSTCLR_Bits B;
} Ifx_VADC_KRSTCLR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_VADC_OCS_Bits B;
} Ifx_VADC_OCS;
# 1414 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxVadc_regdef.h" 3
typedef volatile struct _Ifx_VADC_G
{
    Ifx_VADC_G_ARBCFG ARBCFG;
    Ifx_VADC_G_ARBPR ARBPR;
    Ifx_VADC_G_CHASS CHASS;
    Ifx_VADC_G_RRASS RRASS;
    unsigned char reserved_10[16];
    Ifx_VADC_ICLASS ICLASS[2];
    unsigned char reserved_28[8];
    Ifx_VADC_G_ALIAS ALIAS;
    unsigned char reserved_34[4];
    Ifx_VADC_G_BOUND BOUND;
    unsigned char reserved_3C[4];
    Ifx_VADC_G_SYNCTR SYNCTR;
    unsigned char reserved_44[4];
    Ifx_VADC_G_BFL BFL;
    Ifx_VADC_G_BFLS BFLS;
    Ifx_VADC_G_BFLC BFLC;
    Ifx_VADC_G_BFLNP BFLNP;
    unsigned char reserved_58[40];
    Ifx_VADC_G_QCTRL0 QCTRL0;
    Ifx_VADC_G_QMR0 QMR0;
    Ifx_VADC_G_QSR0 QSR0;
    Ifx_VADC_G_Q0R0 Q0R0;
    union
    {
        Ifx_VADC_G_QBUR0 QBUR0;
        Ifx_VADC_G_QINR0 QINR0;
    };

    unsigned char reserved_94[12];
    Ifx_VADC_G_ASCTRL ASCTRL;
    Ifx_VADC_G_ASMR ASMR;
    Ifx_VADC_G_ASSEL ASSEL;
    Ifx_VADC_G_ASPND ASPND;
    unsigned char reserved_B0[80];
    Ifx_VADC_G_CEFLAG CEFLAG;
    Ifx_VADC_G_REFLAG REFLAG;
    Ifx_VADC_G_SEFLAG SEFLAG;
    unsigned char reserved_10C[4];
    Ifx_VADC_G_CEFCLR CEFCLR;
    Ifx_VADC_G_REFCLR REFCLR;
    Ifx_VADC_G_SEFCLR SEFCLR;
    unsigned char reserved_11C[4];
    Ifx_VADC_G_CEVNP0 CEVNP0;
    unsigned char reserved_124[12];
    Ifx_VADC_G_REVNP0 REVNP0;
    Ifx_VADC_G_REVNP1 REVNP1;
    unsigned char reserved_138[8];
    Ifx_VADC_G_SEVNP SEVNP;
    unsigned char reserved_144[4];
    Ifx_VADC_G_SRACT SRACT;
    unsigned char reserved_14C[36];
    Ifx_VADC_G_EMUXCTR EMUXCTR;
    unsigned char reserved_174[4];
    Ifx_VADC_G_VFR VFR;
    unsigned char reserved_17C[4];
    Ifx_VADC_G_CHCTR CHCTR[8];
    unsigned char reserved_1A0[96];
    Ifx_VADC_G_RCR RCR[16];
    unsigned char reserved_240[64];
    Ifx_VADC_G_RES RES[16];
    unsigned char reserved_2C0[64];
    Ifx_VADC_G_RESD RESD[16];
    unsigned char reserved_340[192];
} Ifx_VADC_G;
# 1492 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxVadc_regdef.h" 3
typedef volatile struct _Ifx_VADC
{
    Ifx_VADC_CLC CLC;
    unsigned char reserved_4[4];
    Ifx_VADC_ID ID;
    unsigned char reserved_C[28];
    Ifx_VADC_OCS OCS;
    Ifx_VADC_KRSTCLR KRSTCLR;
    Ifx_VADC_KRST1 KRST1;
    Ifx_VADC_KRST0 KRST0;
    unsigned char reserved_38[4];
    Ifx_VADC_ACCEN0 ACCEN0;
    unsigned char reserved_40[64];
    Ifx_VADC_GLOBCFG GLOBCFG;
    unsigned char reserved_84[4];
    Ifx_VADC_ACCPROT0 ACCPROT0;
    Ifx_VADC_ACCPROT1 ACCPROT1;
    unsigned char reserved_90[16];
    Ifx_VADC_ICLASS GLOBICLASS[2];
    unsigned char reserved_A8[16];
    Ifx_VADC_GLOBBOUND GLOBBOUND;
    unsigned char reserved_BC[36];
    Ifx_VADC_GLOBEFLAG GLOBEFLAG;
    unsigned char reserved_E4[92];
    Ifx_VADC_GLOBEVNP GLOBEVNP;
    unsigned char reserved_144[28];
    Ifx_VADC_GLOBTF GLOBTF;
    unsigned char reserved_164[28];
    Ifx_VADC_BRSSEL BRSSEL[8];
    unsigned char reserved_1A0[32];
    Ifx_VADC_BRSPND BRSPND[8];
    unsigned char reserved_1E0[32];
    Ifx_VADC_BRSCTRL BRSCTRL;
    Ifx_VADC_BRSMR BRSMR;
    unsigned char reserved_208[120];
    Ifx_VADC_GLOBRCR GLOBRCR;
    unsigned char reserved_284[124];
    Ifx_VADC_GLOBRES GLOBRES;
    unsigned char reserved_304[124];
    Ifx_VADC_GLOBRESD GLOBRESD;
    unsigned char reserved_384[108];
    Ifx_VADC_EMUXSEL EMUXSEL;
    unsigned char reserved_3F4[140];
    Ifx_VADC_G G[8];
    unsigned char reserved_2480[7040];
} Ifx_VADC;
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxVadc_reg.h" 2 3





#define MODULE_VADC (*(Ifx_VADC*)0xF0020000u)







#define VADC_ACCEN0 (*(volatile Ifx_VADC_ACCEN0*)0xF002003Cu)


#define VADC_ACCPROT0 (*(volatile Ifx_VADC_ACCPROT0*)0xF0020088u)


#define VADC_ACCPROT1 (*(volatile Ifx_VADC_ACCPROT1*)0xF002008Cu)


#define VADC_BRSCTRL (*(volatile Ifx_VADC_BRSCTRL*)0xF0020200u)


#define VADC_BRSMR (*(volatile Ifx_VADC_BRSMR*)0xF0020204u)


#define VADC_BRSPND0 (*(volatile Ifx_VADC_BRSPND*)0xF00201C0u)


#define VADC_BRSPND1 (*(volatile Ifx_VADC_BRSPND*)0xF00201C4u)


#define VADC_BRSPND2 (*(volatile Ifx_VADC_BRSPND*)0xF00201C8u)


#define VADC_BRSPND3 (*(volatile Ifx_VADC_BRSPND*)0xF00201CCu)


#define VADC_BRSPND4 (*(volatile Ifx_VADC_BRSPND*)0xF00201D0u)


#define VADC_BRSPND5 (*(volatile Ifx_VADC_BRSPND*)0xF00201D4u)


#define VADC_BRSPND6 (*(volatile Ifx_VADC_BRSPND*)0xF00201D8u)


#define VADC_BRSPND7 (*(volatile Ifx_VADC_BRSPND*)0xF00201DCu)


#define VADC_BRSSEL0 (*(volatile Ifx_VADC_BRSSEL*)0xF0020180u)


#define VADC_BRSSEL1 (*(volatile Ifx_VADC_BRSSEL*)0xF0020184u)


#define VADC_BRSSEL2 (*(volatile Ifx_VADC_BRSSEL*)0xF0020188u)


#define VADC_BRSSEL3 (*(volatile Ifx_VADC_BRSSEL*)0xF002018Cu)


#define VADC_BRSSEL4 (*(volatile Ifx_VADC_BRSSEL*)0xF0020190u)


#define VADC_BRSSEL5 (*(volatile Ifx_VADC_BRSSEL*)0xF0020194u)


#define VADC_BRSSEL6 (*(volatile Ifx_VADC_BRSSEL*)0xF0020198u)


#define VADC_BRSSEL7 (*(volatile Ifx_VADC_BRSSEL*)0xF002019Cu)


#define VADC_CLC (*(volatile Ifx_VADC_CLC*)0xF0020000u)


#define VADC_EMUXSEL (*(volatile Ifx_VADC_EMUXSEL*)0xF00203F0u)


#define VADC_G0_ALIAS (*(volatile Ifx_VADC_G_ALIAS*)0xF00204B0u)




#define VADC_G0ALIAS (VADC_G0_ALIAS)


#define VADC_G0_ARBCFG (*(volatile Ifx_VADC_G_ARBCFG*)0xF0020480u)




#define VADC_G0ARBCFG (VADC_G0_ARBCFG)


#define VADC_G0_ARBPR (*(volatile Ifx_VADC_G_ARBPR*)0xF0020484u)




#define VADC_G0ARBPR (VADC_G0_ARBPR)


#define VADC_G0_ASCTRL (*(volatile Ifx_VADC_G_ASCTRL*)0xF0020520u)




#define VADC_G0ASCTRL (VADC_G0_ASCTRL)


#define VADC_G0_ASMR (*(volatile Ifx_VADC_G_ASMR*)0xF0020524u)




#define VADC_G0ASMR (VADC_G0_ASMR)


#define VADC_G0_ASPND (*(volatile Ifx_VADC_G_ASPND*)0xF002052Cu)




#define VADC_G0ASPND (VADC_G0_ASPND)


#define VADC_G0_ASSEL (*(volatile Ifx_VADC_G_ASSEL*)0xF0020528u)




#define VADC_G0ASSEL (VADC_G0_ASSEL)


#define VADC_G0_BFL (*(volatile Ifx_VADC_G_BFL*)0xF00204C8u)




#define VADC_G0BFL (VADC_G0_BFL)


#define VADC_G0_BFLC (*(volatile Ifx_VADC_G_BFLC*)0xF00204D0u)




#define VADC_G0BFLC (VADC_G0_BFLC)


#define VADC_G0_BFLNP (*(volatile Ifx_VADC_G_BFLNP*)0xF00204D4u)




#define VADC_G0BFLNP (VADC_G0_BFLNP)


#define VADC_G0_BFLS (*(volatile Ifx_VADC_G_BFLS*)0xF00204CCu)




#define VADC_G0BFLS (VADC_G0_BFLS)


#define VADC_G0_BOUND (*(volatile Ifx_VADC_G_BOUND*)0xF00204B8u)




#define VADC_G0BOUND (VADC_G0_BOUND)


#define VADC_G0_CEFCLR (*(volatile Ifx_VADC_G_CEFCLR*)0xF0020590u)




#define VADC_G0CEFCLR (VADC_G0_CEFCLR)


#define VADC_G0_CEFLAG (*(volatile Ifx_VADC_G_CEFLAG*)0xF0020580u)




#define VADC_G0CEFLAG (VADC_G0_CEFLAG)


#define VADC_G0_CEVNP0 (*(volatile Ifx_VADC_G_CEVNP0*)0xF00205A0u)




#define VADC_G0CEVNP0 (VADC_G0_CEVNP0)


#define VADC_G0_CHASS (*(volatile Ifx_VADC_G_CHASS*)0xF0020488u)




#define VADC_G0CHASS (VADC_G0_CHASS)


#define VADC_G0_CHCTR0 (*(volatile Ifx_VADC_G_CHCTR*)0xF0020600u)




#define VADC_G0CHCTR0 (VADC_G0_CHCTR0)


#define VADC_G0_CHCTR1 (*(volatile Ifx_VADC_G_CHCTR*)0xF0020604u)




#define VADC_G0CHCTR1 (VADC_G0_CHCTR1)


#define VADC_G0_CHCTR2 (*(volatile Ifx_VADC_G_CHCTR*)0xF0020608u)




#define VADC_G0CHCTR2 (VADC_G0_CHCTR2)


#define VADC_G0_CHCTR3 (*(volatile Ifx_VADC_G_CHCTR*)0xF002060Cu)




#define VADC_G0CHCTR3 (VADC_G0_CHCTR3)


#define VADC_G0_CHCTR4 (*(volatile Ifx_VADC_G_CHCTR*)0xF0020610u)




#define VADC_G0CHCTR4 (VADC_G0_CHCTR4)


#define VADC_G0_CHCTR5 (*(volatile Ifx_VADC_G_CHCTR*)0xF0020614u)




#define VADC_G0CHCTR5 (VADC_G0_CHCTR5)


#define VADC_G0_CHCTR6 (*(volatile Ifx_VADC_G_CHCTR*)0xF0020618u)




#define VADC_G0CHCTR6 (VADC_G0_CHCTR6)


#define VADC_G0_CHCTR7 (*(volatile Ifx_VADC_G_CHCTR*)0xF002061Cu)




#define VADC_G0CHCTR7 (VADC_G0_CHCTR7)


#define VADC_G0_EMUXCTR (*(volatile Ifx_VADC_G_EMUXCTR*)0xF00205F0u)




#define VADC_G0EMUXCTR (VADC_G0_EMUXCTR)


#define VADC_G0_ICLASS0 (*(volatile Ifx_VADC_ICLASS*)0xF00204A0u)




#define VADC_G0ICLASS0 (VADC_G0_ICLASS0)


#define VADC_G0_ICLASS1 (*(volatile Ifx_VADC_ICLASS*)0xF00204A4u)




#define VADC_G0ICLASS1 (VADC_G0_ICLASS1)


#define VADC_G0_Q0R0 (*(volatile Ifx_VADC_G_Q0R0*)0xF002050Cu)




#define VADC_G0Q0R0 (VADC_G0_Q0R0)


#define VADC_G0_QBUR0 (*(volatile Ifx_VADC_G_QBUR0*)0xF0020510u)




#define VADC_G0QBUR0 (VADC_G0_QBUR0)


#define VADC_G0_QCTRL0 (*(volatile Ifx_VADC_G_QCTRL0*)0xF0020500u)




#define VADC_G0QCTRL0 (VADC_G0_QCTRL0)


#define VADC_G0_QINR0 (*(volatile Ifx_VADC_G_QINR0*)0xF0020510u)




#define VADC_G0QINR0 (VADC_G0_QINR0)


#define VADC_G0_QMR0 (*(volatile Ifx_VADC_G_QMR0*)0xF0020504u)




#define VADC_G0QMR0 (VADC_G0_QMR0)


#define VADC_G0_QSR0 (*(volatile Ifx_VADC_G_QSR0*)0xF0020508u)




#define VADC_G0QSR0 (VADC_G0_QSR0)


#define VADC_G0_RCR0 (*(volatile Ifx_VADC_G_RCR*)0xF0020680u)




#define VADC_G0RCR0 (VADC_G0_RCR0)


#define VADC_G0_RCR1 (*(volatile Ifx_VADC_G_RCR*)0xF0020684u)




#define VADC_G0RCR1 (VADC_G0_RCR1)


#define VADC_G0_RCR10 (*(volatile Ifx_VADC_G_RCR*)0xF00206A8u)




#define VADC_G0RCR10 (VADC_G0_RCR10)


#define VADC_G0_RCR11 (*(volatile Ifx_VADC_G_RCR*)0xF00206ACu)




#define VADC_G0RCR11 (VADC_G0_RCR11)


#define VADC_G0_RCR12 (*(volatile Ifx_VADC_G_RCR*)0xF00206B0u)




#define VADC_G0RCR12 (VADC_G0_RCR12)


#define VADC_G0_RCR13 (*(volatile Ifx_VADC_G_RCR*)0xF00206B4u)




#define VADC_G0RCR13 (VADC_G0_RCR13)


#define VADC_G0_RCR14 (*(volatile Ifx_VADC_G_RCR*)0xF00206B8u)




#define VADC_G0RCR14 (VADC_G0_RCR14)


#define VADC_G0_RCR15 (*(volatile Ifx_VADC_G_RCR*)0xF00206BCu)




#define VADC_G0RCR15 (VADC_G0_RCR15)


#define VADC_G0_RCR2 (*(volatile Ifx_VADC_G_RCR*)0xF0020688u)




#define VADC_G0RCR2 (VADC_G0_RCR2)


#define VADC_G0_RCR3 (*(volatile Ifx_VADC_G_RCR*)0xF002068Cu)




#define VADC_G0RCR3 (VADC_G0_RCR3)


#define VADC_G0_RCR4 (*(volatile Ifx_VADC_G_RCR*)0xF0020690u)




#define VADC_G0RCR4 (VADC_G0_RCR4)


#define VADC_G0_RCR5 (*(volatile Ifx_VADC_G_RCR*)0xF0020694u)




#define VADC_G0RCR5 (VADC_G0_RCR5)


#define VADC_G0_RCR6 (*(volatile Ifx_VADC_G_RCR*)0xF0020698u)




#define VADC_G0RCR6 (VADC_G0_RCR6)


#define VADC_G0_RCR7 (*(volatile Ifx_VADC_G_RCR*)0xF002069Cu)




#define VADC_G0RCR7 (VADC_G0_RCR7)


#define VADC_G0_RCR8 (*(volatile Ifx_VADC_G_RCR*)0xF00206A0u)




#define VADC_G0RCR8 (VADC_G0_RCR8)


#define VADC_G0_RCR9 (*(volatile Ifx_VADC_G_RCR*)0xF00206A4u)




#define VADC_G0RCR9 (VADC_G0_RCR9)


#define VADC_G0_REFCLR (*(volatile Ifx_VADC_G_REFCLR*)0xF0020594u)




#define VADC_G0REFCLR (VADC_G0_REFCLR)


#define VADC_G0_REFLAG (*(volatile Ifx_VADC_G_REFLAG*)0xF0020584u)




#define VADC_G0REFLAG (VADC_G0_REFLAG)


#define VADC_G0_RES0 (*(volatile Ifx_VADC_G_RES*)0xF0020700u)




#define VADC_G0RES0 (VADC_G0_RES0)


#define VADC_G0_RES1 (*(volatile Ifx_VADC_G_RES*)0xF0020704u)




#define VADC_G0RES1 (VADC_G0_RES1)


#define VADC_G0_RES10 (*(volatile Ifx_VADC_G_RES*)0xF0020728u)




#define VADC_G0RES10 (VADC_G0_RES10)


#define VADC_G0_RES11 (*(volatile Ifx_VADC_G_RES*)0xF002072Cu)




#define VADC_G0RES11 (VADC_G0_RES11)


#define VADC_G0_RES12 (*(volatile Ifx_VADC_G_RES*)0xF0020730u)




#define VADC_G0RES12 (VADC_G0_RES12)


#define VADC_G0_RES13 (*(volatile Ifx_VADC_G_RES*)0xF0020734u)




#define VADC_G0RES13 (VADC_G0_RES13)


#define VADC_G0_RES14 (*(volatile Ifx_VADC_G_RES*)0xF0020738u)




#define VADC_G0RES14 (VADC_G0_RES14)


#define VADC_G0_RES15 (*(volatile Ifx_VADC_G_RES*)0xF002073Cu)




#define VADC_G0RES15 (VADC_G0_RES15)


#define VADC_G0_RES2 (*(volatile Ifx_VADC_G_RES*)0xF0020708u)




#define VADC_G0RES2 (VADC_G0_RES2)


#define VADC_G0_RES3 (*(volatile Ifx_VADC_G_RES*)0xF002070Cu)




#define VADC_G0RES3 (VADC_G0_RES3)


#define VADC_G0_RES4 (*(volatile Ifx_VADC_G_RES*)0xF0020710u)




#define VADC_G0RES4 (VADC_G0_RES4)


#define VADC_G0_RES5 (*(volatile Ifx_VADC_G_RES*)0xF0020714u)




#define VADC_G0RES5 (VADC_G0_RES5)


#define VADC_G0_RES6 (*(volatile Ifx_VADC_G_RES*)0xF0020718u)




#define VADC_G0RES6 (VADC_G0_RES6)


#define VADC_G0_RES7 (*(volatile Ifx_VADC_G_RES*)0xF002071Cu)




#define VADC_G0RES7 (VADC_G0_RES7)


#define VADC_G0_RES8 (*(volatile Ifx_VADC_G_RES*)0xF0020720u)




#define VADC_G0RES8 (VADC_G0_RES8)


#define VADC_G0_RES9 (*(volatile Ifx_VADC_G_RES*)0xF0020724u)




#define VADC_G0RES9 (VADC_G0_RES9)


#define VADC_G0_RESD0 (*(volatile Ifx_VADC_G_RESD*)0xF0020780u)




#define VADC_G0RESD0 (VADC_G0_RESD0)


#define VADC_G0_RESD1 (*(volatile Ifx_VADC_G_RESD*)0xF0020784u)




#define VADC_G0RESD1 (VADC_G0_RESD1)


#define VADC_G0_RESD10 (*(volatile Ifx_VADC_G_RESD*)0xF00207A8u)




#define VADC_G0RESD10 (VADC_G0_RESD10)


#define VADC_G0_RESD11 (*(volatile Ifx_VADC_G_RESD*)0xF00207ACu)




#define VADC_G0RESD11 (VADC_G0_RESD11)


#define VADC_G0_RESD12 (*(volatile Ifx_VADC_G_RESD*)0xF00207B0u)




#define VADC_G0RESD12 (VADC_G0_RESD12)


#define VADC_G0_RESD13 (*(volatile Ifx_VADC_G_RESD*)0xF00207B4u)




#define VADC_G0RESD13 (VADC_G0_RESD13)


#define VADC_G0_RESD14 (*(volatile Ifx_VADC_G_RESD*)0xF00207B8u)




#define VADC_G0RESD14 (VADC_G0_RESD14)


#define VADC_G0_RESD15 (*(volatile Ifx_VADC_G_RESD*)0xF00207BCu)




#define VADC_G0RESD15 (VADC_G0_RESD15)


#define VADC_G0_RESD2 (*(volatile Ifx_VADC_G_RESD*)0xF0020788u)




#define VADC_G0RESD2 (VADC_G0_RESD2)


#define VADC_G0_RESD3 (*(volatile Ifx_VADC_G_RESD*)0xF002078Cu)




#define VADC_G0RESD3 (VADC_G0_RESD3)


#define VADC_G0_RESD4 (*(volatile Ifx_VADC_G_RESD*)0xF0020790u)




#define VADC_G0RESD4 (VADC_G0_RESD4)


#define VADC_G0_RESD5 (*(volatile Ifx_VADC_G_RESD*)0xF0020794u)




#define VADC_G0RESD5 (VADC_G0_RESD5)


#define VADC_G0_RESD6 (*(volatile Ifx_VADC_G_RESD*)0xF0020798u)




#define VADC_G0RESD6 (VADC_G0_RESD6)


#define VADC_G0_RESD7 (*(volatile Ifx_VADC_G_RESD*)0xF002079Cu)




#define VADC_G0RESD7 (VADC_G0_RESD7)


#define VADC_G0_RESD8 (*(volatile Ifx_VADC_G_RESD*)0xF00207A0u)




#define VADC_G0RESD8 (VADC_G0_RESD8)


#define VADC_G0_RESD9 (*(volatile Ifx_VADC_G_RESD*)0xF00207A4u)




#define VADC_G0RESD9 (VADC_G0_RESD9)


#define VADC_G0_REVNP0 (*(volatile Ifx_VADC_G_REVNP0*)0xF00205B0u)




#define VADC_G0REVNP0 (VADC_G0_REVNP0)


#define VADC_G0_REVNP1 (*(volatile Ifx_VADC_G_REVNP1*)0xF00205B4u)




#define VADC_G0REVNP1 (VADC_G0_REVNP1)


#define VADC_G0_RRASS (*(volatile Ifx_VADC_G_RRASS*)0xF002048Cu)




#define VADC_G0RRASS (VADC_G0_RRASS)


#define VADC_G0_SEFCLR (*(volatile Ifx_VADC_G_SEFCLR*)0xF0020598u)




#define VADC_G0SEFCLR (VADC_G0_SEFCLR)


#define VADC_G0_SEFLAG (*(volatile Ifx_VADC_G_SEFLAG*)0xF0020588u)




#define VADC_G0SEFLAG (VADC_G0_SEFLAG)


#define VADC_G0_SEVNP (*(volatile Ifx_VADC_G_SEVNP*)0xF00205C0u)




#define VADC_G0SEVNP (VADC_G0_SEVNP)


#define VADC_G0_SRACT (*(volatile Ifx_VADC_G_SRACT*)0xF00205C8u)




#define VADC_G0SRACT (VADC_G0_SRACT)


#define VADC_G0_SYNCTR (*(volatile Ifx_VADC_G_SYNCTR*)0xF00204C0u)




#define VADC_G0SYNCTR (VADC_G0_SYNCTR)


#define VADC_G0_VFR (*(volatile Ifx_VADC_G_VFR*)0xF00205F8u)




#define VADC_G0VFR (VADC_G0_VFR)


#define VADC_G1_ALIAS (*(volatile Ifx_VADC_G_ALIAS*)0xF00208B0u)




#define VADC_G1ALIAS (VADC_G1_ALIAS)


#define VADC_G1_ARBCFG (*(volatile Ifx_VADC_G_ARBCFG*)0xF0020880u)




#define VADC_G1ARBCFG (VADC_G1_ARBCFG)


#define VADC_G1_ARBPR (*(volatile Ifx_VADC_G_ARBPR*)0xF0020884u)




#define VADC_G1ARBPR (VADC_G1_ARBPR)


#define VADC_G1_ASCTRL (*(volatile Ifx_VADC_G_ASCTRL*)0xF0020920u)




#define VADC_G1ASCTRL (VADC_G1_ASCTRL)


#define VADC_G1_ASMR (*(volatile Ifx_VADC_G_ASMR*)0xF0020924u)




#define VADC_G1ASMR (VADC_G1_ASMR)


#define VADC_G1_ASPND (*(volatile Ifx_VADC_G_ASPND*)0xF002092Cu)




#define VADC_G1ASPND (VADC_G1_ASPND)


#define VADC_G1_ASSEL (*(volatile Ifx_VADC_G_ASSEL*)0xF0020928u)




#define VADC_G1ASSEL (VADC_G1_ASSEL)


#define VADC_G1_BFL (*(volatile Ifx_VADC_G_BFL*)0xF00208C8u)




#define VADC_G1BFL (VADC_G1_BFL)


#define VADC_G1_BFLC (*(volatile Ifx_VADC_G_BFLC*)0xF00208D0u)




#define VADC_G1BFLC (VADC_G1_BFLC)


#define VADC_G1_BFLNP (*(volatile Ifx_VADC_G_BFLNP*)0xF00208D4u)




#define VADC_G1BFLNP (VADC_G1_BFLNP)


#define VADC_G1_BFLS (*(volatile Ifx_VADC_G_BFLS*)0xF00208CCu)




#define VADC_G1BFLS (VADC_G1_BFLS)


#define VADC_G1_BOUND (*(volatile Ifx_VADC_G_BOUND*)0xF00208B8u)




#define VADC_G1BOUND (VADC_G1_BOUND)


#define VADC_G1_CEFCLR (*(volatile Ifx_VADC_G_CEFCLR*)0xF0020990u)




#define VADC_G1CEFCLR (VADC_G1_CEFCLR)


#define VADC_G1_CEFLAG (*(volatile Ifx_VADC_G_CEFLAG*)0xF0020980u)




#define VADC_G1CEFLAG (VADC_G1_CEFLAG)


#define VADC_G1_CEVNP0 (*(volatile Ifx_VADC_G_CEVNP0*)0xF00209A0u)




#define VADC_G1CEVNP0 (VADC_G1_CEVNP0)


#define VADC_G1_CHASS (*(volatile Ifx_VADC_G_CHASS*)0xF0020888u)




#define VADC_G1CHASS (VADC_G1_CHASS)


#define VADC_G1_CHCTR0 (*(volatile Ifx_VADC_G_CHCTR*)0xF0020A00u)




#define VADC_G1CHCTR0 (VADC_G1_CHCTR0)


#define VADC_G1_CHCTR1 (*(volatile Ifx_VADC_G_CHCTR*)0xF0020A04u)




#define VADC_G1CHCTR1 (VADC_G1_CHCTR1)


#define VADC_G1_CHCTR2 (*(volatile Ifx_VADC_G_CHCTR*)0xF0020A08u)




#define VADC_G1CHCTR2 (VADC_G1_CHCTR2)


#define VADC_G1_CHCTR3 (*(volatile Ifx_VADC_G_CHCTR*)0xF0020A0Cu)




#define VADC_G1CHCTR3 (VADC_G1_CHCTR3)


#define VADC_G1_CHCTR4 (*(volatile Ifx_VADC_G_CHCTR*)0xF0020A10u)




#define VADC_G1CHCTR4 (VADC_G1_CHCTR4)


#define VADC_G1_CHCTR5 (*(volatile Ifx_VADC_G_CHCTR*)0xF0020A14u)




#define VADC_G1CHCTR5 (VADC_G1_CHCTR5)


#define VADC_G1_CHCTR6 (*(volatile Ifx_VADC_G_CHCTR*)0xF0020A18u)




#define VADC_G1CHCTR6 (VADC_G1_CHCTR6)


#define VADC_G1_CHCTR7 (*(volatile Ifx_VADC_G_CHCTR*)0xF0020A1Cu)




#define VADC_G1CHCTR7 (VADC_G1_CHCTR7)


#define VADC_G1_EMUXCTR (*(volatile Ifx_VADC_G_EMUXCTR*)0xF00209F0u)




#define VADC_G1EMUXCTR (VADC_G1_EMUXCTR)


#define VADC_G1_ICLASS0 (*(volatile Ifx_VADC_ICLASS*)0xF00208A0u)




#define VADC_G1ICLASS0 (VADC_G1_ICLASS0)


#define VADC_G1_ICLASS1 (*(volatile Ifx_VADC_ICLASS*)0xF00208A4u)




#define VADC_G1ICLASS1 (VADC_G1_ICLASS1)


#define VADC_G1_Q0R0 (*(volatile Ifx_VADC_G_Q0R0*)0xF002090Cu)




#define VADC_G1Q0R0 (VADC_G1_Q0R0)


#define VADC_G1_QBUR0 (*(volatile Ifx_VADC_G_QBUR0*)0xF0020910u)




#define VADC_G1QBUR0 (VADC_G1_QBUR0)


#define VADC_G1_QCTRL0 (*(volatile Ifx_VADC_G_QCTRL0*)0xF0020900u)




#define VADC_G1QCTRL0 (VADC_G1_QCTRL0)


#define VADC_G1_QINR0 (*(volatile Ifx_VADC_G_QINR0*)0xF0020910u)




#define VADC_G1QINR0 (VADC_G1_QINR0)


#define VADC_G1_QMR0 (*(volatile Ifx_VADC_G_QMR0*)0xF0020904u)




#define VADC_G1QMR0 (VADC_G1_QMR0)


#define VADC_G1_QSR0 (*(volatile Ifx_VADC_G_QSR0*)0xF0020908u)




#define VADC_G1QSR0 (VADC_G1_QSR0)


#define VADC_G1_RCR0 (*(volatile Ifx_VADC_G_RCR*)0xF0020A80u)




#define VADC_G1RCR0 (VADC_G1_RCR0)


#define VADC_G1_RCR1 (*(volatile Ifx_VADC_G_RCR*)0xF0020A84u)




#define VADC_G1RCR1 (VADC_G1_RCR1)


#define VADC_G1_RCR10 (*(volatile Ifx_VADC_G_RCR*)0xF0020AA8u)




#define VADC_G1RCR10 (VADC_G1_RCR10)


#define VADC_G1_RCR11 (*(volatile Ifx_VADC_G_RCR*)0xF0020AACu)




#define VADC_G1RCR11 (VADC_G1_RCR11)


#define VADC_G1_RCR12 (*(volatile Ifx_VADC_G_RCR*)0xF0020AB0u)




#define VADC_G1RCR12 (VADC_G1_RCR12)


#define VADC_G1_RCR13 (*(volatile Ifx_VADC_G_RCR*)0xF0020AB4u)




#define VADC_G1RCR13 (VADC_G1_RCR13)


#define VADC_G1_RCR14 (*(volatile Ifx_VADC_G_RCR*)0xF0020AB8u)




#define VADC_G1RCR14 (VADC_G1_RCR14)


#define VADC_G1_RCR15 (*(volatile Ifx_VADC_G_RCR*)0xF0020ABCu)




#define VADC_G1RCR15 (VADC_G1_RCR15)


#define VADC_G1_RCR2 (*(volatile Ifx_VADC_G_RCR*)0xF0020A88u)




#define VADC_G1RCR2 (VADC_G1_RCR2)


#define VADC_G1_RCR3 (*(volatile Ifx_VADC_G_RCR*)0xF0020A8Cu)




#define VADC_G1RCR3 (VADC_G1_RCR3)


#define VADC_G1_RCR4 (*(volatile Ifx_VADC_G_RCR*)0xF0020A90u)




#define VADC_G1RCR4 (VADC_G1_RCR4)


#define VADC_G1_RCR5 (*(volatile Ifx_VADC_G_RCR*)0xF0020A94u)




#define VADC_G1RCR5 (VADC_G1_RCR5)


#define VADC_G1_RCR6 (*(volatile Ifx_VADC_G_RCR*)0xF0020A98u)




#define VADC_G1RCR6 (VADC_G1_RCR6)


#define VADC_G1_RCR7 (*(volatile Ifx_VADC_G_RCR*)0xF0020A9Cu)




#define VADC_G1RCR7 (VADC_G1_RCR7)


#define VADC_G1_RCR8 (*(volatile Ifx_VADC_G_RCR*)0xF0020AA0u)




#define VADC_G1RCR8 (VADC_G1_RCR8)


#define VADC_G1_RCR9 (*(volatile Ifx_VADC_G_RCR*)0xF0020AA4u)




#define VADC_G1RCR9 (VADC_G1_RCR9)


#define VADC_G1_REFCLR (*(volatile Ifx_VADC_G_REFCLR*)0xF0020994u)




#define VADC_G1REFCLR (VADC_G1_REFCLR)


#define VADC_G1_REFLAG (*(volatile Ifx_VADC_G_REFLAG*)0xF0020984u)




#define VADC_G1REFLAG (VADC_G1_REFLAG)


#define VADC_G1_RES0 (*(volatile Ifx_VADC_G_RES*)0xF0020B00u)




#define VADC_G1RES0 (VADC_G1_RES0)


#define VADC_G1_RES1 (*(volatile Ifx_VADC_G_RES*)0xF0020B04u)




#define VADC_G1RES1 (VADC_G1_RES1)


#define VADC_G1_RES10 (*(volatile Ifx_VADC_G_RES*)0xF0020B28u)




#define VADC_G1RES10 (VADC_G1_RES10)


#define VADC_G1_RES11 (*(volatile Ifx_VADC_G_RES*)0xF0020B2Cu)




#define VADC_G1RES11 (VADC_G1_RES11)


#define VADC_G1_RES12 (*(volatile Ifx_VADC_G_RES*)0xF0020B30u)




#define VADC_G1RES12 (VADC_G1_RES12)


#define VADC_G1_RES13 (*(volatile Ifx_VADC_G_RES*)0xF0020B34u)




#define VADC_G1RES13 (VADC_G1_RES13)


#define VADC_G1_RES14 (*(volatile Ifx_VADC_G_RES*)0xF0020B38u)




#define VADC_G1RES14 (VADC_G1_RES14)


#define VADC_G1_RES15 (*(volatile Ifx_VADC_G_RES*)0xF0020B3Cu)




#define VADC_G1RES15 (VADC_G1_RES15)


#define VADC_G1_RES2 (*(volatile Ifx_VADC_G_RES*)0xF0020B08u)




#define VADC_G1RES2 (VADC_G1_RES2)


#define VADC_G1_RES3 (*(volatile Ifx_VADC_G_RES*)0xF0020B0Cu)




#define VADC_G1RES3 (VADC_G1_RES3)


#define VADC_G1_RES4 (*(volatile Ifx_VADC_G_RES*)0xF0020B10u)




#define VADC_G1RES4 (VADC_G1_RES4)


#define VADC_G1_RES5 (*(volatile Ifx_VADC_G_RES*)0xF0020B14u)




#define VADC_G1RES5 (VADC_G1_RES5)


#define VADC_G1_RES6 (*(volatile Ifx_VADC_G_RES*)0xF0020B18u)




#define VADC_G1RES6 (VADC_G1_RES6)


#define VADC_G1_RES7 (*(volatile Ifx_VADC_G_RES*)0xF0020B1Cu)




#define VADC_G1RES7 (VADC_G1_RES7)


#define VADC_G1_RES8 (*(volatile Ifx_VADC_G_RES*)0xF0020B20u)




#define VADC_G1RES8 (VADC_G1_RES8)


#define VADC_G1_RES9 (*(volatile Ifx_VADC_G_RES*)0xF0020B24u)




#define VADC_G1RES9 (VADC_G1_RES9)


#define VADC_G1_RESD0 (*(volatile Ifx_VADC_G_RESD*)0xF0020B80u)




#define VADC_G1RESD0 (VADC_G1_RESD0)


#define VADC_G1_RESD1 (*(volatile Ifx_VADC_G_RESD*)0xF0020B84u)




#define VADC_G1RESD1 (VADC_G1_RESD1)


#define VADC_G1_RESD10 (*(volatile Ifx_VADC_G_RESD*)0xF0020BA8u)




#define VADC_G1RESD10 (VADC_G1_RESD10)


#define VADC_G1_RESD11 (*(volatile Ifx_VADC_G_RESD*)0xF0020BACu)




#define VADC_G1RESD11 (VADC_G1_RESD11)


#define VADC_G1_RESD12 (*(volatile Ifx_VADC_G_RESD*)0xF0020BB0u)




#define VADC_G1RESD12 (VADC_G1_RESD12)


#define VADC_G1_RESD13 (*(volatile Ifx_VADC_G_RESD*)0xF0020BB4u)




#define VADC_G1RESD13 (VADC_G1_RESD13)


#define VADC_G1_RESD14 (*(volatile Ifx_VADC_G_RESD*)0xF0020BB8u)




#define VADC_G1RESD14 (VADC_G1_RESD14)


#define VADC_G1_RESD15 (*(volatile Ifx_VADC_G_RESD*)0xF0020BBCu)




#define VADC_G1RESD15 (VADC_G1_RESD15)


#define VADC_G1_RESD2 (*(volatile Ifx_VADC_G_RESD*)0xF0020B88u)




#define VADC_G1RESD2 (VADC_G1_RESD2)


#define VADC_G1_RESD3 (*(volatile Ifx_VADC_G_RESD*)0xF0020B8Cu)




#define VADC_G1RESD3 (VADC_G1_RESD3)


#define VADC_G1_RESD4 (*(volatile Ifx_VADC_G_RESD*)0xF0020B90u)




#define VADC_G1RESD4 (VADC_G1_RESD4)


#define VADC_G1_RESD5 (*(volatile Ifx_VADC_G_RESD*)0xF0020B94u)




#define VADC_G1RESD5 (VADC_G1_RESD5)


#define VADC_G1_RESD6 (*(volatile Ifx_VADC_G_RESD*)0xF0020B98u)




#define VADC_G1RESD6 (VADC_G1_RESD6)


#define VADC_G1_RESD7 (*(volatile Ifx_VADC_G_RESD*)0xF0020B9Cu)




#define VADC_G1RESD7 (VADC_G1_RESD7)


#define VADC_G1_RESD8 (*(volatile Ifx_VADC_G_RESD*)0xF0020BA0u)




#define VADC_G1RESD8 (VADC_G1_RESD8)


#define VADC_G1_RESD9 (*(volatile Ifx_VADC_G_RESD*)0xF0020BA4u)




#define VADC_G1RESD9 (VADC_G1_RESD9)


#define VADC_G1_REVNP0 (*(volatile Ifx_VADC_G_REVNP0*)0xF00209B0u)




#define VADC_G1REVNP0 (VADC_G1_REVNP0)


#define VADC_G1_REVNP1 (*(volatile Ifx_VADC_G_REVNP1*)0xF00209B4u)




#define VADC_G1REVNP1 (VADC_G1_REVNP1)


#define VADC_G1_RRASS (*(volatile Ifx_VADC_G_RRASS*)0xF002088Cu)




#define VADC_G1RRASS (VADC_G1_RRASS)


#define VADC_G1_SEFCLR (*(volatile Ifx_VADC_G_SEFCLR*)0xF0020998u)




#define VADC_G1SEFCLR (VADC_G1_SEFCLR)


#define VADC_G1_SEFLAG (*(volatile Ifx_VADC_G_SEFLAG*)0xF0020988u)




#define VADC_G1SEFLAG (VADC_G1_SEFLAG)


#define VADC_G1_SEVNP (*(volatile Ifx_VADC_G_SEVNP*)0xF00209C0u)




#define VADC_G1SEVNP (VADC_G1_SEVNP)


#define VADC_G1_SRACT (*(volatile Ifx_VADC_G_SRACT*)0xF00209C8u)




#define VADC_G1SRACT (VADC_G1_SRACT)


#define VADC_G1_SYNCTR (*(volatile Ifx_VADC_G_SYNCTR*)0xF00208C0u)




#define VADC_G1SYNCTR (VADC_G1_SYNCTR)


#define VADC_G1_VFR (*(volatile Ifx_VADC_G_VFR*)0xF00209F8u)




#define VADC_G1VFR (VADC_G1_VFR)


#define VADC_G2_ALIAS (*(volatile Ifx_VADC_G_ALIAS*)0xF0020CB0u)




#define VADC_G2ALIAS (VADC_G2_ALIAS)


#define VADC_G2_ARBCFG (*(volatile Ifx_VADC_G_ARBCFG*)0xF0020C80u)




#define VADC_G2ARBCFG (VADC_G2_ARBCFG)


#define VADC_G2_ARBPR (*(volatile Ifx_VADC_G_ARBPR*)0xF0020C84u)




#define VADC_G2ARBPR (VADC_G2_ARBPR)


#define VADC_G2_ASCTRL (*(volatile Ifx_VADC_G_ASCTRL*)0xF0020D20u)




#define VADC_G2ASCTRL (VADC_G2_ASCTRL)


#define VADC_G2_ASMR (*(volatile Ifx_VADC_G_ASMR*)0xF0020D24u)




#define VADC_G2ASMR (VADC_G2_ASMR)


#define VADC_G2_ASPND (*(volatile Ifx_VADC_G_ASPND*)0xF0020D2Cu)




#define VADC_G2ASPND (VADC_G2_ASPND)


#define VADC_G2_ASSEL (*(volatile Ifx_VADC_G_ASSEL*)0xF0020D28u)




#define VADC_G2ASSEL (VADC_G2_ASSEL)


#define VADC_G2_BFL (*(volatile Ifx_VADC_G_BFL*)0xF0020CC8u)




#define VADC_G2BFL (VADC_G2_BFL)


#define VADC_G2_BFLC (*(volatile Ifx_VADC_G_BFLC*)0xF0020CD0u)




#define VADC_G2BFLC (VADC_G2_BFLC)


#define VADC_G2_BFLNP (*(volatile Ifx_VADC_G_BFLNP*)0xF0020CD4u)




#define VADC_G2BFLNP (VADC_G2_BFLNP)


#define VADC_G2_BFLS (*(volatile Ifx_VADC_G_BFLS*)0xF0020CCCu)




#define VADC_G2BFLS (VADC_G2_BFLS)


#define VADC_G2_BOUND (*(volatile Ifx_VADC_G_BOUND*)0xF0020CB8u)




#define VADC_G2BOUND (VADC_G2_BOUND)


#define VADC_G2_CEFCLR (*(volatile Ifx_VADC_G_CEFCLR*)0xF0020D90u)




#define VADC_G2CEFCLR (VADC_G2_CEFCLR)


#define VADC_G2_CEFLAG (*(volatile Ifx_VADC_G_CEFLAG*)0xF0020D80u)




#define VADC_G2CEFLAG (VADC_G2_CEFLAG)


#define VADC_G2_CEVNP0 (*(volatile Ifx_VADC_G_CEVNP0*)0xF0020DA0u)




#define VADC_G2CEVNP0 (VADC_G2_CEVNP0)


#define VADC_G2_CHASS (*(volatile Ifx_VADC_G_CHASS*)0xF0020C88u)




#define VADC_G2CHASS (VADC_G2_CHASS)


#define VADC_G2_CHCTR0 (*(volatile Ifx_VADC_G_CHCTR*)0xF0020E00u)




#define VADC_G2CHCTR0 (VADC_G2_CHCTR0)


#define VADC_G2_CHCTR1 (*(volatile Ifx_VADC_G_CHCTR*)0xF0020E04u)




#define VADC_G2CHCTR1 (VADC_G2_CHCTR1)


#define VADC_G2_CHCTR2 (*(volatile Ifx_VADC_G_CHCTR*)0xF0020E08u)




#define VADC_G2CHCTR2 (VADC_G2_CHCTR2)


#define VADC_G2_CHCTR3 (*(volatile Ifx_VADC_G_CHCTR*)0xF0020E0Cu)




#define VADC_G2CHCTR3 (VADC_G2_CHCTR3)


#define VADC_G2_CHCTR4 (*(volatile Ifx_VADC_G_CHCTR*)0xF0020E10u)




#define VADC_G2CHCTR4 (VADC_G2_CHCTR4)


#define VADC_G2_CHCTR5 (*(volatile Ifx_VADC_G_CHCTR*)0xF0020E14u)




#define VADC_G2CHCTR5 (VADC_G2_CHCTR5)


#define VADC_G2_CHCTR6 (*(volatile Ifx_VADC_G_CHCTR*)0xF0020E18u)




#define VADC_G2CHCTR6 (VADC_G2_CHCTR6)


#define VADC_G2_CHCTR7 (*(volatile Ifx_VADC_G_CHCTR*)0xF0020E1Cu)




#define VADC_G2CHCTR7 (VADC_G2_CHCTR7)


#define VADC_G2_EMUXCTR (*(volatile Ifx_VADC_G_EMUXCTR*)0xF0020DF0u)




#define VADC_G2EMUXCTR (VADC_G2_EMUXCTR)


#define VADC_G2_ICLASS0 (*(volatile Ifx_VADC_ICLASS*)0xF0020CA0u)




#define VADC_G2ICLASS0 (VADC_G2_ICLASS0)


#define VADC_G2_ICLASS1 (*(volatile Ifx_VADC_ICLASS*)0xF0020CA4u)




#define VADC_G2ICLASS1 (VADC_G2_ICLASS1)


#define VADC_G2_Q0R0 (*(volatile Ifx_VADC_G_Q0R0*)0xF0020D0Cu)




#define VADC_G2Q0R0 (VADC_G2_Q0R0)


#define VADC_G2_QBUR0 (*(volatile Ifx_VADC_G_QBUR0*)0xF0020D10u)




#define VADC_G2QBUR0 (VADC_G2_QBUR0)


#define VADC_G2_QCTRL0 (*(volatile Ifx_VADC_G_QCTRL0*)0xF0020D00u)




#define VADC_G2QCTRL0 (VADC_G2_QCTRL0)


#define VADC_G2_QINR0 (*(volatile Ifx_VADC_G_QINR0*)0xF0020D10u)




#define VADC_G2QINR0 (VADC_G2_QINR0)


#define VADC_G2_QMR0 (*(volatile Ifx_VADC_G_QMR0*)0xF0020D04u)




#define VADC_G2QMR0 (VADC_G2_QMR0)


#define VADC_G2_QSR0 (*(volatile Ifx_VADC_G_QSR0*)0xF0020D08u)




#define VADC_G2QSR0 (VADC_G2_QSR0)


#define VADC_G2_RCR0 (*(volatile Ifx_VADC_G_RCR*)0xF0020E80u)




#define VADC_G2RCR0 (VADC_G2_RCR0)


#define VADC_G2_RCR1 (*(volatile Ifx_VADC_G_RCR*)0xF0020E84u)




#define VADC_G2RCR1 (VADC_G2_RCR1)


#define VADC_G2_RCR10 (*(volatile Ifx_VADC_G_RCR*)0xF0020EA8u)




#define VADC_G2RCR10 (VADC_G2_RCR10)


#define VADC_G2_RCR11 (*(volatile Ifx_VADC_G_RCR*)0xF0020EACu)




#define VADC_G2RCR11 (VADC_G2_RCR11)


#define VADC_G2_RCR12 (*(volatile Ifx_VADC_G_RCR*)0xF0020EB0u)




#define VADC_G2RCR12 (VADC_G2_RCR12)


#define VADC_G2_RCR13 (*(volatile Ifx_VADC_G_RCR*)0xF0020EB4u)




#define VADC_G2RCR13 (VADC_G2_RCR13)


#define VADC_G2_RCR14 (*(volatile Ifx_VADC_G_RCR*)0xF0020EB8u)




#define VADC_G2RCR14 (VADC_G2_RCR14)


#define VADC_G2_RCR15 (*(volatile Ifx_VADC_G_RCR*)0xF0020EBCu)




#define VADC_G2RCR15 (VADC_G2_RCR15)


#define VADC_G2_RCR2 (*(volatile Ifx_VADC_G_RCR*)0xF0020E88u)




#define VADC_G2RCR2 (VADC_G2_RCR2)


#define VADC_G2_RCR3 (*(volatile Ifx_VADC_G_RCR*)0xF0020E8Cu)




#define VADC_G2RCR3 (VADC_G2_RCR3)


#define VADC_G2_RCR4 (*(volatile Ifx_VADC_G_RCR*)0xF0020E90u)




#define VADC_G2RCR4 (VADC_G2_RCR4)


#define VADC_G2_RCR5 (*(volatile Ifx_VADC_G_RCR*)0xF0020E94u)




#define VADC_G2RCR5 (VADC_G2_RCR5)


#define VADC_G2_RCR6 (*(volatile Ifx_VADC_G_RCR*)0xF0020E98u)




#define VADC_G2RCR6 (VADC_G2_RCR6)


#define VADC_G2_RCR7 (*(volatile Ifx_VADC_G_RCR*)0xF0020E9Cu)




#define VADC_G2RCR7 (VADC_G2_RCR7)


#define VADC_G2_RCR8 (*(volatile Ifx_VADC_G_RCR*)0xF0020EA0u)




#define VADC_G2RCR8 (VADC_G2_RCR8)


#define VADC_G2_RCR9 (*(volatile Ifx_VADC_G_RCR*)0xF0020EA4u)




#define VADC_G2RCR9 (VADC_G2_RCR9)


#define VADC_G2_REFCLR (*(volatile Ifx_VADC_G_REFCLR*)0xF0020D94u)




#define VADC_G2REFCLR (VADC_G2_REFCLR)


#define VADC_G2_REFLAG (*(volatile Ifx_VADC_G_REFLAG*)0xF0020D84u)




#define VADC_G2REFLAG (VADC_G2_REFLAG)


#define VADC_G2_RES0 (*(volatile Ifx_VADC_G_RES*)0xF0020F00u)




#define VADC_G2RES0 (VADC_G2_RES0)


#define VADC_G2_RES1 (*(volatile Ifx_VADC_G_RES*)0xF0020F04u)




#define VADC_G2RES1 (VADC_G2_RES1)


#define VADC_G2_RES10 (*(volatile Ifx_VADC_G_RES*)0xF0020F28u)




#define VADC_G2RES10 (VADC_G2_RES10)


#define VADC_G2_RES11 (*(volatile Ifx_VADC_G_RES*)0xF0020F2Cu)




#define VADC_G2RES11 (VADC_G2_RES11)


#define VADC_G2_RES12 (*(volatile Ifx_VADC_G_RES*)0xF0020F30u)




#define VADC_G2RES12 (VADC_G2_RES12)


#define VADC_G2_RES13 (*(volatile Ifx_VADC_G_RES*)0xF0020F34u)




#define VADC_G2RES13 (VADC_G2_RES13)


#define VADC_G2_RES14 (*(volatile Ifx_VADC_G_RES*)0xF0020F38u)




#define VADC_G2RES14 (VADC_G2_RES14)


#define VADC_G2_RES15 (*(volatile Ifx_VADC_G_RES*)0xF0020F3Cu)




#define VADC_G2RES15 (VADC_G2_RES15)


#define VADC_G2_RES2 (*(volatile Ifx_VADC_G_RES*)0xF0020F08u)




#define VADC_G2RES2 (VADC_G2_RES2)


#define VADC_G2_RES3 (*(volatile Ifx_VADC_G_RES*)0xF0020F0Cu)




#define VADC_G2RES3 (VADC_G2_RES3)


#define VADC_G2_RES4 (*(volatile Ifx_VADC_G_RES*)0xF0020F10u)




#define VADC_G2RES4 (VADC_G2_RES4)


#define VADC_G2_RES5 (*(volatile Ifx_VADC_G_RES*)0xF0020F14u)




#define VADC_G2RES5 (VADC_G2_RES5)


#define VADC_G2_RES6 (*(volatile Ifx_VADC_G_RES*)0xF0020F18u)




#define VADC_G2RES6 (VADC_G2_RES6)


#define VADC_G2_RES7 (*(volatile Ifx_VADC_G_RES*)0xF0020F1Cu)




#define VADC_G2RES7 (VADC_G2_RES7)


#define VADC_G2_RES8 (*(volatile Ifx_VADC_G_RES*)0xF0020F20u)




#define VADC_G2RES8 (VADC_G2_RES8)


#define VADC_G2_RES9 (*(volatile Ifx_VADC_G_RES*)0xF0020F24u)




#define VADC_G2RES9 (VADC_G2_RES9)


#define VADC_G2_RESD0 (*(volatile Ifx_VADC_G_RESD*)0xF0020F80u)




#define VADC_G2RESD0 (VADC_G2_RESD0)


#define VADC_G2_RESD1 (*(volatile Ifx_VADC_G_RESD*)0xF0020F84u)




#define VADC_G2RESD1 (VADC_G2_RESD1)


#define VADC_G2_RESD10 (*(volatile Ifx_VADC_G_RESD*)0xF0020FA8u)




#define VADC_G2RESD10 (VADC_G2_RESD10)


#define VADC_G2_RESD11 (*(volatile Ifx_VADC_G_RESD*)0xF0020FACu)




#define VADC_G2RESD11 (VADC_G2_RESD11)


#define VADC_G2_RESD12 (*(volatile Ifx_VADC_G_RESD*)0xF0020FB0u)




#define VADC_G2RESD12 (VADC_G2_RESD12)


#define VADC_G2_RESD13 (*(volatile Ifx_VADC_G_RESD*)0xF0020FB4u)




#define VADC_G2RESD13 (VADC_G2_RESD13)


#define VADC_G2_RESD14 (*(volatile Ifx_VADC_G_RESD*)0xF0020FB8u)




#define VADC_G2RESD14 (VADC_G2_RESD14)


#define VADC_G2_RESD15 (*(volatile Ifx_VADC_G_RESD*)0xF0020FBCu)




#define VADC_G2RESD15 (VADC_G2_RESD15)


#define VADC_G2_RESD2 (*(volatile Ifx_VADC_G_RESD*)0xF0020F88u)




#define VADC_G2RESD2 (VADC_G2_RESD2)


#define VADC_G2_RESD3 (*(volatile Ifx_VADC_G_RESD*)0xF0020F8Cu)




#define VADC_G2RESD3 (VADC_G2_RESD3)


#define VADC_G2_RESD4 (*(volatile Ifx_VADC_G_RESD*)0xF0020F90u)




#define VADC_G2RESD4 (VADC_G2_RESD4)


#define VADC_G2_RESD5 (*(volatile Ifx_VADC_G_RESD*)0xF0020F94u)




#define VADC_G2RESD5 (VADC_G2_RESD5)


#define VADC_G2_RESD6 (*(volatile Ifx_VADC_G_RESD*)0xF0020F98u)




#define VADC_G2RESD6 (VADC_G2_RESD6)


#define VADC_G2_RESD7 (*(volatile Ifx_VADC_G_RESD*)0xF0020F9Cu)




#define VADC_G2RESD7 (VADC_G2_RESD7)


#define VADC_G2_RESD8 (*(volatile Ifx_VADC_G_RESD*)0xF0020FA0u)




#define VADC_G2RESD8 (VADC_G2_RESD8)


#define VADC_G2_RESD9 (*(volatile Ifx_VADC_G_RESD*)0xF0020FA4u)




#define VADC_G2RESD9 (VADC_G2_RESD9)


#define VADC_G2_REVNP0 (*(volatile Ifx_VADC_G_REVNP0*)0xF0020DB0u)




#define VADC_G2REVNP0 (VADC_G2_REVNP0)


#define VADC_G2_REVNP1 (*(volatile Ifx_VADC_G_REVNP1*)0xF0020DB4u)




#define VADC_G2REVNP1 (VADC_G2_REVNP1)


#define VADC_G2_RRASS (*(volatile Ifx_VADC_G_RRASS*)0xF0020C8Cu)




#define VADC_G2RRASS (VADC_G2_RRASS)


#define VADC_G2_SEFCLR (*(volatile Ifx_VADC_G_SEFCLR*)0xF0020D98u)




#define VADC_G2SEFCLR (VADC_G2_SEFCLR)


#define VADC_G2_SEFLAG (*(volatile Ifx_VADC_G_SEFLAG*)0xF0020D88u)




#define VADC_G2SEFLAG (VADC_G2_SEFLAG)


#define VADC_G2_SEVNP (*(volatile Ifx_VADC_G_SEVNP*)0xF0020DC0u)




#define VADC_G2SEVNP (VADC_G2_SEVNP)


#define VADC_G2_SRACT (*(volatile Ifx_VADC_G_SRACT*)0xF0020DC8u)




#define VADC_G2SRACT (VADC_G2_SRACT)


#define VADC_G2_SYNCTR (*(volatile Ifx_VADC_G_SYNCTR*)0xF0020CC0u)




#define VADC_G2SYNCTR (VADC_G2_SYNCTR)


#define VADC_G2_VFR (*(volatile Ifx_VADC_G_VFR*)0xF0020DF8u)




#define VADC_G2VFR (VADC_G2_VFR)


#define VADC_G3_ALIAS (*(volatile Ifx_VADC_G_ALIAS*)0xF00210B0u)




#define VADC_G3ALIAS (VADC_G3_ALIAS)


#define VADC_G3_ARBCFG (*(volatile Ifx_VADC_G_ARBCFG*)0xF0021080u)




#define VADC_G3ARBCFG (VADC_G3_ARBCFG)


#define VADC_G3_ARBPR (*(volatile Ifx_VADC_G_ARBPR*)0xF0021084u)




#define VADC_G3ARBPR (VADC_G3_ARBPR)


#define VADC_G3_ASCTRL (*(volatile Ifx_VADC_G_ASCTRL*)0xF0021120u)




#define VADC_G3ASCTRL (VADC_G3_ASCTRL)


#define VADC_G3_ASMR (*(volatile Ifx_VADC_G_ASMR*)0xF0021124u)




#define VADC_G3ASMR (VADC_G3_ASMR)


#define VADC_G3_ASPND (*(volatile Ifx_VADC_G_ASPND*)0xF002112Cu)




#define VADC_G3ASPND (VADC_G3_ASPND)


#define VADC_G3_ASSEL (*(volatile Ifx_VADC_G_ASSEL*)0xF0021128u)




#define VADC_G3ASSEL (VADC_G3_ASSEL)


#define VADC_G3_BFL (*(volatile Ifx_VADC_G_BFL*)0xF00210C8u)




#define VADC_G3BFL (VADC_G3_BFL)


#define VADC_G3_BFLC (*(volatile Ifx_VADC_G_BFLC*)0xF00210D0u)




#define VADC_G3BFLC (VADC_G3_BFLC)


#define VADC_G3_BFLNP (*(volatile Ifx_VADC_G_BFLNP*)0xF00210D4u)




#define VADC_G3BFLNP (VADC_G3_BFLNP)


#define VADC_G3_BFLS (*(volatile Ifx_VADC_G_BFLS*)0xF00210CCu)




#define VADC_G3BFLS (VADC_G3_BFLS)


#define VADC_G3_BOUND (*(volatile Ifx_VADC_G_BOUND*)0xF00210B8u)




#define VADC_G3BOUND (VADC_G3_BOUND)


#define VADC_G3_CEFCLR (*(volatile Ifx_VADC_G_CEFCLR*)0xF0021190u)




#define VADC_G3CEFCLR (VADC_G3_CEFCLR)


#define VADC_G3_CEFLAG (*(volatile Ifx_VADC_G_CEFLAG*)0xF0021180u)




#define VADC_G3CEFLAG (VADC_G3_CEFLAG)


#define VADC_G3_CEVNP0 (*(volatile Ifx_VADC_G_CEVNP0*)0xF00211A0u)




#define VADC_G3CEVNP0 (VADC_G3_CEVNP0)


#define VADC_G3_CHASS (*(volatile Ifx_VADC_G_CHASS*)0xF0021088u)




#define VADC_G3CHASS (VADC_G3_CHASS)


#define VADC_G3_CHCTR0 (*(volatile Ifx_VADC_G_CHCTR*)0xF0021200u)




#define VADC_G3CHCTR0 (VADC_G3_CHCTR0)


#define VADC_G3_CHCTR1 (*(volatile Ifx_VADC_G_CHCTR*)0xF0021204u)




#define VADC_G3CHCTR1 (VADC_G3_CHCTR1)


#define VADC_G3_CHCTR2 (*(volatile Ifx_VADC_G_CHCTR*)0xF0021208u)




#define VADC_G3CHCTR2 (VADC_G3_CHCTR2)


#define VADC_G3_CHCTR3 (*(volatile Ifx_VADC_G_CHCTR*)0xF002120Cu)




#define VADC_G3CHCTR3 (VADC_G3_CHCTR3)


#define VADC_G3_CHCTR4 (*(volatile Ifx_VADC_G_CHCTR*)0xF0021210u)




#define VADC_G3CHCTR4 (VADC_G3_CHCTR4)


#define VADC_G3_CHCTR5 (*(volatile Ifx_VADC_G_CHCTR*)0xF0021214u)




#define VADC_G3CHCTR5 (VADC_G3_CHCTR5)


#define VADC_G3_CHCTR6 (*(volatile Ifx_VADC_G_CHCTR*)0xF0021218u)




#define VADC_G3CHCTR6 (VADC_G3_CHCTR6)


#define VADC_G3_CHCTR7 (*(volatile Ifx_VADC_G_CHCTR*)0xF002121Cu)




#define VADC_G3CHCTR7 (VADC_G3_CHCTR7)


#define VADC_G3_EMUXCTR (*(volatile Ifx_VADC_G_EMUXCTR*)0xF00211F0u)




#define VADC_G3EMUXCTR (VADC_G3_EMUXCTR)


#define VADC_G3_ICLASS0 (*(volatile Ifx_VADC_ICLASS*)0xF00210A0u)




#define VADC_G3ICLASS0 (VADC_G3_ICLASS0)


#define VADC_G3_ICLASS1 (*(volatile Ifx_VADC_ICLASS*)0xF00210A4u)




#define VADC_G3ICLASS1 (VADC_G3_ICLASS1)


#define VADC_G3_Q0R0 (*(volatile Ifx_VADC_G_Q0R0*)0xF002110Cu)




#define VADC_G3Q0R0 (VADC_G3_Q0R0)


#define VADC_G3_QBUR0 (*(volatile Ifx_VADC_G_QBUR0*)0xF0021110u)




#define VADC_G3QBUR0 (VADC_G3_QBUR0)


#define VADC_G3_QCTRL0 (*(volatile Ifx_VADC_G_QCTRL0*)0xF0021100u)




#define VADC_G3QCTRL0 (VADC_G3_QCTRL0)


#define VADC_G3_QINR0 (*(volatile Ifx_VADC_G_QINR0*)0xF0021110u)




#define VADC_G3QINR0 (VADC_G3_QINR0)


#define VADC_G3_QMR0 (*(volatile Ifx_VADC_G_QMR0*)0xF0021104u)




#define VADC_G3QMR0 (VADC_G3_QMR0)


#define VADC_G3_QSR0 (*(volatile Ifx_VADC_G_QSR0*)0xF0021108u)




#define VADC_G3QSR0 (VADC_G3_QSR0)


#define VADC_G3_RCR0 (*(volatile Ifx_VADC_G_RCR*)0xF0021280u)




#define VADC_G3RCR0 (VADC_G3_RCR0)


#define VADC_G3_RCR1 (*(volatile Ifx_VADC_G_RCR*)0xF0021284u)




#define VADC_G3RCR1 (VADC_G3_RCR1)


#define VADC_G3_RCR10 (*(volatile Ifx_VADC_G_RCR*)0xF00212A8u)




#define VADC_G3RCR10 (VADC_G3_RCR10)


#define VADC_G3_RCR11 (*(volatile Ifx_VADC_G_RCR*)0xF00212ACu)




#define VADC_G3RCR11 (VADC_G3_RCR11)


#define VADC_G3_RCR12 (*(volatile Ifx_VADC_G_RCR*)0xF00212B0u)




#define VADC_G3RCR12 (VADC_G3_RCR12)


#define VADC_G3_RCR13 (*(volatile Ifx_VADC_G_RCR*)0xF00212B4u)




#define VADC_G3RCR13 (VADC_G3_RCR13)


#define VADC_G3_RCR14 (*(volatile Ifx_VADC_G_RCR*)0xF00212B8u)




#define VADC_G3RCR14 (VADC_G3_RCR14)


#define VADC_G3_RCR15 (*(volatile Ifx_VADC_G_RCR*)0xF00212BCu)




#define VADC_G3RCR15 (VADC_G3_RCR15)


#define VADC_G3_RCR2 (*(volatile Ifx_VADC_G_RCR*)0xF0021288u)




#define VADC_G3RCR2 (VADC_G3_RCR2)


#define VADC_G3_RCR3 (*(volatile Ifx_VADC_G_RCR*)0xF002128Cu)




#define VADC_G3RCR3 (VADC_G3_RCR3)


#define VADC_G3_RCR4 (*(volatile Ifx_VADC_G_RCR*)0xF0021290u)




#define VADC_G3RCR4 (VADC_G3_RCR4)


#define VADC_G3_RCR5 (*(volatile Ifx_VADC_G_RCR*)0xF0021294u)




#define VADC_G3RCR5 (VADC_G3_RCR5)


#define VADC_G3_RCR6 (*(volatile Ifx_VADC_G_RCR*)0xF0021298u)




#define VADC_G3RCR6 (VADC_G3_RCR6)


#define VADC_G3_RCR7 (*(volatile Ifx_VADC_G_RCR*)0xF002129Cu)




#define VADC_G3RCR7 (VADC_G3_RCR7)


#define VADC_G3_RCR8 (*(volatile Ifx_VADC_G_RCR*)0xF00212A0u)




#define VADC_G3RCR8 (VADC_G3_RCR8)


#define VADC_G3_RCR9 (*(volatile Ifx_VADC_G_RCR*)0xF00212A4u)




#define VADC_G3RCR9 (VADC_G3_RCR9)


#define VADC_G3_REFCLR (*(volatile Ifx_VADC_G_REFCLR*)0xF0021194u)




#define VADC_G3REFCLR (VADC_G3_REFCLR)


#define VADC_G3_REFLAG (*(volatile Ifx_VADC_G_REFLAG*)0xF0021184u)




#define VADC_G3REFLAG (VADC_G3_REFLAG)


#define VADC_G3_RES0 (*(volatile Ifx_VADC_G_RES*)0xF0021300u)




#define VADC_G3RES0 (VADC_G3_RES0)


#define VADC_G3_RES1 (*(volatile Ifx_VADC_G_RES*)0xF0021304u)




#define VADC_G3RES1 (VADC_G3_RES1)


#define VADC_G3_RES10 (*(volatile Ifx_VADC_G_RES*)0xF0021328u)




#define VADC_G3RES10 (VADC_G3_RES10)


#define VADC_G3_RES11 (*(volatile Ifx_VADC_G_RES*)0xF002132Cu)




#define VADC_G3RES11 (VADC_G3_RES11)


#define VADC_G3_RES12 (*(volatile Ifx_VADC_G_RES*)0xF0021330u)




#define VADC_G3RES12 (VADC_G3_RES12)


#define VADC_G3_RES13 (*(volatile Ifx_VADC_G_RES*)0xF0021334u)




#define VADC_G3RES13 (VADC_G3_RES13)


#define VADC_G3_RES14 (*(volatile Ifx_VADC_G_RES*)0xF0021338u)




#define VADC_G3RES14 (VADC_G3_RES14)


#define VADC_G3_RES15 (*(volatile Ifx_VADC_G_RES*)0xF002133Cu)




#define VADC_G3RES15 (VADC_G3_RES15)


#define VADC_G3_RES2 (*(volatile Ifx_VADC_G_RES*)0xF0021308u)




#define VADC_G3RES2 (VADC_G3_RES2)


#define VADC_G3_RES3 (*(volatile Ifx_VADC_G_RES*)0xF002130Cu)




#define VADC_G3RES3 (VADC_G3_RES3)


#define VADC_G3_RES4 (*(volatile Ifx_VADC_G_RES*)0xF0021310u)




#define VADC_G3RES4 (VADC_G3_RES4)


#define VADC_G3_RES5 (*(volatile Ifx_VADC_G_RES*)0xF0021314u)




#define VADC_G3RES5 (VADC_G3_RES5)


#define VADC_G3_RES6 (*(volatile Ifx_VADC_G_RES*)0xF0021318u)




#define VADC_G3RES6 (VADC_G3_RES6)


#define VADC_G3_RES7 (*(volatile Ifx_VADC_G_RES*)0xF002131Cu)




#define VADC_G3RES7 (VADC_G3_RES7)


#define VADC_G3_RES8 (*(volatile Ifx_VADC_G_RES*)0xF0021320u)




#define VADC_G3RES8 (VADC_G3_RES8)


#define VADC_G3_RES9 (*(volatile Ifx_VADC_G_RES*)0xF0021324u)




#define VADC_G3RES9 (VADC_G3_RES9)


#define VADC_G3_RESD0 (*(volatile Ifx_VADC_G_RESD*)0xF0021380u)




#define VADC_G3RESD0 (VADC_G3_RESD0)


#define VADC_G3_RESD1 (*(volatile Ifx_VADC_G_RESD*)0xF0021384u)




#define VADC_G3RESD1 (VADC_G3_RESD1)


#define VADC_G3_RESD10 (*(volatile Ifx_VADC_G_RESD*)0xF00213A8u)




#define VADC_G3RESD10 (VADC_G3_RESD10)


#define VADC_G3_RESD11 (*(volatile Ifx_VADC_G_RESD*)0xF00213ACu)




#define VADC_G3RESD11 (VADC_G3_RESD11)


#define VADC_G3_RESD12 (*(volatile Ifx_VADC_G_RESD*)0xF00213B0u)




#define VADC_G3RESD12 (VADC_G3_RESD12)


#define VADC_G3_RESD13 (*(volatile Ifx_VADC_G_RESD*)0xF00213B4u)




#define VADC_G3RESD13 (VADC_G3_RESD13)


#define VADC_G3_RESD14 (*(volatile Ifx_VADC_G_RESD*)0xF00213B8u)




#define VADC_G3RESD14 (VADC_G3_RESD14)


#define VADC_G3_RESD15 (*(volatile Ifx_VADC_G_RESD*)0xF00213BCu)




#define VADC_G3RESD15 (VADC_G3_RESD15)


#define VADC_G3_RESD2 (*(volatile Ifx_VADC_G_RESD*)0xF0021388u)




#define VADC_G3RESD2 (VADC_G3_RESD2)


#define VADC_G3_RESD3 (*(volatile Ifx_VADC_G_RESD*)0xF002138Cu)




#define VADC_G3RESD3 (VADC_G3_RESD3)


#define VADC_G3_RESD4 (*(volatile Ifx_VADC_G_RESD*)0xF0021390u)




#define VADC_G3RESD4 (VADC_G3_RESD4)


#define VADC_G3_RESD5 (*(volatile Ifx_VADC_G_RESD*)0xF0021394u)




#define VADC_G3RESD5 (VADC_G3_RESD5)


#define VADC_G3_RESD6 (*(volatile Ifx_VADC_G_RESD*)0xF0021398u)




#define VADC_G3RESD6 (VADC_G3_RESD6)


#define VADC_G3_RESD7 (*(volatile Ifx_VADC_G_RESD*)0xF002139Cu)




#define VADC_G3RESD7 (VADC_G3_RESD7)


#define VADC_G3_RESD8 (*(volatile Ifx_VADC_G_RESD*)0xF00213A0u)




#define VADC_G3RESD8 (VADC_G3_RESD8)


#define VADC_G3_RESD9 (*(volatile Ifx_VADC_G_RESD*)0xF00213A4u)




#define VADC_G3RESD9 (VADC_G3_RESD9)


#define VADC_G3_REVNP0 (*(volatile Ifx_VADC_G_REVNP0*)0xF00211B0u)




#define VADC_G3REVNP0 (VADC_G3_REVNP0)


#define VADC_G3_REVNP1 (*(volatile Ifx_VADC_G_REVNP1*)0xF00211B4u)




#define VADC_G3REVNP1 (VADC_G3_REVNP1)


#define VADC_G3_RRASS (*(volatile Ifx_VADC_G_RRASS*)0xF002108Cu)




#define VADC_G3RRASS (VADC_G3_RRASS)


#define VADC_G3_SEFCLR (*(volatile Ifx_VADC_G_SEFCLR*)0xF0021198u)




#define VADC_G3SEFCLR (VADC_G3_SEFCLR)


#define VADC_G3_SEFLAG (*(volatile Ifx_VADC_G_SEFLAG*)0xF0021188u)




#define VADC_G3SEFLAG (VADC_G3_SEFLAG)


#define VADC_G3_SEVNP (*(volatile Ifx_VADC_G_SEVNP*)0xF00211C0u)




#define VADC_G3SEVNP (VADC_G3_SEVNP)


#define VADC_G3_SRACT (*(volatile Ifx_VADC_G_SRACT*)0xF00211C8u)




#define VADC_G3SRACT (VADC_G3_SRACT)


#define VADC_G3_SYNCTR (*(volatile Ifx_VADC_G_SYNCTR*)0xF00210C0u)




#define VADC_G3SYNCTR (VADC_G3_SYNCTR)


#define VADC_G3_VFR (*(volatile Ifx_VADC_G_VFR*)0xF00211F8u)




#define VADC_G3VFR (VADC_G3_VFR)


#define VADC_G4_ALIAS (*(volatile Ifx_VADC_G_ALIAS*)0xF00214B0u)




#define VADC_G4ALIAS (VADC_G4_ALIAS)


#define VADC_G4_ARBCFG (*(volatile Ifx_VADC_G_ARBCFG*)0xF0021480u)




#define VADC_G4ARBCFG (VADC_G4_ARBCFG)


#define VADC_G4_ARBPR (*(volatile Ifx_VADC_G_ARBPR*)0xF0021484u)




#define VADC_G4ARBPR (VADC_G4_ARBPR)


#define VADC_G4_ASCTRL (*(volatile Ifx_VADC_G_ASCTRL*)0xF0021520u)




#define VADC_G4ASCTRL (VADC_G4_ASCTRL)


#define VADC_G4_ASMR (*(volatile Ifx_VADC_G_ASMR*)0xF0021524u)




#define VADC_G4ASMR (VADC_G4_ASMR)


#define VADC_G4_ASPND (*(volatile Ifx_VADC_G_ASPND*)0xF002152Cu)




#define VADC_G4ASPND (VADC_G4_ASPND)


#define VADC_G4_ASSEL (*(volatile Ifx_VADC_G_ASSEL*)0xF0021528u)




#define VADC_G4ASSEL (VADC_G4_ASSEL)


#define VADC_G4_BFL (*(volatile Ifx_VADC_G_BFL*)0xF00214C8u)




#define VADC_G4BFL (VADC_G4_BFL)


#define VADC_G4_BFLC (*(volatile Ifx_VADC_G_BFLC*)0xF00214D0u)




#define VADC_G4BFLC (VADC_G4_BFLC)


#define VADC_G4_BFLNP (*(volatile Ifx_VADC_G_BFLNP*)0xF00214D4u)




#define VADC_G4BFLNP (VADC_G4_BFLNP)


#define VADC_G4_BFLS (*(volatile Ifx_VADC_G_BFLS*)0xF00214CCu)




#define VADC_G4BFLS (VADC_G4_BFLS)


#define VADC_G4_BOUND (*(volatile Ifx_VADC_G_BOUND*)0xF00214B8u)




#define VADC_G4BOUND (VADC_G4_BOUND)


#define VADC_G4_CEFCLR (*(volatile Ifx_VADC_G_CEFCLR*)0xF0021590u)




#define VADC_G4CEFCLR (VADC_G4_CEFCLR)


#define VADC_G4_CEFLAG (*(volatile Ifx_VADC_G_CEFLAG*)0xF0021580u)




#define VADC_G4CEFLAG (VADC_G4_CEFLAG)


#define VADC_G4_CEVNP0 (*(volatile Ifx_VADC_G_CEVNP0*)0xF00215A0u)




#define VADC_G4CEVNP0 (VADC_G4_CEVNP0)


#define VADC_G4_CHASS (*(volatile Ifx_VADC_G_CHASS*)0xF0021488u)




#define VADC_G4CHASS (VADC_G4_CHASS)


#define VADC_G4_CHCTR0 (*(volatile Ifx_VADC_G_CHCTR*)0xF0021600u)




#define VADC_G4CHCTR0 (VADC_G4_CHCTR0)


#define VADC_G4_CHCTR1 (*(volatile Ifx_VADC_G_CHCTR*)0xF0021604u)




#define VADC_G4CHCTR1 (VADC_G4_CHCTR1)


#define VADC_G4_CHCTR2 (*(volatile Ifx_VADC_G_CHCTR*)0xF0021608u)




#define VADC_G4CHCTR2 (VADC_G4_CHCTR2)


#define VADC_G4_CHCTR3 (*(volatile Ifx_VADC_G_CHCTR*)0xF002160Cu)




#define VADC_G4CHCTR3 (VADC_G4_CHCTR3)


#define VADC_G4_CHCTR4 (*(volatile Ifx_VADC_G_CHCTR*)0xF0021610u)




#define VADC_G4CHCTR4 (VADC_G4_CHCTR4)


#define VADC_G4_CHCTR5 (*(volatile Ifx_VADC_G_CHCTR*)0xF0021614u)




#define VADC_G4CHCTR5 (VADC_G4_CHCTR5)


#define VADC_G4_CHCTR6 (*(volatile Ifx_VADC_G_CHCTR*)0xF0021618u)




#define VADC_G4CHCTR6 (VADC_G4_CHCTR6)


#define VADC_G4_CHCTR7 (*(volatile Ifx_VADC_G_CHCTR*)0xF002161Cu)




#define VADC_G4CHCTR7 (VADC_G4_CHCTR7)


#define VADC_G4_EMUXCTR (*(volatile Ifx_VADC_G_EMUXCTR*)0xF00215F0u)




#define VADC_G4EMUXCTR (VADC_G4_EMUXCTR)


#define VADC_G4_ICLASS0 (*(volatile Ifx_VADC_ICLASS*)0xF00214A0u)




#define VADC_G4ICLASS0 (VADC_G4_ICLASS0)


#define VADC_G4_ICLASS1 (*(volatile Ifx_VADC_ICLASS*)0xF00214A4u)




#define VADC_G4ICLASS1 (VADC_G4_ICLASS1)


#define VADC_G4_Q0R0 (*(volatile Ifx_VADC_G_Q0R0*)0xF002150Cu)




#define VADC_G4Q0R0 (VADC_G4_Q0R0)


#define VADC_G4_QBUR0 (*(volatile Ifx_VADC_G_QBUR0*)0xF0021510u)




#define VADC_G4QBUR0 (VADC_G4_QBUR0)


#define VADC_G4_QCTRL0 (*(volatile Ifx_VADC_G_QCTRL0*)0xF0021500u)




#define VADC_G4QCTRL0 (VADC_G4_QCTRL0)


#define VADC_G4_QINR0 (*(volatile Ifx_VADC_G_QINR0*)0xF0021510u)




#define VADC_G4QINR0 (VADC_G4_QINR0)


#define VADC_G4_QMR0 (*(volatile Ifx_VADC_G_QMR0*)0xF0021504u)




#define VADC_G4QMR0 (VADC_G4_QMR0)


#define VADC_G4_QSR0 (*(volatile Ifx_VADC_G_QSR0*)0xF0021508u)




#define VADC_G4QSR0 (VADC_G4_QSR0)


#define VADC_G4_RCR0 (*(volatile Ifx_VADC_G_RCR*)0xF0021680u)




#define VADC_G4RCR0 (VADC_G4_RCR0)


#define VADC_G4_RCR1 (*(volatile Ifx_VADC_G_RCR*)0xF0021684u)




#define VADC_G4RCR1 (VADC_G4_RCR1)


#define VADC_G4_RCR10 (*(volatile Ifx_VADC_G_RCR*)0xF00216A8u)




#define VADC_G4RCR10 (VADC_G4_RCR10)


#define VADC_G4_RCR11 (*(volatile Ifx_VADC_G_RCR*)0xF00216ACu)




#define VADC_G4RCR11 (VADC_G4_RCR11)


#define VADC_G4_RCR12 (*(volatile Ifx_VADC_G_RCR*)0xF00216B0u)




#define VADC_G4RCR12 (VADC_G4_RCR12)


#define VADC_G4_RCR13 (*(volatile Ifx_VADC_G_RCR*)0xF00216B4u)




#define VADC_G4RCR13 (VADC_G4_RCR13)


#define VADC_G4_RCR14 (*(volatile Ifx_VADC_G_RCR*)0xF00216B8u)




#define VADC_G4RCR14 (VADC_G4_RCR14)


#define VADC_G4_RCR15 (*(volatile Ifx_VADC_G_RCR*)0xF00216BCu)




#define VADC_G4RCR15 (VADC_G4_RCR15)


#define VADC_G4_RCR2 (*(volatile Ifx_VADC_G_RCR*)0xF0021688u)




#define VADC_G4RCR2 (VADC_G4_RCR2)


#define VADC_G4_RCR3 (*(volatile Ifx_VADC_G_RCR*)0xF002168Cu)




#define VADC_G4RCR3 (VADC_G4_RCR3)


#define VADC_G4_RCR4 (*(volatile Ifx_VADC_G_RCR*)0xF0021690u)




#define VADC_G4RCR4 (VADC_G4_RCR4)


#define VADC_G4_RCR5 (*(volatile Ifx_VADC_G_RCR*)0xF0021694u)




#define VADC_G4RCR5 (VADC_G4_RCR5)


#define VADC_G4_RCR6 (*(volatile Ifx_VADC_G_RCR*)0xF0021698u)




#define VADC_G4RCR6 (VADC_G4_RCR6)


#define VADC_G4_RCR7 (*(volatile Ifx_VADC_G_RCR*)0xF002169Cu)




#define VADC_G4RCR7 (VADC_G4_RCR7)


#define VADC_G4_RCR8 (*(volatile Ifx_VADC_G_RCR*)0xF00216A0u)




#define VADC_G4RCR8 (VADC_G4_RCR8)


#define VADC_G4_RCR9 (*(volatile Ifx_VADC_G_RCR*)0xF00216A4u)




#define VADC_G4RCR9 (VADC_G4_RCR9)


#define VADC_G4_REFCLR (*(volatile Ifx_VADC_G_REFCLR*)0xF0021594u)




#define VADC_G4REFCLR (VADC_G4_REFCLR)


#define VADC_G4_REFLAG (*(volatile Ifx_VADC_G_REFLAG*)0xF0021584u)




#define VADC_G4REFLAG (VADC_G4_REFLAG)


#define VADC_G4_RES0 (*(volatile Ifx_VADC_G_RES*)0xF0021700u)




#define VADC_G4RES0 (VADC_G4_RES0)


#define VADC_G4_RES1 (*(volatile Ifx_VADC_G_RES*)0xF0021704u)




#define VADC_G4RES1 (VADC_G4_RES1)


#define VADC_G4_RES10 (*(volatile Ifx_VADC_G_RES*)0xF0021728u)




#define VADC_G4RES10 (VADC_G4_RES10)


#define VADC_G4_RES11 (*(volatile Ifx_VADC_G_RES*)0xF002172Cu)




#define VADC_G4RES11 (VADC_G4_RES11)


#define VADC_G4_RES12 (*(volatile Ifx_VADC_G_RES*)0xF0021730u)




#define VADC_G4RES12 (VADC_G4_RES12)


#define VADC_G4_RES13 (*(volatile Ifx_VADC_G_RES*)0xF0021734u)




#define VADC_G4RES13 (VADC_G4_RES13)


#define VADC_G4_RES14 (*(volatile Ifx_VADC_G_RES*)0xF0021738u)




#define VADC_G4RES14 (VADC_G4_RES14)


#define VADC_G4_RES15 (*(volatile Ifx_VADC_G_RES*)0xF002173Cu)




#define VADC_G4RES15 (VADC_G4_RES15)


#define VADC_G4_RES2 (*(volatile Ifx_VADC_G_RES*)0xF0021708u)




#define VADC_G4RES2 (VADC_G4_RES2)


#define VADC_G4_RES3 (*(volatile Ifx_VADC_G_RES*)0xF002170Cu)




#define VADC_G4RES3 (VADC_G4_RES3)


#define VADC_G4_RES4 (*(volatile Ifx_VADC_G_RES*)0xF0021710u)




#define VADC_G4RES4 (VADC_G4_RES4)


#define VADC_G4_RES5 (*(volatile Ifx_VADC_G_RES*)0xF0021714u)




#define VADC_G4RES5 (VADC_G4_RES5)


#define VADC_G4_RES6 (*(volatile Ifx_VADC_G_RES*)0xF0021718u)




#define VADC_G4RES6 (VADC_G4_RES6)


#define VADC_G4_RES7 (*(volatile Ifx_VADC_G_RES*)0xF002171Cu)




#define VADC_G4RES7 (VADC_G4_RES7)


#define VADC_G4_RES8 (*(volatile Ifx_VADC_G_RES*)0xF0021720u)




#define VADC_G4RES8 (VADC_G4_RES8)


#define VADC_G4_RES9 (*(volatile Ifx_VADC_G_RES*)0xF0021724u)




#define VADC_G4RES9 (VADC_G4_RES9)


#define VADC_G4_RESD0 (*(volatile Ifx_VADC_G_RESD*)0xF0021780u)




#define VADC_G4RESD0 (VADC_G4_RESD0)


#define VADC_G4_RESD1 (*(volatile Ifx_VADC_G_RESD*)0xF0021784u)




#define VADC_G4RESD1 (VADC_G4_RESD1)


#define VADC_G4_RESD10 (*(volatile Ifx_VADC_G_RESD*)0xF00217A8u)




#define VADC_G4RESD10 (VADC_G4_RESD10)


#define VADC_G4_RESD11 (*(volatile Ifx_VADC_G_RESD*)0xF00217ACu)




#define VADC_G4RESD11 (VADC_G4_RESD11)


#define VADC_G4_RESD12 (*(volatile Ifx_VADC_G_RESD*)0xF00217B0u)




#define VADC_G4RESD12 (VADC_G4_RESD12)


#define VADC_G4_RESD13 (*(volatile Ifx_VADC_G_RESD*)0xF00217B4u)




#define VADC_G4RESD13 (VADC_G4_RESD13)


#define VADC_G4_RESD14 (*(volatile Ifx_VADC_G_RESD*)0xF00217B8u)




#define VADC_G4RESD14 (VADC_G4_RESD14)


#define VADC_G4_RESD15 (*(volatile Ifx_VADC_G_RESD*)0xF00217BCu)




#define VADC_G4RESD15 (VADC_G4_RESD15)


#define VADC_G4_RESD2 (*(volatile Ifx_VADC_G_RESD*)0xF0021788u)




#define VADC_G4RESD2 (VADC_G4_RESD2)


#define VADC_G4_RESD3 (*(volatile Ifx_VADC_G_RESD*)0xF002178Cu)




#define VADC_G4RESD3 (VADC_G4_RESD3)


#define VADC_G4_RESD4 (*(volatile Ifx_VADC_G_RESD*)0xF0021790u)




#define VADC_G4RESD4 (VADC_G4_RESD4)


#define VADC_G4_RESD5 (*(volatile Ifx_VADC_G_RESD*)0xF0021794u)




#define VADC_G4RESD5 (VADC_G4_RESD5)


#define VADC_G4_RESD6 (*(volatile Ifx_VADC_G_RESD*)0xF0021798u)




#define VADC_G4RESD6 (VADC_G4_RESD6)


#define VADC_G4_RESD7 (*(volatile Ifx_VADC_G_RESD*)0xF002179Cu)




#define VADC_G4RESD7 (VADC_G4_RESD7)


#define VADC_G4_RESD8 (*(volatile Ifx_VADC_G_RESD*)0xF00217A0u)




#define VADC_G4RESD8 (VADC_G4_RESD8)


#define VADC_G4_RESD9 (*(volatile Ifx_VADC_G_RESD*)0xF00217A4u)




#define VADC_G4RESD9 (VADC_G4_RESD9)


#define VADC_G4_REVNP0 (*(volatile Ifx_VADC_G_REVNP0*)0xF00215B0u)




#define VADC_G4REVNP0 (VADC_G4_REVNP0)


#define VADC_G4_REVNP1 (*(volatile Ifx_VADC_G_REVNP1*)0xF00215B4u)




#define VADC_G4REVNP1 (VADC_G4_REVNP1)


#define VADC_G4_RRASS (*(volatile Ifx_VADC_G_RRASS*)0xF002148Cu)




#define VADC_G4RRASS (VADC_G4_RRASS)


#define VADC_G4_SEFCLR (*(volatile Ifx_VADC_G_SEFCLR*)0xF0021598u)




#define VADC_G4SEFCLR (VADC_G4_SEFCLR)


#define VADC_G4_SEFLAG (*(volatile Ifx_VADC_G_SEFLAG*)0xF0021588u)




#define VADC_G4SEFLAG (VADC_G4_SEFLAG)


#define VADC_G4_SEVNP (*(volatile Ifx_VADC_G_SEVNP*)0xF00215C0u)




#define VADC_G4SEVNP (VADC_G4_SEVNP)


#define VADC_G4_SRACT (*(volatile Ifx_VADC_G_SRACT*)0xF00215C8u)




#define VADC_G4SRACT (VADC_G4_SRACT)


#define VADC_G4_SYNCTR (*(volatile Ifx_VADC_G_SYNCTR*)0xF00214C0u)




#define VADC_G4SYNCTR (VADC_G4_SYNCTR)


#define VADC_G4_VFR (*(volatile Ifx_VADC_G_VFR*)0xF00215F8u)




#define VADC_G4VFR (VADC_G4_VFR)


#define VADC_G5_ALIAS (*(volatile Ifx_VADC_G_ALIAS*)0xF00218B0u)




#define VADC_G5ALIAS (VADC_G5_ALIAS)


#define VADC_G5_ARBCFG (*(volatile Ifx_VADC_G_ARBCFG*)0xF0021880u)




#define VADC_G5ARBCFG (VADC_G5_ARBCFG)


#define VADC_G5_ARBPR (*(volatile Ifx_VADC_G_ARBPR*)0xF0021884u)




#define VADC_G5ARBPR (VADC_G5_ARBPR)


#define VADC_G5_ASCTRL (*(volatile Ifx_VADC_G_ASCTRL*)0xF0021920u)




#define VADC_G5ASCTRL (VADC_G5_ASCTRL)


#define VADC_G5_ASMR (*(volatile Ifx_VADC_G_ASMR*)0xF0021924u)




#define VADC_G5ASMR (VADC_G5_ASMR)


#define VADC_G5_ASPND (*(volatile Ifx_VADC_G_ASPND*)0xF002192Cu)




#define VADC_G5ASPND (VADC_G5_ASPND)


#define VADC_G5_ASSEL (*(volatile Ifx_VADC_G_ASSEL*)0xF0021928u)




#define VADC_G5ASSEL (VADC_G5_ASSEL)


#define VADC_G5_BFL (*(volatile Ifx_VADC_G_BFL*)0xF00218C8u)




#define VADC_G5BFL (VADC_G5_BFL)


#define VADC_G5_BFLC (*(volatile Ifx_VADC_G_BFLC*)0xF00218D0u)




#define VADC_G5BFLC (VADC_G5_BFLC)


#define VADC_G5_BFLNP (*(volatile Ifx_VADC_G_BFLNP*)0xF00218D4u)




#define VADC_G5BFLNP (VADC_G5_BFLNP)


#define VADC_G5_BFLS (*(volatile Ifx_VADC_G_BFLS*)0xF00218CCu)




#define VADC_G5BFLS (VADC_G5_BFLS)


#define VADC_G5_BOUND (*(volatile Ifx_VADC_G_BOUND*)0xF00218B8u)




#define VADC_G5BOUND (VADC_G5_BOUND)


#define VADC_G5_CEFCLR (*(volatile Ifx_VADC_G_CEFCLR*)0xF0021990u)




#define VADC_G5CEFCLR (VADC_G5_CEFCLR)


#define VADC_G5_CEFLAG (*(volatile Ifx_VADC_G_CEFLAG*)0xF0021980u)




#define VADC_G5CEFLAG (VADC_G5_CEFLAG)


#define VADC_G5_CEVNP0 (*(volatile Ifx_VADC_G_CEVNP0*)0xF00219A0u)




#define VADC_G5CEVNP0 (VADC_G5_CEVNP0)


#define VADC_G5_CHASS (*(volatile Ifx_VADC_G_CHASS*)0xF0021888u)




#define VADC_G5CHASS (VADC_G5_CHASS)


#define VADC_G5_CHCTR0 (*(volatile Ifx_VADC_G_CHCTR*)0xF0021A00u)




#define VADC_G5CHCTR0 (VADC_G5_CHCTR0)


#define VADC_G5_CHCTR1 (*(volatile Ifx_VADC_G_CHCTR*)0xF0021A04u)




#define VADC_G5CHCTR1 (VADC_G5_CHCTR1)


#define VADC_G5_CHCTR2 (*(volatile Ifx_VADC_G_CHCTR*)0xF0021A08u)




#define VADC_G5CHCTR2 (VADC_G5_CHCTR2)


#define VADC_G5_CHCTR3 (*(volatile Ifx_VADC_G_CHCTR*)0xF0021A0Cu)




#define VADC_G5CHCTR3 (VADC_G5_CHCTR3)


#define VADC_G5_CHCTR4 (*(volatile Ifx_VADC_G_CHCTR*)0xF0021A10u)




#define VADC_G5CHCTR4 (VADC_G5_CHCTR4)


#define VADC_G5_CHCTR5 (*(volatile Ifx_VADC_G_CHCTR*)0xF0021A14u)




#define VADC_G5CHCTR5 (VADC_G5_CHCTR5)


#define VADC_G5_CHCTR6 (*(volatile Ifx_VADC_G_CHCTR*)0xF0021A18u)




#define VADC_G5CHCTR6 (VADC_G5_CHCTR6)


#define VADC_G5_CHCTR7 (*(volatile Ifx_VADC_G_CHCTR*)0xF0021A1Cu)




#define VADC_G5CHCTR7 (VADC_G5_CHCTR7)


#define VADC_G5_EMUXCTR (*(volatile Ifx_VADC_G_EMUXCTR*)0xF00219F0u)




#define VADC_G5EMUXCTR (VADC_G5_EMUXCTR)


#define VADC_G5_ICLASS0 (*(volatile Ifx_VADC_ICLASS*)0xF00218A0u)




#define VADC_G5ICLASS0 (VADC_G5_ICLASS0)


#define VADC_G5_ICLASS1 (*(volatile Ifx_VADC_ICLASS*)0xF00218A4u)




#define VADC_G5ICLASS1 (VADC_G5_ICLASS1)


#define VADC_G5_Q0R0 (*(volatile Ifx_VADC_G_Q0R0*)0xF002190Cu)




#define VADC_G5Q0R0 (VADC_G5_Q0R0)


#define VADC_G5_QBUR0 (*(volatile Ifx_VADC_G_QBUR0*)0xF0021910u)




#define VADC_G5QBUR0 (VADC_G5_QBUR0)


#define VADC_G5_QCTRL0 (*(volatile Ifx_VADC_G_QCTRL0*)0xF0021900u)




#define VADC_G5QCTRL0 (VADC_G5_QCTRL0)


#define VADC_G5_QINR0 (*(volatile Ifx_VADC_G_QINR0*)0xF0021910u)




#define VADC_G5QINR0 (VADC_G5_QINR0)


#define VADC_G5_QMR0 (*(volatile Ifx_VADC_G_QMR0*)0xF0021904u)




#define VADC_G5QMR0 (VADC_G5_QMR0)


#define VADC_G5_QSR0 (*(volatile Ifx_VADC_G_QSR0*)0xF0021908u)




#define VADC_G5QSR0 (VADC_G5_QSR0)


#define VADC_G5_RCR0 (*(volatile Ifx_VADC_G_RCR*)0xF0021A80u)




#define VADC_G5RCR0 (VADC_G5_RCR0)


#define VADC_G5_RCR1 (*(volatile Ifx_VADC_G_RCR*)0xF0021A84u)




#define VADC_G5RCR1 (VADC_G5_RCR1)


#define VADC_G5_RCR10 (*(volatile Ifx_VADC_G_RCR*)0xF0021AA8u)




#define VADC_G5RCR10 (VADC_G5_RCR10)


#define VADC_G5_RCR11 (*(volatile Ifx_VADC_G_RCR*)0xF0021AACu)




#define VADC_G5RCR11 (VADC_G5_RCR11)


#define VADC_G5_RCR12 (*(volatile Ifx_VADC_G_RCR*)0xF0021AB0u)




#define VADC_G5RCR12 (VADC_G5_RCR12)


#define VADC_G5_RCR13 (*(volatile Ifx_VADC_G_RCR*)0xF0021AB4u)




#define VADC_G5RCR13 (VADC_G5_RCR13)


#define VADC_G5_RCR14 (*(volatile Ifx_VADC_G_RCR*)0xF0021AB8u)




#define VADC_G5RCR14 (VADC_G5_RCR14)


#define VADC_G5_RCR15 (*(volatile Ifx_VADC_G_RCR*)0xF0021ABCu)




#define VADC_G5RCR15 (VADC_G5_RCR15)


#define VADC_G5_RCR2 (*(volatile Ifx_VADC_G_RCR*)0xF0021A88u)




#define VADC_G5RCR2 (VADC_G5_RCR2)


#define VADC_G5_RCR3 (*(volatile Ifx_VADC_G_RCR*)0xF0021A8Cu)




#define VADC_G5RCR3 (VADC_G5_RCR3)


#define VADC_G5_RCR4 (*(volatile Ifx_VADC_G_RCR*)0xF0021A90u)




#define VADC_G5RCR4 (VADC_G5_RCR4)


#define VADC_G5_RCR5 (*(volatile Ifx_VADC_G_RCR*)0xF0021A94u)




#define VADC_G5RCR5 (VADC_G5_RCR5)


#define VADC_G5_RCR6 (*(volatile Ifx_VADC_G_RCR*)0xF0021A98u)




#define VADC_G5RCR6 (VADC_G5_RCR6)


#define VADC_G5_RCR7 (*(volatile Ifx_VADC_G_RCR*)0xF0021A9Cu)




#define VADC_G5RCR7 (VADC_G5_RCR7)


#define VADC_G5_RCR8 (*(volatile Ifx_VADC_G_RCR*)0xF0021AA0u)




#define VADC_G5RCR8 (VADC_G5_RCR8)


#define VADC_G5_RCR9 (*(volatile Ifx_VADC_G_RCR*)0xF0021AA4u)




#define VADC_G5RCR9 (VADC_G5_RCR9)


#define VADC_G5_REFCLR (*(volatile Ifx_VADC_G_REFCLR*)0xF0021994u)




#define VADC_G5REFCLR (VADC_G5_REFCLR)


#define VADC_G5_REFLAG (*(volatile Ifx_VADC_G_REFLAG*)0xF0021984u)




#define VADC_G5REFLAG (VADC_G5_REFLAG)


#define VADC_G5_RES0 (*(volatile Ifx_VADC_G_RES*)0xF0021B00u)




#define VADC_G5RES0 (VADC_G5_RES0)


#define VADC_G5_RES1 (*(volatile Ifx_VADC_G_RES*)0xF0021B04u)




#define VADC_G5RES1 (VADC_G5_RES1)


#define VADC_G5_RES10 (*(volatile Ifx_VADC_G_RES*)0xF0021B28u)




#define VADC_G5RES10 (VADC_G5_RES10)


#define VADC_G5_RES11 (*(volatile Ifx_VADC_G_RES*)0xF0021B2Cu)




#define VADC_G5RES11 (VADC_G5_RES11)


#define VADC_G5_RES12 (*(volatile Ifx_VADC_G_RES*)0xF0021B30u)




#define VADC_G5RES12 (VADC_G5_RES12)


#define VADC_G5_RES13 (*(volatile Ifx_VADC_G_RES*)0xF0021B34u)




#define VADC_G5RES13 (VADC_G5_RES13)


#define VADC_G5_RES14 (*(volatile Ifx_VADC_G_RES*)0xF0021B38u)




#define VADC_G5RES14 (VADC_G5_RES14)


#define VADC_G5_RES15 (*(volatile Ifx_VADC_G_RES*)0xF0021B3Cu)




#define VADC_G5RES15 (VADC_G5_RES15)


#define VADC_G5_RES2 (*(volatile Ifx_VADC_G_RES*)0xF0021B08u)




#define VADC_G5RES2 (VADC_G5_RES2)


#define VADC_G5_RES3 (*(volatile Ifx_VADC_G_RES*)0xF0021B0Cu)




#define VADC_G5RES3 (VADC_G5_RES3)


#define VADC_G5_RES4 (*(volatile Ifx_VADC_G_RES*)0xF0021B10u)




#define VADC_G5RES4 (VADC_G5_RES4)


#define VADC_G5_RES5 (*(volatile Ifx_VADC_G_RES*)0xF0021B14u)




#define VADC_G5RES5 (VADC_G5_RES5)


#define VADC_G5_RES6 (*(volatile Ifx_VADC_G_RES*)0xF0021B18u)




#define VADC_G5RES6 (VADC_G5_RES6)


#define VADC_G5_RES7 (*(volatile Ifx_VADC_G_RES*)0xF0021B1Cu)




#define VADC_G5RES7 (VADC_G5_RES7)


#define VADC_G5_RES8 (*(volatile Ifx_VADC_G_RES*)0xF0021B20u)




#define VADC_G5RES8 (VADC_G5_RES8)


#define VADC_G5_RES9 (*(volatile Ifx_VADC_G_RES*)0xF0021B24u)




#define VADC_G5RES9 (VADC_G5_RES9)


#define VADC_G5_RESD0 (*(volatile Ifx_VADC_G_RESD*)0xF0021B80u)




#define VADC_G5RESD0 (VADC_G5_RESD0)


#define VADC_G5_RESD1 (*(volatile Ifx_VADC_G_RESD*)0xF0021B84u)




#define VADC_G5RESD1 (VADC_G5_RESD1)


#define VADC_G5_RESD10 (*(volatile Ifx_VADC_G_RESD*)0xF0021BA8u)




#define VADC_G5RESD10 (VADC_G5_RESD10)


#define VADC_G5_RESD11 (*(volatile Ifx_VADC_G_RESD*)0xF0021BACu)




#define VADC_G5RESD11 (VADC_G5_RESD11)


#define VADC_G5_RESD12 (*(volatile Ifx_VADC_G_RESD*)0xF0021BB0u)




#define VADC_G5RESD12 (VADC_G5_RESD12)


#define VADC_G5_RESD13 (*(volatile Ifx_VADC_G_RESD*)0xF0021BB4u)




#define VADC_G5RESD13 (VADC_G5_RESD13)


#define VADC_G5_RESD14 (*(volatile Ifx_VADC_G_RESD*)0xF0021BB8u)




#define VADC_G5RESD14 (VADC_G5_RESD14)


#define VADC_G5_RESD15 (*(volatile Ifx_VADC_G_RESD*)0xF0021BBCu)




#define VADC_G5RESD15 (VADC_G5_RESD15)


#define VADC_G5_RESD2 (*(volatile Ifx_VADC_G_RESD*)0xF0021B88u)




#define VADC_G5RESD2 (VADC_G5_RESD2)


#define VADC_G5_RESD3 (*(volatile Ifx_VADC_G_RESD*)0xF0021B8Cu)




#define VADC_G5RESD3 (VADC_G5_RESD3)


#define VADC_G5_RESD4 (*(volatile Ifx_VADC_G_RESD*)0xF0021B90u)




#define VADC_G5RESD4 (VADC_G5_RESD4)


#define VADC_G5_RESD5 (*(volatile Ifx_VADC_G_RESD*)0xF0021B94u)




#define VADC_G5RESD5 (VADC_G5_RESD5)


#define VADC_G5_RESD6 (*(volatile Ifx_VADC_G_RESD*)0xF0021B98u)




#define VADC_G5RESD6 (VADC_G5_RESD6)


#define VADC_G5_RESD7 (*(volatile Ifx_VADC_G_RESD*)0xF0021B9Cu)




#define VADC_G5RESD7 (VADC_G5_RESD7)


#define VADC_G5_RESD8 (*(volatile Ifx_VADC_G_RESD*)0xF0021BA0u)




#define VADC_G5RESD8 (VADC_G5_RESD8)


#define VADC_G5_RESD9 (*(volatile Ifx_VADC_G_RESD*)0xF0021BA4u)




#define VADC_G5RESD9 (VADC_G5_RESD9)


#define VADC_G5_REVNP0 (*(volatile Ifx_VADC_G_REVNP0*)0xF00219B0u)




#define VADC_G5REVNP0 (VADC_G5_REVNP0)


#define VADC_G5_REVNP1 (*(volatile Ifx_VADC_G_REVNP1*)0xF00219B4u)




#define VADC_G5REVNP1 (VADC_G5_REVNP1)


#define VADC_G5_RRASS (*(volatile Ifx_VADC_G_RRASS*)0xF002188Cu)




#define VADC_G5RRASS (VADC_G5_RRASS)


#define VADC_G5_SEFCLR (*(volatile Ifx_VADC_G_SEFCLR*)0xF0021998u)




#define VADC_G5SEFCLR (VADC_G5_SEFCLR)


#define VADC_G5_SEFLAG (*(volatile Ifx_VADC_G_SEFLAG*)0xF0021988u)




#define VADC_G5SEFLAG (VADC_G5_SEFLAG)


#define VADC_G5_SEVNP (*(volatile Ifx_VADC_G_SEVNP*)0xF00219C0u)




#define VADC_G5SEVNP (VADC_G5_SEVNP)


#define VADC_G5_SRACT (*(volatile Ifx_VADC_G_SRACT*)0xF00219C8u)




#define VADC_G5SRACT (VADC_G5_SRACT)


#define VADC_G5_SYNCTR (*(volatile Ifx_VADC_G_SYNCTR*)0xF00218C0u)




#define VADC_G5SYNCTR (VADC_G5_SYNCTR)


#define VADC_G5_VFR (*(volatile Ifx_VADC_G_VFR*)0xF00219F8u)




#define VADC_G5VFR (VADC_G5_VFR)


#define VADC_G6_ALIAS (*(volatile Ifx_VADC_G_ALIAS*)0xF0021CB0u)




#define VADC_G6ALIAS (VADC_G6_ALIAS)


#define VADC_G6_ARBCFG (*(volatile Ifx_VADC_G_ARBCFG*)0xF0021C80u)




#define VADC_G6ARBCFG (VADC_G6_ARBCFG)


#define VADC_G6_ARBPR (*(volatile Ifx_VADC_G_ARBPR*)0xF0021C84u)




#define VADC_G6ARBPR (VADC_G6_ARBPR)


#define VADC_G6_ASCTRL (*(volatile Ifx_VADC_G_ASCTRL*)0xF0021D20u)




#define VADC_G6ASCTRL (VADC_G6_ASCTRL)


#define VADC_G6_ASMR (*(volatile Ifx_VADC_G_ASMR*)0xF0021D24u)




#define VADC_G6ASMR (VADC_G6_ASMR)


#define VADC_G6_ASPND (*(volatile Ifx_VADC_G_ASPND*)0xF0021D2Cu)




#define VADC_G6ASPND (VADC_G6_ASPND)


#define VADC_G6_ASSEL (*(volatile Ifx_VADC_G_ASSEL*)0xF0021D28u)




#define VADC_G6ASSEL (VADC_G6_ASSEL)


#define VADC_G6_BFL (*(volatile Ifx_VADC_G_BFL*)0xF0021CC8u)




#define VADC_G6BFL (VADC_G6_BFL)


#define VADC_G6_BFLC (*(volatile Ifx_VADC_G_BFLC*)0xF0021CD0u)




#define VADC_G6BFLC (VADC_G6_BFLC)


#define VADC_G6_BFLNP (*(volatile Ifx_VADC_G_BFLNP*)0xF0021CD4u)




#define VADC_G6BFLNP (VADC_G6_BFLNP)


#define VADC_G6_BFLS (*(volatile Ifx_VADC_G_BFLS*)0xF0021CCCu)




#define VADC_G6BFLS (VADC_G6_BFLS)


#define VADC_G6_BOUND (*(volatile Ifx_VADC_G_BOUND*)0xF0021CB8u)




#define VADC_G6BOUND (VADC_G6_BOUND)


#define VADC_G6_CEFCLR (*(volatile Ifx_VADC_G_CEFCLR*)0xF0021D90u)




#define VADC_G6CEFCLR (VADC_G6_CEFCLR)


#define VADC_G6_CEFLAG (*(volatile Ifx_VADC_G_CEFLAG*)0xF0021D80u)




#define VADC_G6CEFLAG (VADC_G6_CEFLAG)


#define VADC_G6_CEVNP0 (*(volatile Ifx_VADC_G_CEVNP0*)0xF0021DA0u)




#define VADC_G6CEVNP0 (VADC_G6_CEVNP0)


#define VADC_G6_CHASS (*(volatile Ifx_VADC_G_CHASS*)0xF0021C88u)




#define VADC_G6CHASS (VADC_G6_CHASS)


#define VADC_G6_CHCTR0 (*(volatile Ifx_VADC_G_CHCTR*)0xF0021E00u)




#define VADC_G6CHCTR0 (VADC_G6_CHCTR0)


#define VADC_G6_CHCTR1 (*(volatile Ifx_VADC_G_CHCTR*)0xF0021E04u)




#define VADC_G6CHCTR1 (VADC_G6_CHCTR1)


#define VADC_G6_CHCTR2 (*(volatile Ifx_VADC_G_CHCTR*)0xF0021E08u)




#define VADC_G6CHCTR2 (VADC_G6_CHCTR2)


#define VADC_G6_CHCTR3 (*(volatile Ifx_VADC_G_CHCTR*)0xF0021E0Cu)




#define VADC_G6CHCTR3 (VADC_G6_CHCTR3)


#define VADC_G6_CHCTR4 (*(volatile Ifx_VADC_G_CHCTR*)0xF0021E10u)




#define VADC_G6CHCTR4 (VADC_G6_CHCTR4)


#define VADC_G6_CHCTR5 (*(volatile Ifx_VADC_G_CHCTR*)0xF0021E14u)




#define VADC_G6CHCTR5 (VADC_G6_CHCTR5)


#define VADC_G6_CHCTR6 (*(volatile Ifx_VADC_G_CHCTR*)0xF0021E18u)




#define VADC_G6CHCTR6 (VADC_G6_CHCTR6)


#define VADC_G6_CHCTR7 (*(volatile Ifx_VADC_G_CHCTR*)0xF0021E1Cu)




#define VADC_G6CHCTR7 (VADC_G6_CHCTR7)


#define VADC_G6_EMUXCTR (*(volatile Ifx_VADC_G_EMUXCTR*)0xF0021DF0u)




#define VADC_G6EMUXCTR (VADC_G6_EMUXCTR)


#define VADC_G6_ICLASS0 (*(volatile Ifx_VADC_ICLASS*)0xF0021CA0u)




#define VADC_G6ICLASS0 (VADC_G6_ICLASS0)


#define VADC_G6_ICLASS1 (*(volatile Ifx_VADC_ICLASS*)0xF0021CA4u)




#define VADC_G6ICLASS1 (VADC_G6_ICLASS1)


#define VADC_G6_Q0R0 (*(volatile Ifx_VADC_G_Q0R0*)0xF0021D0Cu)




#define VADC_G6Q0R0 (VADC_G6_Q0R0)


#define VADC_G6_QBUR0 (*(volatile Ifx_VADC_G_QBUR0*)0xF0021D10u)




#define VADC_G6QBUR0 (VADC_G6_QBUR0)


#define VADC_G6_QCTRL0 (*(volatile Ifx_VADC_G_QCTRL0*)0xF0021D00u)




#define VADC_G6QCTRL0 (VADC_G6_QCTRL0)


#define VADC_G6_QINR0 (*(volatile Ifx_VADC_G_QINR0*)0xF0021D10u)




#define VADC_G6QINR0 (VADC_G6_QINR0)


#define VADC_G6_QMR0 (*(volatile Ifx_VADC_G_QMR0*)0xF0021D04u)




#define VADC_G6QMR0 (VADC_G6_QMR0)


#define VADC_G6_QSR0 (*(volatile Ifx_VADC_G_QSR0*)0xF0021D08u)




#define VADC_G6QSR0 (VADC_G6_QSR0)


#define VADC_G6_RCR0 (*(volatile Ifx_VADC_G_RCR*)0xF0021E80u)




#define VADC_G6RCR0 (VADC_G6_RCR0)


#define VADC_G6_RCR1 (*(volatile Ifx_VADC_G_RCR*)0xF0021E84u)




#define VADC_G6RCR1 (VADC_G6_RCR1)


#define VADC_G6_RCR10 (*(volatile Ifx_VADC_G_RCR*)0xF0021EA8u)




#define VADC_G6RCR10 (VADC_G6_RCR10)


#define VADC_G6_RCR11 (*(volatile Ifx_VADC_G_RCR*)0xF0021EACu)




#define VADC_G6RCR11 (VADC_G6_RCR11)


#define VADC_G6_RCR12 (*(volatile Ifx_VADC_G_RCR*)0xF0021EB0u)




#define VADC_G6RCR12 (VADC_G6_RCR12)


#define VADC_G6_RCR13 (*(volatile Ifx_VADC_G_RCR*)0xF0021EB4u)




#define VADC_G6RCR13 (VADC_G6_RCR13)


#define VADC_G6_RCR14 (*(volatile Ifx_VADC_G_RCR*)0xF0021EB8u)




#define VADC_G6RCR14 (VADC_G6_RCR14)


#define VADC_G6_RCR15 (*(volatile Ifx_VADC_G_RCR*)0xF0021EBCu)




#define VADC_G6RCR15 (VADC_G6_RCR15)


#define VADC_G6_RCR2 (*(volatile Ifx_VADC_G_RCR*)0xF0021E88u)




#define VADC_G6RCR2 (VADC_G6_RCR2)


#define VADC_G6_RCR3 (*(volatile Ifx_VADC_G_RCR*)0xF0021E8Cu)




#define VADC_G6RCR3 (VADC_G6_RCR3)


#define VADC_G6_RCR4 (*(volatile Ifx_VADC_G_RCR*)0xF0021E90u)




#define VADC_G6RCR4 (VADC_G6_RCR4)


#define VADC_G6_RCR5 (*(volatile Ifx_VADC_G_RCR*)0xF0021E94u)




#define VADC_G6RCR5 (VADC_G6_RCR5)


#define VADC_G6_RCR6 (*(volatile Ifx_VADC_G_RCR*)0xF0021E98u)




#define VADC_G6RCR6 (VADC_G6_RCR6)


#define VADC_G6_RCR7 (*(volatile Ifx_VADC_G_RCR*)0xF0021E9Cu)




#define VADC_G6RCR7 (VADC_G6_RCR7)


#define VADC_G6_RCR8 (*(volatile Ifx_VADC_G_RCR*)0xF0021EA0u)




#define VADC_G6RCR8 (VADC_G6_RCR8)


#define VADC_G6_RCR9 (*(volatile Ifx_VADC_G_RCR*)0xF0021EA4u)




#define VADC_G6RCR9 (VADC_G6_RCR9)


#define VADC_G6_REFCLR (*(volatile Ifx_VADC_G_REFCLR*)0xF0021D94u)




#define VADC_G6REFCLR (VADC_G6_REFCLR)


#define VADC_G6_REFLAG (*(volatile Ifx_VADC_G_REFLAG*)0xF0021D84u)




#define VADC_G6REFLAG (VADC_G6_REFLAG)


#define VADC_G6_RES0 (*(volatile Ifx_VADC_G_RES*)0xF0021F00u)




#define VADC_G6RES0 (VADC_G6_RES0)


#define VADC_G6_RES1 (*(volatile Ifx_VADC_G_RES*)0xF0021F04u)




#define VADC_G6RES1 (VADC_G6_RES1)


#define VADC_G6_RES10 (*(volatile Ifx_VADC_G_RES*)0xF0021F28u)




#define VADC_G6RES10 (VADC_G6_RES10)


#define VADC_G6_RES11 (*(volatile Ifx_VADC_G_RES*)0xF0021F2Cu)




#define VADC_G6RES11 (VADC_G6_RES11)


#define VADC_G6_RES12 (*(volatile Ifx_VADC_G_RES*)0xF0021F30u)




#define VADC_G6RES12 (VADC_G6_RES12)


#define VADC_G6_RES13 (*(volatile Ifx_VADC_G_RES*)0xF0021F34u)




#define VADC_G6RES13 (VADC_G6_RES13)


#define VADC_G6_RES14 (*(volatile Ifx_VADC_G_RES*)0xF0021F38u)




#define VADC_G6RES14 (VADC_G6_RES14)


#define VADC_G6_RES15 (*(volatile Ifx_VADC_G_RES*)0xF0021F3Cu)




#define VADC_G6RES15 (VADC_G6_RES15)


#define VADC_G6_RES2 (*(volatile Ifx_VADC_G_RES*)0xF0021F08u)




#define VADC_G6RES2 (VADC_G6_RES2)


#define VADC_G6_RES3 (*(volatile Ifx_VADC_G_RES*)0xF0021F0Cu)




#define VADC_G6RES3 (VADC_G6_RES3)


#define VADC_G6_RES4 (*(volatile Ifx_VADC_G_RES*)0xF0021F10u)




#define VADC_G6RES4 (VADC_G6_RES4)


#define VADC_G6_RES5 (*(volatile Ifx_VADC_G_RES*)0xF0021F14u)




#define VADC_G6RES5 (VADC_G6_RES5)


#define VADC_G6_RES6 (*(volatile Ifx_VADC_G_RES*)0xF0021F18u)




#define VADC_G6RES6 (VADC_G6_RES6)


#define VADC_G6_RES7 (*(volatile Ifx_VADC_G_RES*)0xF0021F1Cu)




#define VADC_G6RES7 (VADC_G6_RES7)


#define VADC_G6_RES8 (*(volatile Ifx_VADC_G_RES*)0xF0021F20u)




#define VADC_G6RES8 (VADC_G6_RES8)


#define VADC_G6_RES9 (*(volatile Ifx_VADC_G_RES*)0xF0021F24u)




#define VADC_G6RES9 (VADC_G6_RES9)


#define VADC_G6_RESD0 (*(volatile Ifx_VADC_G_RESD*)0xF0021F80u)




#define VADC_G6RESD0 (VADC_G6_RESD0)


#define VADC_G6_RESD1 (*(volatile Ifx_VADC_G_RESD*)0xF0021F84u)




#define VADC_G6RESD1 (VADC_G6_RESD1)


#define VADC_G6_RESD10 (*(volatile Ifx_VADC_G_RESD*)0xF0021FA8u)




#define VADC_G6RESD10 (VADC_G6_RESD10)


#define VADC_G6_RESD11 (*(volatile Ifx_VADC_G_RESD*)0xF0021FACu)




#define VADC_G6RESD11 (VADC_G6_RESD11)


#define VADC_G6_RESD12 (*(volatile Ifx_VADC_G_RESD*)0xF0021FB0u)




#define VADC_G6RESD12 (VADC_G6_RESD12)


#define VADC_G6_RESD13 (*(volatile Ifx_VADC_G_RESD*)0xF0021FB4u)




#define VADC_G6RESD13 (VADC_G6_RESD13)


#define VADC_G6_RESD14 (*(volatile Ifx_VADC_G_RESD*)0xF0021FB8u)




#define VADC_G6RESD14 (VADC_G6_RESD14)


#define VADC_G6_RESD15 (*(volatile Ifx_VADC_G_RESD*)0xF0021FBCu)




#define VADC_G6RESD15 (VADC_G6_RESD15)


#define VADC_G6_RESD2 (*(volatile Ifx_VADC_G_RESD*)0xF0021F88u)




#define VADC_G6RESD2 (VADC_G6_RESD2)


#define VADC_G6_RESD3 (*(volatile Ifx_VADC_G_RESD*)0xF0021F8Cu)




#define VADC_G6RESD3 (VADC_G6_RESD3)


#define VADC_G6_RESD4 (*(volatile Ifx_VADC_G_RESD*)0xF0021F90u)




#define VADC_G6RESD4 (VADC_G6_RESD4)


#define VADC_G6_RESD5 (*(volatile Ifx_VADC_G_RESD*)0xF0021F94u)




#define VADC_G6RESD5 (VADC_G6_RESD5)


#define VADC_G6_RESD6 (*(volatile Ifx_VADC_G_RESD*)0xF0021F98u)




#define VADC_G6RESD6 (VADC_G6_RESD6)


#define VADC_G6_RESD7 (*(volatile Ifx_VADC_G_RESD*)0xF0021F9Cu)




#define VADC_G6RESD7 (VADC_G6_RESD7)


#define VADC_G6_RESD8 (*(volatile Ifx_VADC_G_RESD*)0xF0021FA0u)




#define VADC_G6RESD8 (VADC_G6_RESD8)


#define VADC_G6_RESD9 (*(volatile Ifx_VADC_G_RESD*)0xF0021FA4u)




#define VADC_G6RESD9 (VADC_G6_RESD9)


#define VADC_G6_REVNP0 (*(volatile Ifx_VADC_G_REVNP0*)0xF0021DB0u)




#define VADC_G6REVNP0 (VADC_G6_REVNP0)


#define VADC_G6_REVNP1 (*(volatile Ifx_VADC_G_REVNP1*)0xF0021DB4u)




#define VADC_G6REVNP1 (VADC_G6_REVNP1)


#define VADC_G6_RRASS (*(volatile Ifx_VADC_G_RRASS*)0xF0021C8Cu)




#define VADC_G6RRASS (VADC_G6_RRASS)


#define VADC_G6_SEFCLR (*(volatile Ifx_VADC_G_SEFCLR*)0xF0021D98u)




#define VADC_G6SEFCLR (VADC_G6_SEFCLR)


#define VADC_G6_SEFLAG (*(volatile Ifx_VADC_G_SEFLAG*)0xF0021D88u)




#define VADC_G6SEFLAG (VADC_G6_SEFLAG)


#define VADC_G6_SEVNP (*(volatile Ifx_VADC_G_SEVNP*)0xF0021DC0u)




#define VADC_G6SEVNP (VADC_G6_SEVNP)


#define VADC_G6_SRACT (*(volatile Ifx_VADC_G_SRACT*)0xF0021DC8u)




#define VADC_G6SRACT (VADC_G6_SRACT)


#define VADC_G6_SYNCTR (*(volatile Ifx_VADC_G_SYNCTR*)0xF0021CC0u)




#define VADC_G6SYNCTR (VADC_G6_SYNCTR)


#define VADC_G6_VFR (*(volatile Ifx_VADC_G_VFR*)0xF0021DF8u)




#define VADC_G6VFR (VADC_G6_VFR)


#define VADC_G7_ALIAS (*(volatile Ifx_VADC_G_ALIAS*)0xF00220B0u)




#define VADC_G7ALIAS (VADC_G7_ALIAS)


#define VADC_G7_ARBCFG (*(volatile Ifx_VADC_G_ARBCFG*)0xF0022080u)




#define VADC_G7ARBCFG (VADC_G7_ARBCFG)


#define VADC_G7_ARBPR (*(volatile Ifx_VADC_G_ARBPR*)0xF0022084u)




#define VADC_G7ARBPR (VADC_G7_ARBPR)


#define VADC_G7_ASCTRL (*(volatile Ifx_VADC_G_ASCTRL*)0xF0022120u)




#define VADC_G7ASCTRL (VADC_G7_ASCTRL)


#define VADC_G7_ASMR (*(volatile Ifx_VADC_G_ASMR*)0xF0022124u)




#define VADC_G7ASMR (VADC_G7_ASMR)


#define VADC_G7_ASPND (*(volatile Ifx_VADC_G_ASPND*)0xF002212Cu)




#define VADC_G7ASPND (VADC_G7_ASPND)


#define VADC_G7_ASSEL (*(volatile Ifx_VADC_G_ASSEL*)0xF0022128u)




#define VADC_G7ASSEL (VADC_G7_ASSEL)


#define VADC_G7_BFL (*(volatile Ifx_VADC_G_BFL*)0xF00220C8u)




#define VADC_G7BFL (VADC_G7_BFL)


#define VADC_G7_BFLC (*(volatile Ifx_VADC_G_BFLC*)0xF00220D0u)




#define VADC_G7BFLC (VADC_G7_BFLC)


#define VADC_G7_BFLNP (*(volatile Ifx_VADC_G_BFLNP*)0xF00220D4u)




#define VADC_G7BFLNP (VADC_G7_BFLNP)


#define VADC_G7_BFLS (*(volatile Ifx_VADC_G_BFLS*)0xF00220CCu)




#define VADC_G7BFLS (VADC_G7_BFLS)


#define VADC_G7_BOUND (*(volatile Ifx_VADC_G_BOUND*)0xF00220B8u)




#define VADC_G7BOUND (VADC_G7_BOUND)


#define VADC_G7_CEFCLR (*(volatile Ifx_VADC_G_CEFCLR*)0xF0022190u)




#define VADC_G7CEFCLR (VADC_G7_CEFCLR)


#define VADC_G7_CEFLAG (*(volatile Ifx_VADC_G_CEFLAG*)0xF0022180u)




#define VADC_G7CEFLAG (VADC_G7_CEFLAG)


#define VADC_G7_CEVNP0 (*(volatile Ifx_VADC_G_CEVNP0*)0xF00221A0u)




#define VADC_G7CEVNP0 (VADC_G7_CEVNP0)


#define VADC_G7_CHASS (*(volatile Ifx_VADC_G_CHASS*)0xF0022088u)




#define VADC_G7CHASS (VADC_G7_CHASS)


#define VADC_G7_CHCTR0 (*(volatile Ifx_VADC_G_CHCTR*)0xF0022200u)




#define VADC_G7CHCTR0 (VADC_G7_CHCTR0)


#define VADC_G7_CHCTR1 (*(volatile Ifx_VADC_G_CHCTR*)0xF0022204u)




#define VADC_G7CHCTR1 (VADC_G7_CHCTR1)


#define VADC_G7_CHCTR2 (*(volatile Ifx_VADC_G_CHCTR*)0xF0022208u)




#define VADC_G7CHCTR2 (VADC_G7_CHCTR2)


#define VADC_G7_CHCTR3 (*(volatile Ifx_VADC_G_CHCTR*)0xF002220Cu)




#define VADC_G7CHCTR3 (VADC_G7_CHCTR3)


#define VADC_G7_CHCTR4 (*(volatile Ifx_VADC_G_CHCTR*)0xF0022210u)




#define VADC_G7CHCTR4 (VADC_G7_CHCTR4)


#define VADC_G7_CHCTR5 (*(volatile Ifx_VADC_G_CHCTR*)0xF0022214u)




#define VADC_G7CHCTR5 (VADC_G7_CHCTR5)


#define VADC_G7_CHCTR6 (*(volatile Ifx_VADC_G_CHCTR*)0xF0022218u)




#define VADC_G7CHCTR6 (VADC_G7_CHCTR6)


#define VADC_G7_CHCTR7 (*(volatile Ifx_VADC_G_CHCTR*)0xF002221Cu)




#define VADC_G7CHCTR7 (VADC_G7_CHCTR7)


#define VADC_G7_EMUXCTR (*(volatile Ifx_VADC_G_EMUXCTR*)0xF00221F0u)




#define VADC_G7EMUXCTR (VADC_G7_EMUXCTR)


#define VADC_G7_ICLASS0 (*(volatile Ifx_VADC_ICLASS*)0xF00220A0u)




#define VADC_G7ICLASS0 (VADC_G7_ICLASS0)


#define VADC_G7_ICLASS1 (*(volatile Ifx_VADC_ICLASS*)0xF00220A4u)




#define VADC_G7ICLASS1 (VADC_G7_ICLASS1)


#define VADC_G7_Q0R0 (*(volatile Ifx_VADC_G_Q0R0*)0xF002210Cu)




#define VADC_G7Q0R0 (VADC_G7_Q0R0)


#define VADC_G7_QBUR0 (*(volatile Ifx_VADC_G_QBUR0*)0xF0022110u)




#define VADC_G7QBUR0 (VADC_G7_QBUR0)


#define VADC_G7_QCTRL0 (*(volatile Ifx_VADC_G_QCTRL0*)0xF0022100u)




#define VADC_G7QCTRL0 (VADC_G7_QCTRL0)


#define VADC_G7_QINR0 (*(volatile Ifx_VADC_G_QINR0*)0xF0022110u)




#define VADC_G7QINR0 (VADC_G7_QINR0)


#define VADC_G7_QMR0 (*(volatile Ifx_VADC_G_QMR0*)0xF0022104u)




#define VADC_G7QMR0 (VADC_G7_QMR0)


#define VADC_G7_QSR0 (*(volatile Ifx_VADC_G_QSR0*)0xF0022108u)




#define VADC_G7QSR0 (VADC_G7_QSR0)


#define VADC_G7_RCR0 (*(volatile Ifx_VADC_G_RCR*)0xF0022280u)




#define VADC_G7RCR0 (VADC_G7_RCR0)


#define VADC_G7_RCR1 (*(volatile Ifx_VADC_G_RCR*)0xF0022284u)




#define VADC_G7RCR1 (VADC_G7_RCR1)


#define VADC_G7_RCR10 (*(volatile Ifx_VADC_G_RCR*)0xF00222A8u)




#define VADC_G7RCR10 (VADC_G7_RCR10)


#define VADC_G7_RCR11 (*(volatile Ifx_VADC_G_RCR*)0xF00222ACu)




#define VADC_G7RCR11 (VADC_G7_RCR11)


#define VADC_G7_RCR12 (*(volatile Ifx_VADC_G_RCR*)0xF00222B0u)




#define VADC_G7RCR12 (VADC_G7_RCR12)


#define VADC_G7_RCR13 (*(volatile Ifx_VADC_G_RCR*)0xF00222B4u)




#define VADC_G7RCR13 (VADC_G7_RCR13)


#define VADC_G7_RCR14 (*(volatile Ifx_VADC_G_RCR*)0xF00222B8u)




#define VADC_G7RCR14 (VADC_G7_RCR14)


#define VADC_G7_RCR15 (*(volatile Ifx_VADC_G_RCR*)0xF00222BCu)




#define VADC_G7RCR15 (VADC_G7_RCR15)


#define VADC_G7_RCR2 (*(volatile Ifx_VADC_G_RCR*)0xF0022288u)




#define VADC_G7RCR2 (VADC_G7_RCR2)


#define VADC_G7_RCR3 (*(volatile Ifx_VADC_G_RCR*)0xF002228Cu)




#define VADC_G7RCR3 (VADC_G7_RCR3)


#define VADC_G7_RCR4 (*(volatile Ifx_VADC_G_RCR*)0xF0022290u)




#define VADC_G7RCR4 (VADC_G7_RCR4)


#define VADC_G7_RCR5 (*(volatile Ifx_VADC_G_RCR*)0xF0022294u)




#define VADC_G7RCR5 (VADC_G7_RCR5)


#define VADC_G7_RCR6 (*(volatile Ifx_VADC_G_RCR*)0xF0022298u)




#define VADC_G7RCR6 (VADC_G7_RCR6)


#define VADC_G7_RCR7 (*(volatile Ifx_VADC_G_RCR*)0xF002229Cu)




#define VADC_G7RCR7 (VADC_G7_RCR7)


#define VADC_G7_RCR8 (*(volatile Ifx_VADC_G_RCR*)0xF00222A0u)




#define VADC_G7RCR8 (VADC_G7_RCR8)


#define VADC_G7_RCR9 (*(volatile Ifx_VADC_G_RCR*)0xF00222A4u)




#define VADC_G7RCR9 (VADC_G7_RCR9)


#define VADC_G7_REFCLR (*(volatile Ifx_VADC_G_REFCLR*)0xF0022194u)




#define VADC_G7REFCLR (VADC_G7_REFCLR)


#define VADC_G7_REFLAG (*(volatile Ifx_VADC_G_REFLAG*)0xF0022184u)




#define VADC_G7REFLAG (VADC_G7_REFLAG)


#define VADC_G7_RES0 (*(volatile Ifx_VADC_G_RES*)0xF0022300u)




#define VADC_G7RES0 (VADC_G7_RES0)


#define VADC_G7_RES1 (*(volatile Ifx_VADC_G_RES*)0xF0022304u)




#define VADC_G7RES1 (VADC_G7_RES1)


#define VADC_G7_RES10 (*(volatile Ifx_VADC_G_RES*)0xF0022328u)




#define VADC_G7RES10 (VADC_G7_RES10)


#define VADC_G7_RES11 (*(volatile Ifx_VADC_G_RES*)0xF002232Cu)




#define VADC_G7RES11 (VADC_G7_RES11)


#define VADC_G7_RES12 (*(volatile Ifx_VADC_G_RES*)0xF0022330u)




#define VADC_G7RES12 (VADC_G7_RES12)


#define VADC_G7_RES13 (*(volatile Ifx_VADC_G_RES*)0xF0022334u)




#define VADC_G7RES13 (VADC_G7_RES13)


#define VADC_G7_RES14 (*(volatile Ifx_VADC_G_RES*)0xF0022338u)




#define VADC_G7RES14 (VADC_G7_RES14)


#define VADC_G7_RES15 (*(volatile Ifx_VADC_G_RES*)0xF002233Cu)




#define VADC_G7RES15 (VADC_G7_RES15)


#define VADC_G7_RES2 (*(volatile Ifx_VADC_G_RES*)0xF0022308u)




#define VADC_G7RES2 (VADC_G7_RES2)


#define VADC_G7_RES3 (*(volatile Ifx_VADC_G_RES*)0xF002230Cu)




#define VADC_G7RES3 (VADC_G7_RES3)


#define VADC_G7_RES4 (*(volatile Ifx_VADC_G_RES*)0xF0022310u)




#define VADC_G7RES4 (VADC_G7_RES4)


#define VADC_G7_RES5 (*(volatile Ifx_VADC_G_RES*)0xF0022314u)




#define VADC_G7RES5 (VADC_G7_RES5)


#define VADC_G7_RES6 (*(volatile Ifx_VADC_G_RES*)0xF0022318u)




#define VADC_G7RES6 (VADC_G7_RES6)


#define VADC_G7_RES7 (*(volatile Ifx_VADC_G_RES*)0xF002231Cu)




#define VADC_G7RES7 (VADC_G7_RES7)


#define VADC_G7_RES8 (*(volatile Ifx_VADC_G_RES*)0xF0022320u)




#define VADC_G7RES8 (VADC_G7_RES8)


#define VADC_G7_RES9 (*(volatile Ifx_VADC_G_RES*)0xF0022324u)




#define VADC_G7RES9 (VADC_G7_RES9)


#define VADC_G7_RESD0 (*(volatile Ifx_VADC_G_RESD*)0xF0022380u)




#define VADC_G7RESD0 (VADC_G7_RESD0)


#define VADC_G7_RESD1 (*(volatile Ifx_VADC_G_RESD*)0xF0022384u)




#define VADC_G7RESD1 (VADC_G7_RESD1)


#define VADC_G7_RESD10 (*(volatile Ifx_VADC_G_RESD*)0xF00223A8u)




#define VADC_G7RESD10 (VADC_G7_RESD10)


#define VADC_G7_RESD11 (*(volatile Ifx_VADC_G_RESD*)0xF00223ACu)




#define VADC_G7RESD11 (VADC_G7_RESD11)


#define VADC_G7_RESD12 (*(volatile Ifx_VADC_G_RESD*)0xF00223B0u)




#define VADC_G7RESD12 (VADC_G7_RESD12)


#define VADC_G7_RESD13 (*(volatile Ifx_VADC_G_RESD*)0xF00223B4u)




#define VADC_G7RESD13 (VADC_G7_RESD13)


#define VADC_G7_RESD14 (*(volatile Ifx_VADC_G_RESD*)0xF00223B8u)




#define VADC_G7RESD14 (VADC_G7_RESD14)


#define VADC_G7_RESD15 (*(volatile Ifx_VADC_G_RESD*)0xF00223BCu)




#define VADC_G7RESD15 (VADC_G7_RESD15)


#define VADC_G7_RESD2 (*(volatile Ifx_VADC_G_RESD*)0xF0022388u)




#define VADC_G7RESD2 (VADC_G7_RESD2)


#define VADC_G7_RESD3 (*(volatile Ifx_VADC_G_RESD*)0xF002238Cu)




#define VADC_G7RESD3 (VADC_G7_RESD3)


#define VADC_G7_RESD4 (*(volatile Ifx_VADC_G_RESD*)0xF0022390u)




#define VADC_G7RESD4 (VADC_G7_RESD4)


#define VADC_G7_RESD5 (*(volatile Ifx_VADC_G_RESD*)0xF0022394u)




#define VADC_G7RESD5 (VADC_G7_RESD5)


#define VADC_G7_RESD6 (*(volatile Ifx_VADC_G_RESD*)0xF0022398u)




#define VADC_G7RESD6 (VADC_G7_RESD6)


#define VADC_G7_RESD7 (*(volatile Ifx_VADC_G_RESD*)0xF002239Cu)




#define VADC_G7RESD7 (VADC_G7_RESD7)


#define VADC_G7_RESD8 (*(volatile Ifx_VADC_G_RESD*)0xF00223A0u)




#define VADC_G7RESD8 (VADC_G7_RESD8)


#define VADC_G7_RESD9 (*(volatile Ifx_VADC_G_RESD*)0xF00223A4u)




#define VADC_G7RESD9 (VADC_G7_RESD9)


#define VADC_G7_REVNP0 (*(volatile Ifx_VADC_G_REVNP0*)0xF00221B0u)




#define VADC_G7REVNP0 (VADC_G7_REVNP0)


#define VADC_G7_REVNP1 (*(volatile Ifx_VADC_G_REVNP1*)0xF00221B4u)




#define VADC_G7REVNP1 (VADC_G7_REVNP1)


#define VADC_G7_RRASS (*(volatile Ifx_VADC_G_RRASS*)0xF002208Cu)




#define VADC_G7RRASS (VADC_G7_RRASS)


#define VADC_G7_SEFCLR (*(volatile Ifx_VADC_G_SEFCLR*)0xF0022198u)




#define VADC_G7SEFCLR (VADC_G7_SEFCLR)


#define VADC_G7_SEFLAG (*(volatile Ifx_VADC_G_SEFLAG*)0xF0022188u)




#define VADC_G7SEFLAG (VADC_G7_SEFLAG)


#define VADC_G7_SEVNP (*(volatile Ifx_VADC_G_SEVNP*)0xF00221C0u)




#define VADC_G7SEVNP (VADC_G7_SEVNP)


#define VADC_G7_SRACT (*(volatile Ifx_VADC_G_SRACT*)0xF00221C8u)




#define VADC_G7SRACT (VADC_G7_SRACT)


#define VADC_G7_SYNCTR (*(volatile Ifx_VADC_G_SYNCTR*)0xF00220C0u)




#define VADC_G7SYNCTR (VADC_G7_SYNCTR)


#define VADC_G7_VFR (*(volatile Ifx_VADC_G_VFR*)0xF00221F8u)




#define VADC_G7VFR (VADC_G7_VFR)


#define VADC_GLOBBOUND (*(volatile Ifx_VADC_GLOBBOUND*)0xF00200B8u)


#define VADC_GLOBCFG (*(volatile Ifx_VADC_GLOBCFG*)0xF0020080u)


#define VADC_GLOBEFLAG (*(volatile Ifx_VADC_GLOBEFLAG*)0xF00200E0u)


#define VADC_GLOBEVNP (*(volatile Ifx_VADC_GLOBEVNP*)0xF0020140u)


#define VADC_GLOBICLASS0 (*(volatile Ifx_VADC_ICLASS*)0xF00200A0u)


#define VADC_GLOBICLASS1 (*(volatile Ifx_VADC_ICLASS*)0xF00200A4u)


#define VADC_GLOBRCR (*(volatile Ifx_VADC_GLOBRCR*)0xF0020280u)


#define VADC_GLOBRES (*(volatile Ifx_VADC_GLOBRES*)0xF0020300u)


#define VADC_GLOBRESD (*(volatile Ifx_VADC_GLOBRESD*)0xF0020380u)


#define VADC_GLOBTF (*(volatile Ifx_VADC_GLOBTF*)0xF0020160u)


#define VADC_ID (*(volatile Ifx_VADC_ID*)0xF0020008u)


#define VADC_KRST0 (*(volatile Ifx_VADC_KRST0*)0xF0020034u)


#define VADC_KRST1 (*(volatile Ifx_VADC_KRST1*)0xF0020030u)


#define VADC_KRSTCLR (*(volatile Ifx_VADC_KRSTCLR*)0xF002002Cu)


#define VADC_OCS (*(volatile Ifx_VADC_OCS*)0xF0020028u)
# 66 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_reg.h" 2 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxXbar_reg.h" 1 3
# 34 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxXbar_reg.h" 3
#define IFXXBAR_REG_H 1

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxXbar_regdef.h" 1 3
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxXbar_regdef.h" 3
#define IFXXBAR_REGDEF_H 1







typedef struct _Ifx_XBAR_ACCEN0_Bits
{
    unsigned int EN0:1;
    unsigned int EN1:1;
    unsigned int EN2:1;
    unsigned int EN3:1;
    unsigned int EN4:1;
    unsigned int EN5:1;
    unsigned int EN6:1;
    unsigned int EN7:1;
    unsigned int EN8:1;
    unsigned int EN9:1;
    unsigned int EN10:1;
    unsigned int EN11:1;
    unsigned int EN12:1;
    unsigned int EN13:1;
    unsigned int EN14:1;
    unsigned int EN15:1;
    unsigned int EN16:1;
    unsigned int EN17:1;
    unsigned int EN18:1;
    unsigned int EN19:1;
    unsigned int EN20:1;
    unsigned int EN21:1;
    unsigned int EN22:1;
    unsigned int EN23:1;
    unsigned int EN24:1;
    unsigned int EN25:1;
    unsigned int EN26:1;
    unsigned int EN27:1;
    unsigned int EN28:1;
    unsigned int EN29:1;
    unsigned int EN30:1;
    unsigned int EN31:1;
} Ifx_XBAR_ACCEN0_Bits;


typedef struct _Ifx_XBAR_ACCEN1_Bits
{
    unsigned int reserved_0:32;
} Ifx_XBAR_ACCEN1_Bits;


typedef struct _Ifx_XBAR_ARBCON_Bits
{
    unsigned int PRERREN:1;
    unsigned int SCERREN:1;
    unsigned int SETPRINT:1;
    unsigned int SETSCINT:1;
    unsigned int INTACK:1;
    unsigned int reserved_5:15;
    unsigned int SPC:12;
} Ifx_XBAR_ARBCON_Bits;


typedef struct _Ifx_XBAR_ARBITER0_DBADD_Bits
{
    unsigned int reserved_0:27;
    unsigned int ADDRESS:1;
    unsigned int reserved_28:4;
} Ifx_XBAR_ARBITER0_DBADD_Bits;


typedef struct _Ifx_XBAR_ARBITER0_DBMADD_Bits
{
    unsigned int reserved_0:2;
    unsigned int ADDRESS:19;
    unsigned int reserved_21:11;
} Ifx_XBAR_ARBITER0_DBMADD_Bits;


typedef struct _Ifx_XBAR_ARBITER1_DBADD_Bits
{
    unsigned int reserved_0:31;
    unsigned int ADDRESS:1;
} Ifx_XBAR_ARBITER1_DBADD_Bits;


typedef struct _Ifx_XBAR_ARBITER1_DBMADD_Bits
{
    unsigned int reserved_0:31;
    unsigned int ADDRESS:1;
} Ifx_XBAR_ARBITER1_DBMADD_Bits;


typedef struct _Ifx_XBAR_ARBITER2_DBADD_Bits
{
    unsigned int reserved_0:2;
    unsigned int ADDRESS0:19;
    unsigned int reserved_21:2;
    unsigned int ADDRESS1:1;
    unsigned int reserved_24:3;
    unsigned int ADDRESS2:1;
    unsigned int ONE0:1;
    unsigned int ADDRESS3:1;
    unsigned int ONE1:1;
    unsigned int ADDRESS4:1;
} Ifx_XBAR_ARBITER2_DBADD_Bits;


typedef struct _Ifx_XBAR_ARBITER2_DBMADD_Bits
{
    unsigned int reserved_0:2;
    unsigned int ADDRESS0:19;
    unsigned int ONE0:2;
    unsigned int ADDRESS1:1;
    unsigned int ONE1:3;
    unsigned int ADDRESS2:1;
    unsigned int ONE2:1;
    unsigned int ADDRESS3:1;
    unsigned int ONE3:1;
    unsigned int ADDRESS4:1;
} Ifx_XBAR_ARBITER2_DBMADD_Bits;


typedef struct _Ifx_XBAR_ARBITER4_DBADD_Bits
{
    unsigned int reserved_0:2;
    unsigned int ADDRESS:29;
    unsigned int reserved_31:1;
} Ifx_XBAR_ARBITER4_DBADD_Bits;


typedef struct _Ifx_XBAR_ARBITER4_DBMADD_Bits
{
    unsigned int reserved_0:2;
    unsigned int ADDRESS:29;
    unsigned int reserved_31:1;
} Ifx_XBAR_ARBITER4_DBMADD_Bits;


typedef struct _Ifx_XBAR_ARBITER6_DBADD_Bits
{
    unsigned int reserved_0:2;
    unsigned int ADDRESS0:25;
    unsigned int ONE0:1;
    unsigned int ADDRESS1:3;
    unsigned int ONE1:1;
} Ifx_XBAR_ARBITER6_DBADD_Bits;


typedef struct _Ifx_XBAR_ARBITER6_DBMADD_Bits
{
    unsigned int reserved_0:2;
    unsigned int ADDRESS0:25;
    unsigned int ONE0:1;
    unsigned int ADDRESS1:3;
    unsigned int ONE1:1;
} Ifx_XBAR_ARBITER6_DBMADD_Bits;


typedef struct _Ifx_XBAR_ARBITER7_DBADD_Bits
{
    unsigned int reserved_0:2;
    unsigned int ADDRESS0:19;
    unsigned int reserved_21:8;
    unsigned int ADDRESS1:1;
    unsigned int reserved_30:2;
} Ifx_XBAR_ARBITER7_DBADD_Bits;


typedef struct _Ifx_XBAR_ARBITER7_DBMADD_Bits
{
    unsigned int reserved_0:2;
    unsigned int ADDRESS0:19;
    unsigned int ONE0:8;
    unsigned int ADDRESS1:1;
    unsigned int ONE1:2;
} Ifx_XBAR_ARBITER7_DBMADD_Bits;


typedef struct _Ifx_XBAR_ARBITER8_DBADD_Bits
{
    unsigned int reserved_0:2;
    unsigned int ADDRESS0:19;
    unsigned int ONE0:1;
    unsigned int reserved_22:7;
    unsigned int ADDRESS1:1;
    unsigned int reserved_30:1;
    unsigned int ONE1:1;
} Ifx_XBAR_ARBITER8_DBADD_Bits;


typedef struct _Ifx_XBAR_ARBITER8_DBMADD_Bits
{
    unsigned int reserved_0:2;
    unsigned int ADDRESS0:19;
    unsigned int ONE0:8;
    unsigned int ADDRESS1:1;
    unsigned int ONE1:2;
} Ifx_XBAR_ARBITER8_DBMADD_Bits;


typedef struct _Ifx_XBAR_ARBITERD_DBADD_Bits
{
    unsigned int reserved_0:2;
    unsigned int ADDRESS:30;
} Ifx_XBAR_ARBITERD_DBADD_Bits;


typedef struct _Ifx_XBAR_ARBITERD_DBMADD_Bits
{
    unsigned int reserved_0:2;
    unsigned int ADDRESS:30;
} Ifx_XBAR_ARBITERD_DBMADD_Bits;


typedef struct _Ifx_XBAR_DBCON_Bits
{
    unsigned int DBEN:1;
    unsigned int DBSAT:1;
    unsigned int REARM:1;
    unsigned int SETDBEVT:1;
    unsigned int reserved_4:12;
    unsigned int RDEN:1;
    unsigned int WREN:1;
    unsigned int SVMEN:1;
    unsigned int ADDEN:1;
    unsigned int ERREN:1;
    unsigned int reserved_21:2;
    unsigned int MASEN:1;
    unsigned int MASTER:6;
    unsigned int reserved_30:2;
} Ifx_XBAR_DBCON_Bits;


typedef struct _Ifx_XBAR_DBSAT_Bits
{
    unsigned int SCI0:1;
    unsigned int SCI1:1;
    unsigned int SCI2:1;
    unsigned int reserved_3:1;
    unsigned int SCI4:1;
    unsigned int reserved_5:1;
    unsigned int SCI6:1;
    unsigned int SCI7:1;
    unsigned int SCI8:1;
    unsigned int reserved_9:6;
    unsigned int SCID:1;
    unsigned int reserved_16:16;
} Ifx_XBAR_DBSAT_Bits;


typedef struct _Ifx_XBAR_ERR_Bits
{
    unsigned int RD:1;
    unsigned int WR:1;
    unsigned int SVM:1;
    unsigned int reserved_3:1;
    unsigned int OPC:4;
    unsigned int TR_ID:8;
    unsigned int ADDR_ECC:8;
    unsigned int MCI_SBS:8;
} Ifx_XBAR_ERR_Bits;


typedef struct _Ifx_XBAR_ERRADDR_Bits
{
    unsigned int ADDR:32;
} Ifx_XBAR_ERRADDR_Bits;


typedef struct _Ifx_XBAR_EXTCOND_Bits
{
    unsigned int reserved_0:3;
    unsigned int WFWD:1;
    unsigned int reserved_4:2;
    unsigned int FREQDISF:1;
    unsigned int reserved_7:2;
    unsigned int NODELTR:1;
    unsigned int NORMW:1;
    unsigned int reserved_11:2;
    unsigned int MAX_WS:7;
    unsigned int reserved_20:12;
} Ifx_XBAR_EXTCOND_Bits;


typedef struct _Ifx_XBAR_ID_Bits
{
    unsigned int MOD_REV:8;
    unsigned int MOD_TYPE:8;
    unsigned int MODNUMBER:16;
} Ifx_XBAR_ID_Bits;


typedef struct _Ifx_XBAR_IDINTEN_Bits
{
    unsigned int ENSCI0:1;
    unsigned int ENSCI1:1;
    unsigned int ENSCI2:1;
    unsigned int reserved_3:1;
    unsigned int ENSCI4:1;
    unsigned int reserved_5:1;
    unsigned int ENSCI6:1;
    unsigned int ENSCI7:1;
    unsigned int ENSCI8:1;
    unsigned int reserved_9:6;
    unsigned int ENSCID:1;
    unsigned int ENMCI0:1;
    unsigned int reserved_17:3;
    unsigned int ENMCI4:1;
    unsigned int ENMCI5:1;
    unsigned int ENMCI6:1;
    unsigned int reserved_23:1;
    unsigned int ENMCI8:1;
    unsigned int ENMCI9:1;
    unsigned int ENMCI10:1;
    unsigned int ENMCI11:1;
    unsigned int ENMCI12:1;
    unsigned int ENMCI13:1;
    unsigned int reserved_30:2;
} Ifx_XBAR_IDINTEN_Bits;


typedef struct _Ifx_XBAR_IDINTSAT_Bits
{
    unsigned int IDCSCI0:1;
    unsigned int IDCSCI1:1;
    unsigned int IDCSCI2:1;
    unsigned int reserved_3:1;
    unsigned int IDCSCI4:1;
    unsigned int reserved_5:1;
    unsigned int IDSCI6:1;
    unsigned int IDSCI7:1;
    unsigned int IDSCI8:1;
    unsigned int reserved_9:6;
    unsigned int IDSCID:1;
    unsigned int IDMCI0:1;
    unsigned int reserved_17:3;
    unsigned int IDMCI4:1;
    unsigned int IDMCI5:1;
    unsigned int IDMCI6:1;
    unsigned int reserved_23:1;
    unsigned int IDMCI8:1;
    unsigned int IDMCI9:1;
    unsigned int IDMCI10:1;
    unsigned int IDMCI11:1;
    unsigned int IDMCI12:1;
    unsigned int IDMCI13:1;
    unsigned int reserved_30:2;
} Ifx_XBAR_IDINTSAT_Bits;


typedef struct _Ifx_XBAR_INTSAT_Bits
{
    unsigned int SCSCI0:1;
    unsigned int SCSCI1:1;
    unsigned int SCSCI2:1;
    unsigned int reserved_3:1;
    unsigned int SCSCI4:1;
    unsigned int reserved_5:1;
    unsigned int SCSCI6:1;
    unsigned int SCSCI7:1;
    unsigned int SCSCI8:1;
    unsigned int reserved_9:6;
    unsigned int SCSCID:1;
    unsigned int PRSCI0:1;
    unsigned int PRSCI1:1;
    unsigned int PRSCI2:1;
    unsigned int reserved_19:1;
    unsigned int PRSCI4:1;
    unsigned int reserved_21:1;
    unsigned int PRSCI6:1;
    unsigned int PRSCI7:1;
    unsigned int PRSCI8:1;
    unsigned int reserved_25:6;
    unsigned int PRSCID:1;
} Ifx_XBAR_INTSAT_Bits;


typedef struct _Ifx_XBAR_PRIOH_Bits
{
    unsigned int MASTER8:3;
    unsigned int reserved_3:1;
    unsigned int MASTER9:3;
    unsigned int reserved_7:1;
    unsigned int MASTER10:3;
    unsigned int reserved_11:1;
    unsigned int MASTER11:3;
    unsigned int reserved_15:1;
    unsigned int MASTER12:3;
    unsigned int reserved_19:1;
    unsigned int MASTER13:3;
    unsigned int reserved_23:9;
} Ifx_XBAR_PRIOH_Bits;


typedef struct _Ifx_XBAR_PRIOL_Bits
{
    unsigned int MASTER0:3;
    unsigned int reserved_3:13;
    unsigned int MASTER4:3;
    unsigned int reserved_19:1;
    unsigned int MASTER5:3;
    unsigned int reserved_23:1;
    unsigned int MASTER6:3;
    unsigned int reserved_27:5;
} Ifx_XBAR_PRIOL_Bits;







typedef union
{
    unsigned int U;
    signed int I;
    Ifx_XBAR_ACCEN0_Bits B;
} Ifx_XBAR_ACCEN0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_XBAR_ACCEN1_Bits B;
} Ifx_XBAR_ACCEN1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_XBAR_ARBCON_Bits B;
} Ifx_XBAR_ARBCON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_XBAR_ARBITER0_DBADD_Bits B;
} Ifx_XBAR_ARBITER0_DBADD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_XBAR_ARBITER0_DBMADD_Bits B;
} Ifx_XBAR_ARBITER0_DBMADD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_XBAR_ARBITER1_DBADD_Bits B;
} Ifx_XBAR_ARBITER1_DBADD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_XBAR_ARBITER1_DBMADD_Bits B;
} Ifx_XBAR_ARBITER1_DBMADD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_XBAR_ARBITER2_DBADD_Bits B;
} Ifx_XBAR_ARBITER2_DBADD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_XBAR_ARBITER2_DBMADD_Bits B;
} Ifx_XBAR_ARBITER2_DBMADD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_XBAR_ARBITER4_DBADD_Bits B;
} Ifx_XBAR_ARBITER4_DBADD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_XBAR_ARBITER4_DBMADD_Bits B;
} Ifx_XBAR_ARBITER4_DBMADD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_XBAR_ARBITER6_DBADD_Bits B;
} Ifx_XBAR_ARBITER6_DBADD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_XBAR_ARBITER6_DBMADD_Bits B;
} Ifx_XBAR_ARBITER6_DBMADD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_XBAR_ARBITER7_DBADD_Bits B;
} Ifx_XBAR_ARBITER7_DBADD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_XBAR_ARBITER7_DBMADD_Bits B;
} Ifx_XBAR_ARBITER7_DBMADD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_XBAR_ARBITER8_DBADD_Bits B;
} Ifx_XBAR_ARBITER8_DBADD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_XBAR_ARBITER8_DBMADD_Bits B;
} Ifx_XBAR_ARBITER8_DBMADD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_XBAR_ARBITERD_DBADD_Bits B;
} Ifx_XBAR_ARBITERD_DBADD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_XBAR_ARBITERD_DBMADD_Bits B;
} Ifx_XBAR_ARBITERD_DBMADD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_XBAR_DBCON_Bits B;
} Ifx_XBAR_DBCON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_XBAR_DBSAT_Bits B;
} Ifx_XBAR_DBSAT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_XBAR_ERR_Bits B;
} Ifx_XBAR_ERR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_XBAR_ERRADDR_Bits B;
} Ifx_XBAR_ERRADDR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_XBAR_EXTCOND_Bits B;
} Ifx_XBAR_EXTCOND;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_XBAR_ID_Bits B;
} Ifx_XBAR_ID;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_XBAR_IDINTEN_Bits B;
} Ifx_XBAR_IDINTEN;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_XBAR_IDINTSAT_Bits B;
} Ifx_XBAR_IDINTSAT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_XBAR_INTSAT_Bits B;
} Ifx_XBAR_INTSAT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_XBAR_PRIOH_Bits B;
} Ifx_XBAR_PRIOH;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_XBAR_PRIOL_Bits B;
} Ifx_XBAR_PRIOL;
# 698 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxXbar_regdef.h" 3
typedef volatile struct _Ifx_XBAR_ARBITER0
{
    Ifx_XBAR_ARBCON ARBCON;
    Ifx_XBAR_PRIOH PRIOH;
    Ifx_XBAR_PRIOL PRIOL;
    Ifx_XBAR_ERRADDR ERRADDR;
    Ifx_XBAR_ERR ERR;
    Ifx_XBAR_DBCON DBCON;
    Ifx_XBAR_ARBITER0_DBADD DBADD;
    Ifx_XBAR_ARBITER0_DBMADD DBMADD;
} Ifx_XBAR_ARBITER0;


typedef volatile struct _Ifx_XBAR_ARBITER1
{
    Ifx_XBAR_ARBCON ARBCON;
    Ifx_XBAR_PRIOH PRIOH;
    Ifx_XBAR_PRIOL PRIOL;
    Ifx_XBAR_ERRADDR ERRADDR;
    Ifx_XBAR_ERR ERR;
    Ifx_XBAR_DBCON DBCON;
    Ifx_XBAR_ARBITER1_DBADD DBADD;
    Ifx_XBAR_ARBITER1_DBMADD DBMADD;
} Ifx_XBAR_ARBITER1;


typedef volatile struct _Ifx_XBAR_ARBITER2
{
    Ifx_XBAR_ARBCON ARBCON;
    Ifx_XBAR_PRIOH PRIOH;
    Ifx_XBAR_PRIOL PRIOL;
    Ifx_XBAR_ERRADDR ERRADDR;
    Ifx_XBAR_ERR ERR;
    Ifx_XBAR_DBCON DBCON;
    Ifx_XBAR_ARBITER2_DBADD DBADD;
    Ifx_XBAR_ARBITER2_DBMADD DBMADD;
} Ifx_XBAR_ARBITER2;


typedef volatile struct _Ifx_XBAR_ARBITER4
{
    Ifx_XBAR_ARBCON ARBCON;
    Ifx_XBAR_PRIOH PRIOH;
    Ifx_XBAR_PRIOL PRIOL;
    Ifx_XBAR_ERRADDR ERRADDR;
    Ifx_XBAR_ERR ERR;
    Ifx_XBAR_DBCON DBCON;
    Ifx_XBAR_ARBITER4_DBADD DBADD;
    Ifx_XBAR_ARBITER4_DBMADD DBMADD;
} Ifx_XBAR_ARBITER4;


typedef volatile struct _Ifx_XBAR_ARBITER6
{
    Ifx_XBAR_ARBCON ARBCON;
    Ifx_XBAR_PRIOH PRIOH;
    Ifx_XBAR_PRIOL PRIOL;
    Ifx_XBAR_ERRADDR ERRADDR;
    Ifx_XBAR_ERR ERR;
    Ifx_XBAR_DBCON DBCON;
    Ifx_XBAR_ARBITER6_DBADD DBADD;
    Ifx_XBAR_ARBITER6_DBMADD DBMADD;
} Ifx_XBAR_ARBITER6;


typedef volatile struct _Ifx_XBAR_ARBITER7
{
    Ifx_XBAR_ARBCON ARBCON;
    Ifx_XBAR_PRIOH PRIOH;
    Ifx_XBAR_PRIOL PRIOL;
    Ifx_XBAR_ERRADDR ERRADDR;
    Ifx_XBAR_ERR ERR;
    Ifx_XBAR_DBCON DBCON;
    Ifx_XBAR_ARBITER7_DBADD DBADD;
    Ifx_XBAR_ARBITER7_DBMADD DBMADD;
} Ifx_XBAR_ARBITER7;


typedef volatile struct _Ifx_XBAR_ARBITER8
{
    Ifx_XBAR_ARBCON ARBCON;
    Ifx_XBAR_PRIOH PRIOH;
    Ifx_XBAR_PRIOL PRIOL;
    Ifx_XBAR_ERRADDR ERRADDR;
    Ifx_XBAR_ERR ERR;
    Ifx_XBAR_DBCON DBCON;
    Ifx_XBAR_ARBITER8_DBADD DBADD;
    Ifx_XBAR_ARBITER8_DBMADD DBMADD;
} Ifx_XBAR_ARBITER8;


typedef volatile struct _Ifx_XBAR_ARBITERD
{
    Ifx_XBAR_ARBCON ARBCON;
    Ifx_XBAR_PRIOH PRIOH;
    Ifx_XBAR_PRIOL PRIOL;
    Ifx_XBAR_ERRADDR ERRADDR;
    Ifx_XBAR_ERR ERR;
    Ifx_XBAR_DBCON DBCON;
    Ifx_XBAR_ARBITERD_DBADD DBADD;
    Ifx_XBAR_ARBITERD_DBMADD DBMADD;
} Ifx_XBAR_ARBITERD;
# 812 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxXbar_regdef.h" 3
typedef volatile struct _Ifx_XBAR
{
    Ifx_XBAR_EXTCOND EXTCOND;
    Ifx_XBAR_ARBITERD ARBITERD;
    unsigned char reserved_24[32];
    Ifx_XBAR_ARBITER0 ARBITER0;
    unsigned char reserved_64[32];
    Ifx_XBAR_ARBITER1 ARBITER1;
    unsigned char reserved_A4[32];
    Ifx_XBAR_ARBITER2 ARBITER2;
    unsigned char reserved_E4[96];
    Ifx_XBAR_ARBITER4 ARBITER4;
    unsigned char reserved_164[96];
    Ifx_XBAR_ARBITER6 ARBITER6;
    unsigned char reserved_1E4[32];
    Ifx_XBAR_ARBITER7 ARBITER7;
    unsigned char reserved_224[32];
    Ifx_XBAR_ARBITER8 ARBITER8;
    unsigned char reserved_264[420];
    Ifx_XBAR_ID ID;
    Ifx_XBAR_DBSAT DBSAT;
    Ifx_XBAR_INTSAT INTSAT;
    Ifx_XBAR_IDINTSAT IDINTSAT;
    Ifx_XBAR_IDINTEN IDINTEN;
    unsigned char reserved_41C[220];
    Ifx_XBAR_ACCEN1 ACCEN1;
    Ifx_XBAR_ACCEN0 ACCEN0;
} Ifx_XBAR;
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxXbar_reg.h" 2 3





#define MODULE_XBAR (*(Ifx_XBAR*)0xF8700000u)







#define XBAR_ACCEN0 (*(volatile Ifx_XBAR_ACCEN0*)0xF87004FCu)


#define XBAR_ACCEN1 (*(volatile Ifx_XBAR_ACCEN1*)0xF87004F8u)


#define XBAR_ARBITER0_ARBCON (*(volatile Ifx_XBAR_ARBCON*)0xF8700044u)




#define XBAR_ARBCON0 (XBAR_ARBITER0_ARBCON)


#define XBAR_ARBITER0_DBADD (*(volatile Ifx_XBAR_ARBITER0_DBADD*)0xF870005Cu)




#define XBAR_DBADD0 (XBAR_ARBITER0_DBADD)


#define XBAR_ARBITER0_DBCON (*(volatile Ifx_XBAR_DBCON*)0xF8700058u)




#define XBAR_DBCON0 (XBAR_ARBITER0_DBCON)


#define XBAR_ARBITER0_DBMADD (*(volatile Ifx_XBAR_ARBITER0_DBMADD*)0xF8700060u)




#define XBAR_DBMADD0 (XBAR_ARBITER0_DBMADD)


#define XBAR_ARBITER0_ERR (*(volatile Ifx_XBAR_ERR*)0xF8700054u)




#define XBAR_ERR0 (XBAR_ARBITER0_ERR)


#define XBAR_ARBITER0_ERRADDR (*(volatile Ifx_XBAR_ERRADDR*)0xF8700050u)




#define XBAR_ERRADDR0 (XBAR_ARBITER0_ERRADDR)


#define XBAR_ARBITER0_PRIOH (*(volatile Ifx_XBAR_PRIOH*)0xF8700048u)




#define XBAR_PRIOH0 (XBAR_ARBITER0_PRIOH)


#define XBAR_ARBITER0_PRIOL (*(volatile Ifx_XBAR_PRIOL*)0xF870004Cu)




#define XBAR_PRIOL0 (XBAR_ARBITER0_PRIOL)


#define XBAR_ARBITER1_ARBCON (*(volatile Ifx_XBAR_ARBCON*)0xF8700084u)




#define XBAR_ARBCON1 (XBAR_ARBITER1_ARBCON)


#define XBAR_ARBITER1_DBADD (*(volatile Ifx_XBAR_ARBITER1_DBADD*)0xF870009Cu)




#define XBAR_DBADD1 (XBAR_ARBITER1_DBADD)


#define XBAR_ARBITER1_DBCON (*(volatile Ifx_XBAR_DBCON*)0xF8700098u)




#define XBAR_DBCON1 (XBAR_ARBITER1_DBCON)


#define XBAR_ARBITER1_DBMADD (*(volatile Ifx_XBAR_ARBITER1_DBMADD*)0xF87000A0u)




#define XBAR_DBMADD1 (XBAR_ARBITER1_DBMADD)


#define XBAR_ARBITER1_ERR (*(volatile Ifx_XBAR_ERR*)0xF8700094u)




#define XBAR_ERR1 (XBAR_ARBITER1_ERR)


#define XBAR_ARBITER1_ERRADDR (*(volatile Ifx_XBAR_ERRADDR*)0xF8700090u)




#define XBAR_ERRADDR1 (XBAR_ARBITER1_ERRADDR)


#define XBAR_ARBITER1_PRIOH (*(volatile Ifx_XBAR_PRIOH*)0xF8700088u)




#define XBAR_PRIOH1 (XBAR_ARBITER1_PRIOH)


#define XBAR_ARBITER1_PRIOL (*(volatile Ifx_XBAR_PRIOL*)0xF870008Cu)




#define XBAR_PRIOL1 (XBAR_ARBITER1_PRIOL)


#define XBAR_ARBITER2_ARBCON (*(volatile Ifx_XBAR_ARBCON*)0xF87000C4u)




#define XBAR_ARBCON2 (XBAR_ARBITER2_ARBCON)


#define XBAR_ARBITER2_DBADD (*(volatile Ifx_XBAR_ARBITER2_DBADD*)0xF87000DCu)




#define XBAR_DBADD2 (XBAR_ARBITER2_DBADD)


#define XBAR_ARBITER2_DBCON (*(volatile Ifx_XBAR_DBCON*)0xF87000D8u)




#define XBAR_DBCON2 (XBAR_ARBITER2_DBCON)


#define XBAR_ARBITER2_DBMADD (*(volatile Ifx_XBAR_ARBITER2_DBMADD*)0xF87000E0u)




#define XBAR_DBMADD2 (XBAR_ARBITER2_DBMADD)


#define XBAR_ARBITER2_ERR (*(volatile Ifx_XBAR_ERR*)0xF87000D4u)




#define XBAR_ERR2 (XBAR_ARBITER2_ERR)


#define XBAR_ARBITER2_ERRADDR (*(volatile Ifx_XBAR_ERRADDR*)0xF87000D0u)




#define XBAR_ERRADDR2 (XBAR_ARBITER2_ERRADDR)


#define XBAR_ARBITER2_PRIOH (*(volatile Ifx_XBAR_PRIOH*)0xF87000C8u)




#define XBAR_PRIOH2 (XBAR_ARBITER2_PRIOH)


#define XBAR_ARBITER2_PRIOL (*(volatile Ifx_XBAR_PRIOL*)0xF87000CCu)




#define XBAR_PRIOL2 (XBAR_ARBITER2_PRIOL)


#define XBAR_ARBITER4_ARBCON (*(volatile Ifx_XBAR_ARBCON*)0xF8700144u)




#define XBAR_ARBCON4 (XBAR_ARBITER4_ARBCON)


#define XBAR_ARBITER4_DBADD (*(volatile Ifx_XBAR_ARBITER4_DBADD*)0xF870015Cu)




#define XBAR_DBADD4 (XBAR_ARBITER4_DBADD)


#define XBAR_ARBITER4_DBCON (*(volatile Ifx_XBAR_DBCON*)0xF8700158u)




#define XBAR_DBCON4 (XBAR_ARBITER4_DBCON)


#define XBAR_ARBITER4_DBMADD (*(volatile Ifx_XBAR_ARBITER4_DBMADD*)0xF8700160u)




#define XBAR_DBMADD4 (XBAR_ARBITER4_DBMADD)


#define XBAR_ARBITER4_ERR (*(volatile Ifx_XBAR_ERR*)0xF8700154u)




#define XBAR_ERR4 (XBAR_ARBITER4_ERR)


#define XBAR_ARBITER4_ERRADDR (*(volatile Ifx_XBAR_ERRADDR*)0xF8700150u)




#define XBAR_ERRADDR4 (XBAR_ARBITER4_ERRADDR)


#define XBAR_ARBITER4_PRIOH (*(volatile Ifx_XBAR_PRIOH*)0xF8700148u)




#define XBAR_PRIOH4 (XBAR_ARBITER4_PRIOH)


#define XBAR_ARBITER4_PRIOL (*(volatile Ifx_XBAR_PRIOL*)0xF870014Cu)




#define XBAR_PRIOL4 (XBAR_ARBITER4_PRIOL)


#define XBAR_ARBITER6_ARBCON (*(volatile Ifx_XBAR_ARBCON*)0xF87001C4u)




#define XBAR_ARBCON6 (XBAR_ARBITER6_ARBCON)


#define XBAR_ARBITER6_DBADD (*(volatile Ifx_XBAR_ARBITER6_DBADD*)0xF87001DCu)




#define XBAR_DBADD6 (XBAR_ARBITER6_DBADD)


#define XBAR_ARBITER6_DBCON (*(volatile Ifx_XBAR_DBCON*)0xF87001D8u)




#define XBAR_DBCON6 (XBAR_ARBITER6_DBCON)


#define XBAR_ARBITER6_DBMADD (*(volatile Ifx_XBAR_ARBITER6_DBMADD*)0xF87001E0u)




#define XBAR_DBMADD6 (XBAR_ARBITER6_DBMADD)


#define XBAR_ARBITER6_ERR (*(volatile Ifx_XBAR_ERR*)0xF87001D4u)




#define XBAR_ERR6 (XBAR_ARBITER6_ERR)


#define XBAR_ARBITER6_ERRADDR (*(volatile Ifx_XBAR_ERRADDR*)0xF87001D0u)




#define XBAR_ERRADDR6 (XBAR_ARBITER6_ERRADDR)


#define XBAR_ARBITER6_PRIOH (*(volatile Ifx_XBAR_PRIOH*)0xF87001C8u)




#define XBAR_PRIOH6 (XBAR_ARBITER6_PRIOH)


#define XBAR_ARBITER6_PRIOL (*(volatile Ifx_XBAR_PRIOL*)0xF87001CCu)




#define XBAR_PRIOL6 (XBAR_ARBITER6_PRIOL)


#define XBAR_ARBITER7_ARBCON (*(volatile Ifx_XBAR_ARBCON*)0xF8700204u)




#define XBAR_ARBCON7 (XBAR_ARBITER7_ARBCON)


#define XBAR_ARBITER7_DBADD (*(volatile Ifx_XBAR_ARBITER7_DBADD*)0xF870021Cu)




#define XBAR_DBADD7 (XBAR_ARBITER7_DBADD)


#define XBAR_ARBITER7_DBCON (*(volatile Ifx_XBAR_DBCON*)0xF8700218u)




#define XBAR_DBCON7 (XBAR_ARBITER7_DBCON)


#define XBAR_ARBITER7_DBMADD (*(volatile Ifx_XBAR_ARBITER7_DBMADD*)0xF8700220u)




#define XBAR_DBMADD7 (XBAR_ARBITER7_DBMADD)


#define XBAR_ARBITER7_ERR (*(volatile Ifx_XBAR_ERR*)0xF8700214u)




#define XBAR_ERR7 (XBAR_ARBITER7_ERR)


#define XBAR_ARBITER7_ERRADDR (*(volatile Ifx_XBAR_ERRADDR*)0xF8700210u)




#define XBAR_ERRADDR7 (XBAR_ARBITER7_ERRADDR)


#define XBAR_ARBITER7_PRIOH (*(volatile Ifx_XBAR_PRIOH*)0xF8700208u)




#define XBAR_PRIOH7 (XBAR_ARBITER7_PRIOH)


#define XBAR_ARBITER7_PRIOL (*(volatile Ifx_XBAR_PRIOL*)0xF870020Cu)




#define XBAR_PRIOL7 (XBAR_ARBITER7_PRIOL)


#define XBAR_ARBITER8_ARBCON (*(volatile Ifx_XBAR_ARBCON*)0xF8700244u)




#define XBAR_ARBCON8 (XBAR_ARBITER8_ARBCON)


#define XBAR_ARBITER8_DBADD (*(volatile Ifx_XBAR_ARBITER8_DBADD*)0xF870025Cu)




#define XBAR_DBADD8 (XBAR_ARBITER8_DBADD)


#define XBAR_ARBITER8_DBCON (*(volatile Ifx_XBAR_DBCON*)0xF8700258u)




#define XBAR_DBCON8 (XBAR_ARBITER8_DBCON)


#define XBAR_ARBITER8_DBMADD (*(volatile Ifx_XBAR_ARBITER8_DBMADD*)0xF8700260u)




#define XBAR_DBMADD8 (XBAR_ARBITER8_DBMADD)


#define XBAR_ARBITER8_ERR (*(volatile Ifx_XBAR_ERR*)0xF8700254u)




#define XBAR_ERR8 (XBAR_ARBITER8_ERR)


#define XBAR_ARBITER8_ERRADDR (*(volatile Ifx_XBAR_ERRADDR*)0xF8700250u)




#define XBAR_ERRADDR8 (XBAR_ARBITER8_ERRADDR)


#define XBAR_ARBITER8_PRIOH (*(volatile Ifx_XBAR_PRIOH*)0xF8700248u)




#define XBAR_PRIOH8 (XBAR_ARBITER8_PRIOH)


#define XBAR_ARBITER8_PRIOL (*(volatile Ifx_XBAR_PRIOL*)0xF870024Cu)




#define XBAR_PRIOL8 (XBAR_ARBITER8_PRIOL)


#define XBAR_ARBITERD_ARBCON (*(volatile Ifx_XBAR_ARBCON*)0xF8700004u)




#define XBAR_ARBCOND (XBAR_ARBITERD_ARBCON)


#define XBAR_ARBITERD_DBADD (*(volatile Ifx_XBAR_ARBITERD_DBADD*)0xF870001Cu)




#define XBAR_DBADDD (XBAR_ARBITERD_DBADD)


#define XBAR_ARBITERD_DBCON (*(volatile Ifx_XBAR_DBCON*)0xF8700018u)




#define XBAR_DBCOND (XBAR_ARBITERD_DBCON)


#define XBAR_ARBITERD_DBMADD (*(volatile Ifx_XBAR_ARBITERD_DBMADD*)0xF8700020u)




#define XBAR_DBMADDD (XBAR_ARBITERD_DBMADD)


#define XBAR_ARBITERD_ERR (*(volatile Ifx_XBAR_ERR*)0xF8700014u)




#define XBAR_ERRD (XBAR_ARBITERD_ERR)


#define XBAR_ARBITERD_ERRADDR (*(volatile Ifx_XBAR_ERRADDR*)0xF8700010u)




#define XBAR_ERRADDRD (XBAR_ARBITERD_ERRADDR)


#define XBAR_ARBITERD_PRIOH (*(volatile Ifx_XBAR_PRIOH*)0xF8700008u)




#define XBAR_PRIOHD (XBAR_ARBITERD_PRIOH)


#define XBAR_ARBITERD_PRIOL (*(volatile Ifx_XBAR_PRIOL*)0xF870000Cu)




#define XBAR_PRIOLD (XBAR_ARBITERD_PRIOL)


#define XBAR_DBSAT (*(volatile Ifx_XBAR_DBSAT*)0xF870040Cu)


#define XBAR_EXTCOND (*(volatile Ifx_XBAR_EXTCOND*)0xF8700000u)


#define XBAR_ID (*(volatile Ifx_XBAR_ID*)0xF8700408u)


#define XBAR_IDINTEN (*(volatile Ifx_XBAR_IDINTEN*)0xF8700418u)


#define XBAR_IDINTSAT (*(volatile Ifx_XBAR_IDINTSAT*)0xF8700414u)


#define XBAR_INTSAT (*(volatile Ifx_XBAR_INTSAT*)0xF8700410u)
# 67 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_reg.h" 2 3
# 10 "D:\\Workspace\\autoever_osek\\can_based_OSEK_OS_TEST\\bsw\\drivers\\../../main.h" 2


# 1 "D:\\Workspace\\autoever_osek\\can_based_OSEK_OS_TEST\\bsw\\drivers\\../../bsw/drivers/asclin.h" 1
# 13 "D:\\Workspace\\autoever_osek\\can_based_OSEK_OS_TEST\\bsw\\drivers\\../../main.h" 2
# 1 "D:\\Workspace\\autoever_osek\\can_based_OSEK_OS_TEST\\bsw\\drivers\\../../bsw/drivers/gpt12.h" 1
# 14 "D:\\Workspace\\autoever_osek\\can_based_OSEK_OS_TEST\\bsw\\drivers\\../../main.h" 2
# 1 "D:\\Workspace\\autoever_osek\\can_based_OSEK_OS_TEST\\bsw\\drivers\\../../bsw/drivers/vadc.h" 1

#define BSW_DRIVERS_VADC_INT_H_ 

void init_VADC(void);
void VADC_startConversion(void);
unsigned int VADC_readResult(void);
# 15 "D:\\Workspace\\autoever_osek\\can_based_OSEK_OS_TEST\\bsw\\drivers\\../../main.h" 2
# 1 "D:\\Workspace\\autoever_osek\\can_based_OSEK_OS_TEST\\bsw\\drivers\\../../Driver_Can.h" 1

#define DRIVER_CAN 




# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_types.h" 1 3
# 43 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_types.h" 3
#define IFX_TYPES_H 1


# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\compilers.h" 1 3
# 42 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\compilers.h" 3
#define COMPILERS_H 1



# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_cfg.h" 1 3
# 30 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_cfg.h" 3
#define IFX_CFG_H 1





#define IFX_CFG_SCU_XTAL_FREQUENCY (20000000)

#define IFX_CFG_SCU_PLL_FREQUENCY (200000000)
# 47 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\compilers.h" 2 3



#define IFX_STATIC static



#define IFX_CONST const


#define CONST_CFG const





#define IFX_EXTERN extern






#define NULL_PTR ((void *)0)




#define CFG_LONG_SIZE_T (0)
# 85 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\compilers.h" 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\CompilerGnuc.h" 1 3
# 42 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\CompilerGnuc.h" 3
#define COMPILERGNUC_H 1



# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\lib\\gcc\\tricore\\4.9.4\\include\\stddef.h" 1 3 4
# 39 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\lib\\gcc\\tricore\\4.9.4\\include\\stddef.h" 3 4
#define _STDDEF_H 
#define _STDDEF_H_ 

#define _ANSI_STDDEF_H 
# 136 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\lib\\gcc\\tricore\\4.9.4\\include\\stddef.h" 3 4
#define _PTRDIFF_T 
#define _T_PTRDIFF_ 
#define _T_PTRDIFF 
#define __PTRDIFF_T 
#define _PTRDIFF_T_ 
#define _BSD_PTRDIFF_T_ 
#define ___int_ptrdiff_t_h 
#define _GCC_PTRDIFF_T 



typedef long int ptrdiff_t;
# 158 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\lib\\gcc\\tricore\\4.9.4\\include\\stddef.h" 3 4
#undef __need_ptrdiff_t
# 184 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\lib\\gcc\\tricore\\4.9.4\\include\\stddef.h" 3 4
#define __size_t__ 
#define __SIZE_T__ 
#define _SIZE_T 
#define _SYS_SIZE_T_H 
#define _T_SIZE_ 
#define _T_SIZE 
#define __SIZE_T 
#define _SIZE_T_ 
#define _BSD_SIZE_T_ 
#define _SIZE_T_DEFINED_ 
#define _SIZE_T_DEFINED 
#define _BSD_SIZE_T_DEFINED_ 
#define _SIZE_T_DECLARED 
#define ___int_size_t_h 
#define _GCC_SIZE_T 
#define _SIZET_ 






#define __size_t 





typedef long unsigned int size_t;
# 234 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\lib\\gcc\\tricore\\4.9.4\\include\\stddef.h" 3 4
#undef __need_size_t
# 263 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\lib\\gcc\\tricore\\4.9.4\\include\\stddef.h" 3 4
#define __wchar_t__ 
#define __WCHAR_T__ 
#define _WCHAR_T 
#define _T_WCHAR_ 
#define _T_WCHAR 
#define __WCHAR_T 
#define _WCHAR_T_ 
#define _BSD_WCHAR_T_ 
#define _WCHAR_T_DEFINED_ 
#define _WCHAR_T_DEFINED 
#define _WCHAR_T_H 
#define ___int_wchar_t_h 
#define __INT_WCHAR_T_H 
#define _GCC_WCHAR_T 
#define _WCHAR_T_DECLARED 
# 290 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\lib\\gcc\\tricore\\4.9.4\\include\\stddef.h" 3 4
#undef _BSD_WCHAR_T_
# 324 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\lib\\gcc\\tricore\\4.9.4\\include\\stddef.h" 3 4
typedef int wchar_t;
# 343 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\lib\\gcc\\tricore\\4.9.4\\include\\stddef.h" 3 4
#undef __need_wchar_t
# 397 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\lib\\gcc\\tricore\\4.9.4\\include\\stddef.h" 3 4
#undef NULL




#define NULL ((void *)0)





#undef __need_NULL




#define offsetof(TYPE,MEMBER) __builtin_offsetof (TYPE, MEMBER)
# 47 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\CompilerGnuc.h" 2 3







#define IFXCOMPILER_COMMON_LINKER_SYMBOLS() extern unsigned int __A0_MEM[]; extern unsigned int __A1_MEM[]; extern unsigned int __A8_MEM[]; extern unsigned int __A9_MEM[];
# 65 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\CompilerGnuc.h" 3
#define IFXCOMPILER_CORE_LINKER_SYMBOLS(cpu) extern unsigned int __USTACK ##cpu[]; extern unsigned int __ISTACK ##cpu[]; extern unsigned int __INTTAB_CPU ##cpu[]; extern unsigned int __TRAPTAB_CPU ##cpu[]; extern unsigned int __CSA ##cpu[]; extern unsigned int __CSA ##cpu ##_END[];







#define __USTACK(cpu) __USTACK ##cpu
#define __ISTACK(cpu) __ISTACK ##cpu
#define __INTTAB_CPU(cpu) __INTTAB_CPU ##cpu
#define __TRAPTAB_CPU(cpu) __TRAPTAB_CPU ##cpu
#define __CSA(cpu) __CSA ##cpu
#define __CSA_END(cpu) __CSA ##cpu ##_END





#define __INTTAB(cpu) __INTTAB_CPU ##cpu


#define __TRAPTAB(cpu) __TRAPTAB_CPU ##cpu

#define __SDATA1(cpu) __A0_MEM
#define __SDATA2(cpu) __A1_MEM
#define __SDATA3(cpu) __A8_MEM
#define __SDATA4(cpu) __A9_MEM





#define IFX_INLINE static inline __attribute__ ((always_inline))


#define IFX_PACKED __attribute__ ((packed))

#define COMPILER_NAME "GNUC"
#define COMPILER_VERSION __VERSION__

#define COMPILER_REVISION 0

#define IFX_INTERRUPT_FAST IFX_INTERRUPT
# 119 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\CompilerGnuc.h" 3
#define IFX_INTERRUPT(isr,vectabNum,prio) IFX_INTERRUPT_INTERNAL(isr, vectabNum, prio)




#define IFX_INTERRUPT_INTERNAL(isr,vectabNum,prio) __asm__ (".ifndef .intr.entry.include                        \n" ".altmacro                                           \n" ".macro .int_entry.2 intEntryLabel, name # define the section and inttab entry code \n" "	.pushsection .\\intEntryLabel,\"ax\",@progbits   \n" "	__\\intEntryLabel :                              \n" "		svlcx                                        \n" "		movh.a  %a14, hi:\\name                      \n" "		lea     %a14, [%a14]lo:\\name                \n" "		ji      %a14                                 \n" "	.popsection                                      \n" ".endm                                               \n" ".macro .int_entry.1 prio,vectabNum,u,name           \n" ".int_entry.2 intvec_tc\\vectabNum\\u\\prio,(name) # build the unique name \n" ".endm                                               \n" "                                                    \n" ".macro .intr.entry name,vectabNum,prio              \n" ".int_entry.1 %(prio),%(vectabNum),_,name # evaluate the priority and the cpu number \n" ".endm                                               \n" ".intr.entry.include:                                \n" ".endif                                              \n" ".intr.entry "#isr","#vectabNum","#prio );IFX_EXTERN void __attribute__ ((interrupt_handler)) isr(); void isr (void)
# 154 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\CompilerGnuc.h" 3
#define IFX_ALIGN(n) __attribute__ ((aligned(n)))




#define IFX_FAR_ABS __attribute__((fardata))



#define IFX_NEAR_ABS 



#define IFX_REL_A0 



#define IFX_REL_A1 



#define IFX_REL_A8 



#define IFX_REL_A9 
# 86 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\compilers.h" 2 3
# 123 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\compilers.h" 3
#define BEGIN_DATA_SECTION(sec) DATA_SECTION(section #sec aw 4)
#define DATA_SECTION(sec) _Pragma(#sec)
#define END_DATA_SECTION DATA_SECTION(section)
# 144 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\compilers.h" 3
void Ifx_C_Init(void);
# 47 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_types.h" 2 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\Platform_Types.h" 1 3
# 42 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\Platform_Types.h" 3
#define PLATFORM_TYPES_H 
# 51 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\Platform_Types.h" 3
#define PLATFORM_VENDOR_ID (17u)
#define PLATFORM_AR_RELEASE_MAJOR_VERSION (4u)
#define PLATFORM_AR_RELEASE_MINOR_VERSION (2u)
#define PLATFORM_AR_RELEASE_REVISION_VERSION (2u)
#define PLATFORM_SW_MAJOR_VERSION (1u)
#define PLATFORM_SW_MINOR_VERSION (0u)
#define PLATFORM_SW_PATCH_VERSION (0u)



#define CPU_TYPE_8 (8u)
#define CPU_TYPE_16 (16u)
#define CPU_TYPE_32 (32u)

#define CPU_TYPE CPU_TYPE_32





#define MSB_FIRST (0u)
#define LSB_FIRST (1u)

#define CPU_BIT_ORDER LSB_FIRST





#define HIGH_BYTE_FIRST (0u)
#define LOW_BYTE_FIRST (1u)

#define CPU_BYTE_ORDER LOW_BYTE_FIRST






#define TRUE (1u)


#define FALSE (0u)






typedef signed char int8_t;
typedef unsigned char uint8_t;
typedef signed short int16_t;
typedef unsigned short uint16_t;
typedef signed long int32_t;
typedef unsigned long uint32_t;
typedef float float32_t;
typedef double float64_t;



typedef unsigned char boolean;



typedef unsigned char uint8;



typedef unsigned short uint16;



typedef unsigned long uint32;




typedef unsigned long long uint64;



typedef signed char sint8;



typedef short sint16;




typedef long sint32;






typedef long long sint64;



typedef unsigned long uint8_least;



typedef unsigned long uint16_least;



typedef unsigned long uint32_least;



typedef signed long sint8_least;



typedef signed long sint16_least;



typedef signed long sint32_least;




typedef float float32;




typedef double float64;
# 48 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_types.h" 2 3





typedef const char *pchar;
typedef void *pvoid;
typedef volatile void *vvoid;
typedef void (*voidfuncvoid) (void);

typedef struct
{
    float32 real;
    float32 imag;
} cfloat32;

typedef struct
{
    sint32 real;
    sint32 imag;
} csint32;

typedef struct
{
    sint16 real;
    sint16 imag;
} csint16;

typedef sint64 Ifx_TickTime;
#define TIME_INFINITE ((Ifx_TickTime)0x7FFFFFFFFFFFFFFFLL)
#define TIME_NULL ((Ifx_TickTime)0x0000000000000000LL)

#define IFX_ONES (0xFFFFFFFFFFFFFFFFU)
#define IFX_ZEROS (0x0000000000000000U)






#define IFX_SIZET_MAX (0x7FFF)
typedef sint16 Ifx_SizeT;



typedef struct
{
    void *base;
    uint16 index;
    uint16 length;
} Ifx_CircularBuffer;

typedef uint16 Ifx_Priority;
typedef uint32 Ifx_TimerValue;
typedef sint32 Ifx_SignedTimerVal;

typedef pvoid Ifx_AddressValue;

typedef struct
{
    uint16 priority;
    uint16 provider;
} Ifx_IsrSetting;


typedef enum
{
    Ifx_ActiveState_low = 0,
    Ifx_ActiveState_high = 1
} Ifx_ActiveState;

typedef enum
{
    Ifx_ParityMode_even = 0,
    Ifx_ParityMode_odd = 1
} Ifx_ParityMode;



typedef enum
{
    Ifx_RxSel_a,
    Ifx_RxSel_b,
    Ifx_RxSel_c,
    Ifx_RxSel_d,
    Ifx_RxSel_e,
    Ifx_RxSel_f,
    Ifx_RxSel_g,
    Ifx_RxSel_h
} Ifx_RxSel;


typedef struct
{
    volatile void *module;
    sint32 index;
} IfxModule_IndexMap;

typedef struct
{
    Ifx_TickTime timestamp;
    uint8 data;
}Ifx_DataBufferMode_TimeStampSingle;
# 161 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_types.h" 3
typedef enum
{
    Ifx_DataBufferMode_normal = 0,
    Ifx_DataBufferMode_timeStampSingle,

}Ifx_DataBufferMode;
# 175 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_types.h" 3
typedef enum
{
    Ifx_Pwm_Mode_centerAligned = 0,
    Ifx_Pwm_Mode_centerAlignedInverted = 1,
    Ifx_Pwm_Mode_leftAligned = 2,
    Ifx_Pwm_Mode_rightAligned = 3,
    Ifx_Pwm_Mode_off = 4,
    Ifx_Pwm_Mode_init = 5,
    Ifx_Pwm_Mode_count
} Ifx_Pwm_Mode;
# 193 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_types.h" 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\Ifx_TypesGnuc.h" 1 3
# 40 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\Ifx_TypesGnuc.h" 3
#define IFX_TYPESGNUC_H_ 

#define FRACT_MAX 0x7fffffff

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\machine\\cint.h" 1 3
# 9 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\machine\\cint.h" 3
#define __cint_h 





#define MAX_TRAPS 8
#define MAX_INTRS 256







extern void _init_vectab (void);
extern void _init_hnd_chain (void);






extern int _install_int_handler (int intno, void (*handler) (int), int arg);







extern void *_install_chained_int_handler (int intno, void (*handler) (int),
        int arg);





extern int _remove_chained_int_handler (int intno, void *ptr);





extern int _install_trap_handler (int trapno, void (*handler) (int));



#define TrapInit _init_vectab
#define cintsetup _init_vectab
#define cinthandler _install_int_handler
#define ccintsetup _init_hnd_chain
#define ccinthandler _install_chained_int_handler
#define freechain_hnd _remove_chained_int_handler
#define ctraphandler _install_trap_handler
# 45 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\Ifx_TypesGnuc.h" 2 3
#define __interrupt(intno) 

typedef long fract;
typedef short sfract;
typedef long long laccum;
typedef long __packb;
typedef unsigned long __upackb;
typedef long __packhw;
typedef unsigned long __upackhw;
# 194 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_types.h" 2 3
# 208 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_types.h" 3
typedef struct
{
    fract real;
    fract imag;
} cfract;

typedef struct
{
    sfract real;
    sfract imag;
} csfract;

#define IFX_PI (3.1415926535897932384626433832795f)
#define IFX_TWO_OVER_PI (2.0 / IFX_PI)
#define IFX_ONE_OVER_TWO_PI (1.0f / (2.0f * IFX_PI))
#define IFX_ONE_OVER_SQRT_THREE (0.57735026918962576450914878050196f)
#define IFX_SQRT_TWO (1.4142135623730950488016887242097f)
#define IFX_SQRT_THREE (1.7320508075688772935274463415059f)
#define IFX_UNUSED_PARAMETER(x) if(x){}
# 8 "D:\\Workspace\\autoever_osek\\can_based_OSEK_OS_TEST\\bsw\\drivers\\../../Driver_Can.h" 2
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 1 3
# 63 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 3
#define IFXCPU_H 1





# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu_cfg.h" 1 3
# 50 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu_cfg.h" 3
#define IFXCPU_CFG_H 1





# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu_intrinsics.h" 1 3
# 45 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu_intrinsics.h" 3
#define IFXCPU_INTRINSICS_H 
# 56 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu_intrinsics.h" 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCpu_IntrinsicsGnuc.h" 1 3
# 46 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCpu_IntrinsicsGnuc.h" 3
#define IFXCPU_INTRINSICSGNUC_H 





#define IFXCPU_INTRINSICSGNUC_USE_MACHINE_INTRINSICS 1



# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\Ifx_Types.h" 1 3
# 57 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCpu_IntrinsicsGnuc.h" 2 3







#define STRINGIFY(x) #x



#define IFX_WEAK _attribute_((weak))



#define Ifx__non_return_call(fun) __asm__ volatile ("ji %0"::"a"(fun))



static inline __attribute__ ((always_inline)) void Ifx__jump_and_link(void (*fun)(void))
{
 __asm__ volatile ("jli %0"::"a"(fun));
}

static inline __attribute__ ((always_inline)) void Ifx__moveToDataParam0(unsigned int var)
{
 __asm__ volatile ("mov\t %%d4, %0"::"d"(var));
}

static inline __attribute__ ((always_inline)) void Ifx__moveToDataParamRet(unsigned int var)
{
 __asm__ volatile ("mov\t %%d2, %0"::"d"(var));
}

static inline __attribute__ ((always_inline)) unsigned int Ifx__getDataParamRet(void)
{
 unsigned int var;
 __asm__ volatile (" mov\t %0, %%d2":"=d"(var));
 return var;
}

static inline __attribute__ ((always_inline)) void Ifx__moveToAddrParam0(const void *var)
{
 __asm__ volatile ("mov.aa\t %%a4, %0"::"a"(var));
}

static inline __attribute__ ((always_inline)) void Ifx__jumpToFunction(const void *fun)
{
 __asm__ volatile ("ji %0"::"a"(fun));
}

static inline __attribute__ ((always_inline)) void Ifx__jumpToFunctionWithLink(const void *fun)
{
 Ifx__jump_and_link((void (*)(void))fun);
}

static inline __attribute__ ((always_inline)) void Ifx__jumpBackToLink(void)
{
 __asm__ volatile ("ji %a11");
}







#define Ifx__minX(X,Y) ( ((X) < (Y)) ? (X) : (Y) )
#define Ifx__maxX(X,Y) ( ((X) > (Y)) ? (X) : (Y) )
#define Ifx__saturateX(X,Min,Max) ( Ifx__minX(Ifx__maxX(X, Min), Max) )
#define Ifx__checkrangeX(X,Min,Max) (((X) >= (Min)) && ((X) <= (Max)))






#define Ifx__saturate(X,Min,Max) ( Ifx__min(Ifx__max(X, Min), Max) )






#define Ifx__saturateu(X,Min,Max) ( Ifx__minu(Ifx__maxu(X, Min), Max) )
# 152 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCpu_IntrinsicsGnuc.h" 3
static inline __attribute__ ((always_inline)) sint32 Ifx__max(sint32 a, sint32 b)
{
    sint32 res;
    __asm__ volatile ("max %0, %1, %2": "=d" (res) : "d" (a), "d" (b));
    return res;
}



static inline __attribute__ ((always_inline)) sint32 Ifx__maxs(sint16 a, sint16 b)
{
    sint32 res;
    __asm__ volatile ("max.h %0, %1, %2": "=d" (res) : "d" (a), "d" (b));
    return res;
}


static inline __attribute__ ((always_inline)) uint32 Ifx__maxu(uint32 a, uint32 b)
{
    uint32 res;
    __asm__ volatile ("max.u %0, %1, %2": "=d" (res) : "d" (a), "d" (b));
    return res;
}



static inline __attribute__ ((always_inline)) sint32 Ifx__min(sint32 a, sint32 b)
{
    sint32 res;
    __asm__ volatile ("min %0, %1, %2": "=d" (res) : "d" (a), "d" (b));
    return res;
}



static inline __attribute__ ((always_inline)) sint16 Ifx__mins(sint16 a, sint16 b)
{
    sint16 res;
    __asm__ volatile ("min.h %0, %1, %2": "=d" (res) : "d" (a), "d" (b));
    return res;
}



static inline __attribute__ ((always_inline)) uint32 Ifx__minu(uint32 a, uint32 b)
{
    uint32 res;
    __asm__ volatile ("min.u %0, %1, %2": "=d" (res) : "d" (a), "d" (b));
    return res;
}
# 210 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCpu_IntrinsicsGnuc.h" 3
#define Ifx__sqrf(X) ((X) * (X))
#define Ifx__sqrtf(X) sqrtf(X)
#define Ifx__checkrange(X,Min,Max) (((X) >= (Min)) && ((X) <= (Max)))

#define Ifx__roundf(X) ((((X) - (sint32)(X)) > 0.5) ? (1 + (sint32)(X)) : ((sint32)(X)))
#define Ifx__absf(X) ( ((X) < 0.0) ? -(X) : (X) )
#define Ifx__minf(X,Y) ( ((X) < (Y)) ? (X) : (Y) )
#define Ifx__maxf(X,Y) ( ((X) > (Y)) ? (X) : (Y) )
#define Ifx__saturatef(X,Min,Max) ( Ifx__minf(Ifx__maxf(X, Min), Max) )
#define Ifx__checkrangef(X,Min,Max) (((X) >= (Min)) && ((X) <= (Max)))

#define Ifx__abs_stdreal(X) ( ((X) > 0.0) ? (X) : -(X) )
#define Ifx__min_stdreal(X,Y) ( ((X) < (Y)) ? (X) : (Y) )
#define Ifx__max_stdreal(X,Y) ( ((X) > (Y)) ? (X) : (Y) )
#define Ifx__saturate_stdreal(X,Min,Max) ( Ifx__min_stdreal(Ifx__max_stdreal(X, Min), Max) )

#define Ifx__neqf(X,Y) ( ((X) > (Y)) || ((X) < (Y)) )
#define Ifx__leqf(X,Y) ( !((X) > (Y)) )
#define Ifx__geqf(X,Y) ( !((X) < (Y)) )
# 242 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCpu_IntrinsicsGnuc.h" 3
static inline __attribute__ ((always_inline)) sint16 Ifx__clssf(sfract a)
{
    sint16 res;
    __asm__ volatile ("sh  %1,%1,16    \n                      cls  %0,%1":"=d"(res):"d"(a):"memory");

    return res;
}



static inline __attribute__ ((always_inline)) float Ifx__fract_to_float(fract a)
{
    float res;
    __asm__ volatile ("q31tof  %0,%1,%2":"=d"(res):"d"(a), "d"(0):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) fract Ifx__float_to_fract(float a)
{
    fract res;
    __asm__ volatile ("ftoq31  %0,%1,%2":"=d"(res):"d"(a), "d"(0):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) sfract Ifx__fract_to_sfract(fract a)
{
    sfract res;
    __asm__ volatile ("mov.u  %0,0x8000        \n                    adds  %0,%1              \n                    extr  %0,%0,0x10,0x10 "


                      :"=&d"(res):"d"(a):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) sfract Ifx__float_to_sfract(float a)
{
    fract tmp = Ifx__float_to_fract(a);
    return Ifx__fract_to_sfract(tmp);
}



static inline __attribute__ ((always_inline)) fract Ifx__getfract(laccum a)
{
    fract res;
    __asm__ volatile ("dextr  %0,%H1,%L1,0x11":"=&d" (res):"d" (a):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) sfract Ifx__mac_r_sf(sfract a, sfract b, sfract c)
{
    sfract res;
    __asm__ volatile ("sh  %1,%1,16        \n                       maddrs.q  %0,%1,%2L,%3L,1        \n                       sh %0,%0,-16":"=d"(res):"d"(a),

                                                       "d"(b), "d"(c):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) sfract Ifx__mac_sf(sfract a, sfract b, sfract c)
{
    sfract res;
    __asm__ volatile ("sh  %1,%1,16        \n                      madds.q  %0,%1,%2L,%3L,1        \n                      sh %0,%0,-16":"=d"(res):"d"(a),

                                                      "d"(b), "d"(c):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) long Ifx__mulfractfract(fract a, fract b)
{
    long res;
    __asm__ volatile ("mul.q %0,%1,%2,1":"=d"(res):"d"(a), "d"(b):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) long Ifx__mulfractlong(fract a, long b)
{
    long res;
    __asm__ volatile ("mul.q %0,%1,%2,1":"=d"(res):"d"(a), "d"(b):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) sfract Ifx__round16(fract a)
{
    sfract res;
    __asm__ volatile ("mov.u  %0,0x8000        \n                    adds  %0,%1              \n                    insert  %0,%0,0,0,0x10 \n					sh  %0,%0,-16"



                      :"=&d"(res):"d"(a):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) sfract Ifx__s16_to_sfract(sint16 a)
{
    sfract res;
    __asm__ volatile ("sh  %0,%1,16    \n                       sh  %0,%1,-16":"=d"(res):"d"(a):"memory");

    return res;
}



static inline __attribute__ ((always_inline)) sint16 Ifx__sfract_to_s16(sfract a)
{
    sint16 res;
    __asm__ volatile ("sh  %1,%1,16    \n                       sh  %0,%1,-16":"=d"(res):"d"(a):"memory");

    return res;
}



static inline __attribute__ ((always_inline)) uint16 Ifx__sfract_to_u16(sfract a)
{
    uint16 res;
    __asm__ volatile ("sh  %1,%1,16    \n                       sh  %0,%1,-16":"=d"(res):"d"(a):"memory");

    return res;
}



static inline __attribute__ ((always_inline)) laccum Ifx__shaaccum(laccum a, sint32 b)
{
    laccum res;
    __asm__ volatile ("jge   %2,0,0f        \n                    sha   %H0,%H1,%2     \n                    rsub  %2,%2,0        \n                    dextr %L0,%H1,%L1,%2 \n                    j  1f                \n                    0:dextr %H0,%H1,%L1,%2 \n                    sha   %L0,%L1,%2     \n                    1:"







                      :"=d"(res):"d"(a), "d"(b):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) fract Ifx__shafracts(fract a, sint32 b)
{
    fract res;
    __asm__ volatile ("shas  %0,%1,%2":"=d"(res):"d"(a), "d"(b):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) sfract Ifx__shasfracts(sfract a, sint32 b)
{
    sfract res;
    __asm__ volatile ("shas  %0,%1,%2":"=d"(res):"d"(a), "d"(b):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) sfract Ifx__u16_to_sfract(uint16 a)
{
    sfract res;
    __asm__ volatile ("sh  %0,%1,16    \n                       sh  %0,%1,-16":"=d"(res):"d"(a):"memory");

    return res;
}
# 434 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCpu_IntrinsicsGnuc.h" 3
static inline __attribute__ ((always_inline)) sint32 Ifx__extr(sint32 a, uint32 p, uint32 w)
{
    sint32 res;
    __asm__ volatile ("mov %%d14,%2  \n                     mov %%d15,%3  \n                     extr %0,%1,%%e14"


                      : "=d" (res) : "d" (a), "d" (p), "d" (w):"d14", "d15");
    return res;
}



static inline __attribute__ ((always_inline)) uint32 Ifx__extru(uint32 a, uint32 p, uint32 w)
{
    uint32 res;
    __asm__ volatile ("mov %%d14,%2  \n                     mov %%d15,%3  \n                     extr.u %0,%1,%%e14"


                      : "=d" (res) : "d" (a), "d" (p), "d" (w):"d14", "d15");
    return res;
}




#define Ifx__getbit(address,bitoffset) ((*(address) & (1U << (bitoffset))) != 0)



#define Ifx__imaskldmst(address,value,bitoffset,bits) {long long tmp; __asm__("imask %A0,%1,%2,%3" :"=d"((long long)tmp) :"d"(value),"d"(bitoffset),"i"(bits): "memory"); __asm__("ldmst [%0]0,%A1"::"a"(address),"d"(tmp): "memory");}
# 472 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCpu_IntrinsicsGnuc.h" 3
static inline __attribute__ ((always_inline)) sint32 Ifx__ins(sint32 trg, const sint32 trgbit, sint32 src, const sint32 srcbit)
{
    sint32 res;
    __asm__ volatile ("ins.t %0,%1,%2,%3,%4":"=d"(res):"d"(trg), "i"(trgbit), "d"(src), "i"(srcbit));
    return res;
}



static inline __attribute__ ((always_inline)) sint32 Ifx__insert(sint32 a, sint32 b, sint32 p, const sint32 w)
{
    sint32 res;
    __asm__ volatile ("mov %%d14,%3  \n                     mov %%d15,%4  \n                     insert %0,%1,%2,%%e14"


                      :"=d"(res):"d"(a), "d"(b), "d"(p), "d"(w):"d14", "d15");
    return res;
}



static inline __attribute__ ((always_inline)) sint32 Ifx__insn(sint32 trg, const sint32 trgbit, sint32 src, const sint32 srcbit)
{
    sint32 res;
    __asm__ volatile ("insn.t %0,%1,%2,%3,%4":"=d"(res):"d"(trg), "i"(trgbit), "d"(src), "i"(srcbit));
    return res;
}



#define Ifx__putbit(value,address,bitoffset) Ifx__imaskldmst(address, value, bitoffset,1)
# 520 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCpu_IntrinsicsGnuc.h" 3
#define Ifx__disable() __asm__ volatile ("disable" : : : "memory")



static inline __attribute__ ((always_inline)) sint32 Ifx__disable_and_save(void)
{
    sint32 res;
    __asm__ volatile("disable %0":"=d"(res));
    return res;
}



#define Ifx__enable() __asm__ volatile ("enable" : : : "memory")



static inline __attribute__ ((always_inline)) void Ifx__restore(sint32 ie)
{
    __asm__ volatile ("restore %0"::"d"(ie));
}
# 558 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCpu_IntrinsicsGnuc.h" 3
static inline __attribute__ ((always_inline)) void Ifx__cacheawi(uint8* p)
{
    __asm__ volatile("cachea.wi [%0]0"::"a"(p));
}


static inline __attribute__ ((always_inline)) void Ifx__cacheiwi(uint8* p)
{
    __asm__ volatile("cachei.wi [%0]0"::"a"(p));
}




static inline __attribute__ ((always_inline)) uint8* Ifx__cacheawi_bo_post_inc(uint8* p)
{
    __asm__ volatile("cachea.wi  [%0+]0"::"a"(p));
    return p;
}





static inline __attribute__ ((always_inline)) sint32 Ifx__mulsc(sint32 a, sint32 b, sint32 offset)
{
    sint32 res;
    __asm__ volatile("mul  %%e12,%1,%2      \n                    dextr  %0,%%d13,%%d12,%3"

                     :"=d"(res):"d"(a), "d"(b), "d"(offset):"d12", "d13");
    return res;
}



static inline __attribute__ ((always_inline)) uint32 Ifx__rol(uint32 operand, uint32 count)
{
    uint32 res;
    __asm__ volatile("dextr  %0,%1,%1,%2":"=d"(res):"d"(operand), "d"(count):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) uint32 Ifx__ror(uint32 operand, uint32 count)
{
    uint32 res;
    __asm__ volatile("rsub %2,%2,0 \n                    dextr  %0,%1,%1,%2"

                     :"=d"(res):"d"(operand), "d"(count):"memory");
    return res;
}
# 620 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCpu_IntrinsicsGnuc.h" 3
static inline __attribute__ ((always_inline)) __packb Ifx__absb(__packb a)
{
    __packb res;
    __asm__ volatile ("abs.b %0,%1"
                      :"=d"(res):"d"(a):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) __packhw Ifx__absh(__packhw a)
{
    __packhw res;
    __asm__ volatile ("abs.h %0,%1"
                      :"=d"(res):"d"(a):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) __packhw Ifx__abssh(__packhw a)
{
    __packb res;
    __asm__ volatile ("abss.h %0,%1"
                      :"=d"(res):"d"(a):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) sint8 Ifx__extractbyte1(__packb a)
{
    sint8 res;
    __asm__ volatile ("extr  %0,%1,0,8"
                      :"=d"(res):"d"(a):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) sint8 Ifx__extractbyte2(__packb a)
{
    sint8 res;
    __asm__ volatile ("extr  %0,%1,8,8"
                      :"=d"(res):"d"(a):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) sint8 Ifx__extractbyte3(__packb a)
{
    sint8 res;
    __asm__ volatile ("extr  %0,%1,16,8"
                      :"=d"(res):"d"(a):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) sint8 Ifx__extractbyte4(__packb a)
{
    sint8 res;
    __asm__ volatile ("extr  %0,%1,24,8"
                      :"=d"(res):"d"(a):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) sint16 Ifx__extracthw1(__packhw a)
{
    sint16 res;
    __asm__ volatile ("extr  %0,%1,0,16"
                      :"=d"(res):"d"(a):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) sint16 Ifx__extracthw2(__packhw a)
{
    sint16 res;
    __asm__ volatile ("extr  %0,%1,16,16"
                      :"=d"(res):"d"(a):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) uint8 Ifx__extractubyte1(__upackb a)
{
    uint8 res;
    __asm__ volatile ("extr  %0,%1,0,8"
                      :"=d"(res):"d"(a):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) uint8 Ifx__extractubyte2(__upackb a)
{
    uint8 res;
    __asm__ volatile ("extr  %0,%1,8,8"
                      :"=d"(res):"d"(a):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) uint8 Ifx__extractubyte3(__upackb a)
{
    uint8 res;
    __asm__ volatile ("extr  %0,%1,16,8"
                      :"=d"(res):"d"(a):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) uint8 Ifx__extractubyte4(__upackb a)
{
    uint8 res;
    __asm__ volatile ("extr  %0,%1,24,8"
                      :"=d"(res):"d"(a):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) uint16 Ifx__extractuhw1(__upackhw a)
{
    uint16 res;
    __asm__ volatile ("extr  %0,%1,0,16"
                      :"=d"(res):"d"(a):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) uint16 Ifx__extractuhw2(__upackhw a)
{
    uint16 res;
    __asm__ volatile ("extr  %0,%1,16,16"
                      :"=d"(res):"d"(a):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) sint8 Ifx__getbyte1(__packb* a)
{
    sint8 res;
    __asm__ volatile ("ld.w  %0,[%1]0 \n                     extr  %0,%0,0,8"

                      :"=d"(res):"a"(a):"memory");
    return res;

}



static inline __attribute__ ((always_inline)) sint8 Ifx__getbyte2(__packb* a)
{
    sint8 res;
    __asm__ volatile ("ld.w  %0,[%1]0 \n                     extr  %0,%0,8,8"

                      :"=d"(res):"a"(a):"memory");
    return res;

}



static inline __attribute__ ((always_inline)) sint8 Ifx__getbyte3(__packb* a)
{
    sint8 res;
    __asm__ volatile ("ld.w  %0,[%1]0 \n                     extr  %0,%0,16,8"

                      :"=d"(res):"a"(a):"memory");
    return res;

}



static inline __attribute__ ((always_inline)) sint8 Ifx__getbyte4(__packb* a)
{
    sint8 res;
    __asm__ volatile ("ld.w  %0,[%1]0 \n                     extr  %0,%0,24,8"

                      :"=d"(res):"a"(a):"memory");
    return res;

}



static inline __attribute__ ((always_inline)) sint16 Ifx__gethw1(__packhw* a)
{
    sint16 res;
    __asm__ volatile ("ld.w  %0,[%1]0 \n                     extr  %0,%0,0,16"

                      :"=d"(res):"a"(a):"memory");
    return res;
}


static inline __attribute__ ((always_inline)) sint16 Ifx__gethw2(__packhw* a)
{
    sint16 res;
    __asm__ volatile ("ld.w  %0,[%1]0 \n                     extr  %0,%0,16,16"

                      :"=d"(res):"a"(a):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) uint8 Ifx__getubyte1(__upackb* a)
{
    uint8 res;
    __asm__ volatile ("ld.w  %0,[%1]0 \n                     extr  %0,%0,0,8"

                      :"=d"(res):"a"(a):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) uint8 Ifx__getubyte2(__upackb* a)
{
    uint8 res;
    __asm__ volatile ("ld.w  %0,[%1]0 \n                     extr  %0,%0,8,8"

                      :"=d"(res):"a"(a):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) uint8 Ifx__getubyte3(__upackb* a)
{
    uint8 res;
    __asm__ volatile ("ld.w  %0,[%1]0 \n                     extr  %0,%0,16,8"

                      :"=d"(res):"a"(a):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) uint8 Ifx__getubyte4(__upackb* a)
{
    uint8 res;
    __asm__ volatile ("ld.w  %0,[%1]0 \n                     extr  %0,%0,24,8"

                      :"=d"(res):"a"(a):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) uint16 Ifx__getuhw1(__upackhw* a)
{
    uint16 res;
    __asm__ volatile ("ld.w  %0,[%1]0 \n                     extr  %0,%0,0,16"

                      :"=d"(res):"a"(a):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) uint16 Ifx__getuhw2(__upackhw* a)
{
    uint16 res;
    __asm__ volatile ("ld.w  %0,[%1]0 \n                     extr  %0,%0,16,16"

                      :"=d"(res):"a"(a):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) __packb Ifx__initpackb(sint32 a, sint32 b, sint32 c, sint32 d)
{
    __packb res;
    __asm__ volatile ("insert  %3,%3,%4,8,8   \n                    insert  %4,%1,%2,8,8   \n                    insert  %0,%4,%3,16,16 "


                      :"=d"(res):"d"(a), "d"(b), "d"(c), "d"(d):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) __packb Ifx__initpackbl(long a)
{
    return (__packb) a;
}



static inline __attribute__ ((always_inline)) __packhw Ifx__initpackhw(sint16 a, sint16 b)
{
    __packhw res;
    __asm__ volatile ("insert  %0,%1,%2,16,16"
                      :"=d"(res):"d"(a), "d"(b):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) __packhw Ifx__initpackhwl(long a)
{
    return a;
}



static inline __attribute__ ((always_inline)) __upackb Ifx__initupackb( uint32 a, uint32 b, uint32 c, uint32 d)
{
    __upackb res;
    __asm__ volatile ("insert  %3,%3,%4,8,8   \n                    insert  %1,%1,%2,8,8   \n                    insert  %0,%1,%3,16,16"


                      :"=d"(res):"d"(a), "d"(b), "d"(c), "d"(d):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) __upackhw Ifx__initupackhw( uint16 a, uint16 b)
{
    __upackhw res;
    __asm__ volatile ("insert  %0,%1,%2,16,16"
                      :"=d"(res):"d"(a), "d"(b):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) __packb Ifx__insertbyte1(__packb a, sint8 b)
{
    __packb res;
    __asm__ volatile ("insert  %0,%1,%2,0,8"
                      :"=d"(res):"d"(a), "d"(b):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) __packb Ifx__insertbyte2(__packb a, sint8 b)
{
    __packb res;
    __asm__ volatile ("insert  %0,%1,%2,8,8"
                      :"=d"(res):"d"(a), "d"(b):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) __packb Ifx__insertbyte3(__packb a, sint8 b)
{
    __packb res;
    __asm__ volatile ("insert  %0,%1,%2,16,8"
                      :"=d"(res):"d"(a), "d"(b):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) __packb Ifx__insertbyte4(__packb a, sint8 b)
{
    __packb res;
    __asm__ volatile ("insert  %0,%1,%2,24,8"
                      :"=d"(res):"d"(a), "d"(b):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) __upackb Ifx__insertubyte1( __upackb a, uint8 b)
{
    __upackb res;
    __asm__ volatile ("insert  %0,%1,%2,0,8"
                      :"=d"(res):"d"(a), "d"(b):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) __upackb Ifx__insertubyte2( __upackb a, uint8 b)
{
    __upackb res;
    __asm__ volatile ("insert  %0,%1,%2,8,8"
                      :"=d"(res):"d"(a), "d"(b):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) __upackb Ifx__insertubyte3( __upackb a, uint8 b)
{
    __upackb res;
    __asm__ volatile ("insert  %0,%1,%2,16,8"
                      :"=d"(res):"d"(a), "d"(b):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) __upackb Ifx__insertubyte4( __upackb a, uint8 b)
{
    __upackb res;
    __asm__ volatile ("insert  %0,%1,%2,24,8"
                      :"=d"(res):"d"(a), "d"(b):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) __packhw Ifx__inserthw1(__packhw a, sint16 b)
{
    __packhw res;
    __asm__ volatile ("insert  %0,%1,%2,0,16"
                      :"=d"(res):"d"(a), "d"(b):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) __packhw Ifx__inserthw2(__packhw a, sint16 b)
{
    __packhw res;
    __asm__ volatile ("insert  %0,%1,%2,16,16"
                      :"=d"(res):"d"(a), "d"(b):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) __upackhw Ifx__insertuhw1( __upackhw a, uint16 b)
{
    __upackhw res;
    __asm__ volatile ("insert  %0,%1,%2,0,16"
                      :"=d"(res):"d"(a), "d"(b):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) __upackhw Ifx__insertuhw2( __upackhw a, uint16 b)
{
    __upackhw res;
    __asm__ volatile ("insert  %0,%1,%2,16,16"
                      :"=d"(res):"d"(a), "d"(b):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) __packb Ifx__minb(__packb a, __packb b)
{
    __packb res;
    __asm__ volatile ("min.b %0,%1,%2"
                      :"=d"(res):"d"(a), "d"(b):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) __upackb Ifx__minbu( __upackb a, __upackb b)
{
    __upackb res;
    __asm__ volatile ("min.bu %0,%1,%2"
                      :"=d"(res):"d"(a), "d"(b):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) __packhw Ifx__minh(__packhw a, __packhw b)
{
    __packhw res;
    __asm__ volatile ("min.h %0,%1,%2"
                      :"=d"(res):"d"(a), "d"(b):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) __upackhw Ifx__minhu( __upackhw a, __upackhw b)
{
    __upackhw res;
    __asm__ volatile ("min.hu %0,%1,%2"
                      :"=d"(res):"d"(a), "d"(b):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) void Ifx__setbyte1(__packb* a, sint8 b)
{
    __asm__ volatile ("ld.w  %%d15,[%0] \n                    insert  %%d15,%%d15,%1,0,8 \n                    st.w [%0],%%d15"


                      ::"a"(a), "d"(b):"d15", "memory");
}



static inline __attribute__ ((always_inline)) void Ifx__setbyte2(__packb* a, sint8 b)
{
    __asm__ volatile ("ld.w  %%d15,[%0] \n                    insert  %%d15,%%d15,%1,8,8 \n                    st.w [%0],%%d15"


                      ::"a"(a), "d"(b):"d15", "memory");
}



static inline __attribute__ ((always_inline)) void Ifx__setbyte3(__packb* a, sint8 b)
{
    __asm__ volatile ("ld.w  %%d15,[%0] \n                    insert  %%d15,%%d15,%1,16,8 \n                    st.w [%0],%%d15"


                      ::"a"(a), "d"(b):"d15", "memory");
}



static inline __attribute__ ((always_inline)) void Ifx__setbyte4(__packb* a, sint8 b)
{
    __asm__ volatile ("ld.w  %%d15,[%0] \n                    insert  %%d15,%%d15,%1,24,8 \n                    st.w [%0],%%d15"


                      ::"a"(a), "d"(b):"d15", "memory");
}



static inline __attribute__ ((always_inline)) void Ifx__sethw1(__packhw* a, sint16 b)
{
    __asm__ volatile ("ld.w  %%d15,[%0] \n                    insert  %%d15,%%d15,%1,0,16 \n                    st.w [%0],%%d15"


                      ::"a"(a), "d"(b):"d15", "memory");
}



static inline __attribute__ ((always_inline)) void Ifx__sethw2(__packhw* a, sint16 b)
{
    __asm__ volatile ("ld.w  %%d15,[%0] \n                    insert  %%d15,%%d15,%1,16,16 \n                    st.w [%0],%%d15"


                      ::"a"(a), "d"(b):"d15", "memory");
}



static inline __attribute__ ((always_inline)) void Ifx__setubyte1(__upackb* a, uint8 b)
{
    __asm__ volatile ("ld.w  %%d15,[%0] \n                    insert  %%d15,%%d15,%1,0,8 \n                    st.w [%0],%%d15"


                      ::"a"(a), "d"(b):"d15", "memory");
}



static inline __attribute__ ((always_inline)) void Ifx__setubyte2(__upackb* a, uint8 b)
{
    __asm__ volatile ("ld.w  %%d15,[%0] \n                    insert  %%d15,%%d15,%1,8,8 \n                    st.w [%0],%%d15"


                      ::"a"(a), "d"(b):"d15", "memory");
}



static inline __attribute__ ((always_inline)) void Ifx__setubyte3(__upackb* a, uint8 b)
{
    __asm__ volatile ("ld.w  %%d15,[%0] \n                    insert  %%d15,%%d15,%1,16,8 \n                    st.w [%0],%%d15"


                      ::"a"(a), "d"(b):"d15", "memory");
}



static inline __attribute__ ((always_inline)) void Ifx__setubyte4(__upackb* a, uint8 b)
{
    __asm__ volatile ("ld.w  %%d15,[%0] \n                    insert  %%d15,%%d15,%1,24,8 \n                    st.w [%0],%%d15"


                      ::"a"(a), "d"(b):"d15", "memory");
}



static inline __attribute__ ((always_inline)) void Ifx__setuhw1(__upackhw* a, uint16 b)
{
    __asm__ volatile ("ld.w  %%d15,[%0] \n                    insert  %%d15,%%d15,%1,0,16 \n                    st.w [%0],%%d15"


                      ::"a"(a), "d"(b):"d15", "memory");
}



static inline __attribute__ ((always_inline)) void Ifx__setuhw2(__upackhw* a, uint16 b)
{
    __asm__ volatile ("ld.w  %%d15,[%0] \n                    insert  %%d15,%%d15,%1,16,16 \n                    st.w [%0],%%d15"


                      ::"a"(a), "d"(b):"d15", "memory");
}
# 1251 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCpu_IntrinsicsGnuc.h" 3
#define Ifx__abs(a) __builtin_abs(a)



static inline __attribute__ ((always_inline)) sint32 Ifx__absdif(sint32 a, sint32 b)
{
    sint32 res;
    __asm__ volatile ("absdif %0, %1, %2": "=d" (res) : "d" (a), "d" (b));
    return res;
}



static inline __attribute__ ((always_inline)) sint32 Ifx__abss(sint32 a)
{
    sint32 res;
    __asm__ volatile ("abss %0, %1": "=d" (res) : "d" (a));
    return res;
}



static inline __attribute__ ((always_inline)) sint32 Ifx__clo(sint32 a)
{
    sint32 res;
    __asm__ volatile ("clo %0,%1":"=d"(res):"d"(a));
    return res;
}



static inline __attribute__ ((always_inline)) sint32 Ifx__cls(sint32 a)
{
    sint32 res;
    __asm__ volatile ("cls %0,%1":"=d"(res):"d"(a));
    return res;
}



#define Ifx__clz(a) __builtin_clz(a)



static inline __attribute__ ((always_inline)) double Ifx__fabs(double d)
{
    double res;
    __asm__ volatile ("insert  %0,%1,0,31,1": "=d" (res) : "d" (d):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) float Ifx__fabsf(float f)
{
    float res;
    __asm__ volatile ("insert  %0,%1,0,31,1": "=d" (res) : "d" (f):"memory");
    return res;
}
# 1326 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCpu_IntrinsicsGnuc.h" 3
static inline __attribute__ ((always_inline)) sint32 Ifx__parity(sint32 a)
{
    sint32 res;
    __asm__ volatile ("parity  %0,%1": "=d" (res) : "d" (a):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) sint8 Ifx__satb(sint32 a)
{
    sint8 res;
    __asm__ volatile ("sat.b %0,%1":"=d"(res):"d"(a));
    return res;
}



static inline __attribute__ ((always_inline)) uint8 Ifx__satbu(sint32 a)
{
    uint8 res;
    __asm__ volatile ("sat.bu %0,%1":"=d"(res):"d"(a));
    return res;
}



static inline __attribute__ ((always_inline)) sint16 Ifx__sath(sint32 a)
{
    sint8 res;
    __asm__ volatile ("sat.h %0,%1":"=d"(res):"d"(a));
    return res;
}



static inline __attribute__ ((always_inline)) uint16 Ifx__sathu(sint32 a)
{
    sint8 res;
    __asm__ volatile ("sat.hu %0,%1":"=d"(res):"d"(a));
    return res;
}
# 1379 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCpu_IntrinsicsGnuc.h" 3
static inline __attribute__ ((always_inline)) sint32 Ifx__adds(sint32 a, sint32 b)
{
    sint32 res;
    __asm__ volatile ("adds %0, %1, %2": "=d" (res) : "d" (a), "d" (b));
    return res;
}



static inline __attribute__ ((always_inline)) uint32 Ifx__addsu(uint32 a, uint32 b)
{
    uint32 res;
    __asm__ volatile ("adds.u %0, %1, %2": "=d" (res) : "d" (a), "d" (b));
    return res;
}



static inline __attribute__ ((always_inline)) sint32 Ifx__subs(sint32 a, sint32 b)
{
    sint32 res;
    __asm__ volatile ("subs %0, %1, %2": "=d" (res) : "d" (a), "d" (b));
    return res;
}



static inline __attribute__ ((always_inline)) uint32 Ifx__subsu(uint32 a, uint32 b)
{
    uint32 res;
    __asm__ volatile ("subs.u %0, %1, %2": "=d" (res) : "d" (a), "d" (b));
    return res;
}
# 1425 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCpu_IntrinsicsGnuc.h" 3
static inline __attribute__ ((always_inline)) void Ifx__debug(void)
{
    __asm__ volatile ("debug" : : : "memory");
}



#define Ifx__mem_barrier __asm__ volatile("":::"memory");



static inline __attribute__ ((always_inline)) void Ifx__dsync(void)
{
    __asm__ volatile ("dsync" : : : "memory");
}



static inline __attribute__ ((always_inline)) void Ifx__isync(void)
{
    __asm__ volatile ("isync" : : : "memory");
}



static inline __attribute__ ((always_inline)) void Ifx__ldmst(volatile void* address, uint32 mask, uint32 value)
{
    __asm__ volatile("mov %H2,%1 \n                  ldmst [%0]0,%A2"

                     ::"a"(address), "d"(mask), "d"((long long)value));
}



static inline __attribute__ ((always_inline)) void Ifx__nop(void)
{
    __asm__ volatile ("nop" : : : "memory");
}



static inline __attribute__ ((always_inline)) void Ifx__nops(void* cnt)
{
    __asm__ volatile ("0: nop \n        loop %0,0b"

                      ::"a"(((sint8*)cnt)-1));
}



static inline __attribute__ ((always_inline)) void Ifx__rslcx(void)
{
    __asm__ volatile ("rslcx" : : : "memory");
}



static inline __attribute__ ((always_inline)) void Ifx__svlcx(void)
{
    __asm__ volatile ("svlcx" : : : "memory");
}



static inline __attribute__ ((always_inline)) uint32 Ifx__swap(void* place, uint32 value)
{
    uint32 res;
    __asm__ volatile("swap.w [%1]0,%2":"=d"(res):"a"(place), "0"(value));
    return res;
}



#define Ifx__NOP(n) __asm(".rept " #n "\n\tnop\n\t.endr\n")




#define Ifx__setareg(areg,val) { uint32 reg_val= (uint32)val; __asm__ volatile (" mov.a\t %%"#areg",%0"::"d"(reg_val)); }





static inline __attribute__ ((always_inline)) void Ifx__stopPerfCounters(void)
{
    __asm__ volatile("mov %%d0,0\n                  mtcr 0xFC00,%%d0\n                  isync\n"


            : : :"d0");
}







static inline __attribute__ ((always_inline)) unsigned int Ifx__cmpAndSwap (unsigned int volatile *address,
           unsigned int value, unsigned int condition)
{

  __extension__ unsigned long long reg64
    = value | (unsigned long long) condition << 32;

  __asm__ __volatile__ ("cmpswap.w [%[addr]]0, %A[reg]"
                        : [reg] "+d" (reg64)
                        : [addr] "a" (address)
                        : "memory");
    return reg64;
}
# 1548 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCpu_IntrinsicsGnuc.h" 3
static inline __attribute__ ((always_inline)) float32 Ifx__fixpoint_to_float32(fract value, sint32 shift)
{
    float32 result;

    __asm__ volatile("q31tof %0, %1, %2": "=d" (result) : "d" (value), "d" (shift));
    return result;
}

static inline __attribute__ ((always_inline)) void* Ifx__getA11(void)
{
    uint32 *res;
    __asm__ volatile ("mov.aa %0, %%a11": "=a" (res) : :"a11");
    return res;
}

static inline __attribute__ ((always_inline)) void Ifx__setStackPointer(void *stackAddr)
{
    __asm__ volatile ("mov.aa %%a10, %0": : "a" (stackAddr) :"a10");
}

static inline __attribute__ ((always_inline)) uint32 Ifx__crc32(uint32 b, uint32 a)
{
    uint32 returnvalue = 0;

    __asm__ volatile ("CRC32 %0,%1,%2" : "=d" (returnvalue) : "d"(b), "d"(a));

   return returnvalue;
}

static inline __attribute__ ((always_inline)) uint32 IfxCpu_calculateCrc32(uint32 *startaddress, uint8 length)
{
    uint32 returnvalue = 0;
    for (;length > 0; length--)
    {

        __asm__ ("CRC32 %0,%0,%1" : "+d" (returnvalue) : "d" (*startaddress));
        startaddress++;
    }
    return returnvalue;
}

static inline __attribute__ ((always_inline)) uint32 IfxCpu_getRandomVal(uint32 a, uint32 x, uint32 m)
{
 uint32 result;
    __asm("      mul.u     %%e14,%1,%2       # d15 = Eh; d14 = El    \n"
        "        mov       %%d12,%%d14       #   e12 = El            \n"
        "        mov       %%d13, 0          #                       \n"
        "        madd.u    %%e14,%%e12,%%d15, 5 # e14 = El + 5 * d15    \n"
        " cmp_m_%=: jge.u     %%d14,%3,sub_m_%=    #                       \n"
        "        jz        %%d15,done_%=        #                       \n"
        " sub_m_%=: subx      %%d14,%%d14,%3    #  e12=e12-m            \n"
        "        subc      %%d15,%%d15,%%d13 # d13=d13-0             \n"
        "        loopu     cmp_m_%=             #                       \n"
        " done_%=:  mov       %0,%%d14          #                       \n"
        : "=d"(result) : "d"(a), "d"(x), "d"(m) : "d12","d13","d14","d15");
    return result;
}

static inline __attribute__ ((always_inline)) sint32 Ifx__popcnt(sint32 a)
{
 sint32 res;
 __asm__ volatile ("popcnt %0,%1":"=d"(res):"d"(a));
  return res;
}



static inline __attribute__ ((always_inline)) void Ifx__cacheai(uint8* p)
{
    __asm__ volatile("cachea.i [%0]0"::"a"(p));
}





#define __non_return_call Ifx__non_return_call



#define __jump_and_link Ifx__jump_and_link



#define __moveToDataParam0 Ifx__moveToDataParam0



#define __moveToDataParamRet Ifx__moveToDataParamRet



#define __getDataParamRet Ifx__getDataParamRet



#define __moveToAddrParam0 Ifx__moveToAddrParam0



#define __jumpToFunction Ifx__jumpToFunction



#define __jumpToFunctionWithLink Ifx__jumpToFunctionWithLink



#define __jumpBackToLink Ifx__jumpBackToLink



#define __minX Ifx__minX



#define __maxX Ifx__maxX



#define __saturateX Ifx__saturateX



#define __checkrangeX Ifx__checkrangeX



#define __saturate Ifx__saturate



#define __saturateu Ifx__saturateu



#define __max Ifx__max



#define __maxs Ifx__maxs



#define __maxu Ifx__maxu



#define __min Ifx__min



#define __mins Ifx__mins



#define __minu Ifx__minu



#define __sqrtf Ifx__sqrtf



#define __sqrf Ifx__sqrf



#define __checkrange Ifx__checkrange



#define __roundf Ifx__roundf



#define __absf Ifx__absf



#define __saturatef Ifx__saturatef



#define __minf Ifx__minf



#define __maxf Ifx__maxf



#define __checkrangef Ifx__checkrangef



#define __abs_stdreal Ifx__abs_stdreal



#define __saturate_stdreal Ifx__saturate_stdreal



#define __min_stdreal Ifx__min_stdreal



#define __max_stdreal Ifx__max_stdreal



#define __neqf Ifx__neqf



#define __leqf Ifx__leqf



#define __geqf Ifx__geqf



#define __clssf Ifx__clssf



#define __fract_to_float Ifx__fract_to_float



#define __fract_to_sfract Ifx__fract_to_sfract



#define __float_to_sfract Ifx__float_to_sfract



#define __float_to_fract Ifx__float_to_fract



#define __getfract Ifx__getfract



#define __mac_r_sf Ifx__mac_r_sf



#define __mac_sf Ifx__mac_sf



#define __mulfractfract Ifx__mulfractfract



#define __mulfractlong Ifx__mulfractlong



#define __round16 Ifx__round16



#define __s16_to_sfract Ifx__s16_to_sfract



#define __sfract_to_s16 Ifx__sfract_to_s16



#define __sfract_to_u16 Ifx__sfract_to_u16



#define __shaaccum Ifx__shaaccum



#define __shafracts Ifx__shafracts



#define __shasfracts Ifx__shasfracts



#define __u16_to_sfract Ifx__u16_to_sfract



#define __extr Ifx__extr



#define __extru Ifx__extru



#define __getbit Ifx__getbit



#define __ins Ifx__ins



#define __insert Ifx__insert



#define __insn Ifx__insn



#define __putbit Ifx__putbit



#define __imaskldmst Ifx__imaskldmst







#define __disable Ifx__disable



#define __disable_and_save Ifx__disable_and_save



#define __enable Ifx__enable



#define __restore Ifx__restore
# 1904 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCpu_IntrinsicsGnuc.h" 3
#define __cacheawi Ifx__cacheawi



#define __cacheiwi Ifx__cacheiwi



#define __cacheawi_bo_post_inc Ifx__cacheawi_bo_post_inc



#define __mulsc Ifx__mulsc



#define __rol Ifx__rol



#define __ror Ifx__ror



#define __extractbyte1 Ifx__extractbyte1



#define __extractbyte2 Ifx__extractbyte2



#define __extractbyte3 Ifx__extractbyte3



#define __extractbyte4 Ifx__extractbyte4



#define __extracthw1 Ifx__extracthw1



#define __extracthw2 Ifx__extracthw2



#define __extractubyte1 Ifx__extractubyte1



#define __extractubyte2 Ifx__extractubyte2



#define __extractubyte3 Ifx__extractubyte3



#define __extractubyte4 Ifx__extractubyte4



#define __extractuhw1 Ifx__extractuhw1



#define __extractuhw2 Ifx__extractuhw2



#define __getbyte1 Ifx__getbyte1



#define __getbyte2 Ifx__getbyte2



#define __getbyte3 Ifx__getbyte3



#define __getbyte4 Ifx__getbyte4



#define __gethw1 Ifx__gethw1



#define __gethw2 Ifx__gethw2



#define __getubyte1 Ifx__getubyte1



#define __getubyte2 Ifx__getubyte2



#define __getubyte3 Ifx__getubyte3



#define __getubyte4 Ifx__getubyte4



#define __getuhw1 Ifx__getuhw1



#define __getuhw2 Ifx__getuhw2



#define __setbyte1 Ifx__setbyte1



#define __setbyte2 Ifx__setbyte2



#define __setbyte3 Ifx__setbyte3



#define __setbyte4 Ifx__setbyte4



#define __sethw1 Ifx__sethw1



#define __sethw2 Ifx__sethw2



#define __setubyte1 Ifx__setubyte1



#define __setubyte2 Ifx__setubyte2



#define __setubyte3 Ifx__setubyte3



#define __setubyte4 Ifx__setubyte4



#define __setuhw1 Ifx__setuhw1



#define __setuhw2 Ifx__setuhw2



#define __minhu Ifx__minhu



#define __minh Ifx__minh



#define __minbu Ifx__minbu



#define __minb Ifx__minb



#define __insertuhw2 Ifx__insertuhw2



#define __insertuhw1 Ifx__insertuhw1



#define __inserthw2 Ifx__inserthw2



#define __inserthw1 Ifx__inserthw1



#define __insertubyte4 Ifx__insertubyte4



#define __insertubyte3 Ifx__insertubyte3



#define __insertubyte2 Ifx__insertubyte2



#define __insertubyte1 Ifx__insertubyte1



#define __insertbyte4 Ifx__insertbyte4



#define __insertbyte3 Ifx__insertbyte3



#define __insertbyte2 Ifx__insertbyte2



#define __insertbyte1 Ifx__insertbyte1



#define __initupackhw Ifx__initupackhw



#define __initupackb Ifx__initupackb



#define __initpackhwl Ifx__initpackhwl



#define __initpackhw Ifx__initpackhw



#define __initpackbl Ifx__initpackbl



#define __initpackb Ifx__initpackb



#define __absb Ifx__absb



#define __absh Ifx__absh



#define __abssh Ifx__abssh




#define __abs Ifx__abs



#define __absdif Ifx__absdif



#define __abss Ifx__abss



#define __clo Ifx__clo



#define __cls Ifx__cls



#define __clz Ifx__clz



#define __fabs Ifx__fabs



#define __fabsf Ifx__fabsf
# 2213 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCpu_IntrinsicsGnuc.h" 3
#define __parity Ifx__parity



#define __satb Ifx__satb



#define __satbu Ifx__satbu



#define __sath Ifx__sath



#define __sathu Ifx__sathu



#define __adds Ifx__adds



#define __addsu Ifx__addsu



#define __subs Ifx__subs



#define __subsu Ifx__subsu







#define __mem_barrier Ifx__mem_barrier



#define __dsync Ifx__dsync



#define __isync Ifx__isync



#define __ldmst Ifx__ldmst



#define __nop Ifx__nop



#define __nops Ifx__nops



#define __rslcx Ifx__rslcx



#define __svlcx Ifx__svlcx



#define __swap Ifx__swap



#define NOP Ifx__NOP



#define __setareg Ifx__setareg



#define __stopPerfCounters Ifx__stopPerfCounters



#define __cmpAndSwap Ifx__cmpAndSwap



#define __fixpoint_to_float32 Ifx__fixpoint_to_float32



#define __getA11 Ifx__getA11



#define __setStackPointer Ifx__setStackPointer



#define __crc32 Ifx__crc32



#define __popcnt Ifx__popcnt



#define __cacheai Ifx__cacheai
# 57 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu_intrinsics.h" 2 3
# 68 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu_intrinsics.h" 3
#define IFX_ALIGN_8 (1)
#define IFX_ALIGN_16 (2)
#define IFX_ALIGN_32 (4)
#define IFX_ALIGN_64 (8)
#define IFX_ALIGN_128 (16)
#define IFX_ALIGN_256 (32)

#define Ifx_AlignOn256(Size) ((((Size) + (IFX_ALIGN_256 - 1)) & (~(IFX_ALIGN_256 - 1))))
#define Ifx_AlignOn128(Size) ((((Size) + (IFX_ALIGN_128 - 1)) & (~(IFX_ALIGN_128 - 1))))
#define Ifx_AlignOn64(Size) ((((Size) + (IFX_ALIGN_64 - 1)) & (~(IFX_ALIGN_64 - 1))))
#define Ifx_AlignOn32(Size) ((((Size) + (IFX_ALIGN_32 - 1)) & (~(IFX_ALIGN_32 - 1))))
#define Ifx_AlignOn16(Size) ((((Size) + (IFX_ALIGN_16 - 1)) & (~(IFX_ALIGN_16 - 1))))
#define Ifx_AlignOn8(Size) ((((Size) + (IFX_ALIGN_8 - 1)) & (~(IFX_ALIGN_8 - 1))))

#define Ifx_COUNTOF(x) (sizeof(x) / sizeof(x[0]))







static inline __attribute__ ((always_inline)) void *__cx_to_addr(uint32 cx)
{
    uint32 seg_nr = Ifx__extru(cx, 16, 4);
    return (void *)Ifx__insert(seg_nr << 28, cx, 6, 16);
}






static inline __attribute__ ((always_inline)) uint32 __addr_to_cx(void *addr)
{
    uint32 seg_nr, seg_idx;
    seg_nr = Ifx__extru((int)addr, 28, 4) << 16;
    seg_idx = Ifx__extru((int)addr, 6, 16);
    return seg_nr | seg_idx;
}



static inline __attribute__ ((always_inline)) void __ldmst_c(volatile void *address, unsigned mask, unsigned value)
{
    *(volatile uint32 *)address = (*(volatile uint32 *)address & ~(mask)) | (mask & value);
}




static inline __attribute__ ((always_inline)) uint32 __ld32(void *addr)
{
    return *(volatile uint32 *)addr;
}




static inline __attribute__ ((always_inline)) void __st32(void *addr, uint32 value)
{
    *(volatile uint32 *)addr = value;
}




static inline __attribute__ ((always_inline)) uint64 __ld64(void *addr)
{
    return *(volatile uint64 *)addr;
}




static inline __attribute__ ((always_inline)) void __st64(void *addr, uint64 value)
{
    *(volatile uint64 *)addr = value;
}




static inline __attribute__ ((always_inline)) void __ld64_lu(void *addr, uint32 *valueLower, uint32 *valueUpper)
{
    register uint64 value;
    value = __ld64(addr);
    *valueLower = (uint32)value;
    *valueUpper = (uint32)(value >> 32);
}




static inline __attribute__ ((always_inline)) void __st64_lu(void *addr, uint32 valueLower, uint32 valueUpper)
{
    register uint64 value = ((uint64)valueUpper << 32) | valueLower;
    __st64(addr, value);
}
# 57 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu_cfg.h" 2 3
# 65 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu_cfg.h" 3
#define IFXCPU_NUM_MODULES (3)



#define IFXCPU_CACHABLE_FLASH_SEGMENT (8)



#define IFXCPU_CACHABLE_LMU_SEGMENT (9)
# 95 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu_cfg.h" 3
#define IFXCPU_CFG_ALLCORE_DONE (0x7)





#define IFXCPU_ALLCORE_DONE IFXCPU_CFG_ALLCORE_DONE
# 116 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu_cfg.h" 3
typedef enum
{
    IfxCpu_DBGST_HALT_run = 0,
    IfxCpu_DBGST_HALT_halt = 1
} IfxCpu_DBGST_HALT;



typedef enum
{
    IfxCpu_Id_0 = 0,
    IfxCpu_Id_1 = 1,
    IfxCpu_Id_2 = 2,
    IfxCpu_Id_none
} IfxCpu_Id;



typedef enum
{
    IfxCpu_Index_0 = 0,
    IfxCpu_Index_1 = 1,
    IfxCpu_Index_2 = 2,
    IfxCpu_Index_none
} IfxCpu_Index;



typedef enum
{
    IfxCpu_PMCSR_PMST_normalMode = 1,
    IfxCpu_PMCSR_PMST_idleModeRequest = 2,
    IfxCpu_PMCSR_PMST_idleMode = 3,
    IfxCpu_PMCSR_PMST_sleepModeRequest = 4,
    IfxCpu_PMCSR_PMST_standbyModeRequest = 6
} IfxCpu_PMCSR_PMST;



typedef enum
{
    IfxCpu_ResourceCpu_0 = IfxCpu_Index_0,
    IfxCpu_ResourceCpu_1 = IfxCpu_Index_1,
    IfxCpu_ResourceCpu_2 = IfxCpu_Index_2,
    IfxCpu_ResourceCpu_none = IfxCpu_Index_none
} IfxCpu_ResourceCpu;





extern const IfxModule_IndexMap IfxCpu_cfg_indexMap[(3)];
# 70 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 2 3



# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 1 3
# 50 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_H 

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\Ifx_Cfg.h" 1 3
# 53 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 2 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxScu_bf.h" 1 3
# 28 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxScu_bf.h" 3
#define IFXSCU_BF_H 1






#define IFX_SCU_ACCEN0_EN0_LEN (1u)


#define IFX_SCU_ACCEN0_EN0_MSK (0x1u)


#define IFX_SCU_ACCEN0_EN0_OFF (0u)


#define IFX_SCU_ACCEN0_EN10_LEN (1u)


#define IFX_SCU_ACCEN0_EN10_MSK (0x1u)


#define IFX_SCU_ACCEN0_EN10_OFF (10u)


#define IFX_SCU_ACCEN0_EN11_LEN (1u)


#define IFX_SCU_ACCEN0_EN11_MSK (0x1u)


#define IFX_SCU_ACCEN0_EN11_OFF (11u)


#define IFX_SCU_ACCEN0_EN12_LEN (1u)


#define IFX_SCU_ACCEN0_EN12_MSK (0x1u)


#define IFX_SCU_ACCEN0_EN12_OFF (12u)


#define IFX_SCU_ACCEN0_EN13_LEN (1u)


#define IFX_SCU_ACCEN0_EN13_MSK (0x1u)


#define IFX_SCU_ACCEN0_EN13_OFF (13u)


#define IFX_SCU_ACCEN0_EN14_LEN (1u)


#define IFX_SCU_ACCEN0_EN14_MSK (0x1u)


#define IFX_SCU_ACCEN0_EN14_OFF (14u)


#define IFX_SCU_ACCEN0_EN15_LEN (1u)


#define IFX_SCU_ACCEN0_EN15_MSK (0x1u)


#define IFX_SCU_ACCEN0_EN15_OFF (15u)


#define IFX_SCU_ACCEN0_EN16_LEN (1u)


#define IFX_SCU_ACCEN0_EN16_MSK (0x1u)


#define IFX_SCU_ACCEN0_EN16_OFF (16u)


#define IFX_SCU_ACCEN0_EN17_LEN (1u)


#define IFX_SCU_ACCEN0_EN17_MSK (0x1u)


#define IFX_SCU_ACCEN0_EN17_OFF (17u)


#define IFX_SCU_ACCEN0_EN18_LEN (1u)


#define IFX_SCU_ACCEN0_EN18_MSK (0x1u)


#define IFX_SCU_ACCEN0_EN18_OFF (18u)


#define IFX_SCU_ACCEN0_EN19_LEN (1u)


#define IFX_SCU_ACCEN0_EN19_MSK (0x1u)


#define IFX_SCU_ACCEN0_EN19_OFF (19u)


#define IFX_SCU_ACCEN0_EN1_LEN (1u)


#define IFX_SCU_ACCEN0_EN1_MSK (0x1u)


#define IFX_SCU_ACCEN0_EN1_OFF (1u)


#define IFX_SCU_ACCEN0_EN20_LEN (1u)


#define IFX_SCU_ACCEN0_EN20_MSK (0x1u)


#define IFX_SCU_ACCEN0_EN20_OFF (20u)


#define IFX_SCU_ACCEN0_EN21_LEN (1u)


#define IFX_SCU_ACCEN0_EN21_MSK (0x1u)


#define IFX_SCU_ACCEN0_EN21_OFF (21u)


#define IFX_SCU_ACCEN0_EN22_LEN (1u)


#define IFX_SCU_ACCEN0_EN22_MSK (0x1u)


#define IFX_SCU_ACCEN0_EN22_OFF (22u)


#define IFX_SCU_ACCEN0_EN23_LEN (1u)


#define IFX_SCU_ACCEN0_EN23_MSK (0x1u)


#define IFX_SCU_ACCEN0_EN23_OFF (23u)


#define IFX_SCU_ACCEN0_EN24_LEN (1u)


#define IFX_SCU_ACCEN0_EN24_MSK (0x1u)


#define IFX_SCU_ACCEN0_EN24_OFF (24u)


#define IFX_SCU_ACCEN0_EN25_LEN (1u)


#define IFX_SCU_ACCEN0_EN25_MSK (0x1u)


#define IFX_SCU_ACCEN0_EN25_OFF (25u)


#define IFX_SCU_ACCEN0_EN26_LEN (1u)


#define IFX_SCU_ACCEN0_EN26_MSK (0x1u)


#define IFX_SCU_ACCEN0_EN26_OFF (26u)


#define IFX_SCU_ACCEN0_EN27_LEN (1u)


#define IFX_SCU_ACCEN0_EN27_MSK (0x1u)


#define IFX_SCU_ACCEN0_EN27_OFF (27u)


#define IFX_SCU_ACCEN0_EN28_LEN (1u)


#define IFX_SCU_ACCEN0_EN28_MSK (0x1u)


#define IFX_SCU_ACCEN0_EN28_OFF (28u)


#define IFX_SCU_ACCEN0_EN29_LEN (1u)


#define IFX_SCU_ACCEN0_EN29_MSK (0x1u)


#define IFX_SCU_ACCEN0_EN29_OFF (29u)


#define IFX_SCU_ACCEN0_EN2_LEN (1u)


#define IFX_SCU_ACCEN0_EN2_MSK (0x1u)


#define IFX_SCU_ACCEN0_EN2_OFF (2u)


#define IFX_SCU_ACCEN0_EN30_LEN (1u)


#define IFX_SCU_ACCEN0_EN30_MSK (0x1u)


#define IFX_SCU_ACCEN0_EN30_OFF (30u)


#define IFX_SCU_ACCEN0_EN31_LEN (1u)


#define IFX_SCU_ACCEN0_EN31_MSK (0x1u)


#define IFX_SCU_ACCEN0_EN31_OFF (31u)


#define IFX_SCU_ACCEN0_EN3_LEN (1u)


#define IFX_SCU_ACCEN0_EN3_MSK (0x1u)


#define IFX_SCU_ACCEN0_EN3_OFF (3u)


#define IFX_SCU_ACCEN0_EN4_LEN (1u)


#define IFX_SCU_ACCEN0_EN4_MSK (0x1u)


#define IFX_SCU_ACCEN0_EN4_OFF (4u)


#define IFX_SCU_ACCEN0_EN5_LEN (1u)


#define IFX_SCU_ACCEN0_EN5_MSK (0x1u)


#define IFX_SCU_ACCEN0_EN5_OFF (5u)


#define IFX_SCU_ACCEN0_EN6_LEN (1u)


#define IFX_SCU_ACCEN0_EN6_MSK (0x1u)


#define IFX_SCU_ACCEN0_EN6_OFF (6u)


#define IFX_SCU_ACCEN0_EN7_LEN (1u)


#define IFX_SCU_ACCEN0_EN7_MSK (0x1u)


#define IFX_SCU_ACCEN0_EN7_OFF (7u)


#define IFX_SCU_ACCEN0_EN8_LEN (1u)


#define IFX_SCU_ACCEN0_EN8_MSK (0x1u)


#define IFX_SCU_ACCEN0_EN8_OFF (8u)


#define IFX_SCU_ACCEN0_EN9_LEN (1u)


#define IFX_SCU_ACCEN0_EN9_MSK (0x1u)


#define IFX_SCU_ACCEN0_EN9_OFF (9u)


#define IFX_SCU_ARSTDIS_STM0DIS_LEN (1u)


#define IFX_SCU_ARSTDIS_STM0DIS_MSK (0x1u)


#define IFX_SCU_ARSTDIS_STM0DIS_OFF (0u)


#define IFX_SCU_ARSTDIS_STM1DIS_LEN (1u)


#define IFX_SCU_ARSTDIS_STM1DIS_MSK (0x1u)


#define IFX_SCU_ARSTDIS_STM1DIS_OFF (1u)


#define IFX_SCU_ARSTDIS_STM2DIS_LEN (1u)


#define IFX_SCU_ARSTDIS_STM2DIS_MSK (0x1u)


#define IFX_SCU_ARSTDIS_STM2DIS_OFF (2u)


#define IFX_SCU_CCUCON0_BAUD1DIV_LEN (4u)


#define IFX_SCU_CCUCON0_BAUD1DIV_MSK (0xfu)


#define IFX_SCU_CCUCON0_BAUD1DIV_OFF (0u)


#define IFX_SCU_CCUCON0_BAUD2DIV_LEN (4u)


#define IFX_SCU_CCUCON0_BAUD2DIV_MSK (0xfu)


#define IFX_SCU_CCUCON0_BAUD2DIV_OFF (4u)


#define IFX_SCU_CCUCON0_CLKSEL_LEN (2u)


#define IFX_SCU_CCUCON0_CLKSEL_MSK (0x3u)


#define IFX_SCU_CCUCON0_CLKSEL_OFF (28u)


#define IFX_SCU_CCUCON0_FSI2DIV_LEN (2u)


#define IFX_SCU_CCUCON0_FSI2DIV_MSK (0x3u)


#define IFX_SCU_CCUCON0_FSI2DIV_OFF (20u)


#define IFX_SCU_CCUCON0_FSIDIV_LEN (2u)


#define IFX_SCU_CCUCON0_FSIDIV_MSK (0x3u)


#define IFX_SCU_CCUCON0_FSIDIV_OFF (24u)


#define IFX_SCU_CCUCON0_LCK_LEN (1u)


#define IFX_SCU_CCUCON0_LCK_MSK (0x1u)


#define IFX_SCU_CCUCON0_LCK_OFF (31u)


#define IFX_SCU_CCUCON0_LPDIV_LEN (4u)


#define IFX_SCU_CCUCON0_LPDIV_MSK (0xfu)


#define IFX_SCU_CCUCON0_LPDIV_OFF (12u)


#define IFX_SCU_CCUCON0_SPBDIV_LEN (4u)


#define IFX_SCU_CCUCON0_SPBDIV_MSK (0xfu)


#define IFX_SCU_CCUCON0_SPBDIV_OFF (16u)


#define IFX_SCU_CCUCON0_SRIDIV_LEN (4u)


#define IFX_SCU_CCUCON0_SRIDIV_MSK (0xfu)


#define IFX_SCU_CCUCON0_SRIDIV_OFF (8u)


#define IFX_SCU_CCUCON0_UP_LEN (1u)


#define IFX_SCU_CCUCON0_UP_MSK (0x1u)


#define IFX_SCU_CCUCON0_UP_OFF (30u)


#define IFX_SCU_CCUCON1_ASCLINFDIV_LEN (4u)


#define IFX_SCU_CCUCON1_ASCLINFDIV_MSK (0xfu)


#define IFX_SCU_CCUCON1_ASCLINFDIV_OFF (20u)


#define IFX_SCU_CCUCON1_ASCLINSDIV_LEN (4u)


#define IFX_SCU_CCUCON1_ASCLINSDIV_MSK (0xfu)


#define IFX_SCU_CCUCON1_ASCLINSDIV_OFF (24u)


#define IFX_SCU_CCUCON1_CANDIV_LEN (4u)


#define IFX_SCU_CCUCON1_CANDIV_MSK (0xfu)


#define IFX_SCU_CCUCON1_CANDIV_OFF (0u)


#define IFX_SCU_CCUCON1_ERAYDIV_LEN (4u)


#define IFX_SCU_CCUCON1_ERAYDIV_MSK (0xfu)


#define IFX_SCU_CCUCON1_ERAYDIV_OFF (4u)


#define IFX_SCU_CCUCON1_ETHDIV_LEN (4u)


#define IFX_SCU_CCUCON1_ETHDIV_MSK (0xfu)


#define IFX_SCU_CCUCON1_ETHDIV_OFF (16u)


#define IFX_SCU_CCUCON1_GTMDIV_LEN (4u)


#define IFX_SCU_CCUCON1_GTMDIV_MSK (0xfu)


#define IFX_SCU_CCUCON1_GTMDIV_OFF (12u)


#define IFX_SCU_CCUCON1_INSEL_LEN (2u)


#define IFX_SCU_CCUCON1_INSEL_MSK (0x3u)


#define IFX_SCU_CCUCON1_INSEL_OFF (28u)


#define IFX_SCU_CCUCON1_LCK_LEN (1u)


#define IFX_SCU_CCUCON1_LCK_MSK (0x1u)


#define IFX_SCU_CCUCON1_LCK_OFF (31u)


#define IFX_SCU_CCUCON1_STMDIV_LEN (4u)


#define IFX_SCU_CCUCON1_STMDIV_MSK (0xfu)


#define IFX_SCU_CCUCON1_STMDIV_OFF (8u)


#define IFX_SCU_CCUCON1_UP_LEN (1u)


#define IFX_SCU_CCUCON1_UP_MSK (0x1u)


#define IFX_SCU_CCUCON1_UP_OFF (30u)


#define IFX_SCU_CCUCON2_BBBDIV_LEN (4u)


#define IFX_SCU_CCUCON2_BBBDIV_MSK (0xfu)


#define IFX_SCU_CCUCON2_BBBDIV_OFF (0u)


#define IFX_SCU_CCUCON2_LCK_LEN (1u)


#define IFX_SCU_CCUCON2_LCK_MSK (0x1u)


#define IFX_SCU_CCUCON2_LCK_OFF (31u)


#define IFX_SCU_CCUCON2_UP_LEN (1u)


#define IFX_SCU_CCUCON2_UP_MSK (0x1u)


#define IFX_SCU_CCUCON2_UP_OFF (30u)


#define IFX_SCU_CCUCON3_LCK_LEN (1u)


#define IFX_SCU_CCUCON3_LCK_MSK (0x1u)


#define IFX_SCU_CCUCON3_LCK_OFF (31u)


#define IFX_SCU_CCUCON3_PLLDIV_LEN (6u)


#define IFX_SCU_CCUCON3_PLLDIV_MSK (0x3fu)


#define IFX_SCU_CCUCON3_PLLDIV_OFF (0u)


#define IFX_SCU_CCUCON3_PLLERAYDIV_LEN (6u)


#define IFX_SCU_CCUCON3_PLLERAYDIV_MSK (0x3fu)


#define IFX_SCU_CCUCON3_PLLERAYDIV_OFF (8u)


#define IFX_SCU_CCUCON3_PLLERAYSEL_LEN (2u)


#define IFX_SCU_CCUCON3_PLLERAYSEL_MSK (0x3u)


#define IFX_SCU_CCUCON3_PLLERAYSEL_OFF (14u)


#define IFX_SCU_CCUCON3_PLLSEL_LEN (2u)


#define IFX_SCU_CCUCON3_PLLSEL_MSK (0x3u)


#define IFX_SCU_CCUCON3_PLLSEL_OFF (6u)


#define IFX_SCU_CCUCON3_SLCK_LEN (1u)


#define IFX_SCU_CCUCON3_SLCK_MSK (0x1u)


#define IFX_SCU_CCUCON3_SLCK_OFF (29u)


#define IFX_SCU_CCUCON3_SRIDIV_LEN (6u)


#define IFX_SCU_CCUCON3_SRIDIV_MSK (0x3fu)


#define IFX_SCU_CCUCON3_SRIDIV_OFF (16u)


#define IFX_SCU_CCUCON3_SRISEL_LEN (2u)


#define IFX_SCU_CCUCON3_SRISEL_MSK (0x3u)


#define IFX_SCU_CCUCON3_SRISEL_OFF (22u)


#define IFX_SCU_CCUCON3_UP_LEN (1u)


#define IFX_SCU_CCUCON3_UP_MSK (0x1u)


#define IFX_SCU_CCUCON3_UP_OFF (30u)


#define IFX_SCU_CCUCON4_GTMDIV_LEN (6u)


#define IFX_SCU_CCUCON4_GTMDIV_MSK (0x3fu)


#define IFX_SCU_CCUCON4_GTMDIV_OFF (8u)


#define IFX_SCU_CCUCON4_GTMSEL_LEN (2u)


#define IFX_SCU_CCUCON4_GTMSEL_MSK (0x3u)


#define IFX_SCU_CCUCON4_GTMSEL_OFF (14u)


#define IFX_SCU_CCUCON4_LCK_LEN (1u)


#define IFX_SCU_CCUCON4_LCK_MSK (0x1u)


#define IFX_SCU_CCUCON4_LCK_OFF (31u)


#define IFX_SCU_CCUCON4_SLCK_LEN (1u)


#define IFX_SCU_CCUCON4_SLCK_MSK (0x1u)


#define IFX_SCU_CCUCON4_SLCK_OFF (29u)


#define IFX_SCU_CCUCON4_SPBDIV_LEN (6u)


#define IFX_SCU_CCUCON4_SPBDIV_MSK (0x3fu)


#define IFX_SCU_CCUCON4_SPBDIV_OFF (0u)


#define IFX_SCU_CCUCON4_SPBSEL_LEN (2u)


#define IFX_SCU_CCUCON4_SPBSEL_MSK (0x3u)


#define IFX_SCU_CCUCON4_SPBSEL_OFF (6u)


#define IFX_SCU_CCUCON4_STMDIV_LEN (6u)


#define IFX_SCU_CCUCON4_STMDIV_MSK (0x3fu)


#define IFX_SCU_CCUCON4_STMDIV_OFF (16u)


#define IFX_SCU_CCUCON4_STMSEL_LEN (2u)


#define IFX_SCU_CCUCON4_STMSEL_MSK (0x3u)


#define IFX_SCU_CCUCON4_STMSEL_OFF (22u)


#define IFX_SCU_CCUCON4_UP_LEN (1u)


#define IFX_SCU_CCUCON4_UP_MSK (0x1u)


#define IFX_SCU_CCUCON4_UP_OFF (30u)


#define IFX_SCU_CCUCON5_LCK_LEN (1u)


#define IFX_SCU_CCUCON5_LCK_MSK (0x1u)


#define IFX_SCU_CCUCON5_LCK_OFF (31u)


#define IFX_SCU_CCUCON5_MAXDIV_LEN (4u)


#define IFX_SCU_CCUCON5_MAXDIV_MSK (0xfu)


#define IFX_SCU_CCUCON5_MAXDIV_OFF (0u)


#define IFX_SCU_CCUCON5_UP_LEN (1u)


#define IFX_SCU_CCUCON5_UP_MSK (0x1u)


#define IFX_SCU_CCUCON5_UP_OFF (30u)


#define IFX_SCU_CCUCON6_CPU0DIV_LEN (6u)


#define IFX_SCU_CCUCON6_CPU0DIV_MSK (0x3fu)


#define IFX_SCU_CCUCON6_CPU0DIV_OFF (0u)


#define IFX_SCU_CCUCON7_CPU1DIV_LEN (6u)


#define IFX_SCU_CCUCON7_CPU1DIV_MSK (0x3fu)


#define IFX_SCU_CCUCON7_CPU1DIV_OFF (0u)


#define IFX_SCU_CCUCON8_CPU2DIV_LEN (6u)


#define IFX_SCU_CCUCON8_CPU2DIV_MSK (0x3fu)


#define IFX_SCU_CCUCON8_CPU2DIV_OFF (0u)


#define IFX_SCU_CHIPID_CHID_LEN (8u)


#define IFX_SCU_CHIPID_CHID_MSK (0xffu)


#define IFX_SCU_CHIPID_CHID_OFF (8u)


#define IFX_SCU_CHIPID_CHREV_LEN (6u)


#define IFX_SCU_CHIPID_CHREV_MSK (0x3fu)


#define IFX_SCU_CHIPID_CHREV_OFF (0u)


#define IFX_SCU_CHIPID_CHTEC_LEN (2u)


#define IFX_SCU_CHIPID_CHTEC_MSK (0x3u)


#define IFX_SCU_CHIPID_CHTEC_OFF (6u)


#define IFX_SCU_CHIPID_EEA_LEN (1u)


#define IFX_SCU_CHIPID_EEA_MSK (0x1u)


#define IFX_SCU_CHIPID_EEA_OFF (16u)


#define IFX_SCU_CHIPID_FSIZE_LEN (4u)


#define IFX_SCU_CHIPID_FSIZE_MSK (0xfu)


#define IFX_SCU_CHIPID_FSIZE_OFF (24u)


#define IFX_SCU_CHIPID_SEC_LEN (1u)


#define IFX_SCU_CHIPID_SEC_MSK (0x1u)


#define IFX_SCU_CHIPID_SEC_OFF (30u)


#define IFX_SCU_CHIPID_SP_LEN (2u)


#define IFX_SCU_CHIPID_SP_MSK (0x3u)


#define IFX_SCU_CHIPID_SP_OFF (28u)


#define IFX_SCU_CHIPID_UCODE_LEN (7u)


#define IFX_SCU_CHIPID_UCODE_MSK (0x7fu)


#define IFX_SCU_CHIPID_UCODE_OFF (17u)


#define IFX_SCU_DTSCON_CAL_LEN (22u)


#define IFX_SCU_DTSCON_CAL_MSK (0x3fffffu)


#define IFX_SCU_DTSCON_CAL_OFF (4u)


#define IFX_SCU_DTSCON_PWD_LEN (1u)


#define IFX_SCU_DTSCON_PWD_MSK (0x1u)


#define IFX_SCU_DTSCON_PWD_OFF (0u)


#define IFX_SCU_DTSCON_SLCK_LEN (1u)


#define IFX_SCU_DTSCON_SLCK_MSK (0x1u)


#define IFX_SCU_DTSCON_SLCK_OFF (31u)


#define IFX_SCU_DTSCON_START_LEN (1u)


#define IFX_SCU_DTSCON_START_MSK (0x1u)


#define IFX_SCU_DTSCON_START_OFF (1u)


#define IFX_SCU_DTSLIM_LLU_LEN (1u)


#define IFX_SCU_DTSLIM_LLU_MSK (0x1u)


#define IFX_SCU_DTSLIM_LLU_OFF (15u)


#define IFX_SCU_DTSLIM_LOWER_LEN (10u)


#define IFX_SCU_DTSLIM_LOWER_MSK (0x3ffu)


#define IFX_SCU_DTSLIM_LOWER_OFF (0u)


#define IFX_SCU_DTSLIM_SLCK_LEN (1u)


#define IFX_SCU_DTSLIM_SLCK_MSK (0x1u)


#define IFX_SCU_DTSLIM_SLCK_OFF (30u)


#define IFX_SCU_DTSLIM_UOF_LEN (1u)


#define IFX_SCU_DTSLIM_UOF_MSK (0x1u)


#define IFX_SCU_DTSLIM_UOF_OFF (31u)


#define IFX_SCU_DTSLIM_UPPER_LEN (10u)


#define IFX_SCU_DTSLIM_UPPER_MSK (0x3ffu)


#define IFX_SCU_DTSLIM_UPPER_OFF (16u)


#define IFX_SCU_DTSSTAT_BUSY_LEN (1u)


#define IFX_SCU_DTSSTAT_BUSY_MSK (0x1u)


#define IFX_SCU_DTSSTAT_BUSY_OFF (15u)


#define IFX_SCU_DTSSTAT_RDY_LEN (1u)


#define IFX_SCU_DTSSTAT_RDY_MSK (0x1u)


#define IFX_SCU_DTSSTAT_RDY_OFF (14u)


#define IFX_SCU_DTSSTAT_RESULT_LEN (10u)


#define IFX_SCU_DTSSTAT_RESULT_MSK (0x3ffu)


#define IFX_SCU_DTSSTAT_RESULT_OFF (0u)


#define IFX_SCU_EICR_EIEN0_LEN (1u)


#define IFX_SCU_EICR_EIEN0_MSK (0x1u)


#define IFX_SCU_EICR_EIEN0_OFF (11u)


#define IFX_SCU_EICR_EIEN1_LEN (1u)


#define IFX_SCU_EICR_EIEN1_MSK (0x1u)


#define IFX_SCU_EICR_EIEN1_OFF (27u)


#define IFX_SCU_EICR_EXIS0_LEN (3u)


#define IFX_SCU_EICR_EXIS0_MSK (0x7u)


#define IFX_SCU_EICR_EXIS0_OFF (4u)


#define IFX_SCU_EICR_EXIS1_LEN (3u)


#define IFX_SCU_EICR_EXIS1_MSK (0x7u)


#define IFX_SCU_EICR_EXIS1_OFF (20u)


#define IFX_SCU_EICR_FEN0_LEN (1u)


#define IFX_SCU_EICR_FEN0_MSK (0x1u)


#define IFX_SCU_EICR_FEN0_OFF (8u)


#define IFX_SCU_EICR_FEN1_LEN (1u)


#define IFX_SCU_EICR_FEN1_MSK (0x1u)


#define IFX_SCU_EICR_FEN1_OFF (24u)


#define IFX_SCU_EICR_INP0_LEN (3u)


#define IFX_SCU_EICR_INP0_MSK (0x7u)


#define IFX_SCU_EICR_INP0_OFF (12u)


#define IFX_SCU_EICR_INP1_LEN (3u)


#define IFX_SCU_EICR_INP1_MSK (0x7u)


#define IFX_SCU_EICR_INP1_OFF (28u)


#define IFX_SCU_EICR_LDEN0_LEN (1u)


#define IFX_SCU_EICR_LDEN0_MSK (0x1u)


#define IFX_SCU_EICR_LDEN0_OFF (10u)


#define IFX_SCU_EICR_LDEN1_LEN (1u)


#define IFX_SCU_EICR_LDEN1_MSK (0x1u)


#define IFX_SCU_EICR_LDEN1_OFF (26u)


#define IFX_SCU_EICR_REN0_LEN (1u)


#define IFX_SCU_EICR_REN0_MSK (0x1u)


#define IFX_SCU_EICR_REN0_OFF (9u)


#define IFX_SCU_EICR_REN1_LEN (1u)


#define IFX_SCU_EICR_REN1_MSK (0x1u)


#define IFX_SCU_EICR_REN1_OFF (25u)


#define IFX_SCU_EIFR_INTF0_LEN (1u)


#define IFX_SCU_EIFR_INTF0_MSK (0x1u)


#define IFX_SCU_EIFR_INTF0_OFF (0u)


#define IFX_SCU_EIFR_INTF1_LEN (1u)


#define IFX_SCU_EIFR_INTF1_MSK (0x1u)


#define IFX_SCU_EIFR_INTF1_OFF (1u)


#define IFX_SCU_EIFR_INTF2_LEN (1u)


#define IFX_SCU_EIFR_INTF2_MSK (0x1u)


#define IFX_SCU_EIFR_INTF2_OFF (2u)


#define IFX_SCU_EIFR_INTF3_LEN (1u)


#define IFX_SCU_EIFR_INTF3_MSK (0x1u)


#define IFX_SCU_EIFR_INTF3_OFF (3u)


#define IFX_SCU_EIFR_INTF4_LEN (1u)


#define IFX_SCU_EIFR_INTF4_MSK (0x1u)


#define IFX_SCU_EIFR_INTF4_OFF (4u)


#define IFX_SCU_EIFR_INTF5_LEN (1u)


#define IFX_SCU_EIFR_INTF5_MSK (0x1u)


#define IFX_SCU_EIFR_INTF5_OFF (5u)


#define IFX_SCU_EIFR_INTF6_LEN (1u)


#define IFX_SCU_EIFR_INTF6_MSK (0x1u)


#define IFX_SCU_EIFR_INTF6_OFF (6u)


#define IFX_SCU_EIFR_INTF7_LEN (1u)


#define IFX_SCU_EIFR_INTF7_MSK (0x1u)


#define IFX_SCU_EIFR_INTF7_OFF (7u)


#define IFX_SCU_EMSR_EMSF_LEN (1u)


#define IFX_SCU_EMSR_EMSF_MSK (0x1u)


#define IFX_SCU_EMSR_EMSF_OFF (16u)


#define IFX_SCU_EMSR_EMSFM_LEN (2u)


#define IFX_SCU_EMSR_EMSFM_MSK (0x3u)


#define IFX_SCU_EMSR_EMSFM_OFF (24u)


#define IFX_SCU_EMSR_ENON_LEN (1u)


#define IFX_SCU_EMSR_ENON_MSK (0x1u)


#define IFX_SCU_EMSR_ENON_OFF (2u)


#define IFX_SCU_EMSR_MODE_LEN (1u)


#define IFX_SCU_EMSR_MODE_MSK (0x1u)


#define IFX_SCU_EMSR_MODE_OFF (1u)


#define IFX_SCU_EMSR_POL_LEN (1u)


#define IFX_SCU_EMSR_POL_MSK (0x1u)


#define IFX_SCU_EMSR_POL_OFF (0u)


#define IFX_SCU_EMSR_PSEL_LEN (1u)


#define IFX_SCU_EMSR_PSEL_MSK (0x1u)


#define IFX_SCU_EMSR_PSEL_OFF (3u)


#define IFX_SCU_EMSR_SEMSF_LEN (1u)


#define IFX_SCU_EMSR_SEMSF_MSK (0x1u)


#define IFX_SCU_EMSR_SEMSF_OFF (17u)


#define IFX_SCU_EMSR_SEMSFM_LEN (2u)


#define IFX_SCU_EMSR_SEMSFM_MSK (0x3u)


#define IFX_SCU_EMSR_SEMSFM_OFF (26u)


#define IFX_SCU_ESRCFG_EDCON_LEN (2u)


#define IFX_SCU_ESRCFG_EDCON_MSK (0x3u)


#define IFX_SCU_ESRCFG_EDCON_OFF (7u)


#define IFX_SCU_ESROCFG_ARC_LEN (1u)


#define IFX_SCU_ESROCFG_ARC_MSK (0x1u)


#define IFX_SCU_ESROCFG_ARC_OFF (1u)


#define IFX_SCU_ESROCFG_ARI_LEN (1u)


#define IFX_SCU_ESROCFG_ARI_MSK (0x1u)


#define IFX_SCU_ESROCFG_ARI_OFF (0u)


#define IFX_SCU_EVR13CON_BPEVR13OFF_LEN (1u)


#define IFX_SCU_EVR13CON_BPEVR13OFF_MSK (0x1u)


#define IFX_SCU_EVR13CON_BPEVR13OFF_OFF (29u)


#define IFX_SCU_EVR13CON_EVR13OFF_LEN (1u)


#define IFX_SCU_EVR13CON_EVR13OFF_MSK (0x1u)


#define IFX_SCU_EVR13CON_EVR13OFF_OFF (28u)


#define IFX_SCU_EVR13CON_LCK_LEN (1u)


#define IFX_SCU_EVR13CON_LCK_MSK (0x1u)


#define IFX_SCU_EVR13CON_LCK_OFF (31u)


#define IFX_SCU_EVR33CON_BPEVR33OFF_LEN (1u)


#define IFX_SCU_EVR33CON_BPEVR33OFF_MSK (0x1u)


#define IFX_SCU_EVR33CON_BPEVR33OFF_OFF (29u)


#define IFX_SCU_EVR33CON_EVR33OFF_LEN (1u)


#define IFX_SCU_EVR33CON_EVR33OFF_MSK (0x1u)


#define IFX_SCU_EVR33CON_EVR33OFF_OFF (28u)


#define IFX_SCU_EVR33CON_LCK_LEN (1u)


#define IFX_SCU_EVR33CON_LCK_MSK (0x1u)


#define IFX_SCU_EVR33CON_LCK_OFF (31u)


#define IFX_SCU_EVRADCSTAT_ADC13V_LEN (8u)


#define IFX_SCU_EVRADCSTAT_ADC13V_MSK (0xffu)


#define IFX_SCU_EVRADCSTAT_ADC13V_OFF (0u)


#define IFX_SCU_EVRADCSTAT_ADC33V_LEN (8u)


#define IFX_SCU_EVRADCSTAT_ADC33V_MSK (0xffu)


#define IFX_SCU_EVRADCSTAT_ADC33V_OFF (8u)


#define IFX_SCU_EVRADCSTAT_ADCSWDV_LEN (8u)


#define IFX_SCU_EVRADCSTAT_ADCSWDV_MSK (0xffu)


#define IFX_SCU_EVRADCSTAT_ADCSWDV_OFF (16u)


#define IFX_SCU_EVRADCSTAT_VAL_LEN (1u)


#define IFX_SCU_EVRADCSTAT_VAL_MSK (0x1u)


#define IFX_SCU_EVRADCSTAT_VAL_OFF (31u)


#define IFX_SCU_EVRDVSTAT_DVS13TRIM_LEN (8u)


#define IFX_SCU_EVRDVSTAT_DVS13TRIM_MSK (0xffu)


#define IFX_SCU_EVRDVSTAT_DVS13TRIM_OFF (0u)


#define IFX_SCU_EVRDVSTAT_DVS33TRIM_LEN (8u)


#define IFX_SCU_EVRDVSTAT_DVS33TRIM_MSK (0xffu)


#define IFX_SCU_EVRDVSTAT_DVS33TRIM_OFF (16u)


#define IFX_SCU_EVRDVSTAT_VAL_LEN (1u)


#define IFX_SCU_EVRDVSTAT_VAL_MSK (0x1u)


#define IFX_SCU_EVRDVSTAT_VAL_OFF (31u)


#define IFX_SCU_EVRMONCTRL_EVR13OVMOD_LEN (2u)


#define IFX_SCU_EVRMONCTRL_EVR13OVMOD_MSK (0x3u)


#define IFX_SCU_EVRMONCTRL_EVR13OVMOD_OFF (0u)


#define IFX_SCU_EVRMONCTRL_EVR13UVMOD_LEN (2u)


#define IFX_SCU_EVRMONCTRL_EVR13UVMOD_MSK (0x3u)


#define IFX_SCU_EVRMONCTRL_EVR13UVMOD_OFF (4u)


#define IFX_SCU_EVRMONCTRL_EVR33OVMOD_LEN (2u)


#define IFX_SCU_EVRMONCTRL_EVR33OVMOD_MSK (0x3u)


#define IFX_SCU_EVRMONCTRL_EVR33OVMOD_OFF (8u)


#define IFX_SCU_EVRMONCTRL_EVR33UVMOD_LEN (2u)


#define IFX_SCU_EVRMONCTRL_EVR33UVMOD_MSK (0x3u)


#define IFX_SCU_EVRMONCTRL_EVR33UVMOD_OFF (12u)


#define IFX_SCU_EVRMONCTRL_SLCK_LEN (1u)


#define IFX_SCU_EVRMONCTRL_SLCK_MSK (0x1u)


#define IFX_SCU_EVRMONCTRL_SLCK_OFF (30u)


#define IFX_SCU_EVRMONCTRL_SWDOVMOD_LEN (2u)


#define IFX_SCU_EVRMONCTRL_SWDOVMOD_MSK (0x3u)


#define IFX_SCU_EVRMONCTRL_SWDOVMOD_OFF (16u)


#define IFX_SCU_EVRMONCTRL_SWDUVMOD_LEN (2u)


#define IFX_SCU_EVRMONCTRL_SWDUVMOD_MSK (0x3u)


#define IFX_SCU_EVRMONCTRL_SWDUVMOD_OFF (20u)


#define IFX_SCU_EVROVMON_EVR13OVVAL_LEN (8u)


#define IFX_SCU_EVROVMON_EVR13OVVAL_MSK (0xffu)


#define IFX_SCU_EVROVMON_EVR13OVVAL_OFF (0u)


#define IFX_SCU_EVROVMON_EVR33OVVAL_LEN (8u)


#define IFX_SCU_EVROVMON_EVR33OVVAL_MSK (0xffu)


#define IFX_SCU_EVROVMON_EVR33OVVAL_OFF (8u)


#define IFX_SCU_EVROVMON_LCK_LEN (1u)


#define IFX_SCU_EVROVMON_LCK_MSK (0x1u)


#define IFX_SCU_EVROVMON_LCK_OFF (31u)


#define IFX_SCU_EVROVMON_SLCK_LEN (1u)


#define IFX_SCU_EVROVMON_SLCK_MSK (0x1u)


#define IFX_SCU_EVROVMON_SLCK_OFF (30u)


#define IFX_SCU_EVROVMON_SWDOVVAL_LEN (8u)


#define IFX_SCU_EVROVMON_SWDOVVAL_MSK (0xffu)


#define IFX_SCU_EVROVMON_SWDOVVAL_OFF (16u)


#define IFX_SCU_EVRRSTCON_BPRST13OFF_LEN (1u)


#define IFX_SCU_EVRRSTCON_BPRST13OFF_MSK (0x1u)


#define IFX_SCU_EVRRSTCON_BPRST13OFF_OFF (25u)


#define IFX_SCU_EVRRSTCON_BPRST33OFF_LEN (1u)


#define IFX_SCU_EVRRSTCON_BPRST33OFF_MSK (0x1u)


#define IFX_SCU_EVRRSTCON_BPRST33OFF_OFF (27u)


#define IFX_SCU_EVRRSTCON_BPRSTSWDOFF_LEN (1u)


#define IFX_SCU_EVRRSTCON_BPRSTSWDOFF_MSK (0x1u)


#define IFX_SCU_EVRRSTCON_BPRSTSWDOFF_OFF (29u)


#define IFX_SCU_EVRRSTCON_LCK_LEN (1u)


#define IFX_SCU_EVRRSTCON_LCK_MSK (0x1u)


#define IFX_SCU_EVRRSTCON_LCK_OFF (31u)


#define IFX_SCU_EVRRSTCON_RST13OFF_LEN (1u)


#define IFX_SCU_EVRRSTCON_RST13OFF_MSK (0x1u)


#define IFX_SCU_EVRRSTCON_RST13OFF_OFF (24u)


#define IFX_SCU_EVRRSTCON_RST13TRIM_LEN (8u)


#define IFX_SCU_EVRRSTCON_RST13TRIM_MSK (0xffu)


#define IFX_SCU_EVRRSTCON_RST13TRIM_OFF (0u)


#define IFX_SCU_EVRRSTCON_RST33OFF_LEN (1u)


#define IFX_SCU_EVRRSTCON_RST33OFF_MSK (0x1u)


#define IFX_SCU_EVRRSTCON_RST33OFF_OFF (26u)


#define IFX_SCU_EVRRSTCON_RSTSWDOFF_LEN (1u)


#define IFX_SCU_EVRRSTCON_RSTSWDOFF_MSK (0x1u)


#define IFX_SCU_EVRRSTCON_RSTSWDOFF_OFF (28u)


#define IFX_SCU_EVRRSTCON_SLCK_LEN (1u)


#define IFX_SCU_EVRRSTCON_SLCK_MSK (0x1u)


#define IFX_SCU_EVRRSTCON_SLCK_OFF (30u)


#define IFX_SCU_EVRSDCOEFF1_LCK_LEN (1u)


#define IFX_SCU_EVRSDCOEFF1_LCK_MSK (0x1u)


#define IFX_SCU_EVRSDCOEFF1_LCK_OFF (31u)


#define IFX_SCU_EVRSDCOEFF1_SD5D_LEN (8u)


#define IFX_SCU_EVRSDCOEFF1_SD5D_MSK (0xffu)


#define IFX_SCU_EVRSDCOEFF1_SD5D_OFF (16u)


#define IFX_SCU_EVRSDCOEFF1_SD5I_LEN (8u)


#define IFX_SCU_EVRSDCOEFF1_SD5I_MSK (0xffu)


#define IFX_SCU_EVRSDCOEFF1_SD5I_OFF (8u)


#define IFX_SCU_EVRSDCOEFF1_SD5P_LEN (8u)


#define IFX_SCU_EVRSDCOEFF1_SD5P_MSK (0xffu)


#define IFX_SCU_EVRSDCOEFF1_SD5P_OFF (0u)


#define IFX_SCU_EVRSDCOEFF2_LCK_LEN (1u)


#define IFX_SCU_EVRSDCOEFF2_LCK_MSK (0x1u)


#define IFX_SCU_EVRSDCOEFF2_LCK_OFF (31u)


#define IFX_SCU_EVRSDCOEFF2_SD33D_LEN (8u)


#define IFX_SCU_EVRSDCOEFF2_SD33D_MSK (0xffu)


#define IFX_SCU_EVRSDCOEFF2_SD33D_OFF (16u)


#define IFX_SCU_EVRSDCOEFF2_SD33I_LEN (8u)


#define IFX_SCU_EVRSDCOEFF2_SD33I_MSK (0xffu)


#define IFX_SCU_EVRSDCOEFF2_SD33I_OFF (8u)


#define IFX_SCU_EVRSDCOEFF2_SD33P_LEN (8u)


#define IFX_SCU_EVRSDCOEFF2_SD33P_MSK (0xffu)


#define IFX_SCU_EVRSDCOEFF2_SD33P_OFF (0u)


#define IFX_SCU_EVRSDCOEFF3_CT5REG0_LEN (8u)


#define IFX_SCU_EVRSDCOEFF3_CT5REG0_MSK (0xffu)


#define IFX_SCU_EVRSDCOEFF3_CT5REG0_OFF (0u)


#define IFX_SCU_EVRSDCOEFF3_CT5REG1_LEN (8u)


#define IFX_SCU_EVRSDCOEFF3_CT5REG1_MSK (0xffu)


#define IFX_SCU_EVRSDCOEFF3_CT5REG1_OFF (8u)


#define IFX_SCU_EVRSDCOEFF3_CT5REG2_LEN (8u)


#define IFX_SCU_EVRSDCOEFF3_CT5REG2_MSK (0xffu)


#define IFX_SCU_EVRSDCOEFF3_CT5REG2_OFF (16u)


#define IFX_SCU_EVRSDCOEFF3_LCK_LEN (1u)


#define IFX_SCU_EVRSDCOEFF3_LCK_MSK (0x1u)


#define IFX_SCU_EVRSDCOEFF3_LCK_OFF (31u)


#define IFX_SCU_EVRSDCOEFF4_CT5REG3_LEN (8u)


#define IFX_SCU_EVRSDCOEFF4_CT5REG3_MSK (0xffu)


#define IFX_SCU_EVRSDCOEFF4_CT5REG3_OFF (0u)


#define IFX_SCU_EVRSDCOEFF4_CT5REG4_LEN (8u)


#define IFX_SCU_EVRSDCOEFF4_CT5REG4_MSK (0xffu)


#define IFX_SCU_EVRSDCOEFF4_CT5REG4_OFF (8u)


#define IFX_SCU_EVRSDCOEFF4_LCK_LEN (1u)


#define IFX_SCU_EVRSDCOEFF4_LCK_MSK (0x1u)


#define IFX_SCU_EVRSDCOEFF4_LCK_OFF (31u)


#define IFX_SCU_EVRSDCOEFF5_CT33REG0_LEN (8u)


#define IFX_SCU_EVRSDCOEFF5_CT33REG0_MSK (0xffu)


#define IFX_SCU_EVRSDCOEFF5_CT33REG0_OFF (0u)


#define IFX_SCU_EVRSDCOEFF5_CT33REG1_LEN (8u)


#define IFX_SCU_EVRSDCOEFF5_CT33REG1_MSK (0xffu)


#define IFX_SCU_EVRSDCOEFF5_CT33REG1_OFF (8u)


#define IFX_SCU_EVRSDCOEFF5_CT33REG2_LEN (8u)


#define IFX_SCU_EVRSDCOEFF5_CT33REG2_MSK (0xffu)


#define IFX_SCU_EVRSDCOEFF5_CT33REG2_OFF (16u)


#define IFX_SCU_EVRSDCOEFF5_LCK_LEN (1u)


#define IFX_SCU_EVRSDCOEFF5_LCK_MSK (0x1u)


#define IFX_SCU_EVRSDCOEFF5_LCK_OFF (31u)


#define IFX_SCU_EVRSDCOEFF6_CT33REG3_LEN (8u)


#define IFX_SCU_EVRSDCOEFF6_CT33REG3_MSK (0xffu)


#define IFX_SCU_EVRSDCOEFF6_CT33REG3_OFF (0u)


#define IFX_SCU_EVRSDCOEFF6_CT33REG4_LEN (8u)


#define IFX_SCU_EVRSDCOEFF6_CT33REG4_MSK (0xffu)


#define IFX_SCU_EVRSDCOEFF6_CT33REG4_OFF (8u)


#define IFX_SCU_EVRSDCOEFF6_LCK_LEN (1u)


#define IFX_SCU_EVRSDCOEFF6_LCK_MSK (0x1u)


#define IFX_SCU_EVRSDCOEFF6_LCK_OFF (31u)


#define IFX_SCU_EVRSDCTRL1_LCK_LEN (1u)


#define IFX_SCU_EVRSDCTRL1_LCK_MSK (0x1u)


#define IFX_SCU_EVRSDCTRL1_LCK_OFF (31u)


#define IFX_SCU_EVRSDCTRL1_SDFREQ_LEN (8u)


#define IFX_SCU_EVRSDCTRL1_SDFREQ_MSK (0xffu)


#define IFX_SCU_EVRSDCTRL1_SDFREQ_OFF (16u)


#define IFX_SCU_EVRSDCTRL1_SDFREQSPRD_LEN (16u)


#define IFX_SCU_EVRSDCTRL1_SDFREQSPRD_MSK (0xffffu)


#define IFX_SCU_EVRSDCTRL1_SDFREQSPRD_OFF (0u)


#define IFX_SCU_EVRSDCTRL1_SDSAMPLE_LEN (1u)


#define IFX_SCU_EVRSDCTRL1_SDSAMPLE_MSK (0x1u)


#define IFX_SCU_EVRSDCTRL1_SDSAMPLE_OFF (30u)


#define IFX_SCU_EVRSDCTRL1_SDSTEP_LEN (4u)


#define IFX_SCU_EVRSDCTRL1_SDSTEP_MSK (0xfu)


#define IFX_SCU_EVRSDCTRL1_SDSTEP_OFF (24u)


#define IFX_SCU_EVRSDCTRL2_DRVN_LEN (8u)


#define IFX_SCU_EVRSDCTRL2_DRVN_MSK (0xffu)


#define IFX_SCU_EVRSDCTRL2_DRVN_OFF (16u)


#define IFX_SCU_EVRSDCTRL2_DRVP_LEN (8u)


#define IFX_SCU_EVRSDCTRL2_DRVP_MSK (0xffu)


#define IFX_SCU_EVRSDCTRL2_DRVP_OFF (0u)


#define IFX_SCU_EVRSDCTRL2_LCK_LEN (1u)


#define IFX_SCU_EVRSDCTRL2_LCK_MSK (0x1u)


#define IFX_SCU_EVRSDCTRL2_LCK_OFF (31u)


#define IFX_SCU_EVRSDCTRL2_SDLUT_LEN (6u)


#define IFX_SCU_EVRSDCTRL2_SDLUT_MSK (0x3fu)


#define IFX_SCU_EVRSDCTRL2_SDLUT_OFF (24u)


#define IFX_SCU_EVRSDCTRL2_SDMINMAXDC_LEN (8u)


#define IFX_SCU_EVRSDCTRL2_SDMINMAXDC_MSK (0xffu)


#define IFX_SCU_EVRSDCTRL2_SDMINMAXDC_OFF (8u)


#define IFX_SCU_EVRSDCTRL3_LCK_LEN (1u)


#define IFX_SCU_EVRSDCTRL3_LCK_MSK (0x1u)


#define IFX_SCU_EVRSDCTRL3_LCK_OFF (31u)


#define IFX_SCU_EVRSDCTRL3_SDPID_LEN (8u)


#define IFX_SCU_EVRSDCTRL3_SDPID_MSK (0xffu)


#define IFX_SCU_EVRSDCTRL3_SDPID_OFF (8u)


#define IFX_SCU_EVRSDCTRL3_SDPWMPRE_LEN (8u)


#define IFX_SCU_EVRSDCTRL3_SDPWMPRE_MSK (0xffu)


#define IFX_SCU_EVRSDCTRL3_SDPWMPRE_OFF (0u)


#define IFX_SCU_EVRSDCTRL3_SDVOKLVL_LEN (8u)


#define IFX_SCU_EVRSDCTRL3_SDVOKLVL_MSK (0xffu)


#define IFX_SCU_EVRSDCTRL3_SDVOKLVL_OFF (16u)


#define IFX_SCU_EVRSDCTRL4_LCK_LEN (1u)


#define IFX_SCU_EVRSDCTRL4_LCK_MSK (0x1u)


#define IFX_SCU_EVRSDCTRL4_LCK_OFF (31u)


#define IFX_SCU_EVRSDCTRL4_SYNCDIV_LEN (3u)


#define IFX_SCU_EVRSDCTRL4_SYNCDIV_MSK (0x7u)


#define IFX_SCU_EVRSDCTRL4_SYNCDIV_OFF (8u)


#define IFX_SCU_EVRSTAT_BGPROK_LEN (1u)


#define IFX_SCU_EVRSTAT_BGPROK_MSK (0x1u)


#define IFX_SCU_EVRSTAT_BGPROK_OFF (10u)


#define IFX_SCU_EVRSTAT_EVR13_LEN (1u)


#define IFX_SCU_EVRSTAT_EVR13_MSK (0x1u)


#define IFX_SCU_EVRSTAT_EVR13_OFF (0u)


#define IFX_SCU_EVRSTAT_EVR33_LEN (1u)


#define IFX_SCU_EVRSTAT_EVR33_MSK (0x1u)


#define IFX_SCU_EVRSTAT_EVR33_OFF (2u)


#define IFX_SCU_EVRSTAT_EXTPASS13_LEN (1u)


#define IFX_SCU_EVRSTAT_EXTPASS13_MSK (0x1u)


#define IFX_SCU_EVRSTAT_EXTPASS13_OFF (8u)


#define IFX_SCU_EVRSTAT_EXTPASS33_LEN (1u)


#define IFX_SCU_EVRSTAT_EXTPASS33_MSK (0x1u)


#define IFX_SCU_EVRSTAT_EXTPASS33_OFF (9u)


#define IFX_SCU_EVRSTAT_OV13_LEN (1u)


#define IFX_SCU_EVRSTAT_OV13_MSK (0x1u)


#define IFX_SCU_EVRSTAT_OV13_OFF (1u)


#define IFX_SCU_EVRSTAT_OV33_LEN (1u)


#define IFX_SCU_EVRSTAT_OV33_MSK (0x1u)


#define IFX_SCU_EVRSTAT_OV33_OFF (3u)


#define IFX_SCU_EVRSTAT_OVSWD_LEN (1u)


#define IFX_SCU_EVRSTAT_OVSWD_MSK (0x1u)


#define IFX_SCU_EVRSTAT_OVSWD_OFF (4u)


#define IFX_SCU_EVRSTAT_UV13_LEN (1u)


#define IFX_SCU_EVRSTAT_UV13_MSK (0x1u)


#define IFX_SCU_EVRSTAT_UV13_OFF (5u)


#define IFX_SCU_EVRSTAT_UV33_LEN (1u)


#define IFX_SCU_EVRSTAT_UV33_MSK (0x1u)


#define IFX_SCU_EVRSTAT_UV33_OFF (6u)


#define IFX_SCU_EVRSTAT_UVSWD_LEN (1u)


#define IFX_SCU_EVRSTAT_UVSWD_MSK (0x1u)


#define IFX_SCU_EVRSTAT_UVSWD_OFF (7u)


#define IFX_SCU_EVRTRIM_EVR13TRIM_LEN (8u)


#define IFX_SCU_EVRTRIM_EVR13TRIM_MSK (0xffu)


#define IFX_SCU_EVRTRIM_EVR13TRIM_OFF (0u)


#define IFX_SCU_EVRTRIM_LCK_LEN (1u)


#define IFX_SCU_EVRTRIM_LCK_MSK (0x1u)


#define IFX_SCU_EVRTRIM_LCK_OFF (31u)


#define IFX_SCU_EVRTRIM_SDVOUTSEL_LEN (8u)


#define IFX_SCU_EVRTRIM_SDVOUTSEL_MSK (0xffu)


#define IFX_SCU_EVRTRIM_SDVOUTSEL_OFF (8u)


#define IFX_SCU_EVRTRIM_SLCK_LEN (1u)


#define IFX_SCU_EVRTRIM_SLCK_MSK (0x1u)


#define IFX_SCU_EVRTRIM_SLCK_OFF (30u)


#define IFX_SCU_EVRUVMON_EVR13UVVAL_LEN (8u)


#define IFX_SCU_EVRUVMON_EVR13UVVAL_MSK (0xffu)


#define IFX_SCU_EVRUVMON_EVR13UVVAL_OFF (0u)


#define IFX_SCU_EVRUVMON_EVR33UVVAL_LEN (8u)


#define IFX_SCU_EVRUVMON_EVR33UVVAL_MSK (0xffu)


#define IFX_SCU_EVRUVMON_EVR33UVVAL_OFF (8u)


#define IFX_SCU_EVRUVMON_LCK_LEN (1u)


#define IFX_SCU_EVRUVMON_LCK_MSK (0x1u)


#define IFX_SCU_EVRUVMON_LCK_OFF (31u)


#define IFX_SCU_EVRUVMON_SLCK_LEN (1u)


#define IFX_SCU_EVRUVMON_SLCK_MSK (0x1u)


#define IFX_SCU_EVRUVMON_SLCK_OFF (30u)


#define IFX_SCU_EVRUVMON_SWDUVVAL_LEN (8u)


#define IFX_SCU_EVRUVMON_SWDUVVAL_MSK (0xffu)


#define IFX_SCU_EVRUVMON_SWDUVVAL_OFF (16u)


#define IFX_SCU_EXTCON_DIV1_LEN (8u)


#define IFX_SCU_EXTCON_DIV1_MSK (0xffu)


#define IFX_SCU_EXTCON_DIV1_OFF (24u)


#define IFX_SCU_EXTCON_EN0_LEN (1u)


#define IFX_SCU_EXTCON_EN0_MSK (0x1u)


#define IFX_SCU_EXTCON_EN0_OFF (0u)


#define IFX_SCU_EXTCON_EN1_LEN (1u)


#define IFX_SCU_EXTCON_EN1_MSK (0x1u)


#define IFX_SCU_EXTCON_EN1_OFF (16u)


#define IFX_SCU_EXTCON_NSEL_LEN (1u)


#define IFX_SCU_EXTCON_NSEL_MSK (0x1u)


#define IFX_SCU_EXTCON_NSEL_OFF (17u)


#define IFX_SCU_EXTCON_SEL0_LEN (4u)


#define IFX_SCU_EXTCON_SEL0_MSK (0xfu)


#define IFX_SCU_EXTCON_SEL0_OFF (2u)


#define IFX_SCU_EXTCON_SEL1_LEN (4u)


#define IFX_SCU_EXTCON_SEL1_MSK (0xfu)


#define IFX_SCU_EXTCON_SEL1_OFF (18u)


#define IFX_SCU_FDR_DISCLK_LEN (1u)


#define IFX_SCU_FDR_DISCLK_MSK (0x1u)


#define IFX_SCU_FDR_DISCLK_OFF (31u)


#define IFX_SCU_FDR_DM_LEN (2u)


#define IFX_SCU_FDR_DM_MSK (0x3u)


#define IFX_SCU_FDR_DM_OFF (14u)


#define IFX_SCU_FDR_RESULT_LEN (10u)


#define IFX_SCU_FDR_RESULT_MSK (0x3ffu)


#define IFX_SCU_FDR_RESULT_OFF (16u)


#define IFX_SCU_FDR_STEP_LEN (10u)


#define IFX_SCU_FDR_STEP_MSK (0x3ffu)


#define IFX_SCU_FDR_STEP_OFF (0u)


#define IFX_SCU_FMR_FC0_LEN (1u)


#define IFX_SCU_FMR_FC0_MSK (0x1u)


#define IFX_SCU_FMR_FC0_OFF (16u)


#define IFX_SCU_FMR_FC1_LEN (1u)


#define IFX_SCU_FMR_FC1_MSK (0x1u)


#define IFX_SCU_FMR_FC1_OFF (17u)


#define IFX_SCU_FMR_FC2_LEN (1u)


#define IFX_SCU_FMR_FC2_MSK (0x1u)


#define IFX_SCU_FMR_FC2_OFF (18u)


#define IFX_SCU_FMR_FC3_LEN (1u)


#define IFX_SCU_FMR_FC3_MSK (0x1u)


#define IFX_SCU_FMR_FC3_OFF (19u)


#define IFX_SCU_FMR_FC4_LEN (1u)


#define IFX_SCU_FMR_FC4_MSK (0x1u)


#define IFX_SCU_FMR_FC4_OFF (20u)


#define IFX_SCU_FMR_FC5_LEN (1u)


#define IFX_SCU_FMR_FC5_MSK (0x1u)


#define IFX_SCU_FMR_FC5_OFF (21u)


#define IFX_SCU_FMR_FC6_LEN (1u)


#define IFX_SCU_FMR_FC6_MSK (0x1u)


#define IFX_SCU_FMR_FC6_OFF (22u)


#define IFX_SCU_FMR_FC7_LEN (1u)


#define IFX_SCU_FMR_FC7_MSK (0x1u)


#define IFX_SCU_FMR_FC7_OFF (23u)


#define IFX_SCU_FMR_FS0_LEN (1u)


#define IFX_SCU_FMR_FS0_MSK (0x1u)


#define IFX_SCU_FMR_FS0_OFF (0u)


#define IFX_SCU_FMR_FS1_LEN (1u)


#define IFX_SCU_FMR_FS1_MSK (0x1u)


#define IFX_SCU_FMR_FS1_OFF (1u)


#define IFX_SCU_FMR_FS2_LEN (1u)


#define IFX_SCU_FMR_FS2_MSK (0x1u)


#define IFX_SCU_FMR_FS2_OFF (2u)


#define IFX_SCU_FMR_FS3_LEN (1u)


#define IFX_SCU_FMR_FS3_MSK (0x1u)


#define IFX_SCU_FMR_FS3_OFF (3u)


#define IFX_SCU_FMR_FS4_LEN (1u)


#define IFX_SCU_FMR_FS4_MSK (0x1u)


#define IFX_SCU_FMR_FS4_OFF (4u)


#define IFX_SCU_FMR_FS5_LEN (1u)


#define IFX_SCU_FMR_FS5_MSK (0x1u)


#define IFX_SCU_FMR_FS5_OFF (5u)


#define IFX_SCU_FMR_FS6_LEN (1u)


#define IFX_SCU_FMR_FS6_MSK (0x1u)


#define IFX_SCU_FMR_FS6_OFF (6u)


#define IFX_SCU_FMR_FS7_LEN (1u)


#define IFX_SCU_FMR_FS7_MSK (0x1u)


#define IFX_SCU_FMR_FS7_OFF (7u)


#define IFX_SCU_ID_MODNUMBER_LEN (16u)


#define IFX_SCU_ID_MODNUMBER_MSK (0xffffu)


#define IFX_SCU_ID_MODNUMBER_OFF (16u)


#define IFX_SCU_ID_MODREV_LEN (8u)


#define IFX_SCU_ID_MODREV_MSK (0xffu)


#define IFX_SCU_ID_MODREV_OFF (0u)


#define IFX_SCU_ID_MODTYPE_LEN (8u)


#define IFX_SCU_ID_MODTYPE_MSK (0xffu)


#define IFX_SCU_ID_MODTYPE_OFF (8u)


#define IFX_SCU_IGCR_GEEN0_LEN (1u)


#define IFX_SCU_IGCR_GEEN0_MSK (0x1u)


#define IFX_SCU_IGCR_GEEN0_OFF (13u)


#define IFX_SCU_IGCR_GEEN1_LEN (1u)


#define IFX_SCU_IGCR_GEEN1_MSK (0x1u)


#define IFX_SCU_IGCR_GEEN1_OFF (29u)


#define IFX_SCU_IGCR_IGP0_LEN (2u)


#define IFX_SCU_IGCR_IGP0_MSK (0x3u)


#define IFX_SCU_IGCR_IGP0_OFF (14u)


#define IFX_SCU_IGCR_IGP1_LEN (2u)


#define IFX_SCU_IGCR_IGP1_MSK (0x3u)


#define IFX_SCU_IGCR_IGP1_OFF (30u)


#define IFX_SCU_IGCR_IPEN00_LEN (1u)


#define IFX_SCU_IGCR_IPEN00_MSK (0x1u)


#define IFX_SCU_IGCR_IPEN00_OFF (0u)


#define IFX_SCU_IGCR_IPEN01_LEN (1u)


#define IFX_SCU_IGCR_IPEN01_MSK (0x1u)


#define IFX_SCU_IGCR_IPEN01_OFF (1u)


#define IFX_SCU_IGCR_IPEN02_LEN (1u)


#define IFX_SCU_IGCR_IPEN02_MSK (0x1u)


#define IFX_SCU_IGCR_IPEN02_OFF (2u)


#define IFX_SCU_IGCR_IPEN03_LEN (1u)


#define IFX_SCU_IGCR_IPEN03_MSK (0x1u)


#define IFX_SCU_IGCR_IPEN03_OFF (3u)


#define IFX_SCU_IGCR_IPEN04_LEN (1u)


#define IFX_SCU_IGCR_IPEN04_MSK (0x1u)


#define IFX_SCU_IGCR_IPEN04_OFF (4u)


#define IFX_SCU_IGCR_IPEN05_LEN (1u)


#define IFX_SCU_IGCR_IPEN05_MSK (0x1u)


#define IFX_SCU_IGCR_IPEN05_OFF (5u)


#define IFX_SCU_IGCR_IPEN06_LEN (1u)


#define IFX_SCU_IGCR_IPEN06_MSK (0x1u)


#define IFX_SCU_IGCR_IPEN06_OFF (6u)


#define IFX_SCU_IGCR_IPEN07_LEN (1u)


#define IFX_SCU_IGCR_IPEN07_MSK (0x1u)


#define IFX_SCU_IGCR_IPEN07_OFF (7u)


#define IFX_SCU_IGCR_IPEN10_LEN (1u)


#define IFX_SCU_IGCR_IPEN10_MSK (0x1u)


#define IFX_SCU_IGCR_IPEN10_OFF (16u)


#define IFX_SCU_IGCR_IPEN11_LEN (1u)


#define IFX_SCU_IGCR_IPEN11_MSK (0x1u)


#define IFX_SCU_IGCR_IPEN11_OFF (17u)


#define IFX_SCU_IGCR_IPEN12_LEN (1u)


#define IFX_SCU_IGCR_IPEN12_MSK (0x1u)


#define IFX_SCU_IGCR_IPEN12_OFF (18u)


#define IFX_SCU_IGCR_IPEN13_LEN (1u)


#define IFX_SCU_IGCR_IPEN13_MSK (0x1u)


#define IFX_SCU_IGCR_IPEN13_OFF (19u)


#define IFX_SCU_IGCR_IPEN14_LEN (1u)


#define IFX_SCU_IGCR_IPEN14_MSK (0x1u)


#define IFX_SCU_IGCR_IPEN14_OFF (20u)


#define IFX_SCU_IGCR_IPEN15_LEN (1u)


#define IFX_SCU_IGCR_IPEN15_MSK (0x1u)


#define IFX_SCU_IGCR_IPEN15_OFF (21u)


#define IFX_SCU_IGCR_IPEN16_LEN (1u)


#define IFX_SCU_IGCR_IPEN16_MSK (0x1u)


#define IFX_SCU_IGCR_IPEN16_OFF (22u)


#define IFX_SCU_IGCR_IPEN17_LEN (1u)


#define IFX_SCU_IGCR_IPEN17_MSK (0x1u)


#define IFX_SCU_IGCR_IPEN17_OFF (23u)


#define IFX_SCU_IN_P0_LEN (1u)


#define IFX_SCU_IN_P0_MSK (0x1u)


#define IFX_SCU_IN_P0_OFF (0u)


#define IFX_SCU_IN_P1_LEN (1u)


#define IFX_SCU_IN_P1_MSK (0x1u)


#define IFX_SCU_IN_P1_OFF (1u)


#define IFX_SCU_IOCR_PC0_LEN (4u)


#define IFX_SCU_IOCR_PC0_MSK (0xfu)


#define IFX_SCU_IOCR_PC0_OFF (4u)


#define IFX_SCU_IOCR_PC1_LEN (4u)


#define IFX_SCU_IOCR_PC1_MSK (0xfu)


#define IFX_SCU_IOCR_PC1_OFF (12u)


#define IFX_SCU_LBISTCTRL0_LBISTREQ_LEN (1u)


#define IFX_SCU_LBISTCTRL0_LBISTREQ_MSK (0x1u)


#define IFX_SCU_LBISTCTRL0_LBISTREQ_OFF (0u)


#define IFX_SCU_LBISTCTRL0_LBISTREQP_LEN (1u)


#define IFX_SCU_LBISTCTRL0_LBISTREQP_MSK (0x1u)


#define IFX_SCU_LBISTCTRL0_LBISTREQP_OFF (1u)


#define IFX_SCU_LBISTCTRL0_PATTERNS_LEN (14u)


#define IFX_SCU_LBISTCTRL0_PATTERNS_MSK (0x3fffu)


#define IFX_SCU_LBISTCTRL0_PATTERNS_OFF (2u)


#define IFX_SCU_LBISTCTRL1_BODY_LEN (1u)


#define IFX_SCU_LBISTCTRL1_BODY_MSK (0x1u)


#define IFX_SCU_LBISTCTRL1_BODY_OFF (27u)


#define IFX_SCU_LBISTCTRL1_LBISTFREQU_LEN (4u)


#define IFX_SCU_LBISTCTRL1_LBISTFREQU_MSK (0xfu)


#define IFX_SCU_LBISTCTRL1_LBISTFREQU_OFF (28u)


#define IFX_SCU_LBISTCTRL1_SEED_LEN (23u)


#define IFX_SCU_LBISTCTRL1_SEED_MSK (0x7fffffu)


#define IFX_SCU_LBISTCTRL1_SEED_OFF (0u)


#define IFX_SCU_LBISTCTRL1_SPLITSH_LEN (3u)


#define IFX_SCU_LBISTCTRL1_SPLITSH_MSK (0x7u)


#define IFX_SCU_LBISTCTRL1_SPLITSH_OFF (24u)


#define IFX_SCU_LBISTCTRL2_LBISTDONE_LEN (1u)


#define IFX_SCU_LBISTCTRL2_LBISTDONE_MSK (0x1u)


#define IFX_SCU_LBISTCTRL2_LBISTDONE_OFF (31u)


#define IFX_SCU_LBISTCTRL2_SIGNATURE_LEN (24u)


#define IFX_SCU_LBISTCTRL2_SIGNATURE_MSK (0xffffffu)


#define IFX_SCU_LBISTCTRL2_SIGNATURE_OFF (0u)


#define IFX_SCU_LCLCON_LS_LEN (1u)


#define IFX_SCU_LCLCON_LS_MSK (0x1u)


#define IFX_SCU_LCLCON_LS_OFF (16u)


#define IFX_SCU_LCLCON_LSEN_LEN (1u)


#define IFX_SCU_LCLCON_LSEN_MSK (0x1u)


#define IFX_SCU_LCLCON_LSEN_OFF (31u)


#define IFX_SCU_LCLTEST_LCLT0_LEN (1u)


#define IFX_SCU_LCLTEST_LCLT0_MSK (0x1u)


#define IFX_SCU_LCLTEST_LCLT0_OFF (0u)


#define IFX_SCU_LCLTEST_LCLT1_LEN (1u)


#define IFX_SCU_LCLTEST_LCLT1_MSK (0x1u)


#define IFX_SCU_LCLTEST_LCLT1_OFF (1u)


#define IFX_SCU_MANID_DEPT_LEN (5u)


#define IFX_SCU_MANID_DEPT_MSK (0x1fu)


#define IFX_SCU_MANID_DEPT_OFF (0u)


#define IFX_SCU_MANID_MANUF_LEN (11u)


#define IFX_SCU_MANID_MANUF_MSK (0x7ffu)


#define IFX_SCU_MANID_MANUF_OFF (5u)


#define IFX_SCU_OMR_PCL0_LEN (1u)


#define IFX_SCU_OMR_PCL0_MSK (0x1u)


#define IFX_SCU_OMR_PCL0_OFF (16u)


#define IFX_SCU_OMR_PCL1_LEN (1u)


#define IFX_SCU_OMR_PCL1_MSK (0x1u)


#define IFX_SCU_OMR_PCL1_OFF (17u)


#define IFX_SCU_OMR_PS0_LEN (1u)


#define IFX_SCU_OMR_PS0_MSK (0x1u)


#define IFX_SCU_OMR_PS0_OFF (0u)


#define IFX_SCU_OMR_PS1_LEN (1u)


#define IFX_SCU_OMR_PS1_MSK (0x1u)


#define IFX_SCU_OMR_PS1_OFF (1u)


#define IFX_SCU_OSCCON_APREN_LEN (1u)


#define IFX_SCU_OSCCON_APREN_MSK (0x1u)


#define IFX_SCU_OSCCON_APREN_OFF (23u)


#define IFX_SCU_OSCCON_CAP0EN_LEN (1u)


#define IFX_SCU_OSCCON_CAP0EN_MSK (0x1u)


#define IFX_SCU_OSCCON_CAP0EN_OFF (24u)


#define IFX_SCU_OSCCON_CAP1EN_LEN (1u)


#define IFX_SCU_OSCCON_CAP1EN_MSK (0x1u)


#define IFX_SCU_OSCCON_CAP1EN_OFF (25u)


#define IFX_SCU_OSCCON_CAP2EN_LEN (1u)


#define IFX_SCU_OSCCON_CAP2EN_MSK (0x1u)


#define IFX_SCU_OSCCON_CAP2EN_OFF (26u)


#define IFX_SCU_OSCCON_CAP3EN_LEN (1u)


#define IFX_SCU_OSCCON_CAP3EN_MSK (0x1u)


#define IFX_SCU_OSCCON_CAP3EN_OFF (27u)


#define IFX_SCU_OSCCON_GAINSEL_LEN (2u)


#define IFX_SCU_OSCCON_GAINSEL_MSK (0x3u)


#define IFX_SCU_OSCCON_GAINSEL_OFF (3u)


#define IFX_SCU_OSCCON_MODE_LEN (2u)


#define IFX_SCU_OSCCON_MODE_MSK (0x3u)


#define IFX_SCU_OSCCON_MODE_OFF (5u)


#define IFX_SCU_OSCCON_OSCRES_LEN (1u)


#define IFX_SCU_OSCCON_OSCRES_MSK (0x1u)


#define IFX_SCU_OSCCON_OSCRES_OFF (2u)


#define IFX_SCU_OSCCON_OSCVAL_LEN (5u)


#define IFX_SCU_OSCCON_OSCVAL_MSK (0x1fu)


#define IFX_SCU_OSCCON_OSCVAL_OFF (16u)


#define IFX_SCU_OSCCON_PLLHV_LEN (1u)


#define IFX_SCU_OSCCON_PLLHV_MSK (0x1u)


#define IFX_SCU_OSCCON_PLLHV_OFF (8u)


#define IFX_SCU_OSCCON_PLLLV_LEN (1u)


#define IFX_SCU_OSCCON_PLLLV_MSK (0x1u)


#define IFX_SCU_OSCCON_PLLLV_OFF (1u)


#define IFX_SCU_OSCCON_SHBY_LEN (1u)


#define IFX_SCU_OSCCON_SHBY_MSK (0x1u)


#define IFX_SCU_OSCCON_SHBY_OFF (7u)


#define IFX_SCU_OSCCON_X1D_LEN (1u)


#define IFX_SCU_OSCCON_X1D_MSK (0x1u)


#define IFX_SCU_OSCCON_X1D_OFF (10u)


#define IFX_SCU_OSCCON_X1DEN_LEN (1u)


#define IFX_SCU_OSCCON_X1DEN_MSK (0x1u)


#define IFX_SCU_OSCCON_X1DEN_OFF (11u)


#define IFX_SCU_OUT_P0_LEN (1u)


#define IFX_SCU_OUT_P0_MSK (0x1u)


#define IFX_SCU_OUT_P0_OFF (0u)


#define IFX_SCU_OUT_P1_LEN (1u)


#define IFX_SCU_OUT_P1_MSK (0x1u)


#define IFX_SCU_OUT_P1_OFF (1u)


#define IFX_SCU_OVCCON_CSEL0_LEN (1u)


#define IFX_SCU_OVCCON_CSEL0_MSK (0x1u)


#define IFX_SCU_OVCCON_CSEL0_OFF (0u)


#define IFX_SCU_OVCCON_CSEL1_LEN (1u)


#define IFX_SCU_OVCCON_CSEL1_MSK (0x1u)


#define IFX_SCU_OVCCON_CSEL1_OFF (1u)


#define IFX_SCU_OVCCON_CSEL2_LEN (1u)


#define IFX_SCU_OVCCON_CSEL2_MSK (0x1u)


#define IFX_SCU_OVCCON_CSEL2_OFF (2u)


#define IFX_SCU_OVCCON_DCINVAL_LEN (1u)


#define IFX_SCU_OVCCON_DCINVAL_MSK (0x1u)


#define IFX_SCU_OVCCON_DCINVAL_OFF (18u)


#define IFX_SCU_OVCCON_OVCONF_LEN (1u)


#define IFX_SCU_OVCCON_OVCONF_MSK (0x1u)


#define IFX_SCU_OVCCON_OVCONF_OFF (24u)


#define IFX_SCU_OVCCON_OVSTP_LEN (1u)


#define IFX_SCU_OVCCON_OVSTP_MSK (0x1u)


#define IFX_SCU_OVCCON_OVSTP_OFF (17u)


#define IFX_SCU_OVCCON_OVSTRT_LEN (1u)


#define IFX_SCU_OVCCON_OVSTRT_MSK (0x1u)


#define IFX_SCU_OVCCON_OVSTRT_OFF (16u)


#define IFX_SCU_OVCCON_POVCONF_LEN (1u)


#define IFX_SCU_OVCCON_POVCONF_MSK (0x1u)


#define IFX_SCU_OVCCON_POVCONF_OFF (25u)


#define IFX_SCU_OVCENABLE_OVEN0_LEN (1u)


#define IFX_SCU_OVCENABLE_OVEN0_MSK (0x1u)


#define IFX_SCU_OVCENABLE_OVEN0_OFF (0u)


#define IFX_SCU_OVCENABLE_OVEN1_LEN (1u)


#define IFX_SCU_OVCENABLE_OVEN1_MSK (0x1u)


#define IFX_SCU_OVCENABLE_OVEN1_OFF (1u)


#define IFX_SCU_OVCENABLE_OVEN2_LEN (1u)


#define IFX_SCU_OVCENABLE_OVEN2_MSK (0x1u)


#define IFX_SCU_OVCENABLE_OVEN2_OFF (2u)


#define IFX_SCU_PDISC_PDIS0_LEN (1u)


#define IFX_SCU_PDISC_PDIS0_MSK (0x1u)


#define IFX_SCU_PDISC_PDIS0_OFF (0u)


#define IFX_SCU_PDISC_PDIS1_LEN (1u)


#define IFX_SCU_PDISC_PDIS1_MSK (0x1u)


#define IFX_SCU_PDISC_PDIS1_OFF (1u)


#define IFX_SCU_PDR_PD0_LEN (3u)


#define IFX_SCU_PDR_PD0_MSK (0x7u)


#define IFX_SCU_PDR_PD0_OFF (0u)


#define IFX_SCU_PDR_PD1_LEN (3u)


#define IFX_SCU_PDR_PD1_MSK (0x7u)


#define IFX_SCU_PDR_PD1_OFF (4u)


#define IFX_SCU_PDR_PL0_LEN (1u)


#define IFX_SCU_PDR_PL0_MSK (0x1u)


#define IFX_SCU_PDR_PL0_OFF (3u)


#define IFX_SCU_PDR_PL1_LEN (1u)


#define IFX_SCU_PDR_PL1_MSK (0x1u)


#define IFX_SCU_PDR_PL1_OFF (7u)


#define IFX_SCU_PDRR_PDR0_LEN (1u)


#define IFX_SCU_PDRR_PDR0_MSK (0x1u)


#define IFX_SCU_PDRR_PDR0_OFF (0u)


#define IFX_SCU_PDRR_PDR1_LEN (1u)


#define IFX_SCU_PDRR_PDR1_MSK (0x1u)


#define IFX_SCU_PDRR_PDR1_OFF (1u)


#define IFX_SCU_PDRR_PDR2_LEN (1u)


#define IFX_SCU_PDRR_PDR2_MSK (0x1u)


#define IFX_SCU_PDRR_PDR2_OFF (2u)


#define IFX_SCU_PDRR_PDR3_LEN (1u)


#define IFX_SCU_PDRR_PDR3_MSK (0x1u)


#define IFX_SCU_PDRR_PDR3_OFF (3u)


#define IFX_SCU_PDRR_PDR4_LEN (1u)


#define IFX_SCU_PDRR_PDR4_MSK (0x1u)


#define IFX_SCU_PDRR_PDR4_OFF (4u)


#define IFX_SCU_PDRR_PDR5_LEN (1u)


#define IFX_SCU_PDRR_PDR5_MSK (0x1u)


#define IFX_SCU_PDRR_PDR5_OFF (5u)


#define IFX_SCU_PDRR_PDR6_LEN (1u)


#define IFX_SCU_PDRR_PDR6_MSK (0x1u)


#define IFX_SCU_PDRR_PDR6_OFF (6u)


#define IFX_SCU_PDRR_PDR7_LEN (1u)


#define IFX_SCU_PDRR_PDR7_MSK (0x1u)


#define IFX_SCU_PDRR_PDR7_OFF (7u)


#define IFX_SCU_PLLCON0_CLRFINDIS_LEN (1u)


#define IFX_SCU_PLLCON0_CLRFINDIS_MSK (0x1u)


#define IFX_SCU_PLLCON0_CLRFINDIS_OFF (5u)


#define IFX_SCU_PLLCON0_MODEN_LEN (1u)


#define IFX_SCU_PLLCON0_MODEN_MSK (0x1u)


#define IFX_SCU_PLLCON0_MODEN_OFF (2u)


#define IFX_SCU_PLLCON0_NDIV_LEN (7u)


#define IFX_SCU_PLLCON0_NDIV_MSK (0x7fu)


#define IFX_SCU_PLLCON0_NDIV_OFF (9u)


#define IFX_SCU_PLLCON0_OSCDISCDIS_LEN (1u)


#define IFX_SCU_PLLCON0_OSCDISCDIS_MSK (0x1u)


#define IFX_SCU_PLLCON0_OSCDISCDIS_OFF (6u)


#define IFX_SCU_PLLCON0_PDIV_LEN (4u)


#define IFX_SCU_PLLCON0_PDIV_MSK (0xfu)


#define IFX_SCU_PLLCON0_PDIV_OFF (24u)


#define IFX_SCU_PLLCON0_PLLPWD_LEN (1u)


#define IFX_SCU_PLLCON0_PLLPWD_MSK (0x1u)


#define IFX_SCU_PLLCON0_PLLPWD_OFF (16u)


#define IFX_SCU_PLLCON0_RESLD_LEN (1u)


#define IFX_SCU_PLLCON0_RESLD_MSK (0x1u)


#define IFX_SCU_PLLCON0_RESLD_OFF (18u)


#define IFX_SCU_PLLCON0_SETFINDIS_LEN (1u)


#define IFX_SCU_PLLCON0_SETFINDIS_MSK (0x1u)


#define IFX_SCU_PLLCON0_SETFINDIS_OFF (4u)


#define IFX_SCU_PLLCON0_VCOBYP_LEN (1u)


#define IFX_SCU_PLLCON0_VCOBYP_MSK (0x1u)


#define IFX_SCU_PLLCON0_VCOBYP_OFF (0u)


#define IFX_SCU_PLLCON0_VCOPWD_LEN (1u)


#define IFX_SCU_PLLCON0_VCOPWD_MSK (0x1u)


#define IFX_SCU_PLLCON0_VCOPWD_OFF (1u)


#define IFX_SCU_PLLCON1_K1DIV_LEN (7u)


#define IFX_SCU_PLLCON1_K1DIV_MSK (0x7fu)


#define IFX_SCU_PLLCON1_K1DIV_OFF (16u)


#define IFX_SCU_PLLCON1_K2DIV_LEN (7u)


#define IFX_SCU_PLLCON1_K2DIV_MSK (0x7fu)


#define IFX_SCU_PLLCON1_K2DIV_OFF (0u)


#define IFX_SCU_PLLCON1_K3DIV_LEN (7u)


#define IFX_SCU_PLLCON1_K3DIV_MSK (0x7fu)


#define IFX_SCU_PLLCON1_K3DIV_OFF (8u)


#define IFX_SCU_PLLCON2_MODCFG_LEN (16u)


#define IFX_SCU_PLLCON2_MODCFG_MSK (0xffffu)


#define IFX_SCU_PLLCON2_MODCFG_OFF (0u)


#define IFX_SCU_PLLERAYCON0_CLRFINDIS_LEN (1u)


#define IFX_SCU_PLLERAYCON0_CLRFINDIS_MSK (0x1u)


#define IFX_SCU_PLLERAYCON0_CLRFINDIS_OFF (5u)


#define IFX_SCU_PLLERAYCON0_NDIV_LEN (5u)


#define IFX_SCU_PLLERAYCON0_NDIV_MSK (0x1fu)


#define IFX_SCU_PLLERAYCON0_NDIV_OFF (9u)


#define IFX_SCU_PLLERAYCON0_OSCDISCDIS_LEN (1u)


#define IFX_SCU_PLLERAYCON0_OSCDISCDIS_MSK (0x1u)


#define IFX_SCU_PLLERAYCON0_OSCDISCDIS_OFF (6u)


#define IFX_SCU_PLLERAYCON0_PDIV_LEN (4u)


#define IFX_SCU_PLLERAYCON0_PDIV_MSK (0xfu)


#define IFX_SCU_PLLERAYCON0_PDIV_OFF (24u)


#define IFX_SCU_PLLERAYCON0_PLLPWD_LEN (1u)


#define IFX_SCU_PLLERAYCON0_PLLPWD_MSK (0x1u)


#define IFX_SCU_PLLERAYCON0_PLLPWD_OFF (16u)


#define IFX_SCU_PLLERAYCON0_RESLD_LEN (1u)


#define IFX_SCU_PLLERAYCON0_RESLD_MSK (0x1u)


#define IFX_SCU_PLLERAYCON0_RESLD_OFF (18u)


#define IFX_SCU_PLLERAYCON0_SETFINDIS_LEN (1u)


#define IFX_SCU_PLLERAYCON0_SETFINDIS_MSK (0x1u)


#define IFX_SCU_PLLERAYCON0_SETFINDIS_OFF (4u)


#define IFX_SCU_PLLERAYCON0_VCOBYP_LEN (1u)


#define IFX_SCU_PLLERAYCON0_VCOBYP_MSK (0x1u)


#define IFX_SCU_PLLERAYCON0_VCOBYP_OFF (0u)


#define IFX_SCU_PLLERAYCON0_VCOPWD_LEN (1u)


#define IFX_SCU_PLLERAYCON0_VCOPWD_MSK (0x1u)


#define IFX_SCU_PLLERAYCON0_VCOPWD_OFF (1u)


#define IFX_SCU_PLLERAYCON1_K1DIV_LEN (7u)


#define IFX_SCU_PLLERAYCON1_K1DIV_MSK (0x7fu)


#define IFX_SCU_PLLERAYCON1_K1DIV_OFF (16u)


#define IFX_SCU_PLLERAYCON1_K2DIV_LEN (7u)


#define IFX_SCU_PLLERAYCON1_K2DIV_MSK (0x7fu)


#define IFX_SCU_PLLERAYCON1_K2DIV_OFF (0u)


#define IFX_SCU_PLLERAYCON1_K3DIV_LEN (4u)


#define IFX_SCU_PLLERAYCON1_K3DIV_MSK (0xfu)


#define IFX_SCU_PLLERAYCON1_K3DIV_OFF (8u)


#define IFX_SCU_PLLERAYSTAT_FINDIS_LEN (1u)


#define IFX_SCU_PLLERAYSTAT_FINDIS_MSK (0x1u)


#define IFX_SCU_PLLERAYSTAT_FINDIS_OFF (3u)


#define IFX_SCU_PLLERAYSTAT_K1RDY_LEN (1u)


#define IFX_SCU_PLLERAYSTAT_K1RDY_MSK (0x1u)


#define IFX_SCU_PLLERAYSTAT_K1RDY_OFF (4u)


#define IFX_SCU_PLLERAYSTAT_K2RDY_LEN (1u)


#define IFX_SCU_PLLERAYSTAT_K2RDY_MSK (0x1u)


#define IFX_SCU_PLLERAYSTAT_K2RDY_OFF (5u)


#define IFX_SCU_PLLERAYSTAT_PWDSTAT_LEN (1u)


#define IFX_SCU_PLLERAYSTAT_PWDSTAT_MSK (0x1u)


#define IFX_SCU_PLLERAYSTAT_PWDSTAT_OFF (1u)


#define IFX_SCU_PLLERAYSTAT_VCOBYST_LEN (1u)


#define IFX_SCU_PLLERAYSTAT_VCOBYST_MSK (0x1u)


#define IFX_SCU_PLLERAYSTAT_VCOBYST_OFF (0u)


#define IFX_SCU_PLLERAYSTAT_VCOLOCK_LEN (1u)


#define IFX_SCU_PLLERAYSTAT_VCOLOCK_MSK (0x1u)


#define IFX_SCU_PLLERAYSTAT_VCOLOCK_OFF (2u)


#define IFX_SCU_PLLSTAT_FINDIS_LEN (1u)


#define IFX_SCU_PLLSTAT_FINDIS_MSK (0x1u)


#define IFX_SCU_PLLSTAT_FINDIS_OFF (3u)


#define IFX_SCU_PLLSTAT_K1RDY_LEN (1u)


#define IFX_SCU_PLLSTAT_K1RDY_MSK (0x1u)


#define IFX_SCU_PLLSTAT_K1RDY_OFF (4u)


#define IFX_SCU_PLLSTAT_K2RDY_LEN (1u)


#define IFX_SCU_PLLSTAT_K2RDY_MSK (0x1u)


#define IFX_SCU_PLLSTAT_K2RDY_OFF (5u)


#define IFX_SCU_PLLSTAT_MODRUN_LEN (1u)


#define IFX_SCU_PLLSTAT_MODRUN_MSK (0x1u)


#define IFX_SCU_PLLSTAT_MODRUN_OFF (7u)


#define IFX_SCU_PLLSTAT_VCOBYST_LEN (1u)


#define IFX_SCU_PLLSTAT_VCOBYST_MSK (0x1u)


#define IFX_SCU_PLLSTAT_VCOBYST_OFF (0u)


#define IFX_SCU_PLLSTAT_VCOLOCK_LEN (1u)


#define IFX_SCU_PLLSTAT_VCOLOCK_MSK (0x1u)


#define IFX_SCU_PLLSTAT_VCOLOCK_OFF (2u)


#define IFX_SCU_PMCSR_PMST_LEN (3u)


#define IFX_SCU_PMCSR_PMST_MSK (0x7u)


#define IFX_SCU_PMCSR_PMST_OFF (8u)


#define IFX_SCU_PMCSR_REQSLP_LEN (2u)


#define IFX_SCU_PMCSR_REQSLP_MSK (0x3u)


#define IFX_SCU_PMCSR_REQSLP_OFF (0u)


#define IFX_SCU_PMCSR_SMUSLP_LEN (1u)


#define IFX_SCU_PMCSR_SMUSLP_MSK (0x1u)


#define IFX_SCU_PMCSR_SMUSLP_OFF (2u)


#define IFX_SCU_PMSWCR0_BLNKFIL_LEN (3u)


#define IFX_SCU_PMSWCR0_BLNKFIL_MSK (0x7u)


#define IFX_SCU_PMSWCR0_BLNKFIL_OFF (26u)


#define IFX_SCU_PMSWCR0_DCDCSYNC_LEN (1u)


#define IFX_SCU_PMSWCR0_DCDCSYNC_MSK (0x1u)


#define IFX_SCU_PMSWCR0_DCDCSYNC_OFF (25u)


#define IFX_SCU_PMSWCR0_ESR0DFEN_LEN (1u)


#define IFX_SCU_PMSWCR0_ESR0DFEN_MSK (0x1u)


#define IFX_SCU_PMSWCR0_ESR0DFEN_OFF (4u)


#define IFX_SCU_PMSWCR0_ESR0EDCON_LEN (2u)


#define IFX_SCU_PMSWCR0_ESR0EDCON_MSK (0x3u)


#define IFX_SCU_PMSWCR0_ESR0EDCON_OFF (5u)


#define IFX_SCU_PMSWCR0_ESR0TRIST_LEN (1u)


#define IFX_SCU_PMSWCR0_ESR0TRIST_MSK (0x1u)


#define IFX_SCU_PMSWCR0_ESR0TRIST_OFF (29u)


#define IFX_SCU_PMSWCR0_ESR1DFEN_LEN (1u)


#define IFX_SCU_PMSWCR0_ESR1DFEN_MSK (0x1u)


#define IFX_SCU_PMSWCR0_ESR1DFEN_OFF (7u)


#define IFX_SCU_PMSWCR0_ESR1EDCON_LEN (2u)


#define IFX_SCU_PMSWCR0_ESR1EDCON_MSK (0x3u)


#define IFX_SCU_PMSWCR0_ESR1EDCON_OFF (8u)


#define IFX_SCU_PMSWCR0_ESR1WKEN_LEN (1u)


#define IFX_SCU_PMSWCR0_ESR1WKEN_MSK (0x1u)


#define IFX_SCU_PMSWCR0_ESR1WKEN_OFF (1u)


#define IFX_SCU_PMSWCR0_LCK_LEN (1u)


#define IFX_SCU_PMSWCR0_LCK_MSK (0x1u)


#define IFX_SCU_PMSWCR0_LCK_OFF (31u)


#define IFX_SCU_PMSWCR0_PINADFEN_LEN (1u)


#define IFX_SCU_PMSWCR0_PINADFEN_MSK (0x1u)


#define IFX_SCU_PMSWCR0_PINADFEN_OFF (10u)


#define IFX_SCU_PMSWCR0_PINAEDCON_LEN (2u)


#define IFX_SCU_PMSWCR0_PINAEDCON_MSK (0x3u)


#define IFX_SCU_PMSWCR0_PINAEDCON_OFF (11u)


#define IFX_SCU_PMSWCR0_PINAWKEN_LEN (1u)


#define IFX_SCU_PMSWCR0_PINAWKEN_MSK (0x1u)


#define IFX_SCU_PMSWCR0_PINAWKEN_OFF (2u)


#define IFX_SCU_PMSWCR0_PINBDFEN_LEN (1u)


#define IFX_SCU_PMSWCR0_PINBDFEN_MSK (0x1u)


#define IFX_SCU_PMSWCR0_PINBDFEN_OFF (13u)


#define IFX_SCU_PMSWCR0_PINBEDCON_LEN (2u)


#define IFX_SCU_PMSWCR0_PINBEDCON_MSK (0x3u)


#define IFX_SCU_PMSWCR0_PINBEDCON_OFF (14u)


#define IFX_SCU_PMSWCR0_PINBWKEN_LEN (1u)


#define IFX_SCU_PMSWCR0_PINBWKEN_MSK (0x1u)


#define IFX_SCU_PMSWCR0_PINBWKEN_OFF (3u)


#define IFX_SCU_PMSWCR0_PORSTDF_LEN (1u)


#define IFX_SCU_PMSWCR0_PORSTDF_MSK (0x1u)


#define IFX_SCU_PMSWCR0_PORSTDF_OFF (23u)


#define IFX_SCU_PMSWCR0_PWRWKEN_LEN (1u)


#define IFX_SCU_PMSWCR0_PWRWKEN_MSK (0x1u)


#define IFX_SCU_PMSWCR0_PWRWKEN_OFF (24u)


#define IFX_SCU_PMSWCR0_STBYRAMSEL_LEN (2u)


#define IFX_SCU_PMSWCR0_STBYRAMSEL_MSK (0x3u)


#define IFX_SCU_PMSWCR0_STBYRAMSEL_OFF (17u)


#define IFX_SCU_PMSWCR0_TRISTEN_LEN (1u)


#define IFX_SCU_PMSWCR0_TRISTEN_MSK (0x1u)


#define IFX_SCU_PMSWCR0_TRISTEN_OFF (21u)


#define IFX_SCU_PMSWCR0_TRISTREQ_LEN (1u)


#define IFX_SCU_PMSWCR0_TRISTREQ_MSK (0x1u)


#define IFX_SCU_PMSWCR0_TRISTREQ_OFF (22u)


#define IFX_SCU_PMSWCR1_CPUIDLSEL_LEN (3u)


#define IFX_SCU_PMSWCR1_CPUIDLSEL_MSK (0x7u)


#define IFX_SCU_PMSWCR1_CPUIDLSEL_OFF (8u)


#define IFX_SCU_PMSWCR1_CPUSEL_LEN (3u)


#define IFX_SCU_PMSWCR1_CPUSEL_MSK (0x7u)


#define IFX_SCU_PMSWCR1_CPUSEL_OFF (24u)


#define IFX_SCU_PMSWCR1_IRADIS_LEN (1u)


#define IFX_SCU_PMSWCR1_IRADIS_MSK (0x1u)


#define IFX_SCU_PMSWCR1_IRADIS_OFF (12u)


#define IFX_SCU_PMSWCR1_STBYEV_LEN (3u)


#define IFX_SCU_PMSWCR1_STBYEV_MSK (0x7u)


#define IFX_SCU_PMSWCR1_STBYEV_OFF (28u)


#define IFX_SCU_PMSWCR1_STBYEVEN_LEN (1u)


#define IFX_SCU_PMSWCR1_STBYEVEN_MSK (0x1u)


#define IFX_SCU_PMSWCR1_STBYEVEN_OFF (27u)


#define IFX_SCU_PMSWSTAT_BLNKFIL_LEN (3u)


#define IFX_SCU_PMSWSTAT_BLNKFIL_MSK (0x7u)


#define IFX_SCU_PMSWSTAT_BLNKFIL_OFF (24u)


#define IFX_SCU_PMSWSTAT_ESR0TRIST_LEN (1u)


#define IFX_SCU_PMSWSTAT_ESR0TRIST_MSK (0x1u)


#define IFX_SCU_PMSWSTAT_ESR0TRIST_OFF (27u)


#define IFX_SCU_PMSWSTAT_ESR1OVRUN_LEN (1u)


#define IFX_SCU_PMSWSTAT_ESR1OVRUN_MSK (0x1u)


#define IFX_SCU_PMSWSTAT_ESR1OVRUN_OFF (3u)


#define IFX_SCU_PMSWSTAT_ESR1WKEN_LEN (1u)


#define IFX_SCU_PMSWSTAT_ESR1WKEN_MSK (0x1u)


#define IFX_SCU_PMSWSTAT_ESR1WKEN_OFF (20u)


#define IFX_SCU_PMSWSTAT_ESR1WKP_LEN (1u)


#define IFX_SCU_PMSWSTAT_ESR1WKP_MSK (0x1u)


#define IFX_SCU_PMSWSTAT_ESR1WKP_OFF (2u)


#define IFX_SCU_PMSWSTAT_HWCFGEVR_LEN (3u)


#define IFX_SCU_PMSWSTAT_HWCFGEVR_MSK (0x7u)


#define IFX_SCU_PMSWSTAT_HWCFGEVR_OFF (10u)


#define IFX_SCU_PMSWSTAT_PINAOVRUN_LEN (1u)


#define IFX_SCU_PMSWSTAT_PINAOVRUN_MSK (0x1u)


#define IFX_SCU_PMSWSTAT_PINAOVRUN_OFF (5u)


#define IFX_SCU_PMSWSTAT_PINAWKEN_LEN (1u)


#define IFX_SCU_PMSWSTAT_PINAWKEN_MSK (0x1u)


#define IFX_SCU_PMSWSTAT_PINAWKEN_OFF (21u)


#define IFX_SCU_PMSWSTAT_PINAWKP_LEN (1u)


#define IFX_SCU_PMSWSTAT_PINAWKP_MSK (0x1u)


#define IFX_SCU_PMSWSTAT_PINAWKP_OFF (4u)


#define IFX_SCU_PMSWSTAT_PINBOVRUN_LEN (1u)


#define IFX_SCU_PMSWSTAT_PINBOVRUN_MSK (0x1u)


#define IFX_SCU_PMSWSTAT_PINBOVRUN_OFF (7u)


#define IFX_SCU_PMSWSTAT_PINBWKEN_LEN (1u)


#define IFX_SCU_PMSWSTAT_PINBWKEN_MSK (0x1u)


#define IFX_SCU_PMSWSTAT_PINBWKEN_OFF (22u)


#define IFX_SCU_PMSWSTAT_PINBWKP_LEN (1u)


#define IFX_SCU_PMSWSTAT_PINBWKP_MSK (0x1u)


#define IFX_SCU_PMSWSTAT_PINBWKP_OFF (6u)


#define IFX_SCU_PMSWSTAT_PORSTDF_LEN (1u)


#define IFX_SCU_PMSWSTAT_PORSTDF_MSK (0x1u)


#define IFX_SCU_PMSWSTAT_PORSTDF_OFF (9u)


#define IFX_SCU_PMSWSTAT_PWRWKEN_LEN (1u)


#define IFX_SCU_PMSWSTAT_PWRWKEN_MSK (0x1u)


#define IFX_SCU_PMSWSTAT_PWRWKEN_OFF (23u)


#define IFX_SCU_PMSWSTAT_PWRWKP_LEN (1u)


#define IFX_SCU_PMSWSTAT_PWRWKP_MSK (0x1u)


#define IFX_SCU_PMSWSTAT_PWRWKP_OFF (8u)


#define IFX_SCU_PMSWSTAT_STBYRAM_LEN (2u)


#define IFX_SCU_PMSWSTAT_STBYRAM_MSK (0x3u)


#define IFX_SCU_PMSWSTAT_STBYRAM_OFF (13u)


#define IFX_SCU_PMSWSTAT_TRIST_LEN (1u)


#define IFX_SCU_PMSWSTAT_TRIST_MSK (0x1u)


#define IFX_SCU_PMSWSTAT_TRIST_OFF (15u)


#define IFX_SCU_PMSWSTATCLR_ESR1OVRUNCLR_LEN (1u)


#define IFX_SCU_PMSWSTATCLR_ESR1OVRUNCLR_MSK (0x1u)


#define IFX_SCU_PMSWSTATCLR_ESR1OVRUNCLR_OFF (3u)


#define IFX_SCU_PMSWSTATCLR_ESR1WKPCLR_LEN (1u)


#define IFX_SCU_PMSWSTATCLR_ESR1WKPCLR_MSK (0x1u)


#define IFX_SCU_PMSWSTATCLR_ESR1WKPCLR_OFF (2u)


#define IFX_SCU_PMSWSTATCLR_PINAOVRUNCLR_LEN (1u)


#define IFX_SCU_PMSWSTATCLR_PINAOVRUNCLR_MSK (0x1u)


#define IFX_SCU_PMSWSTATCLR_PINAOVRUNCLR_OFF (5u)


#define IFX_SCU_PMSWSTATCLR_PINAWKPCLR_LEN (1u)


#define IFX_SCU_PMSWSTATCLR_PINAWKPCLR_MSK (0x1u)


#define IFX_SCU_PMSWSTATCLR_PINAWKPCLR_OFF (4u)


#define IFX_SCU_PMSWSTATCLR_PINBOVRUNCLR_LEN (1u)


#define IFX_SCU_PMSWSTATCLR_PINBOVRUNCLR_MSK (0x1u)


#define IFX_SCU_PMSWSTATCLR_PINBOVRUNCLR_OFF (7u)


#define IFX_SCU_PMSWSTATCLR_PINBWKPCLR_LEN (1u)


#define IFX_SCU_PMSWSTATCLR_PINBWKPCLR_MSK (0x1u)


#define IFX_SCU_PMSWSTATCLR_PINBWKPCLR_OFF (6u)


#define IFX_SCU_PMSWSTATCLR_PWRWKPCLR_LEN (1u)


#define IFX_SCU_PMSWSTATCLR_PWRWKPCLR_MSK (0x1u)


#define IFX_SCU_PMSWSTATCLR_PWRWKPCLR_OFF (8u)


#define IFX_SCU_RSTCON2_CLRC_LEN (1u)


#define IFX_SCU_RSTCON2_CLRC_MSK (0x1u)


#define IFX_SCU_RSTCON2_CLRC_OFF (1u)


#define IFX_SCU_RSTCON2_CSS0_LEN (1u)


#define IFX_SCU_RSTCON2_CSS0_MSK (0x1u)


#define IFX_SCU_RSTCON2_CSS0_OFF (12u)


#define IFX_SCU_RSTCON2_CSS1_LEN (1u)


#define IFX_SCU_RSTCON2_CSS1_MSK (0x1u)


#define IFX_SCU_RSTCON2_CSS1_OFF (13u)


#define IFX_SCU_RSTCON2_CSS2_LEN (1u)


#define IFX_SCU_RSTCON2_CSS2_MSK (0x1u)


#define IFX_SCU_RSTCON2_CSS2_OFF (14u)


#define IFX_SCU_RSTCON2_USRINFO_LEN (16u)


#define IFX_SCU_RSTCON2_USRINFO_MSK (0xffffu)


#define IFX_SCU_RSTCON2_USRINFO_OFF (16u)


#define IFX_SCU_RSTCON_ESR0_LEN (2u)


#define IFX_SCU_RSTCON_ESR0_MSK (0x3u)


#define IFX_SCU_RSTCON_ESR0_OFF (0u)


#define IFX_SCU_RSTCON_ESR1_LEN (2u)


#define IFX_SCU_RSTCON_ESR1_MSK (0x3u)


#define IFX_SCU_RSTCON_ESR1_OFF (2u)


#define IFX_SCU_RSTCON_SMU_LEN (2u)


#define IFX_SCU_RSTCON_SMU_MSK (0x3u)


#define IFX_SCU_RSTCON_SMU_OFF (6u)


#define IFX_SCU_RSTCON_STM0_LEN (2u)


#define IFX_SCU_RSTCON_STM0_MSK (0x3u)


#define IFX_SCU_RSTCON_STM0_OFF (10u)


#define IFX_SCU_RSTCON_STM1_LEN (2u)


#define IFX_SCU_RSTCON_STM1_MSK (0x3u)


#define IFX_SCU_RSTCON_STM1_OFF (12u)


#define IFX_SCU_RSTCON_STM2_LEN (2u)


#define IFX_SCU_RSTCON_STM2_MSK (0x3u)


#define IFX_SCU_RSTCON_STM2_OFF (14u)


#define IFX_SCU_RSTCON_SW_LEN (2u)


#define IFX_SCU_RSTCON_SW_MSK (0x3u)


#define IFX_SCU_RSTCON_SW_OFF (8u)


#define IFX_SCU_RSTSTAT_CB0_LEN (1u)


#define IFX_SCU_RSTSTAT_CB0_MSK (0x1u)


#define IFX_SCU_RSTSTAT_CB0_OFF (18u)


#define IFX_SCU_RSTSTAT_CB1_LEN (1u)


#define IFX_SCU_RSTSTAT_CB1_MSK (0x1u)


#define IFX_SCU_RSTSTAT_CB1_OFF (19u)


#define IFX_SCU_RSTSTAT_CB3_LEN (1u)


#define IFX_SCU_RSTSTAT_CB3_MSK (0x1u)


#define IFX_SCU_RSTSTAT_CB3_OFF (20u)


#define IFX_SCU_RSTSTAT_ESR0_LEN (1u)


#define IFX_SCU_RSTSTAT_ESR0_MSK (0x1u)


#define IFX_SCU_RSTSTAT_ESR0_OFF (0u)


#define IFX_SCU_RSTSTAT_ESR1_LEN (1u)


#define IFX_SCU_RSTSTAT_ESR1_MSK (0x1u)


#define IFX_SCU_RSTSTAT_ESR1_OFF (1u)


#define IFX_SCU_RSTSTAT_EVR13_LEN (1u)


#define IFX_SCU_RSTSTAT_EVR13_MSK (0x1u)


#define IFX_SCU_RSTSTAT_EVR13_OFF (23u)


#define IFX_SCU_RSTSTAT_EVR33_LEN (1u)


#define IFX_SCU_RSTSTAT_EVR33_MSK (0x1u)


#define IFX_SCU_RSTSTAT_EVR33_OFF (24u)


#define IFX_SCU_RSTSTAT_PORST_LEN (1u)


#define IFX_SCU_RSTSTAT_PORST_MSK (0x1u)


#define IFX_SCU_RSTSTAT_PORST_OFF (16u)


#define IFX_SCU_RSTSTAT_SMU_LEN (1u)


#define IFX_SCU_RSTSTAT_SMU_MSK (0x1u)


#define IFX_SCU_RSTSTAT_SMU_OFF (3u)


#define IFX_SCU_RSTSTAT_STBYR_LEN (1u)


#define IFX_SCU_RSTSTAT_STBYR_MSK (0x1u)


#define IFX_SCU_RSTSTAT_STBYR_OFF (28u)


#define IFX_SCU_RSTSTAT_STM0_LEN (1u)


#define IFX_SCU_RSTSTAT_STM0_MSK (0x1u)


#define IFX_SCU_RSTSTAT_STM0_OFF (5u)


#define IFX_SCU_RSTSTAT_STM1_LEN (1u)


#define IFX_SCU_RSTSTAT_STM1_MSK (0x1u)


#define IFX_SCU_RSTSTAT_STM1_OFF (6u)


#define IFX_SCU_RSTSTAT_STM2_LEN (1u)


#define IFX_SCU_RSTSTAT_STM2_MSK (0x1u)


#define IFX_SCU_RSTSTAT_STM2_OFF (7u)


#define IFX_SCU_RSTSTAT_SW_LEN (1u)


#define IFX_SCU_RSTSTAT_SW_MSK (0x1u)


#define IFX_SCU_RSTSTAT_SW_OFF (4u)


#define IFX_SCU_RSTSTAT_SWD_LEN (1u)


#define IFX_SCU_RSTSTAT_SWD_MSK (0x1u)


#define IFX_SCU_RSTSTAT_SWD_OFF (25u)


#define IFX_SCU_SAFECON_HBT_LEN (1u)


#define IFX_SCU_SAFECON_HBT_MSK (0x1u)


#define IFX_SCU_SAFECON_HBT_OFF (0u)


#define IFX_SCU_STSTAT_FTM_LEN (7u)


#define IFX_SCU_STSTAT_FTM_MSK (0x7fu)


#define IFX_SCU_STSTAT_FTM_OFF (8u)


#define IFX_SCU_STSTAT_HWCFG_LEN (8u)


#define IFX_SCU_STSTAT_HWCFG_MSK (0xffu)


#define IFX_SCU_STSTAT_HWCFG_OFF (0u)


#define IFX_SCU_STSTAT_LUDIS_LEN (1u)


#define IFX_SCU_STSTAT_LUDIS_MSK (0x1u)


#define IFX_SCU_STSTAT_LUDIS_OFF (17u)


#define IFX_SCU_STSTAT_MODE_LEN (1u)


#define IFX_SCU_STSTAT_MODE_MSK (0x1u)


#define IFX_SCU_STSTAT_MODE_OFF (15u)


#define IFX_SCU_STSTAT_RAMINT_LEN (1u)


#define IFX_SCU_STSTAT_RAMINT_MSK (0x1u)


#define IFX_SCU_STSTAT_RAMINT_OFF (24u)


#define IFX_SCU_STSTAT_SPDEN_LEN (1u)


#define IFX_SCU_STSTAT_SPDEN_MSK (0x1u)


#define IFX_SCU_STSTAT_SPDEN_OFF (20u)


#define IFX_SCU_STSTAT_TRSTL_LEN (1u)


#define IFX_SCU_STSTAT_TRSTL_MSK (0x1u)


#define IFX_SCU_STSTAT_TRSTL_OFF (19u)


#define IFX_SCU_SWRSTCON_SWRSTREQ_LEN (1u)


#define IFX_SCU_SWRSTCON_SWRSTREQ_MSK (0x1u)


#define IFX_SCU_SWRSTCON_SWRSTREQ_OFF (1u)


#define IFX_SCU_SYSCON_CCTRIG0_LEN (1u)


#define IFX_SCU_SYSCON_CCTRIG0_MSK (0x1u)


#define IFX_SCU_SYSCON_CCTRIG0_OFF (0u)


#define IFX_SCU_SYSCON_DATM_LEN (1u)


#define IFX_SCU_SYSCON_DATM_MSK (0x1u)


#define IFX_SCU_SYSCON_DATM_OFF (8u)


#define IFX_SCU_SYSCON_RAMINTM_LEN (2u)


#define IFX_SCU_SYSCON_RAMINTM_MSK (0x3u)


#define IFX_SCU_SYSCON_RAMINTM_OFF (2u)


#define IFX_SCU_SYSCON_SETLUDIS_LEN (1u)


#define IFX_SCU_SYSCON_SETLUDIS_MSK (0x1u)


#define IFX_SCU_SYSCON_SETLUDIS_OFF (4u)


#define IFX_SCU_TRAPCLR_ESR0T_LEN (1u)


#define IFX_SCU_TRAPCLR_ESR0T_MSK (0x1u)


#define IFX_SCU_TRAPCLR_ESR0T_OFF (0u)


#define IFX_SCU_TRAPCLR_ESR1T_LEN (1u)


#define IFX_SCU_TRAPCLR_ESR1T_MSK (0x1u)


#define IFX_SCU_TRAPCLR_ESR1T_OFF (1u)


#define IFX_SCU_TRAPCLR_SMUT_LEN (1u)


#define IFX_SCU_TRAPCLR_SMUT_MSK (0x1u)


#define IFX_SCU_TRAPCLR_SMUT_OFF (3u)


#define IFX_SCU_TRAPDIS_ESR0T_LEN (1u)


#define IFX_SCU_TRAPDIS_ESR0T_MSK (0x1u)


#define IFX_SCU_TRAPDIS_ESR0T_OFF (0u)


#define IFX_SCU_TRAPDIS_ESR1T_LEN (1u)


#define IFX_SCU_TRAPDIS_ESR1T_MSK (0x1u)


#define IFX_SCU_TRAPDIS_ESR1T_OFF (1u)


#define IFX_SCU_TRAPDIS_SMUT_LEN (1u)


#define IFX_SCU_TRAPDIS_SMUT_MSK (0x1u)


#define IFX_SCU_TRAPDIS_SMUT_OFF (3u)


#define IFX_SCU_TRAPSET_ESR0T_LEN (1u)


#define IFX_SCU_TRAPSET_ESR0T_MSK (0x1u)


#define IFX_SCU_TRAPSET_ESR0T_OFF (0u)


#define IFX_SCU_TRAPSET_ESR1T_LEN (1u)


#define IFX_SCU_TRAPSET_ESR1T_MSK (0x1u)


#define IFX_SCU_TRAPSET_ESR1T_OFF (1u)


#define IFX_SCU_TRAPSET_SMUT_LEN (1u)


#define IFX_SCU_TRAPSET_SMUT_MSK (0x1u)


#define IFX_SCU_TRAPSET_SMUT_OFF (3u)


#define IFX_SCU_TRAPSTAT_ESR0T_LEN (1u)


#define IFX_SCU_TRAPSTAT_ESR0T_MSK (0x1u)


#define IFX_SCU_TRAPSTAT_ESR0T_OFF (0u)


#define IFX_SCU_TRAPSTAT_ESR1T_LEN (1u)


#define IFX_SCU_TRAPSTAT_ESR1T_MSK (0x1u)


#define IFX_SCU_TRAPSTAT_ESR1T_OFF (1u)


#define IFX_SCU_TRAPSTAT_SMUT_LEN (1u)


#define IFX_SCU_TRAPSTAT_SMUT_MSK (0x1u)


#define IFX_SCU_TRAPSTAT_SMUT_OFF (3u)


#define IFX_SCU_WDTCPU_CON0_ENDINIT_LEN (1u)


#define IFX_SCU_WDTCPU_CON0_ENDINIT_MSK (0x1u)


#define IFX_SCU_WDTCPU_CON0_ENDINIT_OFF (0u)


#define IFX_SCU_WDTCPU_CON0_LCK_LEN (1u)


#define IFX_SCU_WDTCPU_CON0_LCK_MSK (0x1u)


#define IFX_SCU_WDTCPU_CON0_LCK_OFF (1u)


#define IFX_SCU_WDTCPU_CON0_PW_LEN (14u)


#define IFX_SCU_WDTCPU_CON0_PW_MSK (0x3fffu)


#define IFX_SCU_WDTCPU_CON0_PW_OFF (2u)


#define IFX_SCU_WDTCPU_CON0_REL_LEN (16u)


#define IFX_SCU_WDTCPU_CON0_REL_MSK (0xffffu)


#define IFX_SCU_WDTCPU_CON0_REL_OFF (16u)


#define IFX_SCU_WDTCPU_CON1_DR_LEN (1u)


#define IFX_SCU_WDTCPU_CON1_DR_MSK (0x1u)


#define IFX_SCU_WDTCPU_CON1_DR_OFF (3u)


#define IFX_SCU_WDTCPU_CON1_IR0_LEN (1u)


#define IFX_SCU_WDTCPU_CON1_IR0_MSK (0x1u)


#define IFX_SCU_WDTCPU_CON1_IR0_OFF (2u)


#define IFX_SCU_WDTCPU_CON1_IR1_LEN (1u)


#define IFX_SCU_WDTCPU_CON1_IR1_MSK (0x1u)


#define IFX_SCU_WDTCPU_CON1_IR1_OFF (5u)


#define IFX_SCU_WDTCPU_CON1_PAR_LEN (1u)


#define IFX_SCU_WDTCPU_CON1_PAR_MSK (0x1u)


#define IFX_SCU_WDTCPU_CON1_PAR_OFF (7u)


#define IFX_SCU_WDTCPU_CON1_TCR_LEN (1u)


#define IFX_SCU_WDTCPU_CON1_TCR_MSK (0x1u)


#define IFX_SCU_WDTCPU_CON1_TCR_OFF (8u)


#define IFX_SCU_WDTCPU_CON1_TCTR_LEN (7u)


#define IFX_SCU_WDTCPU_CON1_TCTR_MSK (0x7fu)


#define IFX_SCU_WDTCPU_CON1_TCTR_OFF (9u)


#define IFX_SCU_WDTCPU_CON1_UR_LEN (1u)


#define IFX_SCU_WDTCPU_CON1_UR_MSK (0x1u)


#define IFX_SCU_WDTCPU_CON1_UR_OFF (6u)


#define IFX_SCU_WDTCPU_SR_AE_LEN (1u)


#define IFX_SCU_WDTCPU_SR_AE_MSK (0x1u)


#define IFX_SCU_WDTCPU_SR_AE_OFF (0u)


#define IFX_SCU_WDTCPU_SR_DS_LEN (1u)


#define IFX_SCU_WDTCPU_SR_DS_MSK (0x1u)


#define IFX_SCU_WDTCPU_SR_DS_OFF (3u)


#define IFX_SCU_WDTCPU_SR_IS0_LEN (1u)


#define IFX_SCU_WDTCPU_SR_IS0_MSK (0x1u)


#define IFX_SCU_WDTCPU_SR_IS0_OFF (2u)


#define IFX_SCU_WDTCPU_SR_IS1_LEN (1u)


#define IFX_SCU_WDTCPU_SR_IS1_MSK (0x1u)


#define IFX_SCU_WDTCPU_SR_IS1_OFF (5u)


#define IFX_SCU_WDTCPU_SR_OE_LEN (1u)


#define IFX_SCU_WDTCPU_SR_OE_MSK (0x1u)


#define IFX_SCU_WDTCPU_SR_OE_OFF (1u)


#define IFX_SCU_WDTCPU_SR_PAS_LEN (1u)


#define IFX_SCU_WDTCPU_SR_PAS_MSK (0x1u)


#define IFX_SCU_WDTCPU_SR_PAS_OFF (7u)


#define IFX_SCU_WDTCPU_SR_TCS_LEN (1u)


#define IFX_SCU_WDTCPU_SR_TCS_MSK (0x1u)


#define IFX_SCU_WDTCPU_SR_TCS_OFF (8u)


#define IFX_SCU_WDTCPU_SR_TCT_LEN (7u)


#define IFX_SCU_WDTCPU_SR_TCT_MSK (0x7fu)


#define IFX_SCU_WDTCPU_SR_TCT_OFF (9u)


#define IFX_SCU_WDTCPU_SR_TIM_LEN (16u)


#define IFX_SCU_WDTCPU_SR_TIM_MSK (0xffffu)


#define IFX_SCU_WDTCPU_SR_TIM_OFF (16u)


#define IFX_SCU_WDTCPU_SR_TO_LEN (1u)


#define IFX_SCU_WDTCPU_SR_TO_MSK (0x1u)


#define IFX_SCU_WDTCPU_SR_TO_OFF (4u)


#define IFX_SCU_WDTCPU_SR_US_LEN (1u)


#define IFX_SCU_WDTCPU_SR_US_MSK (0x1u)


#define IFX_SCU_WDTCPU_SR_US_OFF (6u)


#define IFX_SCU_WDTS_CON0_ENDINIT_LEN (1u)


#define IFX_SCU_WDTS_CON0_ENDINIT_MSK (0x1u)


#define IFX_SCU_WDTS_CON0_ENDINIT_OFF (0u)


#define IFX_SCU_WDTS_CON0_LCK_LEN (1u)


#define IFX_SCU_WDTS_CON0_LCK_MSK (0x1u)


#define IFX_SCU_WDTS_CON0_LCK_OFF (1u)


#define IFX_SCU_WDTS_CON0_PW_LEN (14u)


#define IFX_SCU_WDTS_CON0_PW_MSK (0x3fffu)


#define IFX_SCU_WDTS_CON0_PW_OFF (2u)


#define IFX_SCU_WDTS_CON0_REL_LEN (16u)


#define IFX_SCU_WDTS_CON0_REL_MSK (0xffffu)


#define IFX_SCU_WDTS_CON0_REL_OFF (16u)


#define IFX_SCU_WDTS_CON1_CLRIRF_LEN (1u)


#define IFX_SCU_WDTS_CON1_CLRIRF_MSK (0x1u)


#define IFX_SCU_WDTS_CON1_CLRIRF_OFF (0u)


#define IFX_SCU_WDTS_CON1_DR_LEN (1u)


#define IFX_SCU_WDTS_CON1_DR_MSK (0x1u)


#define IFX_SCU_WDTS_CON1_DR_OFF (3u)


#define IFX_SCU_WDTS_CON1_IR0_LEN (1u)


#define IFX_SCU_WDTS_CON1_IR0_MSK (0x1u)


#define IFX_SCU_WDTS_CON1_IR0_OFF (2u)


#define IFX_SCU_WDTS_CON1_IR1_LEN (1u)


#define IFX_SCU_WDTS_CON1_IR1_MSK (0x1u)


#define IFX_SCU_WDTS_CON1_IR1_OFF (5u)


#define IFX_SCU_WDTS_CON1_PAR_LEN (1u)


#define IFX_SCU_WDTS_CON1_PAR_MSK (0x1u)


#define IFX_SCU_WDTS_CON1_PAR_OFF (7u)


#define IFX_SCU_WDTS_CON1_TCR_LEN (1u)


#define IFX_SCU_WDTS_CON1_TCR_MSK (0x1u)


#define IFX_SCU_WDTS_CON1_TCR_OFF (8u)


#define IFX_SCU_WDTS_CON1_TCTR_LEN (7u)


#define IFX_SCU_WDTS_CON1_TCTR_MSK (0x7fu)


#define IFX_SCU_WDTS_CON1_TCTR_OFF (9u)


#define IFX_SCU_WDTS_CON1_UR_LEN (1u)


#define IFX_SCU_WDTS_CON1_UR_MSK (0x1u)


#define IFX_SCU_WDTS_CON1_UR_OFF (6u)


#define IFX_SCU_WDTS_SR_AE_LEN (1u)


#define IFX_SCU_WDTS_SR_AE_MSK (0x1u)


#define IFX_SCU_WDTS_SR_AE_OFF (0u)


#define IFX_SCU_WDTS_SR_DS_LEN (1u)


#define IFX_SCU_WDTS_SR_DS_MSK (0x1u)


#define IFX_SCU_WDTS_SR_DS_OFF (3u)


#define IFX_SCU_WDTS_SR_IS0_LEN (1u)


#define IFX_SCU_WDTS_SR_IS0_MSK (0x1u)


#define IFX_SCU_WDTS_SR_IS0_OFF (2u)


#define IFX_SCU_WDTS_SR_IS1_LEN (1u)


#define IFX_SCU_WDTS_SR_IS1_MSK (0x1u)


#define IFX_SCU_WDTS_SR_IS1_OFF (5u)


#define IFX_SCU_WDTS_SR_OE_LEN (1u)


#define IFX_SCU_WDTS_SR_OE_MSK (0x1u)


#define IFX_SCU_WDTS_SR_OE_OFF (1u)


#define IFX_SCU_WDTS_SR_PAS_LEN (1u)


#define IFX_SCU_WDTS_SR_PAS_MSK (0x1u)


#define IFX_SCU_WDTS_SR_PAS_OFF (7u)


#define IFX_SCU_WDTS_SR_TCS_LEN (1u)


#define IFX_SCU_WDTS_SR_TCS_MSK (0x1u)


#define IFX_SCU_WDTS_SR_TCS_OFF (8u)


#define IFX_SCU_WDTS_SR_TCT_LEN (7u)


#define IFX_SCU_WDTS_SR_TCT_MSK (0x7fu)


#define IFX_SCU_WDTS_SR_TCT_OFF (9u)


#define IFX_SCU_WDTS_SR_TIM_LEN (16u)


#define IFX_SCU_WDTS_SR_TIM_MSK (0xffffu)


#define IFX_SCU_WDTS_SR_TIM_OFF (16u)


#define IFX_SCU_WDTS_SR_TO_LEN (1u)


#define IFX_SCU_WDTS_SR_TO_MSK (0x1u)


#define IFX_SCU_WDTS_SR_TO_OFF (4u)


#define IFX_SCU_WDTS_SR_US_LEN (1u)


#define IFX_SCU_WDTS_SR_US_MSK (0x1u)


#define IFX_SCU_WDTS_SR_US_OFF (6u)
# 54 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 2 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxFlash_bf.h" 1 3
# 28 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxFlash_bf.h" 3
#define IFXFLASH_BF_H 1






#define IFX_FLASH_ACCEN0_EN0_LEN (1u)


#define IFX_FLASH_ACCEN0_EN0_MSK (0x1u)


#define IFX_FLASH_ACCEN0_EN0_OFF (0u)


#define IFX_FLASH_ACCEN0_EN10_LEN (1u)


#define IFX_FLASH_ACCEN0_EN10_MSK (0x1u)


#define IFX_FLASH_ACCEN0_EN10_OFF (10u)


#define IFX_FLASH_ACCEN0_EN11_LEN (1u)


#define IFX_FLASH_ACCEN0_EN11_MSK (0x1u)


#define IFX_FLASH_ACCEN0_EN11_OFF (11u)


#define IFX_FLASH_ACCEN0_EN12_LEN (1u)


#define IFX_FLASH_ACCEN0_EN12_MSK (0x1u)


#define IFX_FLASH_ACCEN0_EN12_OFF (12u)


#define IFX_FLASH_ACCEN0_EN13_LEN (1u)


#define IFX_FLASH_ACCEN0_EN13_MSK (0x1u)


#define IFX_FLASH_ACCEN0_EN13_OFF (13u)


#define IFX_FLASH_ACCEN0_EN14_LEN (1u)


#define IFX_FLASH_ACCEN0_EN14_MSK (0x1u)


#define IFX_FLASH_ACCEN0_EN14_OFF (14u)


#define IFX_FLASH_ACCEN0_EN15_LEN (1u)


#define IFX_FLASH_ACCEN0_EN15_MSK (0x1u)


#define IFX_FLASH_ACCEN0_EN15_OFF (15u)


#define IFX_FLASH_ACCEN0_EN16_LEN (1u)


#define IFX_FLASH_ACCEN0_EN16_MSK (0x1u)


#define IFX_FLASH_ACCEN0_EN16_OFF (16u)


#define IFX_FLASH_ACCEN0_EN17_LEN (1u)


#define IFX_FLASH_ACCEN0_EN17_MSK (0x1u)


#define IFX_FLASH_ACCEN0_EN17_OFF (17u)


#define IFX_FLASH_ACCEN0_EN18_LEN (1u)


#define IFX_FLASH_ACCEN0_EN18_MSK (0x1u)


#define IFX_FLASH_ACCEN0_EN18_OFF (18u)


#define IFX_FLASH_ACCEN0_EN19_LEN (1u)


#define IFX_FLASH_ACCEN0_EN19_MSK (0x1u)


#define IFX_FLASH_ACCEN0_EN19_OFF (19u)


#define IFX_FLASH_ACCEN0_EN1_LEN (1u)


#define IFX_FLASH_ACCEN0_EN1_MSK (0x1u)


#define IFX_FLASH_ACCEN0_EN1_OFF (1u)


#define IFX_FLASH_ACCEN0_EN20_LEN (1u)


#define IFX_FLASH_ACCEN0_EN20_MSK (0x1u)


#define IFX_FLASH_ACCEN0_EN20_OFF (20u)


#define IFX_FLASH_ACCEN0_EN21_LEN (1u)


#define IFX_FLASH_ACCEN0_EN21_MSK (0x1u)


#define IFX_FLASH_ACCEN0_EN21_OFF (21u)


#define IFX_FLASH_ACCEN0_EN22_LEN (1u)


#define IFX_FLASH_ACCEN0_EN22_MSK (0x1u)


#define IFX_FLASH_ACCEN0_EN22_OFF (22u)


#define IFX_FLASH_ACCEN0_EN23_LEN (1u)


#define IFX_FLASH_ACCEN0_EN23_MSK (0x1u)


#define IFX_FLASH_ACCEN0_EN23_OFF (23u)


#define IFX_FLASH_ACCEN0_EN24_LEN (1u)


#define IFX_FLASH_ACCEN0_EN24_MSK (0x1u)


#define IFX_FLASH_ACCEN0_EN24_OFF (24u)


#define IFX_FLASH_ACCEN0_EN25_LEN (1u)


#define IFX_FLASH_ACCEN0_EN25_MSK (0x1u)


#define IFX_FLASH_ACCEN0_EN25_OFF (25u)


#define IFX_FLASH_ACCEN0_EN26_LEN (1u)


#define IFX_FLASH_ACCEN0_EN26_MSK (0x1u)


#define IFX_FLASH_ACCEN0_EN26_OFF (26u)


#define IFX_FLASH_ACCEN0_EN27_LEN (1u)


#define IFX_FLASH_ACCEN0_EN27_MSK (0x1u)


#define IFX_FLASH_ACCEN0_EN27_OFF (27u)


#define IFX_FLASH_ACCEN0_EN28_LEN (1u)


#define IFX_FLASH_ACCEN0_EN28_MSK (0x1u)


#define IFX_FLASH_ACCEN0_EN28_OFF (28u)


#define IFX_FLASH_ACCEN0_EN29_LEN (1u)


#define IFX_FLASH_ACCEN0_EN29_MSK (0x1u)


#define IFX_FLASH_ACCEN0_EN29_OFF (29u)


#define IFX_FLASH_ACCEN0_EN2_LEN (1u)


#define IFX_FLASH_ACCEN0_EN2_MSK (0x1u)


#define IFX_FLASH_ACCEN0_EN2_OFF (2u)


#define IFX_FLASH_ACCEN0_EN30_LEN (1u)


#define IFX_FLASH_ACCEN0_EN30_MSK (0x1u)


#define IFX_FLASH_ACCEN0_EN30_OFF (30u)


#define IFX_FLASH_ACCEN0_EN31_LEN (1u)


#define IFX_FLASH_ACCEN0_EN31_MSK (0x1u)


#define IFX_FLASH_ACCEN0_EN31_OFF (31u)


#define IFX_FLASH_ACCEN0_EN3_LEN (1u)


#define IFX_FLASH_ACCEN0_EN3_MSK (0x1u)


#define IFX_FLASH_ACCEN0_EN3_OFF (3u)


#define IFX_FLASH_ACCEN0_EN4_LEN (1u)


#define IFX_FLASH_ACCEN0_EN4_MSK (0x1u)


#define IFX_FLASH_ACCEN0_EN4_OFF (4u)


#define IFX_FLASH_ACCEN0_EN5_LEN (1u)


#define IFX_FLASH_ACCEN0_EN5_MSK (0x1u)


#define IFX_FLASH_ACCEN0_EN5_OFF (5u)


#define IFX_FLASH_ACCEN0_EN6_LEN (1u)


#define IFX_FLASH_ACCEN0_EN6_MSK (0x1u)


#define IFX_FLASH_ACCEN0_EN6_OFF (6u)


#define IFX_FLASH_ACCEN0_EN7_LEN (1u)


#define IFX_FLASH_ACCEN0_EN7_MSK (0x1u)


#define IFX_FLASH_ACCEN0_EN7_OFF (7u)


#define IFX_FLASH_ACCEN0_EN8_LEN (1u)


#define IFX_FLASH_ACCEN0_EN8_MSK (0x1u)


#define IFX_FLASH_ACCEN0_EN8_OFF (8u)


#define IFX_FLASH_ACCEN0_EN9_LEN (1u)


#define IFX_FLASH_ACCEN0_EN9_MSK (0x1u)


#define IFX_FLASH_ACCEN0_EN9_OFF (9u)


#define IFX_FLASH_CBAB_CFG_CLR_LEN (1u)


#define IFX_FLASH_CBAB_CFG_CLR_MSK (0x1u)


#define IFX_FLASH_CBAB_CFG_CLR_OFF (8u)


#define IFX_FLASH_CBAB_CFG_DIS_LEN (1u)


#define IFX_FLASH_CBAB_CFG_DIS_MSK (0x1u)


#define IFX_FLASH_CBAB_CFG_DIS_OFF (9u)


#define IFX_FLASH_CBAB_CFG_SEL_LEN (6u)


#define IFX_FLASH_CBAB_CFG_SEL_MSK (0x3fu)


#define IFX_FLASH_CBAB_CFG_SEL_OFF (0u)


#define IFX_FLASH_CBAB_STAT_VLD0_LEN (1u)


#define IFX_FLASH_CBAB_STAT_VLD0_MSK (0x1u)


#define IFX_FLASH_CBAB_STAT_VLD0_OFF (0u)


#define IFX_FLASH_CBAB_STAT_VLD1_LEN (1u)


#define IFX_FLASH_CBAB_STAT_VLD1_MSK (0x1u)


#define IFX_FLASH_CBAB_STAT_VLD1_OFF (1u)


#define IFX_FLASH_CBAB_STAT_VLD2_LEN (1u)


#define IFX_FLASH_CBAB_STAT_VLD2_MSK (0x1u)


#define IFX_FLASH_CBAB_STAT_VLD2_OFF (2u)


#define IFX_FLASH_CBAB_STAT_VLD3_LEN (1u)


#define IFX_FLASH_CBAB_STAT_VLD3_MSK (0x1u)


#define IFX_FLASH_CBAB_STAT_VLD3_OFF (3u)


#define IFX_FLASH_CBAB_STAT_VLD4_LEN (1u)


#define IFX_FLASH_CBAB_STAT_VLD4_MSK (0x1u)


#define IFX_FLASH_CBAB_STAT_VLD4_OFF (4u)


#define IFX_FLASH_CBAB_STAT_VLD5_LEN (1u)


#define IFX_FLASH_CBAB_STAT_VLD5_MSK (0x1u)


#define IFX_FLASH_CBAB_STAT_VLD5_OFF (5u)


#define IFX_FLASH_CBAB_STAT_VLD6_LEN (1u)


#define IFX_FLASH_CBAB_STAT_VLD6_MSK (0x1u)


#define IFX_FLASH_CBAB_STAT_VLD6_OFF (6u)


#define IFX_FLASH_CBAB_STAT_VLD7_LEN (1u)


#define IFX_FLASH_CBAB_STAT_VLD7_MSK (0x1u)


#define IFX_FLASH_CBAB_STAT_VLD7_OFF (7u)


#define IFX_FLASH_CBAB_STAT_VLD8_LEN (1u)


#define IFX_FLASH_CBAB_STAT_VLD8_MSK (0x1u)


#define IFX_FLASH_CBAB_STAT_VLD8_OFF (8u)


#define IFX_FLASH_CBAB_STAT_VLD9_LEN (1u)


#define IFX_FLASH_CBAB_STAT_VLD9_MSK (0x1u)


#define IFX_FLASH_CBAB_STAT_VLD9_OFF (9u)


#define IFX_FLASH_CBAB_TOP_ADDR_LEN (19u)


#define IFX_FLASH_CBAB_TOP_ADDR_MSK (0x7ffffu)


#define IFX_FLASH_CBAB_TOP_ADDR_OFF (5u)


#define IFX_FLASH_CBAB_TOP_CLR_LEN (1u)


#define IFX_FLASH_CBAB_TOP_CLR_MSK (0x1u)


#define IFX_FLASH_CBAB_TOP_CLR_OFF (31u)


#define IFX_FLASH_CBAB_TOP_ERR_LEN (6u)


#define IFX_FLASH_CBAB_TOP_ERR_MSK (0x3fu)


#define IFX_FLASH_CBAB_TOP_ERR_OFF (24u)


#define IFX_FLASH_CBAB_TOP_VLD_LEN (1u)


#define IFX_FLASH_CBAB_TOP_VLD_MSK (0x1u)


#define IFX_FLASH_CBAB_TOP_VLD_OFF (30u)


#define IFX_FLASH_COMM0_STATUS_LEN (8u)


#define IFX_FLASH_COMM0_STATUS_MSK (0xffu)


#define IFX_FLASH_COMM0_STATUS_OFF (0u)


#define IFX_FLASH_COMM1_DATA_LEN (8u)


#define IFX_FLASH_COMM1_DATA_MSK (0xffu)


#define IFX_FLASH_COMM1_DATA_OFF (8u)


#define IFX_FLASH_COMM1_STATUS_LEN (8u)


#define IFX_FLASH_COMM1_STATUS_MSK (0xffu)


#define IFX_FLASH_COMM1_STATUS_OFF (0u)


#define IFX_FLASH_COMM2_DATA_LEN (8u)


#define IFX_FLASH_COMM2_DATA_MSK (0xffu)


#define IFX_FLASH_COMM2_DATA_OFF (8u)


#define IFX_FLASH_COMM2_STATUS_LEN (8u)


#define IFX_FLASH_COMM2_STATUS_MSK (0xffu)


#define IFX_FLASH_COMM2_STATUS_OFF (0u)


#define IFX_FLASH_ECCRD_ECCORDIS_LEN (1u)


#define IFX_FLASH_ECCRD_ECCORDIS_MSK (0x1u)


#define IFX_FLASH_ECCRD_ECCORDIS_OFF (31u)


#define IFX_FLASH_ECCRD_EDCERRINJ_LEN (1u)


#define IFX_FLASH_ECCRD_EDCERRINJ_MSK (0x1u)


#define IFX_FLASH_ECCRD_EDCERRINJ_OFF (30u)


#define IFX_FLASH_ECCRD_RCODE_LEN (22u)


#define IFX_FLASH_ECCRD_RCODE_MSK (0x3fffffu)


#define IFX_FLASH_ECCRD_RCODE_OFF (0u)


#define IFX_FLASH_ECCRP_ECCORDIS_LEN (1u)


#define IFX_FLASH_ECCRP_ECCORDIS_MSK (0x1u)


#define IFX_FLASH_ECCRP_ECCORDIS_OFF (31u)


#define IFX_FLASH_ECCRP_EDCERRINJ_LEN (1u)


#define IFX_FLASH_ECCRP_EDCERRINJ_MSK (0x1u)


#define IFX_FLASH_ECCRP_EDCERRINJ_OFF (30u)


#define IFX_FLASH_ECCRP_RCODE_LEN (22u)


#define IFX_FLASH_ECCRP_RCODE_MSK (0x3fffffu)


#define IFX_FLASH_ECCRP_RCODE_OFF (0u)


#define IFX_FLASH_ECCW_DECENCDIS_LEN (1u)


#define IFX_FLASH_ECCW_DECENCDIS_MSK (0x1u)


#define IFX_FLASH_ECCW_DECENCDIS_OFF (30u)


#define IFX_FLASH_ECCW_PECENCDIS_LEN (1u)


#define IFX_FLASH_ECCW_PECENCDIS_MSK (0x1u)


#define IFX_FLASH_ECCW_PECENCDIS_OFF (31u)


#define IFX_FLASH_ECCW_WCODE_LEN (22u)


#define IFX_FLASH_ECCW_WCODE_MSK (0x3fffffu)


#define IFX_FLASH_ECCW_WCODE_OFF (0u)


#define IFX_FLASH_FCON_EOBM_LEN (1u)


#define IFX_FLASH_FCON_EOBM_MSK (0x1u)


#define IFX_FLASH_FCON_EOBM_OFF (31u)


#define IFX_FLASH_FCON_ESLDIS_LEN (1u)


#define IFX_FLASH_FCON_ESLDIS_MSK (0x1u)


#define IFX_FLASH_FCON_ESLDIS_OFF (16u)


#define IFX_FLASH_FCON_IDLE_LEN (1u)


#define IFX_FLASH_FCON_IDLE_MSK (0x1u)


#define IFX_FLASH_FCON_IDLE_OFF (15u)


#define IFX_FLASH_FCON_NSAFECC_LEN (1u)


#define IFX_FLASH_FCON_NSAFECC_MSK (0x1u)


#define IFX_FLASH_FCON_NSAFECC_OFF (18u)


#define IFX_FLASH_FCON_PR5V_LEN (1u)


#define IFX_FLASH_FCON_PR5V_MSK (0x1u)


#define IFX_FLASH_FCON_PR5V_OFF (30u)


#define IFX_FLASH_FCON_PROERM_LEN (1u)


#define IFX_FLASH_FCON_PROERM_MSK (0x1u)


#define IFX_FLASH_FCON_PROERM_OFF (26u)


#define IFX_FLASH_FCON_RES21_LEN (2u)


#define IFX_FLASH_FCON_RES21_MSK (0x3u)


#define IFX_FLASH_FCON_RES21_OFF (20u)


#define IFX_FLASH_FCON_RES23_LEN (2u)


#define IFX_FLASH_FCON_RES23_MSK (0x3u)


#define IFX_FLASH_FCON_RES23_OFF (22u)


#define IFX_FLASH_FCON_SLEEP_LEN (1u)


#define IFX_FLASH_FCON_SLEEP_MSK (0x1u)


#define IFX_FLASH_FCON_SLEEP_OFF (17u)


#define IFX_FLASH_FCON_SQERM_LEN (1u)


#define IFX_FLASH_FCON_SQERM_MSK (0x1u)


#define IFX_FLASH_FCON_SQERM_OFF (25u)


#define IFX_FLASH_FCON_STALL_LEN (1u)


#define IFX_FLASH_FCON_STALL_MSK (0x1u)


#define IFX_FLASH_FCON_STALL_OFF (19u)


#define IFX_FLASH_FCON_VOPERM_LEN (1u)


#define IFX_FLASH_FCON_VOPERM_MSK (0x1u)


#define IFX_FLASH_FCON_VOPERM_OFF (24u)


#define IFX_FLASH_FCON_WSDFLASH_LEN (6u)


#define IFX_FLASH_FCON_WSDFLASH_MSK (0x3fu)


#define IFX_FLASH_FCON_WSDFLASH_OFF (6u)


#define IFX_FLASH_FCON_WSECDF_LEN (3u)


#define IFX_FLASH_FCON_WSECDF_MSK (0x7u)


#define IFX_FLASH_FCON_WSECDF_OFF (12u)


#define IFX_FLASH_FCON_WSECPF_LEN (2u)


#define IFX_FLASH_FCON_WSECPF_MSK (0x3u)


#define IFX_FLASH_FCON_WSECPF_OFF (4u)


#define IFX_FLASH_FCON_WSPFLASH_LEN (4u)


#define IFX_FLASH_FCON_WSPFLASH_MSK (0xfu)


#define IFX_FLASH_FCON_WSPFLASH_OFF (0u)


#define IFX_FLASH_FPRO_DCFP_LEN (1u)


#define IFX_FLASH_FPRO_DCFP_MSK (0x1u)


#define IFX_FLASH_FPRO_DCFP_OFF (16u)


#define IFX_FLASH_FPRO_DDFD_LEN (1u)


#define IFX_FLASH_FPRO_DDFD_MSK (0x1u)


#define IFX_FLASH_FPRO_DDFD_OFF (20u)


#define IFX_FLASH_FPRO_DDFP_LEN (1u)


#define IFX_FLASH_FPRO_DDFP_MSK (0x1u)


#define IFX_FLASH_FPRO_DDFP_OFF (17u)


#define IFX_FLASH_FPRO_DDFPX_LEN (1u)


#define IFX_FLASH_FPRO_DDFPX_MSK (0x1u)


#define IFX_FLASH_FPRO_DDFPX_OFF (18u)


#define IFX_FLASH_FPRO_ENPE_LEN (2u)


#define IFX_FLASH_FPRO_ENPE_MSK (0x3u)


#define IFX_FLASH_FPRO_ENPE_OFF (22u)


#define IFX_FLASH_FPRO_PRODISD_LEN (1u)


#define IFX_FLASH_FPRO_PRODISD_MSK (0x1u)


#define IFX_FLASH_FPRO_PRODISD_OFF (3u)


#define IFX_FLASH_FPRO_PRODISDBG_LEN (1u)


#define IFX_FLASH_FPRO_PRODISDBG_MSK (0x1u)


#define IFX_FLASH_FPRO_PRODISDBG_OFF (9u)


#define IFX_FLASH_FPRO_PRODISP_LEN (1u)


#define IFX_FLASH_FPRO_PRODISP_MSK (0x1u)


#define IFX_FLASH_FPRO_PRODISP_OFF (1u)


#define IFX_FLASH_FPRO_PROIND_LEN (1u)


#define IFX_FLASH_FPRO_PROIND_MSK (0x1u)


#define IFX_FLASH_FPRO_PROIND_OFF (2u)


#define IFX_FLASH_FPRO_PROINDBG_LEN (1u)


#define IFX_FLASH_FPRO_PROINDBG_MSK (0x1u)


#define IFX_FLASH_FPRO_PROINDBG_OFF (8u)


#define IFX_FLASH_FPRO_PROINHSM_LEN (1u)


#define IFX_FLASH_FPRO_PROINHSM_MSK (0x1u)


#define IFX_FLASH_FPRO_PROINHSM_OFF (10u)


#define IFX_FLASH_FPRO_PROINHSMCOTP_LEN (1u)


#define IFX_FLASH_FPRO_PROINHSMCOTP_MSK (0x1u)


#define IFX_FLASH_FPRO_PROINHSMCOTP_OFF (4u)


#define IFX_FLASH_FPRO_PROINOTP_LEN (1u)


#define IFX_FLASH_FPRO_PROINOTP_MSK (0x1u)


#define IFX_FLASH_FPRO_PROINOTP_OFF (6u)


#define IFX_FLASH_FPRO_PROINP_LEN (1u)


#define IFX_FLASH_FPRO_PROINP_MSK (0x1u)


#define IFX_FLASH_FPRO_PROINP_OFF (0u)


#define IFX_FLASH_FPRO_RES5_LEN (1u)


#define IFX_FLASH_FPRO_RES5_MSK (0x1u)


#define IFX_FLASH_FPRO_RES5_OFF (5u)


#define IFX_FLASH_FPRO_RES7_LEN (1u)


#define IFX_FLASH_FPRO_RES7_MSK (0x1u)


#define IFX_FLASH_FPRO_RES7_OFF (7u)


#define IFX_FLASH_FSR_D0BUSY_LEN (1u)


#define IFX_FLASH_FSR_D0BUSY_MSK (0x1u)


#define IFX_FLASH_FSR_D0BUSY_OFF (1u)


#define IFX_FLASH_FSR_D1BUSY_LEN (1u)


#define IFX_FLASH_FSR_D1BUSY_MSK (0x1u)


#define IFX_FLASH_FSR_D1BUSY_OFF (2u)


#define IFX_FLASH_FSR_DFDBER_LEN (1u)


#define IFX_FLASH_FSR_DFDBER_MSK (0x1u)


#define IFX_FLASH_FSR_DFDBER_OFF (19u)


#define IFX_FLASH_FSR_DFMBER_LEN (1u)


#define IFX_FLASH_FSR_DFMBER_MSK (0x1u)


#define IFX_FLASH_FSR_DFMBER_OFF (21u)


#define IFX_FLASH_FSR_DFPAGE_LEN (1u)


#define IFX_FLASH_FSR_DFPAGE_MSK (0x1u)


#define IFX_FLASH_FSR_DFPAGE_OFF (10u)


#define IFX_FLASH_FSR_DFSBER_LEN (1u)


#define IFX_FLASH_FSR_DFSBER_MSK (0x1u)


#define IFX_FLASH_FSR_DFSBER_OFF (18u)


#define IFX_FLASH_FSR_DFTBER_LEN (1u)


#define IFX_FLASH_FSR_DFTBER_MSK (0x1u)


#define IFX_FLASH_FSR_DFTBER_OFF (20u)


#define IFX_FLASH_FSR_ERASE_LEN (1u)


#define IFX_FLASH_FSR_ERASE_MSK (0x1u)


#define IFX_FLASH_FSR_ERASE_OFF (8u)


#define IFX_FLASH_FSR_EVER_LEN (1u)


#define IFX_FLASH_FSR_EVER_MSK (0x1u)


#define IFX_FLASH_FSR_EVER_OFF (26u)


#define IFX_FLASH_FSR_FABUSY_LEN (1u)


#define IFX_FLASH_FSR_FABUSY_MSK (0x1u)


#define IFX_FLASH_FSR_FABUSY_OFF (0u)


#define IFX_FLASH_FSR_OPER_LEN (1u)


#define IFX_FLASH_FSR_OPER_MSK (0x1u)


#define IFX_FLASH_FSR_OPER_OFF (11u)


#define IFX_FLASH_FSR_ORIER_LEN (1u)


#define IFX_FLASH_FSR_ORIER_MSK (0x1u)


#define IFX_FLASH_FSR_ORIER_OFF (30u)


#define IFX_FLASH_FSR_P0BUSY_LEN (1u)


#define IFX_FLASH_FSR_P0BUSY_MSK (0x1u)


#define IFX_FLASH_FSR_P0BUSY_OFF (3u)


#define IFX_FLASH_FSR_P1BUSY_LEN (1u)


#define IFX_FLASH_FSR_P1BUSY_MSK (0x1u)


#define IFX_FLASH_FSR_P1BUSY_OFF (4u)


#define IFX_FLASH_FSR_PFDBER_LEN (1u)


#define IFX_FLASH_FSR_PFDBER_MSK (0x1u)


#define IFX_FLASH_FSR_PFDBER_OFF (15u)


#define IFX_FLASH_FSR_PFMBER_LEN (1u)


#define IFX_FLASH_FSR_PFMBER_MSK (0x1u)


#define IFX_FLASH_FSR_PFMBER_OFF (16u)


#define IFX_FLASH_FSR_PFPAGE_LEN (1u)


#define IFX_FLASH_FSR_PFPAGE_MSK (0x1u)


#define IFX_FLASH_FSR_PFPAGE_OFF (9u)


#define IFX_FLASH_FSR_PFSBER_LEN (1u)


#define IFX_FLASH_FSR_PFSBER_MSK (0x1u)


#define IFX_FLASH_FSR_PFSBER_OFF (14u)


#define IFX_FLASH_FSR_PROER_LEN (1u)


#define IFX_FLASH_FSR_PROER_MSK (0x1u)


#define IFX_FLASH_FSR_PROER_OFF (13u)


#define IFX_FLASH_FSR_PROG_LEN (1u)


#define IFX_FLASH_FSR_PROG_MSK (0x1u)


#define IFX_FLASH_FSR_PROG_OFF (7u)


#define IFX_FLASH_FSR_PVER_LEN (1u)


#define IFX_FLASH_FSR_PVER_MSK (0x1u)


#define IFX_FLASH_FSR_PVER_OFF (25u)


#define IFX_FLASH_FSR_RES17_LEN (1u)


#define IFX_FLASH_FSR_RES17_MSK (0x1u)


#define IFX_FLASH_FSR_RES17_OFF (17u)


#define IFX_FLASH_FSR_RES5_LEN (1u)


#define IFX_FLASH_FSR_RES5_MSK (0x1u)


#define IFX_FLASH_FSR_RES5_OFF (5u)


#define IFX_FLASH_FSR_RES6_LEN (1u)


#define IFX_FLASH_FSR_RES6_MSK (0x1u)


#define IFX_FLASH_FSR_RES6_OFF (6u)


#define IFX_FLASH_FSR_SLM_LEN (1u)


#define IFX_FLASH_FSR_SLM_MSK (0x1u)


#define IFX_FLASH_FSR_SLM_OFF (28u)


#define IFX_FLASH_FSR_SPND_LEN (1u)


#define IFX_FLASH_FSR_SPND_MSK (0x1u)


#define IFX_FLASH_FSR_SPND_OFF (27u)


#define IFX_FLASH_FSR_SQER_LEN (1u)


#define IFX_FLASH_FSR_SQER_MSK (0x1u)


#define IFX_FLASH_FSR_SQER_OFF (12u)


#define IFX_FLASH_FSR_SRIADDERR_LEN (1u)


#define IFX_FLASH_FSR_SRIADDERR_MSK (0x1u)


#define IFX_FLASH_FSR_SRIADDERR_OFF (22u)


#define IFX_FLASH_HSMFCON_EOBM_LEN (1u)


#define IFX_FLASH_HSMFCON_EOBM_MSK (0x1u)


#define IFX_FLASH_HSMFCON_EOBM_OFF (31u)


#define IFX_FLASH_HSMFCON_LCKHSMUCB_LEN (2u)


#define IFX_FLASH_HSMFCON_LCKHSMUCB_MSK (0x3u)


#define IFX_FLASH_HSMFCON_LCKHSMUCB_OFF (0u)


#define IFX_FLASH_HSMFCON_SQERM_LEN (1u)


#define IFX_FLASH_HSMFCON_SQERM_MSK (0x1u)


#define IFX_FLASH_HSMFCON_SQERM_OFF (25u)


#define IFX_FLASH_HSMFCON_VOPERM_LEN (1u)


#define IFX_FLASH_HSMFCON_VOPERM_MSK (0x1u)


#define IFX_FLASH_HSMFCON_VOPERM_OFF (24u)


#define IFX_FLASH_HSMFSR_D1BUSY_LEN (1u)


#define IFX_FLASH_HSMFSR_D1BUSY_MSK (0x1u)


#define IFX_FLASH_HSMFSR_D1BUSY_OFF (2u)


#define IFX_FLASH_HSMFSR_DFPAGE_LEN (1u)


#define IFX_FLASH_HSMFSR_DFPAGE_MSK (0x1u)


#define IFX_FLASH_HSMFSR_DFPAGE_OFF (10u)


#define IFX_FLASH_HSMFSR_ERASE_LEN (1u)


#define IFX_FLASH_HSMFSR_ERASE_MSK (0x1u)


#define IFX_FLASH_HSMFSR_ERASE_OFF (8u)


#define IFX_FLASH_HSMFSR_EVER_LEN (1u)


#define IFX_FLASH_HSMFSR_EVER_MSK (0x1u)


#define IFX_FLASH_HSMFSR_EVER_OFF (26u)


#define IFX_FLASH_HSMFSR_OPER_LEN (1u)


#define IFX_FLASH_HSMFSR_OPER_MSK (0x1u)


#define IFX_FLASH_HSMFSR_OPER_OFF (11u)


#define IFX_FLASH_HSMFSR_PROG_LEN (1u)


#define IFX_FLASH_HSMFSR_PROG_MSK (0x1u)


#define IFX_FLASH_HSMFSR_PROG_OFF (7u)


#define IFX_FLASH_HSMFSR_PVER_LEN (1u)


#define IFX_FLASH_HSMFSR_PVER_MSK (0x1u)


#define IFX_FLASH_HSMFSR_PVER_OFF (25u)


#define IFX_FLASH_HSMFSR_SPND_LEN (1u)


#define IFX_FLASH_HSMFSR_SPND_MSK (0x1u)


#define IFX_FLASH_HSMFSR_SPND_OFF (27u)


#define IFX_FLASH_HSMFSR_SQER_LEN (1u)


#define IFX_FLASH_HSMFSR_SQER_MSK (0x1u)


#define IFX_FLASH_HSMFSR_SQER_OFF (12u)


#define IFX_FLASH_HSMMARD_SELD1_LEN (1u)


#define IFX_FLASH_HSMMARD_SELD1_MSK (0x1u)


#define IFX_FLASH_HSMMARD_SELD1_OFF (1u)


#define IFX_FLASH_HSMMARD_SPND_LEN (1u)


#define IFX_FLASH_HSMMARD_SPND_MSK (0x1u)


#define IFX_FLASH_HSMMARD_SPND_OFF (3u)


#define IFX_FLASH_HSMMARD_SPNDERR_LEN (1u)


#define IFX_FLASH_HSMMARD_SPNDERR_MSK (0x1u)


#define IFX_FLASH_HSMMARD_SPNDERR_OFF (4u)


#define IFX_FLASH_HSMRRAD_ADD_LEN (29u)


#define IFX_FLASH_HSMRRAD_ADD_MSK (0x1fffffffu)


#define IFX_FLASH_HSMRRAD_ADD_OFF (3u)


#define IFX_FLASH_HSMRRCT_BUSY_LEN (1u)


#define IFX_FLASH_HSMRRCT_BUSY_MSK (0x1u)


#define IFX_FLASH_HSMRRCT_BUSY_OFF (2u)


#define IFX_FLASH_HSMRRCT_CNT_LEN (16u)


#define IFX_FLASH_HSMRRCT_CNT_MSK (0xffffu)


#define IFX_FLASH_HSMRRCT_CNT_OFF (16u)


#define IFX_FLASH_HSMRRCT_DONE_LEN (1u)


#define IFX_FLASH_HSMRRCT_DONE_MSK (0x1u)


#define IFX_FLASH_HSMRRCT_DONE_OFF (3u)


#define IFX_FLASH_HSMRRCT_EOBM_LEN (1u)


#define IFX_FLASH_HSMRRCT_EOBM_MSK (0x1u)


#define IFX_FLASH_HSMRRCT_EOBM_OFF (8u)


#define IFX_FLASH_HSMRRCT_ERR_LEN (1u)


#define IFX_FLASH_HSMRRCT_ERR_MSK (0x1u)


#define IFX_FLASH_HSMRRCT_ERR_OFF (4u)


#define IFX_FLASH_HSMRRCT_STP_LEN (1u)


#define IFX_FLASH_HSMRRCT_STP_MSK (0x1u)


#define IFX_FLASH_HSMRRCT_STP_OFF (1u)


#define IFX_FLASH_HSMRRCT_STRT_LEN (1u)


#define IFX_FLASH_HSMRRCT_STRT_MSK (0x1u)


#define IFX_FLASH_HSMRRCT_STRT_OFF (0u)


#define IFX_FLASH_HSMRRD0_DATA_LEN (32u)


#define IFX_FLASH_HSMRRD0_DATA_MSK (0xffffffffu)


#define IFX_FLASH_HSMRRD0_DATA_OFF (0u)


#define IFX_FLASH_HSMRRD1_DATA_LEN (32u)


#define IFX_FLASH_HSMRRD1_DATA_MSK (0xffffffffu)


#define IFX_FLASH_HSMRRD1_DATA_OFF (0u)


#define IFX_FLASH_ID_MOD_REV_LEN (8u)


#define IFX_FLASH_ID_MOD_REV_MSK (0xffu)


#define IFX_FLASH_ID_MOD_REV_OFF (0u)


#define IFX_FLASH_ID_MOD_TYPE_LEN (8u)


#define IFX_FLASH_ID_MOD_TYPE_MSK (0xffu)


#define IFX_FLASH_ID_MOD_TYPE_OFF (8u)


#define IFX_FLASH_ID_MODNUMBER_LEN (16u)


#define IFX_FLASH_ID_MODNUMBER_MSK (0xffffu)


#define IFX_FLASH_ID_MODNUMBER_OFF (16u)


#define IFX_FLASH_MARD_HMARGIN_LEN (1u)


#define IFX_FLASH_MARD_HMARGIN_MSK (0x1u)


#define IFX_FLASH_MARD_HMARGIN_OFF (0u)


#define IFX_FLASH_MARD_SELD0_LEN (1u)


#define IFX_FLASH_MARD_SELD0_MSK (0x1u)


#define IFX_FLASH_MARD_SELD0_OFF (1u)


#define IFX_FLASH_MARD_SPND_LEN (1u)


#define IFX_FLASH_MARD_SPND_MSK (0x1u)


#define IFX_FLASH_MARD_SPND_OFF (3u)


#define IFX_FLASH_MARD_SPNDERR_LEN (1u)


#define IFX_FLASH_MARD_SPNDERR_MSK (0x1u)


#define IFX_FLASH_MARD_SPNDERR_OFF (4u)


#define IFX_FLASH_MARD_TRAPDIS_LEN (1u)


#define IFX_FLASH_MARD_TRAPDIS_MSK (0x1u)


#define IFX_FLASH_MARD_TRAPDIS_OFF (15u)


#define IFX_FLASH_MARP_RES2_LEN (1u)


#define IFX_FLASH_MARP_RES2_MSK (0x1u)


#define IFX_FLASH_MARP_RES2_OFF (2u)


#define IFX_FLASH_MARP_RES3_LEN (1u)


#define IFX_FLASH_MARP_RES3_MSK (0x1u)


#define IFX_FLASH_MARP_RES3_OFF (3u)


#define IFX_FLASH_MARP_SELP0_LEN (1u)


#define IFX_FLASH_MARP_SELP0_MSK (0x1u)


#define IFX_FLASH_MARP_SELP0_OFF (0u)


#define IFX_FLASH_MARP_SELP1_LEN (1u)


#define IFX_FLASH_MARP_SELP1_MSK (0x1u)


#define IFX_FLASH_MARP_SELP1_OFF (1u)


#define IFX_FLASH_MARP_TRAPDIS_LEN (1u)


#define IFX_FLASH_MARP_TRAPDIS_MSK (0x1u)


#define IFX_FLASH_MARP_TRAPDIS_OFF (15u)


#define IFX_FLASH_PROCOND_APREN_LEN (1u)


#define IFX_FLASH_PROCOND_APREN_MSK (0x1u)


#define IFX_FLASH_PROCOND_APREN_OFF (11u)


#define IFX_FLASH_PROCOND_CAP0EN_LEN (1u)


#define IFX_FLASH_PROCOND_CAP0EN_MSK (0x1u)


#define IFX_FLASH_PROCOND_CAP0EN_OFF (12u)


#define IFX_FLASH_PROCOND_CAP1EN_LEN (1u)


#define IFX_FLASH_PROCOND_CAP1EN_MSK (0x1u)


#define IFX_FLASH_PROCOND_CAP1EN_OFF (13u)


#define IFX_FLASH_PROCOND_CAP2EN_LEN (1u)


#define IFX_FLASH_PROCOND_CAP2EN_MSK (0x1u)


#define IFX_FLASH_PROCOND_CAP2EN_OFF (14u)


#define IFX_FLASH_PROCOND_CAP3EN_LEN (1u)


#define IFX_FLASH_PROCOND_CAP3EN_MSK (0x1u)


#define IFX_FLASH_PROCOND_CAP3EN_OFF (15u)


#define IFX_FLASH_PROCOND_ESR0CNT_LEN (12u)


#define IFX_FLASH_PROCOND_ESR0CNT_MSK (0xfffu)


#define IFX_FLASH_PROCOND_ESR0CNT_OFF (16u)


#define IFX_FLASH_PROCOND_L_LEN (1u)


#define IFX_FLASH_PROCOND_L_MSK (0x1u)


#define IFX_FLASH_PROCOND_L_OFF (0u)


#define IFX_FLASH_PROCOND_MODE_LEN (2u)


#define IFX_FLASH_PROCOND_MODE_MSK (0x3u)


#define IFX_FLASH_PROCOND_MODE_OFF (9u)


#define IFX_FLASH_PROCOND_NSAFECC_LEN (1u)


#define IFX_FLASH_PROCOND_NSAFECC_MSK (0x1u)


#define IFX_FLASH_PROCOND_NSAFECC_OFF (1u)


#define IFX_FLASH_PROCOND_OSCCFG_LEN (1u)


#define IFX_FLASH_PROCOND_OSCCFG_MSK (0x1u)


#define IFX_FLASH_PROCOND_OSCCFG_OFF (8u)


#define IFX_FLASH_PROCOND_RAMIN_LEN (2u)


#define IFX_FLASH_PROCOND_RAMIN_MSK (0x3u)


#define IFX_FLASH_PROCOND_RAMIN_OFF (2u)


#define IFX_FLASH_PROCOND_RAMINSEL_LEN (4u)


#define IFX_FLASH_PROCOND_RAMINSEL_MSK (0xfu)


#define IFX_FLASH_PROCOND_RAMINSEL_OFF (4u)


#define IFX_FLASH_PROCOND_RES29_LEN (2u)


#define IFX_FLASH_PROCOND_RES29_MSK (0x3u)


#define IFX_FLASH_PROCOND_RES29_OFF (28u)


#define IFX_FLASH_PROCOND_RES30_LEN (1u)


#define IFX_FLASH_PROCOND_RES30_MSK (0x1u)


#define IFX_FLASH_PROCOND_RES30_OFF (30u)


#define IFX_FLASH_PROCOND_RPRO_LEN (1u)


#define IFX_FLASH_PROCOND_RPRO_MSK (0x1u)


#define IFX_FLASH_PROCOND_RPRO_OFF (31u)


#define IFX_FLASH_PROCONDBG_DBGIFLCK_LEN (1u)


#define IFX_FLASH_PROCONDBG_DBGIFLCK_MSK (0x1u)


#define IFX_FLASH_PROCONDBG_DBGIFLCK_OFF (1u)


#define IFX_FLASH_PROCONDBG_EDM_LEN (2u)


#define IFX_FLASH_PROCONDBG_EDM_MSK (0x3u)


#define IFX_FLASH_PROCONDBG_EDM_OFF (2u)


#define IFX_FLASH_PROCONDBG_OCDSDIS_LEN (1u)


#define IFX_FLASH_PROCONDBG_OCDSDIS_MSK (0x1u)


#define IFX_FLASH_PROCONDBG_OCDSDIS_OFF (0u)


#define IFX_FLASH_PROCONHSM_DBGIFLCK_LEN (1u)


#define IFX_FLASH_PROCONHSM_DBGIFLCK_MSK (0x1u)


#define IFX_FLASH_PROCONHSM_DBGIFLCK_OFF (1u)


#define IFX_FLASH_PROCONHSM_HSMDBGDIS_LEN (1u)


#define IFX_FLASH_PROCONHSM_HSMDBGDIS_MSK (0x1u)


#define IFX_FLASH_PROCONHSM_HSMDBGDIS_OFF (0u)


#define IFX_FLASH_PROCONHSM_HSMTSTDIS_LEN (1u)


#define IFX_FLASH_PROCONHSM_HSMTSTDIS_MSK (0x1u)


#define IFX_FLASH_PROCONHSM_HSMTSTDIS_OFF (3u)


#define IFX_FLASH_PROCONHSM_RES15_LEN (12u)


#define IFX_FLASH_PROCONHSM_RES15_MSK (0xfffu)


#define IFX_FLASH_PROCONHSM_RES15_OFF (4u)


#define IFX_FLASH_PROCONHSM_TSTIFLCK_LEN (1u)


#define IFX_FLASH_PROCONHSM_TSTIFLCK_MSK (0x1u)


#define IFX_FLASH_PROCONHSM_TSTIFLCK_OFF (2u)


#define IFX_FLASH_PROCONHSMCOTP_BLKFLAN_LEN (1u)


#define IFX_FLASH_PROCONHSMCOTP_BLKFLAN_MSK (0x1u)


#define IFX_FLASH_PROCONHSMCOTP_BLKFLAN_OFF (13u)


#define IFX_FLASH_PROCONHSMCOTP_DESTDBG_LEN (2u)


#define IFX_FLASH_PROCONHSMCOTP_DESTDBG_MSK (0x3u)


#define IFX_FLASH_PROCONHSMCOTP_DESTDBG_OFF (11u)


#define IFX_FLASH_PROCONHSMCOTP_HSM16X_LEN (1u)


#define IFX_FLASH_PROCONHSMCOTP_HSM16X_MSK (0x1u)


#define IFX_FLASH_PROCONHSMCOTP_HSM16X_OFF (4u)


#define IFX_FLASH_PROCONHSMCOTP_HSM17X_LEN (1u)


#define IFX_FLASH_PROCONHSMCOTP_HSM17X_MSK (0x1u)


#define IFX_FLASH_PROCONHSMCOTP_HSM17X_OFF (5u)


#define IFX_FLASH_PROCONHSMCOTP_HSM6X_LEN (1u)


#define IFX_FLASH_PROCONHSMCOTP_HSM6X_MSK (0x1u)


#define IFX_FLASH_PROCONHSMCOTP_HSM6X_OFF (3u)


#define IFX_FLASH_PROCONHSMCOTP_HSMBOOTEN_LEN (1u)


#define IFX_FLASH_PROCONHSMCOTP_HSMBOOTEN_MSK (0x1u)


#define IFX_FLASH_PROCONHSMCOTP_HSMBOOTEN_OFF (0u)


#define IFX_FLASH_PROCONHSMCOTP_HSMDX_LEN (1u)


#define IFX_FLASH_PROCONHSMCOTP_HSMDX_MSK (0x1u)


#define IFX_FLASH_PROCONHSMCOTP_HSMDX_OFF (2u)


#define IFX_FLASH_PROCONHSMCOTP_HSMENPINS_LEN (2u)


#define IFX_FLASH_PROCONHSMCOTP_HSMENPINS_MSK (0x3u)


#define IFX_FLASH_PROCONHSMCOTP_HSMENPINS_OFF (7u)


#define IFX_FLASH_PROCONHSMCOTP_HSMENRES_LEN (2u)


#define IFX_FLASH_PROCONHSMCOTP_HSMENRES_MSK (0x3u)


#define IFX_FLASH_PROCONHSMCOTP_HSMENRES_OFF (9u)


#define IFX_FLASH_PROCONHSMCOTP_S16ROM_LEN (1u)


#define IFX_FLASH_PROCONHSMCOTP_S16ROM_MSK (0x1u)


#define IFX_FLASH_PROCONHSMCOTP_S16ROM_OFF (16u)


#define IFX_FLASH_PROCONHSMCOTP_S17ROM_LEN (1u)


#define IFX_FLASH_PROCONHSMCOTP_S17ROM_MSK (0x1u)


#define IFX_FLASH_PROCONHSMCOTP_S17ROM_OFF (17u)


#define IFX_FLASH_PROCONHSMCOTP_S6ROM_LEN (1u)


#define IFX_FLASH_PROCONHSMCOTP_S6ROM_MSK (0x1u)


#define IFX_FLASH_PROCONHSMCOTP_S6ROM_OFF (6u)


#define IFX_FLASH_PROCONHSMCOTP_SSWWAIT_LEN (1u)


#define IFX_FLASH_PROCONHSMCOTP_SSWWAIT_MSK (0x1u)


#define IFX_FLASH_PROCONHSMCOTP_SSWWAIT_OFF (1u)


#define IFX_FLASH_PROCONOTP_BML_LEN (2u)


#define IFX_FLASH_PROCONOTP_BML_MSK (0x3u)


#define IFX_FLASH_PROCONOTP_BML_OFF (29u)


#define IFX_FLASH_PROCONOTP_S0ROM_LEN (1u)


#define IFX_FLASH_PROCONOTP_S0ROM_MSK (0x1u)


#define IFX_FLASH_PROCONOTP_S0ROM_OFF (0u)


#define IFX_FLASH_PROCONOTP_S10ROM_LEN (1u)


#define IFX_FLASH_PROCONOTP_S10ROM_MSK (0x1u)


#define IFX_FLASH_PROCONOTP_S10ROM_OFF (10u)


#define IFX_FLASH_PROCONOTP_S11ROM_LEN (1u)


#define IFX_FLASH_PROCONOTP_S11ROM_MSK (0x1u)


#define IFX_FLASH_PROCONOTP_S11ROM_OFF (11u)


#define IFX_FLASH_PROCONOTP_S12ROM_LEN (1u)


#define IFX_FLASH_PROCONOTP_S12ROM_MSK (0x1u)


#define IFX_FLASH_PROCONOTP_S12ROM_OFF (12u)


#define IFX_FLASH_PROCONOTP_S13ROM_LEN (1u)


#define IFX_FLASH_PROCONOTP_S13ROM_MSK (0x1u)


#define IFX_FLASH_PROCONOTP_S13ROM_OFF (13u)


#define IFX_FLASH_PROCONOTP_S14ROM_LEN (1u)


#define IFX_FLASH_PROCONOTP_S14ROM_MSK (0x1u)


#define IFX_FLASH_PROCONOTP_S14ROM_OFF (14u)


#define IFX_FLASH_PROCONOTP_S15ROM_LEN (1u)


#define IFX_FLASH_PROCONOTP_S15ROM_MSK (0x1u)


#define IFX_FLASH_PROCONOTP_S15ROM_OFF (15u)


#define IFX_FLASH_PROCONOTP_S16ROM_LEN (1u)


#define IFX_FLASH_PROCONOTP_S16ROM_MSK (0x1u)


#define IFX_FLASH_PROCONOTP_S16ROM_OFF (16u)


#define IFX_FLASH_PROCONOTP_S17ROM_LEN (1u)


#define IFX_FLASH_PROCONOTP_S17ROM_MSK (0x1u)


#define IFX_FLASH_PROCONOTP_S17ROM_OFF (17u)


#define IFX_FLASH_PROCONOTP_S18ROM_LEN (1u)


#define IFX_FLASH_PROCONOTP_S18ROM_MSK (0x1u)


#define IFX_FLASH_PROCONOTP_S18ROM_OFF (18u)


#define IFX_FLASH_PROCONOTP_S19ROM_LEN (1u)


#define IFX_FLASH_PROCONOTP_S19ROM_MSK (0x1u)


#define IFX_FLASH_PROCONOTP_S19ROM_OFF (19u)


#define IFX_FLASH_PROCONOTP_S1ROM_LEN (1u)


#define IFX_FLASH_PROCONOTP_S1ROM_MSK (0x1u)


#define IFX_FLASH_PROCONOTP_S1ROM_OFF (1u)


#define IFX_FLASH_PROCONOTP_S20ROM_LEN (1u)


#define IFX_FLASH_PROCONOTP_S20ROM_MSK (0x1u)


#define IFX_FLASH_PROCONOTP_S20ROM_OFF (20u)


#define IFX_FLASH_PROCONOTP_S21ROM_LEN (1u)


#define IFX_FLASH_PROCONOTP_S21ROM_MSK (0x1u)


#define IFX_FLASH_PROCONOTP_S21ROM_OFF (21u)


#define IFX_FLASH_PROCONOTP_S22ROM_LEN (1u)


#define IFX_FLASH_PROCONOTP_S22ROM_MSK (0x1u)


#define IFX_FLASH_PROCONOTP_S22ROM_OFF (22u)


#define IFX_FLASH_PROCONOTP_S23ROM_LEN (1u)


#define IFX_FLASH_PROCONOTP_S23ROM_MSK (0x1u)


#define IFX_FLASH_PROCONOTP_S23ROM_OFF (23u)


#define IFX_FLASH_PROCONOTP_S24ROM_LEN (1u)


#define IFX_FLASH_PROCONOTP_S24ROM_MSK (0x1u)


#define IFX_FLASH_PROCONOTP_S24ROM_OFF (24u)


#define IFX_FLASH_PROCONOTP_S25ROM_LEN (1u)


#define IFX_FLASH_PROCONOTP_S25ROM_MSK (0x1u)


#define IFX_FLASH_PROCONOTP_S25ROM_OFF (25u)


#define IFX_FLASH_PROCONOTP_S26ROM_LEN (1u)


#define IFX_FLASH_PROCONOTP_S26ROM_MSK (0x1u)


#define IFX_FLASH_PROCONOTP_S26ROM_OFF (26u)


#define IFX_FLASH_PROCONOTP_S2ROM_LEN (1u)


#define IFX_FLASH_PROCONOTP_S2ROM_MSK (0x1u)


#define IFX_FLASH_PROCONOTP_S2ROM_OFF (2u)


#define IFX_FLASH_PROCONOTP_S3ROM_LEN (1u)


#define IFX_FLASH_PROCONOTP_S3ROM_MSK (0x1u)


#define IFX_FLASH_PROCONOTP_S3ROM_OFF (3u)


#define IFX_FLASH_PROCONOTP_S4ROM_LEN (1u)


#define IFX_FLASH_PROCONOTP_S4ROM_MSK (0x1u)


#define IFX_FLASH_PROCONOTP_S4ROM_OFF (4u)


#define IFX_FLASH_PROCONOTP_S5ROM_LEN (1u)


#define IFX_FLASH_PROCONOTP_S5ROM_MSK (0x1u)


#define IFX_FLASH_PROCONOTP_S5ROM_OFF (5u)


#define IFX_FLASH_PROCONOTP_S6ROM_LEN (1u)


#define IFX_FLASH_PROCONOTP_S6ROM_MSK (0x1u)


#define IFX_FLASH_PROCONOTP_S6ROM_OFF (6u)


#define IFX_FLASH_PROCONOTP_S7ROM_LEN (1u)


#define IFX_FLASH_PROCONOTP_S7ROM_MSK (0x1u)


#define IFX_FLASH_PROCONOTP_S7ROM_OFF (7u)


#define IFX_FLASH_PROCONOTP_S8ROM_LEN (1u)


#define IFX_FLASH_PROCONOTP_S8ROM_MSK (0x1u)


#define IFX_FLASH_PROCONOTP_S8ROM_OFF (8u)


#define IFX_FLASH_PROCONOTP_S9ROM_LEN (1u)


#define IFX_FLASH_PROCONOTP_S9ROM_MSK (0x1u)


#define IFX_FLASH_PROCONOTP_S9ROM_OFF (9u)


#define IFX_FLASH_PROCONOTP_TP_LEN (1u)


#define IFX_FLASH_PROCONOTP_TP_MSK (0x1u)


#define IFX_FLASH_PROCONOTP_TP_OFF (31u)


#define IFX_FLASH_PROCONP_RPRO_LEN (1u)


#define IFX_FLASH_PROCONP_RPRO_MSK (0x1u)


#define IFX_FLASH_PROCONP_RPRO_OFF (31u)


#define IFX_FLASH_PROCONP_S0L_LEN (1u)


#define IFX_FLASH_PROCONP_S0L_MSK (0x1u)


#define IFX_FLASH_PROCONP_S0L_OFF (0u)


#define IFX_FLASH_PROCONP_S10L_LEN (1u)


#define IFX_FLASH_PROCONP_S10L_MSK (0x1u)


#define IFX_FLASH_PROCONP_S10L_OFF (10u)


#define IFX_FLASH_PROCONP_S11L_LEN (1u)


#define IFX_FLASH_PROCONP_S11L_MSK (0x1u)


#define IFX_FLASH_PROCONP_S11L_OFF (11u)


#define IFX_FLASH_PROCONP_S12L_LEN (1u)


#define IFX_FLASH_PROCONP_S12L_MSK (0x1u)


#define IFX_FLASH_PROCONP_S12L_OFF (12u)


#define IFX_FLASH_PROCONP_S13L_LEN (1u)


#define IFX_FLASH_PROCONP_S13L_MSK (0x1u)


#define IFX_FLASH_PROCONP_S13L_OFF (13u)


#define IFX_FLASH_PROCONP_S14L_LEN (1u)


#define IFX_FLASH_PROCONP_S14L_MSK (0x1u)


#define IFX_FLASH_PROCONP_S14L_OFF (14u)


#define IFX_FLASH_PROCONP_S15L_LEN (1u)


#define IFX_FLASH_PROCONP_S15L_MSK (0x1u)


#define IFX_FLASH_PROCONP_S15L_OFF (15u)


#define IFX_FLASH_PROCONP_S16L_LEN (1u)


#define IFX_FLASH_PROCONP_S16L_MSK (0x1u)


#define IFX_FLASH_PROCONP_S16L_OFF (16u)


#define IFX_FLASH_PROCONP_S17L_LEN (1u)


#define IFX_FLASH_PROCONP_S17L_MSK (0x1u)


#define IFX_FLASH_PROCONP_S17L_OFF (17u)


#define IFX_FLASH_PROCONP_S18L_LEN (1u)


#define IFX_FLASH_PROCONP_S18L_MSK (0x1u)


#define IFX_FLASH_PROCONP_S18L_OFF (18u)


#define IFX_FLASH_PROCONP_S19L_LEN (1u)


#define IFX_FLASH_PROCONP_S19L_MSK (0x1u)


#define IFX_FLASH_PROCONP_S19L_OFF (19u)


#define IFX_FLASH_PROCONP_S1L_LEN (1u)


#define IFX_FLASH_PROCONP_S1L_MSK (0x1u)


#define IFX_FLASH_PROCONP_S1L_OFF (1u)


#define IFX_FLASH_PROCONP_S20L_LEN (1u)


#define IFX_FLASH_PROCONP_S20L_MSK (0x1u)


#define IFX_FLASH_PROCONP_S20L_OFF (20u)


#define IFX_FLASH_PROCONP_S21L_LEN (1u)


#define IFX_FLASH_PROCONP_S21L_MSK (0x1u)


#define IFX_FLASH_PROCONP_S21L_OFF (21u)


#define IFX_FLASH_PROCONP_S22L_LEN (1u)


#define IFX_FLASH_PROCONP_S22L_MSK (0x1u)


#define IFX_FLASH_PROCONP_S22L_OFF (22u)


#define IFX_FLASH_PROCONP_S23L_LEN (1u)


#define IFX_FLASH_PROCONP_S23L_MSK (0x1u)


#define IFX_FLASH_PROCONP_S23L_OFF (23u)


#define IFX_FLASH_PROCONP_S24L_LEN (1u)


#define IFX_FLASH_PROCONP_S24L_MSK (0x1u)


#define IFX_FLASH_PROCONP_S24L_OFF (24u)


#define IFX_FLASH_PROCONP_S25L_LEN (1u)


#define IFX_FLASH_PROCONP_S25L_MSK (0x1u)


#define IFX_FLASH_PROCONP_S25L_OFF (25u)


#define IFX_FLASH_PROCONP_S26L_LEN (1u)


#define IFX_FLASH_PROCONP_S26L_MSK (0x1u)


#define IFX_FLASH_PROCONP_S26L_OFF (26u)


#define IFX_FLASH_PROCONP_S2L_LEN (1u)


#define IFX_FLASH_PROCONP_S2L_MSK (0x1u)


#define IFX_FLASH_PROCONP_S2L_OFF (2u)


#define IFX_FLASH_PROCONP_S3L_LEN (1u)


#define IFX_FLASH_PROCONP_S3L_MSK (0x1u)


#define IFX_FLASH_PROCONP_S3L_OFF (3u)


#define IFX_FLASH_PROCONP_S4L_LEN (1u)


#define IFX_FLASH_PROCONP_S4L_MSK (0x1u)


#define IFX_FLASH_PROCONP_S4L_OFF (4u)


#define IFX_FLASH_PROCONP_S5L_LEN (1u)


#define IFX_FLASH_PROCONP_S5L_MSK (0x1u)


#define IFX_FLASH_PROCONP_S5L_OFF (5u)


#define IFX_FLASH_PROCONP_S6L_LEN (1u)


#define IFX_FLASH_PROCONP_S6L_MSK (0x1u)


#define IFX_FLASH_PROCONP_S6L_OFF (6u)


#define IFX_FLASH_PROCONP_S7L_LEN (1u)


#define IFX_FLASH_PROCONP_S7L_MSK (0x1u)


#define IFX_FLASH_PROCONP_S7L_OFF (7u)


#define IFX_FLASH_PROCONP_S8L_LEN (1u)


#define IFX_FLASH_PROCONP_S8L_MSK (0x1u)


#define IFX_FLASH_PROCONP_S8L_OFF (8u)


#define IFX_FLASH_PROCONP_S9L_LEN (1u)


#define IFX_FLASH_PROCONP_S9L_MSK (0x1u)


#define IFX_FLASH_PROCONP_S9L_OFF (9u)


#define IFX_FLASH_PROCONWOP_DATM_LEN (1u)


#define IFX_FLASH_PROCONWOP_DATM_MSK (0x1u)


#define IFX_FLASH_PROCONWOP_DATM_OFF (31u)


#define IFX_FLASH_PROCONWOP_S0WOP_LEN (1u)


#define IFX_FLASH_PROCONWOP_S0WOP_MSK (0x1u)


#define IFX_FLASH_PROCONWOP_S0WOP_OFF (0u)


#define IFX_FLASH_PROCONWOP_S10WOP_LEN (1u)


#define IFX_FLASH_PROCONWOP_S10WOP_MSK (0x1u)


#define IFX_FLASH_PROCONWOP_S10WOP_OFF (10u)


#define IFX_FLASH_PROCONWOP_S11WOP_LEN (1u)


#define IFX_FLASH_PROCONWOP_S11WOP_MSK (0x1u)


#define IFX_FLASH_PROCONWOP_S11WOP_OFF (11u)


#define IFX_FLASH_PROCONWOP_S12WOP_LEN (1u)


#define IFX_FLASH_PROCONWOP_S12WOP_MSK (0x1u)


#define IFX_FLASH_PROCONWOP_S12WOP_OFF (12u)


#define IFX_FLASH_PROCONWOP_S13WOP_LEN (1u)


#define IFX_FLASH_PROCONWOP_S13WOP_MSK (0x1u)


#define IFX_FLASH_PROCONWOP_S13WOP_OFF (13u)


#define IFX_FLASH_PROCONWOP_S14WOP_LEN (1u)


#define IFX_FLASH_PROCONWOP_S14WOP_MSK (0x1u)


#define IFX_FLASH_PROCONWOP_S14WOP_OFF (14u)


#define IFX_FLASH_PROCONWOP_S15WOP_LEN (1u)


#define IFX_FLASH_PROCONWOP_S15WOP_MSK (0x1u)


#define IFX_FLASH_PROCONWOP_S15WOP_OFF (15u)


#define IFX_FLASH_PROCONWOP_S16WOP_LEN (1u)


#define IFX_FLASH_PROCONWOP_S16WOP_MSK (0x1u)


#define IFX_FLASH_PROCONWOP_S16WOP_OFF (16u)


#define IFX_FLASH_PROCONWOP_S17WOP_LEN (1u)


#define IFX_FLASH_PROCONWOP_S17WOP_MSK (0x1u)


#define IFX_FLASH_PROCONWOP_S17WOP_OFF (17u)


#define IFX_FLASH_PROCONWOP_S18WOP_LEN (1u)


#define IFX_FLASH_PROCONWOP_S18WOP_MSK (0x1u)


#define IFX_FLASH_PROCONWOP_S18WOP_OFF (18u)


#define IFX_FLASH_PROCONWOP_S19WOP_LEN (1u)


#define IFX_FLASH_PROCONWOP_S19WOP_MSK (0x1u)


#define IFX_FLASH_PROCONWOP_S19WOP_OFF (19u)


#define IFX_FLASH_PROCONWOP_S1WOP_LEN (1u)


#define IFX_FLASH_PROCONWOP_S1WOP_MSK (0x1u)


#define IFX_FLASH_PROCONWOP_S1WOP_OFF (1u)


#define IFX_FLASH_PROCONWOP_S20WOP_LEN (1u)


#define IFX_FLASH_PROCONWOP_S20WOP_MSK (0x1u)


#define IFX_FLASH_PROCONWOP_S20WOP_OFF (20u)


#define IFX_FLASH_PROCONWOP_S21WOP_LEN (1u)


#define IFX_FLASH_PROCONWOP_S21WOP_MSK (0x1u)


#define IFX_FLASH_PROCONWOP_S21WOP_OFF (21u)


#define IFX_FLASH_PROCONWOP_S22WOP_LEN (1u)


#define IFX_FLASH_PROCONWOP_S22WOP_MSK (0x1u)


#define IFX_FLASH_PROCONWOP_S22WOP_OFF (22u)


#define IFX_FLASH_PROCONWOP_S23WOP_LEN (1u)


#define IFX_FLASH_PROCONWOP_S23WOP_MSK (0x1u)


#define IFX_FLASH_PROCONWOP_S23WOP_OFF (23u)


#define IFX_FLASH_PROCONWOP_S24WOP_LEN (1u)


#define IFX_FLASH_PROCONWOP_S24WOP_MSK (0x1u)


#define IFX_FLASH_PROCONWOP_S24WOP_OFF (24u)


#define IFX_FLASH_PROCONWOP_S25WOP_LEN (1u)


#define IFX_FLASH_PROCONWOP_S25WOP_MSK (0x1u)


#define IFX_FLASH_PROCONWOP_S25WOP_OFF (25u)


#define IFX_FLASH_PROCONWOP_S26WOP_LEN (1u)


#define IFX_FLASH_PROCONWOP_S26WOP_MSK (0x1u)


#define IFX_FLASH_PROCONWOP_S26WOP_OFF (26u)


#define IFX_FLASH_PROCONWOP_S2WOP_LEN (1u)


#define IFX_FLASH_PROCONWOP_S2WOP_MSK (0x1u)


#define IFX_FLASH_PROCONWOP_S2WOP_OFF (2u)


#define IFX_FLASH_PROCONWOP_S3WOP_LEN (1u)


#define IFX_FLASH_PROCONWOP_S3WOP_MSK (0x1u)


#define IFX_FLASH_PROCONWOP_S3WOP_OFF (3u)


#define IFX_FLASH_PROCONWOP_S4WOP_LEN (1u)


#define IFX_FLASH_PROCONWOP_S4WOP_MSK (0x1u)


#define IFX_FLASH_PROCONWOP_S4WOP_OFF (4u)


#define IFX_FLASH_PROCONWOP_S5WOP_LEN (1u)


#define IFX_FLASH_PROCONWOP_S5WOP_MSK (0x1u)


#define IFX_FLASH_PROCONWOP_S5WOP_OFF (5u)


#define IFX_FLASH_PROCONWOP_S6WOP_LEN (1u)


#define IFX_FLASH_PROCONWOP_S6WOP_MSK (0x1u)


#define IFX_FLASH_PROCONWOP_S6WOP_OFF (6u)


#define IFX_FLASH_PROCONWOP_S7WOP_LEN (1u)


#define IFX_FLASH_PROCONWOP_S7WOP_MSK (0x1u)


#define IFX_FLASH_PROCONWOP_S7WOP_OFF (7u)


#define IFX_FLASH_PROCONWOP_S8WOP_LEN (1u)


#define IFX_FLASH_PROCONWOP_S8WOP_MSK (0x1u)


#define IFX_FLASH_PROCONWOP_S8WOP_OFF (8u)


#define IFX_FLASH_PROCONWOP_S9WOP_LEN (1u)


#define IFX_FLASH_PROCONWOP_S9WOP_MSK (0x1u)


#define IFX_FLASH_PROCONWOP_S9WOP_OFF (9u)


#define IFX_FLASH_RDB_CFG0_TAG_LEN (6u)


#define IFX_FLASH_RDB_CFG0_TAG_MSK (0x3fu)


#define IFX_FLASH_RDB_CFG0_TAG_OFF (0u)


#define IFX_FLASH_RDB_CFG1_TAG_LEN (6u)


#define IFX_FLASH_RDB_CFG1_TAG_MSK (0x3fu)


#define IFX_FLASH_RDB_CFG1_TAG_OFF (0u)


#define IFX_FLASH_RDB_CFG2_TAG_LEN (6u)


#define IFX_FLASH_RDB_CFG2_TAG_MSK (0x3fu)


#define IFX_FLASH_RDB_CFG2_TAG_OFF (0u)


#define IFX_FLASH_RRAD_ADD_LEN (29u)


#define IFX_FLASH_RRAD_ADD_MSK (0x1fffffffu)


#define IFX_FLASH_RRAD_ADD_OFF (3u)


#define IFX_FLASH_RRCT_BUSY_LEN (1u)


#define IFX_FLASH_RRCT_BUSY_MSK (0x1u)


#define IFX_FLASH_RRCT_BUSY_OFF (2u)


#define IFX_FLASH_RRCT_CNT_LEN (16u)


#define IFX_FLASH_RRCT_CNT_MSK (0xffffu)


#define IFX_FLASH_RRCT_CNT_OFF (16u)


#define IFX_FLASH_RRCT_DONE_LEN (1u)


#define IFX_FLASH_RRCT_DONE_MSK (0x1u)


#define IFX_FLASH_RRCT_DONE_OFF (3u)


#define IFX_FLASH_RRCT_EOBM_LEN (1u)


#define IFX_FLASH_RRCT_EOBM_MSK (0x1u)


#define IFX_FLASH_RRCT_EOBM_OFF (8u)


#define IFX_FLASH_RRCT_ERR_LEN (1u)


#define IFX_FLASH_RRCT_ERR_MSK (0x1u)


#define IFX_FLASH_RRCT_ERR_OFF (4u)


#define IFX_FLASH_RRCT_STP_LEN (1u)


#define IFX_FLASH_RRCT_STP_MSK (0x1u)


#define IFX_FLASH_RRCT_STP_OFF (1u)


#define IFX_FLASH_RRCT_STRT_LEN (1u)


#define IFX_FLASH_RRCT_STRT_MSK (0x1u)


#define IFX_FLASH_RRCT_STRT_OFF (0u)


#define IFX_FLASH_RRD0_DATA_LEN (32u)


#define IFX_FLASH_RRD0_DATA_MSK (0xffffffffu)


#define IFX_FLASH_RRD0_DATA_OFF (0u)


#define IFX_FLASH_RRD1_DATA_LEN (32u)


#define IFX_FLASH_RRD1_DATA_MSK (0xffffffffu)


#define IFX_FLASH_RRD1_DATA_OFF (0u)


#define IFX_FLASH_UBAB_CFG_CLR_LEN (1u)


#define IFX_FLASH_UBAB_CFG_CLR_MSK (0x1u)


#define IFX_FLASH_UBAB_CFG_CLR_OFF (8u)


#define IFX_FLASH_UBAB_CFG_DIS_LEN (1u)


#define IFX_FLASH_UBAB_CFG_DIS_MSK (0x1u)


#define IFX_FLASH_UBAB_CFG_DIS_OFF (9u)


#define IFX_FLASH_UBAB_CFG_SEL_LEN (6u)


#define IFX_FLASH_UBAB_CFG_SEL_MSK (0x3fu)


#define IFX_FLASH_UBAB_CFG_SEL_OFF (0u)


#define IFX_FLASH_UBAB_STAT_VLD0_LEN (1u)


#define IFX_FLASH_UBAB_STAT_VLD0_MSK (0x1u)


#define IFX_FLASH_UBAB_STAT_VLD0_OFF (0u)


#define IFX_FLASH_UBAB_TOP_ADDR_LEN (19u)


#define IFX_FLASH_UBAB_TOP_ADDR_MSK (0x7ffffu)


#define IFX_FLASH_UBAB_TOP_ADDR_OFF (5u)


#define IFX_FLASH_UBAB_TOP_CLR_LEN (1u)


#define IFX_FLASH_UBAB_TOP_CLR_MSK (0x1u)


#define IFX_FLASH_UBAB_TOP_CLR_OFF (31u)


#define IFX_FLASH_UBAB_TOP_ERR_LEN (6u)


#define IFX_FLASH_UBAB_TOP_ERR_MSK (0x3fu)


#define IFX_FLASH_UBAB_TOP_ERR_OFF (24u)


#define IFX_FLASH_UBAB_TOP_VLD_LEN (1u)


#define IFX_FLASH_UBAB_TOP_VLD_MSK (0x1u)


#define IFX_FLASH_UBAB_TOP_VLD_OFF (30u)
# 55 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 2 3
# 69 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_VCO_BASE_FREQUENCY (100000000.0)
#define IFXSCU_EVR_OSC_FREQUENCY (100000000.0)




#define IFXSCU_PLL_FREERUNNING_FREQUENCY (100000000.0)
# 88 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_PLL_STEPS_16MHZ_80MHZ { (8 - 1), 0.000100, 0 },
# 98 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_PLL_STEPS_16MHZ_133MHZ { (7 - 1), 0.000100, 0 }, { (6 - 1), 0.000100, 0 },
# 113 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_PLL_STEPS_16MHZ_160MHZ { (5 - 1), 0.000100, 0 }, { (4 - 1), 0.000100, 0 }
# 128 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_PLL_STEPS_16MHZ_200MHZ { (6 - 1), 0.000100, 0 }, { (5 - 1), 0.000100, 0 }, { (4 - 1), 0.000100, 0 }
# 148 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_PLL_STEPS_16MHZ_240MHZ { (5 - 1), 0.000100, 0 }, { (4 - 1), 0.000100, 0 }, { (3 - 1), 0.000100, 0 }
# 169 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_PLL_STEPS_20MHZ_80MHZ { (8 - 1), 0.000100, 0 },
# 179 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_PLL_STEPS_20MHZ_133MHZ { (7 - 1), 0.000100, 0 }, { (6 - 1), 0.000100, 0 },
# 194 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_PLL_STEPS_20MHZ_160MHZ { (5 - 1), 0.000100, 0 }, { (4 - 1), 0.000100, 0 }
# 209 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_PLL_STEPS_20MHZ_200MHZ { (5 - 1), 0.000100, 0 }, { (4 - 1), 0.000100, 0 }, { (3 - 1), 0.000100, 0 }
# 229 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_PLL_STEPS_20MHZ_240MHZ { (5 - 1), 0.000100, 0 }, { (4 - 1), 0.000100, 0 }, { (3 - 1), 0.000100, 0 }
# 249 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_PLL_STEPS_20MHZ_300MHZ { (4 - 1), 0.000100, 0 }, { (3 - 1), 0.000100, 0 }, { (2 - 1), 0.000100, 0 }
# 270 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_PLL_STEPS_40MHZ_80MHZ { (8 - 1), 0.000100, 0 },
# 280 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_PLL_STEPS_40MHZ_133MHZ { (7 - 1), 0.000100, 0 }, { (6 - 1), 0.000100, 0 },
# 295 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_PLL_STEPS_40MHZ_160MHZ { (5 - 1), 0.000100, 0 }, { (4 - 1), 0.000100, 0 }
# 310 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_PLL_STEPS_40MHZ_200MHZ { (5 - 1), 0.000100, 0 }, { (4 - 1), 0.000100, 0 }, { (3 - 1), 0.000100, 0 }
# 330 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_PLL_STEPS_40MHZ_240MHZ { (5 - 1), 0.000100, 0 }, { (4 - 1), 0.000100, 0 }, { (3 - 1), 0.000100, 0 }
# 350 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_PLL_STEPS_40MHZ_300MHZ { (4 - 1), 0.000100, 0 }, { (3 - 1), 0.000100, 0 }, { (2 - 1), 0.000100, 0 }
# 371 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_PLL_STEPS_8MHZ_80MHZ { (5 - 1), 0.000100, 0 },
# 381 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_PLL_STEPS_8MHZ_160MHZ { (4 - 1), 0.000100, 0 }, { (3 - 1), 0.000100, 0 },
# 396 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_PLL_STEPS_8MHZ_200MHZ { (5 - 1), 0.000100, 0 }, { (4 - 1), 0.000100, 0 }, { (3 - 1), 0.000100, 0 },
# 424 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_PLL_INITIAL_STEP_16MHZ_80MHZ {(1 - 1), (40 - 1), (7 - 1), 0.000200F}






#define IFXSCU_CFG_PLL_INITIAL_STEP_16MHZ_133MHZ {(1 - 1), (50 - 1), (8 - 1), 0.000200F}






#define IFXSCU_CFG_PLL_INITIAL_STEP_16MHZ_160MHZ {(1 - 1), (40 - 1), (6 - 1), 0.000200F}






#define IFXSCU_CFG_PLL_INITIAL_STEP_16MHZ_200MHZ {(1 - 1), (50 - 1), (8 - 1), 0.000200F}






#define IFXSCU_CFG_PLL_INITIAL_STEP_16MHZ_240MHZ {(1 - 1), (45 - 1), (7 - 1), 0.000200F}
# 461 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_PLL_INITIAL_STEP_20MHZ_80MHZ {(2 - 1), (64 - 1), (7 - 1), 0.000200F}






#define IFXSCU_CFG_PLL_INITIAL_STEP_20MHZ_133MHZ {(2 - 1), (80 - 1), (8 - 1), 0.000200F}






#define IFXSCU_CFG_PLL_INITIAL_STEP_20MHZ_160MHZ {(2 - 1), (64 - 1), (6 - 1), 0.000200F}






#define IFXSCU_CFG_PLL_INITIAL_STEP_20MHZ_200MHZ {(2 - 1), (60 - 1), (6 - 1), 0.000200F}






#define IFXSCU_CFG_PLL_INITIAL_STEP_20MHZ_240MHZ {(2 - 1), (72 - 1), (7 - 1), 0.000200F}






#define IFXSCU_CFG_PLL_INITIAL_STEP_20MHZ_300MHZ {(2 - 1), (60 - 1), (6 - 1), 0.000200F}
# 505 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_PLL_INITIAL_STEP_40MHZ_80MHZ {(4 - 1), (64 - 1), (7 - 1), 0.000200F}






#define IFXSCU_CFG_PLL_INITIAL_STEP_40MHZ_133MHZ {(4 - 1), (80 - 1), (8 - 1), 0.000200F}






#define IFXSCU_CFG_PLL_INITIAL_STEP_40MHZ_160MHZ {(4 - 1), (64 - 1), (6 - 1), 0.000200F}






#define IFXSCU_CFG_PLL_INITIAL_STEP_40MHZ_200MHZ {(4 - 1), (60 - 1), (6 - 1), 0.000200F}






#define IFXSCU_CFG_PLL_INITIAL_STEP_40MHZ_240MHZ {(4 - 1), (72 - 1), (7 - 1), 0.000200F}






#define IFXSCU_CFG_PLL_INITIAL_STEP_40MHZ_300MHZ {(4 - 1), (60 - 1), (6 - 1), 0.000200F}
# 549 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_PLL_INITIAL_STEP_8MHZ_80MHZ {(1 - 1), (50 - 1), (5 - 1), 0.000200F}






#define IFXSCU_CFG_PLL_INITIAL_STEP_8MHZ_160MHZ {(1 - 1), (60 - 1), (5 - 1), 0.000200F}






#define IFXSCU_CFG_PLL_INITIAL_STEP_8MHZ_200MHZ {(1 - 1), (75 - 1), (6 - 1), 0.000200F}
# 578 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_MAXDIV_80MHZ (1)




#define IFXSCU_CFG_MAXDIV_133MHZ (1)




#define IFXSCU_CFG_MAXDIV_160MHZ (1)




#define IFXSCU_CFG_MAXDIV_200MHZ (1)




#define IFXSCU_CFG_MAXDIV_240MHZ (1)




#define IFXSCU_CFG_MAXDIV_300MHZ (1)




#define IFXSCU_CFG_SRIDIV_80MHZ (IFXSCU_CFG_MAXDIV_80MHZ)




#define IFXSCU_CFG_SRIDIV_133MHZ (IFXSCU_CFG_MAXDIV_133MHZ)




#define IFXSCU_CFG_SRIDIV_160MHZ (IFXSCU_CFG_MAXDIV_160MHZ)




#define IFXSCU_CFG_SRIDIV_200MHZ (IFXSCU_CFG_MAXDIV_200MHZ)




#define IFXSCU_CFG_SRIDIV_240MHZ (IFXSCU_CFG_MAXDIV_240MHZ)




#define IFXSCU_CFG_SRIDIV_300MHZ (IFXSCU_CFG_MAXDIV_300MHZ)




#define IFXSCU_CFG_BAUD1DIV_80MHZ (IFXSCU_CFG_MAXDIV_80MHZ)




#define IFXSCU_CFG_BAUD1DIV_133MHZ (IFXSCU_CFG_MAXDIV_133MHZ * 2)




#define IFXSCU_CFG_BAUD1DIV_160MHZ (IFXSCU_CFG_MAXDIV_160MHZ * 2)




#define IFXSCU_CFG_BAUD1DIV_200MHZ (IFXSCU_CFG_MAXDIV_200MHZ * 2)




#define IFXSCU_CFG_BAUD1DIV_240MHZ (IFXSCU_CFG_MAXDIV_240MHZ * 3)




#define IFXSCU_CFG_BAUD1DIV_300MHZ (IFXSCU_CFG_MAXDIV_300MHZ * 3)




#define IFXSCU_CFG_BAUD2DIV_80MHZ (IFXSCU_CFG_MAXDIV_80MHZ)




#define IFXSCU_CFG_BAUD2DIV_133MHZ (IFXSCU_CFG_MAXDIV_133MHZ)




#define IFXSCU_CFG_BAUD2DIV_160MHZ (IFXSCU_CFG_MAXDIV_160MHZ)




#define IFXSCU_CFG_BAUD2DIV_200MHZ (IFXSCU_CFG_MAXDIV_200MHZ)




#define IFXSCU_CFG_BAUD2DIV_240MHZ (IFXSCU_CFG_MAXDIV_240MHZ)




#define IFXSCU_CFG_BAUD2DIV_300MHZ (IFXSCU_CFG_MAXDIV_300MHZ)




#define IFXSCU_CFG_SPBDIV_80MHZ (IFXSCU_CFG_MAXDIV_80MHZ * 2)




#define IFXSCU_CFG_SPBDIV_133MHZ (IFXSCU_CFG_MAXDIV_133MHZ * 2)




#define IFXSCU_CFG_SPBDIV_160MHZ (IFXSCU_CFG_MAXDIV_160MHZ * 2)




#define IFXSCU_CFG_SPBDIV_200MHZ (IFXSCU_CFG_MAXDIV_200MHZ * 2)




#define IFXSCU_CFG_SPBDIV_240MHZ (IFXSCU_CFG_MAXDIV_240MHZ * 3)




#define IFXSCU_CFG_SPBDIV_300MHZ (IFXSCU_CFG_MAXDIV_300MHZ * 3)




#define IFXSCU_CFG_FSI2DIV_80MHZ (IFXSCU_CFG_MAXDIV_80MHZ)




#define IFXSCU_CFG_FSI2DIV_133MHZ (IFXSCU_CFG_MAXDIV_133MHZ)




#define IFXSCU_CFG_FSI2DIV_160MHZ (IFXSCU_CFG_MAXDIV_160MHZ)




#define IFXSCU_CFG_FSI2DIV_200MHZ (IFXSCU_CFG_MAXDIV_200MHZ)




#define IFXSCU_CFG_FSI2DIV_240MHZ (IFXSCU_CFG_MAXDIV_240MHZ)




#define IFXSCU_CFG_FSI2DIV_300MHZ (IFXSCU_CFG_MAXDIV_300MHZ)




#define IFXSCU_CFG_FSIDIV_80MHZ (IFXSCU_CFG_MAXDIV_80MHZ)




#define IFXSCU_CFG_FSIDIV_133MHZ (IFXSCU_CFG_MAXDIV_133MHZ * 2)




#define IFXSCU_CFG_FSIDIV_160MHZ (IFXSCU_CFG_MAXDIV_160MHZ * 2)




#define IFXSCU_CFG_FSIDIV_200MHZ (IFXSCU_CFG_MAXDIV_200MHZ * 2)




#define IFXSCU_CFG_FSIDIV_240MHZ (IFXSCU_CFG_MAXDIV_240MHZ * 3)




#define IFXSCU_CFG_FSIDIV_300MHZ (IFXSCU_CFG_MAXDIV_300MHZ * 3)




#define IFXSCU_CFG_CANDIV_80MHZ (IFXSCU_CFG_MAXDIV_80MHZ)




#define IFXSCU_CFG_CANDIV_133MHZ (IFXSCU_CFG_MAXDIV_133MHZ * 2)




#define IFXSCU_CFG_CANDIV_160MHZ (IFXSCU_CFG_MAXDIV_160MHZ * 2)




#define IFXSCU_CFG_CANDIV_200MHZ (IFXSCU_CFG_MAXDIV_200MHZ * 2)




#define IFXSCU_CFG_CANDIV_240MHZ (IFXSCU_CFG_MAXDIV_240MHZ * 3)




#define IFXSCU_CFG_CANDIV_300MHZ (IFXSCU_CFG_MAXDIV_300MHZ * 3)




#define IFXSCU_CFG_ERAYDIV_80MHZ (IFXSCU_CFG_MAXDIV_80MHZ)




#define IFXSCU_CFG_ERAYDIV_133MHZ (IFXSCU_CFG_MAXDIV_133MHZ * 2)




#define IFXSCU_CFG_ERAYDIV_160MHZ (IFXSCU_CFG_MAXDIV_160MHZ * 2)




#define IFXSCU_CFG_ERAYDIV_200MHZ (IFXSCU_CFG_MAXDIV_200MHZ * 3)




#define IFXSCU_CFG_ERAYDIV_240MHZ (IFXSCU_CFG_MAXDIV_240MHZ * 3)




#define IFXSCU_CFG_ERAYDIV_300MHZ (IFXSCU_CFG_MAXDIV_300MHZ * 4)




#define IFXSCU_CFG_STMDIV_80MHZ (IFXSCU_CFG_MAXDIV_80MHZ)




#define IFXSCU_CFG_STMDIV_133MHZ (IFXSCU_CFG_MAXDIV_133MHZ * 2)




#define IFXSCU_CFG_STMDIV_160MHZ (IFXSCU_CFG_MAXDIV_160MHZ * 2)




#define IFXSCU_CFG_STMDIV_200MHZ (IFXSCU_CFG_MAXDIV_200MHZ * 2)




#define IFXSCU_CFG_STMDIV_240MHZ (IFXSCU_CFG_MAXDIV_240MHZ * 3)




#define IFXSCU_CFG_STMDIV_300MHZ (IFXSCU_CFG_MAXDIV_300MHZ * 3)




#define IFXSCU_CFG_GTMDIV_80MHZ (IFXSCU_CFG_MAXDIV_80MHZ)




#define IFXSCU_CFG_GTMDIV_133MHZ (IFXSCU_CFG_MAXDIV_133MHZ * 2)




#define IFXSCU_CFG_GTMDIV_160MHZ (IFXSCU_CFG_MAXDIV_160MHZ * 2)




#define IFXSCU_CFG_GTMDIV_200MHZ (IFXSCU_CFG_MAXDIV_200MHZ * 2)




#define IFXSCU_CFG_GTMDIV_240MHZ (IFXSCU_CFG_MAXDIV_240MHZ * 3)




#define IFXSCU_CFG_GTMDIV_300MHZ (IFXSCU_CFG_MAXDIV_300MHZ * 3)




#define IFXSCU_CFG_ETHDIV_80MHZ (IFXSCU_CFG_MAXDIV_80MHZ * 2)




#define IFXSCU_CFG_ETHDIV_133MHZ (IFXSCU_CFG_MAXDIV_133MHZ * 3)




#define IFXSCU_CFG_ETHDIV_160MHZ (IFXSCU_CFG_MAXDIV_160MHZ * 4)




#define IFXSCU_CFG_ETHDIV_200MHZ (IFXSCU_CFG_MAXDIV_200MHZ * 4)




#define IFXSCU_CFG_ETHDIV_240MHZ (IFXSCU_CFG_MAXDIV_240MHZ * 5)




#define IFXSCU_CFG_ETHDIV_300MHZ (IFXSCU_CFG_MAXDIV_300MHZ * 6)




#define IFXSCU_CFG_ASCLINFDIV_80MHZ (IFXSCU_CFG_MAXDIV_80MHZ)




#define IFXSCU_CFG_ASCLINFDIV_133MHZ (IFXSCU_CFG_MAXDIV_133MHZ)




#define IFXSCU_CFG_ASCLINFDIV_160MHZ (IFXSCU_CFG_MAXDIV_160MHZ)




#define IFXSCU_CFG_ASCLINFDIV_200MHZ (IFXSCU_CFG_MAXDIV_200MHZ)




#define IFXSCU_CFG_ASCLINFDIV_240MHZ (IFXSCU_CFG_MAXDIV_240MHZ)




#define IFXSCU_CFG_ASCLINFDIV_300MHZ (IFXSCU_CFG_MAXDIV_300MHZ)




#define IFXSCU_CFG_ASCLINSDIV_80MHZ (IFXSCU_CFG_MAXDIV_80MHZ)




#define IFXSCU_CFG_ASCLINSDIV_133MHZ (IFXSCU_CFG_MAXDIV_133MHZ * 2)




#define IFXSCU_CFG_ASCLINSDIV_160MHZ (IFXSCU_CFG_MAXDIV_160MHZ * 2)




#define IFXSCU_CFG_ASCLINSDIV_200MHZ (IFXSCU_CFG_MAXDIV_200MHZ * 2)




#define IFXSCU_CFG_ASCLINSDIV_240MHZ (IFXSCU_CFG_MAXDIV_240MHZ * 3)




#define IFXSCU_CFG_ASCLINSDIV_300MHZ (IFXSCU_CFG_MAXDIV_300MHZ * 3)




#define IFXSCU_CFG_BBBDIV_80MHZ (IFXSCU_CFG_SRIDIV_80MHZ * 2)




#define IFXSCU_CFG_BBBDIV_133MHZ (IFXSCU_CFG_SRIDIV_133MHZ * 2)




#define IFXSCU_CFG_BBBDIV_160MHZ (IFXSCU_CFG_SRIDIV_160MHZ * 2)




#define IFXSCU_CFG_BBBDIV_200MHZ (IFXSCU_CFG_SRIDIV_200MHZ * 2)




#define IFXSCU_CFG_BBBDIV_240MHZ (IFXSCU_CFG_SRIDIV_240MHZ * 2)




#define IFXSCU_CFG_BBBDIV_300MHZ (IFXSCU_CFG_SRIDIV_300MHZ * 2)




#define IFXSCU_CFG_CPU0DIV_80MHZ (0)




#define IFXSCU_CFG_CPU0DIV_133MHZ (0)




#define IFXSCU_CFG_CPU0DIV_160MHZ (0)




#define IFXSCU_CFG_CPU0DIV_200MHZ (0)




#define IFXSCU_CFG_CPU0DIV_240MHZ (0)




#define IFXSCU_CFG_CPU0DIV_300MHZ (0)




#define IFXSCU_CFG_CPU1DIV_80MHZ (0)




#define IFXSCU_CFG_CPU1DIV_133MHZ (0)




#define IFXSCU_CFG_CPU1DIV_160MHZ (0)




#define IFXSCU_CFG_CPU1DIV_200MHZ (0)




#define IFXSCU_CFG_CPU1DIV_240MHZ (0)




#define IFXSCU_CFG_CPU1DIV_300MHZ (0)




#define IFXSCU_CFG_CPU2DIV_80MHZ (0)




#define IFXSCU_CFG_CPU2DIV_133MHZ (0)




#define IFXSCU_CFG_CPU2DIV_160MHZ (0)




#define IFXSCU_CFG_CPU2DIV_200MHZ (0)




#define IFXSCU_CFG_CPU2DIV_240MHZ (0)




#define IFXSCU_CFG_CPU2DIV_300MHZ (0)
# 1122 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_FLASH_FCON_WSPFLASH_80MHZ (3 - 1)




#define IFXSCU_CFG_FLASH_FCON_WSPFLASH_133MHZ (4 - 1)




#define IFXSCU_CFG_FLASH_FCON_WSPFLASH_160MHZ (5 - 1)




#define IFXSCU_CFG_FLASH_FCON_WSPFLASH_200MHZ (6 - 1)




#define IFXSCU_CFG_FLASH_FCON_WSPFLASH_240MHZ (8 - 1)




#define IFXSCU_CFG_FLASH_FCON_WSPFLASH_300MHZ (9 - 1)




#define IFXSCU_CFG_FLASH_FCON_WSECPF_80MHZ (1 - 1)




#define IFXSCU_CFG_FLASH_FCON_WSECPF_133MHZ (2 - 1)




#define IFXSCU_CFG_FLASH_FCON_WSECPF_160MHZ (2 - 1)




#define IFXSCU_CFG_FLASH_FCON_WSECPF_200MHZ (2 - 1)




#define IFXSCU_CFG_FLASH_FCON_WSECPF_240MHZ (3 - 1)




#define IFXSCU_CFG_FLASH_FCON_WSECPF_300MHZ (3 - 1)




#define IFXSCU_CFG_FLASH_FCON_WSDFLASH_80MHZ (8 - 1)




#define IFXSCU_CFG_FLASH_FCON_WSDFLASH_133MHZ (7 - 1)




#define IFXSCU_CFG_FLASH_FCON_WSDFLASH_160MHZ (8 - 1)




#define IFXSCU_CFG_FLASH_FCON_WSDFLASH_200MHZ (10 - 1)




#define IFXSCU_CFG_FLASH_FCON_WSDFLASH_240MHZ (8 - 1)




#define IFXSCU_CFG_FLASH_FCON_WSDFLASH_300MHZ (10 - 1)




#define IFXSCU_CFG_FLASH_FCON_WSECDF_80MHZ (2 - 1)




#define IFXSCU_CFG_FLASH_FCON_WSECDF_133MHZ (2 - 1)




#define IFXSCU_CFG_FLASH_FCON_WSECDF_160MHZ (2 - 1)




#define IFXSCU_CFG_FLASH_FCON_WSECDF_200MHZ (2 - 1)




#define IFXSCU_CFG_FLASH_FCON_WSECDF_240MHZ (2 - 1)




#define IFXSCU_CFG_FLASH_FCON_WSECDF_300MHZ (2 - 1)



#define IFXSCU_CFG_FLASH_WAITSTATE_MSK ( (IFX_FLASH_FCON_WSPFLASH_MSK << IFX_FLASH_FCON_WSPFLASH_OFF) | (IFX_FLASH_FCON_WSECPF_MSK << IFX_FLASH_FCON_WSECPF_OFF) | (IFX_FLASH_FCON_WSDFLASH_MSK << IFX_FLASH_FCON_WSDFLASH_OFF) | (IFX_FLASH_FCON_WSECDF_MSK << IFX_FLASH_FCON_WSECDF_OFF))






#define IFXSCU_CFG_FLASH_WAITSTATE_VAL_BASIC_(pllFreq) ( (IFXSCU_CFG_FLASH_FCON_WSPFLASH_ ##pllFreq << IFX_FLASH_FCON_WSPFLASH_OFF) | (IFXSCU_CFG_FLASH_FCON_WSECPF_ ##pllFreq << IFX_FLASH_FCON_WSECPF_OFF) | (IFXSCU_CFG_FLASH_FCON_WSDFLASH_ ##pllFreq << IFX_FLASH_FCON_WSDFLASH_OFF) | (IFXSCU_CFG_FLASH_FCON_WSECDF_ ##pllFreq << IFX_FLASH_FCON_WSECDF_OFF))






#define IFXSCU_CFG_FLASH_WAITSTATE_VAL_BASIC(pllFreq) IFXSCU_CFG_FLASH_WAITSTATE_VAL_BASIC_(pllFreq)

#define IFXSCU_CFG_FLASH_WAITSTATE_VAL IFXSCU_CFG_FLASH_WAITSTATE_VAL_BASIC(IFXSCU_CFG_PLL_FREQ)


#define IFXSCU_CFG_CCUCON0_MASK ( (IFX_SCU_CCUCON0_BAUD1DIV_MSK << IFX_SCU_CCUCON0_BAUD1DIV_OFF) | (IFX_SCU_CCUCON0_BAUD2DIV_MSK << IFX_SCU_CCUCON0_BAUD2DIV_OFF) | (IFX_SCU_CCUCON0_SRIDIV_MSK << IFX_SCU_CCUCON0_SRIDIV_OFF) | (IFX_SCU_CCUCON0_SPBDIV_MSK << IFX_SCU_CCUCON0_SPBDIV_OFF) | (IFX_SCU_CCUCON0_FSI2DIV_MSK << IFX_SCU_CCUCON0_FSI2DIV_OFF) | (IFX_SCU_CCUCON0_FSIDIV_MSK << IFX_SCU_CCUCON0_FSIDIV_OFF))
# 1269 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_CCUCON0_BASIC_(pllFreq) (uint32)( (IFXSCU_CFG_BAUD1DIV_ ##pllFreq << IFX_SCU_CCUCON0_BAUD1DIV_OFF) | (IFXSCU_CFG_BAUD2DIV_ ##pllFreq << IFX_SCU_CCUCON0_BAUD2DIV_OFF) | (IFXSCU_CFG_SRIDIV_ ##pllFreq << IFX_SCU_CCUCON0_SRIDIV_OFF) | (IFXSCU_CFG_SPBDIV_ ##pllFreq << IFX_SCU_CCUCON0_SPBDIV_OFF) | (IFXSCU_CFG_FSI2DIV_ ##pllFreq << IFX_SCU_CCUCON0_FSI2DIV_OFF) | (IFXSCU_CFG_FSIDIV_ ##pllFreq << IFX_SCU_CCUCON0_FSIDIV_OFF))
# 1278 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_CCUCON0_BASIC(pllFreq) IFXSCU_CFG_CCUCON0_BASIC_(pllFreq)

#define IFXSCU_CFG_CCUCON0 IFXSCU_CFG_CCUCON0_BASIC(IFXSCU_CFG_PLL_FREQ)


#define IFXSCU_CFG_CCUCON1_MASK ( (IFX_SCU_CCUCON1_CANDIV_MSK << IFX_SCU_CCUCON1_CANDIV_OFF) | (IFX_SCU_CCUCON1_ERAYDIV_MSK << IFX_SCU_CCUCON1_ERAYDIV_OFF) | (IFX_SCU_CCUCON1_STMDIV_MSK << IFX_SCU_CCUCON1_STMDIV_OFF) | (IFX_SCU_CCUCON1_GTMDIV_MSK << IFX_SCU_CCUCON1_GTMDIV_OFF) | (IFX_SCU_CCUCON1_ETHDIV_MSK << IFX_SCU_CCUCON1_ETHDIV_OFF) | (IFX_SCU_CCUCON1_ASCLINFDIV_MSK << IFX_SCU_CCUCON1_ASCLINFDIV_OFF) | (IFX_SCU_CCUCON1_ASCLINSDIV_MSK << IFX_SCU_CCUCON1_ASCLINSDIV_OFF))
# 1293 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_CCUCON1_BASIC_(pllFreq) (uint32)( (IFXSCU_CFG_CANDIV_ ##pllFreq << IFX_SCU_CCUCON1_CANDIV_OFF) | (IFXSCU_CFG_ERAYDIV_80MHZ << IFX_SCU_CCUCON1_ERAYDIV_OFF) | (IFXSCU_CFG_STMDIV_ ##pllFreq << IFX_SCU_CCUCON1_STMDIV_OFF) | (IFXSCU_CFG_GTMDIV_ ##pllFreq << IFX_SCU_CCUCON1_GTMDIV_OFF) | (IFXSCU_CFG_ETHDIV_ ##pllFreq << IFX_SCU_CCUCON1_ETHDIV_OFF) | (IFXSCU_CFG_ASCLINFDIV_ ##pllFreq << IFX_SCU_CCUCON1_ASCLINFDIV_OFF) | (IFXSCU_CFG_ASCLINSDIV_ ##pllFreq << IFX_SCU_CCUCON1_ASCLINSDIV_OFF))
# 1303 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_CCUCON1_BASIC(pllFreq) IFXSCU_CFG_CCUCON1_BASIC_(pllFreq)

#define IFXSCU_CFG_CCUCON1 IFXSCU_CFG_CCUCON1_BASIC(IFXSCU_CFG_PLL_FREQ)


#define IFXSCU_CFG_CCUCON2_MASK ( (IFX_SCU_CCUCON2_BBBDIV_MSK << IFX_SCU_CCUCON2_BBBDIV_OFF))



#define IFXSCU_CFG_CCUCON2_BASIC_(pllFreq) (uint32)( (IFXSCU_CFG_BBBDIV_ ##pllFreq << IFX_SCU_CCUCON2_BBBDIV_OFF))



#define IFXSCU_CFG_CCUCON2_BASIC(pllFreq) IFXSCU_CFG_CCUCON2_BASIC_(pllFreq)

#define IFXSCU_CFG_CCUCON2 IFXSCU_CFG_CCUCON2_BASIC(IFXSCU_CFG_PLL_FREQ)


#define IFXSCU_CFG_CCUCON5_MASK ( (IFX_SCU_CCUCON5_MAXDIV_MSK << IFX_SCU_CCUCON5_MAXDIV_OFF))



#define IFXSCU_CFG_CCUCON5_BASIC_(pllFreq) (uint32)( (IFXSCU_CFG_MAXDIV_ ##pllFreq << IFX_SCU_CCUCON5_MAXDIV_OFF))



#define IFXSCU_CFG_CCUCON5_BASIC(pllFreq) IFXSCU_CFG_CCUCON5_BASIC_(pllFreq)

#define IFXSCU_CFG_CCUCON5 IFXSCU_CFG_CCUCON5_BASIC(IFXSCU_CFG_PLL_FREQ)


#define IFXSCU_CFG_CCUCON6_MASK ( (IFX_SCU_CCUCON6_CPU0DIV_MSK << IFX_SCU_CCUCON6_CPU0DIV_OFF))



#define IFXSCU_CFG_CCUCON6_BASIC_(pllFreq) (uint32)( (IFXSCU_CFG_CPU0DIV_ ##pllFreq << IFX_SCU_CCUCON6_CPU0DIV_OFF))



#define IFXSCU_CFG_CCUCON6_BASIC(pllFreq) IFXSCU_CFG_CCUCON6_BASIC_(pllFreq)

#define IFXSCU_CFG_CCUCON6 IFXSCU_CFG_CCUCON6_BASIC(IFXSCU_CFG_PLL_FREQ)


#define IFXSCU_CFG_CCUCON7_MASK ( (IFX_SCU_CCUCON7_CPU1DIV_MSK << IFX_SCU_CCUCON7_CPU1DIV_OFF))



#define IFXSCU_CFG_CCUCON7_BASIC_(pllFreq) (uint32)( (IFXSCU_CFG_CPU1DIV_ ##pllFreq << IFX_SCU_CCUCON7_CPU1DIV_OFF))



#define IFXSCU_CFG_CCUCON7_BASIC(pllFreq) IFXSCU_CFG_CCUCON7_BASIC_(pllFreq)

#define IFXSCU_CFG_CCUCON7 IFXSCU_CFG_CCUCON7_BASIC(IFXSCU_CFG_PLL_FREQ)


#define IFXSCU_CFG_CCUCON8_MASK ( (IFX_SCU_CCUCON8_CPU2DIV_MSK << IFX_SCU_CCUCON8_CPU2DIV_OFF))



#define IFXSCU_CFG_CCUCON8_BASIC_(pllFreq) (uint32)( (IFXSCU_CFG_CPU2DIV_ ##pllFreq << IFX_SCU_CCUCON8_CPU2DIV_OFF))



#define IFXSCU_CFG_CCUCON8_BASIC(pllFreq) IFXSCU_CFG_CCUCON8_BASIC_(pllFreq)

#define IFXSCU_CFG_CCUCON8 IFXSCU_CFG_CCUCON8_BASIC(IFXSCU_CFG_PLL_FREQ)

#define IFXSCU_CFG_CLK_DISTRIBUTION { {IFXSCU_CFG_CCUCON0, IFXSCU_CFG_CCUCON0_MASK}, {IFXSCU_CFG_CCUCON1, IFXSCU_CFG_CCUCON1_MASK}, {IFXSCU_CFG_CCUCON2, IFXSCU_CFG_CCUCON2_MASK}, {IFXSCU_CFG_CCUCON5, IFXSCU_CFG_CCUCON5_MASK}, {IFXSCU_CFG_CCUCON6, IFXSCU_CFG_CCUCON6_MASK}, {IFXSCU_CFG_CCUCON7, IFXSCU_CFG_CCUCON7_MASK}, {IFXSCU_CFG_CCUCON8, IFXSCU_CFG_CCUCON8_MASK} }
# 1386 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_PLL_STEPS_BASIC_(xtalFreq,pllFreq) IFXSCU_CFG_PLL_STEPS_ ##xtalFreq ##_ ##pllFreq
#define IFXSCU_CFG_PLL_STEPS_BASIC(xtalFreq,pllFreq) IFXSCU_CFG_PLL_STEPS_BASIC_(xtalFreq, pllFreq)
#define IFXSCU_CFG_PLL_STEPS IFXSCU_CFG_PLL_STEPS_BASIC(IFXSCU_CFG_XTAL_FREQ, IFXSCU_CFG_PLL_FREQ)


#define IFXSCU_CFG_PLL_INITIAL_STEP_BASIC_(xtalFreq,pllFreq) IFXSCU_CFG_PLL_INITIAL_STEP_ ##xtalFreq ##_ ##pllFreq
#define IFXSCU_CFG_PLL_INITIAL_STEP_BASIC(xtalFreq,pllFreq) IFXSCU_CFG_PLL_INITIAL_STEP_BASIC_(xtalFreq, pllFreq)
#define IFXSCU_CFG_PLL_INITIAL_STEP IFXSCU_CFG_PLL_INITIAL_STEP_BASIC(IFXSCU_CFG_XTAL_FREQ, IFXSCU_CFG_PLL_FREQ)

#define IFXSCU_CFG_FLASH_WAITSTATE {IFXSCU_CFG_FLASH_WAITSTATE_VAL, IFXSCU_CFG_FLASH_WAITSTATE_MSK}




#define IFXSCU_CFG_XTAL_FREQ 20MHZ
# 1419 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_PLL_FREQ 200MHZ
# 1429 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
typedef enum
{
    IfxScu_CCUCON0_CLKSEL_fBack = 0,
    IfxScu_CCUCON0_CLKSEL_fPll = 1
} IfxScu_CCUCON0_CLKSEL;


typedef enum
{
    IfxScu_CCUCON1_INSEL_fOsc1 = 0,
    IfxScu_CCUCON1_INSEL_fOsc0 = 1
} IfxScu_CCUCON1_INSEL;


typedef enum
{
    IfxScu_WDTCON1_IR_divBy16384 = 0,
    IfxScu_WDTCON1_IR_divBy256 = 1,
    IfxScu_WDTCON1_IR_divBy64 = 2
} IfxScu_WDTCON1_IR;

typedef enum
{
    IfxScu_PMCSR_REQSLP_Run = 0U,
    IfxScu_PMCSR_REQSLP_Idle = 1U,
    IfxScu_PMCSR_REQSLP_Sleep = 2U,
    IfxScu_PMCSR_REQSLP_Stby = 3U
} IfxScu_PMCSR_REQSLP;
# 74 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 2 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_assert.h" 1 3
# 48 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_assert.h" 3
#define IFX_ASSERT_H 1







#define IFX_VERBOSE_LEVEL_OFF (0)
#define IFX_VERBOSE_LEVEL_FAILURE (1)
#define IFX_VERBOSE_LEVEL_ERROR (2)
#define IFX_VERBOSE_LEVEL_WARNING (3)
#define IFX_VERBOSE_LEVEL_INFO (4)
#define IFX_VERBOSE_LEVEL_DEBUG (5)


#define IFX_ASSERT_FEATURE_NOT_IMPLEMENTED (FALSE)

#define IFX_ASSERT_FEATURE_NOT_AVAILABLE (FALSE)


#define IFX_ASSERT(level,expr) ((void)0)



#define IFX_VALIDATE(level,expr) (expr)
# 75 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 2 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 1 3
# 59 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 3
#define IFXSCUWDT_H 1
# 69 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxScuWdt.asm.h" 1 3
# 45 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxScuWdt.asm.h" 3
#define IFXSCUWDT_ASM_H 1






#define IFXSCUWDT_CALCULATELFSR(pwd) ((((((pwd) >> 13) ^ ((pwd) >> 12) ^ ((pwd) >> 11) ^ ((pwd) >> 1 )) & 1)) | (((pwd)<<1) & 0x3FFF))
# 62 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxScuWdt.asm.h" 3
static inline __attribute__ ((always_inline)) uint16 IfxScuWdt_calculateLfsr(uint16 password);
# 85 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxScuWdt.asm.h" 3
static inline __attribute__ ((always_inline)) uint16 IfxScuWdt_calculateLfsr(uint16 pwd)
{

    uint32 temp = pwd;
    uint16 res;

    __asm("xor.t  %0,%1,13,%1,12 \n           xor.t  %0,%0,0,%1,11  \n           sh.xor.t %1,%0,0,%1,1  \n           extr.u %0,%1,0,14     \n"


                                     : "=&d" (res) : "d" (temp));
    return res;

}
# 70 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 2 3
# 78 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 3
#define IFXSCUWDT_ENDINIT_WAIT_TIMEOUTCOUNT (0x100)
# 88 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 3
typedef struct
{
    uint16 password;
    uint16 reload;
    IfxScu_WDTCON1_IR inputFrequency;
    boolean disableWatchdog;
    boolean enableSmuRestriction;
    boolean enableAutomaticPasswordChange;
    boolean enableTimerCheck;
    boolean enableTimerCheckTolerance;
    boolean clrInternalResetFlag;
} IfxScuWdt_Config;
# 115 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 3
extern void IfxScuWdt_initConfig(IfxScuWdt_Config *config);
# 128 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 3
extern void IfxScuWdt_initCpuWatchdog(Ifx_SCU_WDTCPU *wdt, const IfxScuWdt_Config *config);
# 141 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 3
extern void IfxScuWdt_initSafetyWatchdog(Ifx_SCU_WDTS *wdt, const IfxScuWdt_Config *config);
# 164 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 3
static inline __attribute__ ((always_inline)) void IfxScuWdt_clearCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, uint16 password);
# 177 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 3
static inline __attribute__ ((always_inline)) void IfxScuWdt_clearSafetyEndinitInline(uint16 password);
# 189 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 3
static inline __attribute__ ((always_inline)) void IfxScuWdt_setCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, uint16 password);
# 200 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 3
static inline __attribute__ ((always_inline)) void IfxScuWdt_setSafetyEndinitInline(uint16 password);
# 216 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 3
extern void IfxScuWdt_clearCpuEndinit(uint16 password);
# 228 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 3
extern void IfxScuWdt_clearSafetyEndinit(uint16 password);
# 238 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 3
extern void IfxScuWdt_setCpuEndinit(uint16 password);
# 248 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 3
extern void IfxScuWdt_setSafetyEndinit(uint16 password);
# 268 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 3
static inline __attribute__ ((always_inline)) uint16 IfxScuWdt_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog);





static inline __attribute__ ((always_inline)) boolean IfxScuWdt_getCpuWatchdogEndInitInline(Ifx_SCU_WDTCPU *watchdog);




static inline __attribute__ ((always_inline)) boolean IfxScuWdt_getSafetyWatchdogEndInit(void);
# 289 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 3
static inline __attribute__ ((always_inline)) uint16 IfxScuWdt_getSafetyWatchdogPasswordInline(void);
# 303 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 3
extern void IfxScuWdt_changeCpuWatchdogPassword(uint16 password, uint16 newPassword);
# 314 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 3
extern void IfxScuWdt_changeCpuWatchdogReload(uint16 password, uint16 reload);
# 324 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 3
extern void IfxScuWdt_changeSafetyWatchdogPassword(uint16 password, uint16 newPassword);
# 335 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 3
extern void IfxScuWdt_changeSafetyWatchdogReload(uint16 password, uint16 reload);
# 345 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 3
extern void IfxScuWdt_disableCpuWatchdog(uint16 password);
# 355 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 3
extern void IfxScuWdt_disableSafetyWatchdog(uint16 password);
# 365 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 3
extern void IfxScuWdt_enableCpuWatchdog(uint16 password);
# 375 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 3
extern void IfxScuWdt_enableSafetyWatchdog(uint16 password);
# 384 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 3
extern uint16 IfxScuWdt_getCpuWatchdogPassword(void);




extern boolean IfxScuWdt_getCpuWatchdogEndInit(void);
# 398 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 3
extern uint16 IfxScuWdt_getSafetyWatchdogPassword(void);
# 408 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 3
extern void IfxScuWdt_serviceCpuWatchdog(uint16 password);
# 418 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 3
extern void IfxScuWdt_serviceSafetyWatchdog(uint16 password);
# 430 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 3
extern boolean IfxScuWdt_enableWatchdogWithDebugger(void);





static inline __attribute__ ((always_inline)) void IfxScuWdt_clearCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, uint16 password)
{
    if (watchdog->CON0.B.LCK)
    {

        watchdog->CON0.U = (1 << (0u)) |
                           (0 << (1u)) |
                           (password << (2u)) |
                           (watchdog->CON0.B.REL << (16u));
    }


    watchdog->CON0.U = (0 << (0u)) |
                       (1 << (1u)) |
                       (password << (2u)) |
                       (watchdog->CON0.B.REL << (16u));


    while (watchdog->CON0.B.ENDINIT == 1)
    {}
}


static inline __attribute__ ((always_inline)) void IfxScuWdt_clearSafetyEndinitInline(uint16 password)
{
    if ((*(volatile Ifx_SCU_WDTS_CON0*)0xF00360F0u).B.LCK)
    {

        (*(volatile Ifx_SCU_WDTS_CON0*)0xF00360F0u).U = (1 << (0u)) |
                          (0 << (1u)) |
                          (password << (2u)) |
                          ((*(volatile Ifx_SCU_WDTS_CON0*)0xF00360F0u).B.REL << (16u));
    }


    (*(volatile Ifx_SCU_WDTS_CON0*)0xF00360F0u).U = (0 << (0u)) |
                      (1 << (1u)) |
                      (password << (2u)) |
                      ((*(volatile Ifx_SCU_WDTS_CON0*)0xF00360F0u).B.REL << (16u));


    while ((*(volatile Ifx_SCU_WDTS_CON0*)0xF00360F0u).B.ENDINIT == 1)
    {}
}


static inline __attribute__ ((always_inline)) uint16 IfxScuWdt_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog)
{
    uint16 password;




    password = watchdog->CON0.B.PW;
    password ^= 0x003F;

    return password;
}


static inline __attribute__ ((always_inline)) boolean IfxScuWdt_getCpuWatchdogEndInitInline(Ifx_SCU_WDTCPU *watchdog)
{
    return (boolean)watchdog->CON0.B.ENDINIT;
}


static inline __attribute__ ((always_inline)) boolean IfxScuWdt_getSafetyWatchdogEndInit(void)
{
    return (boolean)(*(Ifx_SCU*)0xF0036000u).WDTS.CON0.B.ENDINIT;
}


static inline __attribute__ ((always_inline)) uint16 IfxScuWdt_getSafetyWatchdogPasswordInline(void)
{
    uint16 password;
    Ifx_SCU_WDTS *watchdog = &(*(Ifx_SCU*)0xF0036000u).WDTS;




    password = watchdog->CON0.B.PW;
    password ^= 0x003F;

    return password;
}


static inline __attribute__ ((always_inline)) void IfxScuWdt_setCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, uint16 password)
{
    if (watchdog->CON0.B.LCK)
    {

        watchdog->CON0.U = (1 << (0u)) |
                           (0 << (1u)) |
                           (password << (2u)) |
                           (watchdog->CON0.B.REL << (16u));
    }


    watchdog->CON0.U = (1 << (0u)) |
                       (1 << (1u)) |
                       (password << (2u)) |
                       (watchdog->CON0.B.REL << (16u));


    while (watchdog->CON0.B.ENDINIT == 0)
    {}
}


static inline __attribute__ ((always_inline)) void IfxScuWdt_setSafetyEndinitInline(uint16 password)
{
    if ((*(volatile Ifx_SCU_WDTS_CON0*)0xF00360F0u).B.LCK)
    {

        (*(volatile Ifx_SCU_WDTS_CON0*)0xF00360F0u).U = (1 << (0u)) |
                          (0 << (1u)) |
                          (password << (2u)) |
                          ((*(volatile Ifx_SCU_WDTS_CON0*)0xF00360F0u).B.REL << (16u));
    }


    (*(volatile Ifx_SCU_WDTS_CON0*)0xF00360F0u).U = (1 << (0u)) |
                      (1 << (1u)) |
                      (password << (2u)) |
                      ((*(volatile Ifx_SCU_WDTS_CON0*)0xF00360F0u).B.REL << (16u));


    while ((*(volatile Ifx_SCU_WDTS_CON0*)0xF00360F0u).B.ENDINIT == 0)
    {}
}
# 76 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 2 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuccu.h" 1 3
# 118 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuccu.h" 3
#define IFXSCUCCU_H 1







# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 1 3
# 127 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuccu.h" 2 3



# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_pinmap.h" 1 3
# 46 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_pinmap.h" 3
#define IFXSCU_PINMAP_H 

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_reg.h" 1 3
# 49 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_pinmap.h" 2 3

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport.h" 1 3
# 54 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport.h" 3
#define IFXPORT_H 1





# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport_cfg.h" 1 3
# 51 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport_cfg.h" 3
#define IFXPORT_CFG_H 1
# 66 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport_cfg.h" 3
#define IFXPORT_NUM_MODULES (16)

#define IFXPORT_OUTOUTFEATURE_NONE (0xFFFFFFFF)







typedef enum
{
    IfxPort_Index_00 = 0,
    IfxPort_Index_01 = 1,
    IfxPort_Index_02 = 2,
    IfxPort_Index_10 = 10,
    IfxPort_Index_11 = 11,
    IfxPort_Index_12 = 12,
    IfxPort_Index_13 = 13,
    IfxPort_Index_14 = 14,
    IfxPort_Index_15 = 15,
    IfxPort_Index_20 = 20,
    IfxPort_Index_21 = 21,
    IfxPort_Index_22 = 22,
    IfxPort_Index_23 = 23,
    IfxPort_Index_32 = 32,
    IfxPort_Index_33 = 33,
    IfxPort_Index_34 = 34,
    IfxPort_Index_none = -1
} IfxPort_Index;







typedef struct
{
    Ifx_P *port;
    uint16 masks;
} IfxPort_Esr_Masks;





extern const IfxPort_Esr_Masks IfxPort_cfg_esrMasks[(16)];

extern const IfxModule_IndexMap IfxPort_cfg_indexMap[(16)];
# 61 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport.h" 2 3
# 72 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport.h" 3
typedef enum
{
    IfxPort_ControlledBy_port = 0,
    IfxPort_ControlledBy_hsct = 1
} IfxPort_ControlledBy;



typedef enum
{
    IfxPort_InputMode_undefined = -1,
    IfxPort_InputMode_noPullDevice = 0 << 3,
        IfxPort_InputMode_pullDown = 1U << 3,
        IfxPort_InputMode_pullUp = 2U << 3
} IfxPort_InputMode;





typedef enum
{
    IfxPort_Mode_inputNoPullDevice = 0,
    IfxPort_Mode_inputPullDown = 8U,
    IfxPort_Mode_inputPullUp = 0x10U,
    IfxPort_Mode_outputPushPullGeneral = 0x80U,
    IfxPort_Mode_outputPushPullAlt1 = 0x88U,
    IfxPort_Mode_outputPushPullAlt2 = 0x90U,
    IfxPort_Mode_outputPushPullAlt3 = 0x98U,
    IfxPort_Mode_outputPushPullAlt4 = 0xA0U,
    IfxPort_Mode_outputPushPullAlt5 = 0xA8U,
    IfxPort_Mode_outputPushPullAlt6 = 0xB0U,
    IfxPort_Mode_outputPushPullAlt7 = 0xB8U,
    IfxPort_Mode_outputOpenDrainGeneral = 0xC0U,
    IfxPort_Mode_outputOpenDrainAlt1 = 0xC8U,
    IfxPort_Mode_outputOpenDrainAlt2 = 0xD0U,
    IfxPort_Mode_outputOpenDrainAlt3 = 0xD8U,
    IfxPort_Mode_outputOpenDrainAlt4 = 0xE0U,
    IfxPort_Mode_outputOpenDrainAlt5 = 0xE8U,
    IfxPort_Mode_outputOpenDrainAlt6 = 0xF0U,
    IfxPort_Mode_outputOpenDrainAlt7 = 0xF8U
} IfxPort_Mode;



typedef enum
{
    IfxPort_OutputIdx_general = 0x10U << 3,
        IfxPort_OutputIdx_alt1 = 0x11U << 3,
        IfxPort_OutputIdx_alt2 = 0x12U << 3,
        IfxPort_OutputIdx_alt3 = 0x13U << 3,
        IfxPort_OutputIdx_alt4 = 0x14U << 3,
        IfxPort_OutputIdx_alt5 = 0x15U << 3,
        IfxPort_OutputIdx_alt6 = 0x16U << 3,
        IfxPort_OutputIdx_alt7 = 0x17U << 3
} IfxPort_OutputIdx;



typedef enum
{
    IfxPort_OutputMode_pushPull = 0x10U << 3,
        IfxPort_OutputMode_openDrain = 0x18U << 3,
        IfxPort_OutputMode_none = 0
} IfxPort_OutputMode;





typedef enum
{
    IfxPort_PadDriver_cmosAutomotiveSpeed1 = 0,
    IfxPort_PadDriver_cmosAutomotiveSpeed2 = 1,
    IfxPort_PadDriver_cmosAutomotiveSpeed3 = 2,
    IfxPort_PadDriver_cmosAutomotiveSpeed4 = 3,
    IfxPort_PadDriver_lvdsSpeed1 = 4,
    IfxPort_PadDriver_lvdsSpeed2 = 5,
    IfxPort_PadDriver_lvdsSpeed3 = 6,
    IfxPort_PadDriver_lvdsSpeed4 = 7,
    IfxPort_PadDriver_ttlSpeed1 = 8,
    IfxPort_PadDriver_ttlSpeed2 = 9,
    IfxPort_PadDriver_ttlSpeed3 = 10,
    IfxPort_PadDriver_ttlSpeed4 = 11
} IfxPort_PadDriver;



typedef enum
{
    IfxPort_PadSupply_5v = 0,
    IfxPort_PadSupply_3v = 1
} IfxPort_PadSupply;





typedef enum
{
    IfxPort_State_notChanged = (0 << 16) | (0 << 0),
    IfxPort_State_high = (0 << 16) | (1U << 0),
    IfxPort_State_low = (1U << 16) | (0 << 0),
    IfxPort_State_toggled = (1U << 16) | (1U << 0)
} IfxPort_State;
# 188 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport.h" 3
typedef struct
{
    Ifx_P *port;
    uint8 pinIndex;
} IfxPort_Pin;



typedef struct
{
    Ifx_P *port;
    uint8 pinIndex;
    IfxPort_OutputIdx mode;
    IfxPort_PadDriver padDriver;
} IfxPort_Pin_Config;
# 226 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport.h" 3
static inline __attribute__ ((always_inline)) boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex);
# 241 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport.h" 3
static inline __attribute__ ((always_inline)) void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex);
# 256 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport.h" 3
static inline __attribute__ ((always_inline)) void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex);
# 270 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport.h" 3
static inline __attribute__ ((always_inline)) void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode);
# 285 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport.h" 3
static inline __attribute__ ((always_inline)) void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
# 301 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport.h" 3
static inline __attribute__ ((always_inline)) void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action);
# 316 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport.h" 3
static inline __attribute__ ((always_inline)) void IfxPort_togglePin(Ifx_P *port, uint8 pinIndex);
# 339 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport.h" 3
extern boolean IfxPort_disableEmergencyStop(Ifx_P *port, uint8 pinIndex);
# 357 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport.h" 3
extern boolean IfxPort_enableEmergencyStop(Ifx_P *port, uint8 pinIndex);
# 373 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport.h" 3
extern void IfxPort_setPinMode(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode);
# 388 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport.h" 3
extern void IfxPort_setPinPadDriver(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver padDriver);
# 412 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport.h" 3
static inline __attribute__ ((always_inline)) uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask);
# 431 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport.h" 3
static inline __attribute__ ((always_inline)) void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data);
# 441 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport.h" 3
extern Ifx_P *IfxPort_getAddress(IfxPort_Index port);





extern IfxPort_Index IfxPort_getIndex(Ifx_P *port);
# 463 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport.h" 3
extern void IfxPort_setGroupModeInput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_InputMode mode);
# 480 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport.h" 3
extern void IfxPort_setGroupModeOutput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
# 496 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport.h" 3
extern void IfxPort_setGroupPadDriver(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_PadDriver padDriver);
# 505 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport.h" 3
extern void IfxPort_setPinModeLvdsHigh(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode, IfxPort_ControlledBy enablePortControlled);
# 514 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport.h" 3
extern void IfxPort_setPinModeLvdsMedium(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver lvdsPadDriver, IfxPort_PadSupply padSupply);
# 531 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport.h" 3
extern void IfxPort_resetESR(Ifx_P *port, uint8 pinIndex);
# 542 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport.h" 3
extern void IfxPort_setESR(Ifx_P *port, uint8 pinIndex);





static inline __attribute__ ((always_inline)) uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask)
{
    return (uint32)((port->IN.U) >> (pinIndex)) & mask;
}


static inline __attribute__ ((always_inline)) boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex)
{
    return (((*(&port->IN.U) & (1U << (pinIndex))) != 0) != 0) ? (1u) : (0u);
}


static inline __attribute__ ((always_inline)) void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data)
{
    port->OUT.U = (port->OUT.U & ~((uint32)(mask)) << pinIndex) | (data << pinIndex);
}


static inline __attribute__ ((always_inline)) void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex)
{
    IfxPort_setPinState(port, pinIndex, IfxPort_State_high);
}


static inline __attribute__ ((always_inline)) void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex)
{
    IfxPort_setPinState(port, pinIndex, IfxPort_State_low);
}


static inline __attribute__ ((always_inline)) void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode)
{
    IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)mode);
}


static inline __attribute__ ((always_inline)) void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index)
{
    IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)(index | mode));
}


static inline __attribute__ ((always_inline)) void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action)
{
    port->OMR.U = action << pinIndex;
}


static inline __attribute__ ((always_inline)) void IfxPort_togglePin(Ifx_P *port, uint8 pinIndex)
{
    IfxPort_setPinState(port, pinIndex, IfxPort_State_toggled);
}
# 51 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_pinmap.h" 2 3





typedef const struct
{
    Ifx_SCU* module;
    IfxPort_Pin pin;
    Ifx_RxSel select;
} IfxScu_Evrwup_In;


typedef const struct
{
    Ifx_SCU* module;
    IfxPort_Pin pin;
} IfxScu_Hwcfg_In;


typedef const struct
{
    Ifx_SCU* module;
    uint8 channelId;
    IfxPort_Pin pin;
    Ifx_RxSel select;
} IfxScu_Req_In;


typedef const struct
{
    Ifx_SCU* module;
    IfxPort_Pin pin;
    IfxPort_OutputIdx select;
} IfxScu_Dcdcsync_Out;


typedef const struct
{
    Ifx_SCU* module;
    IfxPort_Pin pin;
    Ifx_RxSel select;
} IfxScu_Emgstop_In;


typedef const struct
{
    Ifx_SCU* module;
    IfxPort_Pin pin;
    IfxPort_OutputIdx select;
} IfxScu_Wdtlck_Out;


typedef const struct
{
    Ifx_SCU* module;
    IfxPort_Pin pin;
    IfxPort_OutputIdx select;
} IfxScu_Extclk_Out;

extern IfxScu_Dcdcsync_Out IfxScu_DCDCSYNC_P32_2_OUT;
extern IfxScu_Dcdcsync_Out IfxScu_DCDCSYNC_P33_13_OUT;
extern IfxScu_Emgstop_In IfxScu_EMGSTOPA_P33_8_IN;
extern IfxScu_Emgstop_In IfxScu_EMGSTOPB_P21_2_IN;
extern IfxScu_Evrwup_In IfxScu_EVRWUPA_P14_1_IN;
extern IfxScu_Evrwup_In IfxScu_EVRWUPB_P15_1_IN;
extern IfxScu_Extclk_Out IfxScu_EXTCLK0_P23_1_OUT;
extern IfxScu_Extclk_Out IfxScu_EXTCLK1_P11_12_OUT;
extern IfxScu_Extclk_Out IfxScu_EXTCLK1_P32_4_OUT;
extern IfxScu_Hwcfg_In IfxScu_HWCFG0DCLDO_P14_6_IN;
extern IfxScu_Hwcfg_In IfxScu_HWCFG1EVR33_P14_5_IN;
extern IfxScu_Hwcfg_In IfxScu_HWCFG2EVR13_P14_2_IN;
extern IfxScu_Hwcfg_In IfxScu_HWCFG3_BMI_P14_3_IN;
extern IfxScu_Hwcfg_In IfxScu_HWCFG4_P10_5_IN;
extern IfxScu_Hwcfg_In IfxScu_HWCFG5_P10_6_IN;
extern IfxScu_Hwcfg_In IfxScu_HWCFG6_P14_4_IN;
extern IfxScu_Req_In IfxScu_REQ0_P15_4_IN;
extern IfxScu_Req_In IfxScu_REQ10_P14_3_IN;
extern IfxScu_Req_In IfxScu_REQ11_P20_9_IN;
extern IfxScu_Req_In IfxScu_REQ12_P11_10_IN;
extern IfxScu_Req_In IfxScu_REQ13_P15_5_IN;
extern IfxScu_Req_In IfxScu_REQ14_P02_1_IN;
extern IfxScu_Req_In IfxScu_REQ15_P14_1_IN;
extern IfxScu_Req_In IfxScu_REQ16_P15_1_IN;
extern IfxScu_Req_In IfxScu_REQ1_P15_8_IN;
extern IfxScu_Req_In IfxScu_REQ2_P10_2_IN;
extern IfxScu_Req_In IfxScu_REQ3_P10_3_IN;
extern IfxScu_Req_In IfxScu_REQ4_P10_7_IN;
extern IfxScu_Req_In IfxScu_REQ5_P10_8_IN;
extern IfxScu_Req_In IfxScu_REQ6_P02_0_IN;
extern IfxScu_Req_In IfxScu_REQ7_P00_4_IN;
extern IfxScu_Req_In IfxScu_REQ8_P33_7_IN;
extern IfxScu_Req_In IfxScu_REQ9_P20_0_IN;
extern IfxScu_Wdtlck_Out IfxScu_WDT0LCK_P20_8_OUT;
extern IfxScu_Wdtlck_Out IfxScu_WDT1LCK_P20_7_OUT;
extern IfxScu_Wdtlck_Out IfxScu_WDT2LCK_P20_6_OUT;
extern IfxScu_Wdtlck_Out IfxScu_WDTSLCK_P20_9_OUT;


#define IFXSCU_PINMAP_NUM_MODULES 1
#define IFXSCU_PINMAP_NUM_REQUESTS 8
#define IFXSCU_PINMAP_DCDCSYNC_OUT_NUM_ITEMS 2
#define IFXSCU_PINMAP_EMGSTOP_IN_NUM_ITEMS 2
#define IFXSCU_PINMAP_EVRWUP_IN_NUM_ITEMS 2
#define IFXSCU_PINMAP_EXTCLK_OUT_NUM_ITEMS 3
#define IFXSCU_PINMAP_HWCFG_IN_NUM_ITEMS 7
#define IFXSCU_PINMAP_REQ_IN_NUM_ITEMS 4
#define IFXSCU_PINMAP_WDTLCK_OUT_NUM_ITEMS 4



extern const IfxScu_Dcdcsync_Out *IfxScu_Dcdcsync_Out_pinTable[1][2];


extern const IfxScu_Emgstop_In *IfxScu_Emgstop_In_pinTable[1][2];


extern const IfxScu_Evrwup_In *IfxScu_Evrwup_In_pinTable[1][2];


extern const IfxScu_Extclk_Out *IfxScu_Extclk_Out_pinTable[1][3];


extern const IfxScu_Hwcfg_In *IfxScu_Hwcfg_In_pinTable[1][7];


extern const IfxScu_Req_In *IfxScu_Req_In_pinTable[1][8][4];


extern const IfxScu_Wdtlck_Out *IfxScu_Wdtlck_Out_pinTable[1][4];
# 131 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuccu.h" 2 3







#define IFXSCUCCU_OSC_STABLECHK_TIME (640)
# 147 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuccu.h" 3
typedef void (*IfxScuCcu_PllStepsFunctionHook)(void);
# 161 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuccu.h" 3
typedef enum
{
    IfxScuCcu_K1divider_1 = 0,
    IfxScuCcu_K1divider_2,
    IfxScuCcu_K1divider_3,
    IfxScuCcu_K1divider_4,
    IfxScuCcu_K1divider_5,
    IfxScuCcu_K1divider_6,
    IfxScuCcu_K1divider_7,
    IfxScuCcu_K1divider_8,
    IfxScuCcu_K1divider_9,
    IfxScuCcu_K1divider_10,
    IfxScuCcu_K1divider_11,
    IfxScuCcu_K1divider_12,
    IfxScuCcu_K1divider_13,
    IfxScuCcu_K1divider_14,
    IfxScuCcu_K1divider_15,
    IfxScuCcu_K1divider_16,
    IfxScuCcu_K1divider_17,
    IfxScuCcu_K1divider_18,
    IfxScuCcu_K1divider_19,
    IfxScuCcu_K1divider_20,
    IfxScuCcu_K1divider_21,
    IfxScuCcu_K1divider_22,
    IfxScuCcu_K1divider_23,
    IfxScuCcu_K1divider_24,
    IfxScuCcu_K1divider_25,
    IfxScuCcu_K1divider_26,
    IfxScuCcu_K1divider_27,
    IfxScuCcu_K1divider_28,
    IfxScuCcu_K1divider_29,
    IfxScuCcu_K1divider_30,
    IfxScuCcu_K1divider_31,
    IfxScuCcu_K1divider_32,
    IfxScuCcu_K1divider_33,
    IfxScuCcu_K1divider_34,
    IfxScuCcu_K1divider_35,
    IfxScuCcu_K1divider_36,
    IfxScuCcu_K1divider_37,
    IfxScuCcu_K1divider_38,
    IfxScuCcu_K1divider_39,
    IfxScuCcu_K1divider_40,
    IfxScuCcu_K1divider_41,
    IfxScuCcu_K1divider_42,
    IfxScuCcu_K1divider_43,
    IfxScuCcu_K1divider_44,
    IfxScuCcu_K1divider_45,
    IfxScuCcu_K1divider_46,
    IfxScuCcu_K1divider_47,
    IfxScuCcu_K1divider_48,
    IfxScuCcu_K1divider_49,
    IfxScuCcu_K1divider_50,
    IfxScuCcu_K1divider_51,
    IfxScuCcu_K1divider_52,
    IfxScuCcu_K1divider_53,
    IfxScuCcu_K1divider_54,
    IfxScuCcu_K1divider_55,
    IfxScuCcu_K1divider_56,
    IfxScuCcu_K1divider_57,
    IfxScuCcu_K1divider_58,
    IfxScuCcu_K1divider_59,
    IfxScuCcu_K1divider_60,
    IfxScuCcu_K1divider_61,
    IfxScuCcu_K1divider_62,
    IfxScuCcu_K1divider_63,
    IfxScuCcu_K1divider_64,
    IfxScuCcu_K1divider_65,
    IfxScuCcu_K1divider_66,
    IfxScuCcu_K1divider_67,
    IfxScuCcu_K1divider_68,
    IfxScuCcu_K1divider_69,
    IfxScuCcu_K1divider_70,
    IfxScuCcu_K1divider_71,
    IfxScuCcu_K1divider_72,
    IfxScuCcu_K1divider_73,
    IfxScuCcu_K1divider_74,
    IfxScuCcu_K1divider_75,
    IfxScuCcu_K1divider_76,
    IfxScuCcu_K1divider_77,
    IfxScuCcu_K1divider_78,
    IfxScuCcu_K1divider_79,
    IfxScuCcu_K1divider_80,
    IfxScuCcu_K1divider_81,
    IfxScuCcu_K1divider_82,
    IfxScuCcu_K1divider_83,
    IfxScuCcu_K1divider_84,
    IfxScuCcu_K1divider_85,
    IfxScuCcu_K1divider_86,
    IfxScuCcu_K1divider_87,
    IfxScuCcu_K1divider_88,
    IfxScuCcu_K1divider_89,
    IfxScuCcu_K1divider_90,
    IfxScuCcu_K1divider_91,
    IfxScuCcu_K1divider_92,
    IfxScuCcu_K1divider_93,
    IfxScuCcu_K1divider_94,
    IfxScuCcu_K1divider_95,
    IfxScuCcu_K1divider_96,
    IfxScuCcu_K1divider_97,
    IfxScuCcu_K1divider_98,
    IfxScuCcu_K1divider_99,
    IfxScuCcu_K1divider_100,
    IfxScuCcu_K1divider_101,
    IfxScuCcu_K1divider_102,
    IfxScuCcu_K1divider_103,
    IfxScuCcu_K1divider_104,
    IfxScuCcu_K1divider_105,
    IfxScuCcu_K1divider_106,
    IfxScuCcu_K1divider_107,
    IfxScuCcu_K1divider_108,
    IfxScuCcu_K1divider_109,
    IfxScuCcu_K1divider_110,
    IfxScuCcu_K1divider_111,
    IfxScuCcu_K1divider_112,
    IfxScuCcu_K1divider_113,
    IfxScuCcu_K1divider_114,
    IfxScuCcu_K1divider_115,
    IfxScuCcu_K1divider_116,
    IfxScuCcu_K1divider_117,
    IfxScuCcu_K1divider_118,
    IfxScuCcu_K1divider_119,
    IfxScuCcu_K1divider_120,
    IfxScuCcu_K1divider_121,
    IfxScuCcu_K1divider_122,
    IfxScuCcu_K1divider_123,
    IfxScuCcu_K1divider_124,
    IfxScuCcu_K1divider_125,
    IfxScuCcu_K1divider_126,
    IfxScuCcu_K1divider_127,
    IfxScuCcu_K1divider_128
} IfxScuCcu_K1divider;



typedef enum
{
    IfxScuCcu_K2divider_1 = 0,
    IfxScuCcu_K2divider_2,
    IfxScuCcu_K2divider_3,
    IfxScuCcu_K2divider_4,
    IfxScuCcu_K2divider_5,
    IfxScuCcu_K2divider_6,
    IfxScuCcu_K2divider_7,
    IfxScuCcu_K2divider_8,
    IfxScuCcu_K2divider_9,
    IfxScuCcu_K2divider_10,
    IfxScuCcu_K2divider_11,
    IfxScuCcu_K2divider_12,
    IfxScuCcu_K2divider_13,
    IfxScuCcu_K2divider_14,
    IfxScuCcu_K2divider_15,
    IfxScuCcu_K2divider_16,
    IfxScuCcu_K2divider_17,
    IfxScuCcu_K2divider_18,
    IfxScuCcu_K2divider_19,
    IfxScuCcu_K2divider_20,
    IfxScuCcu_K2divider_21,
    IfxScuCcu_K2divider_22,
    IfxScuCcu_K2divider_23,
    IfxScuCcu_K2divider_24,
    IfxScuCcu_K2divider_25,
    IfxScuCcu_K2divider_26,
    IfxScuCcu_K2divider_27,
    IfxScuCcu_K2divider_28,
    IfxScuCcu_K2divider_29,
    IfxScuCcu_K2divider_30,
    IfxScuCcu_K2divider_31,
    IfxScuCcu_K2divider_32,
    IfxScuCcu_K2divider_33,
    IfxScuCcu_K2divider_34,
    IfxScuCcu_K2divider_35,
    IfxScuCcu_K2divider_36,
    IfxScuCcu_K2divider_37,
    IfxScuCcu_K2divider_38,
    IfxScuCcu_K2divider_39,
    IfxScuCcu_K2divider_40,
    IfxScuCcu_K2divider_41,
    IfxScuCcu_K2divider_42,
    IfxScuCcu_K2divider_43,
    IfxScuCcu_K2divider_44,
    IfxScuCcu_K2divider_45,
    IfxScuCcu_K2divider_46,
    IfxScuCcu_K2divider_47,
    IfxScuCcu_K2divider_48,
    IfxScuCcu_K2divider_49,
    IfxScuCcu_K2divider_50,
    IfxScuCcu_K2divider_51,
    IfxScuCcu_K2divider_52,
    IfxScuCcu_K2divider_53,
    IfxScuCcu_K2divider_54,
    IfxScuCcu_K2divider_55,
    IfxScuCcu_K2divider_56,
    IfxScuCcu_K2divider_57,
    IfxScuCcu_K2divider_58,
    IfxScuCcu_K2divider_59,
    IfxScuCcu_K2divider_60,
    IfxScuCcu_K2divider_61,
    IfxScuCcu_K2divider_62,
    IfxScuCcu_K2divider_63,
    IfxScuCcu_K2divider_64,
    IfxScuCcu_K2divider_65,
    IfxScuCcu_K2divider_66,
    IfxScuCcu_K2divider_67,
    IfxScuCcu_K2divider_68,
    IfxScuCcu_K2divider_69,
    IfxScuCcu_K2divider_70,
    IfxScuCcu_K2divider_71,
    IfxScuCcu_K2divider_72,
    IfxScuCcu_K2divider_73,
    IfxScuCcu_K2divider_74,
    IfxScuCcu_K2divider_75,
    IfxScuCcu_K2divider_76,
    IfxScuCcu_K2divider_77,
    IfxScuCcu_K2divider_78,
    IfxScuCcu_K2divider_79,
    IfxScuCcu_K2divider_80,
    IfxScuCcu_K2divider_81,
    IfxScuCcu_K2divider_82,
    IfxScuCcu_K2divider_83,
    IfxScuCcu_K2divider_84,
    IfxScuCcu_K2divider_85,
    IfxScuCcu_K2divider_86,
    IfxScuCcu_K2divider_87,
    IfxScuCcu_K2divider_88,
    IfxScuCcu_K2divider_89,
    IfxScuCcu_K2divider_90,
    IfxScuCcu_K2divider_91,
    IfxScuCcu_K2divider_92,
    IfxScuCcu_K2divider_93,
    IfxScuCcu_K2divider_94,
    IfxScuCcu_K2divider_95,
    IfxScuCcu_K2divider_96,
    IfxScuCcu_K2divider_97,
    IfxScuCcu_K2divider_98,
    IfxScuCcu_K2divider_99,
    IfxScuCcu_K2divider_100,
    IfxScuCcu_K2divider_101,
    IfxScuCcu_K2divider_102,
    IfxScuCcu_K2divider_103,
    IfxScuCcu_K2divider_104,
    IfxScuCcu_K2divider_105,
    IfxScuCcu_K2divider_106,
    IfxScuCcu_K2divider_107,
    IfxScuCcu_K2divider_108,
    IfxScuCcu_K2divider_109,
    IfxScuCcu_K2divider_110,
    IfxScuCcu_K2divider_111,
    IfxScuCcu_K2divider_112,
    IfxScuCcu_K2divider_113,
    IfxScuCcu_K2divider_114,
    IfxScuCcu_K2divider_115,
    IfxScuCcu_K2divider_116,
    IfxScuCcu_K2divider_117,
    IfxScuCcu_K2divider_118,
    IfxScuCcu_K2divider_119,
    IfxScuCcu_K2divider_120,
    IfxScuCcu_K2divider_121,
    IfxScuCcu_K2divider_122,
    IfxScuCcu_K2divider_123,
    IfxScuCcu_K2divider_124,
    IfxScuCcu_K2divider_125,
    IfxScuCcu_K2divider_126,
    IfxScuCcu_K2divider_127,
    IfxScuCcu_K2divider_128
} IfxScuCcu_K2divider;



typedef enum
{
    IfxScuCcu_K3divider_1 = 0,
    IfxScuCcu_K3divider_2,
    IfxScuCcu_K3divider_3,
    IfxScuCcu_K3divider_4,
    IfxScuCcu_K3divider_5,
    IfxScuCcu_K3divider_6,
    IfxScuCcu_K3divider_7,
    IfxScuCcu_K3divider_8,
    IfxScuCcu_K3divider_9,
    IfxScuCcu_K3divider_10,
    IfxScuCcu_K3divider_11,
    IfxScuCcu_K3divider_12,
    IfxScuCcu_K3divider_13,
    IfxScuCcu_K3divider_14,
    IfxScuCcu_K3divider_15,
    IfxScuCcu_K3divider_16,
    IfxScuCcu_K3divider_17,
    IfxScuCcu_K3divider_18,
    IfxScuCcu_K3divider_19,
    IfxScuCcu_K3divider_20,
    IfxScuCcu_K3divider_21,
    IfxScuCcu_K3divider_22,
    IfxScuCcu_K3divider_23,
    IfxScuCcu_K3divider_24,
    IfxScuCcu_K3divider_25,
    IfxScuCcu_K3divider_26,
    IfxScuCcu_K3divider_27,
    IfxScuCcu_K3divider_28,
    IfxScuCcu_K3divider_29,
    IfxScuCcu_K3divider_30,
    IfxScuCcu_K3divider_31,
    IfxScuCcu_K3divider_32,
    IfxScuCcu_K3divider_33,
    IfxScuCcu_K3divider_34,
    IfxScuCcu_K3divider_35,
    IfxScuCcu_K3divider_36,
    IfxScuCcu_K3divider_37,
    IfxScuCcu_K3divider_38,
    IfxScuCcu_K3divider_39,
    IfxScuCcu_K3divider_40,
    IfxScuCcu_K3divider_41,
    IfxScuCcu_K3divider_42,
    IfxScuCcu_K3divider_43,
    IfxScuCcu_K3divider_44,
    IfxScuCcu_K3divider_45,
    IfxScuCcu_K3divider_46,
    IfxScuCcu_K3divider_47,
    IfxScuCcu_K3divider_48,
    IfxScuCcu_K3divider_49,
    IfxScuCcu_K3divider_50,
    IfxScuCcu_K3divider_51,
    IfxScuCcu_K3divider_52,
    IfxScuCcu_K3divider_53,
    IfxScuCcu_K3divider_54,
    IfxScuCcu_K3divider_55,
    IfxScuCcu_K3divider_56,
    IfxScuCcu_K3divider_57,
    IfxScuCcu_K3divider_58,
    IfxScuCcu_K3divider_59,
    IfxScuCcu_K3divider_60,
    IfxScuCcu_K3divider_61,
    IfxScuCcu_K3divider_62,
    IfxScuCcu_K3divider_63,
    IfxScuCcu_K3divider_64,
    IfxScuCcu_K3divider_65,
    IfxScuCcu_K3divider_66,
    IfxScuCcu_K3divider_67,
    IfxScuCcu_K3divider_68,
    IfxScuCcu_K3divider_69,
    IfxScuCcu_K3divider_70,
    IfxScuCcu_K3divider_71,
    IfxScuCcu_K3divider_72,
    IfxScuCcu_K3divider_73,
    IfxScuCcu_K3divider_74,
    IfxScuCcu_K3divider_75,
    IfxScuCcu_K3divider_76,
    IfxScuCcu_K3divider_77,
    IfxScuCcu_K3divider_78,
    IfxScuCcu_K3divider_79,
    IfxScuCcu_K3divider_80,
    IfxScuCcu_K3divider_81,
    IfxScuCcu_K3divider_82,
    IfxScuCcu_K3divider_83,
    IfxScuCcu_K3divider_84,
    IfxScuCcu_K3divider_85,
    IfxScuCcu_K3divider_86,
    IfxScuCcu_K3divider_87,
    IfxScuCcu_K3divider_88,
    IfxScuCcu_K3divider_89,
    IfxScuCcu_K3divider_90,
    IfxScuCcu_K3divider_91,
    IfxScuCcu_K3divider_92,
    IfxScuCcu_K3divider_93,
    IfxScuCcu_K3divider_94,
    IfxScuCcu_K3divider_95,
    IfxScuCcu_K3divider_96,
    IfxScuCcu_K3divider_97,
    IfxScuCcu_K3divider_98,
    IfxScuCcu_K3divider_99,
    IfxScuCcu_K3divider_100,
    IfxScuCcu_K3divider_101,
    IfxScuCcu_K3divider_102,
    IfxScuCcu_K3divider_103,
    IfxScuCcu_K3divider_104,
    IfxScuCcu_K3divider_105,
    IfxScuCcu_K3divider_106,
    IfxScuCcu_K3divider_107,
    IfxScuCcu_K3divider_108,
    IfxScuCcu_K3divider_109,
    IfxScuCcu_K3divider_110,
    IfxScuCcu_K3divider_111,
    IfxScuCcu_K3divider_112,
    IfxScuCcu_K3divider_113,
    IfxScuCcu_K3divider_114,
    IfxScuCcu_K3divider_115,
    IfxScuCcu_K3divider_116,
    IfxScuCcu_K3divider_117,
    IfxScuCcu_K3divider_118,
    IfxScuCcu_K3divider_119,
    IfxScuCcu_K3divider_120,
    IfxScuCcu_K3divider_121,
    IfxScuCcu_K3divider_122,
    IfxScuCcu_K3divider_123,
    IfxScuCcu_K3divider_124,
    IfxScuCcu_K3divider_125,
    IfxScuCcu_K3divider_126,
    IfxScuCcu_K3divider_127,
    IfxScuCcu_K3divider_128
} IfxScuCcu_K3divider;



typedef enum
{
    IfxScuCcu_Ndivider_1 = 0,
    IfxScuCcu_Ndivider_2,
    IfxScuCcu_Ndivider_3,
    IfxScuCcu_Ndivider_4,
    IfxScuCcu_Ndivider_5,
    IfxScuCcu_Ndivider_6,
    IfxScuCcu_Ndivider_7,
    IfxScuCcu_Ndivider_8,
    IfxScuCcu_Ndivider_9,
    IfxScuCcu_Ndivider_10,
    IfxScuCcu_Ndivider_11,
    IfxScuCcu_Ndivider_12,
    IfxScuCcu_Ndivider_13,
    IfxScuCcu_Ndivider_14,
    IfxScuCcu_Ndivider_15,
    IfxScuCcu_Ndivider_16,
    IfxScuCcu_Ndivider_17,
    IfxScuCcu_Ndivider_18,
    IfxScuCcu_Ndivider_19,
    IfxScuCcu_Ndivider_20,
    IfxScuCcu_Ndivider_21,
    IfxScuCcu_Ndivider_22,
    IfxScuCcu_Ndivider_23,
    IfxScuCcu_Ndivider_24,
    IfxScuCcu_Ndivider_25,
    IfxScuCcu_Ndivider_26,
    IfxScuCcu_Ndivider_27,
    IfxScuCcu_Ndivider_28,
    IfxScuCcu_Ndivider_29,
    IfxScuCcu_Ndivider_30,
    IfxScuCcu_Ndivider_31,
    IfxScuCcu_Ndivider_32,
    IfxScuCcu_Ndivider_33,
    IfxScuCcu_Ndivider_34,
    IfxScuCcu_Ndivider_35,
    IfxScuCcu_Ndivider_36,
    IfxScuCcu_Ndivider_37,
    IfxScuCcu_Ndivider_38,
    IfxScuCcu_Ndivider_39,
    IfxScuCcu_Ndivider_40,
    IfxScuCcu_Ndivider_41,
    IfxScuCcu_Ndivider_42,
    IfxScuCcu_Ndivider_43,
    IfxScuCcu_Ndivider_44,
    IfxScuCcu_Ndivider_45,
    IfxScuCcu_Ndivider_46,
    IfxScuCcu_Ndivider_47,
    IfxScuCcu_Ndivider_48,
    IfxScuCcu_Ndivider_49,
    IfxScuCcu_Ndivider_50,
    IfxScuCcu_Ndivider_51,
    IfxScuCcu_Ndivider_52,
    IfxScuCcu_Ndivider_53,
    IfxScuCcu_Ndivider_54,
    IfxScuCcu_Ndivider_55,
    IfxScuCcu_Ndivider_56,
    IfxScuCcu_Ndivider_57,
    IfxScuCcu_Ndivider_58,
    IfxScuCcu_Ndivider_59,
    IfxScuCcu_Ndivider_60,
    IfxScuCcu_Ndivider_61,
    IfxScuCcu_Ndivider_62,
    IfxScuCcu_Ndivider_63,
    IfxScuCcu_Ndivider_64,
    IfxScuCcu_Ndivider_65,
    IfxScuCcu_Ndivider_66,
    IfxScuCcu_Ndivider_67,
    IfxScuCcu_Ndivider_68,
    IfxScuCcu_Ndivider_69,
    IfxScuCcu_Ndivider_70,
    IfxScuCcu_Ndivider_71,
    IfxScuCcu_Ndivider_72,
    IfxScuCcu_Ndivider_73,
    IfxScuCcu_Ndivider_74,
    IfxScuCcu_Ndivider_75,
    IfxScuCcu_Ndivider_76,
    IfxScuCcu_Ndivider_77,
    IfxScuCcu_Ndivider_78,
    IfxScuCcu_Ndivider_79,
    IfxScuCcu_Ndivider_80,
    IfxScuCcu_Ndivider_81,
    IfxScuCcu_Ndivider_82,
    IfxScuCcu_Ndivider_83,
    IfxScuCcu_Ndivider_84,
    IfxScuCcu_Ndivider_85,
    IfxScuCcu_Ndivider_86,
    IfxScuCcu_Ndivider_87,
    IfxScuCcu_Ndivider_88,
    IfxScuCcu_Ndivider_89,
    IfxScuCcu_Ndivider_90,
    IfxScuCcu_Ndivider_91,
    IfxScuCcu_Ndivider_92,
    IfxScuCcu_Ndivider_93,
    IfxScuCcu_Ndivider_94,
    IfxScuCcu_Ndivider_95,
    IfxScuCcu_Ndivider_96,
    IfxScuCcu_Ndivider_97,
    IfxScuCcu_Ndivider_98,
    IfxScuCcu_Ndivider_99,
    IfxScuCcu_Ndivider_100,
    IfxScuCcu_Ndivider_101,
    IfxScuCcu_Ndivider_102,
    IfxScuCcu_Ndivider_103,
    IfxScuCcu_Ndivider_104,
    IfxScuCcu_Ndivider_105,
    IfxScuCcu_Ndivider_106,
    IfxScuCcu_Ndivider_107,
    IfxScuCcu_Ndivider_108,
    IfxScuCcu_Ndivider_109,
    IfxScuCcu_Ndivider_110,
    IfxScuCcu_Ndivider_111,
    IfxScuCcu_Ndivider_112,
    IfxScuCcu_Ndivider_113,
    IfxScuCcu_Ndivider_114,
    IfxScuCcu_Ndivider_115,
    IfxScuCcu_Ndivider_116,
    IfxScuCcu_Ndivider_117,
    IfxScuCcu_Ndivider_118,
    IfxScuCcu_Ndivider_119,
    IfxScuCcu_Ndivider_120,
    IfxScuCcu_Ndivider_121,
    IfxScuCcu_Ndivider_122,
    IfxScuCcu_Ndivider_123,
    IfxScuCcu_Ndivider_124,
    IfxScuCcu_Ndivider_125,
    IfxScuCcu_Ndivider_126,
    IfxScuCcu_Ndivider_127,
    IfxScuCcu_Ndivider_128
} IfxScuCcu_Ndivider;



typedef enum
{
    IfxScuCcu_Pdivider_1 = 0,
    IfxScuCcu_Pdivider_2,
    IfxScuCcu_Pdivider_3,
    IfxScuCcu_Pdivider_4,
    IfxScuCcu_Pdivider_5,
    IfxScuCcu_Pdivider_6,
    IfxScuCcu_Pdivider_7,
    IfxScuCcu_Pdivider_8,
    IfxScuCcu_Pdivider_9,
    IfxScuCcu_Pdivider_10,
    IfxScuCcu_Pdivider_11,
    IfxScuCcu_Pdivider_12,
    IfxScuCcu_Pdivider_13,
    IfxScuCcu_Pdivider_14,
    IfxScuCcu_Pdivider_15,
    IfxScuCcu_Pdivider_16
} IfxScuCcu_Pdivider;





typedef enum
{
    IfxScuCcu_Clk0Mode_normal = 1,
    IfxScuCcu_Clk0Mode_fractional = 2
} IfxScuCcu_Clk0Mode;



typedef enum
{
    IfxScuCcu_Clk1Negation_inverted = 0,
    IfxScuCcu_Clk1Negation_Clk1Negation = 1
} IfxScuCcu_Clk1Negation;



typedef enum
{
    IfxScuCcu_ClkSel0_fOUT = 0,
    IfxScuCcu_ClkSel0_fPLL = 1,
    IfxScuCcu_ClkSel0_fPLLERAY = 2,
    IfxScuCcu_ClkSel0_fOSC0 = 3,
    IfxScuCcu_ClkSel0_fBACK = 4,
    IfxScuCcu_ClkSel0_fETH = 5,
    IfxScuCcu_ClkSel0_fBBB = 6,
    IfxScuCcu_ClkSel0_fBAUD1 = 7,
    IfxScuCcu_ClkSel0_fSRI = 8,
    IfxScuCcu_ClkSel0_fSPB = 9,
    IfxScuCcu_ClkSel0_fFSI = 10,
    IfxScuCcu_ClkSel0_fSTM = 11,
    IfxScuCcu_ClkSel0_fGTM = 12,
    IfxScuCcu_ClkSel0_fTCK = 13,
    IfxScuCcu_ClkSel0_fBAUD2 = 14,
    IfxScuCcu_ClkSel0_fMT0 = 15
} IfxScuCcu_ClkSel0;



typedef enum
{
    IfxScuCcu_ClkSel1_fOUT = 0,
    IfxScuCcu_ClkSel1_fPLL = 1,
    IfxScuCcu_ClkSel1_fPLLERAY = 2,
    IfxScuCcu_ClkSel1_fOSC0 = 3,
    IfxScuCcu_ClkSel1_fBACK = 4,
    IfxScuCcu_ClkSel1_fETH = 5,
    IfxScuCcu_ClkSel1_fBBB = 6,
    IfxScuCcu_ClkSel1_fASLINF = 7,
    IfxScuCcu_ClkSel1_fSRI = 8,
    IfxScuCcu_ClkSel1_fSPB = 9,
    IfxScuCcu_ClkSel1_fFSI2 = 10,
    IfxScuCcu_ClkSel1_fCAN = 11,
    IfxScuCcu_ClkSel1_fERAY = 12,
    IfxScuCcu_ClkSel1_fTCK = 13,
    IfxScuCcu_ClkSel1_fASCLINS = 14,
    IfxScuCcu_ClkSel1_fOSCFL = 15
} IfxScuCcu_ClkSel1;
# 787 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuccu.h" 3
typedef struct
{
    uint32 value;
    uint32 mask;
} IfxScuCcu_CcuconRegConfig;




typedef struct
{
    uint8 pDivider;
    uint8 nDivider;
    uint8 k2Initial;
    float32 waitTime;
} IfxScuCcu_InitialStepConfig;



typedef struct
{
    uint8 k2Step;
    float32 waitTime;
    IfxScuCcu_PllStepsFunctionHook hookFunction;
} IfxScuCcu_PllStepsConfig;







typedef struct
{
    IfxScuCcu_CcuconRegConfig ccucon0;
    IfxScuCcu_CcuconRegConfig ccucon1;
    IfxScuCcu_CcuconRegConfig ccucon2;
    IfxScuCcu_CcuconRegConfig ccucon5;
    IfxScuCcu_CcuconRegConfig ccucon6;
    IfxScuCcu_CcuconRegConfig ccucon7;
    IfxScuCcu_CcuconRegConfig ccucon8;
} IfxScuCcu_ClockDistributionConfig;



typedef struct
{
    uint32 value;
    uint32 mask;
} IfxScuCcu_FlashWaitstateConfig;




typedef struct
{
    uint8 numOfPllDividerSteps;
    IfxScuCcu_PllStepsConfig *pllDividerStep;
    IfxScuCcu_InitialStepConfig pllInitialStep;
} IfxScuCcu_SysPllConfig;







typedef struct
{
    IfxScuCcu_SysPllConfig sysPll;
    IfxScuCcu_ClockDistributionConfig clockDistribution;
    IfxScuCcu_FlashWaitstateConfig flashFconWaitStateConfig;
    uint32 xtalFrequency;
} IfxScuCcu_Config;



typedef struct
{
    IfxScuCcu_InitialStepConfig pllInitialStep;
} IfxScuCcu_ErayPllConfig;
# 882 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuccu.h" 3
static inline __attribute__ ((always_inline)) float32 IfxScuCcu_getEvrFrequency(void);





static inline __attribute__ ((always_inline)) float32 IfxScuCcu_getPll2ErayFrequency(void);





static inline __attribute__ ((always_inline)) float32 IfxScuCcu_getPll2Frequency(void);




static inline __attribute__ ((always_inline)) IfxScu_CCUCON0_CLKSEL IfxScuCcu_getSourceSelection(void);





static inline __attribute__ ((always_inline)) float32 IfxScuCcu_getStmFrequency(void);





static inline __attribute__ ((always_inline)) float32 IfxScuCcu_getCanFrequency(void);
# 921 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuccu.h" 3
extern float32 IfxScuCcu_getBaud1Frequency(void);





extern float32 IfxScuCcu_getBaud2Frequency(void);





extern float32 IfxScuCcu_getBbbFrequency(void);





extern float32 IfxScuCcu_getCpuFrequency(const IfxCpu_ResourceCpu cpu);





extern float32 IfxScuCcu_getFsi2Frequency(void);





extern float32 IfxScuCcu_getFsiFrequency(void);





extern float32 IfxScuCcu_getMaxFrequency(void);





extern float32 IfxScuCcu_getModuleFrequency(void);





extern float32 IfxScuCcu_getOsc0Frequency(void);





extern float32 IfxScuCcu_getOscFrequency(void);





extern float32 IfxScuCcu_getPllErayFrequency(void);





extern float32 IfxScuCcu_getPllErayVcoFrequency(void);





extern float32 IfxScuCcu_getPllFrequency(void);





extern float32 IfxScuCcu_getPllVcoFrequency(void);





extern float32 IfxScuCcu_getSourceFrequency(void);





extern float32 IfxScuCcu_getSpbFrequency(void);





extern float32 IfxScuCcu_getSriFrequency(void);







extern float32 IfxScuCcu_setCpuFrequency(IfxCpu_ResourceCpu cpu, float32 cpuFreq);






extern float32 IfxScuCcu_setPll2ErayFrequency(float32 pll2ErayFreq);






extern float32 IfxScuCcu_setPll2Frequency(float32 pll2Freq);






extern float32 IfxScuCcu_setSpbFrequency(float32 spbFreq);






extern float32 IfxScuCcu_setSriFrequency(float32 sriFreq);
# 1069 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuccu.h" 3
extern boolean IfxScuCcu_calculateSysPllDividers(IfxScuCcu_Config *cfg, uint32 fPll);
# 1078 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuccu.h" 3
extern boolean IfxScuCcu_init(const IfxScuCcu_Config *cfg);





extern void IfxScuCcu_initConfig(IfxScuCcu_Config *cfg);
# 1093 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuccu.h" 3
extern boolean IfxScuCcu_initErayPll(const IfxScuCcu_ErayPllConfig *cfg);





extern void IfxScuCcu_initErayPllConfig(IfxScuCcu_ErayPllConfig *cfg);





extern void IfxScuCcu_switchToBackupClock(const IfxScuCcu_Config *cfg);
# 1118 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuccu.h" 3
static inline __attribute__ ((always_inline)) float32 IfxScuCcu_getGtmFrequency(void);
# 1129 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuccu.h" 3
extern float32 IfxScuCcu_setGtmFrequency(float32 gtmFreq);







extern void IfxScuCcu_enableExtClockOut0(IfxScuCcu_ClkSel0 Clk_Sel, const uint32 freqHz, IfxScuCcu_Clk0Mode mode);







extern void IfxScuCcu_enableExtClockOut1(IfxScuCcu_ClkSel1 Clk_Sel, const uint32 freqHz, IfxScuCcu_Clk1Negation sel);







extern const IfxScuCcu_Config IfxScuCcu_defaultClockConfig;




extern const IfxScuCcu_ErayPllConfig IfxScuCcu_defaultErayPllConfig;





static inline __attribute__ ((always_inline)) float32 IfxScuCcu_getEvrFrequency(void)
{
    return (100000000.0);
}


static inline __attribute__ ((always_inline)) float32 IfxScuCcu_getGtmFrequency(void)
{
    return IfxScuCcu_getSourceFrequency() / (*(volatile Ifx_SCU_CCUCON1*)0xF0036034u).B.GTMDIV;
}


static inline __attribute__ ((always_inline)) float32 IfxScuCcu_getPll2ErayFrequency(void)
{
    float32 pll2ErayFrequency;

    pll2ErayFrequency = IfxScuCcu_getPllErayVcoFrequency() / ((*(volatile Ifx_SCU_PLLERAYCON1*)0xF003602Cu).B.K3DIV + 1);

    return pll2ErayFrequency;
}


static inline __attribute__ ((always_inline)) float32 IfxScuCcu_getPll2Frequency(void)
{
    float32 pll2Frequency;
    pll2Frequency = IfxScuCcu_getPllVcoFrequency() / ((*(volatile Ifx_SCU_PLLCON1*)0xF003601Cu).B.K3DIV + 1);

    return pll2Frequency;
}


static inline __attribute__ ((always_inline)) IfxScu_CCUCON0_CLKSEL IfxScuCcu_getSourceSelection(void)
{
    return (IfxScu_CCUCON0_CLKSEL)(*(volatile Ifx_SCU_CCUCON0*)0xF0036030u).B.CLKSEL;
}


static inline __attribute__ ((always_inline)) float32 IfxScuCcu_getStmFrequency(void)
{
    return IfxScuCcu_getSourceFrequency() / (*(volatile Ifx_SCU_CCUCON1*)0xF0036034u).B.STMDIV;
}


static inline __attribute__ ((always_inline)) float32 IfxScuCcu_getCanFrequency(void)
{
    float32 canFrequency;
    float32 sourceFrequency;

    sourceFrequency = IfxScuCcu_getSourceFrequency();

    if ((*(volatile Ifx_SCU_CCUCON1*)0xF0036034u).B.CANDIV == 0)
    {
        canFrequency = 0.0f;
    }
    else
    {
        canFrequency = sourceFrequency / (*(volatile Ifx_SCU_CCUCON1*)0xF0036034u).B.CANDIV;
    }

    return canFrequency;
}
# 77 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 2 3
# 92 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 3
#define IFXCPU_GLB_ADDR_DSPR(cpu,address) ((((((unsigned)(address) & 0xF0000000) == 0xD0000000) ? ((((unsigned)(address) & 0x000fffff) | 0x70000000) - ((cpu) * 0x10000000)) : (unsigned)(address))))
# 105 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 3
#define IFXCPU_GLB_ADDR_PSPR(cpu,address) ((((unsigned)(address) & 0x000fffff) | 0x70100000) - ((cpu) * 0x10000000))







typedef unsigned int IfxCpu_spinLock;



typedef unsigned int IfxCpu_mutexLock;



typedef unsigned int IfxCpu_syncEvent;
# 131 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 3
typedef enum
{
    IfxCpu_CoreMode_halt,
    IfxCpu_CoreMode_run,
    IfxCpu_CoreMode_idle,
    IfxCpu_CoreMode_sleep,
    IfxCpu_CoreMode_stby,
    IfxCpu_CoreMode_unknown
} IfxCpu_CoreMode;



typedef enum
{
    IfxCpu_CounterMode_normal = 0,
    IfxCpu_CounterMode_task = 1
} IfxCpu_CounterMode;
# 159 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 3
typedef struct
{
    uint32 counter;
    boolean overlfow;
} IfxCpu_Counter;







typedef struct
{
    IfxCpu_Counter instruction;
    IfxCpu_Counter clock;
    IfxCpu_Counter counter1;
    IfxCpu_Counter counter2;
    IfxCpu_Counter counter3;
} IfxCpu_Perf;
# 193 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 3
static inline __attribute__ ((always_inline)) Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu);






static inline __attribute__ ((always_inline)) IfxCpu_Id IfxCpu_getCoreId(void);





static inline __attribute__ ((always_inline)) IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void);
# 216 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 3
static inline __attribute__ ((always_inline)) void IfxCpu_initCSA(uint32 *csaBegin, uint32 *csaEnd);




static inline __attribute__ ((always_inline)) void IfxCpu_setSafetyTaskIdentifier(boolean safetyId);




static inline __attribute__ ((always_inline)) void IfxCpu_triggerSwReset(void);
# 236 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 3
extern IfxCpu_CoreMode IfxCpu_getCoreMode(Ifx_CPU *cpu);





extern IfxCpu_ResourceCpu IfxCpu_getIndex(Ifx_CPU *cpu);
# 251 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 3
extern boolean IfxCpu_setCoreMode(Ifx_CPU *cpu, IfxCpu_CoreMode mode);
# 260 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 3
extern boolean IfxCpu_setProgramCounter(Ifx_CPU *cpu, uint32 programCounter);
# 269 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 3
extern boolean IfxCpu_startCore(Ifx_CPU *cpu, uint32 programCounter);
# 286 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 3
static inline __attribute__ ((always_inline)) boolean IfxCpu_areInterruptsEnabled(void);
# 296 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 3
static inline __attribute__ ((always_inline)) boolean IfxCpu_disableInterrupts(void);





static inline __attribute__ ((always_inline)) void IfxCpu_enableInterrupts(void);




static inline __attribute__ ((always_inline)) void IfxCpu_forceDisableInterrupts(void);
# 316 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 3
static inline __attribute__ ((always_inline)) void IfxCpu_restoreInterrupts(boolean enabled);
# 334 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 3
static inline __attribute__ ((always_inline)) void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable);
# 343 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 3
static inline __attribute__ ((always_inline)) void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable);




static inline __attribute__ ((always_inline)) void IfxCpu_invalidateProgramCache(void);





static inline __attribute__ ((always_inline)) boolean IfxCpu_isAddressCachable(void *address);
# 365 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 3
static inline __attribute__ ((always_inline)) void IfxCpu_setDataCache(boolean enable);
# 376 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 3
static inline __attribute__ ((always_inline)) void IfxCpu_setProgramCache(boolean enable);
# 393 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 3
static inline __attribute__ ((always_inline)) uint32 IfxCpu_getClockCounter(void);
# 406 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 3
static inline __attribute__ ((always_inline)) boolean IfxCpu_getClockCounterStickyOverflow(void);







static inline __attribute__ ((always_inline)) uint32 IfxCpu_getInstructionCounter(void);
# 427 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 3
static inline __attribute__ ((always_inline)) boolean IfxCpu_getInstructionCounterStickyOverflow(void);





static inline __attribute__ ((always_inline)) uint32 IfxCpu_getPerformanceCounter(uint16 address);






static inline __attribute__ ((always_inline)) boolean IfxCpu_getPerformanceCounterStickyOverflow(uint16 address);







static inline __attribute__ ((always_inline)) void IfxCpu_resetAndStartCounters(IfxCpu_CounterMode mode);
# 459 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 3
static inline __attribute__ ((always_inline)) void IfxCpu_setPerformanceCountersEnableBit(uint32 enable);
# 468 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 3
static inline __attribute__ ((always_inline)) IfxCpu_Perf IfxCpu_stopCounters(void);
# 478 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 3
static inline __attribute__ ((always_inline)) void IfxCpu_updateClockCounter(uint32 count);
# 487 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 3
static inline __attribute__ ((always_inline)) void IfxCpu_updateInstructionCounter(uint32 count);







static inline __attribute__ ((always_inline)) void IfxCpu_updatePerformanceCounter(uint32 address, uint32 count);
# 522 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 3
extern boolean IfxCpu_acquireMutex(IfxCpu_mutexLock *lock);
# 540 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 3
extern void IfxCpu_releaseMutex(IfxCpu_mutexLock *lock);







extern void IfxCpu_resetSpinLock(IfxCpu_spinLock *lock);
# 567 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 3
extern boolean IfxCpu_setSpinLock(IfxCpu_spinLock *lock, uint32 timeoutCount);
# 582 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 3
extern uint32 IfxCpu_getRandomValue(uint32 *seed);







extern uint32 IfxCpu_getRandomValueWithinRange(uint32 *seed, uint32 min, uint32 max);
# 633 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 3
extern boolean IfxCpu_waitEvent(IfxCpu_syncEvent *event, uint32 timeoutMilliSec);
# 642 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 3
extern void IfxCpu_emitEvent(IfxCpu_syncEvent *event);







static inline __attribute__ ((always_inline)) boolean IfxCpu_areInterruptsEnabled(void)
{
    Ifx_CPU_ICR reg;
    reg.U = (__extension__({ unsigned __res; __asm__ volatile ("mfcr %0, LO:" "0xFE2C" : "=d" (__res) :: "memory"); __res; }));
    return reg.B.IE != 0;
}


static inline __attribute__ ((always_inline)) boolean IfxCpu_disableInterrupts(void)
{
    boolean enabled;
    enabled = IfxCpu_areInterruptsEnabled();
    __asm__ volatile ("disable" : : : "memory");
    Ifx__nop();
    return enabled;
}


static inline __attribute__ ((always_inline)) void IfxCpu_enableInterrupts(void)
{
    __asm__ volatile ("enable" : : : "memory");
}


static inline __attribute__ ((always_inline)) void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable)
{
    uint32 cpu_pmaVal;
    uint16 checkRestrictionMask;
    uint32 coreIndex = IfxCpu_getCoreIndex();
    uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&(*(Ifx_SCU*)0xF0036000u).WDTCPU[coreIndex]);



    checkRestrictionMask = ((uint16)1 << (7 - coreIndex)) | ((uint16)1 << 0xC);

    if ((segmentNumberMask & checkRestrictionMask) != 0)
    {
        segmentNumberMask |= checkRestrictionMask;
    }

    cpu_pmaVal = (__extension__({ unsigned __res; __asm__ volatile ("mfcr %0, LO:" "0x8100" : "=d" (__res) :: "memory"); __res; }));

    cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask);


    IfxScuWdt_clearCpuEndinitInline(&(*(Ifx_SCU*)0xF0036000u).WDTCPU[coreIndex], wdtPassword);


    Ifx__dsync();
    do { unsigned __newval = (unsigned) (cpu_pmaVal); __asm__ volatile ("mtcr LO:" "0x8100" ", %0" :: "d" (__newval) : "memory"); } while (0);
    Ifx__isync();
    IfxScuWdt_setCpuEndinitInline(&(*(Ifx_SCU*)0xF0036000u).WDTCPU[coreIndex], wdtPassword);
}


static inline __attribute__ ((always_inline)) void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable)
{
    uint32 cpu_pmaVal;
    uint16 checkRestrictionMask;
    uint32 coreIndex = IfxCpu_getCoreIndex();
    uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&(*(Ifx_SCU*)0xF0036000u).WDTCPU[coreIndex]);



    checkRestrictionMask = ((uint16)1 << (7 - coreIndex)) | ((uint16)1 << 0xD);

    if ((segmentNumberMask & checkRestrictionMask) != 0)
    {
        segmentNumberMask |= checkRestrictionMask;
    }

    cpu_pmaVal = (__extension__({ unsigned __res; __asm__ volatile ("mfcr %0, LO:" "0x8104" : "=d" (__res) :: "memory"); __res; }));

    cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask);


    IfxScuWdt_clearCpuEndinitInline(&(*(Ifx_SCU*)0xF0036000u).WDTCPU[coreIndex], wdtPassword);


    Ifx__dsync();
    do { unsigned __newval = (unsigned) (cpu_pmaVal); __asm__ volatile ("mtcr LO:" "0x8104" ", %0" :: "d" (__newval) : "memory"); } while (0);
    Ifx__isync();
    IfxScuWdt_setCpuEndinitInline(&(*(Ifx_SCU*)0xF0036000u).WDTCPU[coreIndex], wdtPassword);
}


static inline __attribute__ ((always_inline)) void IfxCpu_forceDisableInterrupts(void)
{
    __asm__ volatile ("disable" : : : "memory");
    Ifx__nop();
}


static inline __attribute__ ((always_inline)) Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu)
{
    Ifx_CPU *module;

    if (cpu < IfxCpu_ResourceCpu_none)
    {
        module = (Ifx_CPU *)IfxCpu_cfg_indexMap[cpu].module;
    }
    else
    {
        module = ((void *)0);
    }

    return module;
}


static inline __attribute__ ((always_inline)) uint32 IfxCpu_getClockCounter(void)
{
    return IfxCpu_getPerformanceCounter(0xFC04);
}


static inline __attribute__ ((always_inline)) boolean IfxCpu_getClockCounterStickyOverflow(void)
{
    return IfxCpu_getPerformanceCounterStickyOverflow(0xFC04);
}


static inline __attribute__ ((always_inline)) IfxCpu_Id IfxCpu_getCoreId(void)
{
    Ifx_CPU_CORE_ID reg;
    reg.U = (__extension__({ unsigned __res; __asm__ volatile ("mfcr %0, LO:" "0xFE1C" : "=d" (__res) :: "memory"); __res; }));
    return (IfxCpu_Id)reg.B.CORE_ID;
}


static inline __attribute__ ((always_inline)) IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void)
{
    Ifx_CPU_CORE_ID reg;
    reg.U = (__extension__({ unsigned __res; __asm__ volatile ("mfcr %0, LO:" "0xFE1C" : "=d" (__res) :: "memory"); __res; }));
    return (IfxCpu_ResourceCpu)reg.B.CORE_ID;
}


static inline __attribute__ ((always_inline)) uint32 IfxCpu_getInstructionCounter(void)
{
    return IfxCpu_getPerformanceCounter(0xFC08);
}


static inline __attribute__ ((always_inline)) boolean IfxCpu_getInstructionCounterStickyOverflow(void)
{
    return IfxCpu_getPerformanceCounterStickyOverflow(0xFC08);
}


static inline __attribute__ ((always_inline)) uint32 IfxCpu_getPerformanceCounter(uint16 address)
{
    Ifx_CPU_CCNT ccnt;

    if (address == 0xFC04)
    {
        ccnt.U = (__extension__({ unsigned __res; __asm__ volatile ("mfcr %0, LO:" "0xFC04" : "=d" (__res) :: "memory"); __res; }));
    }
    else if (address == 0xFC08)
    {
        ccnt.U = (__extension__({ unsigned __res; __asm__ volatile ("mfcr %0, LO:" "0xFC08" : "=d" (__res) :: "memory"); __res; }));
    }
    else if (address == 0xFC0C)
    {
        ccnt.U = (__extension__({ unsigned __res; __asm__ volatile ("mfcr %0, LO:" "0xFC0C" : "=d" (__res) :: "memory"); __res; }));
    }
    else if (address == 0xFC10)
    {
        ccnt.U = (__extension__({ unsigned __res; __asm__ volatile ("mfcr %0, LO:" "0xFC10" : "=d" (__res) :: "memory"); __res; }));
    }
    else if (address == 0xFC14)
    {
        ccnt.U = (__extension__({ unsigned __res; __asm__ volatile ("mfcr %0, LO:" "0xFC14" : "=d" (__res) :: "memory"); __res; }));
    }

    return ccnt.B.CountValue;
}


static inline __attribute__ ((always_inline)) boolean IfxCpu_getPerformanceCounterStickyOverflow(uint16 address)
{
    Ifx_CPU_CCNT ccnt;

    if (address == 0xFC04)
    {
        ccnt.U = (__extension__({ unsigned __res; __asm__ volatile ("mfcr %0, LO:" "0xFC04" : "=d" (__res) :: "memory"); __res; }));
    }
    else if (address == 0xFC08)
    {
        ccnt.U = (__extension__({ unsigned __res; __asm__ volatile ("mfcr %0, LO:" "0xFC08" : "=d" (__res) :: "memory"); __res; }));
    }
    else if (address == 0xFC0C)
    {
        ccnt.U = (__extension__({ unsigned __res; __asm__ volatile ("mfcr %0, LO:" "0xFC0C" : "=d" (__res) :: "memory"); __res; }));
    }
    else if (address == 0xFC10)
    {
        ccnt.U = (__extension__({ unsigned __res; __asm__ volatile ("mfcr %0, LO:" "0xFC10" : "=d" (__res) :: "memory"); __res; }));
    }
    else if (address == 0xFC14)
    {
        ccnt.U = (__extension__({ unsigned __res; __asm__ volatile ("mfcr %0, LO:" "0xFC14" : "=d" (__res) :: "memory"); __res; }));
    }

    return ccnt.B.SOvf;
}


static inline __attribute__ ((always_inline)) void IfxCpu_initCSA(uint32 *csaBegin, uint32 *csaEnd)
{
    uint32 k;
    uint32 nxt_cxi_val = 0U;
    uint32 *prvCsa = csaBegin;
    uint32 *nxtCsa = csaBegin;
    uint32 numOfCsa = (((uint32)csaEnd - (uint32)csaBegin) / 64U);

    for (k = 0U; k < numOfCsa; k++)
    {
        nxt_cxi_val = ((uint32)nxtCsa & (0XFU << 28U)) >> 12U | ((uint32)nxtCsa & (0XFFFFU << 6U)) >> 6U;

        if (k == 0U)
        {
            do { unsigned __newval = (unsigned) (nxt_cxi_val); __asm__ volatile ("mtcr LO:" "0xFE38" ", %0" :: "d" (__newval) : "memory"); } while (0);
        }
        else
        {
            *prvCsa = nxt_cxi_val;
        }

        if (k == (numOfCsa - 3U))
        {
            do { unsigned __newval = (unsigned) (nxt_cxi_val); __asm__ volatile ("mtcr LO:" "0xFE3C" ", %0" :: "d" (__newval) : "memory"); } while (0);
        }

        prvCsa = (uint32 *)nxtCsa;
        nxtCsa += 16U;
    }

    *prvCsa = 0U;
}


static inline __attribute__ ((always_inline)) void IfxCpu_invalidateProgramCache(void)
{
    uint16 cpuWdtPassword = IfxScuWdt_getCpuWatchdogPassword();
    {
        IfxScuWdt_clearCpuEndinit(cpuWdtPassword);
        Ifx_CPU_PCON1 pcon1;
        pcon1.U = (__extension__({ unsigned __res; __asm__ volatile ("mfcr %0, LO:" "0x9204" : "=d" (__res) :: "memory"); __res; }));
        pcon1.B.PCINV = 1;
        do { unsigned __newval = (unsigned) (pcon1.U); __asm__ volatile ("mtcr LO:" "0x9204" ", %0" :: "d" (__newval) : "memory"); } while (0);
        IfxScuWdt_setCpuEndinit(cpuWdtPassword);
    }
}


static inline __attribute__ ((always_inline)) boolean IfxCpu_isAddressCachable(void *address)
{
    uint8 segment = (uint32)address >> 24;
    return ((segment == (8)) || (segment == (9))) ? (1u) : (0u);
}


static inline __attribute__ ((always_inline)) void IfxCpu_resetAndStartCounters(IfxCpu_CounterMode mode)
{
    Ifx_CPU_CCTRL cctrl;
    cctrl.U = (__extension__({ unsigned __res; __asm__ volatile ("mfcr %0, LO:" "0xFC00" : "=d" (__res) :: "memory"); __res; }));

    cctrl.B.CE = 0;
    do { unsigned __newval = (unsigned) (cctrl.U); __asm__ volatile ("mtcr LO:" "0xFC00" ", %0" :: "d" (__newval) : "memory"); } while (0);


    do { unsigned __newval = (unsigned) (0); __asm__ volatile ("mtcr LO:" "0xFC04" ", %0" :: "d" (__newval) : "memory"); } while (0);
    do { unsigned __newval = (unsigned) (0); __asm__ volatile ("mtcr LO:" "0xFC08" ", %0" :: "d" (__newval) : "memory"); } while (0);
    do { unsigned __newval = (unsigned) (0); __asm__ volatile ("mtcr LO:" "0xFC0C" ", %0" :: "d" (__newval) : "memory"); } while (0);
    do { unsigned __newval = (unsigned) (0); __asm__ volatile ("mtcr LO:" "0xFC10" ", %0" :: "d" (__newval) : "memory"); } while (0);
    do { unsigned __newval = (unsigned) (0); __asm__ volatile ("mtcr LO:" "0xFC14" ", %0" :: "d" (__newval) : "memory"); } while (0);


    cctrl.B.CE = 1;
    cctrl.B.CM = mode;
    do { unsigned __newval = (unsigned) (cctrl.U); __asm__ volatile ("mtcr LO:" "0xFC00" ", %0" :: "d" (__newval) : "memory"); } while (0);
}


static inline __attribute__ ((always_inline)) void IfxCpu_restoreInterrupts(boolean enabled)
{
    if (enabled != (0u))
    {
        __asm__ volatile ("enable" : : : "memory");
    }
}


static inline __attribute__ ((always_inline)) void IfxCpu_setDataCache(boolean enable)
{
    uint32 coreIndex = IfxCpu_getCoreIndex();
    uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&(*(Ifx_SCU*)0xF0036000u).WDTCPU[coreIndex]);

    {
        IfxScuWdt_clearCpuEndinitInline(&(*(Ifx_SCU*)0xF0036000u).WDTCPU[coreIndex], wdtPassword);
        Ifx_CPU_DCON0 dcon0;
        dcon0.U = 0;
        dcon0.B.DCBYP = enable ? 0 : 1;
        do { unsigned __newval = (unsigned) (dcon0.U); __asm__ volatile ("mtcr LO:" "0x9040" ", %0" :: "d" (__newval) : "memory"); } while (0);
        IfxScuWdt_setCpuEndinitInline(&(*(Ifx_SCU*)0xF0036000u).WDTCPU[coreIndex], wdtPassword);
    }

    Ifx__isync();
}


static inline __attribute__ ((always_inline)) void IfxCpu_setPerformanceCountersEnableBit(uint32 enable)
{
    Ifx_CPU_CCTRL cctrl;
    cctrl.U = (__extension__({ unsigned __res; __asm__ volatile ("mfcr %0, LO:" "0xFC00" : "=d" (__res) :: "memory"); __res; }));
    cctrl.B.CE = enable;
    do { unsigned __newval = (unsigned) (cctrl.U); __asm__ volatile ("mtcr LO:" "0xFC00" ", %0" :: "d" (__newval) : "memory"); } while (0);
}


static inline __attribute__ ((always_inline)) void IfxCpu_setProgramCache(boolean enable)
{
    if (enable)
    {
        Ifx_CPU_PCON1 pcon1;
        pcon1.U = 0;
        pcon1.B.PCINV = 1;
        do { unsigned __newval = (unsigned) (pcon1.U); __asm__ volatile ("mtcr LO:" "0x9204" ", %0" :: "d" (__newval) : "memory"); } while (0);
    }

    uint32 coreIndex = IfxCpu_getCoreIndex();
    uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&(*(Ifx_SCU*)0xF0036000u).WDTCPU[coreIndex]);

    {
        IfxScuWdt_clearCpuEndinitInline(&(*(Ifx_SCU*)0xF0036000u).WDTCPU[coreIndex], wdtPassword);
        Ifx_CPU_PCON0 pcon0;
        pcon0.U = 0;
        pcon0.B.PCBYP = enable ? 0 : 1;
        do { unsigned __newval = (unsigned) (pcon0.U); __asm__ volatile ("mtcr LO:" "0x920C" ", %0" :: "d" (__newval) : "memory"); } while (0);
        IfxScuWdt_setCpuEndinitInline(&(*(Ifx_SCU*)0xF0036000u).WDTCPU[coreIndex], wdtPassword);
    }

    Ifx__isync();
}


static inline __attribute__ ((always_inline)) void IfxCpu_setSafetyTaskIdentifier(boolean safetyId)
{
    Ifx_CPU_PSW psw;
    ((void)0);
    psw.U = (__extension__({ unsigned __res; __asm__ volatile ("mfcr %0, LO:" "0xFE04" : "=d" (__res) :: "memory"); __res; }));
    psw.B.S = safetyId;
    do { unsigned __newval = (unsigned) ((uint32)psw.U); __asm__ volatile ("mtcr LO:" "0xFE04" ", %0" :: "d" (__newval) : "memory"); } while (0);
}



static inline __attribute__ ((always_inline)) IfxCpu_Perf IfxCpu_stopCounters(void)
{
    IfxCpu_Perf result;


    Ifx__stopPerfCounters();

    Ifx_CPU_CCNT ccnt;
    ccnt.U = (__extension__({ unsigned __res; __asm__ volatile ("mfcr %0, LO:" "0xFC04" : "=d" (__res) :: "memory"); __res; }));
    result.clock.counter = ccnt.B.CountValue;
    result.clock.overlfow = ccnt.B.SOvf;

    Ifx_CPU_ICNT icnt;
    icnt.U = (__extension__({ unsigned __res; __asm__ volatile ("mfcr %0, LO:" "0xFC08" : "=d" (__res) :: "memory"); __res; }));
    result.instruction.counter = icnt.B.CountValue;
    result.instruction.overlfow = icnt.B.SOvf;

    Ifx_CPU_M1CNT m1cnt;
    m1cnt.U = (__extension__({ unsigned __res; __asm__ volatile ("mfcr %0, LO:" "0xFC0C" : "=d" (__res) :: "memory"); __res; }));
    result.counter1.counter = m1cnt.B.CountValue;
    result.counter1.overlfow = m1cnt.B.SOvf;

    Ifx_CPU_M2CNT m2cnt;
    m2cnt.U = (__extension__({ unsigned __res; __asm__ volatile ("mfcr %0, LO:" "0xFC10" : "=d" (__res) :: "memory"); __res; }));
    result.counter2.counter = m2cnt.B.CountValue;
    result.counter2.overlfow = m2cnt.B.SOvf;

    Ifx_CPU_M3CNT m3cnt;
    m3cnt.U = (__extension__({ unsigned __res; __asm__ volatile ("mfcr %0, LO:" "0xFC14" : "=d" (__res) :: "memory"); __res; }));
    result.counter3.counter = m3cnt.B.CountValue;
    result.counter3.overlfow = m3cnt.B.SOvf;

    return result;
}



static inline __attribute__ ((always_inline)) void IfxCpu_triggerSwReset(void)
{
    (*(Ifx_SCU*)0xF0036000u).SWRSTCON.B.SWRSTREQ = 1;


    while (1)
    {}
}


static inline __attribute__ ((always_inline)) void IfxCpu_updateClockCounter(uint32 count)
{
    IfxCpu_updatePerformanceCounter(0xFC04, count);
}


static inline __attribute__ ((always_inline)) void IfxCpu_updateInstructionCounter(uint32 count)
{
    IfxCpu_updatePerformanceCounter(0xFC08, count);
}


static inline __attribute__ ((always_inline)) void IfxCpu_updatePerformanceCounter(uint32 address, uint32 count)
{
    if(address){};
    Ifx_CPU_CCTRL cctrl;
    boolean enableBit;

    cctrl.U = (__extension__({ unsigned __res; __asm__ volatile ("mfcr %0, LO:" "0xFC00" : "=d" (__res) :: "memory"); __res; }));
    enableBit = cctrl.B.CE;
    cctrl.B.CE = 0;
    do { unsigned __newval = (unsigned) (cctrl.U); __asm__ volatile ("mtcr LO:" "0xFC00" ", %0" :: "d" (__newval) : "memory"); } while (0);


    count &= ~(1U << 31);
    do { unsigned __newval = (unsigned) (count); __asm__ volatile ("mtcr LO:" "address" ", %0" :: "d" (__newval) : "memory"); } while (0);


    cctrl.B.CE = enableBit;
    do { unsigned __newval = (unsigned) (cctrl.U); __asm__ volatile ("mtcr LO:" "0xFC00" ", %0" :: "d" (__newval) : "memory"); } while (0);
}
# 9 "D:\\Workspace\\autoever_osek\\can_based_OSEK_OS_TEST\\bsw\\drivers\\../../Driver_Can.h" 2
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxmultican_can.h" 1 3
# 766 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxmultican_can.h" 3
#define IFXMULTICAN_CAN_H 1





# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxmultican.h" 1 3
# 58 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxmultican.h" 3
#define IFXMULTICAN_H 1





# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxmultican_cfg.h" 1 3
# 50 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxmultican_cfg.h" 3
#define IFXMULTICAN_CFG_H 1






# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcan_reg.h" 1 3
# 58 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxmultican_cfg.h" 2 3







#define IFXMULTICAN_NUM_MESSAGE_OBJECTS (256)



#define IFXMULTICAN_NUM_NODES (4)



#define IFXMULTICAN_NUM_SRC (16)

#define IFXMULTICAN_NUM_MODULES (1)



#define IFXMULTICAN_R_NUM_SRC (8)
# 89 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxmultican_cfg.h" 3
typedef enum
{
    IfxMultican_Index_none = -1,
    IfxMultican_Index_0 = 0,
} IfxMultican_Index;



typedef enum
{
    IfxMultican_NodeId_none = -1,
    IfxMultican_NodeId_0 = 0,
    IfxMultican_NodeId_1,
    IfxMultican_NodeId_2,
    IfxMultican_NodeId_3
} IfxMultican_NodeId;



typedef enum
{
    IfxMultican_SrcId_0 = 0,
    IfxMultican_SrcId_1,
    IfxMultican_SrcId_2,
    IfxMultican_SrcId_3,
    IfxMultican_SrcId_4,
    IfxMultican_SrcId_5,
    IfxMultican_SrcId_6,
    IfxMultican_SrcId_7,
    IfxMultican_SrcId_8,
    IfxMultican_SrcId_9,
    IfxMultican_SrcId_10,
    IfxMultican_SrcId_11,
    IfxMultican_SrcId_12,
    IfxMultican_SrcId_13,
    IfxMultican_SrcId_14,
    IfxMultican_SrcId_15
} IfxMultican_SrcId;






extern const IfxModule_IndexMap IfxMultican_cfg_indexMap[(1)];
# 65 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxmultican.h" 2 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxsrc.h" 1 3
# 106 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxsrc.h" 3
#define IFXSRC_H 1





# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxsrc_cfg.h" 1 3
# 52 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxsrc_cfg.h" 3
#define IFXSRC_CFG_H 1
# 66 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxsrc_cfg.h" 3
typedef enum
{
    IfxSrc_Tos_cpu0 = 0,
    IfxSrc_Tos_cpu1 = 1,
    IfxSrc_Tos_cpu2 = 2,
    IfxSrc_Tos_dma = 3
} IfxSrc_Tos;
# 113 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxsrc.h" 2 3

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxsrc_reg.h" 1 3
# 115 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxsrc.h" 2 3
# 129 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxsrc.h" 3
static inline __attribute__ ((always_inline)) void IfxSrc_clearOverrun(volatile Ifx_SRC_SRCR *src);
# 138 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxsrc.h" 3
static inline __attribute__ ((always_inline)) void IfxSrc_clearRequest(volatile Ifx_SRC_SRCR *src);
# 147 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxsrc.h" 3
static inline __attribute__ ((always_inline)) boolean IfxSrc_isOverrun(volatile Ifx_SRC_SRCR *src);
# 156 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxsrc.h" 3
static inline __attribute__ ((always_inline)) boolean IfxSrc_isRequested(volatile Ifx_SRC_SRCR *src);
# 165 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxsrc.h" 3
static inline __attribute__ ((always_inline)) void IfxSrc_setRequest(volatile Ifx_SRC_SRCR *src);
# 183 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxsrc.h" 3
static inline __attribute__ ((always_inline)) void IfxSrc_deinit(volatile Ifx_SRC_SRCR *src);
# 192 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxsrc.h" 3
static inline __attribute__ ((always_inline)) void IfxSrc_disable(volatile Ifx_SRC_SRCR *src);
# 201 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxsrc.h" 3
static inline __attribute__ ((always_inline)) void IfxSrc_enable(volatile Ifx_SRC_SRCR *src);
# 233 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxsrc.h" 3
static inline __attribute__ ((always_inline)) void IfxSrc_init(volatile Ifx_SRC_SRCR *src, IfxSrc_Tos typOfService, Ifx_Priority priority);







static inline __attribute__ ((always_inline)) void IfxSrc_clearOverrun(volatile Ifx_SRC_SRCR *src)
{
    src->B.IOVCLR = 1;
}


static inline __attribute__ ((always_inline)) void IfxSrc_clearRequest(volatile Ifx_SRC_SRCR *src)
{
    src->B.CLRR = 1;
}


static inline __attribute__ ((always_inline)) void IfxSrc_deinit(volatile Ifx_SRC_SRCR *src)
{
    src->U = 0;
}


static inline __attribute__ ((always_inline)) void IfxSrc_disable(volatile Ifx_SRC_SRCR *src)
{
    src->B.SRE = 0;
}


static inline __attribute__ ((always_inline)) void IfxSrc_enable(volatile Ifx_SRC_SRCR *src)
{
    src->B.SRE = 1;
}


static inline __attribute__ ((always_inline)) void IfxSrc_init(volatile Ifx_SRC_SRCR *src, IfxSrc_Tos typOfService, Ifx_Priority priority)
{
    src->B.SRPN = priority;
    src->B.TOS = typOfService;
    IfxSrc_clearRequest(src);
}


static inline __attribute__ ((always_inline)) boolean IfxSrc_isOverrun(volatile Ifx_SRC_SRCR *src)
{
    return src->B.IOV ? (1u) : (0u);
}


static inline __attribute__ ((always_inline)) boolean IfxSrc_isRequested(volatile Ifx_SRC_SRCR *src)
{
    return src->B.SRR ? (1u) : (0u);
}


static inline __attribute__ ((always_inline)) void IfxSrc_setRequest(volatile Ifx_SRC_SRCR *src)
{
    src->B.SETR = 1;
}
# 66 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxmultican.h" 2 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxmultican_pinmap.h" 1 3
# 46 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxmultican_pinmap.h" 3
#define IFXMULTICAN_PINMAP_H 
# 57 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxmultican_pinmap.h" 3
typedef const struct
{
    Ifx_CAN* module;
    IfxMultican_NodeId nodeId;
    IfxPort_Pin pin;
    Ifx_RxSel select;
} IfxMultican_Rxd_In;


typedef const struct
{
    Ifx_CAN* module;
    IfxMultican_NodeId nodeId;
    IfxPort_Pin pin;
    IfxPort_OutputIdx select;
} IfxMultican_Txd_Out;

extern IfxMultican_Rxd_In IfxMultican_RXD0A_P02_1_IN;
extern IfxMultican_Rxd_In IfxMultican_RXD0B_P20_7_IN;
extern IfxMultican_Rxd_In IfxMultican_RXD0C_P12_0_IN;
extern IfxMultican_Rxd_In IfxMultican_RXD0D_P02_4_IN;
extern IfxMultican_Rxd_In IfxMultican_RXD0E_P33_7_IN;
extern IfxMultican_Rxd_In IfxMultican_RXD0G_P34_2_IN;
extern IfxMultican_Rxd_In IfxMultican_RXD1A_P15_3_IN;
extern IfxMultican_Rxd_In IfxMultican_RXD1B_P14_1_IN;
extern IfxMultican_Rxd_In IfxMultican_RXD1C_P01_4_IN;
extern IfxMultican_Rxd_In IfxMultican_RXD1D_P00_1_IN;
extern IfxMultican_Rxd_In IfxMultican_RXD1E_P02_10_IN;
extern IfxMultican_Rxd_In IfxMultican_RXD2A_P15_1_IN;
extern IfxMultican_Rxd_In IfxMultican_RXD2B_P02_3_IN;
extern IfxMultican_Rxd_In IfxMultican_RXD2C_P32_6_IN;
extern IfxMultican_Rxd_In IfxMultican_RXD2D_P14_8_IN;
extern IfxMultican_Rxd_In IfxMultican_RXD2E_P10_2_IN;
extern IfxMultican_Rxd_In IfxMultican_RXD3A_P00_3_IN;
extern IfxMultican_Rxd_In IfxMultican_RXD3B_P32_2_IN;
extern IfxMultican_Rxd_In IfxMultican_RXD3C_P20_0_IN;
extern IfxMultican_Rxd_In IfxMultican_RXD3D_P11_10_IN;
extern IfxMultican_Rxd_In IfxMultican_RXD3E_P20_9_IN;
extern IfxMultican_Txd_Out IfxMultican_TXD0_P02_0_OUT;
extern IfxMultican_Txd_Out IfxMultican_TXD0_P02_5_OUT;
extern IfxMultican_Txd_Out IfxMultican_TXD0_P12_1_OUT;
extern IfxMultican_Txd_Out IfxMultican_TXD0_P20_8_OUT;
extern IfxMultican_Txd_Out IfxMultican_TXD0_P33_8_OUT;
extern IfxMultican_Txd_Out IfxMultican_TXD0_P34_1_OUT;
extern IfxMultican_Txd_Out IfxMultican_TXD1_P00_0_OUT;
extern IfxMultican_Txd_Out IfxMultican_TXD1_P01_3_OUT;
extern IfxMultican_Txd_Out IfxMultican_TXD1_P02_9_OUT;
extern IfxMultican_Txd_Out IfxMultican_TXD1_P14_0_OUT;
extern IfxMultican_Txd_Out IfxMultican_TXD1_P15_2_OUT;
extern IfxMultican_Txd_Out IfxMultican_TXD2_P02_2_OUT;
extern IfxMultican_Txd_Out IfxMultican_TXD2_P10_3_OUT;
extern IfxMultican_Txd_Out IfxMultican_TXD2_P14_10_OUT;
extern IfxMultican_Txd_Out IfxMultican_TXD2_P15_0_OUT;
extern IfxMultican_Txd_Out IfxMultican_TXD2_P32_5_OUT;
extern IfxMultican_Txd_Out IfxMultican_TXD3_P00_2_OUT;
extern IfxMultican_Txd_Out IfxMultican_TXD3_P11_12_OUT;
extern IfxMultican_Txd_Out IfxMultican_TXD3_P20_10_OUT;
extern IfxMultican_Txd_Out IfxMultican_TXD3_P20_3_OUT;
extern IfxMultican_Txd_Out IfxMultican_TXD3_P32_3_OUT;


#define IFXMULTICAN_PINMAP_NUM_MODULES 1
#define IFXMULTICAN_PINMAP_NUM_NODES 4
#define IFXMULTICAN_PINMAP_RXD_IN_NUM_ITEMS 7
#define IFXMULTICAN_PINMAP_TXD_OUT_NUM_ITEMS 6



extern const IfxMultican_Rxd_In *IfxMultican_Rxd_In_pinTable[1][4][7];


extern const IfxMultican_Txd_Out *IfxMultican_Txd_Out_pinTable[1][4][6];
# 67 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxmultican.h" 2 3

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCan_bf.h" 1 3
# 28 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCan_bf.h" 3
#define IFXCAN_BF_H 1






#define IFX_CAN_ACCEN0_EN0_LEN (1u)


#define IFX_CAN_ACCEN0_EN0_MSK (0x1u)


#define IFX_CAN_ACCEN0_EN0_OFF (0u)


#define IFX_CAN_ACCEN0_EN10_LEN (1u)


#define IFX_CAN_ACCEN0_EN10_MSK (0x1u)


#define IFX_CAN_ACCEN0_EN10_OFF (10u)


#define IFX_CAN_ACCEN0_EN11_LEN (1u)


#define IFX_CAN_ACCEN0_EN11_MSK (0x1u)


#define IFX_CAN_ACCEN0_EN11_OFF (11u)


#define IFX_CAN_ACCEN0_EN12_LEN (1u)


#define IFX_CAN_ACCEN0_EN12_MSK (0x1u)


#define IFX_CAN_ACCEN0_EN12_OFF (12u)


#define IFX_CAN_ACCEN0_EN13_LEN (1u)


#define IFX_CAN_ACCEN0_EN13_MSK (0x1u)


#define IFX_CAN_ACCEN0_EN13_OFF (13u)


#define IFX_CAN_ACCEN0_EN14_LEN (1u)


#define IFX_CAN_ACCEN0_EN14_MSK (0x1u)


#define IFX_CAN_ACCEN0_EN14_OFF (14u)


#define IFX_CAN_ACCEN0_EN15_LEN (1u)


#define IFX_CAN_ACCEN0_EN15_MSK (0x1u)


#define IFX_CAN_ACCEN0_EN15_OFF (15u)


#define IFX_CAN_ACCEN0_EN16_LEN (1u)


#define IFX_CAN_ACCEN0_EN16_MSK (0x1u)


#define IFX_CAN_ACCEN0_EN16_OFF (16u)


#define IFX_CAN_ACCEN0_EN17_LEN (1u)


#define IFX_CAN_ACCEN0_EN17_MSK (0x1u)


#define IFX_CAN_ACCEN0_EN17_OFF (17u)


#define IFX_CAN_ACCEN0_EN18_LEN (1u)


#define IFX_CAN_ACCEN0_EN18_MSK (0x1u)


#define IFX_CAN_ACCEN0_EN18_OFF (18u)


#define IFX_CAN_ACCEN0_EN19_LEN (1u)


#define IFX_CAN_ACCEN0_EN19_MSK (0x1u)


#define IFX_CAN_ACCEN0_EN19_OFF (19u)


#define IFX_CAN_ACCEN0_EN1_LEN (1u)


#define IFX_CAN_ACCEN0_EN1_MSK (0x1u)


#define IFX_CAN_ACCEN0_EN1_OFF (1u)


#define IFX_CAN_ACCEN0_EN20_LEN (1u)


#define IFX_CAN_ACCEN0_EN20_MSK (0x1u)


#define IFX_CAN_ACCEN0_EN20_OFF (20u)


#define IFX_CAN_ACCEN0_EN21_LEN (1u)


#define IFX_CAN_ACCEN0_EN21_MSK (0x1u)


#define IFX_CAN_ACCEN0_EN21_OFF (21u)


#define IFX_CAN_ACCEN0_EN22_LEN (1u)


#define IFX_CAN_ACCEN0_EN22_MSK (0x1u)


#define IFX_CAN_ACCEN0_EN22_OFF (22u)


#define IFX_CAN_ACCEN0_EN23_LEN (1u)


#define IFX_CAN_ACCEN0_EN23_MSK (0x1u)


#define IFX_CAN_ACCEN0_EN23_OFF (23u)


#define IFX_CAN_ACCEN0_EN24_LEN (1u)


#define IFX_CAN_ACCEN0_EN24_MSK (0x1u)


#define IFX_CAN_ACCEN0_EN24_OFF (24u)


#define IFX_CAN_ACCEN0_EN25_LEN (1u)


#define IFX_CAN_ACCEN0_EN25_MSK (0x1u)


#define IFX_CAN_ACCEN0_EN25_OFF (25u)


#define IFX_CAN_ACCEN0_EN26_LEN (1u)


#define IFX_CAN_ACCEN0_EN26_MSK (0x1u)


#define IFX_CAN_ACCEN0_EN26_OFF (26u)


#define IFX_CAN_ACCEN0_EN27_LEN (1u)


#define IFX_CAN_ACCEN0_EN27_MSK (0x1u)


#define IFX_CAN_ACCEN0_EN27_OFF (27u)


#define IFX_CAN_ACCEN0_EN28_LEN (1u)


#define IFX_CAN_ACCEN0_EN28_MSK (0x1u)


#define IFX_CAN_ACCEN0_EN28_OFF (28u)


#define IFX_CAN_ACCEN0_EN29_LEN (1u)


#define IFX_CAN_ACCEN0_EN29_MSK (0x1u)


#define IFX_CAN_ACCEN0_EN29_OFF (29u)


#define IFX_CAN_ACCEN0_EN2_LEN (1u)


#define IFX_CAN_ACCEN0_EN2_MSK (0x1u)


#define IFX_CAN_ACCEN0_EN2_OFF (2u)


#define IFX_CAN_ACCEN0_EN30_LEN (1u)


#define IFX_CAN_ACCEN0_EN30_MSK (0x1u)


#define IFX_CAN_ACCEN0_EN30_OFF (30u)


#define IFX_CAN_ACCEN0_EN31_LEN (1u)


#define IFX_CAN_ACCEN0_EN31_MSK (0x1u)


#define IFX_CAN_ACCEN0_EN31_OFF (31u)


#define IFX_CAN_ACCEN0_EN3_LEN (1u)


#define IFX_CAN_ACCEN0_EN3_MSK (0x1u)


#define IFX_CAN_ACCEN0_EN3_OFF (3u)


#define IFX_CAN_ACCEN0_EN4_LEN (1u)


#define IFX_CAN_ACCEN0_EN4_MSK (0x1u)


#define IFX_CAN_ACCEN0_EN4_OFF (4u)


#define IFX_CAN_ACCEN0_EN5_LEN (1u)


#define IFX_CAN_ACCEN0_EN5_MSK (0x1u)


#define IFX_CAN_ACCEN0_EN5_OFF (5u)


#define IFX_CAN_ACCEN0_EN6_LEN (1u)


#define IFX_CAN_ACCEN0_EN6_MSK (0x1u)


#define IFX_CAN_ACCEN0_EN6_OFF (6u)


#define IFX_CAN_ACCEN0_EN7_LEN (1u)


#define IFX_CAN_ACCEN0_EN7_MSK (0x1u)


#define IFX_CAN_ACCEN0_EN7_OFF (7u)


#define IFX_CAN_ACCEN0_EN8_LEN (1u)


#define IFX_CAN_ACCEN0_EN8_MSK (0x1u)


#define IFX_CAN_ACCEN0_EN8_OFF (8u)


#define IFX_CAN_ACCEN0_EN9_LEN (1u)


#define IFX_CAN_ACCEN0_EN9_MSK (0x1u)


#define IFX_CAN_ACCEN0_EN9_OFF (9u)


#define IFX_CAN_CLC_DISR_LEN (1u)


#define IFX_CAN_CLC_DISR_MSK (0x1u)


#define IFX_CAN_CLC_DISR_OFF (0u)


#define IFX_CAN_CLC_DISS_LEN (1u)


#define IFX_CAN_CLC_DISS_MSK (0x1u)


#define IFX_CAN_CLC_DISS_OFF (1u)


#define IFX_CAN_CLC_EDIS_LEN (1u)


#define IFX_CAN_CLC_EDIS_MSK (0x1u)


#define IFX_CAN_CLC_EDIS_OFF (3u)


#define IFX_CAN_FDR_DM_LEN (2u)


#define IFX_CAN_FDR_DM_MSK (0x3u)


#define IFX_CAN_FDR_DM_OFF (14u)


#define IFX_CAN_FDR_STEP_LEN (10u)


#define IFX_CAN_FDR_STEP_MSK (0x3ffu)


#define IFX_CAN_FDR_STEP_OFF (0u)


#define IFX_CAN_ID_MOD_REV_LEN (8u)


#define IFX_CAN_ID_MOD_REV_MSK (0xffu)


#define IFX_CAN_ID_MOD_REV_OFF (0u)


#define IFX_CAN_ID_MOD_TYPE_LEN (8u)


#define IFX_CAN_ID_MOD_TYPE_MSK (0xffu)


#define IFX_CAN_ID_MOD_TYPE_OFF (8u)


#define IFX_CAN_ID_MODNUMBER_LEN (16u)


#define IFX_CAN_ID_MODNUMBER_MSK (0xffffu)


#define IFX_CAN_ID_MODNUMBER_OFF (16u)


#define IFX_CAN_KRST0_RST_LEN (1u)


#define IFX_CAN_KRST0_RST_MSK (0x1u)


#define IFX_CAN_KRST0_RST_OFF (0u)


#define IFX_CAN_KRST0_RSTSTAT_LEN (1u)


#define IFX_CAN_KRST0_RSTSTAT_MSK (0x1u)


#define IFX_CAN_KRST0_RSTSTAT_OFF (1u)


#define IFX_CAN_KRST1_RST_LEN (1u)


#define IFX_CAN_KRST1_RST_MSK (0x1u)


#define IFX_CAN_KRST1_RST_OFF (0u)


#define IFX_CAN_KRSTCLR_CLR_LEN (1u)


#define IFX_CAN_KRSTCLR_CLR_MSK (0x1u)


#define IFX_CAN_KRSTCLR_CLR_OFF (0u)


#define IFX_CAN_LIST_BEGIN_LEN (8u)


#define IFX_CAN_LIST_BEGIN_MSK (0xffu)


#define IFX_CAN_LIST_BEGIN_OFF (0u)


#define IFX_CAN_LIST_EMPTY_LEN (1u)


#define IFX_CAN_LIST_EMPTY_MSK (0x1u)


#define IFX_CAN_LIST_EMPTY_OFF (24u)


#define IFX_CAN_LIST_END_LEN (8u)


#define IFX_CAN_LIST_END_MSK (0xffu)


#define IFX_CAN_LIST_END_OFF (8u)


#define IFX_CAN_LIST_SIZE_LEN (8u)


#define IFX_CAN_LIST_SIZE_MSK (0xffu)


#define IFX_CAN_LIST_SIZE_OFF (16u)


#define IFX_CAN_MCR_CLKSEL_LEN (4u)


#define IFX_CAN_MCR_CLKSEL_MSK (0xfu)


#define IFX_CAN_MCR_CLKSEL_OFF (0u)


#define IFX_CAN_MCR_MPSEL_LEN (4u)


#define IFX_CAN_MCR_MPSEL_MSK (0xfu)


#define IFX_CAN_MCR_MPSEL_OFF (12u)


#define IFX_CAN_MECR_ANYED_LEN (1u)


#define IFX_CAN_MECR_ANYED_MSK (0x1u)


#define IFX_CAN_MECR_ANYED_OFF (24u)


#define IFX_CAN_MECR_CAPEIE_LEN (1u)


#define IFX_CAN_MECR_CAPEIE_MSK (0x1u)


#define IFX_CAN_MECR_CAPEIE_OFF (25u)


#define IFX_CAN_MECR_DEPTH_LEN (3u)


#define IFX_CAN_MECR_DEPTH_MSK (0x7u)


#define IFX_CAN_MECR_DEPTH_OFF (27u)


#define IFX_CAN_MECR_INP_LEN (4u)


#define IFX_CAN_MECR_INP_MSK (0xfu)


#define IFX_CAN_MECR_INP_OFF (16u)


#define IFX_CAN_MECR_NODE_LEN (3u)


#define IFX_CAN_MECR_NODE_MSK (0x7u)


#define IFX_CAN_MECR_NODE_OFF (20u)


#define IFX_CAN_MECR_SOF_LEN (1u)


#define IFX_CAN_MECR_SOF_MSK (0x1u)


#define IFX_CAN_MECR_SOF_OFF (30u)


#define IFX_CAN_MECR_TH_LEN (16u)


#define IFX_CAN_MECR_TH_MSK (0xffffu)


#define IFX_CAN_MECR_TH_OFF (0u)


#define IFX_CAN_MESTAT_CAPE_LEN (1u)


#define IFX_CAN_MESTAT_CAPE_MSK (0x1u)


#define IFX_CAN_MESTAT_CAPE_OFF (17u)


#define IFX_CAN_MESTAT_CAPRED_LEN (1u)


#define IFX_CAN_MESTAT_CAPRED_MSK (0x1u)


#define IFX_CAN_MESTAT_CAPRED_OFF (16u)


#define IFX_CAN_MESTAT_CAPT_LEN (16u)


#define IFX_CAN_MESTAT_CAPT_MSK (0xffffu)


#define IFX_CAN_MESTAT_CAPT_OFF (0u)


#define IFX_CAN_MITR_IT_LEN (16u)


#define IFX_CAN_MITR_IT_MSK (0xffffu)


#define IFX_CAN_MITR_IT_OFF (0u)


#define IFX_CAN_MO_AMR_AM_LEN (29u)


#define IFX_CAN_MO_AMR_AM_MSK (0x1fffffffu)


#define IFX_CAN_MO_AMR_AM_OFF (0u)


#define IFX_CAN_MO_AMR_MIDE_LEN (1u)


#define IFX_CAN_MO_AMR_MIDE_MSK (0x1u)


#define IFX_CAN_MO_AMR_MIDE_OFF (29u)


#define IFX_CAN_MO_AR_ID_LEN (29u)


#define IFX_CAN_MO_AR_ID_MSK (0x1fffffffu)


#define IFX_CAN_MO_AR_ID_OFF (0u)


#define IFX_CAN_MO_AR_IDE_LEN (1u)


#define IFX_CAN_MO_AR_IDE_MSK (0x1u)


#define IFX_CAN_MO_AR_IDE_OFF (29u)


#define IFX_CAN_MO_AR_PRI_LEN (2u)


#define IFX_CAN_MO_AR_PRI_MSK (0x3u)


#define IFX_CAN_MO_AR_PRI_OFF (30u)


#define IFX_CAN_MO_CTR_RESDIR_LEN (1u)


#define IFX_CAN_MO_CTR_RESDIR_MSK (0x1u)


#define IFX_CAN_MO_CTR_RESDIR_OFF (11u)


#define IFX_CAN_MO_CTR_RESMSGLST_LEN (1u)


#define IFX_CAN_MO_CTR_RESMSGLST_MSK (0x1u)


#define IFX_CAN_MO_CTR_RESMSGLST_OFF (4u)


#define IFX_CAN_MO_CTR_RESMSGVAL_LEN (1u)


#define IFX_CAN_MO_CTR_RESMSGVAL_MSK (0x1u)


#define IFX_CAN_MO_CTR_RESMSGVAL_OFF (5u)


#define IFX_CAN_MO_CTR_RESNEWDAT_LEN (1u)


#define IFX_CAN_MO_CTR_RESNEWDAT_MSK (0x1u)


#define IFX_CAN_MO_CTR_RESNEWDAT_OFF (3u)


#define IFX_CAN_MO_CTR_RESRTSEL_LEN (1u)


#define IFX_CAN_MO_CTR_RESRTSEL_MSK (0x1u)


#define IFX_CAN_MO_CTR_RESRTSEL_OFF (6u)


#define IFX_CAN_MO_CTR_RESRXEN_LEN (1u)


#define IFX_CAN_MO_CTR_RESRXEN_MSK (0x1u)


#define IFX_CAN_MO_CTR_RESRXEN_OFF (7u)


#define IFX_CAN_MO_CTR_RESRXPND_LEN (1u)


#define IFX_CAN_MO_CTR_RESRXPND_MSK (0x1u)


#define IFX_CAN_MO_CTR_RESRXPND_OFF (0u)


#define IFX_CAN_MO_CTR_RESRXUPD_LEN (1u)


#define IFX_CAN_MO_CTR_RESRXUPD_MSK (0x1u)


#define IFX_CAN_MO_CTR_RESRXUPD_OFF (2u)


#define IFX_CAN_MO_CTR_RESTXEN0_LEN (1u)


#define IFX_CAN_MO_CTR_RESTXEN0_MSK (0x1u)


#define IFX_CAN_MO_CTR_RESTXEN0_OFF (9u)


#define IFX_CAN_MO_CTR_RESTXEN1_LEN (1u)


#define IFX_CAN_MO_CTR_RESTXEN1_MSK (0x1u)


#define IFX_CAN_MO_CTR_RESTXEN1_OFF (10u)


#define IFX_CAN_MO_CTR_RESTXPND_LEN (1u)


#define IFX_CAN_MO_CTR_RESTXPND_MSK (0x1u)


#define IFX_CAN_MO_CTR_RESTXPND_OFF (1u)


#define IFX_CAN_MO_CTR_RESTXRQ_LEN (1u)


#define IFX_CAN_MO_CTR_RESTXRQ_MSK (0x1u)


#define IFX_CAN_MO_CTR_RESTXRQ_OFF (8u)


#define IFX_CAN_MO_CTR_SETDIR_LEN (1u)


#define IFX_CAN_MO_CTR_SETDIR_MSK (0x1u)


#define IFX_CAN_MO_CTR_SETDIR_OFF (27u)


#define IFX_CAN_MO_CTR_SETMSGLST_LEN (1u)


#define IFX_CAN_MO_CTR_SETMSGLST_MSK (0x1u)


#define IFX_CAN_MO_CTR_SETMSGLST_OFF (20u)


#define IFX_CAN_MO_CTR_SETMSGVAL_LEN (1u)


#define IFX_CAN_MO_CTR_SETMSGVAL_MSK (0x1u)


#define IFX_CAN_MO_CTR_SETMSGVAL_OFF (21u)


#define IFX_CAN_MO_CTR_SETNEWDAT_LEN (1u)


#define IFX_CAN_MO_CTR_SETNEWDAT_MSK (0x1u)


#define IFX_CAN_MO_CTR_SETNEWDAT_OFF (19u)


#define IFX_CAN_MO_CTR_SETRTSEL_LEN (1u)


#define IFX_CAN_MO_CTR_SETRTSEL_MSK (0x1u)


#define IFX_CAN_MO_CTR_SETRTSEL_OFF (22u)


#define IFX_CAN_MO_CTR_SETRXEN_LEN (1u)


#define IFX_CAN_MO_CTR_SETRXEN_MSK (0x1u)


#define IFX_CAN_MO_CTR_SETRXEN_OFF (23u)


#define IFX_CAN_MO_CTR_SETRXPND_LEN (1u)


#define IFX_CAN_MO_CTR_SETRXPND_MSK (0x1u)


#define IFX_CAN_MO_CTR_SETRXPND_OFF (16u)


#define IFX_CAN_MO_CTR_SETRXUPD_LEN (1u)


#define IFX_CAN_MO_CTR_SETRXUPD_MSK (0x1u)


#define IFX_CAN_MO_CTR_SETRXUPD_OFF (18u)


#define IFX_CAN_MO_CTR_SETTXEN0_LEN (1u)


#define IFX_CAN_MO_CTR_SETTXEN0_MSK (0x1u)


#define IFX_CAN_MO_CTR_SETTXEN0_OFF (25u)


#define IFX_CAN_MO_CTR_SETTXEN1_LEN (1u)


#define IFX_CAN_MO_CTR_SETTXEN1_MSK (0x1u)


#define IFX_CAN_MO_CTR_SETTXEN1_OFF (26u)


#define IFX_CAN_MO_CTR_SETTXPND_LEN (1u)


#define IFX_CAN_MO_CTR_SETTXPND_MSK (0x1u)


#define IFX_CAN_MO_CTR_SETTXPND_OFF (17u)


#define IFX_CAN_MO_CTR_SETTXRQ_LEN (1u)


#define IFX_CAN_MO_CTR_SETTXRQ_MSK (0x1u)


#define IFX_CAN_MO_CTR_SETTXRQ_OFF (24u)


#define IFX_CAN_MO_DATAH_DB4_LEN (8u)


#define IFX_CAN_MO_DATAH_DB4_MSK (0xffu)


#define IFX_CAN_MO_DATAH_DB4_OFF (0u)


#define IFX_CAN_MO_DATAH_DB5_LEN (8u)


#define IFX_CAN_MO_DATAH_DB5_MSK (0xffu)


#define IFX_CAN_MO_DATAH_DB5_OFF (8u)


#define IFX_CAN_MO_DATAH_DB6_LEN (8u)


#define IFX_CAN_MO_DATAH_DB6_MSK (0xffu)


#define IFX_CAN_MO_DATAH_DB6_OFF (16u)


#define IFX_CAN_MO_DATAH_DB7_LEN (8u)


#define IFX_CAN_MO_DATAH_DB7_MSK (0xffu)


#define IFX_CAN_MO_DATAH_DB7_OFF (24u)


#define IFX_CAN_MO_DATAL_DB0_LEN (8u)


#define IFX_CAN_MO_DATAL_DB0_MSK (0xffu)


#define IFX_CAN_MO_DATAL_DB0_OFF (0u)


#define IFX_CAN_MO_DATAL_DB1_LEN (8u)


#define IFX_CAN_MO_DATAL_DB1_MSK (0xffu)


#define IFX_CAN_MO_DATAL_DB1_OFF (8u)


#define IFX_CAN_MO_DATAL_DB2_LEN (8u)


#define IFX_CAN_MO_DATAL_DB2_MSK (0xffu)


#define IFX_CAN_MO_DATAL_DB2_OFF (16u)


#define IFX_CAN_MO_DATAL_DB3_LEN (8u)


#define IFX_CAN_MO_DATAL_DB3_MSK (0xffu)


#define IFX_CAN_MO_DATAL_DB3_OFF (24u)


#define IFX_CAN_MO_EDATA0_DB0_LEN (8u)


#define IFX_CAN_MO_EDATA0_DB0_MSK (0xffu)


#define IFX_CAN_MO_EDATA0_DB0_OFF (0u)


#define IFX_CAN_MO_EDATA0_DB1_LEN (8u)


#define IFX_CAN_MO_EDATA0_DB1_MSK (0xffu)


#define IFX_CAN_MO_EDATA0_DB1_OFF (8u)


#define IFX_CAN_MO_EDATA0_DB2_LEN (8u)


#define IFX_CAN_MO_EDATA0_DB2_MSK (0xffu)


#define IFX_CAN_MO_EDATA0_DB2_OFF (16u)


#define IFX_CAN_MO_EDATA0_DB3_LEN (8u)


#define IFX_CAN_MO_EDATA0_DB3_MSK (0xffu)


#define IFX_CAN_MO_EDATA0_DB3_OFF (24u)


#define IFX_CAN_MO_EDATA1_DB0_LEN (8u)


#define IFX_CAN_MO_EDATA1_DB0_MSK (0xffu)


#define IFX_CAN_MO_EDATA1_DB0_OFF (0u)


#define IFX_CAN_MO_EDATA1_DB1_LEN (8u)


#define IFX_CAN_MO_EDATA1_DB1_MSK (0xffu)


#define IFX_CAN_MO_EDATA1_DB1_OFF (8u)


#define IFX_CAN_MO_EDATA1_DB2_LEN (8u)


#define IFX_CAN_MO_EDATA1_DB2_MSK (0xffu)


#define IFX_CAN_MO_EDATA1_DB2_OFF (16u)


#define IFX_CAN_MO_EDATA1_DB3_LEN (8u)


#define IFX_CAN_MO_EDATA1_DB3_MSK (0xffu)


#define IFX_CAN_MO_EDATA1_DB3_OFF (24u)


#define IFX_CAN_MO_EDATA2_DB0_LEN (8u)


#define IFX_CAN_MO_EDATA2_DB0_MSK (0xffu)


#define IFX_CAN_MO_EDATA2_DB0_OFF (0u)


#define IFX_CAN_MO_EDATA2_DB1_LEN (8u)


#define IFX_CAN_MO_EDATA2_DB1_MSK (0xffu)


#define IFX_CAN_MO_EDATA2_DB1_OFF (8u)


#define IFX_CAN_MO_EDATA2_DB2_LEN (8u)


#define IFX_CAN_MO_EDATA2_DB2_MSK (0xffu)


#define IFX_CAN_MO_EDATA2_DB2_OFF (16u)


#define IFX_CAN_MO_EDATA2_DB3_LEN (8u)


#define IFX_CAN_MO_EDATA2_DB3_MSK (0xffu)


#define IFX_CAN_MO_EDATA2_DB3_OFF (24u)


#define IFX_CAN_MO_EDATA3_DB0_LEN (8u)


#define IFX_CAN_MO_EDATA3_DB0_MSK (0xffu)


#define IFX_CAN_MO_EDATA3_DB0_OFF (0u)


#define IFX_CAN_MO_EDATA3_DB1_LEN (8u)


#define IFX_CAN_MO_EDATA3_DB1_MSK (0xffu)


#define IFX_CAN_MO_EDATA3_DB1_OFF (8u)


#define IFX_CAN_MO_EDATA3_DB2_LEN (8u)


#define IFX_CAN_MO_EDATA3_DB2_MSK (0xffu)


#define IFX_CAN_MO_EDATA3_DB2_OFF (16u)


#define IFX_CAN_MO_EDATA3_DB3_LEN (8u)


#define IFX_CAN_MO_EDATA3_DB3_MSK (0xffu)


#define IFX_CAN_MO_EDATA3_DB3_OFF (24u)


#define IFX_CAN_MO_EDATA4_DB0_LEN (8u)


#define IFX_CAN_MO_EDATA4_DB0_MSK (0xffu)


#define IFX_CAN_MO_EDATA4_DB0_OFF (0u)


#define IFX_CAN_MO_EDATA4_DB1_LEN (8u)


#define IFX_CAN_MO_EDATA4_DB1_MSK (0xffu)


#define IFX_CAN_MO_EDATA4_DB1_OFF (8u)


#define IFX_CAN_MO_EDATA4_DB2_LEN (8u)


#define IFX_CAN_MO_EDATA4_DB2_MSK (0xffu)


#define IFX_CAN_MO_EDATA4_DB2_OFF (16u)


#define IFX_CAN_MO_EDATA4_DB3_LEN (8u)


#define IFX_CAN_MO_EDATA4_DB3_MSK (0xffu)


#define IFX_CAN_MO_EDATA4_DB3_OFF (24u)


#define IFX_CAN_MO_EDATA5_DB0_LEN (8u)


#define IFX_CAN_MO_EDATA5_DB0_MSK (0xffu)


#define IFX_CAN_MO_EDATA5_DB0_OFF (0u)


#define IFX_CAN_MO_EDATA5_DB1_LEN (8u)


#define IFX_CAN_MO_EDATA5_DB1_MSK (0xffu)


#define IFX_CAN_MO_EDATA5_DB1_OFF (8u)


#define IFX_CAN_MO_EDATA5_DB2_LEN (8u)


#define IFX_CAN_MO_EDATA5_DB2_MSK (0xffu)


#define IFX_CAN_MO_EDATA5_DB2_OFF (16u)


#define IFX_CAN_MO_EDATA5_DB3_LEN (8u)


#define IFX_CAN_MO_EDATA5_DB3_MSK (0xffu)


#define IFX_CAN_MO_EDATA5_DB3_OFF (24u)


#define IFX_CAN_MO_EDATA6_DB0_LEN (8u)


#define IFX_CAN_MO_EDATA6_DB0_MSK (0xffu)


#define IFX_CAN_MO_EDATA6_DB0_OFF (0u)


#define IFX_CAN_MO_EDATA6_DB1_LEN (8u)


#define IFX_CAN_MO_EDATA6_DB1_MSK (0xffu)


#define IFX_CAN_MO_EDATA6_DB1_OFF (8u)


#define IFX_CAN_MO_EDATA6_DB2_LEN (8u)


#define IFX_CAN_MO_EDATA6_DB2_MSK (0xffu)


#define IFX_CAN_MO_EDATA6_DB2_OFF (16u)


#define IFX_CAN_MO_EDATA6_DB3_LEN (8u)


#define IFX_CAN_MO_EDATA6_DB3_MSK (0xffu)


#define IFX_CAN_MO_EDATA6_DB3_OFF (24u)


#define IFX_CAN_MO_FCR_BRS_LEN (1u)


#define IFX_CAN_MO_FCR_BRS_MSK (0x1u)


#define IFX_CAN_MO_FCR_BRS_OFF (5u)


#define IFX_CAN_MO_FCR_DATC_LEN (1u)


#define IFX_CAN_MO_FCR_DATC_MSK (0x1u)


#define IFX_CAN_MO_FCR_DATC_OFF (11u)


#define IFX_CAN_MO_FCR_DLC_LEN (4u)


#define IFX_CAN_MO_FCR_DLC_MSK (0xfu)


#define IFX_CAN_MO_FCR_DLC_OFF (24u)


#define IFX_CAN_MO_FCR_DLCC_LEN (1u)


#define IFX_CAN_MO_FCR_DLCC_MSK (0x1u)


#define IFX_CAN_MO_FCR_DLCC_OFF (10u)


#define IFX_CAN_MO_FCR_FDF_LEN (1u)


#define IFX_CAN_MO_FCR_FDF_MSK (0x1u)


#define IFX_CAN_MO_FCR_FDF_OFF (6u)


#define IFX_CAN_MO_FCR_FRREN_LEN (1u)


#define IFX_CAN_MO_FCR_FRREN_MSK (0x1u)


#define IFX_CAN_MO_FCR_FRREN_OFF (20u)


#define IFX_CAN_MO_FCR_GDFS_LEN (1u)


#define IFX_CAN_MO_FCR_GDFS_MSK (0x1u)


#define IFX_CAN_MO_FCR_GDFS_OFF (8u)


#define IFX_CAN_MO_FCR_IDC_LEN (1u)


#define IFX_CAN_MO_FCR_IDC_MSK (0x1u)


#define IFX_CAN_MO_FCR_IDC_OFF (9u)


#define IFX_CAN_MO_FCR_MMC_LEN (4u)


#define IFX_CAN_MO_FCR_MMC_MSK (0xfu)


#define IFX_CAN_MO_FCR_MMC_OFF (0u)


#define IFX_CAN_MO_FCR_OVIE_LEN (1u)


#define IFX_CAN_MO_FCR_OVIE_MSK (0x1u)


#define IFX_CAN_MO_FCR_OVIE_OFF (18u)


#define IFX_CAN_MO_FCR_RMM_LEN (1u)


#define IFX_CAN_MO_FCR_RMM_MSK (0x1u)


#define IFX_CAN_MO_FCR_RMM_OFF (21u)


#define IFX_CAN_MO_FCR_RXIE_LEN (1u)


#define IFX_CAN_MO_FCR_RXIE_MSK (0x1u)


#define IFX_CAN_MO_FCR_RXIE_OFF (16u)


#define IFX_CAN_MO_FCR_RXTOE_LEN (1u)


#define IFX_CAN_MO_FCR_RXTOE_MSK (0x1u)


#define IFX_CAN_MO_FCR_RXTOE_OFF (4u)


#define IFX_CAN_MO_FCR_SDT_LEN (1u)


#define IFX_CAN_MO_FCR_SDT_MSK (0x1u)


#define IFX_CAN_MO_FCR_SDT_OFF (22u)


#define IFX_CAN_MO_FCR_STT_LEN (1u)


#define IFX_CAN_MO_FCR_STT_MSK (0x1u)


#define IFX_CAN_MO_FCR_STT_OFF (23u)


#define IFX_CAN_MO_FCR_TXIE_LEN (1u)


#define IFX_CAN_MO_FCR_TXIE_MSK (0x1u)


#define IFX_CAN_MO_FCR_TXIE_OFF (17u)


#define IFX_CAN_MO_FGPR_BOT_LEN (8u)


#define IFX_CAN_MO_FGPR_BOT_MSK (0xffu)


#define IFX_CAN_MO_FGPR_BOT_OFF (0u)


#define IFX_CAN_MO_FGPR_CUR_LEN (8u)


#define IFX_CAN_MO_FGPR_CUR_MSK (0xffu)


#define IFX_CAN_MO_FGPR_CUR_OFF (16u)


#define IFX_CAN_MO_FGPR_SEL_LEN (8u)


#define IFX_CAN_MO_FGPR_SEL_MSK (0xffu)


#define IFX_CAN_MO_FGPR_SEL_OFF (24u)


#define IFX_CAN_MO_FGPR_TOP_LEN (8u)


#define IFX_CAN_MO_FGPR_TOP_MSK (0xffu)


#define IFX_CAN_MO_FGPR_TOP_OFF (8u)


#define IFX_CAN_MO_IPR_CFCVAL_LEN (16u)


#define IFX_CAN_MO_IPR_CFCVAL_MSK (0xffffu)


#define IFX_CAN_MO_IPR_CFCVAL_OFF (16u)


#define IFX_CAN_MO_IPR_MPN_LEN (8u)


#define IFX_CAN_MO_IPR_MPN_MSK (0xffu)


#define IFX_CAN_MO_IPR_MPN_OFF (8u)


#define IFX_CAN_MO_IPR_RXINP_LEN (4u)


#define IFX_CAN_MO_IPR_RXINP_MSK (0xfu)


#define IFX_CAN_MO_IPR_RXINP_OFF (0u)


#define IFX_CAN_MO_IPR_TXINP_LEN (4u)


#define IFX_CAN_MO_IPR_TXINP_MSK (0xfu)


#define IFX_CAN_MO_IPR_TXINP_OFF (4u)


#define IFX_CAN_MO_STAT_DIR_LEN (1u)


#define IFX_CAN_MO_STAT_DIR_MSK (0x1u)


#define IFX_CAN_MO_STAT_DIR_OFF (11u)


#define IFX_CAN_MO_STAT_LIST_LEN (4u)


#define IFX_CAN_MO_STAT_LIST_MSK (0xfu)


#define IFX_CAN_MO_STAT_LIST_OFF (12u)


#define IFX_CAN_MO_STAT_MSGLST_LEN (1u)


#define IFX_CAN_MO_STAT_MSGLST_MSK (0x1u)


#define IFX_CAN_MO_STAT_MSGLST_OFF (4u)


#define IFX_CAN_MO_STAT_MSGVAL_LEN (1u)


#define IFX_CAN_MO_STAT_MSGVAL_MSK (0x1u)


#define IFX_CAN_MO_STAT_MSGVAL_OFF (5u)


#define IFX_CAN_MO_STAT_NEWDAT_LEN (1u)


#define IFX_CAN_MO_STAT_NEWDAT_MSK (0x1u)


#define IFX_CAN_MO_STAT_NEWDAT_OFF (3u)


#define IFX_CAN_MO_STAT_PNEXT_LEN (8u)


#define IFX_CAN_MO_STAT_PNEXT_MSK (0xffu)


#define IFX_CAN_MO_STAT_PNEXT_OFF (24u)


#define IFX_CAN_MO_STAT_PPREV_LEN (8u)


#define IFX_CAN_MO_STAT_PPREV_MSK (0xffu)


#define IFX_CAN_MO_STAT_PPREV_OFF (16u)


#define IFX_CAN_MO_STAT_RTSEL_LEN (1u)


#define IFX_CAN_MO_STAT_RTSEL_MSK (0x1u)


#define IFX_CAN_MO_STAT_RTSEL_OFF (6u)


#define IFX_CAN_MO_STAT_RXEN_LEN (1u)


#define IFX_CAN_MO_STAT_RXEN_MSK (0x1u)


#define IFX_CAN_MO_STAT_RXEN_OFF (7u)


#define IFX_CAN_MO_STAT_RXPND_LEN (1u)


#define IFX_CAN_MO_STAT_RXPND_MSK (0x1u)


#define IFX_CAN_MO_STAT_RXPND_OFF (0u)


#define IFX_CAN_MO_STAT_RXUPD_LEN (1u)


#define IFX_CAN_MO_STAT_RXUPD_MSK (0x1u)


#define IFX_CAN_MO_STAT_RXUPD_OFF (2u)


#define IFX_CAN_MO_STAT_TXEN0_LEN (1u)


#define IFX_CAN_MO_STAT_TXEN0_MSK (0x1u)


#define IFX_CAN_MO_STAT_TXEN0_OFF (9u)


#define IFX_CAN_MO_STAT_TXEN1_LEN (1u)


#define IFX_CAN_MO_STAT_TXEN1_MSK (0x1u)


#define IFX_CAN_MO_STAT_TXEN1_OFF (10u)


#define IFX_CAN_MO_STAT_TXPND_LEN (1u)


#define IFX_CAN_MO_STAT_TXPND_MSK (0x1u)


#define IFX_CAN_MO_STAT_TXPND_OFF (1u)


#define IFX_CAN_MO_STAT_TXRQ_LEN (1u)


#define IFX_CAN_MO_STAT_TXRQ_MSK (0x1u)


#define IFX_CAN_MO_STAT_TXRQ_OFF (8u)


#define IFX_CAN_MSID_INDEX_LEN (6u)


#define IFX_CAN_MSID_INDEX_MSK (0x3fu)


#define IFX_CAN_MSID_INDEX_OFF (0u)


#define IFX_CAN_MSIMASK_IM_LEN (32u)


#define IFX_CAN_MSIMASK_IM_MSK (0xffffffffu)


#define IFX_CAN_MSIMASK_IM_OFF (0u)


#define IFX_CAN_MSPND_PND_LEN (32u)


#define IFX_CAN_MSPND_PND_MSK (0xffffffffu)


#define IFX_CAN_MSPND_PND_OFF (0u)


#define IFX_CAN_N_BTEVR_BRP_LEN (6u)


#define IFX_CAN_N_BTEVR_BRP_MSK (0x3fu)


#define IFX_CAN_N_BTEVR_BRP_OFF (0u)


#define IFX_CAN_N_BTEVR_DIV8_LEN (1u)


#define IFX_CAN_N_BTEVR_DIV8_MSK (0x1u)


#define IFX_CAN_N_BTEVR_DIV8_OFF (15u)


#define IFX_CAN_N_BTEVR_SJW_LEN (4u)


#define IFX_CAN_N_BTEVR_SJW_MSK (0xfu)


#define IFX_CAN_N_BTEVR_SJW_OFF (8u)


#define IFX_CAN_N_BTEVR_TSEG1_LEN (6u)


#define IFX_CAN_N_BTEVR_TSEG1_MSK (0x3fu)


#define IFX_CAN_N_BTEVR_TSEG1_OFF (22u)


#define IFX_CAN_N_BTEVR_TSEG2_LEN (5u)


#define IFX_CAN_N_BTEVR_TSEG2_MSK (0x1fu)


#define IFX_CAN_N_BTEVR_TSEG2_OFF (16u)


#define IFX_CAN_N_BTR_BRP_LEN (6u)


#define IFX_CAN_N_BTR_BRP_MSK (0x3fu)


#define IFX_CAN_N_BTR_BRP_OFF (0u)


#define IFX_CAN_N_BTR_DIV8_LEN (1u)


#define IFX_CAN_N_BTR_DIV8_MSK (0x1u)


#define IFX_CAN_N_BTR_DIV8_OFF (15u)


#define IFX_CAN_N_BTR_SJW_LEN (2u)


#define IFX_CAN_N_BTR_SJW_MSK (0x3u)


#define IFX_CAN_N_BTR_SJW_OFF (6u)


#define IFX_CAN_N_BTR_TSEG1_LEN (4u)


#define IFX_CAN_N_BTR_TSEG1_MSK (0xfu)


#define IFX_CAN_N_BTR_TSEG1_OFF (8u)


#define IFX_CAN_N_BTR_TSEG2_LEN (3u)


#define IFX_CAN_N_BTR_TSEG2_MSK (0x7u)


#define IFX_CAN_N_BTR_TSEG2_OFF (12u)


#define IFX_CAN_N_CR_ALIE_LEN (1u)


#define IFX_CAN_N_CR_ALIE_MSK (0x1u)


#define IFX_CAN_N_CR_ALIE_OFF (3u)


#define IFX_CAN_N_CR_CALM_LEN (1u)


#define IFX_CAN_N_CR_CALM_MSK (0x1u)


#define IFX_CAN_N_CR_CALM_OFF (7u)


#define IFX_CAN_N_CR_CANDIS_LEN (1u)


#define IFX_CAN_N_CR_CANDIS_MSK (0x1u)


#define IFX_CAN_N_CR_CANDIS_OFF (4u)


#define IFX_CAN_N_CR_CCE_LEN (1u)


#define IFX_CAN_N_CR_CCE_MSK (0x1u)


#define IFX_CAN_N_CR_CCE_OFF (6u)


#define IFX_CAN_N_CR_FDEN_LEN (1u)


#define IFX_CAN_N_CR_FDEN_MSK (0x1u)


#define IFX_CAN_N_CR_FDEN_OFF (9u)


#define IFX_CAN_N_CR_INIT_LEN (1u)


#define IFX_CAN_N_CR_INIT_MSK (0x1u)


#define IFX_CAN_N_CR_INIT_OFF (0u)


#define IFX_CAN_N_CR_LECIE_LEN (1u)


#define IFX_CAN_N_CR_LECIE_MSK (0x1u)


#define IFX_CAN_N_CR_LECIE_OFF (2u)


#define IFX_CAN_N_CR_SUSEN_LEN (1u)


#define IFX_CAN_N_CR_SUSEN_MSK (0x1u)


#define IFX_CAN_N_CR_SUSEN_OFF (8u)


#define IFX_CAN_N_CR_TRIE_LEN (1u)


#define IFX_CAN_N_CR_TRIE_MSK (0x1u)


#define IFX_CAN_N_CR_TRIE_OFF (1u)


#define IFX_CAN_N_CR_TXDIS_LEN (1u)


#define IFX_CAN_N_CR_TXDIS_MSK (0x1u)


#define IFX_CAN_N_CR_TXDIS_OFF (5u)


#define IFX_CAN_N_ECNT_EWRNLVL_LEN (8u)


#define IFX_CAN_N_ECNT_EWRNLVL_MSK (0xffu)


#define IFX_CAN_N_ECNT_EWRNLVL_OFF (16u)


#define IFX_CAN_N_ECNT_LEINC_LEN (1u)


#define IFX_CAN_N_ECNT_LEINC_MSK (0x1u)


#define IFX_CAN_N_ECNT_LEINC_OFF (25u)


#define IFX_CAN_N_ECNT_LETD_LEN (1u)


#define IFX_CAN_N_ECNT_LETD_MSK (0x1u)


#define IFX_CAN_N_ECNT_LETD_OFF (24u)


#define IFX_CAN_N_ECNT_REC_LEN (8u)


#define IFX_CAN_N_ECNT_REC_MSK (0xffu)


#define IFX_CAN_N_ECNT_REC_OFF (0u)


#define IFX_CAN_N_ECNT_TEC_LEN (8u)


#define IFX_CAN_N_ECNT_TEC_MSK (0xffu)


#define IFX_CAN_N_ECNT_TEC_OFF (8u)


#define IFX_CAN_N_FBTR_FBRP_LEN (6u)


#define IFX_CAN_N_FBTR_FBRP_MSK (0x3fu)


#define IFX_CAN_N_FBTR_FBRP_OFF (0u)


#define IFX_CAN_N_FBTR_FSJW_LEN (2u)


#define IFX_CAN_N_FBTR_FSJW_MSK (0x3u)


#define IFX_CAN_N_FBTR_FSJW_OFF (6u)


#define IFX_CAN_N_FBTR_FTSEG1_LEN (4u)


#define IFX_CAN_N_FBTR_FTSEG1_MSK (0xfu)


#define IFX_CAN_N_FBTR_FTSEG1_OFF (8u)


#define IFX_CAN_N_FBTR_FTSEG2_LEN (3u)


#define IFX_CAN_N_FBTR_FTSEG2_MSK (0x7u)


#define IFX_CAN_N_FBTR_FTSEG2_OFF (12u)


#define IFX_CAN_N_FCR_CFC_LEN (16u)


#define IFX_CAN_N_FCR_CFC_MSK (0xffffu)


#define IFX_CAN_N_FCR_CFC_OFF (0u)


#define IFX_CAN_N_FCR_CFCIE_LEN (1u)


#define IFX_CAN_N_FCR_CFCIE_MSK (0x1u)


#define IFX_CAN_N_FCR_CFCIE_OFF (22u)


#define IFX_CAN_N_FCR_CFCOV_LEN (1u)


#define IFX_CAN_N_FCR_CFCOV_MSK (0x1u)


#define IFX_CAN_N_FCR_CFCOV_OFF (23u)


#define IFX_CAN_N_FCR_CFMOD_LEN (2u)


#define IFX_CAN_N_FCR_CFMOD_MSK (0x3u)


#define IFX_CAN_N_FCR_CFMOD_OFF (19u)


#define IFX_CAN_N_FCR_CFSEL_LEN (3u)


#define IFX_CAN_N_FCR_CFSEL_MSK (0x7u)


#define IFX_CAN_N_FCR_CFSEL_OFF (16u)


#define IFX_CAN_N_IPR_ALINP_LEN (4u)


#define IFX_CAN_N_IPR_ALINP_MSK (0xfu)


#define IFX_CAN_N_IPR_ALINP_OFF (0u)


#define IFX_CAN_N_IPR_CFCINP_LEN (4u)


#define IFX_CAN_N_IPR_CFCINP_MSK (0xfu)


#define IFX_CAN_N_IPR_CFCINP_OFF (12u)


#define IFX_CAN_N_IPR_LECINP_LEN (4u)


#define IFX_CAN_N_IPR_LECINP_MSK (0xfu)


#define IFX_CAN_N_IPR_LECINP_OFF (4u)


#define IFX_CAN_N_IPR_TEINP_LEN (4u)


#define IFX_CAN_N_IPR_TEINP_MSK (0xfu)


#define IFX_CAN_N_IPR_TEINP_OFF (16u)


#define IFX_CAN_N_IPR_TRINP_LEN (4u)


#define IFX_CAN_N_IPR_TRINP_MSK (0xfu)


#define IFX_CAN_N_IPR_TRINP_OFF (8u)


#define IFX_CAN_N_PCR_LBM_LEN (1u)


#define IFX_CAN_N_PCR_LBM_MSK (0x1u)


#define IFX_CAN_N_PCR_LBM_OFF (8u)


#define IFX_CAN_N_PCR_RXSEL_LEN (3u)


#define IFX_CAN_N_PCR_RXSEL_MSK (0x7u)


#define IFX_CAN_N_PCR_RXSEL_OFF (0u)


#define IFX_CAN_N_SR_ALERT_LEN (1u)


#define IFX_CAN_N_SR_ALERT_MSK (0x1u)


#define IFX_CAN_N_SR_ALERT_OFF (5u)


#define IFX_CAN_N_SR_BOFF_LEN (1u)


#define IFX_CAN_N_SR_BOFF_MSK (0x1u)


#define IFX_CAN_N_SR_BOFF_OFF (7u)


#define IFX_CAN_N_SR_EWRN_LEN (1u)


#define IFX_CAN_N_SR_EWRN_MSK (0x1u)


#define IFX_CAN_N_SR_EWRN_OFF (6u)


#define IFX_CAN_N_SR_FLEC_LEN (3u)


#define IFX_CAN_N_SR_FLEC_MSK (0x7u)


#define IFX_CAN_N_SR_FLEC_OFF (12u)


#define IFX_CAN_N_SR_LEC_LEN (3u)


#define IFX_CAN_N_SR_LEC_MSK (0x7u)


#define IFX_CAN_N_SR_LEC_OFF (0u)


#define IFX_CAN_N_SR_LLE_LEN (1u)


#define IFX_CAN_N_SR_LLE_MSK (0x1u)


#define IFX_CAN_N_SR_LLE_OFF (8u)


#define IFX_CAN_N_SR_LOE_LEN (1u)


#define IFX_CAN_N_SR_LOE_MSK (0x1u)


#define IFX_CAN_N_SR_LOE_OFF (9u)


#define IFX_CAN_N_SR_RESI_LEN (1u)


#define IFX_CAN_N_SR_RESI_MSK (0x1u)


#define IFX_CAN_N_SR_RESI_OFF (11u)


#define IFX_CAN_N_SR_RXOK_LEN (1u)


#define IFX_CAN_N_SR_RXOK_MSK (0x1u)


#define IFX_CAN_N_SR_RXOK_OFF (4u)


#define IFX_CAN_N_SR_SUSACK_LEN (1u)


#define IFX_CAN_N_SR_SUSACK_MSK (0x1u)


#define IFX_CAN_N_SR_SUSACK_OFF (10u)


#define IFX_CAN_N_SR_TXOK_LEN (1u)


#define IFX_CAN_N_SR_TXOK_MSK (0x1u)


#define IFX_CAN_N_SR_TXOK_OFF (3u)


#define IFX_CAN_N_TCCR_TPSC_LEN (4u)


#define IFX_CAN_N_TCCR_TPSC_MSK (0xfu)


#define IFX_CAN_N_TCCR_TPSC_OFF (8u)


#define IFX_CAN_N_TCCR_TRIGSRC_LEN (3u)


#define IFX_CAN_N_TCCR_TRIGSRC_MSK (0x7u)


#define IFX_CAN_N_TCCR_TRIGSRC_OFF (18u)


#define IFX_CAN_N_TDCR_TDC_LEN (1u)


#define IFX_CAN_N_TDCR_TDC_MSK (0x1u)


#define IFX_CAN_N_TDCR_TDC_OFF (15u)


#define IFX_CAN_N_TDCR_TDCO_LEN (4u)


#define IFX_CAN_N_TDCR_TDCO_MSK (0xfu)


#define IFX_CAN_N_TDCR_TDCO_OFF (8u)


#define IFX_CAN_N_TDCR_TDCV_LEN (5u)


#define IFX_CAN_N_TDCR_TDCV_MSK (0x1fu)


#define IFX_CAN_N_TDCR_TDCV_OFF (0u)


#define IFX_CAN_N_TRTR_RELOAD_LEN (16u)


#define IFX_CAN_N_TRTR_RELOAD_MSK (0xffffu)


#define IFX_CAN_N_TRTR_RELOAD_OFF (0u)


#define IFX_CAN_N_TRTR_TE_LEN (1u)


#define IFX_CAN_N_TRTR_TE_MSK (0x1u)


#define IFX_CAN_N_TRTR_TE_OFF (23u)


#define IFX_CAN_N_TRTR_TEIE_LEN (1u)


#define IFX_CAN_N_TRTR_TEIE_MSK (0x1u)


#define IFX_CAN_N_TRTR_TEIE_OFF (22u)


#define IFX_CAN_N_TTTR_RELOAD_LEN (16u)


#define IFX_CAN_N_TTTR_RELOAD_MSK (0xffffu)


#define IFX_CAN_N_TTTR_RELOAD_OFF (0u)


#define IFX_CAN_N_TTTR_STRT_LEN (1u)


#define IFX_CAN_N_TTTR_STRT_MSK (0x1u)


#define IFX_CAN_N_TTTR_STRT_OFF (24u)


#define IFX_CAN_N_TTTR_TXMO_LEN (8u)


#define IFX_CAN_N_TTTR_TXMO_MSK (0xffu)


#define IFX_CAN_N_TTTR_TXMO_OFF (16u)


#define IFX_CAN_OCS_SUS_LEN (4u)


#define IFX_CAN_OCS_SUS_MSK (0xfu)


#define IFX_CAN_OCS_SUS_OFF (24u)


#define IFX_CAN_OCS_SUS_P_LEN (1u)


#define IFX_CAN_OCS_SUS_P_MSK (0x1u)


#define IFX_CAN_OCS_SUS_P_OFF (28u)


#define IFX_CAN_OCS_SUSSTA_LEN (1u)


#define IFX_CAN_OCS_SUSSTA_MSK (0x1u)


#define IFX_CAN_OCS_SUSSTA_OFF (29u)


#define IFX_CAN_OCS_TG_P_LEN (1u)


#define IFX_CAN_OCS_TG_P_MSK (0x1u)


#define IFX_CAN_OCS_TG_P_OFF (3u)


#define IFX_CAN_OCS_TGB_LEN (1u)


#define IFX_CAN_OCS_TGB_MSK (0x1u)


#define IFX_CAN_OCS_TGB_OFF (2u)


#define IFX_CAN_OCS_TGS_LEN (2u)


#define IFX_CAN_OCS_TGS_MSK (0x3u)


#define IFX_CAN_OCS_TGS_OFF (0u)


#define IFX_CAN_PANCTR_BUSY_LEN (1u)


#define IFX_CAN_PANCTR_BUSY_MSK (0x1u)


#define IFX_CAN_PANCTR_BUSY_OFF (8u)


#define IFX_CAN_PANCTR_PANAR1_LEN (8u)


#define IFX_CAN_PANCTR_PANAR1_MSK (0xffu)


#define IFX_CAN_PANCTR_PANAR1_OFF (16u)


#define IFX_CAN_PANCTR_PANAR2_LEN (8u)


#define IFX_CAN_PANCTR_PANAR2_MSK (0xffu)


#define IFX_CAN_PANCTR_PANAR2_OFF (24u)


#define IFX_CAN_PANCTR_PANCMD_LEN (8u)


#define IFX_CAN_PANCTR_PANCMD_MSK (0xffu)


#define IFX_CAN_PANCTR_PANCMD_OFF (0u)


#define IFX_CAN_PANCTR_RBUSY_LEN (1u)


#define IFX_CAN_PANCTR_RBUSY_MSK (0x1u)


#define IFX_CAN_PANCTR_RBUSY_OFF (9u)
# 69 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxmultican.h" 2 3
# 79 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxmultican.h" 3
typedef sint32 IfxMultican_MsgObjId;
# 89 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxmultican.h" 3
typedef enum
{
    IfxMultican_ClockSelect_noClock = 0,
    IfxMultican_ClockSelect_fclc = 1,
    IfxMultican_ClockSelect_fosc0 = 2,
    IfxMultican_ClockSelect_fErayPll = 4
} IfxMultican_ClockSelect;




typedef enum
{
    IfxMultican_DataLengthCode_0 = 0,
    IfxMultican_DataLengthCode_1,
    IfxMultican_DataLengthCode_2,
    IfxMultican_DataLengthCode_3,
    IfxMultican_DataLengthCode_4,
    IfxMultican_DataLengthCode_5,
    IfxMultican_DataLengthCode_6,
    IfxMultican_DataLengthCode_7,
    IfxMultican_DataLengthCode_8,
    IfxMultican_DataLengthCode_12 = 9,
    IfxMultican_DataLengthCode_16 = 10,
    IfxMultican_DataLengthCode_20 = 11,
    IfxMultican_DataLengthCode_24 = 12,
    IfxMultican_DataLengthCode_32 = 13,
    IfxMultican_DataLengthCode_48 = 14,
    IfxMultican_DataLengthCode_64 = 15
} IfxMultican_DataLengthCode;



typedef enum
{
    IfxMultican_Frame_receive,
    IfxMultican_Frame_transmit,
    IfxMultican_Frame_remoteRequest,
    IfxMultican_Frame_remoteAnswer
} IfxMultican_Frame;




typedef enum
{
    IfxMultican_FrameCounterMode_frameCountMode = 0,

    IfxMultican_FrameCounterMode_timeStampMode = 1,

    IfxMultican_FrameCounterMode_bitTimingMode = 2,

    IfxMultican_FrameCounterMode_errorCountMode = 3


} IfxMultican_FrameCounterMode;




typedef enum
{
    IfxMultican_MsgObjGroup_0 = 0,
    IfxMultican_MsgObjGroup_1,
    IfxMultican_MsgObjGroup_2,
    IfxMultican_MsgObjGroup_3,
    IfxMultican_MsgObjGroup_4,
    IfxMultican_MsgObjGroup_5,
    IfxMultican_MsgObjGroup_6,
    IfxMultican_MsgObjGroup_7
} IfxMultican_MsgObjGroup;



typedef enum
{
    IfxMultican_MsgObjMode_standard = 0,
    IfxMultican_MsgObjMode_receiveFifoBase = 1,
    IfxMultican_MsgObjMode_transmitFifoBase = 2,
    IfxMultican_MsgObjMode_transmitFifoSlave = 3,
    IfxMultican_MsgObjMode_gatewaySource = 4,
    IfxMultican_MsgObjMode_canFD64 = 5
} IfxMultican_MsgObjMode;




typedef enum
{
    IfxMultican_MsgObjStatusFlag_receivePending = (0u),
    IfxMultican_MsgObjStatusFlag_transmitPending = (1u),
    IfxMultican_MsgObjStatusFlag_receiveUpdating = (2u),
    IfxMultican_MsgObjStatusFlag_newData = (3u),
    IfxMultican_MsgObjStatusFlag_messageLost = (4u),
    IfxMultican_MsgObjStatusFlag_messageValid = (5u),
    IfxMultican_MsgObjStatusFlag_receiveTransmitSelected = (6u),
    IfxMultican_MsgObjStatusFlag_receiveEnable = (7u),
    IfxMultican_MsgObjStatusFlag_transmitRequest = (8u),
    IfxMultican_MsgObjStatusFlag_transmitEnable0 = (9u),
    IfxMultican_MsgObjStatusFlag_transmitEnable1 = (10u),
    IfxMultican_MsgObjStatusFlag_messageDirection = (11u)
} IfxMultican_MsgObjStatusFlag;



typedef enum
{
    IfxMultican_Priority_ListOrder = 1,
    IfxMultican_Priority_CAN_ID = 2
} IfxMultican_Priority;




typedef enum
{
    IfxMultican_SleepMode_enable = 0,
    IfxMultican_SleepMode_disable = 1
} IfxMultican_SleepMode;



typedef enum
{
    IfxMultican_Status_ok = 0x00000000,
    IfxMultican_Status_notInitialised = 0x00000001,
    IfxMultican_Status_wrongParam = 0x00000002,
    IfxMultican_Status_wrongPin = 0x00000004,
    IfxMultican_Status_busHeavy = 0x00000008,
    IfxMultican_Status_busOff = 0x00000010,
    IfxMultican_Status_notSentBusy = 0x00000020,
    IfxMultican_Status_receiveEmpty = 0x00000040,
    IfxMultican_Status_messageLost = 0x00000080,
    IfxMultican_Status_newData = 0x00000100,
    IfxMultican_Status_newDataButOneLost = IfxMultican_Status_messageLost | IfxMultican_Status_newData
} IfxMultican_Status;



typedef enum
{
    IfxMultican_SuspendMode_none = 0,
    IfxMultican_SuspendMode_hard = 1,
    IfxMultican_SuspendMode_soft = 2
} IfxMultican_SuspendMode;
# 243 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxmultican.h" 3
typedef struct
{
    uint32 id;
    IfxMultican_DataLengthCode lengthCode;
    uint32 data[2];
    boolean fastBitRate;
} IfxMultican_Message;



typedef union
{
    Ifx_CAN_MO_STAT_Bits B;
    unsigned int U;
} IfxMultican_MsgObjStat;
# 270 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxmultican.h" 3
static inline __attribute__ ((always_inline)) void IfxMultican_clearMessagePendingSeletor(Ifx_CAN *mcan);






static inline __attribute__ ((always_inline)) void IfxMultican_clearPendingMessageNotification(Ifx_CAN *mcan, uint16 list);





static inline __attribute__ ((always_inline)) void IfxMultican_disableModule(Ifx_CAN *mcan);





static inline __attribute__ ((always_inline)) void IfxMultican_disableSleepMode(Ifx_CAN *mcan);





static inline __attribute__ ((always_inline)) void IfxMultican_enableModule(Ifx_CAN *mcan);





static inline __attribute__ ((always_inline)) void IfxMultican_enableSleepMode(Ifx_CAN *mcan);





static inline __attribute__ ((always_inline)) uint16 IfxMultican_getFractionalDividerMode(Ifx_CAN *mcan);





static inline __attribute__ ((always_inline)) uint16 IfxMultican_getFractionalDividerStepValue(Ifx_CAN *mcan);





static inline __attribute__ ((always_inline)) IfxMultican_ClockSelect IfxMultican_getInputClock(Ifx_CAN *mcan);





static inline __attribute__ ((always_inline)) boolean IfxMultican_isModuleEnabled(Ifx_CAN *mcan);






static inline __attribute__ ((always_inline)) void IfxMultican_setFractionalDividerMode(Ifx_CAN *mcan, uint16 mode);






static inline __attribute__ ((always_inline)) void IfxMultican_setFractionalDividerStepValue(Ifx_CAN *mcan, uint16 stepValue);






static inline __attribute__ ((always_inline)) void IfxMultican_setInputClock(Ifx_CAN *mcan, IfxMultican_ClockSelect clockSelect);






static inline __attribute__ ((always_inline)) void IfxMultican_setMessageIndexMask(Ifx_CAN *mcan, uint32 mask);






static inline __attribute__ ((always_inline)) void IfxMultican_setSleepMode(Ifx_CAN *can, IfxMultican_SleepMode mode);





static inline __attribute__ ((always_inline)) void IfxMultican_waitListReady(Ifx_CAN *mcan);







static inline __attribute__ ((always_inline)) boolean IfxMultican_isModuleSuspended(Ifx_CAN *mcan);







static inline __attribute__ ((always_inline)) void IfxMultican_setSuspendMode(Ifx_CAN *mcan, IfxMultican_SuspendMode mode);
# 397 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxmultican.h" 3
extern void IfxMultican_Node_setFastBitTiming(Ifx_CAN_N *hwNode, float32 moduleFreq, uint32 baudrate, uint16 samplePoint, uint16 synchJumpWidth);
# 408 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxmultican.h" 3
extern void IfxMultican_Node_setNominalBitTiming(Ifx_CAN_N *hwNode, float32 moduleFreq, uint32 baudrate, uint16 samplePoint, uint16 synchJumpWidth);






extern void IfxMultican_deinit(Ifx_CAN *mcan);





extern void IfxMultican_resetModule(Ifx_CAN *can);
# 430 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxmultican.h" 3
extern void IfxMultican_setListCommand(Ifx_CAN *mcan, uint32 cmd, uint32 arg2, uint32 arg1);




extern IfxMultican_Index IfxMultican_getIndex(Ifx_CAN *multican);





extern Ifx_CAN *IfxMultican_getAddress(IfxMultican_Index multican);
# 456 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxmultican.h" 3
static inline __attribute__ ((always_inline)) void IfxMultican_Node_activate(Ifx_CAN_N *hwNode);





static inline __attribute__ ((always_inline)) void IfxMultican_Node_deactivate(Ifx_CAN_N *hwNode);





static inline __attribute__ ((always_inline)) void IfxMultican_Node_disableConfigurationChange(Ifx_CAN_N *hwNode);





static inline __attribute__ ((always_inline)) void IfxMultican_Node_enableConfigurationChange(Ifx_CAN_N *hwNode);






static inline __attribute__ ((always_inline)) Ifx_CAN_N *IfxMultican_Node_getPointer(Ifx_CAN *mcan, IfxMultican_NodeId node);





static inline __attribute__ ((always_inline)) void IfxMultican_Node_resetControlRegister(Ifx_CAN_N *hwNode);





static inline __attribute__ ((always_inline)) void IfxMultican_Node_resetErrorCounters(Ifx_CAN_N *hwNode);





static inline __attribute__ ((always_inline)) void IfxMultican_Node_resetInterruptPointers(Ifx_CAN_N *hwNode);






static inline __attribute__ ((always_inline)) void IfxMultican_Node_setAlertInterrupt(Ifx_CAN_N *hwNode, boolean enabled);







static inline __attribute__ ((always_inline)) void IfxMultican_Node_setAlertInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);






static inline __attribute__ ((always_inline)) void IfxMultican_Node_setAnalyzerMode(Ifx_CAN_N *hwNode, boolean mode);







static inline __attribute__ ((always_inline)) void IfxMultican_Node_setErrorWarningLevel(Ifx_CAN_N *hwNode, uint8 level);






static inline __attribute__ ((always_inline)) void IfxMultican_Node_setFastNode(Ifx_CAN_N *hwNode, boolean enabled);






static inline __attribute__ ((always_inline)) void IfxMultican_Node_setFrameCounterInterrupt(Ifx_CAN_N *hwNode, boolean enabled);







static inline __attribute__ ((always_inline)) void IfxMultican_Node_setFrameCounterInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);






static inline __attribute__ ((always_inline)) void IfxMultican_Node_setFrameCounterMode(Ifx_CAN_N *hwNode, IfxMultican_FrameCounterMode mode);







static inline __attribute__ ((always_inline)) void IfxMultican_Node_setLastErrorCodeInterrupt(Ifx_CAN_N *hwNode, boolean enabled);







static inline __attribute__ ((always_inline)) void IfxMultican_Node_setLastErrorCodeInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);






static inline __attribute__ ((always_inline)) void IfxMultican_Node_setLoopBackMode(Ifx_CAN_N *hwNode, boolean mode);






static inline __attribute__ ((always_inline)) void IfxMultican_Node_setReceiveErrorCounter(Ifx_CAN_N *hwNode, uint8 value);







static inline __attribute__ ((always_inline)) void IfxMultican_Node_setTimerEventInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);






static inline __attribute__ ((always_inline)) void IfxMultican_Node_setTransceiverDelayCompensation(Ifx_CAN_N *hwNode, boolean enabled);






static inline __attribute__ ((always_inline)) void IfxMultican_Node_setTransceiverDelayCompensationOffset(Ifx_CAN_N *hwNode, uint16 value);







static inline __attribute__ ((always_inline)) void IfxMultican_Node_setTransferInterrupt(Ifx_CAN_N *hwNode, boolean enabled);







static inline __attribute__ ((always_inline)) void IfxMultican_Node_setTransferInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId);






static inline __attribute__ ((always_inline)) void IfxMultican_Node_setTransmitErrorCounter(Ifx_CAN_N *hwNode, uint8 value);





static inline __attribute__ ((always_inline)) IfxMultican_DataLengthCode IfxMultican_Node_getCodeFromDataLength(uint32 dataLength);





static inline __attribute__ ((always_inline)) uint32 IfxMultican_Node_getDataLengthFromCode(IfxMultican_DataLengthCode code);
# 655 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxmultican.h" 3
extern void IfxMultican_Node_deinit(Ifx_CAN_N *hwNode);
# 664 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxmultican.h" 3
extern boolean IfxMultican_Node_initRxPin(Ifx_CAN_N *hwNode, IfxMultican_Rxd_In *rxd, IfxPort_InputMode mode, IfxPort_PadDriver padDriver);
# 673 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxmultican.h" 3
extern boolean IfxMultican_Node_initTxPin(Ifx_CAN_N *hwNode, IfxMultican_Txd_Out *txd, IfxPort_OutputMode mode, IfxPort_PadDriver padDriver);





extern IfxMultican_Status IfxMultican_Node_recoverBusOff(Ifx_CAN_N *hwNode);
# 690 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxmultican.h" 3
extern void IfxMultican_Node_setBitTiming(Ifx_CAN_N *hwNode, float32 moduleFreq, uint32 baudrate, uint16 samplePoint, uint16 synchJumpWidth);
# 700 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxmultican.h" 3
extern void IfxMultican_calcTimingFromBTR(float32 moduleFreq, uint32 btr, uint32 *baudrate, uint16 *samplePoint, uint16 *synchJumpWidth);
# 719 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxmultican.h" 3
static inline __attribute__ ((always_inline)) void IfxMultican_Message_init(IfxMultican_Message *msg, uint32 id, uint32 dataLow, uint32 dataHigh, IfxMultican_DataLengthCode lengthCode);
# 728 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxmultican.h" 3
static inline __attribute__ ((always_inline)) void IfxMultican_Message_longFrameInit(IfxMultican_Message *msg, uint32 id, IfxMultican_DataLengthCode lengthCode, boolean fastBitRate);
# 743 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxmultican.h" 3
static inline __attribute__ ((always_inline)) void IfxMultican_MsgObj_clearDataRegisters(Ifx_CAN_MO *hwObj);





static inline __attribute__ ((always_inline)) void IfxMultican_MsgObj_clearFifoGatewayPointers(Ifx_CAN_MO *hwObj);





static inline __attribute__ ((always_inline)) void IfxMultican_MsgObj_clearRxPending(Ifx_CAN_MO *hwObj);





static inline __attribute__ ((always_inline)) void IfxMultican_MsgObj_clearTxPending(Ifx_CAN_MO *hwObj);





static inline __attribute__ ((always_inline)) IfxMultican_MsgObjId IfxMultican_MsgObj_getBottomObjectPointer(Ifx_CAN_MO *hwObj);





static inline __attribute__ ((always_inline)) IfxMultican_DataLengthCode IfxMultican_MsgObj_getDataLengthCode(Ifx_CAN_MO *hwObj);





static inline __attribute__ ((always_inline)) uint32 IfxMultican_MsgObj_getMessageId(Ifx_CAN_MO *hwObj);





static inline __attribute__ ((always_inline)) IfxMultican_MsgObjId IfxMultican_MsgObj_getNextObjectPointer(Ifx_CAN_MO *hwObj);






static inline __attribute__ ((always_inline)) Ifx_CAN_MO *IfxMultican_MsgObj_getPointer(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId);






static inline __attribute__ ((always_inline)) boolean IfxMultican_MsgObj_isExtendedFrame(Ifx_CAN_MO *hwObj);





static inline __attribute__ ((always_inline)) boolean IfxMultican_MsgObj_isRxPending(Ifx_CAN_MO *hwObj);





static inline __attribute__ ((always_inline)) boolean IfxMultican_MsgObj_isTransmitRequested(Ifx_CAN_MO *hwObj);





static inline __attribute__ ((always_inline)) boolean IfxMultican_MsgObj_isTxPending(Ifx_CAN_MO *hwObj);







static inline __attribute__ ((always_inline)) void IfxMultican_MsgObj_setAcceptanceMask(Ifx_CAN_MO *hwObj, uint32 mask, boolean extendedFrame);






static inline __attribute__ ((always_inline)) void IfxMultican_MsgObj_setBitRateSwitch(Ifx_CAN_MO *hwObj, boolean enabled);






static inline __attribute__ ((always_inline)) void IfxMultican_MsgObj_setBottomObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);






static inline __attribute__ ((always_inline)) void IfxMultican_MsgObj_setCurrentObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);






static inline __attribute__ ((always_inline)) void IfxMultican_MsgObj_setDataCopy(Ifx_CAN_MO *hwObj, boolean enabled);






static inline __attribute__ ((always_inline)) void IfxMultican_MsgObj_setDataLengthCode(Ifx_CAN_MO *hwObj, IfxMultican_DataLengthCode code);






static inline __attribute__ ((always_inline)) void IfxMultican_MsgObj_setDataLengthCodeCopy(Ifx_CAN_MO *hwObj, boolean enabled);






static inline __attribute__ ((always_inline)) void IfxMultican_MsgObj_setExtendedDataLength(Ifx_CAN_MO *hwObj, boolean enabled);







static inline __attribute__ ((always_inline)) void IfxMultican_MsgObj_setGatewayDataFrameSend(Ifx_CAN_MO *hwObj, boolean enabled);






static inline __attribute__ ((always_inline)) void IfxMultican_MsgObj_setIdentifierCopy(Ifx_CAN_MO *hwObj, boolean enabled);






static inline __attribute__ ((always_inline)) void IfxMultican_MsgObj_setIdentifierExtension(Ifx_CAN_MO *hwObj, boolean extension);






static inline __attribute__ ((always_inline)) void IfxMultican_MsgObj_setMatchingId(Ifx_CAN_MO *hwObj, boolean matchingId);







static inline __attribute__ ((always_inline)) void IfxMultican_MsgObj_setMessageId(Ifx_CAN_MO *hwObj, uint32 messageId, boolean extendedFrame);






static inline __attribute__ ((always_inline)) void IfxMultican_MsgObj_setMessageMode(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjMode mode);







static inline __attribute__ ((always_inline)) void IfxMultican_MsgObj_setMessagePendingNumber(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjId messageNumber);






static inline __attribute__ ((always_inline)) void IfxMultican_MsgObj_setOverflowInterrupt(Ifx_CAN_MO *hwObj, boolean enabled);






static inline __attribute__ ((always_inline)) void IfxMultican_MsgObj_setPriorityClass(Ifx_CAN_MO *hwObj, IfxMultican_Priority priority);






static inline __attribute__ ((always_inline)) void IfxMultican_MsgObj_setReceiveInterrupt(Ifx_CAN_MO *hwObj, boolean enabled);






static inline __attribute__ ((always_inline)) void IfxMultican_MsgObj_setReceiveInterruptNodePointer(Ifx_CAN_MO *hwObj, IfxMultican_SrcId srcId);






static inline __attribute__ ((always_inline)) void IfxMultican_MsgObj_setRemoteMonitoring(Ifx_CAN_MO *hwObj, boolean enabled);






static inline __attribute__ ((always_inline)) void IfxMultican_MsgObj_setSelectObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);






static inline __attribute__ ((always_inline)) void IfxMultican_MsgObj_setSingleDataTransfer(Ifx_CAN_MO *hwObj, boolean enabled);






static inline __attribute__ ((always_inline)) void IfxMultican_MsgObj_setSingleTransmitTrial(Ifx_CAN_MO *hwObj, boolean enabled);






static inline __attribute__ ((always_inline)) void IfxMultican_MsgObj_setTopObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber);






static inline __attribute__ ((always_inline)) void IfxMultican_MsgObj_setTransmitInterrupt(Ifx_CAN_MO *hwObj, boolean enabled);






static inline __attribute__ ((always_inline)) void IfxMultican_MsgObj_setTransmitInterruptNodePointer(Ifx_CAN_MO *hwObj, IfxMultican_SrcId srcId);
# 1013 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxmultican.h" 3
extern boolean IfxMultican_MsgObj_cancelSend(Ifx_CAN_MO *hwObj);






extern void IfxMultican_MsgObj_clearStatusFlag(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjStatusFlag flag);







extern void IfxMultican_MsgObj_deinit(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId);






extern IfxMultican_MsgObjId IfxMultican_MsgObj_getPendingId(Ifx_CAN *mcan, IfxMultican_MsgObjGroup msgObjGroup);





extern IfxMultican_MsgObjStat IfxMultican_MsgObj_getStatus(Ifx_CAN_MO *hwObj);






extern boolean IfxMultican_MsgObj_getStatusFlag(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjStatusFlag flag);
# 1060 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxmultican.h" 3
extern IfxMultican_Status IfxMultican_MsgObj_readLongFrame(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId, IfxMultican_Message *msg, uint32 *data);
# 1070 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxmultican.h" 3
extern IfxMultican_Status IfxMultican_MsgObj_readMessage(Ifx_CAN_MO *hwObj, IfxMultican_Message *msg);
# 1080 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxmultican.h" 3
extern IfxMultican_Status IfxMultican_MsgObj_sendLongFrame(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId, IfxMultican_Message *msg, uint32 *data);







extern IfxMultican_Status IfxMultican_MsgObj_sendMessage(Ifx_CAN_MO *hwObj, const IfxMultican_Message *msg);







extern IfxMultican_Status IfxMultican_MsgObj_writeTxfifo(Ifx_CAN_MO *hwObj, const IfxMultican_Message *msg);
# 1105 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxmultican.h" 3
extern void IfxMultican_MsgObj_setFilter(Ifx_CAN_MO *hwObj, boolean extend, uint32 id, uint32 accMask);






extern void IfxMultican_MsgObj_setStatusFlag(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjStatusFlag flag);
# 1128 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxmultican.h" 3
extern volatile Ifx_SRC_SRCR *IfxMultican_getSrcPointer(Ifx_CAN *mcan, IfxMultican_SrcId srcId);







static inline __attribute__ ((always_inline)) void IfxMultican_Message_init(IfxMultican_Message *msg, uint32 id, uint32 dataLow, uint32 dataHigh, IfxMultican_DataLengthCode lengthCode)
{
    msg->id = id;
    msg->data[0] = dataLow;
    msg->data[1] = dataHigh;
    msg->lengthCode = lengthCode;

    msg->fastBitRate = (0u);
}


static inline __attribute__ ((always_inline)) void IfxMultican_Message_longFrameInit(IfxMultican_Message *msg, uint32 id, IfxMultican_DataLengthCode lengthCode, boolean fastBitRate)
{
    msg->id = id;
    msg->data[0] = 0;
    msg->data[1] = 0;
    msg->lengthCode = lengthCode;
    msg->fastBitRate = fastBitRate;
}


static inline __attribute__ ((always_inline)) void IfxMultican_MsgObj_clearDataRegisters(Ifx_CAN_MO *hwObj)
{
    hwObj->DATAL.U = 0;
    hwObj->DATAH.U = 0;
}


static inline __attribute__ ((always_inline)) void IfxMultican_MsgObj_clearFifoGatewayPointers(Ifx_CAN_MO *hwObj)
{
    hwObj->FGPR.U = 0x0000000U;
}


static inline __attribute__ ((always_inline)) void IfxMultican_MsgObj_clearRxPending(Ifx_CAN_MO *hwObj)
{
    IfxMultican_MsgObj_clearStatusFlag(hwObj, IfxMultican_MsgObjStatusFlag_receivePending);
}


static inline __attribute__ ((always_inline)) void IfxMultican_MsgObj_clearTxPending(Ifx_CAN_MO *hwObj)
{
    IfxMultican_MsgObj_clearStatusFlag(hwObj, IfxMultican_MsgObjStatusFlag_transmitPending);
}


static inline __attribute__ ((always_inline)) IfxMultican_MsgObjId IfxMultican_MsgObj_getBottomObjectPointer(Ifx_CAN_MO *hwObj)
{
    return (IfxMultican_MsgObjId)(hwObj->FGPR.B.BOT);
}


static inline __attribute__ ((always_inline)) IfxMultican_DataLengthCode IfxMultican_MsgObj_getDataLengthCode(Ifx_CAN_MO *hwObj)
{
    return (IfxMultican_DataLengthCode)(hwObj->FCR.B.DLC);
}


static inline __attribute__ ((always_inline)) uint32 IfxMultican_MsgObj_getMessageId(Ifx_CAN_MO *hwObj)
{
    Ifx_CAN_MO_AR ar;
    ar.U = hwObj->AR.U;
    return ar.B.ID >> ((ar.B.IDE != 0) ? 0 : 18);
}


static inline __attribute__ ((always_inline)) IfxMultican_MsgObjId IfxMultican_MsgObj_getNextObjectPointer(Ifx_CAN_MO *hwObj)
{
    return (IfxMultican_MsgObjId)(hwObj->STAT.B.PNEXT);
}


static inline __attribute__ ((always_inline)) Ifx_CAN_MO *IfxMultican_MsgObj_getPointer(Ifx_CAN *mcan, IfxMultican_MsgObjId msgObjId)
{
    return &(mcan->MO[msgObjId]);
}


static inline __attribute__ ((always_inline)) boolean IfxMultican_MsgObj_isExtendedFrame(Ifx_CAN_MO *hwObj)
{
    return hwObj->AR.B.IDE != 0;
}


static inline __attribute__ ((always_inline)) boolean IfxMultican_MsgObj_isRxPending(Ifx_CAN_MO *hwObj)
{
    IfxMultican_MsgObjStat msgStatus = IfxMultican_MsgObj_getStatus(hwObj);
    return msgStatus.B.RXPND ? (1u) : (0u);
}


static inline __attribute__ ((always_inline)) boolean IfxMultican_MsgObj_isTransmitRequested(Ifx_CAN_MO *hwObj)
{
    IfxMultican_MsgObjStat msgStatus = IfxMultican_MsgObj_getStatus(hwObj);
    return msgStatus.B.TXRQ ? (1u) : (0u);
}


static inline __attribute__ ((always_inline)) boolean IfxMultican_MsgObj_isTxPending(Ifx_CAN_MO *hwObj)
{
    IfxMultican_MsgObjStat msgStatus = IfxMultican_MsgObj_getStatus(hwObj);
    return msgStatus.B.TXPND ? (1u) : (0u);
}


static inline __attribute__ ((always_inline)) void IfxMultican_MsgObj_setAcceptanceMask(Ifx_CAN_MO *hwObj, uint32 mask, boolean extendedFrame)
{
    hwObj->AMR.B.AM = mask << ((extendedFrame != 0) ? 0 : 18);
}


static inline __attribute__ ((always_inline)) void IfxMultican_MsgObj_setBitRateSwitch(Ifx_CAN_MO *hwObj, boolean enabled)
{
    hwObj->FCR.B.BRS = enabled ? 1 : 0;
}


static inline __attribute__ ((always_inline)) void IfxMultican_MsgObj_setBottomObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber)
{
    hwObj->FGPR.B.BOT = objNumber;
}


static inline __attribute__ ((always_inline)) void IfxMultican_MsgObj_setCurrentObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber)
{
    hwObj->FGPR.B.CUR = objNumber;
}


static inline __attribute__ ((always_inline)) void IfxMultican_MsgObj_setDataCopy(Ifx_CAN_MO *hwObj, boolean enabled)
{
    hwObj->FCR.B.DATC = enabled ? 1 : 0;
}


static inline __attribute__ ((always_inline)) void IfxMultican_MsgObj_setDataLengthCode(Ifx_CAN_MO *hwObj, IfxMultican_DataLengthCode code)
{
    hwObj->FCR.B.DLC = code;
}


static inline __attribute__ ((always_inline)) void IfxMultican_MsgObj_setDataLengthCodeCopy(Ifx_CAN_MO *hwObj, boolean enabled)
{
    hwObj->FCR.B.DLCC = enabled ? 1 : 0;
}


static inline __attribute__ ((always_inline)) void IfxMultican_MsgObj_setExtendedDataLength(Ifx_CAN_MO *hwObj, boolean enabled)
{
    hwObj->FCR.B.FDF = enabled ? 1 : 0;
}


static inline __attribute__ ((always_inline)) void IfxMultican_MsgObj_setGatewayDataFrameSend(Ifx_CAN_MO *hwObj, boolean enabled)
{
    hwObj->FCR.B.GDFS = enabled ? 1 : 0;
}


static inline __attribute__ ((always_inline)) void IfxMultican_MsgObj_setIdentifierCopy(Ifx_CAN_MO *hwObj, boolean enabled)
{
    hwObj->FCR.B.IDC = enabled ? 1 : 0;
}


static inline __attribute__ ((always_inline)) void IfxMultican_MsgObj_setIdentifierExtension(Ifx_CAN_MO *hwObj, boolean extension)
{
    hwObj->AR.B.IDE = extension;
}


static inline __attribute__ ((always_inline)) void IfxMultican_MsgObj_setMatchingId(Ifx_CAN_MO *hwObj, boolean matchingId)
{
    hwObj->AMR.B.MIDE = matchingId;
}


static inline __attribute__ ((always_inline)) void IfxMultican_MsgObj_setMessageId(Ifx_CAN_MO *hwObj, uint32 messageId, boolean extendedFrame)
{
    hwObj->AR.B.ID = messageId << ((extendedFrame != 0) ? 0 : 18);
}


static inline __attribute__ ((always_inline)) void IfxMultican_MsgObj_setMessageMode(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjMode mode)
{
    hwObj->FCR.B.MMC = mode;
}


static inline __attribute__ ((always_inline)) void IfxMultican_MsgObj_setMessagePendingNumber(Ifx_CAN_MO *hwObj, IfxMultican_MsgObjId messageNumber)
{
    hwObj->IPR.B.MPN = messageNumber;
}


static inline __attribute__ ((always_inline)) void IfxMultican_MsgObj_setOverflowInterrupt(Ifx_CAN_MO *hwObj, boolean enabled)
{
    hwObj->FCR.B.OVIE = enabled ? 1 : 0;
}


static inline __attribute__ ((always_inline)) void IfxMultican_MsgObj_setPriorityClass(Ifx_CAN_MO *hwObj, IfxMultican_Priority priority)
{
    hwObj->AR.B.PRI = priority;
}


static inline __attribute__ ((always_inline)) void IfxMultican_MsgObj_setReceiveInterrupt(Ifx_CAN_MO *hwObj, boolean enabled)
{
    hwObj->FCR.B.RXIE = enabled ? 1 : 0;
}


static inline __attribute__ ((always_inline)) void IfxMultican_MsgObj_setReceiveInterruptNodePointer(Ifx_CAN_MO *hwObj, IfxMultican_SrcId srcId)
{
    hwObj->IPR.B.RXINP = srcId;
}


static inline __attribute__ ((always_inline)) void IfxMultican_MsgObj_setRemoteMonitoring(Ifx_CAN_MO *hwObj, boolean enabled)
{
    hwObj->FCR.B.RMM = enabled ? 1 : 0;
}


static inline __attribute__ ((always_inline)) void IfxMultican_MsgObj_setSelectObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber)
{
    hwObj->FGPR.B.SEL = objNumber;
}


static inline __attribute__ ((always_inline)) void IfxMultican_MsgObj_setSingleDataTransfer(Ifx_CAN_MO *hwObj, boolean enabled)
{
    hwObj->FCR.B.SDT = enabled ? 1 : 0;
}


static inline __attribute__ ((always_inline)) void IfxMultican_MsgObj_setSingleTransmitTrial(Ifx_CAN_MO *hwObj, boolean enabled)
{
    hwObj->FCR.B.STT = enabled ? 1 : 0;
}


static inline __attribute__ ((always_inline)) void IfxMultican_MsgObj_setTopObjectPointer(Ifx_CAN_MO *hwObj, sint32 objNumber)
{
    hwObj->FGPR.B.TOP = objNumber;
}


static inline __attribute__ ((always_inline)) void IfxMultican_MsgObj_setTransmitInterrupt(Ifx_CAN_MO *hwObj, boolean enabled)
{
    hwObj->FCR.B.TXIE = enabled ? 1 : 0;
}


static inline __attribute__ ((always_inline)) void IfxMultican_MsgObj_setTransmitInterruptNodePointer(Ifx_CAN_MO *hwObj, IfxMultican_SrcId srcId)
{
    hwObj->IPR.B.TXINP = srcId;
}


static inline __attribute__ ((always_inline)) void IfxMultican_Node_activate(Ifx_CAN_N *hwNode)
{
    hwNode->CR.B.INIT = 0;
}


static inline __attribute__ ((always_inline)) void IfxMultican_Node_deactivate(Ifx_CAN_N *hwNode)
{
    hwNode->CR.B.INIT = 1;
}


static inline __attribute__ ((always_inline)) void IfxMultican_Node_disableConfigurationChange(Ifx_CAN_N *hwNode)
{
    hwNode->CR.B.CCE = 0U;
}


static inline __attribute__ ((always_inline)) void IfxMultican_Node_enableConfigurationChange(Ifx_CAN_N *hwNode)
{
    hwNode->CR.B.CCE = 1U;
}


static inline __attribute__ ((always_inline)) Ifx_CAN_N *IfxMultican_Node_getPointer(Ifx_CAN *mcan, IfxMultican_NodeId node)
{
    return &(mcan->N[node]);
}


static inline __attribute__ ((always_inline)) void IfxMultican_Node_resetControlRegister(Ifx_CAN_N *hwNode)
{
    hwNode->CR.U = 0x00000041U;
}


static inline __attribute__ ((always_inline)) void IfxMultican_Node_resetErrorCounters(Ifx_CAN_N *hwNode)
{
    hwNode->ECNT.U = 0x00600000U;
}


static inline __attribute__ ((always_inline)) void IfxMultican_Node_resetInterruptPointers(Ifx_CAN_N *hwNode)
{
    hwNode->IPR.U = 0x00000000U;
}


static inline __attribute__ ((always_inline)) void IfxMultican_Node_setAlertInterrupt(Ifx_CAN_N *hwNode, boolean enabled)
{
    hwNode->CR.B.ALIE = enabled ? 1 : 0;
}


static inline __attribute__ ((always_inline)) void IfxMultican_Node_setAlertInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId)
{
    hwNode->IPR.B.ALINP = srcId;
}


static inline __attribute__ ((always_inline)) void IfxMultican_Node_setAnalyzerMode(Ifx_CAN_N *hwNode, boolean mode)
{
    hwNode->CR.B.CALM = mode != (0u);
}


static inline __attribute__ ((always_inline)) void IfxMultican_Node_setErrorWarningLevel(Ifx_CAN_N *hwNode, uint8 level)
{
    hwNode->ECNT.B.EWRNLVL = level;
}


static inline __attribute__ ((always_inline)) void IfxMultican_Node_setFastNode(Ifx_CAN_N *hwNode, boolean enabled)
{
    hwNode->CR.B.INIT = 1;
    hwNode->CR.B.FDEN = enabled ? 1 : 0;
    hwNode->CR.B.INIT = 0;
}


static inline __attribute__ ((always_inline)) void IfxMultican_Node_setFrameCounterInterrupt(Ifx_CAN_N *hwNode, boolean enabled)
{
    hwNode->FCR.B.CFCIE = enabled ? 1 : 0;
}


static inline __attribute__ ((always_inline)) void IfxMultican_Node_setFrameCounterInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId)
{
    hwNode->IPR.B.CFCINP = srcId;
}


static inline __attribute__ ((always_inline)) void IfxMultican_Node_setFrameCounterMode(Ifx_CAN_N *hwNode, IfxMultican_FrameCounterMode mode)
{
    hwNode->FCR.B.CFMOD = mode;
}


static inline __attribute__ ((always_inline)) void IfxMultican_Node_setLastErrorCodeInterrupt(Ifx_CAN_N *hwNode, boolean enabled)
{
    hwNode->CR.B.LECIE = enabled ? 1 : 0;
}


static inline __attribute__ ((always_inline)) void IfxMultican_Node_setLastErrorCodeInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId)
{
    hwNode->IPR.B.LECINP = srcId;
}


static inline __attribute__ ((always_inline)) void IfxMultican_Node_setLoopBackMode(Ifx_CAN_N *hwNode, boolean mode)
{
    hwNode->PCR.B.LBM = mode != (0u);
}


static inline __attribute__ ((always_inline)) void IfxMultican_Node_setReceiveErrorCounter(Ifx_CAN_N *hwNode, uint8 value)
{
    hwNode->ECNT.B.REC = value;
}


static inline __attribute__ ((always_inline)) void IfxMultican_Node_setTimerEventInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId)
{
    hwNode->IPR.B.TEINP = srcId;
}


static inline __attribute__ ((always_inline)) void IfxMultican_Node_setTransceiverDelayCompensation(Ifx_CAN_N *hwNode, boolean enabled)
{
    hwNode->TDCR.B.TDC = enabled ? 1 : 0;
}


static inline __attribute__ ((always_inline)) void IfxMultican_Node_setTransceiverDelayCompensationOffset(Ifx_CAN_N *hwNode, uint16 value)
{
    hwNode->TDCR.B.TDCO = value;
}


static inline __attribute__ ((always_inline)) void IfxMultican_Node_setTransferInterrupt(Ifx_CAN_N *hwNode, boolean enabled)
{
    hwNode->CR.B.TRIE = enabled ? 1 : 0;
}


static inline __attribute__ ((always_inline)) void IfxMultican_Node_setTransferInterruptPointer(Ifx_CAN_N *hwNode, IfxMultican_SrcId srcId)
{
    hwNode->IPR.B.TRINP = srcId;
}


static inline __attribute__ ((always_inline)) void IfxMultican_Node_setTransmitErrorCounter(Ifx_CAN_N *hwNode, uint8 value)
{
    hwNode->ECNT.B.TEC = value;
}


static inline __attribute__ ((always_inline)) void IfxMultican_clearMessagePendingSeletor(Ifx_CAN *mcan)
{
    mcan->MCR.B.MPSEL = 0x0U;
}


static inline __attribute__ ((always_inline)) void IfxMultican_clearPendingMessageNotification(Ifx_CAN *mcan, uint16 list)
{
    mcan->MSPND[list].U = 0x0;
}


static inline __attribute__ ((always_inline)) void IfxMultican_disableModule(Ifx_CAN *mcan)
{
    mcan->CLC.B.DISR = 1U;
}


static inline __attribute__ ((always_inline)) void IfxMultican_disableSleepMode(Ifx_CAN *mcan)
{
    mcan->CLC.B.EDIS = 1U;
}


static inline __attribute__ ((always_inline)) void IfxMultican_enableModule(Ifx_CAN *mcan)
{
    mcan->CLC.B.DISR = 0U;
}


static inline __attribute__ ((always_inline)) void IfxMultican_enableSleepMode(Ifx_CAN *mcan)
{
    mcan->CLC.B.EDIS = 0U;
}


static inline __attribute__ ((always_inline)) uint16 IfxMultican_getFractionalDividerMode(Ifx_CAN *mcan)
{
    return mcan->FDR.B.DM;
}


static inline __attribute__ ((always_inline)) uint16 IfxMultican_getFractionalDividerStepValue(Ifx_CAN *mcan)
{
    return mcan->FDR.B.STEP;
}


static inline __attribute__ ((always_inline)) IfxMultican_ClockSelect IfxMultican_getInputClock(Ifx_CAN *mcan)
{
    return (IfxMultican_ClockSelect)mcan->MCR.B.CLKSEL;
}


static inline __attribute__ ((always_inline)) boolean IfxMultican_isModuleEnabled(Ifx_CAN *mcan)
{
    return mcan->CLC.B.DISS == 0;
}


static inline __attribute__ ((always_inline)) void IfxMultican_setFractionalDividerMode(Ifx_CAN *mcan, uint16 mode)
{
    mcan->FDR.B.DM = mode;
}


static inline __attribute__ ((always_inline)) void IfxMultican_setFractionalDividerStepValue(Ifx_CAN *mcan, uint16 stepValue)
{
    mcan->FDR.B.STEP = stepValue;
}


static inline __attribute__ ((always_inline)) void IfxMultican_setInputClock(Ifx_CAN *mcan, IfxMultican_ClockSelect clockSelect)
{
    mcan->MCR.B.CLKSEL = clockSelect;
}


static inline __attribute__ ((always_inline)) void IfxMultican_setMessageIndexMask(Ifx_CAN *mcan, uint32 mask)
{
    mcan->MSIMASK.U = mask;
}


static inline __attribute__ ((always_inline)) void IfxMultican_setSleepMode(Ifx_CAN *can, IfxMultican_SleepMode mode)
{
    uint16 passwd = IfxScuWdt_getCpuWatchdogPassword();
    IfxScuWdt_clearCpuEndinit(passwd);
    can->CLC.B.EDIS = mode;
    IfxScuWdt_setCpuEndinit(passwd);
}


static inline __attribute__ ((always_inline)) void IfxMultican_waitListReady(Ifx_CAN *mcan)
{
    while (mcan->PANCTR.B.BUSY != 0)
    {}
}


static inline __attribute__ ((always_inline)) boolean IfxMultican_isModuleSuspended(Ifx_CAN *mcan)
{
    Ifx_CAN_OCS ocs;


    ocs.U = mcan->OCS.U;


    return ocs.B.SUSSTA;
}


static inline __attribute__ ((always_inline)) void IfxMultican_setSuspendMode(Ifx_CAN *mcan, IfxMultican_SuspendMode mode)
{
    Ifx_CAN_OCS ocs;


    ocs.B.SUS_P = 1;
    ocs.B.SUS = mode;
    mcan->OCS.U = ocs.U;
}


static inline __attribute__ ((always_inline)) IfxMultican_DataLengthCode IfxMultican_Node_getCodeFromDataLength(uint32 dataLength)
{
    uint32 code;

    if (dataLength <= 8)
    {
        code = dataLength;
    }
    else if (dataLength <= 24)
    {
        code = (dataLength >> 2) + 6;
    }
    else
    {
        code = (dataLength >> 4) + 11;
    }

    return (IfxMultican_DataLengthCode)code;
}


static inline __attribute__ ((always_inline)) uint32 IfxMultican_Node_getDataLengthFromCode(IfxMultican_DataLengthCode code)
{
    uint32 numBytes;

    if (code <= IfxMultican_DataLengthCode_8)
    {
        numBytes = (uint32)code;
    }
    else if (code <= IfxMultican_DataLengthCode_24)
    {
        numBytes = ((uint32)code - 6) << 2;
    }
    else
    {
        numBytes = ((uint32)code - 11) << 4;
    }

    return numBytes;
}
# 773 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxmultican_can.h" 2 3
# 784 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxmultican_can.h" 3
typedef struct
{
    uint32 nominalBaudrate;
    uint16 nominalSynchJumpWidth;
    uint16 nominalSamplePoint;
    uint32 fastBaudrate;
    uint16 fastSynchJumpWidth;
    uint16 fastSamplePoint;
    uint16 loopDelayOffset;
} IfxMultican_Can_FdConfig;



typedef struct
{
    uint32 copyDataLengthCode : 1;
    uint32 copyData : 1;
    uint32 copyId : 1;
    uint32 enableTransmit : 1;
    IfxMultican_MsgObjId gatewayDstObjId;
} IfxMultican_Can_GatewayConfig;



typedef struct
{
    uint16 priority;
    IfxSrc_Tos typeOfService;
} IfxMultican_Can_InterruptConfig;



typedef struct
{
    boolean enabled;
    IfxMultican_SrcId srcId;
} IfxMultican_Can_InterruptSource;



typedef struct
{
    uint32 singleDataTransfer : 1;
    uint32 singleTransmitTrial : 1;
    IfxMultican_DataLengthCode messageLen;
    uint32 extendedFrame : 1;
    uint32 matchingId : 1;
    IfxMultican_MsgObjId topMsgObjId;
    IfxMultican_MsgObjId bottomMsgObjId;
    uint32 fastBitRate : 1;
} IfxMultican_Can_MsgObjControl;



typedef struct
{
    Ifx_CAN *mcan;
    Ifx_CAN_N *node;
    IfxMultican_NodeId nodeId;
    boolean fastNode;
} IfxMultican_Can_Node;







typedef struct
{
    Ifx_CAN *mcan;
} IfxMultican_Can;



typedef struct
{
    Ifx_CAN *module;
    IfxMultican_ClockSelect clockSelect;
    float32 moduleFreq;
    IfxMultican_Can_InterruptConfig nodePointer[(16)];
} IfxMultican_Can_Config;



typedef struct
{
    IfxMultican_Can_Node *node;
    IfxMultican_MsgObjId msgObjId;
    uint16 msgObjCount;
    IfxMultican_MsgObjId fifoPointer;
} IfxMultican_Can_MsgObj;



typedef struct
{
    IfxMultican_Can_Node *node;
    IfxMultican_MsgObjId msgObjId;
    uint16 msgObjCount;
    IfxMultican_Can_MsgObjControl control;
    IfxMultican_Frame frame;
    uint32 acceptanceMask;
    uint32 messageId;
    IfxMultican_Priority priority;
    IfxMultican_Can_InterruptSource rxInterrupt;
    IfxMultican_Can_InterruptSource txInterrupt;
    uint32 gatewayTransfers : 1;
    IfxMultican_Can_GatewayConfig gatewayConfig;
    IfxMultican_MsgObjId firstSlaveObjId;
} IfxMultican_Can_MsgObjConfig;



typedef struct
{
    Ifx_CAN *module;
    IfxMultican_NodeId nodeId;
    boolean analyzerMode;
    boolean loopBackMode;
    uint32 baudrate;
    uint16 samplePoint;
    uint16 synchJumpWidth;
    boolean flexibleDataRate;
    IfxMultican_Can_FdConfig fdConfig;
    IfxMultican_Rxd_In *rxPin;
    IfxPort_InputMode rxPinMode;
    IfxMultican_Txd_Out *txPin;
    IfxPort_OutputMode txPinMode;
    uint8 errorWarningLevel;
    IfxMultican_Can_InterruptSource transferInterrupt;
    IfxMultican_Can_InterruptSource lastErrorCodeInterrupt;
    IfxMultican_Can_InterruptSource alertInterrupt;
    IfxMultican_Can_InterruptSource frameCounterInterrupt;
    IfxMultican_Can_InterruptSource timerInterrupt;
    IfxPort_PadDriver pinDriver;
} IfxMultican_Can_NodeConfig;
# 936 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxmultican_can.h" 3
static inline __attribute__ ((always_inline)) void IfxMultican_Can_deinit(IfxMultican_Can *mcan);
# 947 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxmultican_can.h" 3
extern void IfxMultican_Can_getConfig(IfxMultican_Can *mcan, IfxMultican_Can_Config *config);





extern float32 IfxMultican_Can_getModuleFrequency(IfxMultican_Can *mcan);
# 968 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxmultican_can.h" 3
extern IfxMultican_Status IfxMultican_Can_initModule(IfxMultican_Can *mcan, const IfxMultican_Can_Config *config);
# 978 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxmultican_can.h" 3
extern void IfxMultican_Can_initModuleConfig(IfxMultican_Can_Config *config, Ifx_CAN *mcan);
# 993 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxmultican_can.h" 3
static inline __attribute__ ((always_inline)) void IfxMultican_Can_Node_activate(IfxMultican_Can_Node *node);





static inline __attribute__ ((always_inline)) void IfxMultican_Can_Node_deactivate(IfxMultican_Can_Node *node);





static inline __attribute__ ((always_inline)) void IfxMultican_Can_Node_deinit(IfxMultican_Can_Node *node);
# 1019 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxmultican_can.h" 3
static inline __attribute__ ((always_inline)) IfxMultican_Status IfxMultican_Can_Node_recoverBusOff(IfxMultican_Can_Node *node);
# 1030 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxmultican_can.h" 3
extern void IfxMultican_Can_Node_getConfig(IfxMultican_Can_Node *node, IfxMultican_Can_NodeConfig *config);
# 1040 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxmultican_can.h" 3
extern IfxMultican_Status IfxMultican_Can_Node_init(IfxMultican_Can_Node *node, const IfxMultican_Can_NodeConfig *config);
# 1050 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxmultican_can.h" 3
extern void IfxMultican_Can_Node_initConfig(IfxMultican_Can_NodeConfig *config, IfxMultican_Can *mcan);
# 1059 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxmultican_can.h" 3
extern void IfxMultican_Can_Node_sendToBusOff(IfxMultican_Can_Node *node);
# 1075 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxmultican_can.h" 3
static inline __attribute__ ((always_inline)) boolean IfxMultican_Can_MsgObj_cancelSend(IfxMultican_Can_MsgObj *msgObj);
# 1084 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxmultican_can.h" 3
static inline __attribute__ ((always_inline)) void IfxMultican_Can_MsgObj_clearRxPending(IfxMultican_Can_MsgObj *msgObj);
# 1093 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxmultican_can.h" 3
static inline __attribute__ ((always_inline)) void IfxMultican_Can_MsgObj_clearTxPending(IfxMultican_Can_MsgObj *msgObj);






static inline __attribute__ ((always_inline)) void IfxMultican_Can_MsgObj_deinit(IfxMultican_Can_MsgObj *msgObj);






static inline __attribute__ ((always_inline)) IfxMultican_MsgObjId IfxMultican_Can_MsgObj_getPendingId(IfxMultican_Can_MsgObj *msgObj, IfxMultican_MsgObjGroup msgObjGroup);
# 1116 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxmultican_can.h" 3
static inline __attribute__ ((always_inline)) IfxMultican_MsgObjStat IfxMultican_Can_MsgObj_getStatus(IfxMultican_Can_MsgObj *msgObj);
# 1130 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxmultican_can.h" 3
static inline __attribute__ ((always_inline)) IfxMultican_Status IfxMultican_Can_MsgObj_readLongFrame(IfxMultican_Can_MsgObj *msgObj, IfxMultican_Message *msg, uint32 *data);
# 1142 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxmultican_can.h" 3
static inline __attribute__ ((always_inline)) IfxMultican_Status IfxMultican_Can_MsgObj_sendLongFrame(IfxMultican_Can_MsgObj *msgObj, IfxMultican_Message *msg, uint32 *data);
# 1153 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxmultican_can.h" 3
extern void IfxMultican_Can_MsgObj_getConfig(IfxMultican_Can_MsgObj *msgObj, IfxMultican_Can_MsgObjConfig *config);
# 1163 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxmultican_can.h" 3
extern IfxMultican_Status IfxMultican_Can_MsgObj_init(IfxMultican_Can_MsgObj *msgObj, const IfxMultican_Can_MsgObjConfig *config);
# 1173 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxmultican_can.h" 3
extern void IfxMultican_Can_MsgObj_initConfig(IfxMultican_Can_MsgObjConfig *config, IfxMultican_Can_Node *node);





extern boolean IfxMultican_Can_MsgObj_isRxPending(IfxMultican_Can_MsgObj *msgObj);





extern boolean IfxMultican_Can_MsgObj_isTransmitRequested(IfxMultican_Can_MsgObj *msgObj);





extern boolean IfxMultican_Can_MsgObj_isTxPending(IfxMultican_Can_MsgObj *msgObj);
# 1204 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxmultican_can.h" 3
extern IfxMultican_Status IfxMultican_Can_MsgObj_readMessage(IfxMultican_Can_MsgObj *msgObj, IfxMultican_Message *msg);
# 1215 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxmultican_can.h" 3
extern IfxMultican_Status IfxMultican_Can_MsgObj_sendMessage(IfxMultican_Can_MsgObj *msgObj, const IfxMultican_Message *msg);







static inline __attribute__ ((always_inline)) boolean IfxMultican_Can_MsgObj_cancelSend(IfxMultican_Can_MsgObj *msgObj)
{
    Ifx_CAN_MO *hwObj = IfxMultican_MsgObj_getPointer(msgObj->node->mcan, msgObj->msgObjId);

    return IfxMultican_MsgObj_cancelSend(hwObj);
}


static inline __attribute__ ((always_inline)) void IfxMultican_Can_MsgObj_clearRxPending(IfxMultican_Can_MsgObj *msgObj)
{
    Ifx_CAN_MO *hwObj = IfxMultican_MsgObj_getPointer(msgObj->node->mcan, msgObj->msgObjId);

    IfxMultican_MsgObj_clearRxPending(hwObj);
}


static inline __attribute__ ((always_inline)) void IfxMultican_Can_MsgObj_clearTxPending(IfxMultican_Can_MsgObj *msgObj)
{
    Ifx_CAN_MO *hwObj = IfxMultican_MsgObj_getPointer(msgObj->node->mcan, msgObj->msgObjId);

    IfxMultican_MsgObj_clearTxPending(hwObj);
}


static inline __attribute__ ((always_inline)) void IfxMultican_Can_MsgObj_deinit(IfxMultican_Can_MsgObj *msgObj)
{
    IfxMultican_MsgObj_deinit(msgObj->node->mcan, msgObj->msgObjId);
}


static inline __attribute__ ((always_inline)) IfxMultican_MsgObjId IfxMultican_Can_MsgObj_getPendingId(IfxMultican_Can_MsgObj *msgObj, IfxMultican_MsgObjGroup msgObjGroup)
{
    return IfxMultican_MsgObj_getPendingId(msgObj->node->mcan, msgObjGroup);
}


static inline __attribute__ ((always_inline)) IfxMultican_MsgObjStat IfxMultican_Can_MsgObj_getStatus(IfxMultican_Can_MsgObj *msgObj)
{
    Ifx_CAN_MO *hwObj = IfxMultican_MsgObj_getPointer(msgObj->node->mcan, msgObj->msgObjId);

    return IfxMultican_MsgObj_getStatus(hwObj);
}


static inline __attribute__ ((always_inline)) IfxMultican_Status IfxMultican_Can_MsgObj_readLongFrame(IfxMultican_Can_MsgObj *msgObj, IfxMultican_Message *msg, uint32 *data)
{
    return IfxMultican_MsgObj_readLongFrame(msgObj->node->mcan, msgObj->msgObjId, msg, data);
}


static inline __attribute__ ((always_inline)) IfxMultican_Status IfxMultican_Can_MsgObj_sendLongFrame(IfxMultican_Can_MsgObj *msgObj, IfxMultican_Message *msg, uint32 *data)
{
    return IfxMultican_MsgObj_sendLongFrame(msgObj->node->mcan, msgObj->msgObjId, msg, data);
}


static inline __attribute__ ((always_inline)) void IfxMultican_Can_Node_activate(IfxMultican_Can_Node *node)
{
    Ifx_CAN_N *hwNode = IfxMultican_Node_getPointer(node->mcan, node->nodeId);

    IfxMultican_Node_activate(hwNode);
}


static inline __attribute__ ((always_inline)) void IfxMultican_Can_Node_deactivate(IfxMultican_Can_Node *node)
{
    Ifx_CAN_N *hwNode = IfxMultican_Node_getPointer(node->mcan, node->nodeId);
    IfxMultican_Node_deactivate(hwNode);
}


static inline __attribute__ ((always_inline)) void IfxMultican_Can_Node_deinit(IfxMultican_Can_Node *node)
{
    Ifx_CAN_N *hwNode = IfxMultican_Node_getPointer(node->mcan, node->nodeId);

    IfxMultican_Node_deinit(hwNode);
}


static inline __attribute__ ((always_inline)) IfxMultican_Status IfxMultican_Can_Node_recoverBusOff(IfxMultican_Can_Node *node)
{
    Ifx_CAN_N *hwNode = IfxMultican_Node_getPointer(node->mcan, node->nodeId);

    return IfxMultican_Node_recoverBusOff(hwNode);
}


static inline __attribute__ ((always_inline)) void IfxMultican_Can_deinit(IfxMultican_Can *mcan)
{
    IfxMultican_deinit(mcan->mcan);
}
# 10 "D:\\Workspace\\autoever_osek\\can_based_OSEK_OS_TEST\\bsw\\drivers\\../../Driver_Can.h" 2


# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcan_regdef.h" 1 3
# 13 "D:\\Workspace\\autoever_osek\\can_based_OSEK_OS_TEST\\bsw\\drivers\\../../Driver_Can.h" 2
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\platform_types.h" 1 3
# 14 "D:\\Workspace\\autoever_osek\\can_based_OSEK_OS_TEST\\bsw\\drivers\\../../Driver_Can.h" 2

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\compilergcc.h" 1 3
# 41 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\compilergcc.h" 3
#define COMPILERGCC_H 1



# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\lib\\gcc\\tricore\\4.9.4\\include\\stddef.h" 1 3 4
# 46 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\compilergcc.h" 2 3







#define IFXCOMPILER_COMMON_LINKER_SYMBOLS() extern unsigned int __A0_MEM[]; extern unsigned int __A1_MEM[]; extern unsigned int __A8_MEM[]; extern unsigned int __A9_MEM[];
# 64 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\compilergcc.h" 3
#define IFXCOMPILER_CORE_LINKER_SYMBOLS(cpu) extern unsigned int __USTACK ##cpu[]; extern unsigned int __ISTACK ##cpu[]; extern unsigned int __INTTAB_CPU ##cpu[]; extern unsigned int __TRAPTAB_CPU ##cpu[]; extern unsigned int __CSA ##cpu[]; extern unsigned int __CSA ##cpu ##_END[];







#define __USTACK(cpu) __USTACK ##cpu
#define __ISTACK(cpu) __ISTACK ##cpu
#define __INTTAB_CPU(cpu) __INTTAB_CPU ##cpu
#define __TRAPTAB_CPU(cpu) __TRAPTAB_CPU ##cpu
#define __CSA(cpu) __CSA ##cpu
#define __CSA_END(cpu) __CSA ##cpu ##_END





#define __INTTAB(cpu) __INTTAB_CPU ##cpu


#define __TRAPTAB(cpu) __TRAPTAB_CPU ##cpu

#define __SDATA1(cpu) __A0_MEM
#define __SDATA2(cpu) __A1_MEM
#define __SDATA3(cpu) __A8_MEM
#define __SDATA4(cpu) __A9_MEM
# 100 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\compilergcc.h" 3
#define IFX_PACKED __attribute__ ((packed))

#define COMPILER_NAME "GNUC"
#define COMPILER_VERSION __VERSION__

#define COMPILER_REVISION 0

#define IFX_INTERRUPT_FAST IFX_INTERRUPT
# 153 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\compilergcc.h" 3
#define IFX_ALIGN(n) __attribute__ ((aligned(n)))
# 16 "D:\\Workspace\\autoever_osek\\can_based_OSEK_OS_TEST\\bsw\\drivers\\../../Driver_Can.h" 2




# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\compilergnuc.h" 1 3
# 21 "D:\\Workspace\\autoever_osek\\can_based_OSEK_OS_TEST\\bsw\\drivers\\../../Driver_Can.h" 2
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_typesgnuc.h" 1 3
# 22 "D:\\Workspace\\autoever_osek\\can_based_OSEK_OS_TEST\\bsw\\drivers\\../../Driver_Can.h" 2


# 1 "D:\\Workspace\\autoever_osek\\can_based_OSEK_OS_TEST\\bsw\\drivers\\../../bsw/io/GPIO.h" 1

#define BSW_IO_GPIO_H_ 



void Init_GPIO(void);

void setLED1(int onoff);
void setLED2(int onoff);
void toggleLED1(void);
void toggleLED2(void);

int getSW1(void);
int getSW2(void);
int getSW1_Debounce(void);
int getSW2_Debounce(void);
# 25 "D:\\Workspace\\autoever_osek\\can_based_OSEK_OS_TEST\\bsw\\drivers\\../../Driver_Can.h" 2




#define ECU1_TX_OBJ_NUM 10u
#define ECU1_RX_OBJ_NUM 10u
# 43 "D:\\Workspace\\autoever_osek\\can_based_OSEK_OS_TEST\\bsw\\drivers\\../../Driver_Can.h"
typedef struct
{
    IfxMultican_Can CanEcu1;
    IfxMultican_Can_Node CanEcu1Node;
    IfxMultican_Can_MsgObj CanEcu1MsgTxObj[10u];
    IfxMultican_Can_MsgObj CanEcu1MsgRxObj[10u];
} Ecu1Can;






extern Ecu1Can stEcu1Can;





void Can_rx_data_extracter(IfxMultican_Message RxCanMsg, int* can_id, uint64* can_data);
void Can_data_disassembler(int can_id, uint64 can_data);


void CAN_RxInt0Handler(void);


void Driver_Can_Tx_set(int txMsgObjId, uint32 can_id, uint64 new_data, uint64 bit_mask);
int isTxMsgObj_ready(int txMsgObjId);
void Driver_Can_Tx(int txMsgObjId);
void Driver_Can_Txtest(uint32 can_id, uint64 can_data);


extern void Driver_Can_Init(void);
# 16 "D:\\Workspace\\autoever_osek\\can_based_OSEK_OS_TEST\\bsw\\drivers\\../../main.h" 2

# 1 "D:\\Workspace\\autoever_osek\\can_based_OSEK_OS_TEST\\bsw\\drivers\\../../bsw/etc/etc.h" 1

#define BSW_ETC_ETC_H_ 

void delay_ms(unsigned int delay_time);
# 18 "D:\\Workspace\\autoever_osek\\can_based_OSEK_OS_TEST\\bsw\\drivers\\../../main.h" 2


# 1 "D:\\Workspace\\autoever_osek\\can_based_OSEK_OS_TEST\\bsw\\drivers\\../../bsw/io/Buzzer.h" 1

#define BSW_IO_BUZZER_H_ 

void Init_Buzzer(void);
void Init_Buzzer_PWM(void);
void setBeepCycle(int cycle);
void Beep(unsigned int hz);
# 21 "D:\\Workspace\\autoever_osek\\can_based_OSEK_OS_TEST\\bsw\\drivers\\../../main.h" 2

# 1 "D:\\Workspace\\autoever_osek\\can_based_OSEK_OS_TEST\\bsw\\drivers\\../../bsw/io/Motor.h" 1

#define BSW_IO_MOTOR_H_ 

void Init_DCMotor(void);
void Init_DCMotorPWM(void);

void movChA(int dir);
void movChB(int dir);

void stopChA(void);
void stopChB(void);

void movChA_PWM(int duty, int dir);
void movChB_PWM(int duty, int dir);
# 23 "D:\\Workspace\\autoever_osek\\can_based_OSEK_OS_TEST\\bsw\\drivers\\../../main.h" 2
# 1 "D:\\Workspace\\autoever_osek\\can_based_OSEK_OS_TEST\\bsw\\drivers\\../../bsw/io/ToF.h" 1

#define BSW_IO_TOF_H_ 

void Init_ToF(void);
void IsrUart1RxHandler_tof(void);
int getTofDistance(void);
# 24 "D:\\Workspace\\autoever_osek\\can_based_OSEK_OS_TEST\\bsw\\drivers\\../../main.h" 2
# 1 "D:\\Workspace\\autoever_osek\\can_based_OSEK_OS_TEST\\bsw\\drivers\\../../bsw/io/Ultrasonic.h" 1
# 25 "D:\\Workspace\\autoever_osek\\can_based_OSEK_OS_TEST\\bsw\\drivers\\../../main.h" 2


# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\stdio.h" 1 3
# 27 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\stdio.h" 3
#define _STDIO_H_ 

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\_ansi.h" 1 3
# 13 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\_ansi.h" 3
#define _ANSIDECL_H_ 

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\newlib.h" 1 3







#define __NEWLIB_H__ 1


#define _ELIX_LEVEL 3


#define _NEWLIB_VERSION "1.18.0"






#define _WANT_IO_LONG_LONG 1
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\newlib.h" 3
#define _MB_LEN_MAX 1
# 51 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\newlib.h" 3
#define _ATEXIT_DYNAMIC_ALLOC 1


#define _HAVE_LONG_DOUBLE 1


#define _LDBL_EQ_DBL 1
# 16 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\_ansi.h" 2 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\sys\\config.h" 1 3

#define __SYS_CONFIG_H__ 

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\machine\\ieeefp.h" 1 3
# 55 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\machine\\ieeefp.h" 3
#define _DOUBLE_IS_32BITS 




#define __IEEE_LITTLE_ENDIAN 
# 5 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\sys\\config.h" 2 3
# 176 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\sys\\config.h" 3
#define _POINTER_INT long





#undef __RAND_MAX



#define __RAND_MAX 0x7fffffff
# 204 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\sys\\config.h" 3
#define __EXPORT 



#define __IMPORT 






#define _READ_WRITE_RETURN_TYPE int
# 17 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\_ansi.h" 2 3






#define _HAVE_STDC 
# 46 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\_ansi.h" 3
#define _BEGIN_STD_C 
#define _END_STD_C 
#define _NOTHROW 



#define _PTR void *
#define _AND ,
#define _NOARGS void
#define _CONST const
#define _VOLATILE volatile
#define _SIGNED signed
#define _DOTS , ...
#define _VOID void






#define _EXFUN_NOTHROW(name,proto) name proto _NOTHROW
#define _EXFUN(name,proto) name proto
#define _EXPARM(name,proto) (* name) proto
#define _EXFNPTR(name,proto) (* name) proto

#define _DEFUN(name,arglist,args) name(args)
#define _DEFUN_VOID(name) name(_NOARGS)
#define _CAST_VOID (void)

#define _LONG_DOUBLE long double


#define _LONG_LONG_TYPE long long


#define _PARAMS(paramlist) paramlist
# 107 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\_ansi.h" 3
#define _ATTRIBUTE(attrs) __attribute__ (attrs)
# 130 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\_ansi.h" 3
#define _ELIDABLE_INLINE __inline__
# 30 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\stdio.h" 2 3

#define _FSTDIO 

#define __need_size_t 
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\lib\\gcc\\tricore\\4.9.4\\include\\stddef.h" 1 3 4
# 158 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\lib\\gcc\\tricore\\4.9.4\\include\\stddef.h" 3 4
#undef __need_ptrdiff_t
# 234 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\lib\\gcc\\tricore\\4.9.4\\include\\stddef.h" 3 4
#undef __need_size_t
# 343 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\lib\\gcc\\tricore\\4.9.4\\include\\stddef.h" 3 4
#undef __need_wchar_t
# 397 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\lib\\gcc\\tricore\\4.9.4\\include\\stddef.h" 3 4
#undef NULL




#define NULL ((void *)0)





#undef __need_NULL




#define offsetof(TYPE,MEMBER) __builtin_offsetof (TYPE, MEMBER)
# 35 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\stdio.h" 2 3

#define __need___va_list 
# 45 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\stdio.h" 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\sys\\reent.h" 1 3
# 11 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\sys\\reent.h" 3
#define _SYS_REENT_H_ 

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\_ansi.h" 1 3
# 14 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\sys\\reent.h" 2 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\sys\\_types.h" 1 3
# 10 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\sys\\_types.h" 3
#define _SYS__TYPES_H 

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\machine\\_types.h" 1 3

#define _MACHINE__TYPES_H 

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\machine\\_default_types.h" 1 3





#define _MACHINE__DEFAULT_TYPES_H 
# 18 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\machine\\_default_types.h" 3
#define __EXP(x) __ ##x ##__







typedef signed char __int8_t ;
typedef unsigned char __uint8_t ;
#define ___int8_t_defined 1







typedef signed short __int16_t;
typedef unsigned short __uint16_t;
#define ___int16_t_defined 1







typedef __int16_t __int_least16_t;
typedef __uint16_t __uint_least16_t;
#define ___int_least16_t_defined 1
# 58 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\machine\\_default_types.h" 3
typedef signed int __int32_t;
typedef unsigned int __uint32_t;
#define ___int32_t_defined 1
# 76 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\machine\\_default_types.h" 3
typedef __int32_t __int_least32_t;
typedef __uint32_t __uint_least32_t;
#define ___int_least32_t_defined 1
# 99 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\machine\\_default_types.h" 3
typedef signed long long __int64_t;
typedef unsigned long long __uint64_t;
#define ___int64_t_defined 1
# 115 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\machine\\_default_types.h" 3
#undef __EXP
# 5 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\machine\\_types.h" 2 3


#define __ATTRIBUTE_IMPURE_PTR__ __attribute__((__fardata__))
# 13 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\sys\\_types.h" 2 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\sys\\lock.h" 1 3

#define __SYS_LOCK_H__ 



typedef int _LOCK_T;
typedef int _LOCK_RECURSIVE_T;



#define __LOCK_INIT(class,lock) static int lock = 0;
#define __LOCK_INIT_RECURSIVE(class,lock) static int lock = 0;
#define __lock_init(lock) (_CAST_VOID 0)
#define __lock_init_recursive(lock) (_CAST_VOID 0)
#define __lock_close(lock) (_CAST_VOID 0)
#define __lock_close_recursive(lock) (_CAST_VOID 0)
#define __lock_acquire(lock) (_CAST_VOID 0)
#define __lock_acquire_recursive(lock) (_CAST_VOID 0)
#define __lock_try_acquire(lock) (_CAST_VOID 0)
#define __lock_try_acquire_recursive(lock) (_CAST_VOID 0)
#define __lock_release(lock) (_CAST_VOID 0)
#define __lock_release_recursive(lock) (_CAST_VOID 0)
# 14 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\sys\\_types.h" 2 3


typedef long _off_t;







typedef short __dev_t;




typedef unsigned short __uid_t;


typedef unsigned short __gid_t;



__extension__ typedef long long _off64_t;







typedef long _fpos_t;
# 56 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\sys\\_types.h" 3
typedef int _ssize_t;





#define __need_wint_t 
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\lib\\gcc\\tricore\\4.9.4\\include\\stddef.h" 1 3 4
# 158 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\lib\\gcc\\tricore\\4.9.4\\include\\stddef.h" 3 4
#undef __need_ptrdiff_t
# 234 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\lib\\gcc\\tricore\\4.9.4\\include\\stddef.h" 3 4
#undef __need_size_t
# 343 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\lib\\gcc\\tricore\\4.9.4\\include\\stddef.h" 3 4
#undef __need_wchar_t




#define _WINT_T 




typedef unsigned int wint_t;

#undef __need_wint_t
# 397 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\lib\\gcc\\tricore\\4.9.4\\include\\stddef.h" 3 4
#undef NULL




#define NULL ((void *)0)





#undef __need_NULL




#define offsetof(TYPE,MEMBER) __builtin_offsetof (TYPE, MEMBER)
# 64 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\sys\\_types.h" 2 3



typedef struct
{
  int __count;
  union
  {
    wint_t __wch;
    unsigned char __wchb[4];
  } __value;
} _mbstate_t;



typedef _LOCK_RECURSIVE_T _flock_t;




typedef void *_iconv_t;
# 15 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\sys\\reent.h" 2 3

#define _NULL 0



#define __Long long
typedef unsigned long __ULong;
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\sys\\reent.h" 3
struct _reent;






struct _Bigint
{
  struct _Bigint *_next;
  int _k, _maxwds, _sign, _wds;
  __ULong _x[1];
};


struct __tm
{
  int __tm_sec;
  int __tm_min;
  int __tm_hour;
  int __tm_mday;
  int __tm_mon;
  int __tm_year;
  int __tm_wday;
  int __tm_yday;
  int __tm_isdst;
};





#define _ATEXIT_SIZE 32

struct _on_exit_args {
 void * _fnargs[32];
 void * _dso_handle[32];

 __ULong _fntypes;


 __ULong _is_cxa;
};
# 89 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\sys\\reent.h" 3
struct _atexit {
 struct _atexit *_next;
 int _ind;

 void (*_fns[32])(void);
        struct _on_exit_args _on_exit_args;
};
# 105 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\sys\\reent.h" 3
struct __sbuf {
 unsigned char *_base;
 int _size;
};
# 166 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\sys\\reent.h" 3
#define _REENT_SMALL_CHECK_INIT(ptr) 


struct __sFILE {
  unsigned char *_p;
  int _r;
  int _w;
  short _flags;
  short _file;
  struct __sbuf _bf;
  int _lbfsize;






  void * _cookie;

  int (* _read) (struct _reent *, void *, char *, int)
                     ;
  int (* _write) (struct _reent *, void *, const char *, int)
                            ;
  _fpos_t (* _seek) (struct _reent *, void *, _fpos_t, int);
  int (* _close) (struct _reent *, void *);


  struct __sbuf _ub;
  unsigned char *_up;
  int _ur;


  unsigned char _ubuf[3];
  unsigned char _nbuf[1];


  struct __sbuf _lb;


  int _blksize;
  int _offset;


  struct _reent *_data;



  _flock_t _lock;

  _mbstate_t _mbstate;
  int _flags2;
};
# 273 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\sys\\reent.h" 3
typedef struct __sFILE __FILE;



struct _glue
{
  struct _glue *_next;
  int _niobs;
  __FILE *_iobs;
};
# 298 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\sys\\reent.h" 3
#define _RAND48_SEED_0 (0x330e)
#define _RAND48_SEED_1 (0xabcd)
#define _RAND48_SEED_2 (0x1234)
#define _RAND48_MULT_0 (0xe66d)
#define _RAND48_MULT_1 (0xdeec)
#define _RAND48_MULT_2 (0x0005)
#define _RAND48_ADD (0x000b)
struct _rand48 {
  unsigned short _seed[3];
  unsigned short _mult[3];
  unsigned short _add;




};


#define _REENT_EMERGENCY_SIZE 25
#define _REENT_ASCTIME_SIZE 26
#define _REENT_SIGNAL_SIZE 24
# 579 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\sys\\reent.h" 3
struct _reent
{
  int _errno;




  __FILE *_stdin, *_stdout, *_stderr;

  int _inc;
  char _emergency[25];

  int _current_category;
  const char *_current_locale;

  int __sdidinit;

  void (* __cleanup) (struct _reent *);


  struct _Bigint *_result;
  int _result_k;
  struct _Bigint *_p5s;
  struct _Bigint **_freelist;


  int _cvtlen;
  char *_cvtbuf;

  union
    {
      struct
        {
          unsigned int _unused_rand;
          char * _strtok_last;
          char _asctime_buf[26];
          struct __tm _localtime_buf;
          int _gamma_signgam;
          __extension__ unsigned long long _rand_next;
          struct _rand48 _r48;
          _mbstate_t _mblen_state;
          _mbstate_t _mbtowc_state;
          _mbstate_t _wctomb_state;
          char _l64a_buf[8];
          char _signal_buf[24];
          int _getdate_err;
          _mbstate_t _mbrlen_state;
          _mbstate_t _mbrtowc_state;
          _mbstate_t _mbsrtowcs_state;
          _mbstate_t _wcrtomb_state;
          _mbstate_t _wcsrtombs_state;
   int _h_errno;
        } _reent;



      struct
        {
#define _N_LISTS 30
          unsigned char * _nextf[30];
          unsigned int _nmalloc[30];
        } _unused;
    } _new;


  struct _atexit *_atexit;
  struct _atexit _atexit0;


  void (**(_sig_func))(int);




  struct _glue __sglue;
  __FILE __sf[3];
};

#define _REENT_INIT(var) { 0, &(var).__sf[0], &(var).__sf[1], &(var).__sf[2], 0, "", 0, "C", 0, _NULL, _NULL, 0, _NULL, _NULL, 0, _NULL, { { 0, _NULL, "", {0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, 1, { {_RAND48_SEED_0, _RAND48_SEED_1, _RAND48_SEED_2}, {_RAND48_MULT_0, _RAND48_MULT_1, _RAND48_MULT_2}, _RAND48_ADD }, {0, {0}}, {0, {0}}, {0, {0}}, "", "", 0, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}}, {0, {0}} } }, _NULL, {_NULL, 0, {_NULL}, {{_NULL}, {_NULL}, 0, 0}}, _NULL, {_NULL, 0, _NULL} }
# 706 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\sys\\reent.h" 3
#define _REENT_INIT_PTR(var) { (var)->_errno = 0; (var)->_stdin = &(var)->__sf[0]; (var)->_stdout = &(var)->__sf[1]; (var)->_stderr = &(var)->__sf[2]; (var)->_inc = 0; memset(&(var)->_emergency, 0, sizeof((var)->_emergency)); (var)->_current_category = 0; (var)->_current_locale = "C"; (var)->__sdidinit = 0; (var)->__cleanup = _NULL; (var)->_result = _NULL; (var)->_result_k = 0; (var)->_p5s = _NULL; (var)->_freelist = _NULL; (var)->_cvtlen = 0; (var)->_cvtbuf = _NULL; (var)->_new._reent._unused_rand = 0; (var)->_new._reent._strtok_last = _NULL; (var)->_new._reent._asctime_buf[0] = 0; memset(&(var)->_new._reent._localtime_buf, 0, sizeof((var)->_new._reent._localtime_buf)); (var)->_new._reent._gamma_signgam = 0; (var)->_new._reent._rand_next = 1; (var)->_new._reent._r48._seed[0] = _RAND48_SEED_0; (var)->_new._reent._r48._seed[1] = _RAND48_SEED_1; (var)->_new._reent._r48._seed[2] = _RAND48_SEED_2; (var)->_new._reent._r48._mult[0] = _RAND48_MULT_0; (var)->_new._reent._r48._mult[1] = _RAND48_MULT_1; (var)->_new._reent._r48._mult[2] = _RAND48_MULT_2; (var)->_new._reent._r48._add = _RAND48_ADD; (var)->_new._reent._mblen_state.__count = 0; (var)->_new._reent._mblen_state.__value.__wch = 0; (var)->_new._reent._mbtowc_state.__count = 0; (var)->_new._reent._mbtowc_state.__value.__wch = 0; (var)->_new._reent._wctomb_state.__count = 0; (var)->_new._reent._wctomb_state.__value.__wch = 0; (var)->_new._reent._mbrlen_state.__count = 0; (var)->_new._reent._mbrlen_state.__value.__wch = 0; (var)->_new._reent._mbrtowc_state.__count = 0; (var)->_new._reent._mbrtowc_state.__value.__wch = 0; (var)->_new._reent._mbsrtowcs_state.__count = 0; (var)->_new._reent._mbsrtowcs_state.__value.__wch = 0; (var)->_new._reent._wcrtomb_state.__count = 0; (var)->_new._reent._wcrtomb_state.__value.__wch = 0; (var)->_new._reent._wcsrtombs_state.__count = 0; (var)->_new._reent._wcsrtombs_state.__value.__wch = 0; (var)->_new._reent._l64a_buf[0] = '\0'; (var)->_new._reent._signal_buf[0] = '\0'; (var)->_new._reent._getdate_err = 0; (var)->_atexit = _NULL; (var)->_atexit0._next = _NULL; (var)->_atexit0._ind = 0; (var)->_atexit0._fns[0] = _NULL; (var)->_atexit0._on_exit_args._fntypes = 0; (var)->_atexit0._on_exit_args._fnargs[0] = _NULL; (var)->_sig_func = _NULL; (var)->__sglue._next = _NULL; (var)->__sglue._niobs = 0; (var)->__sglue._iobs = _NULL; memset(&(var)->__sf, 0, sizeof((var)->__sf)); }
# 768 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\sys\\reent.h" 3
#define _REENT_CHECK_RAND48(ptr) 
#define _REENT_CHECK_MP(ptr) 
#define _REENT_CHECK_TM(ptr) 
#define _REENT_CHECK_ASCTIME_BUF(ptr) 
#define _REENT_CHECK_EMERGENCY(ptr) 
#define _REENT_CHECK_MISC(ptr) 
#define _REENT_CHECK_SIGNAL_BUF(ptr) 

#define _REENT_SIGNGAM(ptr) ((ptr)->_new._reent._gamma_signgam)
#define _REENT_RAND_NEXT(ptr) ((ptr)->_new._reent._rand_next)
#define _REENT_RAND48_SEED(ptr) ((ptr)->_new._reent._r48._seed)
#define _REENT_RAND48_MULT(ptr) ((ptr)->_new._reent._r48._mult)
#define _REENT_RAND48_ADD(ptr) ((ptr)->_new._reent._r48._add)
#define _REENT_MP_RESULT(ptr) ((ptr)->_result)
#define _REENT_MP_RESULT_K(ptr) ((ptr)->_result_k)
#define _REENT_MP_P5S(ptr) ((ptr)->_p5s)
#define _REENT_MP_FREELIST(ptr) ((ptr)->_freelist)
#define _REENT_ASCTIME_BUF(ptr) ((ptr)->_new._reent._asctime_buf)
#define _REENT_TM(ptr) (&(ptr)->_new._reent._localtime_buf)
#define _REENT_EMERGENCY(ptr) ((ptr)->_emergency)
#define _REENT_STRTOK_LAST(ptr) ((ptr)->_new._reent._strtok_last)
#define _REENT_MBLEN_STATE(ptr) ((ptr)->_new._reent._mblen_state)
#define _REENT_MBTOWC_STATE(ptr) ((ptr)->_new._reent._mbtowc_state)
#define _REENT_WCTOMB_STATE(ptr) ((ptr)->_new._reent._wctomb_state)
#define _REENT_MBRLEN_STATE(ptr) ((ptr)->_new._reent._mbrlen_state)
#define _REENT_MBRTOWC_STATE(ptr) ((ptr)->_new._reent._mbrtowc_state)
#define _REENT_MBSRTOWCS_STATE(ptr) ((ptr)->_new._reent._mbsrtowcs_state)
#define _REENT_WCRTOMB_STATE(ptr) ((ptr)->_new._reent._wcrtomb_state)
#define _REENT_WCSRTOMBS_STATE(ptr) ((ptr)->_new._reent._wcsrtombs_state)
#define _REENT_L64A_BUF(ptr) ((ptr)->_new._reent._l64a_buf)
#define _REENT_SIGNAL_BUF(ptr) ((ptr)->_new._reent._signal_buf)
#define _REENT_GETDATE_ERR_P(ptr) (&((ptr)->_new._reent._getdate_err))






#define _Kmax (sizeof (size_t) << 3)
# 817 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\sys\\reent.h" 3
extern struct _reent *_impure_ptr __attribute__((__fardata__));
extern struct _reent *const _global_impure_ptr __attribute__((__fardata__));

void _reclaim_reent (struct _reent *);
# 832 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\sys\\reent.h" 3
#define _REENT _impure_ptr




#define _GLOBAL_REENT _global_impure_ptr
# 46 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\stdio.h" 2 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\sys\\types.h" 1 3
# 23 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\sys\\types.h" 3
#define __INTTYPES_DEFINED__ 
# 60 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\sys\\types.h" 3
#define _SYS_TYPES_H 
# 69 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\sys\\types.h" 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\lib\\gcc\\tricore\\4.9.4\\include\\stddef.h" 1 3 4
# 70 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\sys\\types.h" 2 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\machine\\types.h" 1 3

#define _MACHTYPES_H_ 
# 13 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\machine\\types.h" 3
#define _CLOCK_T_ unsigned long
#define _TIME_T_ long
#define _CLOCKID_T_ unsigned long
#define _TIMER_T_ unsigned long


typedef long int __off_t;
typedef int __pid_t;

__extension__ typedef long long int __loff_t;
# 71 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\sys\\types.h" 2 3
# 80 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\sys\\types.h" 3
#define _ST_INT32 __attribute__ ((__mode__ (__SI__)))






#define physadr physadr_t
#define quad quad_t



typedef unsigned char u_char;
typedef unsigned short u_short;
typedef unsigned int u_int;
typedef unsigned long u_long;
#define _BSDTYPES_DEFINED 


typedef unsigned short ushort;
typedef unsigned int uint;



typedef unsigned long clock_t;
#define __clock_t_defined 



typedef long time_t;
#define __time_t_defined 



struct timespec {
  time_t tv_sec;
  long tv_nsec;
};

struct itimerspec {
  struct timespec it_interval;
  struct timespec it_value;
};


typedef long daddr_t;
typedef char * caddr_t;






typedef unsigned short ino_t;
# 162 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\sys\\types.h" 3
typedef _off_t off_t;
typedef __dev_t dev_t;
typedef __uid_t uid_t;
typedef __gid_t gid_t;





typedef int pid_t;



typedef long key_t;

typedef _ssize_t ssize_t;
# 191 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\sys\\types.h" 3
typedef unsigned int mode_t __attribute__ ((__mode__ (__SI__)));




typedef unsigned short nlink_t;
# 206 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\sys\\types.h" 3
#define _SYS_TYPES_FD_SET 
#define NBBY 8







#define FD_SETSIZE 64


typedef long fd_mask;
#define NFDBITS (sizeof (fd_mask) * NBBY)

#define howmany(x,y) (((x)+((y)-1))/(y))




typedef struct _types_fd_set {
 fd_mask fds_bits[(((64)+(((sizeof (fd_mask) * 8))-1))/((sizeof (fd_mask) * 8)))];
} _types_fd_set;

#define fd_set _types_fd_set

#define FD_SET(n,p) ((p)->fds_bits[(n)/NFDBITS] |= (1L << ((n) % NFDBITS)))
#define FD_CLR(n,p) ((p)->fds_bits[(n)/NFDBITS] &= ~(1L << ((n) % NFDBITS)))
#define FD_ISSET(n,p) ((p)->fds_bits[(n)/NFDBITS] & (1L << ((n) % NFDBITS)))
#define FD_ZERO(p) (__extension__ (void)({ size_t __i; char *__tmp = (char *)p; for (__i = 0; __i < sizeof (*(p)); ++__i) *__tmp++ = 0; }))
# 244 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\sys\\types.h" 3
#undef __MS_types__
#undef _ST_INT32



typedef unsigned long clockid_t;
#define __clockid_t_defined 



typedef unsigned long timer_t;
#define __timer_t_defined 


typedef unsigned long useconds_t;
typedef long suseconds_t;

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\sys\\features.h" 1 3
# 22 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\sys\\features.h" 3
#define _SYS_FEATURES_H 
# 262 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\sys\\types.h" 2 3
# 533 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\sys\\types.h" 3
#undef __need_inttypes
# 47 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\stdio.h" 2 3



typedef __FILE FILE;
# 59 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\stdio.h" 3
typedef _fpos_t fpos_t;





# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\sys\\stdio.h" 1 3

#define _NEWLIB_STDIO_H 
# 13 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\sys\\stdio.h" 3
#define _flockfile(fp) (((fp)->_flags & __SSTR) ? 0 : __lock_acquire_recursive((fp)->_lock))







#define _funlockfile(fp) (((fp)->_flags & __SSTR) ? 0 : __lock_release_recursive((fp)->_lock))
# 66 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\stdio.h" 2 3

#define __SLBF 0x0001
#define __SNBF 0x0002
#define __SRD 0x0004
#define __SWR 0x0008

#define __SRW 0x0010
#define __SEOF 0x0020
#define __SERR 0x0040
#define __SMBF 0x0080
#define __SAPP 0x0100
#define __SSTR 0x0200
#define __SOPT 0x0400
#define __SNPT 0x0800
#define __SOFF 0x1000
#define __SORD 0x2000



#define __SL64 0x8000


#define __SWID 0x2000
# 99 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\stdio.h" 3
#define _IOFBF 0
#define _IOLBF 1
#define _IONBF 2





#define EOF (-1)




#define BUFSIZ 1024





#define FOPEN_MAX 20





#define FILENAME_MAX 1024





#define L_tmpnam FILENAME_MAX







#define SEEK_SET 0


#define SEEK_CUR 1


#define SEEK_END 2


#define TMP_MAX 26


#define stdin (_REENT->_stdin)
#define stdout (_REENT->_stdout)
#define stderr (_REENT->_stderr)






#define _stdin_r(x) ((x)->_stdin)
#define _stdout_r(x) ((x)->_stdout)
#define _stderr_r(x) ((x)->_stderr)







#define __VALIST __gnuc_va_list





FILE * tmpfile (void);
char * tmpnam (char *);
int fclose (FILE *);
int fflush (FILE *);
FILE * freopen (const char *, const char *, FILE *);
void setbuf (FILE *, char *);
int setvbuf (FILE *, char *, int, size_t);
int fprintf (FILE *, const char *, ...) __attribute__ ((__format__ (__printf__, 2, 3)))
                                                            ;
int fscanf (FILE *, const char *, ...) __attribute__ ((__format__ (__scanf__, 2, 3)))
                                                           ;
int printf (const char *, ...) __attribute__ ((__format__ (__printf__, 1, 2)))
                                                            ;
int scanf (const char *, ...) __attribute__ ((__format__ (__scanf__, 1, 2)))
                                                           ;
int sscanf (const char *, const char *, ...) __attribute__ ((__format__ (__scanf__, 2, 3)))
                                                           ;
int vfprintf (FILE *, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 2, 0)))
                                                            ;
int vprintf (const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 1, 0)))
                                                            ;
int vsprintf (char *, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 2, 0)))
                                                            ;
int fgetc (FILE *);
char * fgets (char *, int, FILE *);
int fputc (int, FILE *);
int fputs (const char *, FILE *);
int getc (FILE *);
int getchar (void);
char * gets (char *);
int putc (int, FILE *);
int putchar (int);
int puts (const char *);
int ungetc (int, FILE *);
size_t fread (void *, size_t _size, size_t _n, FILE *);
size_t fwrite (const void * , size_t _size, size_t _n, FILE *);



int fgetpos (FILE *, fpos_t *);

int fseek (FILE *, long, int);



int fsetpos (FILE *, const fpos_t *);

long ftell ( FILE *);
void rewind (FILE *);
void clearerr (FILE *);
int feof (FILE *);
int ferror (FILE *);
void perror (const char *);

FILE * fopen (const char *_name, const char *_type);
int sprintf (char *, const char *, ...) __attribute__ ((__format__ (__printf__, 2, 3)))
                                                            ;
int remove (const char *);
int rename (const char *, const char *);
# 246 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\stdio.h" 3
int asiprintf (char **, const char *, ...) __attribute__ ((__format__ (__printf__, 2, 3)))
                                                            ;
char * asniprintf (char *, size_t *, const char *, ...) __attribute__ ((__format__ (__printf__, 3, 4)))
                                                            ;
char * asnprintf (char *, size_t *, const char *, ...) __attribute__ ((__format__ (__printf__, 3, 4)))
                                                            ;
int asprintf (char **, const char *, ...) __attribute__ ((__format__ (__printf__, 2, 3)))
                                                            ;

int diprintf (int, const char *, ...) __attribute__ ((__format__ (__printf__, 2, 3)))
                                                            ;

int fcloseall (void);
int fiprintf (FILE *, const char *, ...) __attribute__ ((__format__ (__printf__, 2, 3)))
                                                            ;
int fiscanf (FILE *, const char *, ...) __attribute__ ((__format__ (__scanf__, 2, 3)))
                                                           ;
int iprintf (const char *, ...) __attribute__ ((__format__ (__printf__, 1, 2)))
                                                            ;
int iscanf (const char *, ...) __attribute__ ((__format__ (__scanf__, 1, 2)))
                                                           ;
int siprintf (char *, const char *, ...) __attribute__ ((__format__ (__printf__, 2, 3)))
                                                            ;
int siscanf (const char *, const char *, ...) __attribute__ ((__format__ (__scanf__, 2, 3)))
                                                           ;
int snprintf (char *, size_t, const char *, ...) __attribute__ ((__format__ (__printf__, 3, 4)))
                                                            ;
int sniprintf (char *, size_t, const char *, ...) __attribute__ ((__format__ (__printf__, 3, 4)))
                                                            ;
char * tempnam (const char *, const char *);
int vasiprintf (char **, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 2, 0)))
                                                            ;
char * vasniprintf (char *, size_t *, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 3, 0)))
                                                            ;
char * vasnprintf (char *, size_t *, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 3, 0)))
                                                            ;
int vasprintf (char **, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 2, 0)))
                                                            ;
int vdiprintf (int, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 2, 0)))
                                                            ;
int vfiprintf (FILE *, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 2, 0)))
                                                            ;
int vfiscanf (FILE *, const char *, __gnuc_va_list) __attribute__ ((__format__ (__scanf__, 2, 0)))
                                                           ;
int vfscanf (FILE *, const char *, __gnuc_va_list) __attribute__ ((__format__ (__scanf__, 2, 0)))
                                                           ;
int viprintf (const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 1, 0)))
                                                            ;
int viscanf (const char *, __gnuc_va_list) __attribute__ ((__format__ (__scanf__, 1, 0)))
                                                           ;
int vscanf (const char *, __gnuc_va_list) __attribute__ ((__format__ (__scanf__, 1, 0)))
                                                           ;
int vsiprintf (char *, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 2, 0)))
                                                            ;
int vsiscanf (const char *, const char *, __gnuc_va_list) __attribute__ ((__format__ (__scanf__, 2, 0)))
                                                           ;
int vsniprintf (char *, size_t, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 3, 0)))
                                                            ;
int vsnprintf (char *, size_t, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 3, 0)))
                                                            ;
int vsscanf (const char *, const char *, __gnuc_va_list) __attribute__ ((__format__ (__scanf__, 2, 0)))
                                                           ;
# 361 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\stdio.h" 3
int _asiprintf_r (struct _reent *, char **, const char *, ...) __attribute__ ((__format__ (__printf__, 3, 4)))
                                                            ;
char * _asniprintf_r (struct _reent *, char *, size_t *, const char *, ...) __attribute__ ((__format__ (__printf__, 4, 5)))
                                                            ;
char * _asnprintf_r (struct _reent *, char *, size_t *, const char *, ...) __attribute__ ((__format__ (__printf__, 4, 5)))
                                                            ;
int _asprintf_r (struct _reent *, char **, const char *, ...) __attribute__ ((__format__ (__printf__, 3, 4)))
                                                            ;
int _diprintf_r (struct _reent *, int, const char *, ...) __attribute__ ((__format__ (__printf__, 3, 4)))
                                                            ;
int _dprintf_r (struct _reent *, int, const char *, ...) __attribute__ ((__format__ (__printf__, 3, 4)))
                                                            ;
int _fclose_r (struct _reent *, FILE *);
int _fcloseall_r (struct _reent *);
FILE * _fdopen_r (struct _reent *, int, const char *);
int _fflush_r (struct _reent *, FILE *);
int _fgetc_r (struct _reent *, FILE *);
char * _fgets_r (struct _reent *, char *, int, FILE *);




int _fgetpos_r (struct _reent *, FILE *, fpos_t *);
int _fsetpos_r (struct _reent *, FILE *, const fpos_t *);

int _fiprintf_r (struct _reent *, FILE *, const char *, ...) __attribute__ ((__format__ (__printf__, 3, 4)))
                                                            ;
int _fiscanf_r (struct _reent *, FILE *, const char *, ...) __attribute__ ((__format__ (__scanf__, 3, 4)))
                                                           ;
FILE * _fmemopen_r (struct _reent *, void *, size_t, const char *);
FILE * _fopen_r (struct _reent *, const char *, const char *);
FILE * _freopen_r (struct _reent *, const char *, const char *, FILE *);
int _fprintf_r (struct _reent *, FILE *, const char *, ...) __attribute__ ((__format__ (__printf__, 3, 4)))
                                                            ;
int _fpurge_r (struct _reent *, FILE *);
int _fputc_r (struct _reent *, int, FILE *);
int _fputs_r (struct _reent *, const char *, FILE *);
size_t _fread_r (struct _reent *, void *, size_t _size, size_t _n, FILE *);
int _fscanf_r (struct _reent *, FILE *, const char *, ...) __attribute__ ((__format__ (__scanf__, 3, 4)))
                                                           ;
int _fseek_r (struct _reent *, FILE *, long, int);
int _fseeko_r (struct _reent *, FILE *, _off_t, int);
long _ftell_r (struct _reent *, FILE *);
_off_t _ftello_r (struct _reent *, FILE *);
void _rewind_r (struct _reent *, FILE *);
size_t _fwrite_r (struct _reent *, const void * , size_t _size, size_t _n, FILE *);
int _getc_r (struct _reent *, FILE *);
int _getc_unlocked_r (struct _reent *, FILE *);
int _getchar_r (struct _reent *);
int _getchar_unlocked_r (struct _reent *);
char * _gets_r (struct _reent *, char *);
int _iprintf_r (struct _reent *, const char *, ...) __attribute__ ((__format__ (__printf__, 2, 3)))
                                                            ;
int _iscanf_r (struct _reent *, const char *, ...) __attribute__ ((__format__ (__scanf__, 2, 3)))
                                                           ;
FILE * _open_memstream_r (struct _reent *, char **, size_t *);
void _perror_r (struct _reent *, const char *);
int _printf_r (struct _reent *, const char *, ...) __attribute__ ((__format__ (__printf__, 2, 3)))
                                                            ;
int _putc_r (struct _reent *, int, FILE *);
int _putc_unlocked_r (struct _reent *, int, FILE *);
int _putchar_unlocked_r (struct _reent *, int);
int _putchar_r (struct _reent *, int);
int _puts_r (struct _reent *, const char *);
int _remove_r (struct _reent *, const char *);
int _rename_r (struct _reent *, const char *_old, const char *_new)
                                          ;
int _scanf_r (struct _reent *, const char *, ...) __attribute__ ((__format__ (__scanf__, 2, 3)))
                                                           ;
int _siprintf_r (struct _reent *, char *, const char *, ...) __attribute__ ((__format__ (__printf__, 3, 4)))
                                                            ;
int _siscanf_r (struct _reent *, const char *, const char *, ...) __attribute__ ((__format__ (__scanf__, 3, 4)))
                                                           ;
int _sniprintf_r (struct _reent *, char *, size_t, const char *, ...) __attribute__ ((__format__ (__printf__, 4, 5)))
                                                            ;
int _snprintf_r (struct _reent *, char *, size_t, const char *, ...) __attribute__ ((__format__ (__printf__, 4, 5)))
                                                            ;
int _sprintf_r (struct _reent *, char *, const char *, ...) __attribute__ ((__format__ (__printf__, 3, 4)))
                                                            ;
int _sscanf_r (struct _reent *, const char *, const char *, ...) __attribute__ ((__format__ (__scanf__, 3, 4)))
                                                           ;
char * _tempnam_r (struct _reent *, const char *, const char *);
FILE * _tmpfile_r (struct _reent *);
char * _tmpnam_r (struct _reent *, char *);
int _ungetc_r (struct _reent *, int, FILE *);
int _vasiprintf_r (struct _reent *, char **, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 3, 0)))
                                                            ;
char * _vasniprintf_r (struct _reent*, char *, size_t *, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 4, 0)))
                                                            ;
char * _vasnprintf_r (struct _reent*, char *, size_t *, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 4, 0)))
                                                            ;
int _vasprintf_r (struct _reent *, char **, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 3, 0)))
                                                            ;
int _vdiprintf_r (struct _reent *, int, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 3, 0)))
                                                            ;
int _vdprintf_r (struct _reent *, int, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 3, 0)))
                                                            ;
int _vfiprintf_r (struct _reent *, FILE *, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 3, 0)))
                                                            ;
int _vfiscanf_r (struct _reent *, FILE *, const char *, __gnuc_va_list) __attribute__ ((__format__ (__scanf__, 3, 0)))
                                                           ;
int _vfprintf_r (struct _reent *, FILE *, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 3, 0)))
                                                            ;
int _vfscanf_r (struct _reent *, FILE *, const char *, __gnuc_va_list) __attribute__ ((__format__ (__scanf__, 3, 0)))
                                                           ;
int _viprintf_r (struct _reent *, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 2, 0)))
                                                            ;
int _viscanf_r (struct _reent *, const char *, __gnuc_va_list) __attribute__ ((__format__ (__scanf__, 2, 0)))
                                                           ;
int _vprintf_r (struct _reent *, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 2, 0)))
                                                            ;
int _vscanf_r (struct _reent *, const char *, __gnuc_va_list) __attribute__ ((__format__ (__scanf__, 2, 0)))
                                                           ;
int _vsiprintf_r (struct _reent *, char *, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 3, 0)))
                                                            ;
int _vsiscanf_r (struct _reent *, const char *, const char *, __gnuc_va_list) __attribute__ ((__format__ (__scanf__, 3, 0)))
                                                           ;
int _vsniprintf_r (struct _reent *, char *, size_t, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 4, 0)))
                                                            ;
int _vsnprintf_r (struct _reent *, char *, size_t, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 4, 0)))
                                                            ;
int _vsprintf_r (struct _reent *, char *, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 3, 0)))
                                                            ;
int _vsscanf_r (struct _reent *, const char *, const char *, __gnuc_va_list) __attribute__ ((__format__ (__scanf__, 3, 0)))
                                                           ;



int fpurge (FILE *);
ssize_t __getdelim (char **, size_t *, int, FILE *);
ssize_t __getline (char **, size_t *, FILE *);
# 519 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\stdio.h" 3
int __srget_r (struct _reent *, FILE *);
int __swbuf_r (struct _reent *, int, FILE *);
# 586 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\stdio.h" 3
#define __sgetc_raw_r(__ptr,__f) (--(__f)->_r < 0 ? __srget_r(__ptr, __f) : (int)(*(__f)->_p++))
# 615 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\stdio.h" 3
#define __sgetc_r(__ptr,__p) __sgetc_raw_r(__ptr, __p)
# 631 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\stdio.h" 3
#define __sputc_raw_r(__ptr,__c,__p) (--(__p)->_w < 0 ? (__p)->_w >= (__p)->_lbfsize ? (*(__p)->_p = (__c)), *(__p)->_p != '\n' ? (int)*(__p)->_p++ : __swbuf_r(__ptr, '\n', __p) : __swbuf_r(__ptr, (int)(__c), __p) : (*(__p)->_p = (__c), (int)*(__p)->_p++))
# 645 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\stdio.h" 3
#define __sputc_r(__ptr,__c,__p) __sputc_raw_r(__ptr, __c, __p)



#define __sfeof(p) (((p)->_flags & __SEOF) != 0)
#define __sferror(p) (((p)->_flags & __SERR) != 0)
#define __sclearerr(p) ((void)((p)->_flags &= ~(__SERR|__SEOF)))
#define __sfileno(p) ((p)->_file)


#define feof(p) __sfeof(p)
#define ferror(p) __sferror(p)
#define clearerr(p) __sclearerr(p)
# 666 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\stdio.h" 3
#define getc(fp) __sgetc_r(_REENT, fp)
#define putc(x,fp) __sputc_r(_REENT, x, fp)
# 684 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\stdio.h" 3
#define getchar() getc(stdin)
#define putchar(x) putc(x, stdout)


# 28 "D:\\Workspace\\autoever_osek\\can_based_OSEK_OS_TEST\\bsw\\drivers\\../../main.h" 2


extern unsigned char cmd_clr_scr[8];
extern unsigned char cmd_clr_line[5];
extern unsigned char cmd_mov_cur_up[5];
extern unsigned char cmd;

#define CLR_SCR() my_printf("%s", cmd_clr_scr)
#define CLR_LINE() my_printf("%s", cmd_clr_line)
#define MOV_CUR_UP() my_printf("%s", cmd_mov_cur_up)
# 5 "D:\\Workspace\\autoever_osek\\can_based_OSEK_OS_TEST\\bsw\\drivers\\gpt12.c" 2

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\machine\\wdtcon.h" 1 3
# 28 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\machine\\wdtcon.h" 3
#define __wdtcon_h 
# 57 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\machine\\wdtcon.h" 3
extern void lock_wdtcon (void);
extern void unlock_wdtcon (void);

extern void WDT_Passwd (void);
extern void WDT_Modify (unsigned long modify, unsigned long mask);


extern void lock_safety_wdtcon (void);
extern void unlock_safety_wdtcon (void);
# 7 "D:\\Workspace\\autoever_osek\\can_based_OSEK_OS_TEST\\bsw\\drivers\\gpt12.c" 2

# 1 "D:\\Workspace\\autoever_osek\\can_based_OSEK_OS_TEST\\bsw\\drivers\\../system/interrupts.h" 1
# 9 "D:\\Workspace\\autoever_osek\\can_based_OSEK_OS_TEST\\bsw\\drivers\\gpt12.c" 2

#define ISR_PRIORITY_GPT12_TIMER 6
#define GPT1_BLOCK_PRESCALER 32
#define TIMER_T3_INPUT_PRESCALER 32
#define GPT120_MODULE_FREQUENCY 100000000

static volatile unsigned int lMotorDuty = 20;
static volatile unsigned int rMotorDuty = 20;
static volatile unsigned int cnt_10us = 0;
static volatile unsigned int cntDelay = 0;

extern void IsrGpt120T3Handler_Beep(void);

unsigned int getLeftMotorDuty(void)
{
 return lMotorDuty;
}

unsigned int getRightMotorDuty(void)
{
 return rMotorDuty;
}

void setLeftMotorDuty(unsigned int duty)
{

 lMotorDuty = duty;
}

void setRightMotorDuty(unsigned int duty)
{

 rMotorDuty = duty;
}

unsigned int getcntDelay(void)
{
 return cntDelay;
}

void setcntDelay(unsigned int n)
{
 cntDelay = n;
}






void IsrGpt2T6Handler(void)
{
 if (cnt_10us < lMotorDuty) {
  (*(Ifx_P*)0xF003A200u).OUT.B.P1 = 1;
 } else {
  (*(Ifx_P*)0xF003A200u).OUT.B.P1 = 0;
 }

 if (cnt_10us < rMotorDuty) {
  (*(Ifx_P*)0xF003B000u).OUT.B.P3 = 1;
 } else {
  (*(Ifx_P*)0xF003B000u).OUT.B.P3 = 0;
 }

 if (cnt_10us == 100) {
  cnt_10us = 0;
 } else {
  cnt_10us++;
 }
 cntDelay++;
}

void init_gpt1(void)
{

 unlock_wdtcon();
 (*(Ifx_GPT12*)0xF0002E00u).CLC.B.DISR = 0;
 lock_wdtcon();


 (*(Ifx_GPT12*)0xF0002E00u).T3CON.B.BPS1 = 0x2;
 (*(Ifx_GPT12*)0xF0002E00u).T3CON.B.T3M = 0x0;
 (*(Ifx_GPT12*)0xF0002E00u).T3CON.B.T3UD = 0x1;
 (*(Ifx_GPT12*)0xF0002E00u).T3CON.B.T3I = 0x5;

 (*(Ifx_GPT12*)0xF0002E00u).T3.U = 100;

    (*(Ifx_GPT12*)0xF0002E00u).T2CON.B.T2M = 0x4;
    (*(Ifx_GPT12*)0xF0002E00u).T2CON.B.T2I = 0x7;
    (*(Ifx_GPT12*)0xF0002E00u).T2.U = 100;
    InterruptInstall(282, (void(*)(int))IsrGpt120T3Handler_Beep, 3, 0);


    (*(Ifx_GPT12*)0xF0002E00u).T4CON.B.T4M = 0x0;
    (*(Ifx_GPT12*)0xF0002E00u).T4CON.B.T4UD = 0x0;
    (*(Ifx_GPT12*)0xF0002E00u).T4CON.B.T4I = 0x5;
    (*(Ifx_GPT12*)0xF0002E00u).T4.U = 0u;
}


void init_gpt2(void)
{

 unlock_wdtcon();
 (*(Ifx_GPT12*)0xF0002E00u).CLC.B.DISR = 0;
 lock_wdtcon();


    (*(Ifx_GPT12*)0xF0002E00u).T6CON.B.BPS2 = 0x0;
    (*(Ifx_GPT12*)0xF0002E00u).T6CON.B.T6M = 0x0;
    (*(Ifx_GPT12*)0xF0002E00u).T6CON.B.T6UD = 0x1;
    (*(Ifx_GPT12*)0xF0002E00u).T6CON.B.T6I = 0x0;
    (*(Ifx_GPT12*)0xF0002E00u).T6CON.B.T6OE = 0x1;
    (*(Ifx_GPT12*)0xF0002E00u).T6CON.B.T6SR = 0x1;
    (*(Ifx_GPT12*)0xF0002E00u).T6.U = 250u;

    (*(Ifx_GPT12*)0xF0002E00u).CAPREL.U = 250u;
 InterruptInstall(285, (void(*)(int))IsrGpt2T6Handler, 2, 0);



}


void runGpt12_T3(void)
{
 (*(Ifx_GPT12*)0xF0002E00u).T3CON.B.T3R = 1;
}

void stopGpt12_T3(void)
{
 (*(Ifx_GPT12*)0xF0002E00u).T3CON.B.T3R = 0;
}

void runGpt12_T6(void)
{
 (*(Ifx_GPT12*)0xF0002E00u).T6CON.B.T6R = 1;
}

void stopGpt12_T6(void)
{
 (*(Ifx_GPT12*)0xF0002E00u).T6CON.B.T6R = 0;
}

void runGpt12_T4(void)
{
 (*(Ifx_GPT12*)0xF0002E00u).T4CON.B.T4R = 1;
}

void stopGpt12_T4()
{
 (*(Ifx_GPT12*)0xF0002E00u).T4CON.B.T4R = 0;
}

void setGpt12_T4(unsigned short value)
{
 (*(Ifx_GPT12*)0xF0002E00u).T4.U = value;
}

unsigned int getGpt12_T4(void)
{
 return (*(Ifx_GPT12*)0xF0002E00u).T4.U;
}
