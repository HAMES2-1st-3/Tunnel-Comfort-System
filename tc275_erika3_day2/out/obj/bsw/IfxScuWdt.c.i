# 1 "C:\\RTDRUI~1\\TC275_~1\\bsw\\IfxScuWdt.c"
# 1 "C:\\rtdruid3-ws\\tc275_erika3_day2\\out//"
# 1 "<built-in>"
#define __STDC__ 1
#define __STDC_VERSION__ 199901L
#define __STDC_HOSTED__ 1
#define __GNUC__ 4
#define __GNUC_MINOR__ 9
#define __GNUC_PATCHLEVEL__ 4
#define __VERSION__ "4.9.4 build on 2019-06-07"
#define __ATOMIC_RELAXED 0
#define __ATOMIC_SEQ_CST 5
#define __ATOMIC_ACQUIRE 2
#define __ATOMIC_RELEASE 3
#define __ATOMIC_ACQ_REL 4
#define __ATOMIC_CONSUME 1
#define __OPTIMIZE__ 1
#define __FAST_MATH__ 1
#define __FINITE_MATH_ONLY__ 1
#define __SIZEOF_INT__ 4
#define __SIZEOF_LONG__ 4
#define __SIZEOF_LONG_LONG__ 8
#define __SIZEOF_SHORT__ 2
#define __SIZEOF_FLOAT__ 4
#define __SIZEOF_DOUBLE__ 4
#define __SIZEOF_LONG_DOUBLE__ 8
#define __SIZEOF_SIZE_T__ 4
#define __CHAR_BIT__ 8
#define __BIGGEST_ALIGNMENT__ 4
#define __ORDER_LITTLE_ENDIAN__ 1234
#define __ORDER_BIG_ENDIAN__ 4321
#define __ORDER_PDP_ENDIAN__ 3412
#define __BYTE_ORDER__ __ORDER_LITTLE_ENDIAN__
#define __FLOAT_WORD_ORDER__ __ORDER_LITTLE_ENDIAN__
#define __SIZEOF_POINTER__ 4
#define __SIZE_TYPE__ long unsigned int
#define __PTRDIFF_TYPE__ long int
#define __WCHAR_TYPE__ int
#define __WINT_TYPE__ unsigned int
#define __INTMAX_TYPE__ long long int
#define __UINTMAX_TYPE__ long long unsigned int
#define __CHAR16_TYPE__ short unsigned int
#define __CHAR32_TYPE__ long unsigned int
#define __SIG_ATOMIC_TYPE__ int
#define __INT8_TYPE__ signed char
#define __INT16_TYPE__ short int
#define __INT32_TYPE__ long int
#define __INT64_TYPE__ long long int
#define __UINT8_TYPE__ unsigned char
#define __UINT16_TYPE__ short unsigned int
#define __UINT32_TYPE__ long unsigned int
#define __UINT64_TYPE__ long long unsigned int
#define __INT_LEAST8_TYPE__ signed char
#define __INT_LEAST16_TYPE__ short int
#define __INT_LEAST32_TYPE__ long int
#define __INT_LEAST64_TYPE__ long long int
#define __UINT_LEAST8_TYPE__ unsigned char
#define __UINT_LEAST16_TYPE__ short unsigned int
#define __UINT_LEAST32_TYPE__ long unsigned int
#define __UINT_LEAST64_TYPE__ long long unsigned int
#define __INT_FAST8_TYPE__ int
#define __INT_FAST16_TYPE__ int
#define __INT_FAST32_TYPE__ int
#define __INT_FAST64_TYPE__ long long int
#define __UINT_FAST8_TYPE__ unsigned int
#define __UINT_FAST16_TYPE__ unsigned int
#define __UINT_FAST32_TYPE__ unsigned int
#define __UINT_FAST64_TYPE__ long long unsigned int
#define __INTPTR_TYPE__ long int
#define __UINTPTR_TYPE__ long unsigned int
#define __has_include(STR) __has_include__(STR)
#define __has_include_next(STR) __has_include_next__(STR)
#define __GXX_ABI_VERSION 1002
#define __USING_SJLJ_EXCEPTIONS__ 1
#define __SCHAR_MAX__ 127
#define __SHRT_MAX__ 32767
#define __INT_MAX__ 2147483647
#define __LONG_MAX__ 2147483647L
#define __LONG_LONG_MAX__ 9223372036854775807LL
#define __WCHAR_MAX__ 2147483647
#define __WCHAR_MIN__ (-__WCHAR_MAX__ - 1)
#define __WINT_MAX__ 4294967295U
#define __WINT_MIN__ 0U
#define __PTRDIFF_MAX__ 2147483647L
#define __SIZE_MAX__ 4294967295UL
#define __INTMAX_MAX__ 9223372036854775807LL
#define __INTMAX_C(c) c ## LL
#define __UINTMAX_MAX__ 18446744073709551615ULL
#define __UINTMAX_C(c) c ## ULL
#define __SIG_ATOMIC_MAX__ 2147483647
#define __SIG_ATOMIC_MIN__ (-__SIG_ATOMIC_MAX__ - 1)
#define __INT8_MAX__ 127
#define __INT16_MAX__ 32767
#define __INT32_MAX__ 2147483647L
#define __INT64_MAX__ 9223372036854775807LL
#define __UINT8_MAX__ 255
#define __UINT16_MAX__ 65535
#define __UINT32_MAX__ 4294967295UL
#define __UINT64_MAX__ 18446744073709551615ULL
#define __INT_LEAST8_MAX__ 127
#define __INT8_C(c) c
#define __INT_LEAST16_MAX__ 32767
#define __INT16_C(c) c
#define __INT_LEAST32_MAX__ 2147483647L
#define __INT32_C(c) c ## L
#define __INT_LEAST64_MAX__ 9223372036854775807LL
#define __INT64_C(c) c ## LL
#define __UINT_LEAST8_MAX__ 255
#define __UINT8_C(c) c
#define __UINT_LEAST16_MAX__ 65535
#define __UINT16_C(c) c
#define __UINT_LEAST32_MAX__ 4294967295UL
#define __UINT32_C(c) c ## UL
#define __UINT_LEAST64_MAX__ 18446744073709551615ULL
#define __UINT64_C(c) c ## ULL
#define __INT_FAST8_MAX__ 2147483647
#define __INT_FAST16_MAX__ 2147483647
#define __INT_FAST32_MAX__ 2147483647
#define __INT_FAST64_MAX__ 9223372036854775807LL
#define __UINT_FAST8_MAX__ 4294967295U
#define __UINT_FAST16_MAX__ 4294967295U
#define __UINT_FAST32_MAX__ 4294967295U
#define __UINT_FAST64_MAX__ 18446744073709551615ULL
#define __INTPTR_MAX__ 2147483647L
#define __UINTPTR_MAX__ 4294967295UL
#define __GCC_IEC_559 0
#define __GCC_IEC_559_COMPLEX 0
#define __FLT_EVAL_METHOD__ 0
#define __DEC_EVAL_METHOD__ 2
#define __FLT_RADIX__ 2
#define __FLT_MANT_DIG__ 24
#define __FLT_DIG__ 6
#define __FLT_MIN_EXP__ (-125)
#define __FLT_MIN_10_EXP__ (-37)
#define __FLT_MAX_EXP__ 128
#define __FLT_MAX_10_EXP__ 38
#define __FLT_DECIMAL_DIG__ 9
#define __FLT_MAX__ 3.4028234663852886e+38F
#define __FLT_MIN__ 1.1754943508222875e-38F
#define __FLT_EPSILON__ 1.1920928955078125e-7F
#define __FLT_DENORM_MIN__ 1.4012984643248171e-45F
#define __FLT_HAS_DENORM__ 1
#define __FLT_HAS_INFINITY__ 1
#define __FLT_HAS_QUIET_NAN__ 1
#define __FP_FAST_FMAF 1
#define __DBL_MANT_DIG__ 24
#define __DBL_DIG__ 6
#define __DBL_MIN_EXP__ (-125)
#define __DBL_MIN_10_EXP__ (-37)
#define __DBL_MAX_EXP__ 128
#define __DBL_MAX_10_EXP__ 38
#define __DBL_DECIMAL_DIG__ 9
#define __DBL_MAX__ ((double)3.4028234663852886e+38L)
#define __DBL_MIN__ ((double)1.1754943508222875e-38L)
#define __DBL_EPSILON__ ((double)1.1920928955078125e-7L)
#define __DBL_DENORM_MIN__ ((double)1.4012984643248171e-45L)
#define __DBL_HAS_DENORM__ 1
#define __DBL_HAS_INFINITY__ 1
#define __DBL_HAS_QUIET_NAN__ 1
#define __FP_FAST_FMA 1
#define __LDBL_MANT_DIG__ 53
#define __LDBL_DIG__ 15
#define __LDBL_MIN_EXP__ (-1021)
#define __LDBL_MIN_10_EXP__ (-307)
#define __LDBL_MAX_EXP__ 1024
#define __LDBL_MAX_10_EXP__ 308
#define __DECIMAL_DIG__ 17
#define __LDBL_MAX__ 1.7976931348623157e+308L
#define __LDBL_MIN__ 2.2250738585072014e-308L
#define __LDBL_EPSILON__ 2.2204460492503131e-16L
#define __LDBL_DENORM_MIN__ 4.9406564584124654e-324L
#define __LDBL_HAS_DENORM__ 1
#define __LDBL_HAS_INFINITY__ 1
#define __LDBL_HAS_QUIET_NAN__ 1
#define __DEC32_MANT_DIG__ 7
#define __DEC32_MIN_EXP__ (-94)
#define __DEC32_MAX_EXP__ 97
#define __DEC32_MIN__ 1E-95DF
#define __DEC32_MAX__ 9.999999E96DF
#define __DEC32_EPSILON__ 1E-6DF
#define __DEC32_SUBNORMAL_MIN__ 0.000001E-95DF
#define __DEC64_MANT_DIG__ 16
#define __DEC64_MIN_EXP__ (-382)
#define __DEC64_MAX_EXP__ 385
#define __DEC64_MIN__ 1E-383DD
#define __DEC64_MAX__ 9.999999999999999E384DD
#define __DEC64_EPSILON__ 1E-15DD
#define __DEC64_SUBNORMAL_MIN__ 0.000000000000001E-383DD
#define __DEC128_MANT_DIG__ 34
#define __DEC128_MIN_EXP__ (-6142)
#define __DEC128_MAX_EXP__ 6145
#define __DEC128_MIN__ 1E-6143DL
#define __DEC128_MAX__ 9.999999999999999999999999999999999E6144DL
#define __DEC128_EPSILON__ 1E-33DL
#define __DEC128_SUBNORMAL_MIN__ 0.000000000000000000000000000000001E-6143DL
#define __REGISTER_PREFIX__ %
#define __USER_LABEL_PREFIX__ 
#define __GNUC_STDC_INLINE__ 1
#define __STRICT_ANSI__ 1
#define __GCC_ATOMIC_BOOL_LOCK_FREE 1
#define __GCC_ATOMIC_CHAR_LOCK_FREE 1
#define __GCC_ATOMIC_CHAR16_T_LOCK_FREE 1
#define __GCC_ATOMIC_CHAR32_T_LOCK_FREE 1
#define __GCC_ATOMIC_WCHAR_T_LOCK_FREE 1
#define __GCC_ATOMIC_SHORT_LOCK_FREE 1
#define __GCC_ATOMIC_INT_LOCK_FREE 1
#define __GCC_ATOMIC_LONG_LOCK_FREE 1
#define __GCC_ATOMIC_LLONG_LOCK_FREE 1
#define __GCC_ATOMIC_TEST_AND_SET_TRUEVAL 1
#define __GCC_ATOMIC_POINTER_LOCK_FREE 1
#define __PRAGMA_REDEFINE_EXTNAME 1
#define __SIZEOF_WCHAR_T__ 4
#define __SIZEOF_WINT_T__ 4
#define __SIZEOF_PTRDIFF_T__ 4
#define __HIGHTEC__ 1
#define __HAVE_SHORT_DOUBLE__ 1
#define __tricore 1
#define __tricore__ 1
#define __TRICORE__ 1
#define __TC161__ 1
#define __TRICORE_CORE__ 0x161
#define __TC27XX__ 1
#define __TRICORE_NAME__ 0x2700
#define __TRICORE_HAVE_DIV__ 1
#define __TRICORE_HAVE_FTOIZ__ 1
#define __TRICORE_HAVE_MOV64__ 1
#define __TRICORE_HAVE_FLOAT16__ 1
#define __BUILTIN_TRICORE_NOP 1
#define __BUILTIN_TRICORE_LROTATE 1
#define __BUILTIN_TRICORE_RROTATE 1
#define __BUILTIN_TRICORE_INSERT 1
#define __BUILTIN_TRICORE_IMASK 1
#define __BUILTIN_TRICORE_SWAPW 1
#define __BUILTIN_TRICORE_SWAPMSKW 1
#define __BUILTIN_TRICORE_CMPSWAPW 1
#define __BUILTIN_TRICORE_SATB 1
#define __BUILTIN_TRICORE_SATH 1
#define __BUILTIN_TRICORE_SATBU 1
#define __BUILTIN_TRICORE_SATHU 1
#define __BUILTIN_TRICORE_LDMST 1
#define __ELF__ 1
# 1 "<command-line>"
#define __HAVE_SHORT_DOUBLE__ 1
# 1 "C:\\RTDRUI~1\\TC275_~1\\bsw\\IfxScuWdt.c"
# 49 "C:\\RTDRUI~1\\TC275_~1\\bsw\\IfxScuWdt.c"
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 1 3
# 59 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 3
#define IFXSCUWDT_H 1





# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 1 3
# 50 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_H 

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\Ifx_Cfg.h" 1 3
# 30 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\Ifx_Cfg.h" 3
#define IFX_CFG_H 1





#define IFX_CFG_SCU_XTAL_FREQUENCY (20000000)

#define IFX_CFG_SCU_PLL_FREQUENCY (200000000)
# 53 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 2 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxScu_bf.h" 1 3
# 28 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxScu_bf.h" 3
#define IFXSCU_BF_H 1






#define IFX_SCU_ACCEN0_EN0_LEN (1u)


#define IFX_SCU_ACCEN0_EN0_MSK (0x1u)


#define IFX_SCU_ACCEN0_EN0_OFF (0u)


#define IFX_SCU_ACCEN0_EN10_LEN (1u)


#define IFX_SCU_ACCEN0_EN10_MSK (0x1u)


#define IFX_SCU_ACCEN0_EN10_OFF (10u)


#define IFX_SCU_ACCEN0_EN11_LEN (1u)


#define IFX_SCU_ACCEN0_EN11_MSK (0x1u)


#define IFX_SCU_ACCEN0_EN11_OFF (11u)


#define IFX_SCU_ACCEN0_EN12_LEN (1u)


#define IFX_SCU_ACCEN0_EN12_MSK (0x1u)


#define IFX_SCU_ACCEN0_EN12_OFF (12u)


#define IFX_SCU_ACCEN0_EN13_LEN (1u)


#define IFX_SCU_ACCEN0_EN13_MSK (0x1u)


#define IFX_SCU_ACCEN0_EN13_OFF (13u)


#define IFX_SCU_ACCEN0_EN14_LEN (1u)


#define IFX_SCU_ACCEN0_EN14_MSK (0x1u)


#define IFX_SCU_ACCEN0_EN14_OFF (14u)


#define IFX_SCU_ACCEN0_EN15_LEN (1u)


#define IFX_SCU_ACCEN0_EN15_MSK (0x1u)


#define IFX_SCU_ACCEN0_EN15_OFF (15u)


#define IFX_SCU_ACCEN0_EN16_LEN (1u)


#define IFX_SCU_ACCEN0_EN16_MSK (0x1u)


#define IFX_SCU_ACCEN0_EN16_OFF (16u)


#define IFX_SCU_ACCEN0_EN17_LEN (1u)


#define IFX_SCU_ACCEN0_EN17_MSK (0x1u)


#define IFX_SCU_ACCEN0_EN17_OFF (17u)


#define IFX_SCU_ACCEN0_EN18_LEN (1u)


#define IFX_SCU_ACCEN0_EN18_MSK (0x1u)


#define IFX_SCU_ACCEN0_EN18_OFF (18u)


#define IFX_SCU_ACCEN0_EN19_LEN (1u)


#define IFX_SCU_ACCEN0_EN19_MSK (0x1u)


#define IFX_SCU_ACCEN0_EN19_OFF (19u)


#define IFX_SCU_ACCEN0_EN1_LEN (1u)


#define IFX_SCU_ACCEN0_EN1_MSK (0x1u)


#define IFX_SCU_ACCEN0_EN1_OFF (1u)


#define IFX_SCU_ACCEN0_EN20_LEN (1u)


#define IFX_SCU_ACCEN0_EN20_MSK (0x1u)


#define IFX_SCU_ACCEN0_EN20_OFF (20u)


#define IFX_SCU_ACCEN0_EN21_LEN (1u)


#define IFX_SCU_ACCEN0_EN21_MSK (0x1u)


#define IFX_SCU_ACCEN0_EN21_OFF (21u)


#define IFX_SCU_ACCEN0_EN22_LEN (1u)


#define IFX_SCU_ACCEN0_EN22_MSK (0x1u)


#define IFX_SCU_ACCEN0_EN22_OFF (22u)


#define IFX_SCU_ACCEN0_EN23_LEN (1u)


#define IFX_SCU_ACCEN0_EN23_MSK (0x1u)


#define IFX_SCU_ACCEN0_EN23_OFF (23u)


#define IFX_SCU_ACCEN0_EN24_LEN (1u)


#define IFX_SCU_ACCEN0_EN24_MSK (0x1u)


#define IFX_SCU_ACCEN0_EN24_OFF (24u)


#define IFX_SCU_ACCEN0_EN25_LEN (1u)


#define IFX_SCU_ACCEN0_EN25_MSK (0x1u)


#define IFX_SCU_ACCEN0_EN25_OFF (25u)


#define IFX_SCU_ACCEN0_EN26_LEN (1u)


#define IFX_SCU_ACCEN0_EN26_MSK (0x1u)


#define IFX_SCU_ACCEN0_EN26_OFF (26u)


#define IFX_SCU_ACCEN0_EN27_LEN (1u)


#define IFX_SCU_ACCEN0_EN27_MSK (0x1u)


#define IFX_SCU_ACCEN0_EN27_OFF (27u)


#define IFX_SCU_ACCEN0_EN28_LEN (1u)


#define IFX_SCU_ACCEN0_EN28_MSK (0x1u)


#define IFX_SCU_ACCEN0_EN28_OFF (28u)


#define IFX_SCU_ACCEN0_EN29_LEN (1u)


#define IFX_SCU_ACCEN0_EN29_MSK (0x1u)


#define IFX_SCU_ACCEN0_EN29_OFF (29u)


#define IFX_SCU_ACCEN0_EN2_LEN (1u)


#define IFX_SCU_ACCEN0_EN2_MSK (0x1u)


#define IFX_SCU_ACCEN0_EN2_OFF (2u)


#define IFX_SCU_ACCEN0_EN30_LEN (1u)


#define IFX_SCU_ACCEN0_EN30_MSK (0x1u)


#define IFX_SCU_ACCEN0_EN30_OFF (30u)


#define IFX_SCU_ACCEN0_EN31_LEN (1u)


#define IFX_SCU_ACCEN0_EN31_MSK (0x1u)


#define IFX_SCU_ACCEN0_EN31_OFF (31u)


#define IFX_SCU_ACCEN0_EN3_LEN (1u)


#define IFX_SCU_ACCEN0_EN3_MSK (0x1u)


#define IFX_SCU_ACCEN0_EN3_OFF (3u)


#define IFX_SCU_ACCEN0_EN4_LEN (1u)


#define IFX_SCU_ACCEN0_EN4_MSK (0x1u)


#define IFX_SCU_ACCEN0_EN4_OFF (4u)


#define IFX_SCU_ACCEN0_EN5_LEN (1u)


#define IFX_SCU_ACCEN0_EN5_MSK (0x1u)


#define IFX_SCU_ACCEN0_EN5_OFF (5u)


#define IFX_SCU_ACCEN0_EN6_LEN (1u)


#define IFX_SCU_ACCEN0_EN6_MSK (0x1u)


#define IFX_SCU_ACCEN0_EN6_OFF (6u)


#define IFX_SCU_ACCEN0_EN7_LEN (1u)


#define IFX_SCU_ACCEN0_EN7_MSK (0x1u)


#define IFX_SCU_ACCEN0_EN7_OFF (7u)


#define IFX_SCU_ACCEN0_EN8_LEN (1u)


#define IFX_SCU_ACCEN0_EN8_MSK (0x1u)


#define IFX_SCU_ACCEN0_EN8_OFF (8u)


#define IFX_SCU_ACCEN0_EN9_LEN (1u)


#define IFX_SCU_ACCEN0_EN9_MSK (0x1u)


#define IFX_SCU_ACCEN0_EN9_OFF (9u)


#define IFX_SCU_ARSTDIS_STM0DIS_LEN (1u)


#define IFX_SCU_ARSTDIS_STM0DIS_MSK (0x1u)


#define IFX_SCU_ARSTDIS_STM0DIS_OFF (0u)


#define IFX_SCU_ARSTDIS_STM1DIS_LEN (1u)


#define IFX_SCU_ARSTDIS_STM1DIS_MSK (0x1u)


#define IFX_SCU_ARSTDIS_STM1DIS_OFF (1u)


#define IFX_SCU_ARSTDIS_STM2DIS_LEN (1u)


#define IFX_SCU_ARSTDIS_STM2DIS_MSK (0x1u)


#define IFX_SCU_ARSTDIS_STM2DIS_OFF (2u)


#define IFX_SCU_CCUCON0_BAUD1DIV_LEN (4u)


#define IFX_SCU_CCUCON0_BAUD1DIV_MSK (0xfu)


#define IFX_SCU_CCUCON0_BAUD1DIV_OFF (0u)


#define IFX_SCU_CCUCON0_BAUD2DIV_LEN (4u)


#define IFX_SCU_CCUCON0_BAUD2DIV_MSK (0xfu)


#define IFX_SCU_CCUCON0_BAUD2DIV_OFF (4u)


#define IFX_SCU_CCUCON0_CLKSEL_LEN (2u)


#define IFX_SCU_CCUCON0_CLKSEL_MSK (0x3u)


#define IFX_SCU_CCUCON0_CLKSEL_OFF (28u)


#define IFX_SCU_CCUCON0_FSI2DIV_LEN (2u)


#define IFX_SCU_CCUCON0_FSI2DIV_MSK (0x3u)


#define IFX_SCU_CCUCON0_FSI2DIV_OFF (20u)


#define IFX_SCU_CCUCON0_FSIDIV_LEN (2u)


#define IFX_SCU_CCUCON0_FSIDIV_MSK (0x3u)


#define IFX_SCU_CCUCON0_FSIDIV_OFF (24u)


#define IFX_SCU_CCUCON0_LCK_LEN (1u)


#define IFX_SCU_CCUCON0_LCK_MSK (0x1u)


#define IFX_SCU_CCUCON0_LCK_OFF (31u)


#define IFX_SCU_CCUCON0_LPDIV_LEN (4u)


#define IFX_SCU_CCUCON0_LPDIV_MSK (0xfu)


#define IFX_SCU_CCUCON0_LPDIV_OFF (12u)


#define IFX_SCU_CCUCON0_SPBDIV_LEN (4u)


#define IFX_SCU_CCUCON0_SPBDIV_MSK (0xfu)


#define IFX_SCU_CCUCON0_SPBDIV_OFF (16u)


#define IFX_SCU_CCUCON0_SRIDIV_LEN (4u)


#define IFX_SCU_CCUCON0_SRIDIV_MSK (0xfu)


#define IFX_SCU_CCUCON0_SRIDIV_OFF (8u)


#define IFX_SCU_CCUCON0_UP_LEN (1u)


#define IFX_SCU_CCUCON0_UP_MSK (0x1u)


#define IFX_SCU_CCUCON0_UP_OFF (30u)


#define IFX_SCU_CCUCON1_ASCLINFDIV_LEN (4u)


#define IFX_SCU_CCUCON1_ASCLINFDIV_MSK (0xfu)


#define IFX_SCU_CCUCON1_ASCLINFDIV_OFF (20u)


#define IFX_SCU_CCUCON1_ASCLINSDIV_LEN (4u)


#define IFX_SCU_CCUCON1_ASCLINSDIV_MSK (0xfu)


#define IFX_SCU_CCUCON1_ASCLINSDIV_OFF (24u)


#define IFX_SCU_CCUCON1_CANDIV_LEN (4u)


#define IFX_SCU_CCUCON1_CANDIV_MSK (0xfu)


#define IFX_SCU_CCUCON1_CANDIV_OFF (0u)


#define IFX_SCU_CCUCON1_ERAYDIV_LEN (4u)


#define IFX_SCU_CCUCON1_ERAYDIV_MSK (0xfu)


#define IFX_SCU_CCUCON1_ERAYDIV_OFF (4u)


#define IFX_SCU_CCUCON1_ETHDIV_LEN (4u)


#define IFX_SCU_CCUCON1_ETHDIV_MSK (0xfu)


#define IFX_SCU_CCUCON1_ETHDIV_OFF (16u)


#define IFX_SCU_CCUCON1_GTMDIV_LEN (4u)


#define IFX_SCU_CCUCON1_GTMDIV_MSK (0xfu)


#define IFX_SCU_CCUCON1_GTMDIV_OFF (12u)


#define IFX_SCU_CCUCON1_INSEL_LEN (2u)


#define IFX_SCU_CCUCON1_INSEL_MSK (0x3u)


#define IFX_SCU_CCUCON1_INSEL_OFF (28u)


#define IFX_SCU_CCUCON1_LCK_LEN (1u)


#define IFX_SCU_CCUCON1_LCK_MSK (0x1u)


#define IFX_SCU_CCUCON1_LCK_OFF (31u)


#define IFX_SCU_CCUCON1_STMDIV_LEN (4u)


#define IFX_SCU_CCUCON1_STMDIV_MSK (0xfu)


#define IFX_SCU_CCUCON1_STMDIV_OFF (8u)


#define IFX_SCU_CCUCON1_UP_LEN (1u)


#define IFX_SCU_CCUCON1_UP_MSK (0x1u)


#define IFX_SCU_CCUCON1_UP_OFF (30u)


#define IFX_SCU_CCUCON2_BBBDIV_LEN (4u)


#define IFX_SCU_CCUCON2_BBBDIV_MSK (0xfu)


#define IFX_SCU_CCUCON2_BBBDIV_OFF (0u)


#define IFX_SCU_CCUCON2_LCK_LEN (1u)


#define IFX_SCU_CCUCON2_LCK_MSK (0x1u)


#define IFX_SCU_CCUCON2_LCK_OFF (31u)


#define IFX_SCU_CCUCON2_UP_LEN (1u)


#define IFX_SCU_CCUCON2_UP_MSK (0x1u)


#define IFX_SCU_CCUCON2_UP_OFF (30u)


#define IFX_SCU_CCUCON3_LCK_LEN (1u)


#define IFX_SCU_CCUCON3_LCK_MSK (0x1u)


#define IFX_SCU_CCUCON3_LCK_OFF (31u)


#define IFX_SCU_CCUCON3_PLLDIV_LEN (6u)


#define IFX_SCU_CCUCON3_PLLDIV_MSK (0x3fu)


#define IFX_SCU_CCUCON3_PLLDIV_OFF (0u)


#define IFX_SCU_CCUCON3_PLLERAYDIV_LEN (6u)


#define IFX_SCU_CCUCON3_PLLERAYDIV_MSK (0x3fu)


#define IFX_SCU_CCUCON3_PLLERAYDIV_OFF (8u)


#define IFX_SCU_CCUCON3_PLLERAYSEL_LEN (2u)


#define IFX_SCU_CCUCON3_PLLERAYSEL_MSK (0x3u)


#define IFX_SCU_CCUCON3_PLLERAYSEL_OFF (14u)


#define IFX_SCU_CCUCON3_PLLSEL_LEN (2u)


#define IFX_SCU_CCUCON3_PLLSEL_MSK (0x3u)


#define IFX_SCU_CCUCON3_PLLSEL_OFF (6u)


#define IFX_SCU_CCUCON3_SLCK_LEN (1u)


#define IFX_SCU_CCUCON3_SLCK_MSK (0x1u)


#define IFX_SCU_CCUCON3_SLCK_OFF (29u)


#define IFX_SCU_CCUCON3_SRIDIV_LEN (6u)


#define IFX_SCU_CCUCON3_SRIDIV_MSK (0x3fu)


#define IFX_SCU_CCUCON3_SRIDIV_OFF (16u)


#define IFX_SCU_CCUCON3_SRISEL_LEN (2u)


#define IFX_SCU_CCUCON3_SRISEL_MSK (0x3u)


#define IFX_SCU_CCUCON3_SRISEL_OFF (22u)


#define IFX_SCU_CCUCON3_UP_LEN (1u)


#define IFX_SCU_CCUCON3_UP_MSK (0x1u)


#define IFX_SCU_CCUCON3_UP_OFF (30u)


#define IFX_SCU_CCUCON4_GTMDIV_LEN (6u)


#define IFX_SCU_CCUCON4_GTMDIV_MSK (0x3fu)


#define IFX_SCU_CCUCON4_GTMDIV_OFF (8u)


#define IFX_SCU_CCUCON4_GTMSEL_LEN (2u)


#define IFX_SCU_CCUCON4_GTMSEL_MSK (0x3u)


#define IFX_SCU_CCUCON4_GTMSEL_OFF (14u)


#define IFX_SCU_CCUCON4_LCK_LEN (1u)


#define IFX_SCU_CCUCON4_LCK_MSK (0x1u)


#define IFX_SCU_CCUCON4_LCK_OFF (31u)


#define IFX_SCU_CCUCON4_SLCK_LEN (1u)


#define IFX_SCU_CCUCON4_SLCK_MSK (0x1u)


#define IFX_SCU_CCUCON4_SLCK_OFF (29u)


#define IFX_SCU_CCUCON4_SPBDIV_LEN (6u)


#define IFX_SCU_CCUCON4_SPBDIV_MSK (0x3fu)


#define IFX_SCU_CCUCON4_SPBDIV_OFF (0u)


#define IFX_SCU_CCUCON4_SPBSEL_LEN (2u)


#define IFX_SCU_CCUCON4_SPBSEL_MSK (0x3u)


#define IFX_SCU_CCUCON4_SPBSEL_OFF (6u)


#define IFX_SCU_CCUCON4_STMDIV_LEN (6u)


#define IFX_SCU_CCUCON4_STMDIV_MSK (0x3fu)


#define IFX_SCU_CCUCON4_STMDIV_OFF (16u)


#define IFX_SCU_CCUCON4_STMSEL_LEN (2u)


#define IFX_SCU_CCUCON4_STMSEL_MSK (0x3u)


#define IFX_SCU_CCUCON4_STMSEL_OFF (22u)


#define IFX_SCU_CCUCON4_UP_LEN (1u)


#define IFX_SCU_CCUCON4_UP_MSK (0x1u)


#define IFX_SCU_CCUCON4_UP_OFF (30u)


#define IFX_SCU_CCUCON5_LCK_LEN (1u)


#define IFX_SCU_CCUCON5_LCK_MSK (0x1u)


#define IFX_SCU_CCUCON5_LCK_OFF (31u)


#define IFX_SCU_CCUCON5_MAXDIV_LEN (4u)


#define IFX_SCU_CCUCON5_MAXDIV_MSK (0xfu)


#define IFX_SCU_CCUCON5_MAXDIV_OFF (0u)


#define IFX_SCU_CCUCON5_UP_LEN (1u)


#define IFX_SCU_CCUCON5_UP_MSK (0x1u)


#define IFX_SCU_CCUCON5_UP_OFF (30u)


#define IFX_SCU_CCUCON6_CPU0DIV_LEN (6u)


#define IFX_SCU_CCUCON6_CPU0DIV_MSK (0x3fu)


#define IFX_SCU_CCUCON6_CPU0DIV_OFF (0u)


#define IFX_SCU_CCUCON7_CPU1DIV_LEN (6u)


#define IFX_SCU_CCUCON7_CPU1DIV_MSK (0x3fu)


#define IFX_SCU_CCUCON7_CPU1DIV_OFF (0u)


#define IFX_SCU_CCUCON8_CPU2DIV_LEN (6u)


#define IFX_SCU_CCUCON8_CPU2DIV_MSK (0x3fu)


#define IFX_SCU_CCUCON8_CPU2DIV_OFF (0u)


#define IFX_SCU_CHIPID_CHID_LEN (8u)


#define IFX_SCU_CHIPID_CHID_MSK (0xffu)


#define IFX_SCU_CHIPID_CHID_OFF (8u)


#define IFX_SCU_CHIPID_CHREV_LEN (6u)


#define IFX_SCU_CHIPID_CHREV_MSK (0x3fu)


#define IFX_SCU_CHIPID_CHREV_OFF (0u)


#define IFX_SCU_CHIPID_CHTEC_LEN (2u)


#define IFX_SCU_CHIPID_CHTEC_MSK (0x3u)


#define IFX_SCU_CHIPID_CHTEC_OFF (6u)


#define IFX_SCU_CHIPID_EEA_LEN (1u)


#define IFX_SCU_CHIPID_EEA_MSK (0x1u)


#define IFX_SCU_CHIPID_EEA_OFF (16u)


#define IFX_SCU_CHIPID_FSIZE_LEN (4u)


#define IFX_SCU_CHIPID_FSIZE_MSK (0xfu)


#define IFX_SCU_CHIPID_FSIZE_OFF (24u)


#define IFX_SCU_CHIPID_SEC_LEN (1u)


#define IFX_SCU_CHIPID_SEC_MSK (0x1u)


#define IFX_SCU_CHIPID_SEC_OFF (30u)


#define IFX_SCU_CHIPID_SP_LEN (2u)


#define IFX_SCU_CHIPID_SP_MSK (0x3u)


#define IFX_SCU_CHIPID_SP_OFF (28u)


#define IFX_SCU_CHIPID_UCODE_LEN (7u)


#define IFX_SCU_CHIPID_UCODE_MSK (0x7fu)


#define IFX_SCU_CHIPID_UCODE_OFF (17u)


#define IFX_SCU_DTSCON_CAL_LEN (22u)


#define IFX_SCU_DTSCON_CAL_MSK (0x3fffffu)


#define IFX_SCU_DTSCON_CAL_OFF (4u)


#define IFX_SCU_DTSCON_PWD_LEN (1u)


#define IFX_SCU_DTSCON_PWD_MSK (0x1u)


#define IFX_SCU_DTSCON_PWD_OFF (0u)


#define IFX_SCU_DTSCON_SLCK_LEN (1u)


#define IFX_SCU_DTSCON_SLCK_MSK (0x1u)


#define IFX_SCU_DTSCON_SLCK_OFF (31u)


#define IFX_SCU_DTSCON_START_LEN (1u)


#define IFX_SCU_DTSCON_START_MSK (0x1u)


#define IFX_SCU_DTSCON_START_OFF (1u)


#define IFX_SCU_DTSLIM_LLU_LEN (1u)


#define IFX_SCU_DTSLIM_LLU_MSK (0x1u)


#define IFX_SCU_DTSLIM_LLU_OFF (15u)


#define IFX_SCU_DTSLIM_LOWER_LEN (10u)


#define IFX_SCU_DTSLIM_LOWER_MSK (0x3ffu)


#define IFX_SCU_DTSLIM_LOWER_OFF (0u)


#define IFX_SCU_DTSLIM_SLCK_LEN (1u)


#define IFX_SCU_DTSLIM_SLCK_MSK (0x1u)


#define IFX_SCU_DTSLIM_SLCK_OFF (30u)


#define IFX_SCU_DTSLIM_UOF_LEN (1u)


#define IFX_SCU_DTSLIM_UOF_MSK (0x1u)


#define IFX_SCU_DTSLIM_UOF_OFF (31u)


#define IFX_SCU_DTSLIM_UPPER_LEN (10u)


#define IFX_SCU_DTSLIM_UPPER_MSK (0x3ffu)


#define IFX_SCU_DTSLIM_UPPER_OFF (16u)


#define IFX_SCU_DTSSTAT_BUSY_LEN (1u)


#define IFX_SCU_DTSSTAT_BUSY_MSK (0x1u)


#define IFX_SCU_DTSSTAT_BUSY_OFF (15u)


#define IFX_SCU_DTSSTAT_RDY_LEN (1u)


#define IFX_SCU_DTSSTAT_RDY_MSK (0x1u)


#define IFX_SCU_DTSSTAT_RDY_OFF (14u)


#define IFX_SCU_DTSSTAT_RESULT_LEN (10u)


#define IFX_SCU_DTSSTAT_RESULT_MSK (0x3ffu)


#define IFX_SCU_DTSSTAT_RESULT_OFF (0u)


#define IFX_SCU_EICR_EIEN0_LEN (1u)


#define IFX_SCU_EICR_EIEN0_MSK (0x1u)


#define IFX_SCU_EICR_EIEN0_OFF (11u)


#define IFX_SCU_EICR_EIEN1_LEN (1u)


#define IFX_SCU_EICR_EIEN1_MSK (0x1u)


#define IFX_SCU_EICR_EIEN1_OFF (27u)


#define IFX_SCU_EICR_EXIS0_LEN (3u)


#define IFX_SCU_EICR_EXIS0_MSK (0x7u)


#define IFX_SCU_EICR_EXIS0_OFF (4u)


#define IFX_SCU_EICR_EXIS1_LEN (3u)


#define IFX_SCU_EICR_EXIS1_MSK (0x7u)


#define IFX_SCU_EICR_EXIS1_OFF (20u)


#define IFX_SCU_EICR_FEN0_LEN (1u)


#define IFX_SCU_EICR_FEN0_MSK (0x1u)


#define IFX_SCU_EICR_FEN0_OFF (8u)


#define IFX_SCU_EICR_FEN1_LEN (1u)


#define IFX_SCU_EICR_FEN1_MSK (0x1u)


#define IFX_SCU_EICR_FEN1_OFF (24u)


#define IFX_SCU_EICR_INP0_LEN (3u)


#define IFX_SCU_EICR_INP0_MSK (0x7u)


#define IFX_SCU_EICR_INP0_OFF (12u)


#define IFX_SCU_EICR_INP1_LEN (3u)


#define IFX_SCU_EICR_INP1_MSK (0x7u)


#define IFX_SCU_EICR_INP1_OFF (28u)


#define IFX_SCU_EICR_LDEN0_LEN (1u)


#define IFX_SCU_EICR_LDEN0_MSK (0x1u)


#define IFX_SCU_EICR_LDEN0_OFF (10u)


#define IFX_SCU_EICR_LDEN1_LEN (1u)


#define IFX_SCU_EICR_LDEN1_MSK (0x1u)


#define IFX_SCU_EICR_LDEN1_OFF (26u)


#define IFX_SCU_EICR_REN0_LEN (1u)


#define IFX_SCU_EICR_REN0_MSK (0x1u)


#define IFX_SCU_EICR_REN0_OFF (9u)


#define IFX_SCU_EICR_REN1_LEN (1u)


#define IFX_SCU_EICR_REN1_MSK (0x1u)


#define IFX_SCU_EICR_REN1_OFF (25u)


#define IFX_SCU_EIFR_INTF0_LEN (1u)


#define IFX_SCU_EIFR_INTF0_MSK (0x1u)


#define IFX_SCU_EIFR_INTF0_OFF (0u)


#define IFX_SCU_EIFR_INTF1_LEN (1u)


#define IFX_SCU_EIFR_INTF1_MSK (0x1u)


#define IFX_SCU_EIFR_INTF1_OFF (1u)


#define IFX_SCU_EIFR_INTF2_LEN (1u)


#define IFX_SCU_EIFR_INTF2_MSK (0x1u)


#define IFX_SCU_EIFR_INTF2_OFF (2u)


#define IFX_SCU_EIFR_INTF3_LEN (1u)


#define IFX_SCU_EIFR_INTF3_MSK (0x1u)


#define IFX_SCU_EIFR_INTF3_OFF (3u)


#define IFX_SCU_EIFR_INTF4_LEN (1u)


#define IFX_SCU_EIFR_INTF4_MSK (0x1u)


#define IFX_SCU_EIFR_INTF4_OFF (4u)


#define IFX_SCU_EIFR_INTF5_LEN (1u)


#define IFX_SCU_EIFR_INTF5_MSK (0x1u)


#define IFX_SCU_EIFR_INTF5_OFF (5u)


#define IFX_SCU_EIFR_INTF6_LEN (1u)


#define IFX_SCU_EIFR_INTF6_MSK (0x1u)


#define IFX_SCU_EIFR_INTF6_OFF (6u)


#define IFX_SCU_EIFR_INTF7_LEN (1u)


#define IFX_SCU_EIFR_INTF7_MSK (0x1u)


#define IFX_SCU_EIFR_INTF7_OFF (7u)


#define IFX_SCU_EMSR_EMSF_LEN (1u)


#define IFX_SCU_EMSR_EMSF_MSK (0x1u)


#define IFX_SCU_EMSR_EMSF_OFF (16u)


#define IFX_SCU_EMSR_EMSFM_LEN (2u)


#define IFX_SCU_EMSR_EMSFM_MSK (0x3u)


#define IFX_SCU_EMSR_EMSFM_OFF (24u)


#define IFX_SCU_EMSR_ENON_LEN (1u)


#define IFX_SCU_EMSR_ENON_MSK (0x1u)


#define IFX_SCU_EMSR_ENON_OFF (2u)


#define IFX_SCU_EMSR_MODE_LEN (1u)


#define IFX_SCU_EMSR_MODE_MSK (0x1u)


#define IFX_SCU_EMSR_MODE_OFF (1u)


#define IFX_SCU_EMSR_POL_LEN (1u)


#define IFX_SCU_EMSR_POL_MSK (0x1u)


#define IFX_SCU_EMSR_POL_OFF (0u)


#define IFX_SCU_EMSR_PSEL_LEN (1u)


#define IFX_SCU_EMSR_PSEL_MSK (0x1u)


#define IFX_SCU_EMSR_PSEL_OFF (3u)


#define IFX_SCU_EMSR_SEMSF_LEN (1u)


#define IFX_SCU_EMSR_SEMSF_MSK (0x1u)


#define IFX_SCU_EMSR_SEMSF_OFF (17u)


#define IFX_SCU_EMSR_SEMSFM_LEN (2u)


#define IFX_SCU_EMSR_SEMSFM_MSK (0x3u)


#define IFX_SCU_EMSR_SEMSFM_OFF (26u)


#define IFX_SCU_ESRCFG_EDCON_LEN (2u)


#define IFX_SCU_ESRCFG_EDCON_MSK (0x3u)


#define IFX_SCU_ESRCFG_EDCON_OFF (7u)


#define IFX_SCU_ESROCFG_ARC_LEN (1u)


#define IFX_SCU_ESROCFG_ARC_MSK (0x1u)


#define IFX_SCU_ESROCFG_ARC_OFF (1u)


#define IFX_SCU_ESROCFG_ARI_LEN (1u)


#define IFX_SCU_ESROCFG_ARI_MSK (0x1u)


#define IFX_SCU_ESROCFG_ARI_OFF (0u)


#define IFX_SCU_EVR13CON_BPEVR13OFF_LEN (1u)


#define IFX_SCU_EVR13CON_BPEVR13OFF_MSK (0x1u)


#define IFX_SCU_EVR13CON_BPEVR13OFF_OFF (29u)


#define IFX_SCU_EVR13CON_EVR13OFF_LEN (1u)


#define IFX_SCU_EVR13CON_EVR13OFF_MSK (0x1u)


#define IFX_SCU_EVR13CON_EVR13OFF_OFF (28u)


#define IFX_SCU_EVR13CON_LCK_LEN (1u)


#define IFX_SCU_EVR13CON_LCK_MSK (0x1u)


#define IFX_SCU_EVR13CON_LCK_OFF (31u)


#define IFX_SCU_EVR33CON_BPEVR33OFF_LEN (1u)


#define IFX_SCU_EVR33CON_BPEVR33OFF_MSK (0x1u)


#define IFX_SCU_EVR33CON_BPEVR33OFF_OFF (29u)


#define IFX_SCU_EVR33CON_EVR33OFF_LEN (1u)


#define IFX_SCU_EVR33CON_EVR33OFF_MSK (0x1u)


#define IFX_SCU_EVR33CON_EVR33OFF_OFF (28u)


#define IFX_SCU_EVR33CON_LCK_LEN (1u)


#define IFX_SCU_EVR33CON_LCK_MSK (0x1u)


#define IFX_SCU_EVR33CON_LCK_OFF (31u)


#define IFX_SCU_EVRADCSTAT_ADC13V_LEN (8u)


#define IFX_SCU_EVRADCSTAT_ADC13V_MSK (0xffu)


#define IFX_SCU_EVRADCSTAT_ADC13V_OFF (0u)


#define IFX_SCU_EVRADCSTAT_ADC33V_LEN (8u)


#define IFX_SCU_EVRADCSTAT_ADC33V_MSK (0xffu)


#define IFX_SCU_EVRADCSTAT_ADC33V_OFF (8u)


#define IFX_SCU_EVRADCSTAT_ADCSWDV_LEN (8u)


#define IFX_SCU_EVRADCSTAT_ADCSWDV_MSK (0xffu)


#define IFX_SCU_EVRADCSTAT_ADCSWDV_OFF (16u)


#define IFX_SCU_EVRADCSTAT_VAL_LEN (1u)


#define IFX_SCU_EVRADCSTAT_VAL_MSK (0x1u)


#define IFX_SCU_EVRADCSTAT_VAL_OFF (31u)


#define IFX_SCU_EVRDVSTAT_DVS13TRIM_LEN (8u)


#define IFX_SCU_EVRDVSTAT_DVS13TRIM_MSK (0xffu)


#define IFX_SCU_EVRDVSTAT_DVS13TRIM_OFF (0u)


#define IFX_SCU_EVRDVSTAT_DVS33TRIM_LEN (8u)


#define IFX_SCU_EVRDVSTAT_DVS33TRIM_MSK (0xffu)


#define IFX_SCU_EVRDVSTAT_DVS33TRIM_OFF (16u)


#define IFX_SCU_EVRDVSTAT_VAL_LEN (1u)


#define IFX_SCU_EVRDVSTAT_VAL_MSK (0x1u)


#define IFX_SCU_EVRDVSTAT_VAL_OFF (31u)


#define IFX_SCU_EVRMONCTRL_EVR13OVMOD_LEN (2u)


#define IFX_SCU_EVRMONCTRL_EVR13OVMOD_MSK (0x3u)


#define IFX_SCU_EVRMONCTRL_EVR13OVMOD_OFF (0u)


#define IFX_SCU_EVRMONCTRL_EVR13UVMOD_LEN (2u)


#define IFX_SCU_EVRMONCTRL_EVR13UVMOD_MSK (0x3u)


#define IFX_SCU_EVRMONCTRL_EVR13UVMOD_OFF (4u)


#define IFX_SCU_EVRMONCTRL_EVR33OVMOD_LEN (2u)


#define IFX_SCU_EVRMONCTRL_EVR33OVMOD_MSK (0x3u)


#define IFX_SCU_EVRMONCTRL_EVR33OVMOD_OFF (8u)


#define IFX_SCU_EVRMONCTRL_EVR33UVMOD_LEN (2u)


#define IFX_SCU_EVRMONCTRL_EVR33UVMOD_MSK (0x3u)


#define IFX_SCU_EVRMONCTRL_EVR33UVMOD_OFF (12u)


#define IFX_SCU_EVRMONCTRL_SLCK_LEN (1u)


#define IFX_SCU_EVRMONCTRL_SLCK_MSK (0x1u)


#define IFX_SCU_EVRMONCTRL_SLCK_OFF (30u)


#define IFX_SCU_EVRMONCTRL_SWDOVMOD_LEN (2u)


#define IFX_SCU_EVRMONCTRL_SWDOVMOD_MSK (0x3u)


#define IFX_SCU_EVRMONCTRL_SWDOVMOD_OFF (16u)


#define IFX_SCU_EVRMONCTRL_SWDUVMOD_LEN (2u)


#define IFX_SCU_EVRMONCTRL_SWDUVMOD_MSK (0x3u)


#define IFX_SCU_EVRMONCTRL_SWDUVMOD_OFF (20u)


#define IFX_SCU_EVROVMON_EVR13OVVAL_LEN (8u)


#define IFX_SCU_EVROVMON_EVR13OVVAL_MSK (0xffu)


#define IFX_SCU_EVROVMON_EVR13OVVAL_OFF (0u)


#define IFX_SCU_EVROVMON_EVR33OVVAL_LEN (8u)


#define IFX_SCU_EVROVMON_EVR33OVVAL_MSK (0xffu)


#define IFX_SCU_EVROVMON_EVR33OVVAL_OFF (8u)


#define IFX_SCU_EVROVMON_LCK_LEN (1u)


#define IFX_SCU_EVROVMON_LCK_MSK (0x1u)


#define IFX_SCU_EVROVMON_LCK_OFF (31u)


#define IFX_SCU_EVROVMON_SLCK_LEN (1u)


#define IFX_SCU_EVROVMON_SLCK_MSK (0x1u)


#define IFX_SCU_EVROVMON_SLCK_OFF (30u)


#define IFX_SCU_EVROVMON_SWDOVVAL_LEN (8u)


#define IFX_SCU_EVROVMON_SWDOVVAL_MSK (0xffu)


#define IFX_SCU_EVROVMON_SWDOVVAL_OFF (16u)


#define IFX_SCU_EVRRSTCON_BPRST13OFF_LEN (1u)


#define IFX_SCU_EVRRSTCON_BPRST13OFF_MSK (0x1u)


#define IFX_SCU_EVRRSTCON_BPRST13OFF_OFF (25u)


#define IFX_SCU_EVRRSTCON_BPRST33OFF_LEN (1u)


#define IFX_SCU_EVRRSTCON_BPRST33OFF_MSK (0x1u)


#define IFX_SCU_EVRRSTCON_BPRST33OFF_OFF (27u)


#define IFX_SCU_EVRRSTCON_BPRSTSWDOFF_LEN (1u)


#define IFX_SCU_EVRRSTCON_BPRSTSWDOFF_MSK (0x1u)


#define IFX_SCU_EVRRSTCON_BPRSTSWDOFF_OFF (29u)


#define IFX_SCU_EVRRSTCON_LCK_LEN (1u)


#define IFX_SCU_EVRRSTCON_LCK_MSK (0x1u)


#define IFX_SCU_EVRRSTCON_LCK_OFF (31u)


#define IFX_SCU_EVRRSTCON_RST13OFF_LEN (1u)


#define IFX_SCU_EVRRSTCON_RST13OFF_MSK (0x1u)


#define IFX_SCU_EVRRSTCON_RST13OFF_OFF (24u)


#define IFX_SCU_EVRRSTCON_RST13TRIM_LEN (8u)


#define IFX_SCU_EVRRSTCON_RST13TRIM_MSK (0xffu)


#define IFX_SCU_EVRRSTCON_RST13TRIM_OFF (0u)


#define IFX_SCU_EVRRSTCON_RST33OFF_LEN (1u)


#define IFX_SCU_EVRRSTCON_RST33OFF_MSK (0x1u)


#define IFX_SCU_EVRRSTCON_RST33OFF_OFF (26u)


#define IFX_SCU_EVRRSTCON_RSTSWDOFF_LEN (1u)


#define IFX_SCU_EVRRSTCON_RSTSWDOFF_MSK (0x1u)


#define IFX_SCU_EVRRSTCON_RSTSWDOFF_OFF (28u)


#define IFX_SCU_EVRRSTCON_SLCK_LEN (1u)


#define IFX_SCU_EVRRSTCON_SLCK_MSK (0x1u)


#define IFX_SCU_EVRRSTCON_SLCK_OFF (30u)


#define IFX_SCU_EVRSDCOEFF1_LCK_LEN (1u)


#define IFX_SCU_EVRSDCOEFF1_LCK_MSK (0x1u)


#define IFX_SCU_EVRSDCOEFF1_LCK_OFF (31u)


#define IFX_SCU_EVRSDCOEFF1_SD5D_LEN (8u)


#define IFX_SCU_EVRSDCOEFF1_SD5D_MSK (0xffu)


#define IFX_SCU_EVRSDCOEFF1_SD5D_OFF (16u)


#define IFX_SCU_EVRSDCOEFF1_SD5I_LEN (8u)


#define IFX_SCU_EVRSDCOEFF1_SD5I_MSK (0xffu)


#define IFX_SCU_EVRSDCOEFF1_SD5I_OFF (8u)


#define IFX_SCU_EVRSDCOEFF1_SD5P_LEN (8u)


#define IFX_SCU_EVRSDCOEFF1_SD5P_MSK (0xffu)


#define IFX_SCU_EVRSDCOEFF1_SD5P_OFF (0u)


#define IFX_SCU_EVRSDCOEFF2_LCK_LEN (1u)


#define IFX_SCU_EVRSDCOEFF2_LCK_MSK (0x1u)


#define IFX_SCU_EVRSDCOEFF2_LCK_OFF (31u)


#define IFX_SCU_EVRSDCOEFF2_SD33D_LEN (8u)


#define IFX_SCU_EVRSDCOEFF2_SD33D_MSK (0xffu)


#define IFX_SCU_EVRSDCOEFF2_SD33D_OFF (16u)


#define IFX_SCU_EVRSDCOEFF2_SD33I_LEN (8u)


#define IFX_SCU_EVRSDCOEFF2_SD33I_MSK (0xffu)


#define IFX_SCU_EVRSDCOEFF2_SD33I_OFF (8u)


#define IFX_SCU_EVRSDCOEFF2_SD33P_LEN (8u)


#define IFX_SCU_EVRSDCOEFF2_SD33P_MSK (0xffu)


#define IFX_SCU_EVRSDCOEFF2_SD33P_OFF (0u)


#define IFX_SCU_EVRSDCOEFF3_CT5REG0_LEN (8u)


#define IFX_SCU_EVRSDCOEFF3_CT5REG0_MSK (0xffu)


#define IFX_SCU_EVRSDCOEFF3_CT5REG0_OFF (0u)


#define IFX_SCU_EVRSDCOEFF3_CT5REG1_LEN (8u)


#define IFX_SCU_EVRSDCOEFF3_CT5REG1_MSK (0xffu)


#define IFX_SCU_EVRSDCOEFF3_CT5REG1_OFF (8u)


#define IFX_SCU_EVRSDCOEFF3_CT5REG2_LEN (8u)


#define IFX_SCU_EVRSDCOEFF3_CT5REG2_MSK (0xffu)


#define IFX_SCU_EVRSDCOEFF3_CT5REG2_OFF (16u)


#define IFX_SCU_EVRSDCOEFF3_LCK_LEN (1u)


#define IFX_SCU_EVRSDCOEFF3_LCK_MSK (0x1u)


#define IFX_SCU_EVRSDCOEFF3_LCK_OFF (31u)


#define IFX_SCU_EVRSDCOEFF4_CT5REG3_LEN (8u)


#define IFX_SCU_EVRSDCOEFF4_CT5REG3_MSK (0xffu)


#define IFX_SCU_EVRSDCOEFF4_CT5REG3_OFF (0u)


#define IFX_SCU_EVRSDCOEFF4_CT5REG4_LEN (8u)


#define IFX_SCU_EVRSDCOEFF4_CT5REG4_MSK (0xffu)


#define IFX_SCU_EVRSDCOEFF4_CT5REG4_OFF (8u)


#define IFX_SCU_EVRSDCOEFF4_LCK_LEN (1u)


#define IFX_SCU_EVRSDCOEFF4_LCK_MSK (0x1u)


#define IFX_SCU_EVRSDCOEFF4_LCK_OFF (31u)


#define IFX_SCU_EVRSDCOEFF5_CT33REG0_LEN (8u)


#define IFX_SCU_EVRSDCOEFF5_CT33REG0_MSK (0xffu)


#define IFX_SCU_EVRSDCOEFF5_CT33REG0_OFF (0u)


#define IFX_SCU_EVRSDCOEFF5_CT33REG1_LEN (8u)


#define IFX_SCU_EVRSDCOEFF5_CT33REG1_MSK (0xffu)


#define IFX_SCU_EVRSDCOEFF5_CT33REG1_OFF (8u)


#define IFX_SCU_EVRSDCOEFF5_CT33REG2_LEN (8u)


#define IFX_SCU_EVRSDCOEFF5_CT33REG2_MSK (0xffu)


#define IFX_SCU_EVRSDCOEFF5_CT33REG2_OFF (16u)


#define IFX_SCU_EVRSDCOEFF5_LCK_LEN (1u)


#define IFX_SCU_EVRSDCOEFF5_LCK_MSK (0x1u)


#define IFX_SCU_EVRSDCOEFF5_LCK_OFF (31u)


#define IFX_SCU_EVRSDCOEFF6_CT33REG3_LEN (8u)


#define IFX_SCU_EVRSDCOEFF6_CT33REG3_MSK (0xffu)


#define IFX_SCU_EVRSDCOEFF6_CT33REG3_OFF (0u)


#define IFX_SCU_EVRSDCOEFF6_CT33REG4_LEN (8u)


#define IFX_SCU_EVRSDCOEFF6_CT33REG4_MSK (0xffu)


#define IFX_SCU_EVRSDCOEFF6_CT33REG4_OFF (8u)


#define IFX_SCU_EVRSDCOEFF6_LCK_LEN (1u)


#define IFX_SCU_EVRSDCOEFF6_LCK_MSK (0x1u)


#define IFX_SCU_EVRSDCOEFF6_LCK_OFF (31u)


#define IFX_SCU_EVRSDCTRL1_LCK_LEN (1u)


#define IFX_SCU_EVRSDCTRL1_LCK_MSK (0x1u)


#define IFX_SCU_EVRSDCTRL1_LCK_OFF (31u)


#define IFX_SCU_EVRSDCTRL1_SDFREQ_LEN (8u)


#define IFX_SCU_EVRSDCTRL1_SDFREQ_MSK (0xffu)


#define IFX_SCU_EVRSDCTRL1_SDFREQ_OFF (16u)


#define IFX_SCU_EVRSDCTRL1_SDFREQSPRD_LEN (16u)


#define IFX_SCU_EVRSDCTRL1_SDFREQSPRD_MSK (0xffffu)


#define IFX_SCU_EVRSDCTRL1_SDFREQSPRD_OFF (0u)


#define IFX_SCU_EVRSDCTRL1_SDSAMPLE_LEN (1u)


#define IFX_SCU_EVRSDCTRL1_SDSAMPLE_MSK (0x1u)


#define IFX_SCU_EVRSDCTRL1_SDSAMPLE_OFF (30u)


#define IFX_SCU_EVRSDCTRL1_SDSTEP_LEN (4u)


#define IFX_SCU_EVRSDCTRL1_SDSTEP_MSK (0xfu)


#define IFX_SCU_EVRSDCTRL1_SDSTEP_OFF (24u)


#define IFX_SCU_EVRSDCTRL2_DRVN_LEN (8u)


#define IFX_SCU_EVRSDCTRL2_DRVN_MSK (0xffu)


#define IFX_SCU_EVRSDCTRL2_DRVN_OFF (16u)


#define IFX_SCU_EVRSDCTRL2_DRVP_LEN (8u)


#define IFX_SCU_EVRSDCTRL2_DRVP_MSK (0xffu)


#define IFX_SCU_EVRSDCTRL2_DRVP_OFF (0u)


#define IFX_SCU_EVRSDCTRL2_LCK_LEN (1u)


#define IFX_SCU_EVRSDCTRL2_LCK_MSK (0x1u)


#define IFX_SCU_EVRSDCTRL2_LCK_OFF (31u)


#define IFX_SCU_EVRSDCTRL2_SDLUT_LEN (6u)


#define IFX_SCU_EVRSDCTRL2_SDLUT_MSK (0x3fu)


#define IFX_SCU_EVRSDCTRL2_SDLUT_OFF (24u)


#define IFX_SCU_EVRSDCTRL2_SDMINMAXDC_LEN (8u)


#define IFX_SCU_EVRSDCTRL2_SDMINMAXDC_MSK (0xffu)


#define IFX_SCU_EVRSDCTRL2_SDMINMAXDC_OFF (8u)


#define IFX_SCU_EVRSDCTRL3_LCK_LEN (1u)


#define IFX_SCU_EVRSDCTRL3_LCK_MSK (0x1u)


#define IFX_SCU_EVRSDCTRL3_LCK_OFF (31u)


#define IFX_SCU_EVRSDCTRL3_SDPID_LEN (8u)


#define IFX_SCU_EVRSDCTRL3_SDPID_MSK (0xffu)


#define IFX_SCU_EVRSDCTRL3_SDPID_OFF (8u)


#define IFX_SCU_EVRSDCTRL3_SDPWMPRE_LEN (8u)


#define IFX_SCU_EVRSDCTRL3_SDPWMPRE_MSK (0xffu)


#define IFX_SCU_EVRSDCTRL3_SDPWMPRE_OFF (0u)


#define IFX_SCU_EVRSDCTRL3_SDVOKLVL_LEN (8u)


#define IFX_SCU_EVRSDCTRL3_SDVOKLVL_MSK (0xffu)


#define IFX_SCU_EVRSDCTRL3_SDVOKLVL_OFF (16u)


#define IFX_SCU_EVRSDCTRL4_LCK_LEN (1u)


#define IFX_SCU_EVRSDCTRL4_LCK_MSK (0x1u)


#define IFX_SCU_EVRSDCTRL4_LCK_OFF (31u)


#define IFX_SCU_EVRSDCTRL4_SYNCDIV_LEN (3u)


#define IFX_SCU_EVRSDCTRL4_SYNCDIV_MSK (0x7u)


#define IFX_SCU_EVRSDCTRL4_SYNCDIV_OFF (8u)


#define IFX_SCU_EVRSTAT_BGPROK_LEN (1u)


#define IFX_SCU_EVRSTAT_BGPROK_MSK (0x1u)


#define IFX_SCU_EVRSTAT_BGPROK_OFF (10u)


#define IFX_SCU_EVRSTAT_EVR13_LEN (1u)


#define IFX_SCU_EVRSTAT_EVR13_MSK (0x1u)


#define IFX_SCU_EVRSTAT_EVR13_OFF (0u)


#define IFX_SCU_EVRSTAT_EVR33_LEN (1u)


#define IFX_SCU_EVRSTAT_EVR33_MSK (0x1u)


#define IFX_SCU_EVRSTAT_EVR33_OFF (2u)


#define IFX_SCU_EVRSTAT_EXTPASS13_LEN (1u)


#define IFX_SCU_EVRSTAT_EXTPASS13_MSK (0x1u)


#define IFX_SCU_EVRSTAT_EXTPASS13_OFF (8u)


#define IFX_SCU_EVRSTAT_EXTPASS33_LEN (1u)


#define IFX_SCU_EVRSTAT_EXTPASS33_MSK (0x1u)


#define IFX_SCU_EVRSTAT_EXTPASS33_OFF (9u)


#define IFX_SCU_EVRSTAT_OV13_LEN (1u)


#define IFX_SCU_EVRSTAT_OV13_MSK (0x1u)


#define IFX_SCU_EVRSTAT_OV13_OFF (1u)


#define IFX_SCU_EVRSTAT_OV33_LEN (1u)


#define IFX_SCU_EVRSTAT_OV33_MSK (0x1u)


#define IFX_SCU_EVRSTAT_OV33_OFF (3u)


#define IFX_SCU_EVRSTAT_OVSWD_LEN (1u)


#define IFX_SCU_EVRSTAT_OVSWD_MSK (0x1u)


#define IFX_SCU_EVRSTAT_OVSWD_OFF (4u)


#define IFX_SCU_EVRSTAT_UV13_LEN (1u)


#define IFX_SCU_EVRSTAT_UV13_MSK (0x1u)


#define IFX_SCU_EVRSTAT_UV13_OFF (5u)


#define IFX_SCU_EVRSTAT_UV33_LEN (1u)


#define IFX_SCU_EVRSTAT_UV33_MSK (0x1u)


#define IFX_SCU_EVRSTAT_UV33_OFF (6u)


#define IFX_SCU_EVRSTAT_UVSWD_LEN (1u)


#define IFX_SCU_EVRSTAT_UVSWD_MSK (0x1u)


#define IFX_SCU_EVRSTAT_UVSWD_OFF (7u)


#define IFX_SCU_EVRTRIM_EVR13TRIM_LEN (8u)


#define IFX_SCU_EVRTRIM_EVR13TRIM_MSK (0xffu)


#define IFX_SCU_EVRTRIM_EVR13TRIM_OFF (0u)


#define IFX_SCU_EVRTRIM_LCK_LEN (1u)


#define IFX_SCU_EVRTRIM_LCK_MSK (0x1u)


#define IFX_SCU_EVRTRIM_LCK_OFF (31u)


#define IFX_SCU_EVRTRIM_SDVOUTSEL_LEN (8u)


#define IFX_SCU_EVRTRIM_SDVOUTSEL_MSK (0xffu)


#define IFX_SCU_EVRTRIM_SDVOUTSEL_OFF (8u)


#define IFX_SCU_EVRTRIM_SLCK_LEN (1u)


#define IFX_SCU_EVRTRIM_SLCK_MSK (0x1u)


#define IFX_SCU_EVRTRIM_SLCK_OFF (30u)


#define IFX_SCU_EVRUVMON_EVR13UVVAL_LEN (8u)


#define IFX_SCU_EVRUVMON_EVR13UVVAL_MSK (0xffu)


#define IFX_SCU_EVRUVMON_EVR13UVVAL_OFF (0u)


#define IFX_SCU_EVRUVMON_EVR33UVVAL_LEN (8u)


#define IFX_SCU_EVRUVMON_EVR33UVVAL_MSK (0xffu)


#define IFX_SCU_EVRUVMON_EVR33UVVAL_OFF (8u)


#define IFX_SCU_EVRUVMON_LCK_LEN (1u)


#define IFX_SCU_EVRUVMON_LCK_MSK (0x1u)


#define IFX_SCU_EVRUVMON_LCK_OFF (31u)


#define IFX_SCU_EVRUVMON_SLCK_LEN (1u)


#define IFX_SCU_EVRUVMON_SLCK_MSK (0x1u)


#define IFX_SCU_EVRUVMON_SLCK_OFF (30u)


#define IFX_SCU_EVRUVMON_SWDUVVAL_LEN (8u)


#define IFX_SCU_EVRUVMON_SWDUVVAL_MSK (0xffu)


#define IFX_SCU_EVRUVMON_SWDUVVAL_OFF (16u)


#define IFX_SCU_EXTCON_DIV1_LEN (8u)


#define IFX_SCU_EXTCON_DIV1_MSK (0xffu)


#define IFX_SCU_EXTCON_DIV1_OFF (24u)


#define IFX_SCU_EXTCON_EN0_LEN (1u)


#define IFX_SCU_EXTCON_EN0_MSK (0x1u)


#define IFX_SCU_EXTCON_EN0_OFF (0u)


#define IFX_SCU_EXTCON_EN1_LEN (1u)


#define IFX_SCU_EXTCON_EN1_MSK (0x1u)


#define IFX_SCU_EXTCON_EN1_OFF (16u)


#define IFX_SCU_EXTCON_NSEL_LEN (1u)


#define IFX_SCU_EXTCON_NSEL_MSK (0x1u)


#define IFX_SCU_EXTCON_NSEL_OFF (17u)


#define IFX_SCU_EXTCON_SEL0_LEN (4u)


#define IFX_SCU_EXTCON_SEL0_MSK (0xfu)


#define IFX_SCU_EXTCON_SEL0_OFF (2u)


#define IFX_SCU_EXTCON_SEL1_LEN (4u)


#define IFX_SCU_EXTCON_SEL1_MSK (0xfu)


#define IFX_SCU_EXTCON_SEL1_OFF (18u)


#define IFX_SCU_FDR_DISCLK_LEN (1u)


#define IFX_SCU_FDR_DISCLK_MSK (0x1u)


#define IFX_SCU_FDR_DISCLK_OFF (31u)


#define IFX_SCU_FDR_DM_LEN (2u)


#define IFX_SCU_FDR_DM_MSK (0x3u)


#define IFX_SCU_FDR_DM_OFF (14u)


#define IFX_SCU_FDR_RESULT_LEN (10u)


#define IFX_SCU_FDR_RESULT_MSK (0x3ffu)


#define IFX_SCU_FDR_RESULT_OFF (16u)


#define IFX_SCU_FDR_STEP_LEN (10u)


#define IFX_SCU_FDR_STEP_MSK (0x3ffu)


#define IFX_SCU_FDR_STEP_OFF (0u)


#define IFX_SCU_FMR_FC0_LEN (1u)


#define IFX_SCU_FMR_FC0_MSK (0x1u)


#define IFX_SCU_FMR_FC0_OFF (16u)


#define IFX_SCU_FMR_FC1_LEN (1u)


#define IFX_SCU_FMR_FC1_MSK (0x1u)


#define IFX_SCU_FMR_FC1_OFF (17u)


#define IFX_SCU_FMR_FC2_LEN (1u)


#define IFX_SCU_FMR_FC2_MSK (0x1u)


#define IFX_SCU_FMR_FC2_OFF (18u)


#define IFX_SCU_FMR_FC3_LEN (1u)


#define IFX_SCU_FMR_FC3_MSK (0x1u)


#define IFX_SCU_FMR_FC3_OFF (19u)


#define IFX_SCU_FMR_FC4_LEN (1u)


#define IFX_SCU_FMR_FC4_MSK (0x1u)


#define IFX_SCU_FMR_FC4_OFF (20u)


#define IFX_SCU_FMR_FC5_LEN (1u)


#define IFX_SCU_FMR_FC5_MSK (0x1u)


#define IFX_SCU_FMR_FC5_OFF (21u)


#define IFX_SCU_FMR_FC6_LEN (1u)


#define IFX_SCU_FMR_FC6_MSK (0x1u)


#define IFX_SCU_FMR_FC6_OFF (22u)


#define IFX_SCU_FMR_FC7_LEN (1u)


#define IFX_SCU_FMR_FC7_MSK (0x1u)


#define IFX_SCU_FMR_FC7_OFF (23u)


#define IFX_SCU_FMR_FS0_LEN (1u)


#define IFX_SCU_FMR_FS0_MSK (0x1u)


#define IFX_SCU_FMR_FS0_OFF (0u)


#define IFX_SCU_FMR_FS1_LEN (1u)


#define IFX_SCU_FMR_FS1_MSK (0x1u)


#define IFX_SCU_FMR_FS1_OFF (1u)


#define IFX_SCU_FMR_FS2_LEN (1u)


#define IFX_SCU_FMR_FS2_MSK (0x1u)


#define IFX_SCU_FMR_FS2_OFF (2u)


#define IFX_SCU_FMR_FS3_LEN (1u)


#define IFX_SCU_FMR_FS3_MSK (0x1u)


#define IFX_SCU_FMR_FS3_OFF (3u)


#define IFX_SCU_FMR_FS4_LEN (1u)


#define IFX_SCU_FMR_FS4_MSK (0x1u)


#define IFX_SCU_FMR_FS4_OFF (4u)


#define IFX_SCU_FMR_FS5_LEN (1u)


#define IFX_SCU_FMR_FS5_MSK (0x1u)


#define IFX_SCU_FMR_FS5_OFF (5u)


#define IFX_SCU_FMR_FS6_LEN (1u)


#define IFX_SCU_FMR_FS6_MSK (0x1u)


#define IFX_SCU_FMR_FS6_OFF (6u)


#define IFX_SCU_FMR_FS7_LEN (1u)


#define IFX_SCU_FMR_FS7_MSK (0x1u)


#define IFX_SCU_FMR_FS7_OFF (7u)


#define IFX_SCU_ID_MODNUMBER_LEN (16u)


#define IFX_SCU_ID_MODNUMBER_MSK (0xffffu)


#define IFX_SCU_ID_MODNUMBER_OFF (16u)


#define IFX_SCU_ID_MODREV_LEN (8u)


#define IFX_SCU_ID_MODREV_MSK (0xffu)


#define IFX_SCU_ID_MODREV_OFF (0u)


#define IFX_SCU_ID_MODTYPE_LEN (8u)


#define IFX_SCU_ID_MODTYPE_MSK (0xffu)


#define IFX_SCU_ID_MODTYPE_OFF (8u)


#define IFX_SCU_IGCR_GEEN0_LEN (1u)


#define IFX_SCU_IGCR_GEEN0_MSK (0x1u)


#define IFX_SCU_IGCR_GEEN0_OFF (13u)


#define IFX_SCU_IGCR_GEEN1_LEN (1u)


#define IFX_SCU_IGCR_GEEN1_MSK (0x1u)


#define IFX_SCU_IGCR_GEEN1_OFF (29u)


#define IFX_SCU_IGCR_IGP0_LEN (2u)


#define IFX_SCU_IGCR_IGP0_MSK (0x3u)


#define IFX_SCU_IGCR_IGP0_OFF (14u)


#define IFX_SCU_IGCR_IGP1_LEN (2u)


#define IFX_SCU_IGCR_IGP1_MSK (0x3u)


#define IFX_SCU_IGCR_IGP1_OFF (30u)


#define IFX_SCU_IGCR_IPEN00_LEN (1u)


#define IFX_SCU_IGCR_IPEN00_MSK (0x1u)


#define IFX_SCU_IGCR_IPEN00_OFF (0u)


#define IFX_SCU_IGCR_IPEN01_LEN (1u)


#define IFX_SCU_IGCR_IPEN01_MSK (0x1u)


#define IFX_SCU_IGCR_IPEN01_OFF (1u)


#define IFX_SCU_IGCR_IPEN02_LEN (1u)


#define IFX_SCU_IGCR_IPEN02_MSK (0x1u)


#define IFX_SCU_IGCR_IPEN02_OFF (2u)


#define IFX_SCU_IGCR_IPEN03_LEN (1u)


#define IFX_SCU_IGCR_IPEN03_MSK (0x1u)


#define IFX_SCU_IGCR_IPEN03_OFF (3u)


#define IFX_SCU_IGCR_IPEN04_LEN (1u)


#define IFX_SCU_IGCR_IPEN04_MSK (0x1u)


#define IFX_SCU_IGCR_IPEN04_OFF (4u)


#define IFX_SCU_IGCR_IPEN05_LEN (1u)


#define IFX_SCU_IGCR_IPEN05_MSK (0x1u)


#define IFX_SCU_IGCR_IPEN05_OFF (5u)


#define IFX_SCU_IGCR_IPEN06_LEN (1u)


#define IFX_SCU_IGCR_IPEN06_MSK (0x1u)


#define IFX_SCU_IGCR_IPEN06_OFF (6u)


#define IFX_SCU_IGCR_IPEN07_LEN (1u)


#define IFX_SCU_IGCR_IPEN07_MSK (0x1u)


#define IFX_SCU_IGCR_IPEN07_OFF (7u)


#define IFX_SCU_IGCR_IPEN10_LEN (1u)


#define IFX_SCU_IGCR_IPEN10_MSK (0x1u)


#define IFX_SCU_IGCR_IPEN10_OFF (16u)


#define IFX_SCU_IGCR_IPEN11_LEN (1u)


#define IFX_SCU_IGCR_IPEN11_MSK (0x1u)


#define IFX_SCU_IGCR_IPEN11_OFF (17u)


#define IFX_SCU_IGCR_IPEN12_LEN (1u)


#define IFX_SCU_IGCR_IPEN12_MSK (0x1u)


#define IFX_SCU_IGCR_IPEN12_OFF (18u)


#define IFX_SCU_IGCR_IPEN13_LEN (1u)


#define IFX_SCU_IGCR_IPEN13_MSK (0x1u)


#define IFX_SCU_IGCR_IPEN13_OFF (19u)


#define IFX_SCU_IGCR_IPEN14_LEN (1u)


#define IFX_SCU_IGCR_IPEN14_MSK (0x1u)


#define IFX_SCU_IGCR_IPEN14_OFF (20u)


#define IFX_SCU_IGCR_IPEN15_LEN (1u)


#define IFX_SCU_IGCR_IPEN15_MSK (0x1u)


#define IFX_SCU_IGCR_IPEN15_OFF (21u)


#define IFX_SCU_IGCR_IPEN16_LEN (1u)


#define IFX_SCU_IGCR_IPEN16_MSK (0x1u)


#define IFX_SCU_IGCR_IPEN16_OFF (22u)


#define IFX_SCU_IGCR_IPEN17_LEN (1u)


#define IFX_SCU_IGCR_IPEN17_MSK (0x1u)


#define IFX_SCU_IGCR_IPEN17_OFF (23u)


#define IFX_SCU_IN_P0_LEN (1u)


#define IFX_SCU_IN_P0_MSK (0x1u)


#define IFX_SCU_IN_P0_OFF (0u)


#define IFX_SCU_IN_P1_LEN (1u)


#define IFX_SCU_IN_P1_MSK (0x1u)


#define IFX_SCU_IN_P1_OFF (1u)


#define IFX_SCU_IOCR_PC0_LEN (4u)


#define IFX_SCU_IOCR_PC0_MSK (0xfu)


#define IFX_SCU_IOCR_PC0_OFF (4u)


#define IFX_SCU_IOCR_PC1_LEN (4u)


#define IFX_SCU_IOCR_PC1_MSK (0xfu)


#define IFX_SCU_IOCR_PC1_OFF (12u)


#define IFX_SCU_LBISTCTRL0_LBISTREQ_LEN (1u)


#define IFX_SCU_LBISTCTRL0_LBISTREQ_MSK (0x1u)


#define IFX_SCU_LBISTCTRL0_LBISTREQ_OFF (0u)


#define IFX_SCU_LBISTCTRL0_LBISTREQP_LEN (1u)


#define IFX_SCU_LBISTCTRL0_LBISTREQP_MSK (0x1u)


#define IFX_SCU_LBISTCTRL0_LBISTREQP_OFF (1u)


#define IFX_SCU_LBISTCTRL0_PATTERNS_LEN (14u)


#define IFX_SCU_LBISTCTRL0_PATTERNS_MSK (0x3fffu)


#define IFX_SCU_LBISTCTRL0_PATTERNS_OFF (2u)


#define IFX_SCU_LBISTCTRL1_BODY_LEN (1u)


#define IFX_SCU_LBISTCTRL1_BODY_MSK (0x1u)


#define IFX_SCU_LBISTCTRL1_BODY_OFF (27u)


#define IFX_SCU_LBISTCTRL1_LBISTFREQU_LEN (4u)


#define IFX_SCU_LBISTCTRL1_LBISTFREQU_MSK (0xfu)


#define IFX_SCU_LBISTCTRL1_LBISTFREQU_OFF (28u)


#define IFX_SCU_LBISTCTRL1_SEED_LEN (23u)


#define IFX_SCU_LBISTCTRL1_SEED_MSK (0x7fffffu)


#define IFX_SCU_LBISTCTRL1_SEED_OFF (0u)


#define IFX_SCU_LBISTCTRL1_SPLITSH_LEN (3u)


#define IFX_SCU_LBISTCTRL1_SPLITSH_MSK (0x7u)


#define IFX_SCU_LBISTCTRL1_SPLITSH_OFF (24u)


#define IFX_SCU_LBISTCTRL2_LBISTDONE_LEN (1u)


#define IFX_SCU_LBISTCTRL2_LBISTDONE_MSK (0x1u)


#define IFX_SCU_LBISTCTRL2_LBISTDONE_OFF (31u)


#define IFX_SCU_LBISTCTRL2_SIGNATURE_LEN (24u)


#define IFX_SCU_LBISTCTRL2_SIGNATURE_MSK (0xffffffu)


#define IFX_SCU_LBISTCTRL2_SIGNATURE_OFF (0u)


#define IFX_SCU_LCLCON_LS_LEN (1u)


#define IFX_SCU_LCLCON_LS_MSK (0x1u)


#define IFX_SCU_LCLCON_LS_OFF (16u)


#define IFX_SCU_LCLCON_LSEN_LEN (1u)


#define IFX_SCU_LCLCON_LSEN_MSK (0x1u)


#define IFX_SCU_LCLCON_LSEN_OFF (31u)


#define IFX_SCU_LCLTEST_LCLT0_LEN (1u)


#define IFX_SCU_LCLTEST_LCLT0_MSK (0x1u)


#define IFX_SCU_LCLTEST_LCLT0_OFF (0u)


#define IFX_SCU_LCLTEST_LCLT1_LEN (1u)


#define IFX_SCU_LCLTEST_LCLT1_MSK (0x1u)


#define IFX_SCU_LCLTEST_LCLT1_OFF (1u)


#define IFX_SCU_MANID_DEPT_LEN (5u)


#define IFX_SCU_MANID_DEPT_MSK (0x1fu)


#define IFX_SCU_MANID_DEPT_OFF (0u)


#define IFX_SCU_MANID_MANUF_LEN (11u)


#define IFX_SCU_MANID_MANUF_MSK (0x7ffu)


#define IFX_SCU_MANID_MANUF_OFF (5u)


#define IFX_SCU_OMR_PCL0_LEN (1u)


#define IFX_SCU_OMR_PCL0_MSK (0x1u)


#define IFX_SCU_OMR_PCL0_OFF (16u)


#define IFX_SCU_OMR_PCL1_LEN (1u)


#define IFX_SCU_OMR_PCL1_MSK (0x1u)


#define IFX_SCU_OMR_PCL1_OFF (17u)


#define IFX_SCU_OMR_PS0_LEN (1u)


#define IFX_SCU_OMR_PS0_MSK (0x1u)


#define IFX_SCU_OMR_PS0_OFF (0u)


#define IFX_SCU_OMR_PS1_LEN (1u)


#define IFX_SCU_OMR_PS1_MSK (0x1u)


#define IFX_SCU_OMR_PS1_OFF (1u)


#define IFX_SCU_OSCCON_APREN_LEN (1u)


#define IFX_SCU_OSCCON_APREN_MSK (0x1u)


#define IFX_SCU_OSCCON_APREN_OFF (23u)


#define IFX_SCU_OSCCON_CAP0EN_LEN (1u)


#define IFX_SCU_OSCCON_CAP0EN_MSK (0x1u)


#define IFX_SCU_OSCCON_CAP0EN_OFF (24u)


#define IFX_SCU_OSCCON_CAP1EN_LEN (1u)


#define IFX_SCU_OSCCON_CAP1EN_MSK (0x1u)


#define IFX_SCU_OSCCON_CAP1EN_OFF (25u)


#define IFX_SCU_OSCCON_CAP2EN_LEN (1u)


#define IFX_SCU_OSCCON_CAP2EN_MSK (0x1u)


#define IFX_SCU_OSCCON_CAP2EN_OFF (26u)


#define IFX_SCU_OSCCON_CAP3EN_LEN (1u)


#define IFX_SCU_OSCCON_CAP3EN_MSK (0x1u)


#define IFX_SCU_OSCCON_CAP3EN_OFF (27u)


#define IFX_SCU_OSCCON_GAINSEL_LEN (2u)


#define IFX_SCU_OSCCON_GAINSEL_MSK (0x3u)


#define IFX_SCU_OSCCON_GAINSEL_OFF (3u)


#define IFX_SCU_OSCCON_MODE_LEN (2u)


#define IFX_SCU_OSCCON_MODE_MSK (0x3u)


#define IFX_SCU_OSCCON_MODE_OFF (5u)


#define IFX_SCU_OSCCON_OSCRES_LEN (1u)


#define IFX_SCU_OSCCON_OSCRES_MSK (0x1u)


#define IFX_SCU_OSCCON_OSCRES_OFF (2u)


#define IFX_SCU_OSCCON_OSCVAL_LEN (5u)


#define IFX_SCU_OSCCON_OSCVAL_MSK (0x1fu)


#define IFX_SCU_OSCCON_OSCVAL_OFF (16u)


#define IFX_SCU_OSCCON_PLLHV_LEN (1u)


#define IFX_SCU_OSCCON_PLLHV_MSK (0x1u)


#define IFX_SCU_OSCCON_PLLHV_OFF (8u)


#define IFX_SCU_OSCCON_PLLLV_LEN (1u)


#define IFX_SCU_OSCCON_PLLLV_MSK (0x1u)


#define IFX_SCU_OSCCON_PLLLV_OFF (1u)


#define IFX_SCU_OSCCON_SHBY_LEN (1u)


#define IFX_SCU_OSCCON_SHBY_MSK (0x1u)


#define IFX_SCU_OSCCON_SHBY_OFF (7u)


#define IFX_SCU_OSCCON_X1D_LEN (1u)


#define IFX_SCU_OSCCON_X1D_MSK (0x1u)


#define IFX_SCU_OSCCON_X1D_OFF (10u)


#define IFX_SCU_OSCCON_X1DEN_LEN (1u)


#define IFX_SCU_OSCCON_X1DEN_MSK (0x1u)


#define IFX_SCU_OSCCON_X1DEN_OFF (11u)


#define IFX_SCU_OUT_P0_LEN (1u)


#define IFX_SCU_OUT_P0_MSK (0x1u)


#define IFX_SCU_OUT_P0_OFF (0u)


#define IFX_SCU_OUT_P1_LEN (1u)


#define IFX_SCU_OUT_P1_MSK (0x1u)


#define IFX_SCU_OUT_P1_OFF (1u)


#define IFX_SCU_OVCCON_CSEL0_LEN (1u)


#define IFX_SCU_OVCCON_CSEL0_MSK (0x1u)


#define IFX_SCU_OVCCON_CSEL0_OFF (0u)


#define IFX_SCU_OVCCON_CSEL1_LEN (1u)


#define IFX_SCU_OVCCON_CSEL1_MSK (0x1u)


#define IFX_SCU_OVCCON_CSEL1_OFF (1u)


#define IFX_SCU_OVCCON_CSEL2_LEN (1u)


#define IFX_SCU_OVCCON_CSEL2_MSK (0x1u)


#define IFX_SCU_OVCCON_CSEL2_OFF (2u)


#define IFX_SCU_OVCCON_DCINVAL_LEN (1u)


#define IFX_SCU_OVCCON_DCINVAL_MSK (0x1u)


#define IFX_SCU_OVCCON_DCINVAL_OFF (18u)


#define IFX_SCU_OVCCON_OVCONF_LEN (1u)


#define IFX_SCU_OVCCON_OVCONF_MSK (0x1u)


#define IFX_SCU_OVCCON_OVCONF_OFF (24u)


#define IFX_SCU_OVCCON_OVSTP_LEN (1u)


#define IFX_SCU_OVCCON_OVSTP_MSK (0x1u)


#define IFX_SCU_OVCCON_OVSTP_OFF (17u)


#define IFX_SCU_OVCCON_OVSTRT_LEN (1u)


#define IFX_SCU_OVCCON_OVSTRT_MSK (0x1u)


#define IFX_SCU_OVCCON_OVSTRT_OFF (16u)


#define IFX_SCU_OVCCON_POVCONF_LEN (1u)


#define IFX_SCU_OVCCON_POVCONF_MSK (0x1u)


#define IFX_SCU_OVCCON_POVCONF_OFF (25u)


#define IFX_SCU_OVCENABLE_OVEN0_LEN (1u)


#define IFX_SCU_OVCENABLE_OVEN0_MSK (0x1u)


#define IFX_SCU_OVCENABLE_OVEN0_OFF (0u)


#define IFX_SCU_OVCENABLE_OVEN1_LEN (1u)


#define IFX_SCU_OVCENABLE_OVEN1_MSK (0x1u)


#define IFX_SCU_OVCENABLE_OVEN1_OFF (1u)


#define IFX_SCU_OVCENABLE_OVEN2_LEN (1u)


#define IFX_SCU_OVCENABLE_OVEN2_MSK (0x1u)


#define IFX_SCU_OVCENABLE_OVEN2_OFF (2u)


#define IFX_SCU_PDISC_PDIS0_LEN (1u)


#define IFX_SCU_PDISC_PDIS0_MSK (0x1u)


#define IFX_SCU_PDISC_PDIS0_OFF (0u)


#define IFX_SCU_PDISC_PDIS1_LEN (1u)


#define IFX_SCU_PDISC_PDIS1_MSK (0x1u)


#define IFX_SCU_PDISC_PDIS1_OFF (1u)


#define IFX_SCU_PDR_PD0_LEN (3u)


#define IFX_SCU_PDR_PD0_MSK (0x7u)


#define IFX_SCU_PDR_PD0_OFF (0u)


#define IFX_SCU_PDR_PD1_LEN (3u)


#define IFX_SCU_PDR_PD1_MSK (0x7u)


#define IFX_SCU_PDR_PD1_OFF (4u)


#define IFX_SCU_PDR_PL0_LEN (1u)


#define IFX_SCU_PDR_PL0_MSK (0x1u)


#define IFX_SCU_PDR_PL0_OFF (3u)


#define IFX_SCU_PDR_PL1_LEN (1u)


#define IFX_SCU_PDR_PL1_MSK (0x1u)


#define IFX_SCU_PDR_PL1_OFF (7u)


#define IFX_SCU_PDRR_PDR0_LEN (1u)


#define IFX_SCU_PDRR_PDR0_MSK (0x1u)


#define IFX_SCU_PDRR_PDR0_OFF (0u)


#define IFX_SCU_PDRR_PDR1_LEN (1u)


#define IFX_SCU_PDRR_PDR1_MSK (0x1u)


#define IFX_SCU_PDRR_PDR1_OFF (1u)


#define IFX_SCU_PDRR_PDR2_LEN (1u)


#define IFX_SCU_PDRR_PDR2_MSK (0x1u)


#define IFX_SCU_PDRR_PDR2_OFF (2u)


#define IFX_SCU_PDRR_PDR3_LEN (1u)


#define IFX_SCU_PDRR_PDR3_MSK (0x1u)


#define IFX_SCU_PDRR_PDR3_OFF (3u)


#define IFX_SCU_PDRR_PDR4_LEN (1u)


#define IFX_SCU_PDRR_PDR4_MSK (0x1u)


#define IFX_SCU_PDRR_PDR4_OFF (4u)


#define IFX_SCU_PDRR_PDR5_LEN (1u)


#define IFX_SCU_PDRR_PDR5_MSK (0x1u)


#define IFX_SCU_PDRR_PDR5_OFF (5u)


#define IFX_SCU_PDRR_PDR6_LEN (1u)


#define IFX_SCU_PDRR_PDR6_MSK (0x1u)


#define IFX_SCU_PDRR_PDR6_OFF (6u)


#define IFX_SCU_PDRR_PDR7_LEN (1u)


#define IFX_SCU_PDRR_PDR7_MSK (0x1u)


#define IFX_SCU_PDRR_PDR7_OFF (7u)


#define IFX_SCU_PLLCON0_CLRFINDIS_LEN (1u)


#define IFX_SCU_PLLCON0_CLRFINDIS_MSK (0x1u)


#define IFX_SCU_PLLCON0_CLRFINDIS_OFF (5u)


#define IFX_SCU_PLLCON0_MODEN_LEN (1u)


#define IFX_SCU_PLLCON0_MODEN_MSK (0x1u)


#define IFX_SCU_PLLCON0_MODEN_OFF (2u)


#define IFX_SCU_PLLCON0_NDIV_LEN (7u)


#define IFX_SCU_PLLCON0_NDIV_MSK (0x7fu)


#define IFX_SCU_PLLCON0_NDIV_OFF (9u)


#define IFX_SCU_PLLCON0_OSCDISCDIS_LEN (1u)


#define IFX_SCU_PLLCON0_OSCDISCDIS_MSK (0x1u)


#define IFX_SCU_PLLCON0_OSCDISCDIS_OFF (6u)


#define IFX_SCU_PLLCON0_PDIV_LEN (4u)


#define IFX_SCU_PLLCON0_PDIV_MSK (0xfu)


#define IFX_SCU_PLLCON0_PDIV_OFF (24u)


#define IFX_SCU_PLLCON0_PLLPWD_LEN (1u)


#define IFX_SCU_PLLCON0_PLLPWD_MSK (0x1u)


#define IFX_SCU_PLLCON0_PLLPWD_OFF (16u)


#define IFX_SCU_PLLCON0_RESLD_LEN (1u)


#define IFX_SCU_PLLCON0_RESLD_MSK (0x1u)


#define IFX_SCU_PLLCON0_RESLD_OFF (18u)


#define IFX_SCU_PLLCON0_SETFINDIS_LEN (1u)


#define IFX_SCU_PLLCON0_SETFINDIS_MSK (0x1u)


#define IFX_SCU_PLLCON0_SETFINDIS_OFF (4u)


#define IFX_SCU_PLLCON0_VCOBYP_LEN (1u)


#define IFX_SCU_PLLCON0_VCOBYP_MSK (0x1u)


#define IFX_SCU_PLLCON0_VCOBYP_OFF (0u)


#define IFX_SCU_PLLCON0_VCOPWD_LEN (1u)


#define IFX_SCU_PLLCON0_VCOPWD_MSK (0x1u)


#define IFX_SCU_PLLCON0_VCOPWD_OFF (1u)


#define IFX_SCU_PLLCON1_K1DIV_LEN (7u)


#define IFX_SCU_PLLCON1_K1DIV_MSK (0x7fu)


#define IFX_SCU_PLLCON1_K1DIV_OFF (16u)


#define IFX_SCU_PLLCON1_K2DIV_LEN (7u)


#define IFX_SCU_PLLCON1_K2DIV_MSK (0x7fu)


#define IFX_SCU_PLLCON1_K2DIV_OFF (0u)


#define IFX_SCU_PLLCON1_K3DIV_LEN (7u)


#define IFX_SCU_PLLCON1_K3DIV_MSK (0x7fu)


#define IFX_SCU_PLLCON1_K3DIV_OFF (8u)


#define IFX_SCU_PLLCON2_MODCFG_LEN (16u)


#define IFX_SCU_PLLCON2_MODCFG_MSK (0xffffu)


#define IFX_SCU_PLLCON2_MODCFG_OFF (0u)


#define IFX_SCU_PLLERAYCON0_CLRFINDIS_LEN (1u)


#define IFX_SCU_PLLERAYCON0_CLRFINDIS_MSK (0x1u)


#define IFX_SCU_PLLERAYCON0_CLRFINDIS_OFF (5u)


#define IFX_SCU_PLLERAYCON0_NDIV_LEN (5u)


#define IFX_SCU_PLLERAYCON0_NDIV_MSK (0x1fu)


#define IFX_SCU_PLLERAYCON0_NDIV_OFF (9u)


#define IFX_SCU_PLLERAYCON0_OSCDISCDIS_LEN (1u)


#define IFX_SCU_PLLERAYCON0_OSCDISCDIS_MSK (0x1u)


#define IFX_SCU_PLLERAYCON0_OSCDISCDIS_OFF (6u)


#define IFX_SCU_PLLERAYCON0_PDIV_LEN (4u)


#define IFX_SCU_PLLERAYCON0_PDIV_MSK (0xfu)


#define IFX_SCU_PLLERAYCON0_PDIV_OFF (24u)


#define IFX_SCU_PLLERAYCON0_PLLPWD_LEN (1u)


#define IFX_SCU_PLLERAYCON0_PLLPWD_MSK (0x1u)


#define IFX_SCU_PLLERAYCON0_PLLPWD_OFF (16u)


#define IFX_SCU_PLLERAYCON0_RESLD_LEN (1u)


#define IFX_SCU_PLLERAYCON0_RESLD_MSK (0x1u)


#define IFX_SCU_PLLERAYCON0_RESLD_OFF (18u)


#define IFX_SCU_PLLERAYCON0_SETFINDIS_LEN (1u)


#define IFX_SCU_PLLERAYCON0_SETFINDIS_MSK (0x1u)


#define IFX_SCU_PLLERAYCON0_SETFINDIS_OFF (4u)


#define IFX_SCU_PLLERAYCON0_VCOBYP_LEN (1u)


#define IFX_SCU_PLLERAYCON0_VCOBYP_MSK (0x1u)


#define IFX_SCU_PLLERAYCON0_VCOBYP_OFF (0u)


#define IFX_SCU_PLLERAYCON0_VCOPWD_LEN (1u)


#define IFX_SCU_PLLERAYCON0_VCOPWD_MSK (0x1u)


#define IFX_SCU_PLLERAYCON0_VCOPWD_OFF (1u)


#define IFX_SCU_PLLERAYCON1_K1DIV_LEN (7u)


#define IFX_SCU_PLLERAYCON1_K1DIV_MSK (0x7fu)


#define IFX_SCU_PLLERAYCON1_K1DIV_OFF (16u)


#define IFX_SCU_PLLERAYCON1_K2DIV_LEN (7u)


#define IFX_SCU_PLLERAYCON1_K2DIV_MSK (0x7fu)


#define IFX_SCU_PLLERAYCON1_K2DIV_OFF (0u)


#define IFX_SCU_PLLERAYCON1_K3DIV_LEN (4u)


#define IFX_SCU_PLLERAYCON1_K3DIV_MSK (0xfu)


#define IFX_SCU_PLLERAYCON1_K3DIV_OFF (8u)


#define IFX_SCU_PLLERAYSTAT_FINDIS_LEN (1u)


#define IFX_SCU_PLLERAYSTAT_FINDIS_MSK (0x1u)


#define IFX_SCU_PLLERAYSTAT_FINDIS_OFF (3u)


#define IFX_SCU_PLLERAYSTAT_K1RDY_LEN (1u)


#define IFX_SCU_PLLERAYSTAT_K1RDY_MSK (0x1u)


#define IFX_SCU_PLLERAYSTAT_K1RDY_OFF (4u)


#define IFX_SCU_PLLERAYSTAT_K2RDY_LEN (1u)


#define IFX_SCU_PLLERAYSTAT_K2RDY_MSK (0x1u)


#define IFX_SCU_PLLERAYSTAT_K2RDY_OFF (5u)


#define IFX_SCU_PLLERAYSTAT_PWDSTAT_LEN (1u)


#define IFX_SCU_PLLERAYSTAT_PWDSTAT_MSK (0x1u)


#define IFX_SCU_PLLERAYSTAT_PWDSTAT_OFF (1u)


#define IFX_SCU_PLLERAYSTAT_VCOBYST_LEN (1u)


#define IFX_SCU_PLLERAYSTAT_VCOBYST_MSK (0x1u)


#define IFX_SCU_PLLERAYSTAT_VCOBYST_OFF (0u)


#define IFX_SCU_PLLERAYSTAT_VCOLOCK_LEN (1u)


#define IFX_SCU_PLLERAYSTAT_VCOLOCK_MSK (0x1u)


#define IFX_SCU_PLLERAYSTAT_VCOLOCK_OFF (2u)


#define IFX_SCU_PLLSTAT_FINDIS_LEN (1u)


#define IFX_SCU_PLLSTAT_FINDIS_MSK (0x1u)


#define IFX_SCU_PLLSTAT_FINDIS_OFF (3u)


#define IFX_SCU_PLLSTAT_K1RDY_LEN (1u)


#define IFX_SCU_PLLSTAT_K1RDY_MSK (0x1u)


#define IFX_SCU_PLLSTAT_K1RDY_OFF (4u)


#define IFX_SCU_PLLSTAT_K2RDY_LEN (1u)


#define IFX_SCU_PLLSTAT_K2RDY_MSK (0x1u)


#define IFX_SCU_PLLSTAT_K2RDY_OFF (5u)


#define IFX_SCU_PLLSTAT_MODRUN_LEN (1u)


#define IFX_SCU_PLLSTAT_MODRUN_MSK (0x1u)


#define IFX_SCU_PLLSTAT_MODRUN_OFF (7u)


#define IFX_SCU_PLLSTAT_VCOBYST_LEN (1u)


#define IFX_SCU_PLLSTAT_VCOBYST_MSK (0x1u)


#define IFX_SCU_PLLSTAT_VCOBYST_OFF (0u)


#define IFX_SCU_PLLSTAT_VCOLOCK_LEN (1u)


#define IFX_SCU_PLLSTAT_VCOLOCK_MSK (0x1u)


#define IFX_SCU_PLLSTAT_VCOLOCK_OFF (2u)


#define IFX_SCU_PMCSR_PMST_LEN (3u)


#define IFX_SCU_PMCSR_PMST_MSK (0x7u)


#define IFX_SCU_PMCSR_PMST_OFF (8u)


#define IFX_SCU_PMCSR_REQSLP_LEN (2u)


#define IFX_SCU_PMCSR_REQSLP_MSK (0x3u)


#define IFX_SCU_PMCSR_REQSLP_OFF (0u)


#define IFX_SCU_PMCSR_SMUSLP_LEN (1u)


#define IFX_SCU_PMCSR_SMUSLP_MSK (0x1u)


#define IFX_SCU_PMCSR_SMUSLP_OFF (2u)


#define IFX_SCU_PMSWCR0_BLNKFIL_LEN (3u)


#define IFX_SCU_PMSWCR0_BLNKFIL_MSK (0x7u)


#define IFX_SCU_PMSWCR0_BLNKFIL_OFF (26u)


#define IFX_SCU_PMSWCR0_DCDCSYNC_LEN (1u)


#define IFX_SCU_PMSWCR0_DCDCSYNC_MSK (0x1u)


#define IFX_SCU_PMSWCR0_DCDCSYNC_OFF (25u)


#define IFX_SCU_PMSWCR0_ESR0DFEN_LEN (1u)


#define IFX_SCU_PMSWCR0_ESR0DFEN_MSK (0x1u)


#define IFX_SCU_PMSWCR0_ESR0DFEN_OFF (4u)


#define IFX_SCU_PMSWCR0_ESR0EDCON_LEN (2u)


#define IFX_SCU_PMSWCR0_ESR0EDCON_MSK (0x3u)


#define IFX_SCU_PMSWCR0_ESR0EDCON_OFF (5u)


#define IFX_SCU_PMSWCR0_ESR0TRIST_LEN (1u)


#define IFX_SCU_PMSWCR0_ESR0TRIST_MSK (0x1u)


#define IFX_SCU_PMSWCR0_ESR0TRIST_OFF (29u)


#define IFX_SCU_PMSWCR0_ESR1DFEN_LEN (1u)


#define IFX_SCU_PMSWCR0_ESR1DFEN_MSK (0x1u)


#define IFX_SCU_PMSWCR0_ESR1DFEN_OFF (7u)


#define IFX_SCU_PMSWCR0_ESR1EDCON_LEN (2u)


#define IFX_SCU_PMSWCR0_ESR1EDCON_MSK (0x3u)


#define IFX_SCU_PMSWCR0_ESR1EDCON_OFF (8u)


#define IFX_SCU_PMSWCR0_ESR1WKEN_LEN (1u)


#define IFX_SCU_PMSWCR0_ESR1WKEN_MSK (0x1u)


#define IFX_SCU_PMSWCR0_ESR1WKEN_OFF (1u)


#define IFX_SCU_PMSWCR0_LCK_LEN (1u)


#define IFX_SCU_PMSWCR0_LCK_MSK (0x1u)


#define IFX_SCU_PMSWCR0_LCK_OFF (31u)


#define IFX_SCU_PMSWCR0_PINADFEN_LEN (1u)


#define IFX_SCU_PMSWCR0_PINADFEN_MSK (0x1u)


#define IFX_SCU_PMSWCR0_PINADFEN_OFF (10u)


#define IFX_SCU_PMSWCR0_PINAEDCON_LEN (2u)


#define IFX_SCU_PMSWCR0_PINAEDCON_MSK (0x3u)


#define IFX_SCU_PMSWCR0_PINAEDCON_OFF (11u)


#define IFX_SCU_PMSWCR0_PINAWKEN_LEN (1u)


#define IFX_SCU_PMSWCR0_PINAWKEN_MSK (0x1u)


#define IFX_SCU_PMSWCR0_PINAWKEN_OFF (2u)


#define IFX_SCU_PMSWCR0_PINBDFEN_LEN (1u)


#define IFX_SCU_PMSWCR0_PINBDFEN_MSK (0x1u)


#define IFX_SCU_PMSWCR0_PINBDFEN_OFF (13u)


#define IFX_SCU_PMSWCR0_PINBEDCON_LEN (2u)


#define IFX_SCU_PMSWCR0_PINBEDCON_MSK (0x3u)


#define IFX_SCU_PMSWCR0_PINBEDCON_OFF (14u)


#define IFX_SCU_PMSWCR0_PINBWKEN_LEN (1u)


#define IFX_SCU_PMSWCR0_PINBWKEN_MSK (0x1u)


#define IFX_SCU_PMSWCR0_PINBWKEN_OFF (3u)


#define IFX_SCU_PMSWCR0_PORSTDF_LEN (1u)


#define IFX_SCU_PMSWCR0_PORSTDF_MSK (0x1u)


#define IFX_SCU_PMSWCR0_PORSTDF_OFF (23u)


#define IFX_SCU_PMSWCR0_PWRWKEN_LEN (1u)


#define IFX_SCU_PMSWCR0_PWRWKEN_MSK (0x1u)


#define IFX_SCU_PMSWCR0_PWRWKEN_OFF (24u)


#define IFX_SCU_PMSWCR0_STBYRAMSEL_LEN (2u)


#define IFX_SCU_PMSWCR0_STBYRAMSEL_MSK (0x3u)


#define IFX_SCU_PMSWCR0_STBYRAMSEL_OFF (17u)


#define IFX_SCU_PMSWCR0_TRISTEN_LEN (1u)


#define IFX_SCU_PMSWCR0_TRISTEN_MSK (0x1u)


#define IFX_SCU_PMSWCR0_TRISTEN_OFF (21u)


#define IFX_SCU_PMSWCR0_TRISTREQ_LEN (1u)


#define IFX_SCU_PMSWCR0_TRISTREQ_MSK (0x1u)


#define IFX_SCU_PMSWCR0_TRISTREQ_OFF (22u)


#define IFX_SCU_PMSWCR1_CPUIDLSEL_LEN (3u)


#define IFX_SCU_PMSWCR1_CPUIDLSEL_MSK (0x7u)


#define IFX_SCU_PMSWCR1_CPUIDLSEL_OFF (8u)


#define IFX_SCU_PMSWCR1_CPUSEL_LEN (3u)


#define IFX_SCU_PMSWCR1_CPUSEL_MSK (0x7u)


#define IFX_SCU_PMSWCR1_CPUSEL_OFF (24u)


#define IFX_SCU_PMSWCR1_IRADIS_LEN (1u)


#define IFX_SCU_PMSWCR1_IRADIS_MSK (0x1u)


#define IFX_SCU_PMSWCR1_IRADIS_OFF (12u)


#define IFX_SCU_PMSWCR1_STBYEV_LEN (3u)


#define IFX_SCU_PMSWCR1_STBYEV_MSK (0x7u)


#define IFX_SCU_PMSWCR1_STBYEV_OFF (28u)


#define IFX_SCU_PMSWCR1_STBYEVEN_LEN (1u)


#define IFX_SCU_PMSWCR1_STBYEVEN_MSK (0x1u)


#define IFX_SCU_PMSWCR1_STBYEVEN_OFF (27u)


#define IFX_SCU_PMSWSTAT_BLNKFIL_LEN (3u)


#define IFX_SCU_PMSWSTAT_BLNKFIL_MSK (0x7u)


#define IFX_SCU_PMSWSTAT_BLNKFIL_OFF (24u)


#define IFX_SCU_PMSWSTAT_ESR0TRIST_LEN (1u)


#define IFX_SCU_PMSWSTAT_ESR0TRIST_MSK (0x1u)


#define IFX_SCU_PMSWSTAT_ESR0TRIST_OFF (27u)


#define IFX_SCU_PMSWSTAT_ESR1OVRUN_LEN (1u)


#define IFX_SCU_PMSWSTAT_ESR1OVRUN_MSK (0x1u)


#define IFX_SCU_PMSWSTAT_ESR1OVRUN_OFF (3u)


#define IFX_SCU_PMSWSTAT_ESR1WKEN_LEN (1u)


#define IFX_SCU_PMSWSTAT_ESR1WKEN_MSK (0x1u)


#define IFX_SCU_PMSWSTAT_ESR1WKEN_OFF (20u)


#define IFX_SCU_PMSWSTAT_ESR1WKP_LEN (1u)


#define IFX_SCU_PMSWSTAT_ESR1WKP_MSK (0x1u)


#define IFX_SCU_PMSWSTAT_ESR1WKP_OFF (2u)


#define IFX_SCU_PMSWSTAT_HWCFGEVR_LEN (3u)


#define IFX_SCU_PMSWSTAT_HWCFGEVR_MSK (0x7u)


#define IFX_SCU_PMSWSTAT_HWCFGEVR_OFF (10u)


#define IFX_SCU_PMSWSTAT_PINAOVRUN_LEN (1u)


#define IFX_SCU_PMSWSTAT_PINAOVRUN_MSK (0x1u)


#define IFX_SCU_PMSWSTAT_PINAOVRUN_OFF (5u)


#define IFX_SCU_PMSWSTAT_PINAWKEN_LEN (1u)


#define IFX_SCU_PMSWSTAT_PINAWKEN_MSK (0x1u)


#define IFX_SCU_PMSWSTAT_PINAWKEN_OFF (21u)


#define IFX_SCU_PMSWSTAT_PINAWKP_LEN (1u)


#define IFX_SCU_PMSWSTAT_PINAWKP_MSK (0x1u)


#define IFX_SCU_PMSWSTAT_PINAWKP_OFF (4u)


#define IFX_SCU_PMSWSTAT_PINBOVRUN_LEN (1u)


#define IFX_SCU_PMSWSTAT_PINBOVRUN_MSK (0x1u)


#define IFX_SCU_PMSWSTAT_PINBOVRUN_OFF (7u)


#define IFX_SCU_PMSWSTAT_PINBWKEN_LEN (1u)


#define IFX_SCU_PMSWSTAT_PINBWKEN_MSK (0x1u)


#define IFX_SCU_PMSWSTAT_PINBWKEN_OFF (22u)


#define IFX_SCU_PMSWSTAT_PINBWKP_LEN (1u)


#define IFX_SCU_PMSWSTAT_PINBWKP_MSK (0x1u)


#define IFX_SCU_PMSWSTAT_PINBWKP_OFF (6u)


#define IFX_SCU_PMSWSTAT_PORSTDF_LEN (1u)


#define IFX_SCU_PMSWSTAT_PORSTDF_MSK (0x1u)


#define IFX_SCU_PMSWSTAT_PORSTDF_OFF (9u)


#define IFX_SCU_PMSWSTAT_PWRWKEN_LEN (1u)


#define IFX_SCU_PMSWSTAT_PWRWKEN_MSK (0x1u)


#define IFX_SCU_PMSWSTAT_PWRWKEN_OFF (23u)


#define IFX_SCU_PMSWSTAT_PWRWKP_LEN (1u)


#define IFX_SCU_PMSWSTAT_PWRWKP_MSK (0x1u)


#define IFX_SCU_PMSWSTAT_PWRWKP_OFF (8u)


#define IFX_SCU_PMSWSTAT_STBYRAM_LEN (2u)


#define IFX_SCU_PMSWSTAT_STBYRAM_MSK (0x3u)


#define IFX_SCU_PMSWSTAT_STBYRAM_OFF (13u)


#define IFX_SCU_PMSWSTAT_TRIST_LEN (1u)


#define IFX_SCU_PMSWSTAT_TRIST_MSK (0x1u)


#define IFX_SCU_PMSWSTAT_TRIST_OFF (15u)


#define IFX_SCU_PMSWSTATCLR_ESR1OVRUNCLR_LEN (1u)


#define IFX_SCU_PMSWSTATCLR_ESR1OVRUNCLR_MSK (0x1u)


#define IFX_SCU_PMSWSTATCLR_ESR1OVRUNCLR_OFF (3u)


#define IFX_SCU_PMSWSTATCLR_ESR1WKPCLR_LEN (1u)


#define IFX_SCU_PMSWSTATCLR_ESR1WKPCLR_MSK (0x1u)


#define IFX_SCU_PMSWSTATCLR_ESR1WKPCLR_OFF (2u)


#define IFX_SCU_PMSWSTATCLR_PINAOVRUNCLR_LEN (1u)


#define IFX_SCU_PMSWSTATCLR_PINAOVRUNCLR_MSK (0x1u)


#define IFX_SCU_PMSWSTATCLR_PINAOVRUNCLR_OFF (5u)


#define IFX_SCU_PMSWSTATCLR_PINAWKPCLR_LEN (1u)


#define IFX_SCU_PMSWSTATCLR_PINAWKPCLR_MSK (0x1u)


#define IFX_SCU_PMSWSTATCLR_PINAWKPCLR_OFF (4u)


#define IFX_SCU_PMSWSTATCLR_PINBOVRUNCLR_LEN (1u)


#define IFX_SCU_PMSWSTATCLR_PINBOVRUNCLR_MSK (0x1u)


#define IFX_SCU_PMSWSTATCLR_PINBOVRUNCLR_OFF (7u)


#define IFX_SCU_PMSWSTATCLR_PINBWKPCLR_LEN (1u)


#define IFX_SCU_PMSWSTATCLR_PINBWKPCLR_MSK (0x1u)


#define IFX_SCU_PMSWSTATCLR_PINBWKPCLR_OFF (6u)


#define IFX_SCU_PMSWSTATCLR_PWRWKPCLR_LEN (1u)


#define IFX_SCU_PMSWSTATCLR_PWRWKPCLR_MSK (0x1u)


#define IFX_SCU_PMSWSTATCLR_PWRWKPCLR_OFF (8u)


#define IFX_SCU_RSTCON2_CLRC_LEN (1u)


#define IFX_SCU_RSTCON2_CLRC_MSK (0x1u)


#define IFX_SCU_RSTCON2_CLRC_OFF (1u)


#define IFX_SCU_RSTCON2_CSS0_LEN (1u)


#define IFX_SCU_RSTCON2_CSS0_MSK (0x1u)


#define IFX_SCU_RSTCON2_CSS0_OFF (12u)


#define IFX_SCU_RSTCON2_CSS1_LEN (1u)


#define IFX_SCU_RSTCON2_CSS1_MSK (0x1u)


#define IFX_SCU_RSTCON2_CSS1_OFF (13u)


#define IFX_SCU_RSTCON2_CSS2_LEN (1u)


#define IFX_SCU_RSTCON2_CSS2_MSK (0x1u)


#define IFX_SCU_RSTCON2_CSS2_OFF (14u)


#define IFX_SCU_RSTCON2_USRINFO_LEN (16u)


#define IFX_SCU_RSTCON2_USRINFO_MSK (0xffffu)


#define IFX_SCU_RSTCON2_USRINFO_OFF (16u)


#define IFX_SCU_RSTCON_ESR0_LEN (2u)


#define IFX_SCU_RSTCON_ESR0_MSK (0x3u)


#define IFX_SCU_RSTCON_ESR0_OFF (0u)


#define IFX_SCU_RSTCON_ESR1_LEN (2u)


#define IFX_SCU_RSTCON_ESR1_MSK (0x3u)


#define IFX_SCU_RSTCON_ESR1_OFF (2u)


#define IFX_SCU_RSTCON_SMU_LEN (2u)


#define IFX_SCU_RSTCON_SMU_MSK (0x3u)


#define IFX_SCU_RSTCON_SMU_OFF (6u)


#define IFX_SCU_RSTCON_STM0_LEN (2u)


#define IFX_SCU_RSTCON_STM0_MSK (0x3u)


#define IFX_SCU_RSTCON_STM0_OFF (10u)


#define IFX_SCU_RSTCON_STM1_LEN (2u)


#define IFX_SCU_RSTCON_STM1_MSK (0x3u)


#define IFX_SCU_RSTCON_STM1_OFF (12u)


#define IFX_SCU_RSTCON_STM2_LEN (2u)


#define IFX_SCU_RSTCON_STM2_MSK (0x3u)


#define IFX_SCU_RSTCON_STM2_OFF (14u)


#define IFX_SCU_RSTCON_SW_LEN (2u)


#define IFX_SCU_RSTCON_SW_MSK (0x3u)


#define IFX_SCU_RSTCON_SW_OFF (8u)


#define IFX_SCU_RSTSTAT_CB0_LEN (1u)


#define IFX_SCU_RSTSTAT_CB0_MSK (0x1u)


#define IFX_SCU_RSTSTAT_CB0_OFF (18u)


#define IFX_SCU_RSTSTAT_CB1_LEN (1u)


#define IFX_SCU_RSTSTAT_CB1_MSK (0x1u)


#define IFX_SCU_RSTSTAT_CB1_OFF (19u)


#define IFX_SCU_RSTSTAT_CB3_LEN (1u)


#define IFX_SCU_RSTSTAT_CB3_MSK (0x1u)


#define IFX_SCU_RSTSTAT_CB3_OFF (20u)


#define IFX_SCU_RSTSTAT_ESR0_LEN (1u)


#define IFX_SCU_RSTSTAT_ESR0_MSK (0x1u)


#define IFX_SCU_RSTSTAT_ESR0_OFF (0u)


#define IFX_SCU_RSTSTAT_ESR1_LEN (1u)


#define IFX_SCU_RSTSTAT_ESR1_MSK (0x1u)


#define IFX_SCU_RSTSTAT_ESR1_OFF (1u)


#define IFX_SCU_RSTSTAT_EVR13_LEN (1u)


#define IFX_SCU_RSTSTAT_EVR13_MSK (0x1u)


#define IFX_SCU_RSTSTAT_EVR13_OFF (23u)


#define IFX_SCU_RSTSTAT_EVR33_LEN (1u)


#define IFX_SCU_RSTSTAT_EVR33_MSK (0x1u)


#define IFX_SCU_RSTSTAT_EVR33_OFF (24u)


#define IFX_SCU_RSTSTAT_PORST_LEN (1u)


#define IFX_SCU_RSTSTAT_PORST_MSK (0x1u)


#define IFX_SCU_RSTSTAT_PORST_OFF (16u)


#define IFX_SCU_RSTSTAT_SMU_LEN (1u)


#define IFX_SCU_RSTSTAT_SMU_MSK (0x1u)


#define IFX_SCU_RSTSTAT_SMU_OFF (3u)


#define IFX_SCU_RSTSTAT_STBYR_LEN (1u)


#define IFX_SCU_RSTSTAT_STBYR_MSK (0x1u)


#define IFX_SCU_RSTSTAT_STBYR_OFF (28u)


#define IFX_SCU_RSTSTAT_STM0_LEN (1u)


#define IFX_SCU_RSTSTAT_STM0_MSK (0x1u)


#define IFX_SCU_RSTSTAT_STM0_OFF (5u)


#define IFX_SCU_RSTSTAT_STM1_LEN (1u)


#define IFX_SCU_RSTSTAT_STM1_MSK (0x1u)


#define IFX_SCU_RSTSTAT_STM1_OFF (6u)


#define IFX_SCU_RSTSTAT_STM2_LEN (1u)


#define IFX_SCU_RSTSTAT_STM2_MSK (0x1u)


#define IFX_SCU_RSTSTAT_STM2_OFF (7u)


#define IFX_SCU_RSTSTAT_SW_LEN (1u)


#define IFX_SCU_RSTSTAT_SW_MSK (0x1u)


#define IFX_SCU_RSTSTAT_SW_OFF (4u)


#define IFX_SCU_RSTSTAT_SWD_LEN (1u)


#define IFX_SCU_RSTSTAT_SWD_MSK (0x1u)


#define IFX_SCU_RSTSTAT_SWD_OFF (25u)


#define IFX_SCU_SAFECON_HBT_LEN (1u)


#define IFX_SCU_SAFECON_HBT_MSK (0x1u)


#define IFX_SCU_SAFECON_HBT_OFF (0u)


#define IFX_SCU_STSTAT_FTM_LEN (7u)


#define IFX_SCU_STSTAT_FTM_MSK (0x7fu)


#define IFX_SCU_STSTAT_FTM_OFF (8u)


#define IFX_SCU_STSTAT_HWCFG_LEN (8u)


#define IFX_SCU_STSTAT_HWCFG_MSK (0xffu)


#define IFX_SCU_STSTAT_HWCFG_OFF (0u)


#define IFX_SCU_STSTAT_LUDIS_LEN (1u)


#define IFX_SCU_STSTAT_LUDIS_MSK (0x1u)


#define IFX_SCU_STSTAT_LUDIS_OFF (17u)


#define IFX_SCU_STSTAT_MODE_LEN (1u)


#define IFX_SCU_STSTAT_MODE_MSK (0x1u)


#define IFX_SCU_STSTAT_MODE_OFF (15u)


#define IFX_SCU_STSTAT_RAMINT_LEN (1u)


#define IFX_SCU_STSTAT_RAMINT_MSK (0x1u)


#define IFX_SCU_STSTAT_RAMINT_OFF (24u)


#define IFX_SCU_STSTAT_SPDEN_LEN (1u)


#define IFX_SCU_STSTAT_SPDEN_MSK (0x1u)


#define IFX_SCU_STSTAT_SPDEN_OFF (20u)


#define IFX_SCU_STSTAT_TRSTL_LEN (1u)


#define IFX_SCU_STSTAT_TRSTL_MSK (0x1u)


#define IFX_SCU_STSTAT_TRSTL_OFF (19u)


#define IFX_SCU_SWRSTCON_SWRSTREQ_LEN (1u)


#define IFX_SCU_SWRSTCON_SWRSTREQ_MSK (0x1u)


#define IFX_SCU_SWRSTCON_SWRSTREQ_OFF (1u)


#define IFX_SCU_SYSCON_CCTRIG0_LEN (1u)


#define IFX_SCU_SYSCON_CCTRIG0_MSK (0x1u)


#define IFX_SCU_SYSCON_CCTRIG0_OFF (0u)


#define IFX_SCU_SYSCON_DATM_LEN (1u)


#define IFX_SCU_SYSCON_DATM_MSK (0x1u)


#define IFX_SCU_SYSCON_DATM_OFF (8u)


#define IFX_SCU_SYSCON_RAMINTM_LEN (2u)


#define IFX_SCU_SYSCON_RAMINTM_MSK (0x3u)


#define IFX_SCU_SYSCON_RAMINTM_OFF (2u)


#define IFX_SCU_SYSCON_SETLUDIS_LEN (1u)


#define IFX_SCU_SYSCON_SETLUDIS_MSK (0x1u)


#define IFX_SCU_SYSCON_SETLUDIS_OFF (4u)


#define IFX_SCU_TRAPCLR_ESR0T_LEN (1u)


#define IFX_SCU_TRAPCLR_ESR0T_MSK (0x1u)


#define IFX_SCU_TRAPCLR_ESR0T_OFF (0u)


#define IFX_SCU_TRAPCLR_ESR1T_LEN (1u)


#define IFX_SCU_TRAPCLR_ESR1T_MSK (0x1u)


#define IFX_SCU_TRAPCLR_ESR1T_OFF (1u)


#define IFX_SCU_TRAPCLR_SMUT_LEN (1u)


#define IFX_SCU_TRAPCLR_SMUT_MSK (0x1u)


#define IFX_SCU_TRAPCLR_SMUT_OFF (3u)


#define IFX_SCU_TRAPDIS_ESR0T_LEN (1u)


#define IFX_SCU_TRAPDIS_ESR0T_MSK (0x1u)


#define IFX_SCU_TRAPDIS_ESR0T_OFF (0u)


#define IFX_SCU_TRAPDIS_ESR1T_LEN (1u)


#define IFX_SCU_TRAPDIS_ESR1T_MSK (0x1u)


#define IFX_SCU_TRAPDIS_ESR1T_OFF (1u)


#define IFX_SCU_TRAPDIS_SMUT_LEN (1u)


#define IFX_SCU_TRAPDIS_SMUT_MSK (0x1u)


#define IFX_SCU_TRAPDIS_SMUT_OFF (3u)


#define IFX_SCU_TRAPSET_ESR0T_LEN (1u)


#define IFX_SCU_TRAPSET_ESR0T_MSK (0x1u)


#define IFX_SCU_TRAPSET_ESR0T_OFF (0u)


#define IFX_SCU_TRAPSET_ESR1T_LEN (1u)


#define IFX_SCU_TRAPSET_ESR1T_MSK (0x1u)


#define IFX_SCU_TRAPSET_ESR1T_OFF (1u)


#define IFX_SCU_TRAPSET_SMUT_LEN (1u)


#define IFX_SCU_TRAPSET_SMUT_MSK (0x1u)


#define IFX_SCU_TRAPSET_SMUT_OFF (3u)


#define IFX_SCU_TRAPSTAT_ESR0T_LEN (1u)


#define IFX_SCU_TRAPSTAT_ESR0T_MSK (0x1u)


#define IFX_SCU_TRAPSTAT_ESR0T_OFF (0u)


#define IFX_SCU_TRAPSTAT_ESR1T_LEN (1u)


#define IFX_SCU_TRAPSTAT_ESR1T_MSK (0x1u)


#define IFX_SCU_TRAPSTAT_ESR1T_OFF (1u)


#define IFX_SCU_TRAPSTAT_SMUT_LEN (1u)


#define IFX_SCU_TRAPSTAT_SMUT_MSK (0x1u)


#define IFX_SCU_TRAPSTAT_SMUT_OFF (3u)


#define IFX_SCU_WDTCPU_CON0_ENDINIT_LEN (1u)


#define IFX_SCU_WDTCPU_CON0_ENDINIT_MSK (0x1u)


#define IFX_SCU_WDTCPU_CON0_ENDINIT_OFF (0u)


#define IFX_SCU_WDTCPU_CON0_LCK_LEN (1u)


#define IFX_SCU_WDTCPU_CON0_LCK_MSK (0x1u)


#define IFX_SCU_WDTCPU_CON0_LCK_OFF (1u)


#define IFX_SCU_WDTCPU_CON0_PW_LEN (14u)


#define IFX_SCU_WDTCPU_CON0_PW_MSK (0x3fffu)


#define IFX_SCU_WDTCPU_CON0_PW_OFF (2u)


#define IFX_SCU_WDTCPU_CON0_REL_LEN (16u)


#define IFX_SCU_WDTCPU_CON0_REL_MSK (0xffffu)


#define IFX_SCU_WDTCPU_CON0_REL_OFF (16u)


#define IFX_SCU_WDTCPU_CON1_DR_LEN (1u)


#define IFX_SCU_WDTCPU_CON1_DR_MSK (0x1u)


#define IFX_SCU_WDTCPU_CON1_DR_OFF (3u)


#define IFX_SCU_WDTCPU_CON1_IR0_LEN (1u)


#define IFX_SCU_WDTCPU_CON1_IR0_MSK (0x1u)


#define IFX_SCU_WDTCPU_CON1_IR0_OFF (2u)


#define IFX_SCU_WDTCPU_CON1_IR1_LEN (1u)


#define IFX_SCU_WDTCPU_CON1_IR1_MSK (0x1u)


#define IFX_SCU_WDTCPU_CON1_IR1_OFF (5u)


#define IFX_SCU_WDTCPU_CON1_PAR_LEN (1u)


#define IFX_SCU_WDTCPU_CON1_PAR_MSK (0x1u)


#define IFX_SCU_WDTCPU_CON1_PAR_OFF (7u)


#define IFX_SCU_WDTCPU_CON1_TCR_LEN (1u)


#define IFX_SCU_WDTCPU_CON1_TCR_MSK (0x1u)


#define IFX_SCU_WDTCPU_CON1_TCR_OFF (8u)


#define IFX_SCU_WDTCPU_CON1_TCTR_LEN (7u)


#define IFX_SCU_WDTCPU_CON1_TCTR_MSK (0x7fu)


#define IFX_SCU_WDTCPU_CON1_TCTR_OFF (9u)


#define IFX_SCU_WDTCPU_CON1_UR_LEN (1u)


#define IFX_SCU_WDTCPU_CON1_UR_MSK (0x1u)


#define IFX_SCU_WDTCPU_CON1_UR_OFF (6u)


#define IFX_SCU_WDTCPU_SR_AE_LEN (1u)


#define IFX_SCU_WDTCPU_SR_AE_MSK (0x1u)


#define IFX_SCU_WDTCPU_SR_AE_OFF (0u)


#define IFX_SCU_WDTCPU_SR_DS_LEN (1u)


#define IFX_SCU_WDTCPU_SR_DS_MSK (0x1u)


#define IFX_SCU_WDTCPU_SR_DS_OFF (3u)


#define IFX_SCU_WDTCPU_SR_IS0_LEN (1u)


#define IFX_SCU_WDTCPU_SR_IS0_MSK (0x1u)


#define IFX_SCU_WDTCPU_SR_IS0_OFF (2u)


#define IFX_SCU_WDTCPU_SR_IS1_LEN (1u)


#define IFX_SCU_WDTCPU_SR_IS1_MSK (0x1u)


#define IFX_SCU_WDTCPU_SR_IS1_OFF (5u)


#define IFX_SCU_WDTCPU_SR_OE_LEN (1u)


#define IFX_SCU_WDTCPU_SR_OE_MSK (0x1u)


#define IFX_SCU_WDTCPU_SR_OE_OFF (1u)


#define IFX_SCU_WDTCPU_SR_PAS_LEN (1u)


#define IFX_SCU_WDTCPU_SR_PAS_MSK (0x1u)


#define IFX_SCU_WDTCPU_SR_PAS_OFF (7u)


#define IFX_SCU_WDTCPU_SR_TCS_LEN (1u)


#define IFX_SCU_WDTCPU_SR_TCS_MSK (0x1u)


#define IFX_SCU_WDTCPU_SR_TCS_OFF (8u)


#define IFX_SCU_WDTCPU_SR_TCT_LEN (7u)


#define IFX_SCU_WDTCPU_SR_TCT_MSK (0x7fu)


#define IFX_SCU_WDTCPU_SR_TCT_OFF (9u)


#define IFX_SCU_WDTCPU_SR_TIM_LEN (16u)


#define IFX_SCU_WDTCPU_SR_TIM_MSK (0xffffu)


#define IFX_SCU_WDTCPU_SR_TIM_OFF (16u)


#define IFX_SCU_WDTCPU_SR_TO_LEN (1u)


#define IFX_SCU_WDTCPU_SR_TO_MSK (0x1u)


#define IFX_SCU_WDTCPU_SR_TO_OFF (4u)


#define IFX_SCU_WDTCPU_SR_US_LEN (1u)


#define IFX_SCU_WDTCPU_SR_US_MSK (0x1u)


#define IFX_SCU_WDTCPU_SR_US_OFF (6u)


#define IFX_SCU_WDTS_CON0_ENDINIT_LEN (1u)


#define IFX_SCU_WDTS_CON0_ENDINIT_MSK (0x1u)


#define IFX_SCU_WDTS_CON0_ENDINIT_OFF (0u)


#define IFX_SCU_WDTS_CON0_LCK_LEN (1u)


#define IFX_SCU_WDTS_CON0_LCK_MSK (0x1u)


#define IFX_SCU_WDTS_CON0_LCK_OFF (1u)


#define IFX_SCU_WDTS_CON0_PW_LEN (14u)


#define IFX_SCU_WDTS_CON0_PW_MSK (0x3fffu)


#define IFX_SCU_WDTS_CON0_PW_OFF (2u)


#define IFX_SCU_WDTS_CON0_REL_LEN (16u)


#define IFX_SCU_WDTS_CON0_REL_MSK (0xffffu)


#define IFX_SCU_WDTS_CON0_REL_OFF (16u)


#define IFX_SCU_WDTS_CON1_CLRIRF_LEN (1u)


#define IFX_SCU_WDTS_CON1_CLRIRF_MSK (0x1u)


#define IFX_SCU_WDTS_CON1_CLRIRF_OFF (0u)


#define IFX_SCU_WDTS_CON1_DR_LEN (1u)


#define IFX_SCU_WDTS_CON1_DR_MSK (0x1u)


#define IFX_SCU_WDTS_CON1_DR_OFF (3u)


#define IFX_SCU_WDTS_CON1_IR0_LEN (1u)


#define IFX_SCU_WDTS_CON1_IR0_MSK (0x1u)


#define IFX_SCU_WDTS_CON1_IR0_OFF (2u)


#define IFX_SCU_WDTS_CON1_IR1_LEN (1u)


#define IFX_SCU_WDTS_CON1_IR1_MSK (0x1u)


#define IFX_SCU_WDTS_CON1_IR1_OFF (5u)


#define IFX_SCU_WDTS_CON1_PAR_LEN (1u)


#define IFX_SCU_WDTS_CON1_PAR_MSK (0x1u)


#define IFX_SCU_WDTS_CON1_PAR_OFF (7u)


#define IFX_SCU_WDTS_CON1_TCR_LEN (1u)


#define IFX_SCU_WDTS_CON1_TCR_MSK (0x1u)


#define IFX_SCU_WDTS_CON1_TCR_OFF (8u)


#define IFX_SCU_WDTS_CON1_TCTR_LEN (7u)


#define IFX_SCU_WDTS_CON1_TCTR_MSK (0x7fu)


#define IFX_SCU_WDTS_CON1_TCTR_OFF (9u)


#define IFX_SCU_WDTS_CON1_UR_LEN (1u)


#define IFX_SCU_WDTS_CON1_UR_MSK (0x1u)


#define IFX_SCU_WDTS_CON1_UR_OFF (6u)


#define IFX_SCU_WDTS_SR_AE_LEN (1u)


#define IFX_SCU_WDTS_SR_AE_MSK (0x1u)


#define IFX_SCU_WDTS_SR_AE_OFF (0u)


#define IFX_SCU_WDTS_SR_DS_LEN (1u)


#define IFX_SCU_WDTS_SR_DS_MSK (0x1u)


#define IFX_SCU_WDTS_SR_DS_OFF (3u)


#define IFX_SCU_WDTS_SR_IS0_LEN (1u)


#define IFX_SCU_WDTS_SR_IS0_MSK (0x1u)


#define IFX_SCU_WDTS_SR_IS0_OFF (2u)


#define IFX_SCU_WDTS_SR_IS1_LEN (1u)


#define IFX_SCU_WDTS_SR_IS1_MSK (0x1u)


#define IFX_SCU_WDTS_SR_IS1_OFF (5u)


#define IFX_SCU_WDTS_SR_OE_LEN (1u)


#define IFX_SCU_WDTS_SR_OE_MSK (0x1u)


#define IFX_SCU_WDTS_SR_OE_OFF (1u)


#define IFX_SCU_WDTS_SR_PAS_LEN (1u)


#define IFX_SCU_WDTS_SR_PAS_MSK (0x1u)


#define IFX_SCU_WDTS_SR_PAS_OFF (7u)


#define IFX_SCU_WDTS_SR_TCS_LEN (1u)


#define IFX_SCU_WDTS_SR_TCS_MSK (0x1u)


#define IFX_SCU_WDTS_SR_TCS_OFF (8u)


#define IFX_SCU_WDTS_SR_TCT_LEN (7u)


#define IFX_SCU_WDTS_SR_TCT_MSK (0x7fu)


#define IFX_SCU_WDTS_SR_TCT_OFF (9u)


#define IFX_SCU_WDTS_SR_TIM_LEN (16u)


#define IFX_SCU_WDTS_SR_TIM_MSK (0xffffu)


#define IFX_SCU_WDTS_SR_TIM_OFF (16u)


#define IFX_SCU_WDTS_SR_TO_LEN (1u)


#define IFX_SCU_WDTS_SR_TO_MSK (0x1u)


#define IFX_SCU_WDTS_SR_TO_OFF (4u)


#define IFX_SCU_WDTS_SR_US_LEN (1u)


#define IFX_SCU_WDTS_SR_US_MSK (0x1u)


#define IFX_SCU_WDTS_SR_US_OFF (6u)
# 54 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 2 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxFlash_bf.h" 1 3
# 28 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxFlash_bf.h" 3
#define IFXFLASH_BF_H 1






#define IFX_FLASH_ACCEN0_EN0_LEN (1u)


#define IFX_FLASH_ACCEN0_EN0_MSK (0x1u)


#define IFX_FLASH_ACCEN0_EN0_OFF (0u)


#define IFX_FLASH_ACCEN0_EN10_LEN (1u)


#define IFX_FLASH_ACCEN0_EN10_MSK (0x1u)


#define IFX_FLASH_ACCEN0_EN10_OFF (10u)


#define IFX_FLASH_ACCEN0_EN11_LEN (1u)


#define IFX_FLASH_ACCEN0_EN11_MSK (0x1u)


#define IFX_FLASH_ACCEN0_EN11_OFF (11u)


#define IFX_FLASH_ACCEN0_EN12_LEN (1u)


#define IFX_FLASH_ACCEN0_EN12_MSK (0x1u)


#define IFX_FLASH_ACCEN0_EN12_OFF (12u)


#define IFX_FLASH_ACCEN0_EN13_LEN (1u)


#define IFX_FLASH_ACCEN0_EN13_MSK (0x1u)


#define IFX_FLASH_ACCEN0_EN13_OFF (13u)


#define IFX_FLASH_ACCEN0_EN14_LEN (1u)


#define IFX_FLASH_ACCEN0_EN14_MSK (0x1u)


#define IFX_FLASH_ACCEN0_EN14_OFF (14u)


#define IFX_FLASH_ACCEN0_EN15_LEN (1u)


#define IFX_FLASH_ACCEN0_EN15_MSK (0x1u)


#define IFX_FLASH_ACCEN0_EN15_OFF (15u)


#define IFX_FLASH_ACCEN0_EN16_LEN (1u)


#define IFX_FLASH_ACCEN0_EN16_MSK (0x1u)


#define IFX_FLASH_ACCEN0_EN16_OFF (16u)


#define IFX_FLASH_ACCEN0_EN17_LEN (1u)


#define IFX_FLASH_ACCEN0_EN17_MSK (0x1u)


#define IFX_FLASH_ACCEN0_EN17_OFF (17u)


#define IFX_FLASH_ACCEN0_EN18_LEN (1u)


#define IFX_FLASH_ACCEN0_EN18_MSK (0x1u)


#define IFX_FLASH_ACCEN0_EN18_OFF (18u)


#define IFX_FLASH_ACCEN0_EN19_LEN (1u)


#define IFX_FLASH_ACCEN0_EN19_MSK (0x1u)


#define IFX_FLASH_ACCEN0_EN19_OFF (19u)


#define IFX_FLASH_ACCEN0_EN1_LEN (1u)


#define IFX_FLASH_ACCEN0_EN1_MSK (0x1u)


#define IFX_FLASH_ACCEN0_EN1_OFF (1u)


#define IFX_FLASH_ACCEN0_EN20_LEN (1u)


#define IFX_FLASH_ACCEN0_EN20_MSK (0x1u)


#define IFX_FLASH_ACCEN0_EN20_OFF (20u)


#define IFX_FLASH_ACCEN0_EN21_LEN (1u)


#define IFX_FLASH_ACCEN0_EN21_MSK (0x1u)


#define IFX_FLASH_ACCEN0_EN21_OFF (21u)


#define IFX_FLASH_ACCEN0_EN22_LEN (1u)


#define IFX_FLASH_ACCEN0_EN22_MSK (0x1u)


#define IFX_FLASH_ACCEN0_EN22_OFF (22u)


#define IFX_FLASH_ACCEN0_EN23_LEN (1u)


#define IFX_FLASH_ACCEN0_EN23_MSK (0x1u)


#define IFX_FLASH_ACCEN0_EN23_OFF (23u)


#define IFX_FLASH_ACCEN0_EN24_LEN (1u)


#define IFX_FLASH_ACCEN0_EN24_MSK (0x1u)


#define IFX_FLASH_ACCEN0_EN24_OFF (24u)


#define IFX_FLASH_ACCEN0_EN25_LEN (1u)


#define IFX_FLASH_ACCEN0_EN25_MSK (0x1u)


#define IFX_FLASH_ACCEN0_EN25_OFF (25u)


#define IFX_FLASH_ACCEN0_EN26_LEN (1u)


#define IFX_FLASH_ACCEN0_EN26_MSK (0x1u)


#define IFX_FLASH_ACCEN0_EN26_OFF (26u)


#define IFX_FLASH_ACCEN0_EN27_LEN (1u)


#define IFX_FLASH_ACCEN0_EN27_MSK (0x1u)


#define IFX_FLASH_ACCEN0_EN27_OFF (27u)


#define IFX_FLASH_ACCEN0_EN28_LEN (1u)


#define IFX_FLASH_ACCEN0_EN28_MSK (0x1u)


#define IFX_FLASH_ACCEN0_EN28_OFF (28u)


#define IFX_FLASH_ACCEN0_EN29_LEN (1u)


#define IFX_FLASH_ACCEN0_EN29_MSK (0x1u)


#define IFX_FLASH_ACCEN0_EN29_OFF (29u)


#define IFX_FLASH_ACCEN0_EN2_LEN (1u)


#define IFX_FLASH_ACCEN0_EN2_MSK (0x1u)


#define IFX_FLASH_ACCEN0_EN2_OFF (2u)


#define IFX_FLASH_ACCEN0_EN30_LEN (1u)


#define IFX_FLASH_ACCEN0_EN30_MSK (0x1u)


#define IFX_FLASH_ACCEN0_EN30_OFF (30u)


#define IFX_FLASH_ACCEN0_EN31_LEN (1u)


#define IFX_FLASH_ACCEN0_EN31_MSK (0x1u)


#define IFX_FLASH_ACCEN0_EN31_OFF (31u)


#define IFX_FLASH_ACCEN0_EN3_LEN (1u)


#define IFX_FLASH_ACCEN0_EN3_MSK (0x1u)


#define IFX_FLASH_ACCEN0_EN3_OFF (3u)


#define IFX_FLASH_ACCEN0_EN4_LEN (1u)


#define IFX_FLASH_ACCEN0_EN4_MSK (0x1u)


#define IFX_FLASH_ACCEN0_EN4_OFF (4u)


#define IFX_FLASH_ACCEN0_EN5_LEN (1u)


#define IFX_FLASH_ACCEN0_EN5_MSK (0x1u)


#define IFX_FLASH_ACCEN0_EN5_OFF (5u)


#define IFX_FLASH_ACCEN0_EN6_LEN (1u)


#define IFX_FLASH_ACCEN0_EN6_MSK (0x1u)


#define IFX_FLASH_ACCEN0_EN6_OFF (6u)


#define IFX_FLASH_ACCEN0_EN7_LEN (1u)


#define IFX_FLASH_ACCEN0_EN7_MSK (0x1u)


#define IFX_FLASH_ACCEN0_EN7_OFF (7u)


#define IFX_FLASH_ACCEN0_EN8_LEN (1u)


#define IFX_FLASH_ACCEN0_EN8_MSK (0x1u)


#define IFX_FLASH_ACCEN0_EN8_OFF (8u)


#define IFX_FLASH_ACCEN0_EN9_LEN (1u)


#define IFX_FLASH_ACCEN0_EN9_MSK (0x1u)


#define IFX_FLASH_ACCEN0_EN9_OFF (9u)


#define IFX_FLASH_CBAB_CFG_CLR_LEN (1u)


#define IFX_FLASH_CBAB_CFG_CLR_MSK (0x1u)


#define IFX_FLASH_CBAB_CFG_CLR_OFF (8u)


#define IFX_FLASH_CBAB_CFG_DIS_LEN (1u)


#define IFX_FLASH_CBAB_CFG_DIS_MSK (0x1u)


#define IFX_FLASH_CBAB_CFG_DIS_OFF (9u)


#define IFX_FLASH_CBAB_CFG_SEL_LEN (6u)


#define IFX_FLASH_CBAB_CFG_SEL_MSK (0x3fu)


#define IFX_FLASH_CBAB_CFG_SEL_OFF (0u)


#define IFX_FLASH_CBAB_STAT_VLD0_LEN (1u)


#define IFX_FLASH_CBAB_STAT_VLD0_MSK (0x1u)


#define IFX_FLASH_CBAB_STAT_VLD0_OFF (0u)


#define IFX_FLASH_CBAB_STAT_VLD1_LEN (1u)


#define IFX_FLASH_CBAB_STAT_VLD1_MSK (0x1u)


#define IFX_FLASH_CBAB_STAT_VLD1_OFF (1u)


#define IFX_FLASH_CBAB_STAT_VLD2_LEN (1u)


#define IFX_FLASH_CBAB_STAT_VLD2_MSK (0x1u)


#define IFX_FLASH_CBAB_STAT_VLD2_OFF (2u)


#define IFX_FLASH_CBAB_STAT_VLD3_LEN (1u)


#define IFX_FLASH_CBAB_STAT_VLD3_MSK (0x1u)


#define IFX_FLASH_CBAB_STAT_VLD3_OFF (3u)


#define IFX_FLASH_CBAB_STAT_VLD4_LEN (1u)


#define IFX_FLASH_CBAB_STAT_VLD4_MSK (0x1u)


#define IFX_FLASH_CBAB_STAT_VLD4_OFF (4u)


#define IFX_FLASH_CBAB_STAT_VLD5_LEN (1u)


#define IFX_FLASH_CBAB_STAT_VLD5_MSK (0x1u)


#define IFX_FLASH_CBAB_STAT_VLD5_OFF (5u)


#define IFX_FLASH_CBAB_STAT_VLD6_LEN (1u)


#define IFX_FLASH_CBAB_STAT_VLD6_MSK (0x1u)


#define IFX_FLASH_CBAB_STAT_VLD6_OFF (6u)


#define IFX_FLASH_CBAB_STAT_VLD7_LEN (1u)


#define IFX_FLASH_CBAB_STAT_VLD7_MSK (0x1u)


#define IFX_FLASH_CBAB_STAT_VLD7_OFF (7u)


#define IFX_FLASH_CBAB_STAT_VLD8_LEN (1u)


#define IFX_FLASH_CBAB_STAT_VLD8_MSK (0x1u)


#define IFX_FLASH_CBAB_STAT_VLD8_OFF (8u)


#define IFX_FLASH_CBAB_STAT_VLD9_LEN (1u)


#define IFX_FLASH_CBAB_STAT_VLD9_MSK (0x1u)


#define IFX_FLASH_CBAB_STAT_VLD9_OFF (9u)


#define IFX_FLASH_CBAB_TOP_ADDR_LEN (19u)


#define IFX_FLASH_CBAB_TOP_ADDR_MSK (0x7ffffu)


#define IFX_FLASH_CBAB_TOP_ADDR_OFF (5u)


#define IFX_FLASH_CBAB_TOP_CLR_LEN (1u)


#define IFX_FLASH_CBAB_TOP_CLR_MSK (0x1u)


#define IFX_FLASH_CBAB_TOP_CLR_OFF (31u)


#define IFX_FLASH_CBAB_TOP_ERR_LEN (6u)


#define IFX_FLASH_CBAB_TOP_ERR_MSK (0x3fu)


#define IFX_FLASH_CBAB_TOP_ERR_OFF (24u)


#define IFX_FLASH_CBAB_TOP_VLD_LEN (1u)


#define IFX_FLASH_CBAB_TOP_VLD_MSK (0x1u)


#define IFX_FLASH_CBAB_TOP_VLD_OFF (30u)


#define IFX_FLASH_COMM0_STATUS_LEN (8u)


#define IFX_FLASH_COMM0_STATUS_MSK (0xffu)


#define IFX_FLASH_COMM0_STATUS_OFF (0u)


#define IFX_FLASH_COMM1_DATA_LEN (8u)


#define IFX_FLASH_COMM1_DATA_MSK (0xffu)


#define IFX_FLASH_COMM1_DATA_OFF (8u)


#define IFX_FLASH_COMM1_STATUS_LEN (8u)


#define IFX_FLASH_COMM1_STATUS_MSK (0xffu)


#define IFX_FLASH_COMM1_STATUS_OFF (0u)


#define IFX_FLASH_COMM2_DATA_LEN (8u)


#define IFX_FLASH_COMM2_DATA_MSK (0xffu)


#define IFX_FLASH_COMM2_DATA_OFF (8u)


#define IFX_FLASH_COMM2_STATUS_LEN (8u)


#define IFX_FLASH_COMM2_STATUS_MSK (0xffu)


#define IFX_FLASH_COMM2_STATUS_OFF (0u)


#define IFX_FLASH_ECCRD_ECCORDIS_LEN (1u)


#define IFX_FLASH_ECCRD_ECCORDIS_MSK (0x1u)


#define IFX_FLASH_ECCRD_ECCORDIS_OFF (31u)


#define IFX_FLASH_ECCRD_EDCERRINJ_LEN (1u)


#define IFX_FLASH_ECCRD_EDCERRINJ_MSK (0x1u)


#define IFX_FLASH_ECCRD_EDCERRINJ_OFF (30u)


#define IFX_FLASH_ECCRD_RCODE_LEN (22u)


#define IFX_FLASH_ECCRD_RCODE_MSK (0x3fffffu)


#define IFX_FLASH_ECCRD_RCODE_OFF (0u)


#define IFX_FLASH_ECCRP_ECCORDIS_LEN (1u)


#define IFX_FLASH_ECCRP_ECCORDIS_MSK (0x1u)


#define IFX_FLASH_ECCRP_ECCORDIS_OFF (31u)


#define IFX_FLASH_ECCRP_EDCERRINJ_LEN (1u)


#define IFX_FLASH_ECCRP_EDCERRINJ_MSK (0x1u)


#define IFX_FLASH_ECCRP_EDCERRINJ_OFF (30u)


#define IFX_FLASH_ECCRP_RCODE_LEN (22u)


#define IFX_FLASH_ECCRP_RCODE_MSK (0x3fffffu)


#define IFX_FLASH_ECCRP_RCODE_OFF (0u)


#define IFX_FLASH_ECCW_DECENCDIS_LEN (1u)


#define IFX_FLASH_ECCW_DECENCDIS_MSK (0x1u)


#define IFX_FLASH_ECCW_DECENCDIS_OFF (30u)


#define IFX_FLASH_ECCW_PECENCDIS_LEN (1u)


#define IFX_FLASH_ECCW_PECENCDIS_MSK (0x1u)


#define IFX_FLASH_ECCW_PECENCDIS_OFF (31u)


#define IFX_FLASH_ECCW_WCODE_LEN (22u)


#define IFX_FLASH_ECCW_WCODE_MSK (0x3fffffu)


#define IFX_FLASH_ECCW_WCODE_OFF (0u)


#define IFX_FLASH_FCON_EOBM_LEN (1u)


#define IFX_FLASH_FCON_EOBM_MSK (0x1u)


#define IFX_FLASH_FCON_EOBM_OFF (31u)


#define IFX_FLASH_FCON_ESLDIS_LEN (1u)


#define IFX_FLASH_FCON_ESLDIS_MSK (0x1u)


#define IFX_FLASH_FCON_ESLDIS_OFF (16u)


#define IFX_FLASH_FCON_IDLE_LEN (1u)


#define IFX_FLASH_FCON_IDLE_MSK (0x1u)


#define IFX_FLASH_FCON_IDLE_OFF (15u)


#define IFX_FLASH_FCON_NSAFECC_LEN (1u)


#define IFX_FLASH_FCON_NSAFECC_MSK (0x1u)


#define IFX_FLASH_FCON_NSAFECC_OFF (18u)


#define IFX_FLASH_FCON_PR5V_LEN (1u)


#define IFX_FLASH_FCON_PR5V_MSK (0x1u)


#define IFX_FLASH_FCON_PR5V_OFF (30u)


#define IFX_FLASH_FCON_PROERM_LEN (1u)


#define IFX_FLASH_FCON_PROERM_MSK (0x1u)


#define IFX_FLASH_FCON_PROERM_OFF (26u)


#define IFX_FLASH_FCON_RES21_LEN (2u)


#define IFX_FLASH_FCON_RES21_MSK (0x3u)


#define IFX_FLASH_FCON_RES21_OFF (20u)


#define IFX_FLASH_FCON_RES23_LEN (2u)


#define IFX_FLASH_FCON_RES23_MSK (0x3u)


#define IFX_FLASH_FCON_RES23_OFF (22u)


#define IFX_FLASH_FCON_SLEEP_LEN (1u)


#define IFX_FLASH_FCON_SLEEP_MSK (0x1u)


#define IFX_FLASH_FCON_SLEEP_OFF (17u)


#define IFX_FLASH_FCON_SQERM_LEN (1u)


#define IFX_FLASH_FCON_SQERM_MSK (0x1u)


#define IFX_FLASH_FCON_SQERM_OFF (25u)


#define IFX_FLASH_FCON_STALL_LEN (1u)


#define IFX_FLASH_FCON_STALL_MSK (0x1u)


#define IFX_FLASH_FCON_STALL_OFF (19u)


#define IFX_FLASH_FCON_VOPERM_LEN (1u)


#define IFX_FLASH_FCON_VOPERM_MSK (0x1u)


#define IFX_FLASH_FCON_VOPERM_OFF (24u)


#define IFX_FLASH_FCON_WSDFLASH_LEN (6u)


#define IFX_FLASH_FCON_WSDFLASH_MSK (0x3fu)


#define IFX_FLASH_FCON_WSDFLASH_OFF (6u)


#define IFX_FLASH_FCON_WSECDF_LEN (3u)


#define IFX_FLASH_FCON_WSECDF_MSK (0x7u)


#define IFX_FLASH_FCON_WSECDF_OFF (12u)


#define IFX_FLASH_FCON_WSECPF_LEN (2u)


#define IFX_FLASH_FCON_WSECPF_MSK (0x3u)


#define IFX_FLASH_FCON_WSECPF_OFF (4u)


#define IFX_FLASH_FCON_WSPFLASH_LEN (4u)


#define IFX_FLASH_FCON_WSPFLASH_MSK (0xfu)


#define IFX_FLASH_FCON_WSPFLASH_OFF (0u)


#define IFX_FLASH_FPRO_DCFP_LEN (1u)


#define IFX_FLASH_FPRO_DCFP_MSK (0x1u)


#define IFX_FLASH_FPRO_DCFP_OFF (16u)


#define IFX_FLASH_FPRO_DDFD_LEN (1u)


#define IFX_FLASH_FPRO_DDFD_MSK (0x1u)


#define IFX_FLASH_FPRO_DDFD_OFF (20u)


#define IFX_FLASH_FPRO_DDFP_LEN (1u)


#define IFX_FLASH_FPRO_DDFP_MSK (0x1u)


#define IFX_FLASH_FPRO_DDFP_OFF (17u)


#define IFX_FLASH_FPRO_DDFPX_LEN (1u)


#define IFX_FLASH_FPRO_DDFPX_MSK (0x1u)


#define IFX_FLASH_FPRO_DDFPX_OFF (18u)


#define IFX_FLASH_FPRO_ENPE_LEN (2u)


#define IFX_FLASH_FPRO_ENPE_MSK (0x3u)


#define IFX_FLASH_FPRO_ENPE_OFF (22u)


#define IFX_FLASH_FPRO_PRODISD_LEN (1u)


#define IFX_FLASH_FPRO_PRODISD_MSK (0x1u)


#define IFX_FLASH_FPRO_PRODISD_OFF (3u)


#define IFX_FLASH_FPRO_PRODISDBG_LEN (1u)


#define IFX_FLASH_FPRO_PRODISDBG_MSK (0x1u)


#define IFX_FLASH_FPRO_PRODISDBG_OFF (9u)


#define IFX_FLASH_FPRO_PRODISP_LEN (1u)


#define IFX_FLASH_FPRO_PRODISP_MSK (0x1u)


#define IFX_FLASH_FPRO_PRODISP_OFF (1u)


#define IFX_FLASH_FPRO_PROIND_LEN (1u)


#define IFX_FLASH_FPRO_PROIND_MSK (0x1u)


#define IFX_FLASH_FPRO_PROIND_OFF (2u)


#define IFX_FLASH_FPRO_PROINDBG_LEN (1u)


#define IFX_FLASH_FPRO_PROINDBG_MSK (0x1u)


#define IFX_FLASH_FPRO_PROINDBG_OFF (8u)


#define IFX_FLASH_FPRO_PROINHSM_LEN (1u)


#define IFX_FLASH_FPRO_PROINHSM_MSK (0x1u)


#define IFX_FLASH_FPRO_PROINHSM_OFF (10u)


#define IFX_FLASH_FPRO_PROINHSMCOTP_LEN (1u)


#define IFX_FLASH_FPRO_PROINHSMCOTP_MSK (0x1u)


#define IFX_FLASH_FPRO_PROINHSMCOTP_OFF (4u)


#define IFX_FLASH_FPRO_PROINOTP_LEN (1u)


#define IFX_FLASH_FPRO_PROINOTP_MSK (0x1u)


#define IFX_FLASH_FPRO_PROINOTP_OFF (6u)


#define IFX_FLASH_FPRO_PROINP_LEN (1u)


#define IFX_FLASH_FPRO_PROINP_MSK (0x1u)


#define IFX_FLASH_FPRO_PROINP_OFF (0u)


#define IFX_FLASH_FPRO_RES5_LEN (1u)


#define IFX_FLASH_FPRO_RES5_MSK (0x1u)


#define IFX_FLASH_FPRO_RES5_OFF (5u)


#define IFX_FLASH_FPRO_RES7_LEN (1u)


#define IFX_FLASH_FPRO_RES7_MSK (0x1u)


#define IFX_FLASH_FPRO_RES7_OFF (7u)


#define IFX_FLASH_FSR_D0BUSY_LEN (1u)


#define IFX_FLASH_FSR_D0BUSY_MSK (0x1u)


#define IFX_FLASH_FSR_D0BUSY_OFF (1u)


#define IFX_FLASH_FSR_D1BUSY_LEN (1u)


#define IFX_FLASH_FSR_D1BUSY_MSK (0x1u)


#define IFX_FLASH_FSR_D1BUSY_OFF (2u)


#define IFX_FLASH_FSR_DFDBER_LEN (1u)


#define IFX_FLASH_FSR_DFDBER_MSK (0x1u)


#define IFX_FLASH_FSR_DFDBER_OFF (19u)


#define IFX_FLASH_FSR_DFMBER_LEN (1u)


#define IFX_FLASH_FSR_DFMBER_MSK (0x1u)


#define IFX_FLASH_FSR_DFMBER_OFF (21u)


#define IFX_FLASH_FSR_DFPAGE_LEN (1u)


#define IFX_FLASH_FSR_DFPAGE_MSK (0x1u)


#define IFX_FLASH_FSR_DFPAGE_OFF (10u)


#define IFX_FLASH_FSR_DFSBER_LEN (1u)


#define IFX_FLASH_FSR_DFSBER_MSK (0x1u)


#define IFX_FLASH_FSR_DFSBER_OFF (18u)


#define IFX_FLASH_FSR_DFTBER_LEN (1u)


#define IFX_FLASH_FSR_DFTBER_MSK (0x1u)


#define IFX_FLASH_FSR_DFTBER_OFF (20u)


#define IFX_FLASH_FSR_ERASE_LEN (1u)


#define IFX_FLASH_FSR_ERASE_MSK (0x1u)


#define IFX_FLASH_FSR_ERASE_OFF (8u)


#define IFX_FLASH_FSR_EVER_LEN (1u)


#define IFX_FLASH_FSR_EVER_MSK (0x1u)


#define IFX_FLASH_FSR_EVER_OFF (26u)


#define IFX_FLASH_FSR_FABUSY_LEN (1u)


#define IFX_FLASH_FSR_FABUSY_MSK (0x1u)


#define IFX_FLASH_FSR_FABUSY_OFF (0u)


#define IFX_FLASH_FSR_OPER_LEN (1u)


#define IFX_FLASH_FSR_OPER_MSK (0x1u)


#define IFX_FLASH_FSR_OPER_OFF (11u)


#define IFX_FLASH_FSR_ORIER_LEN (1u)


#define IFX_FLASH_FSR_ORIER_MSK (0x1u)


#define IFX_FLASH_FSR_ORIER_OFF (30u)


#define IFX_FLASH_FSR_P0BUSY_LEN (1u)


#define IFX_FLASH_FSR_P0BUSY_MSK (0x1u)


#define IFX_FLASH_FSR_P0BUSY_OFF (3u)


#define IFX_FLASH_FSR_P1BUSY_LEN (1u)


#define IFX_FLASH_FSR_P1BUSY_MSK (0x1u)


#define IFX_FLASH_FSR_P1BUSY_OFF (4u)


#define IFX_FLASH_FSR_PFDBER_LEN (1u)


#define IFX_FLASH_FSR_PFDBER_MSK (0x1u)


#define IFX_FLASH_FSR_PFDBER_OFF (15u)


#define IFX_FLASH_FSR_PFMBER_LEN (1u)


#define IFX_FLASH_FSR_PFMBER_MSK (0x1u)


#define IFX_FLASH_FSR_PFMBER_OFF (16u)


#define IFX_FLASH_FSR_PFPAGE_LEN (1u)


#define IFX_FLASH_FSR_PFPAGE_MSK (0x1u)


#define IFX_FLASH_FSR_PFPAGE_OFF (9u)


#define IFX_FLASH_FSR_PFSBER_LEN (1u)


#define IFX_FLASH_FSR_PFSBER_MSK (0x1u)


#define IFX_FLASH_FSR_PFSBER_OFF (14u)


#define IFX_FLASH_FSR_PROER_LEN (1u)


#define IFX_FLASH_FSR_PROER_MSK (0x1u)


#define IFX_FLASH_FSR_PROER_OFF (13u)


#define IFX_FLASH_FSR_PROG_LEN (1u)


#define IFX_FLASH_FSR_PROG_MSK (0x1u)


#define IFX_FLASH_FSR_PROG_OFF (7u)


#define IFX_FLASH_FSR_PVER_LEN (1u)


#define IFX_FLASH_FSR_PVER_MSK (0x1u)


#define IFX_FLASH_FSR_PVER_OFF (25u)


#define IFX_FLASH_FSR_RES17_LEN (1u)


#define IFX_FLASH_FSR_RES17_MSK (0x1u)


#define IFX_FLASH_FSR_RES17_OFF (17u)


#define IFX_FLASH_FSR_RES5_LEN (1u)


#define IFX_FLASH_FSR_RES5_MSK (0x1u)


#define IFX_FLASH_FSR_RES5_OFF (5u)


#define IFX_FLASH_FSR_RES6_LEN (1u)


#define IFX_FLASH_FSR_RES6_MSK (0x1u)


#define IFX_FLASH_FSR_RES6_OFF (6u)


#define IFX_FLASH_FSR_SLM_LEN (1u)


#define IFX_FLASH_FSR_SLM_MSK (0x1u)


#define IFX_FLASH_FSR_SLM_OFF (28u)


#define IFX_FLASH_FSR_SPND_LEN (1u)


#define IFX_FLASH_FSR_SPND_MSK (0x1u)


#define IFX_FLASH_FSR_SPND_OFF (27u)


#define IFX_FLASH_FSR_SQER_LEN (1u)


#define IFX_FLASH_FSR_SQER_MSK (0x1u)


#define IFX_FLASH_FSR_SQER_OFF (12u)


#define IFX_FLASH_FSR_SRIADDERR_LEN (1u)


#define IFX_FLASH_FSR_SRIADDERR_MSK (0x1u)


#define IFX_FLASH_FSR_SRIADDERR_OFF (22u)


#define IFX_FLASH_HSMFCON_EOBM_LEN (1u)


#define IFX_FLASH_HSMFCON_EOBM_MSK (0x1u)


#define IFX_FLASH_HSMFCON_EOBM_OFF (31u)


#define IFX_FLASH_HSMFCON_LCKHSMUCB_LEN (2u)


#define IFX_FLASH_HSMFCON_LCKHSMUCB_MSK (0x3u)


#define IFX_FLASH_HSMFCON_LCKHSMUCB_OFF (0u)


#define IFX_FLASH_HSMFCON_SQERM_LEN (1u)


#define IFX_FLASH_HSMFCON_SQERM_MSK (0x1u)


#define IFX_FLASH_HSMFCON_SQERM_OFF (25u)


#define IFX_FLASH_HSMFCON_VOPERM_LEN (1u)


#define IFX_FLASH_HSMFCON_VOPERM_MSK (0x1u)


#define IFX_FLASH_HSMFCON_VOPERM_OFF (24u)


#define IFX_FLASH_HSMFSR_D1BUSY_LEN (1u)


#define IFX_FLASH_HSMFSR_D1BUSY_MSK (0x1u)


#define IFX_FLASH_HSMFSR_D1BUSY_OFF (2u)


#define IFX_FLASH_HSMFSR_DFPAGE_LEN (1u)


#define IFX_FLASH_HSMFSR_DFPAGE_MSK (0x1u)


#define IFX_FLASH_HSMFSR_DFPAGE_OFF (10u)


#define IFX_FLASH_HSMFSR_ERASE_LEN (1u)


#define IFX_FLASH_HSMFSR_ERASE_MSK (0x1u)


#define IFX_FLASH_HSMFSR_ERASE_OFF (8u)


#define IFX_FLASH_HSMFSR_EVER_LEN (1u)


#define IFX_FLASH_HSMFSR_EVER_MSK (0x1u)


#define IFX_FLASH_HSMFSR_EVER_OFF (26u)


#define IFX_FLASH_HSMFSR_OPER_LEN (1u)


#define IFX_FLASH_HSMFSR_OPER_MSK (0x1u)


#define IFX_FLASH_HSMFSR_OPER_OFF (11u)


#define IFX_FLASH_HSMFSR_PROG_LEN (1u)


#define IFX_FLASH_HSMFSR_PROG_MSK (0x1u)


#define IFX_FLASH_HSMFSR_PROG_OFF (7u)


#define IFX_FLASH_HSMFSR_PVER_LEN (1u)


#define IFX_FLASH_HSMFSR_PVER_MSK (0x1u)


#define IFX_FLASH_HSMFSR_PVER_OFF (25u)


#define IFX_FLASH_HSMFSR_SPND_LEN (1u)


#define IFX_FLASH_HSMFSR_SPND_MSK (0x1u)


#define IFX_FLASH_HSMFSR_SPND_OFF (27u)


#define IFX_FLASH_HSMFSR_SQER_LEN (1u)


#define IFX_FLASH_HSMFSR_SQER_MSK (0x1u)


#define IFX_FLASH_HSMFSR_SQER_OFF (12u)


#define IFX_FLASH_HSMMARD_SELD1_LEN (1u)


#define IFX_FLASH_HSMMARD_SELD1_MSK (0x1u)


#define IFX_FLASH_HSMMARD_SELD1_OFF (1u)


#define IFX_FLASH_HSMMARD_SPND_LEN (1u)


#define IFX_FLASH_HSMMARD_SPND_MSK (0x1u)


#define IFX_FLASH_HSMMARD_SPND_OFF (3u)


#define IFX_FLASH_HSMMARD_SPNDERR_LEN (1u)


#define IFX_FLASH_HSMMARD_SPNDERR_MSK (0x1u)


#define IFX_FLASH_HSMMARD_SPNDERR_OFF (4u)


#define IFX_FLASH_HSMRRAD_ADD_LEN (29u)


#define IFX_FLASH_HSMRRAD_ADD_MSK (0x1fffffffu)


#define IFX_FLASH_HSMRRAD_ADD_OFF (3u)


#define IFX_FLASH_HSMRRCT_BUSY_LEN (1u)


#define IFX_FLASH_HSMRRCT_BUSY_MSK (0x1u)


#define IFX_FLASH_HSMRRCT_BUSY_OFF (2u)


#define IFX_FLASH_HSMRRCT_CNT_LEN (16u)


#define IFX_FLASH_HSMRRCT_CNT_MSK (0xffffu)


#define IFX_FLASH_HSMRRCT_CNT_OFF (16u)


#define IFX_FLASH_HSMRRCT_DONE_LEN (1u)


#define IFX_FLASH_HSMRRCT_DONE_MSK (0x1u)


#define IFX_FLASH_HSMRRCT_DONE_OFF (3u)


#define IFX_FLASH_HSMRRCT_EOBM_LEN (1u)


#define IFX_FLASH_HSMRRCT_EOBM_MSK (0x1u)


#define IFX_FLASH_HSMRRCT_EOBM_OFF (8u)


#define IFX_FLASH_HSMRRCT_ERR_LEN (1u)


#define IFX_FLASH_HSMRRCT_ERR_MSK (0x1u)


#define IFX_FLASH_HSMRRCT_ERR_OFF (4u)


#define IFX_FLASH_HSMRRCT_STP_LEN (1u)


#define IFX_FLASH_HSMRRCT_STP_MSK (0x1u)


#define IFX_FLASH_HSMRRCT_STP_OFF (1u)


#define IFX_FLASH_HSMRRCT_STRT_LEN (1u)


#define IFX_FLASH_HSMRRCT_STRT_MSK (0x1u)


#define IFX_FLASH_HSMRRCT_STRT_OFF (0u)


#define IFX_FLASH_HSMRRD0_DATA_LEN (32u)


#define IFX_FLASH_HSMRRD0_DATA_MSK (0xffffffffu)


#define IFX_FLASH_HSMRRD0_DATA_OFF (0u)


#define IFX_FLASH_HSMRRD1_DATA_LEN (32u)


#define IFX_FLASH_HSMRRD1_DATA_MSK (0xffffffffu)


#define IFX_FLASH_HSMRRD1_DATA_OFF (0u)


#define IFX_FLASH_ID_MOD_REV_LEN (8u)


#define IFX_FLASH_ID_MOD_REV_MSK (0xffu)


#define IFX_FLASH_ID_MOD_REV_OFF (0u)


#define IFX_FLASH_ID_MOD_TYPE_LEN (8u)


#define IFX_FLASH_ID_MOD_TYPE_MSK (0xffu)


#define IFX_FLASH_ID_MOD_TYPE_OFF (8u)


#define IFX_FLASH_ID_MODNUMBER_LEN (16u)


#define IFX_FLASH_ID_MODNUMBER_MSK (0xffffu)


#define IFX_FLASH_ID_MODNUMBER_OFF (16u)


#define IFX_FLASH_MARD_HMARGIN_LEN (1u)


#define IFX_FLASH_MARD_HMARGIN_MSK (0x1u)


#define IFX_FLASH_MARD_HMARGIN_OFF (0u)


#define IFX_FLASH_MARD_SELD0_LEN (1u)


#define IFX_FLASH_MARD_SELD0_MSK (0x1u)


#define IFX_FLASH_MARD_SELD0_OFF (1u)


#define IFX_FLASH_MARD_SPND_LEN (1u)


#define IFX_FLASH_MARD_SPND_MSK (0x1u)


#define IFX_FLASH_MARD_SPND_OFF (3u)


#define IFX_FLASH_MARD_SPNDERR_LEN (1u)


#define IFX_FLASH_MARD_SPNDERR_MSK (0x1u)


#define IFX_FLASH_MARD_SPNDERR_OFF (4u)


#define IFX_FLASH_MARD_TRAPDIS_LEN (1u)


#define IFX_FLASH_MARD_TRAPDIS_MSK (0x1u)


#define IFX_FLASH_MARD_TRAPDIS_OFF (15u)


#define IFX_FLASH_MARP_RES2_LEN (1u)


#define IFX_FLASH_MARP_RES2_MSK (0x1u)


#define IFX_FLASH_MARP_RES2_OFF (2u)


#define IFX_FLASH_MARP_RES3_LEN (1u)


#define IFX_FLASH_MARP_RES3_MSK (0x1u)


#define IFX_FLASH_MARP_RES3_OFF (3u)


#define IFX_FLASH_MARP_SELP0_LEN (1u)


#define IFX_FLASH_MARP_SELP0_MSK (0x1u)


#define IFX_FLASH_MARP_SELP0_OFF (0u)


#define IFX_FLASH_MARP_SELP1_LEN (1u)


#define IFX_FLASH_MARP_SELP1_MSK (0x1u)


#define IFX_FLASH_MARP_SELP1_OFF (1u)


#define IFX_FLASH_MARP_TRAPDIS_LEN (1u)


#define IFX_FLASH_MARP_TRAPDIS_MSK (0x1u)


#define IFX_FLASH_MARP_TRAPDIS_OFF (15u)


#define IFX_FLASH_PROCOND_APREN_LEN (1u)


#define IFX_FLASH_PROCOND_APREN_MSK (0x1u)


#define IFX_FLASH_PROCOND_APREN_OFF (11u)


#define IFX_FLASH_PROCOND_CAP0EN_LEN (1u)


#define IFX_FLASH_PROCOND_CAP0EN_MSK (0x1u)


#define IFX_FLASH_PROCOND_CAP0EN_OFF (12u)


#define IFX_FLASH_PROCOND_CAP1EN_LEN (1u)


#define IFX_FLASH_PROCOND_CAP1EN_MSK (0x1u)


#define IFX_FLASH_PROCOND_CAP1EN_OFF (13u)


#define IFX_FLASH_PROCOND_CAP2EN_LEN (1u)


#define IFX_FLASH_PROCOND_CAP2EN_MSK (0x1u)


#define IFX_FLASH_PROCOND_CAP2EN_OFF (14u)


#define IFX_FLASH_PROCOND_CAP3EN_LEN (1u)


#define IFX_FLASH_PROCOND_CAP3EN_MSK (0x1u)


#define IFX_FLASH_PROCOND_CAP3EN_OFF (15u)


#define IFX_FLASH_PROCOND_ESR0CNT_LEN (12u)


#define IFX_FLASH_PROCOND_ESR0CNT_MSK (0xfffu)


#define IFX_FLASH_PROCOND_ESR0CNT_OFF (16u)


#define IFX_FLASH_PROCOND_L_LEN (1u)


#define IFX_FLASH_PROCOND_L_MSK (0x1u)


#define IFX_FLASH_PROCOND_L_OFF (0u)


#define IFX_FLASH_PROCOND_MODE_LEN (2u)


#define IFX_FLASH_PROCOND_MODE_MSK (0x3u)


#define IFX_FLASH_PROCOND_MODE_OFF (9u)


#define IFX_FLASH_PROCOND_NSAFECC_LEN (1u)


#define IFX_FLASH_PROCOND_NSAFECC_MSK (0x1u)


#define IFX_FLASH_PROCOND_NSAFECC_OFF (1u)


#define IFX_FLASH_PROCOND_OSCCFG_LEN (1u)


#define IFX_FLASH_PROCOND_OSCCFG_MSK (0x1u)


#define IFX_FLASH_PROCOND_OSCCFG_OFF (8u)


#define IFX_FLASH_PROCOND_RAMIN_LEN (2u)


#define IFX_FLASH_PROCOND_RAMIN_MSK (0x3u)


#define IFX_FLASH_PROCOND_RAMIN_OFF (2u)


#define IFX_FLASH_PROCOND_RAMINSEL_LEN (4u)


#define IFX_FLASH_PROCOND_RAMINSEL_MSK (0xfu)


#define IFX_FLASH_PROCOND_RAMINSEL_OFF (4u)


#define IFX_FLASH_PROCOND_RES29_LEN (2u)


#define IFX_FLASH_PROCOND_RES29_MSK (0x3u)


#define IFX_FLASH_PROCOND_RES29_OFF (28u)


#define IFX_FLASH_PROCOND_RES30_LEN (1u)


#define IFX_FLASH_PROCOND_RES30_MSK (0x1u)


#define IFX_FLASH_PROCOND_RES30_OFF (30u)


#define IFX_FLASH_PROCOND_RPRO_LEN (1u)


#define IFX_FLASH_PROCOND_RPRO_MSK (0x1u)


#define IFX_FLASH_PROCOND_RPRO_OFF (31u)


#define IFX_FLASH_PROCONDBG_DBGIFLCK_LEN (1u)


#define IFX_FLASH_PROCONDBG_DBGIFLCK_MSK (0x1u)


#define IFX_FLASH_PROCONDBG_DBGIFLCK_OFF (1u)


#define IFX_FLASH_PROCONDBG_EDM_LEN (2u)


#define IFX_FLASH_PROCONDBG_EDM_MSK (0x3u)


#define IFX_FLASH_PROCONDBG_EDM_OFF (2u)


#define IFX_FLASH_PROCONDBG_OCDSDIS_LEN (1u)


#define IFX_FLASH_PROCONDBG_OCDSDIS_MSK (0x1u)


#define IFX_FLASH_PROCONDBG_OCDSDIS_OFF (0u)


#define IFX_FLASH_PROCONHSM_DBGIFLCK_LEN (1u)


#define IFX_FLASH_PROCONHSM_DBGIFLCK_MSK (0x1u)


#define IFX_FLASH_PROCONHSM_DBGIFLCK_OFF (1u)


#define IFX_FLASH_PROCONHSM_HSMDBGDIS_LEN (1u)


#define IFX_FLASH_PROCONHSM_HSMDBGDIS_MSK (0x1u)


#define IFX_FLASH_PROCONHSM_HSMDBGDIS_OFF (0u)


#define IFX_FLASH_PROCONHSM_HSMTSTDIS_LEN (1u)


#define IFX_FLASH_PROCONHSM_HSMTSTDIS_MSK (0x1u)


#define IFX_FLASH_PROCONHSM_HSMTSTDIS_OFF (3u)


#define IFX_FLASH_PROCONHSM_RES15_LEN (12u)


#define IFX_FLASH_PROCONHSM_RES15_MSK (0xfffu)


#define IFX_FLASH_PROCONHSM_RES15_OFF (4u)


#define IFX_FLASH_PROCONHSM_TSTIFLCK_LEN (1u)


#define IFX_FLASH_PROCONHSM_TSTIFLCK_MSK (0x1u)


#define IFX_FLASH_PROCONHSM_TSTIFLCK_OFF (2u)


#define IFX_FLASH_PROCONHSMCOTP_BLKFLAN_LEN (1u)


#define IFX_FLASH_PROCONHSMCOTP_BLKFLAN_MSK (0x1u)


#define IFX_FLASH_PROCONHSMCOTP_BLKFLAN_OFF (13u)


#define IFX_FLASH_PROCONHSMCOTP_DESTDBG_LEN (2u)


#define IFX_FLASH_PROCONHSMCOTP_DESTDBG_MSK (0x3u)


#define IFX_FLASH_PROCONHSMCOTP_DESTDBG_OFF (11u)


#define IFX_FLASH_PROCONHSMCOTP_HSM16X_LEN (1u)


#define IFX_FLASH_PROCONHSMCOTP_HSM16X_MSK (0x1u)


#define IFX_FLASH_PROCONHSMCOTP_HSM16X_OFF (4u)


#define IFX_FLASH_PROCONHSMCOTP_HSM17X_LEN (1u)


#define IFX_FLASH_PROCONHSMCOTP_HSM17X_MSK (0x1u)


#define IFX_FLASH_PROCONHSMCOTP_HSM17X_OFF (5u)


#define IFX_FLASH_PROCONHSMCOTP_HSM6X_LEN (1u)


#define IFX_FLASH_PROCONHSMCOTP_HSM6X_MSK (0x1u)


#define IFX_FLASH_PROCONHSMCOTP_HSM6X_OFF (3u)


#define IFX_FLASH_PROCONHSMCOTP_HSMBOOTEN_LEN (1u)


#define IFX_FLASH_PROCONHSMCOTP_HSMBOOTEN_MSK (0x1u)


#define IFX_FLASH_PROCONHSMCOTP_HSMBOOTEN_OFF (0u)


#define IFX_FLASH_PROCONHSMCOTP_HSMDX_LEN (1u)


#define IFX_FLASH_PROCONHSMCOTP_HSMDX_MSK (0x1u)


#define IFX_FLASH_PROCONHSMCOTP_HSMDX_OFF (2u)


#define IFX_FLASH_PROCONHSMCOTP_HSMENPINS_LEN (2u)


#define IFX_FLASH_PROCONHSMCOTP_HSMENPINS_MSK (0x3u)


#define IFX_FLASH_PROCONHSMCOTP_HSMENPINS_OFF (7u)


#define IFX_FLASH_PROCONHSMCOTP_HSMENRES_LEN (2u)


#define IFX_FLASH_PROCONHSMCOTP_HSMENRES_MSK (0x3u)


#define IFX_FLASH_PROCONHSMCOTP_HSMENRES_OFF (9u)


#define IFX_FLASH_PROCONHSMCOTP_S16ROM_LEN (1u)


#define IFX_FLASH_PROCONHSMCOTP_S16ROM_MSK (0x1u)


#define IFX_FLASH_PROCONHSMCOTP_S16ROM_OFF (16u)


#define IFX_FLASH_PROCONHSMCOTP_S17ROM_LEN (1u)


#define IFX_FLASH_PROCONHSMCOTP_S17ROM_MSK (0x1u)


#define IFX_FLASH_PROCONHSMCOTP_S17ROM_OFF (17u)


#define IFX_FLASH_PROCONHSMCOTP_S6ROM_LEN (1u)


#define IFX_FLASH_PROCONHSMCOTP_S6ROM_MSK (0x1u)


#define IFX_FLASH_PROCONHSMCOTP_S6ROM_OFF (6u)


#define IFX_FLASH_PROCONHSMCOTP_SSWWAIT_LEN (1u)


#define IFX_FLASH_PROCONHSMCOTP_SSWWAIT_MSK (0x1u)


#define IFX_FLASH_PROCONHSMCOTP_SSWWAIT_OFF (1u)


#define IFX_FLASH_PROCONOTP_BML_LEN (2u)


#define IFX_FLASH_PROCONOTP_BML_MSK (0x3u)


#define IFX_FLASH_PROCONOTP_BML_OFF (29u)


#define IFX_FLASH_PROCONOTP_S0ROM_LEN (1u)


#define IFX_FLASH_PROCONOTP_S0ROM_MSK (0x1u)


#define IFX_FLASH_PROCONOTP_S0ROM_OFF (0u)


#define IFX_FLASH_PROCONOTP_S10ROM_LEN (1u)


#define IFX_FLASH_PROCONOTP_S10ROM_MSK (0x1u)


#define IFX_FLASH_PROCONOTP_S10ROM_OFF (10u)


#define IFX_FLASH_PROCONOTP_S11ROM_LEN (1u)


#define IFX_FLASH_PROCONOTP_S11ROM_MSK (0x1u)


#define IFX_FLASH_PROCONOTP_S11ROM_OFF (11u)


#define IFX_FLASH_PROCONOTP_S12ROM_LEN (1u)


#define IFX_FLASH_PROCONOTP_S12ROM_MSK (0x1u)


#define IFX_FLASH_PROCONOTP_S12ROM_OFF (12u)


#define IFX_FLASH_PROCONOTP_S13ROM_LEN (1u)


#define IFX_FLASH_PROCONOTP_S13ROM_MSK (0x1u)


#define IFX_FLASH_PROCONOTP_S13ROM_OFF (13u)


#define IFX_FLASH_PROCONOTP_S14ROM_LEN (1u)


#define IFX_FLASH_PROCONOTP_S14ROM_MSK (0x1u)


#define IFX_FLASH_PROCONOTP_S14ROM_OFF (14u)


#define IFX_FLASH_PROCONOTP_S15ROM_LEN (1u)


#define IFX_FLASH_PROCONOTP_S15ROM_MSK (0x1u)


#define IFX_FLASH_PROCONOTP_S15ROM_OFF (15u)


#define IFX_FLASH_PROCONOTP_S16ROM_LEN (1u)


#define IFX_FLASH_PROCONOTP_S16ROM_MSK (0x1u)


#define IFX_FLASH_PROCONOTP_S16ROM_OFF (16u)


#define IFX_FLASH_PROCONOTP_S17ROM_LEN (1u)


#define IFX_FLASH_PROCONOTP_S17ROM_MSK (0x1u)


#define IFX_FLASH_PROCONOTP_S17ROM_OFF (17u)


#define IFX_FLASH_PROCONOTP_S18ROM_LEN (1u)


#define IFX_FLASH_PROCONOTP_S18ROM_MSK (0x1u)


#define IFX_FLASH_PROCONOTP_S18ROM_OFF (18u)


#define IFX_FLASH_PROCONOTP_S19ROM_LEN (1u)


#define IFX_FLASH_PROCONOTP_S19ROM_MSK (0x1u)


#define IFX_FLASH_PROCONOTP_S19ROM_OFF (19u)


#define IFX_FLASH_PROCONOTP_S1ROM_LEN (1u)


#define IFX_FLASH_PROCONOTP_S1ROM_MSK (0x1u)


#define IFX_FLASH_PROCONOTP_S1ROM_OFF (1u)


#define IFX_FLASH_PROCONOTP_S20ROM_LEN (1u)


#define IFX_FLASH_PROCONOTP_S20ROM_MSK (0x1u)


#define IFX_FLASH_PROCONOTP_S20ROM_OFF (20u)


#define IFX_FLASH_PROCONOTP_S21ROM_LEN (1u)


#define IFX_FLASH_PROCONOTP_S21ROM_MSK (0x1u)


#define IFX_FLASH_PROCONOTP_S21ROM_OFF (21u)


#define IFX_FLASH_PROCONOTP_S22ROM_LEN (1u)


#define IFX_FLASH_PROCONOTP_S22ROM_MSK (0x1u)


#define IFX_FLASH_PROCONOTP_S22ROM_OFF (22u)


#define IFX_FLASH_PROCONOTP_S23ROM_LEN (1u)


#define IFX_FLASH_PROCONOTP_S23ROM_MSK (0x1u)


#define IFX_FLASH_PROCONOTP_S23ROM_OFF (23u)


#define IFX_FLASH_PROCONOTP_S24ROM_LEN (1u)


#define IFX_FLASH_PROCONOTP_S24ROM_MSK (0x1u)


#define IFX_FLASH_PROCONOTP_S24ROM_OFF (24u)


#define IFX_FLASH_PROCONOTP_S25ROM_LEN (1u)


#define IFX_FLASH_PROCONOTP_S25ROM_MSK (0x1u)


#define IFX_FLASH_PROCONOTP_S25ROM_OFF (25u)


#define IFX_FLASH_PROCONOTP_S26ROM_LEN (1u)


#define IFX_FLASH_PROCONOTP_S26ROM_MSK (0x1u)


#define IFX_FLASH_PROCONOTP_S26ROM_OFF (26u)


#define IFX_FLASH_PROCONOTP_S2ROM_LEN (1u)


#define IFX_FLASH_PROCONOTP_S2ROM_MSK (0x1u)


#define IFX_FLASH_PROCONOTP_S2ROM_OFF (2u)


#define IFX_FLASH_PROCONOTP_S3ROM_LEN (1u)


#define IFX_FLASH_PROCONOTP_S3ROM_MSK (0x1u)


#define IFX_FLASH_PROCONOTP_S3ROM_OFF (3u)


#define IFX_FLASH_PROCONOTP_S4ROM_LEN (1u)


#define IFX_FLASH_PROCONOTP_S4ROM_MSK (0x1u)


#define IFX_FLASH_PROCONOTP_S4ROM_OFF (4u)


#define IFX_FLASH_PROCONOTP_S5ROM_LEN (1u)


#define IFX_FLASH_PROCONOTP_S5ROM_MSK (0x1u)


#define IFX_FLASH_PROCONOTP_S5ROM_OFF (5u)


#define IFX_FLASH_PROCONOTP_S6ROM_LEN (1u)


#define IFX_FLASH_PROCONOTP_S6ROM_MSK (0x1u)


#define IFX_FLASH_PROCONOTP_S6ROM_OFF (6u)


#define IFX_FLASH_PROCONOTP_S7ROM_LEN (1u)


#define IFX_FLASH_PROCONOTP_S7ROM_MSK (0x1u)


#define IFX_FLASH_PROCONOTP_S7ROM_OFF (7u)


#define IFX_FLASH_PROCONOTP_S8ROM_LEN (1u)


#define IFX_FLASH_PROCONOTP_S8ROM_MSK (0x1u)


#define IFX_FLASH_PROCONOTP_S8ROM_OFF (8u)


#define IFX_FLASH_PROCONOTP_S9ROM_LEN (1u)


#define IFX_FLASH_PROCONOTP_S9ROM_MSK (0x1u)


#define IFX_FLASH_PROCONOTP_S9ROM_OFF (9u)


#define IFX_FLASH_PROCONOTP_TP_LEN (1u)


#define IFX_FLASH_PROCONOTP_TP_MSK (0x1u)


#define IFX_FLASH_PROCONOTP_TP_OFF (31u)


#define IFX_FLASH_PROCONP_RPRO_LEN (1u)


#define IFX_FLASH_PROCONP_RPRO_MSK (0x1u)


#define IFX_FLASH_PROCONP_RPRO_OFF (31u)


#define IFX_FLASH_PROCONP_S0L_LEN (1u)


#define IFX_FLASH_PROCONP_S0L_MSK (0x1u)


#define IFX_FLASH_PROCONP_S0L_OFF (0u)


#define IFX_FLASH_PROCONP_S10L_LEN (1u)


#define IFX_FLASH_PROCONP_S10L_MSK (0x1u)


#define IFX_FLASH_PROCONP_S10L_OFF (10u)


#define IFX_FLASH_PROCONP_S11L_LEN (1u)


#define IFX_FLASH_PROCONP_S11L_MSK (0x1u)


#define IFX_FLASH_PROCONP_S11L_OFF (11u)


#define IFX_FLASH_PROCONP_S12L_LEN (1u)


#define IFX_FLASH_PROCONP_S12L_MSK (0x1u)


#define IFX_FLASH_PROCONP_S12L_OFF (12u)


#define IFX_FLASH_PROCONP_S13L_LEN (1u)


#define IFX_FLASH_PROCONP_S13L_MSK (0x1u)


#define IFX_FLASH_PROCONP_S13L_OFF (13u)


#define IFX_FLASH_PROCONP_S14L_LEN (1u)


#define IFX_FLASH_PROCONP_S14L_MSK (0x1u)


#define IFX_FLASH_PROCONP_S14L_OFF (14u)


#define IFX_FLASH_PROCONP_S15L_LEN (1u)


#define IFX_FLASH_PROCONP_S15L_MSK (0x1u)


#define IFX_FLASH_PROCONP_S15L_OFF (15u)


#define IFX_FLASH_PROCONP_S16L_LEN (1u)


#define IFX_FLASH_PROCONP_S16L_MSK (0x1u)


#define IFX_FLASH_PROCONP_S16L_OFF (16u)


#define IFX_FLASH_PROCONP_S17L_LEN (1u)


#define IFX_FLASH_PROCONP_S17L_MSK (0x1u)


#define IFX_FLASH_PROCONP_S17L_OFF (17u)


#define IFX_FLASH_PROCONP_S18L_LEN (1u)


#define IFX_FLASH_PROCONP_S18L_MSK (0x1u)


#define IFX_FLASH_PROCONP_S18L_OFF (18u)


#define IFX_FLASH_PROCONP_S19L_LEN (1u)


#define IFX_FLASH_PROCONP_S19L_MSK (0x1u)


#define IFX_FLASH_PROCONP_S19L_OFF (19u)


#define IFX_FLASH_PROCONP_S1L_LEN (1u)


#define IFX_FLASH_PROCONP_S1L_MSK (0x1u)


#define IFX_FLASH_PROCONP_S1L_OFF (1u)


#define IFX_FLASH_PROCONP_S20L_LEN (1u)


#define IFX_FLASH_PROCONP_S20L_MSK (0x1u)


#define IFX_FLASH_PROCONP_S20L_OFF (20u)


#define IFX_FLASH_PROCONP_S21L_LEN (1u)


#define IFX_FLASH_PROCONP_S21L_MSK (0x1u)


#define IFX_FLASH_PROCONP_S21L_OFF (21u)


#define IFX_FLASH_PROCONP_S22L_LEN (1u)


#define IFX_FLASH_PROCONP_S22L_MSK (0x1u)


#define IFX_FLASH_PROCONP_S22L_OFF (22u)


#define IFX_FLASH_PROCONP_S23L_LEN (1u)


#define IFX_FLASH_PROCONP_S23L_MSK (0x1u)


#define IFX_FLASH_PROCONP_S23L_OFF (23u)


#define IFX_FLASH_PROCONP_S24L_LEN (1u)


#define IFX_FLASH_PROCONP_S24L_MSK (0x1u)


#define IFX_FLASH_PROCONP_S24L_OFF (24u)


#define IFX_FLASH_PROCONP_S25L_LEN (1u)


#define IFX_FLASH_PROCONP_S25L_MSK (0x1u)


#define IFX_FLASH_PROCONP_S25L_OFF (25u)


#define IFX_FLASH_PROCONP_S26L_LEN (1u)


#define IFX_FLASH_PROCONP_S26L_MSK (0x1u)


#define IFX_FLASH_PROCONP_S26L_OFF (26u)


#define IFX_FLASH_PROCONP_S2L_LEN (1u)


#define IFX_FLASH_PROCONP_S2L_MSK (0x1u)


#define IFX_FLASH_PROCONP_S2L_OFF (2u)


#define IFX_FLASH_PROCONP_S3L_LEN (1u)


#define IFX_FLASH_PROCONP_S3L_MSK (0x1u)


#define IFX_FLASH_PROCONP_S3L_OFF (3u)


#define IFX_FLASH_PROCONP_S4L_LEN (1u)


#define IFX_FLASH_PROCONP_S4L_MSK (0x1u)


#define IFX_FLASH_PROCONP_S4L_OFF (4u)


#define IFX_FLASH_PROCONP_S5L_LEN (1u)


#define IFX_FLASH_PROCONP_S5L_MSK (0x1u)


#define IFX_FLASH_PROCONP_S5L_OFF (5u)


#define IFX_FLASH_PROCONP_S6L_LEN (1u)


#define IFX_FLASH_PROCONP_S6L_MSK (0x1u)


#define IFX_FLASH_PROCONP_S6L_OFF (6u)


#define IFX_FLASH_PROCONP_S7L_LEN (1u)


#define IFX_FLASH_PROCONP_S7L_MSK (0x1u)


#define IFX_FLASH_PROCONP_S7L_OFF (7u)


#define IFX_FLASH_PROCONP_S8L_LEN (1u)


#define IFX_FLASH_PROCONP_S8L_MSK (0x1u)


#define IFX_FLASH_PROCONP_S8L_OFF (8u)


#define IFX_FLASH_PROCONP_S9L_LEN (1u)


#define IFX_FLASH_PROCONP_S9L_MSK (0x1u)


#define IFX_FLASH_PROCONP_S9L_OFF (9u)


#define IFX_FLASH_PROCONWOP_DATM_LEN (1u)


#define IFX_FLASH_PROCONWOP_DATM_MSK (0x1u)


#define IFX_FLASH_PROCONWOP_DATM_OFF (31u)


#define IFX_FLASH_PROCONWOP_S0WOP_LEN (1u)


#define IFX_FLASH_PROCONWOP_S0WOP_MSK (0x1u)


#define IFX_FLASH_PROCONWOP_S0WOP_OFF (0u)


#define IFX_FLASH_PROCONWOP_S10WOP_LEN (1u)


#define IFX_FLASH_PROCONWOP_S10WOP_MSK (0x1u)


#define IFX_FLASH_PROCONWOP_S10WOP_OFF (10u)


#define IFX_FLASH_PROCONWOP_S11WOP_LEN (1u)


#define IFX_FLASH_PROCONWOP_S11WOP_MSK (0x1u)


#define IFX_FLASH_PROCONWOP_S11WOP_OFF (11u)


#define IFX_FLASH_PROCONWOP_S12WOP_LEN (1u)


#define IFX_FLASH_PROCONWOP_S12WOP_MSK (0x1u)


#define IFX_FLASH_PROCONWOP_S12WOP_OFF (12u)


#define IFX_FLASH_PROCONWOP_S13WOP_LEN (1u)


#define IFX_FLASH_PROCONWOP_S13WOP_MSK (0x1u)


#define IFX_FLASH_PROCONWOP_S13WOP_OFF (13u)


#define IFX_FLASH_PROCONWOP_S14WOP_LEN (1u)


#define IFX_FLASH_PROCONWOP_S14WOP_MSK (0x1u)


#define IFX_FLASH_PROCONWOP_S14WOP_OFF (14u)


#define IFX_FLASH_PROCONWOP_S15WOP_LEN (1u)


#define IFX_FLASH_PROCONWOP_S15WOP_MSK (0x1u)


#define IFX_FLASH_PROCONWOP_S15WOP_OFF (15u)


#define IFX_FLASH_PROCONWOP_S16WOP_LEN (1u)


#define IFX_FLASH_PROCONWOP_S16WOP_MSK (0x1u)


#define IFX_FLASH_PROCONWOP_S16WOP_OFF (16u)


#define IFX_FLASH_PROCONWOP_S17WOP_LEN (1u)


#define IFX_FLASH_PROCONWOP_S17WOP_MSK (0x1u)


#define IFX_FLASH_PROCONWOP_S17WOP_OFF (17u)


#define IFX_FLASH_PROCONWOP_S18WOP_LEN (1u)


#define IFX_FLASH_PROCONWOP_S18WOP_MSK (0x1u)


#define IFX_FLASH_PROCONWOP_S18WOP_OFF (18u)


#define IFX_FLASH_PROCONWOP_S19WOP_LEN (1u)


#define IFX_FLASH_PROCONWOP_S19WOP_MSK (0x1u)


#define IFX_FLASH_PROCONWOP_S19WOP_OFF (19u)


#define IFX_FLASH_PROCONWOP_S1WOP_LEN (1u)


#define IFX_FLASH_PROCONWOP_S1WOP_MSK (0x1u)


#define IFX_FLASH_PROCONWOP_S1WOP_OFF (1u)


#define IFX_FLASH_PROCONWOP_S20WOP_LEN (1u)


#define IFX_FLASH_PROCONWOP_S20WOP_MSK (0x1u)


#define IFX_FLASH_PROCONWOP_S20WOP_OFF (20u)


#define IFX_FLASH_PROCONWOP_S21WOP_LEN (1u)


#define IFX_FLASH_PROCONWOP_S21WOP_MSK (0x1u)


#define IFX_FLASH_PROCONWOP_S21WOP_OFF (21u)


#define IFX_FLASH_PROCONWOP_S22WOP_LEN (1u)


#define IFX_FLASH_PROCONWOP_S22WOP_MSK (0x1u)


#define IFX_FLASH_PROCONWOP_S22WOP_OFF (22u)


#define IFX_FLASH_PROCONWOP_S23WOP_LEN (1u)


#define IFX_FLASH_PROCONWOP_S23WOP_MSK (0x1u)


#define IFX_FLASH_PROCONWOP_S23WOP_OFF (23u)


#define IFX_FLASH_PROCONWOP_S24WOP_LEN (1u)


#define IFX_FLASH_PROCONWOP_S24WOP_MSK (0x1u)


#define IFX_FLASH_PROCONWOP_S24WOP_OFF (24u)


#define IFX_FLASH_PROCONWOP_S25WOP_LEN (1u)


#define IFX_FLASH_PROCONWOP_S25WOP_MSK (0x1u)


#define IFX_FLASH_PROCONWOP_S25WOP_OFF (25u)


#define IFX_FLASH_PROCONWOP_S26WOP_LEN (1u)


#define IFX_FLASH_PROCONWOP_S26WOP_MSK (0x1u)


#define IFX_FLASH_PROCONWOP_S26WOP_OFF (26u)


#define IFX_FLASH_PROCONWOP_S2WOP_LEN (1u)


#define IFX_FLASH_PROCONWOP_S2WOP_MSK (0x1u)


#define IFX_FLASH_PROCONWOP_S2WOP_OFF (2u)


#define IFX_FLASH_PROCONWOP_S3WOP_LEN (1u)


#define IFX_FLASH_PROCONWOP_S3WOP_MSK (0x1u)


#define IFX_FLASH_PROCONWOP_S3WOP_OFF (3u)


#define IFX_FLASH_PROCONWOP_S4WOP_LEN (1u)


#define IFX_FLASH_PROCONWOP_S4WOP_MSK (0x1u)


#define IFX_FLASH_PROCONWOP_S4WOP_OFF (4u)


#define IFX_FLASH_PROCONWOP_S5WOP_LEN (1u)


#define IFX_FLASH_PROCONWOP_S5WOP_MSK (0x1u)


#define IFX_FLASH_PROCONWOP_S5WOP_OFF (5u)


#define IFX_FLASH_PROCONWOP_S6WOP_LEN (1u)


#define IFX_FLASH_PROCONWOP_S6WOP_MSK (0x1u)


#define IFX_FLASH_PROCONWOP_S6WOP_OFF (6u)


#define IFX_FLASH_PROCONWOP_S7WOP_LEN (1u)


#define IFX_FLASH_PROCONWOP_S7WOP_MSK (0x1u)


#define IFX_FLASH_PROCONWOP_S7WOP_OFF (7u)


#define IFX_FLASH_PROCONWOP_S8WOP_LEN (1u)


#define IFX_FLASH_PROCONWOP_S8WOP_MSK (0x1u)


#define IFX_FLASH_PROCONWOP_S8WOP_OFF (8u)


#define IFX_FLASH_PROCONWOP_S9WOP_LEN (1u)


#define IFX_FLASH_PROCONWOP_S9WOP_MSK (0x1u)


#define IFX_FLASH_PROCONWOP_S9WOP_OFF (9u)


#define IFX_FLASH_RDB_CFG0_TAG_LEN (6u)


#define IFX_FLASH_RDB_CFG0_TAG_MSK (0x3fu)


#define IFX_FLASH_RDB_CFG0_TAG_OFF (0u)


#define IFX_FLASH_RDB_CFG1_TAG_LEN (6u)


#define IFX_FLASH_RDB_CFG1_TAG_MSK (0x3fu)


#define IFX_FLASH_RDB_CFG1_TAG_OFF (0u)


#define IFX_FLASH_RDB_CFG2_TAG_LEN (6u)


#define IFX_FLASH_RDB_CFG2_TAG_MSK (0x3fu)


#define IFX_FLASH_RDB_CFG2_TAG_OFF (0u)


#define IFX_FLASH_RRAD_ADD_LEN (29u)


#define IFX_FLASH_RRAD_ADD_MSK (0x1fffffffu)


#define IFX_FLASH_RRAD_ADD_OFF (3u)


#define IFX_FLASH_RRCT_BUSY_LEN (1u)


#define IFX_FLASH_RRCT_BUSY_MSK (0x1u)


#define IFX_FLASH_RRCT_BUSY_OFF (2u)


#define IFX_FLASH_RRCT_CNT_LEN (16u)


#define IFX_FLASH_RRCT_CNT_MSK (0xffffu)


#define IFX_FLASH_RRCT_CNT_OFF (16u)


#define IFX_FLASH_RRCT_DONE_LEN (1u)


#define IFX_FLASH_RRCT_DONE_MSK (0x1u)


#define IFX_FLASH_RRCT_DONE_OFF (3u)


#define IFX_FLASH_RRCT_EOBM_LEN (1u)


#define IFX_FLASH_RRCT_EOBM_MSK (0x1u)


#define IFX_FLASH_RRCT_EOBM_OFF (8u)


#define IFX_FLASH_RRCT_ERR_LEN (1u)


#define IFX_FLASH_RRCT_ERR_MSK (0x1u)


#define IFX_FLASH_RRCT_ERR_OFF (4u)


#define IFX_FLASH_RRCT_STP_LEN (1u)


#define IFX_FLASH_RRCT_STP_MSK (0x1u)


#define IFX_FLASH_RRCT_STP_OFF (1u)


#define IFX_FLASH_RRCT_STRT_LEN (1u)


#define IFX_FLASH_RRCT_STRT_MSK (0x1u)


#define IFX_FLASH_RRCT_STRT_OFF (0u)


#define IFX_FLASH_RRD0_DATA_LEN (32u)


#define IFX_FLASH_RRD0_DATA_MSK (0xffffffffu)


#define IFX_FLASH_RRD0_DATA_OFF (0u)


#define IFX_FLASH_RRD1_DATA_LEN (32u)


#define IFX_FLASH_RRD1_DATA_MSK (0xffffffffu)


#define IFX_FLASH_RRD1_DATA_OFF (0u)


#define IFX_FLASH_UBAB_CFG_CLR_LEN (1u)


#define IFX_FLASH_UBAB_CFG_CLR_MSK (0x1u)


#define IFX_FLASH_UBAB_CFG_CLR_OFF (8u)


#define IFX_FLASH_UBAB_CFG_DIS_LEN (1u)


#define IFX_FLASH_UBAB_CFG_DIS_MSK (0x1u)


#define IFX_FLASH_UBAB_CFG_DIS_OFF (9u)


#define IFX_FLASH_UBAB_CFG_SEL_LEN (6u)


#define IFX_FLASH_UBAB_CFG_SEL_MSK (0x3fu)


#define IFX_FLASH_UBAB_CFG_SEL_OFF (0u)


#define IFX_FLASH_UBAB_STAT_VLD0_LEN (1u)


#define IFX_FLASH_UBAB_STAT_VLD0_MSK (0x1u)


#define IFX_FLASH_UBAB_STAT_VLD0_OFF (0u)


#define IFX_FLASH_UBAB_TOP_ADDR_LEN (19u)


#define IFX_FLASH_UBAB_TOP_ADDR_MSK (0x7ffffu)


#define IFX_FLASH_UBAB_TOP_ADDR_OFF (5u)


#define IFX_FLASH_UBAB_TOP_CLR_LEN (1u)


#define IFX_FLASH_UBAB_TOP_CLR_MSK (0x1u)


#define IFX_FLASH_UBAB_TOP_CLR_OFF (31u)


#define IFX_FLASH_UBAB_TOP_ERR_LEN (6u)


#define IFX_FLASH_UBAB_TOP_ERR_MSK (0x3fu)


#define IFX_FLASH_UBAB_TOP_ERR_OFF (24u)


#define IFX_FLASH_UBAB_TOP_VLD_LEN (1u)


#define IFX_FLASH_UBAB_TOP_VLD_MSK (0x1u)


#define IFX_FLASH_UBAB_TOP_VLD_OFF (30u)
# 55 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 2 3
# 69 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_VCO_BASE_FREQUENCY (100000000.0)
#define IFXSCU_EVR_OSC_FREQUENCY (100000000.0)




#define IFXSCU_PLL_FREERUNNING_FREQUENCY (100000000.0)
# 88 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_PLL_STEPS_16MHZ_80MHZ { (8 - 1), 0.000100, 0 },
# 98 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_PLL_STEPS_16MHZ_133MHZ { (7 - 1), 0.000100, 0 }, { (6 - 1), 0.000100, 0 },
# 113 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_PLL_STEPS_16MHZ_160MHZ { (5 - 1), 0.000100, 0 }, { (4 - 1), 0.000100, 0 }
# 128 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_PLL_STEPS_16MHZ_200MHZ { (6 - 1), 0.000100, 0 }, { (5 - 1), 0.000100, 0 }, { (4 - 1), 0.000100, 0 }
# 148 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_PLL_STEPS_16MHZ_240MHZ { (5 - 1), 0.000100, 0 }, { (4 - 1), 0.000100, 0 }, { (3 - 1), 0.000100, 0 }
# 169 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_PLL_STEPS_20MHZ_80MHZ { (8 - 1), 0.000100, 0 },
# 179 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_PLL_STEPS_20MHZ_133MHZ { (7 - 1), 0.000100, 0 }, { (6 - 1), 0.000100, 0 },
# 194 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_PLL_STEPS_20MHZ_160MHZ { (5 - 1), 0.000100, 0 }, { (4 - 1), 0.000100, 0 }
# 209 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_PLL_STEPS_20MHZ_200MHZ { (5 - 1), 0.000100, 0 }, { (4 - 1), 0.000100, 0 }, { (3 - 1), 0.000100, 0 }
# 229 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_PLL_STEPS_20MHZ_240MHZ { (5 - 1), 0.000100, 0 }, { (4 - 1), 0.000100, 0 }, { (3 - 1), 0.000100, 0 }
# 249 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_PLL_STEPS_20MHZ_300MHZ { (4 - 1), 0.000100, 0 }, { (3 - 1), 0.000100, 0 }, { (2 - 1), 0.000100, 0 }
# 270 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_PLL_STEPS_40MHZ_80MHZ { (8 - 1), 0.000100, 0 },
# 280 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_PLL_STEPS_40MHZ_133MHZ { (7 - 1), 0.000100, 0 }, { (6 - 1), 0.000100, 0 },
# 295 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_PLL_STEPS_40MHZ_160MHZ { (5 - 1), 0.000100, 0 }, { (4 - 1), 0.000100, 0 }
# 310 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_PLL_STEPS_40MHZ_200MHZ { (5 - 1), 0.000100, 0 }, { (4 - 1), 0.000100, 0 }, { (3 - 1), 0.000100, 0 }
# 330 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_PLL_STEPS_40MHZ_240MHZ { (5 - 1), 0.000100, 0 }, { (4 - 1), 0.000100, 0 }, { (3 - 1), 0.000100, 0 }
# 350 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_PLL_STEPS_40MHZ_300MHZ { (4 - 1), 0.000100, 0 }, { (3 - 1), 0.000100, 0 }, { (2 - 1), 0.000100, 0 }
# 371 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_PLL_STEPS_8MHZ_80MHZ { (5 - 1), 0.000100, 0 },
# 381 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_PLL_STEPS_8MHZ_160MHZ { (4 - 1), 0.000100, 0 }, { (3 - 1), 0.000100, 0 },
# 396 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_PLL_STEPS_8MHZ_200MHZ { (5 - 1), 0.000100, 0 }, { (4 - 1), 0.000100, 0 }, { (3 - 1), 0.000100, 0 },
# 424 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_PLL_INITIAL_STEP_16MHZ_80MHZ {(1 - 1), (40 - 1), (7 - 1), 0.000200F}






#define IFXSCU_CFG_PLL_INITIAL_STEP_16MHZ_133MHZ {(1 - 1), (50 - 1), (8 - 1), 0.000200F}






#define IFXSCU_CFG_PLL_INITIAL_STEP_16MHZ_160MHZ {(1 - 1), (40 - 1), (6 - 1), 0.000200F}






#define IFXSCU_CFG_PLL_INITIAL_STEP_16MHZ_200MHZ {(1 - 1), (50 - 1), (8 - 1), 0.000200F}






#define IFXSCU_CFG_PLL_INITIAL_STEP_16MHZ_240MHZ {(1 - 1), (45 - 1), (7 - 1), 0.000200F}
# 461 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_PLL_INITIAL_STEP_20MHZ_80MHZ {(2 - 1), (64 - 1), (7 - 1), 0.000200F}






#define IFXSCU_CFG_PLL_INITIAL_STEP_20MHZ_133MHZ {(2 - 1), (80 - 1), (8 - 1), 0.000200F}






#define IFXSCU_CFG_PLL_INITIAL_STEP_20MHZ_160MHZ {(2 - 1), (64 - 1), (6 - 1), 0.000200F}






#define IFXSCU_CFG_PLL_INITIAL_STEP_20MHZ_200MHZ {(2 - 1), (60 - 1), (6 - 1), 0.000200F}






#define IFXSCU_CFG_PLL_INITIAL_STEP_20MHZ_240MHZ {(2 - 1), (72 - 1), (7 - 1), 0.000200F}






#define IFXSCU_CFG_PLL_INITIAL_STEP_20MHZ_300MHZ {(2 - 1), (60 - 1), (6 - 1), 0.000200F}
# 505 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_PLL_INITIAL_STEP_40MHZ_80MHZ {(4 - 1), (64 - 1), (7 - 1), 0.000200F}






#define IFXSCU_CFG_PLL_INITIAL_STEP_40MHZ_133MHZ {(4 - 1), (80 - 1), (8 - 1), 0.000200F}






#define IFXSCU_CFG_PLL_INITIAL_STEP_40MHZ_160MHZ {(4 - 1), (64 - 1), (6 - 1), 0.000200F}






#define IFXSCU_CFG_PLL_INITIAL_STEP_40MHZ_200MHZ {(4 - 1), (60 - 1), (6 - 1), 0.000200F}






#define IFXSCU_CFG_PLL_INITIAL_STEP_40MHZ_240MHZ {(4 - 1), (72 - 1), (7 - 1), 0.000200F}






#define IFXSCU_CFG_PLL_INITIAL_STEP_40MHZ_300MHZ {(4 - 1), (60 - 1), (6 - 1), 0.000200F}
# 549 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_PLL_INITIAL_STEP_8MHZ_80MHZ {(1 - 1), (50 - 1), (5 - 1), 0.000200F}






#define IFXSCU_CFG_PLL_INITIAL_STEP_8MHZ_160MHZ {(1 - 1), (60 - 1), (5 - 1), 0.000200F}






#define IFXSCU_CFG_PLL_INITIAL_STEP_8MHZ_200MHZ {(1 - 1), (75 - 1), (6 - 1), 0.000200F}
# 578 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_MAXDIV_80MHZ (1)




#define IFXSCU_CFG_MAXDIV_133MHZ (1)




#define IFXSCU_CFG_MAXDIV_160MHZ (1)




#define IFXSCU_CFG_MAXDIV_200MHZ (1)




#define IFXSCU_CFG_MAXDIV_240MHZ (1)




#define IFXSCU_CFG_MAXDIV_300MHZ (1)




#define IFXSCU_CFG_SRIDIV_80MHZ (IFXSCU_CFG_MAXDIV_80MHZ)




#define IFXSCU_CFG_SRIDIV_133MHZ (IFXSCU_CFG_MAXDIV_133MHZ)




#define IFXSCU_CFG_SRIDIV_160MHZ (IFXSCU_CFG_MAXDIV_160MHZ)




#define IFXSCU_CFG_SRIDIV_200MHZ (IFXSCU_CFG_MAXDIV_200MHZ)




#define IFXSCU_CFG_SRIDIV_240MHZ (IFXSCU_CFG_MAXDIV_240MHZ)




#define IFXSCU_CFG_SRIDIV_300MHZ (IFXSCU_CFG_MAXDIV_300MHZ)




#define IFXSCU_CFG_BAUD1DIV_80MHZ (IFXSCU_CFG_MAXDIV_80MHZ)




#define IFXSCU_CFG_BAUD1DIV_133MHZ (IFXSCU_CFG_MAXDIV_133MHZ * 2)




#define IFXSCU_CFG_BAUD1DIV_160MHZ (IFXSCU_CFG_MAXDIV_160MHZ * 2)




#define IFXSCU_CFG_BAUD1DIV_200MHZ (IFXSCU_CFG_MAXDIV_200MHZ * 2)




#define IFXSCU_CFG_BAUD1DIV_240MHZ (IFXSCU_CFG_MAXDIV_240MHZ * 3)




#define IFXSCU_CFG_BAUD1DIV_300MHZ (IFXSCU_CFG_MAXDIV_300MHZ * 3)




#define IFXSCU_CFG_BAUD2DIV_80MHZ (IFXSCU_CFG_MAXDIV_80MHZ)




#define IFXSCU_CFG_BAUD2DIV_133MHZ (IFXSCU_CFG_MAXDIV_133MHZ)




#define IFXSCU_CFG_BAUD2DIV_160MHZ (IFXSCU_CFG_MAXDIV_160MHZ)




#define IFXSCU_CFG_BAUD2DIV_200MHZ (IFXSCU_CFG_MAXDIV_200MHZ)




#define IFXSCU_CFG_BAUD2DIV_240MHZ (IFXSCU_CFG_MAXDIV_240MHZ)




#define IFXSCU_CFG_BAUD2DIV_300MHZ (IFXSCU_CFG_MAXDIV_300MHZ)




#define IFXSCU_CFG_SPBDIV_80MHZ (IFXSCU_CFG_MAXDIV_80MHZ * 2)




#define IFXSCU_CFG_SPBDIV_133MHZ (IFXSCU_CFG_MAXDIV_133MHZ * 2)




#define IFXSCU_CFG_SPBDIV_160MHZ (IFXSCU_CFG_MAXDIV_160MHZ * 2)




#define IFXSCU_CFG_SPBDIV_200MHZ (IFXSCU_CFG_MAXDIV_200MHZ * 2)




#define IFXSCU_CFG_SPBDIV_240MHZ (IFXSCU_CFG_MAXDIV_240MHZ * 3)




#define IFXSCU_CFG_SPBDIV_300MHZ (IFXSCU_CFG_MAXDIV_300MHZ * 3)




#define IFXSCU_CFG_FSI2DIV_80MHZ (IFXSCU_CFG_MAXDIV_80MHZ)




#define IFXSCU_CFG_FSI2DIV_133MHZ (IFXSCU_CFG_MAXDIV_133MHZ)




#define IFXSCU_CFG_FSI2DIV_160MHZ (IFXSCU_CFG_MAXDIV_160MHZ)




#define IFXSCU_CFG_FSI2DIV_200MHZ (IFXSCU_CFG_MAXDIV_200MHZ)




#define IFXSCU_CFG_FSI2DIV_240MHZ (IFXSCU_CFG_MAXDIV_240MHZ)




#define IFXSCU_CFG_FSI2DIV_300MHZ (IFXSCU_CFG_MAXDIV_300MHZ)




#define IFXSCU_CFG_FSIDIV_80MHZ (IFXSCU_CFG_MAXDIV_80MHZ)




#define IFXSCU_CFG_FSIDIV_133MHZ (IFXSCU_CFG_MAXDIV_133MHZ * 2)




#define IFXSCU_CFG_FSIDIV_160MHZ (IFXSCU_CFG_MAXDIV_160MHZ * 2)




#define IFXSCU_CFG_FSIDIV_200MHZ (IFXSCU_CFG_MAXDIV_200MHZ * 2)




#define IFXSCU_CFG_FSIDIV_240MHZ (IFXSCU_CFG_MAXDIV_240MHZ * 3)




#define IFXSCU_CFG_FSIDIV_300MHZ (IFXSCU_CFG_MAXDIV_300MHZ * 3)




#define IFXSCU_CFG_CANDIV_80MHZ (IFXSCU_CFG_MAXDIV_80MHZ)




#define IFXSCU_CFG_CANDIV_133MHZ (IFXSCU_CFG_MAXDIV_133MHZ * 2)




#define IFXSCU_CFG_CANDIV_160MHZ (IFXSCU_CFG_MAXDIV_160MHZ * 2)




#define IFXSCU_CFG_CANDIV_200MHZ (IFXSCU_CFG_MAXDIV_200MHZ * 2)




#define IFXSCU_CFG_CANDIV_240MHZ (IFXSCU_CFG_MAXDIV_240MHZ * 3)




#define IFXSCU_CFG_CANDIV_300MHZ (IFXSCU_CFG_MAXDIV_300MHZ * 3)




#define IFXSCU_CFG_ERAYDIV_80MHZ (IFXSCU_CFG_MAXDIV_80MHZ)




#define IFXSCU_CFG_ERAYDIV_133MHZ (IFXSCU_CFG_MAXDIV_133MHZ * 2)




#define IFXSCU_CFG_ERAYDIV_160MHZ (IFXSCU_CFG_MAXDIV_160MHZ * 2)




#define IFXSCU_CFG_ERAYDIV_200MHZ (IFXSCU_CFG_MAXDIV_200MHZ * 3)




#define IFXSCU_CFG_ERAYDIV_240MHZ (IFXSCU_CFG_MAXDIV_240MHZ * 3)




#define IFXSCU_CFG_ERAYDIV_300MHZ (IFXSCU_CFG_MAXDIV_300MHZ * 4)




#define IFXSCU_CFG_STMDIV_80MHZ (IFXSCU_CFG_MAXDIV_80MHZ)




#define IFXSCU_CFG_STMDIV_133MHZ (IFXSCU_CFG_MAXDIV_133MHZ * 2)




#define IFXSCU_CFG_STMDIV_160MHZ (IFXSCU_CFG_MAXDIV_160MHZ * 2)




#define IFXSCU_CFG_STMDIV_200MHZ (IFXSCU_CFG_MAXDIV_200MHZ * 2)




#define IFXSCU_CFG_STMDIV_240MHZ (IFXSCU_CFG_MAXDIV_240MHZ * 3)




#define IFXSCU_CFG_STMDIV_300MHZ (IFXSCU_CFG_MAXDIV_300MHZ * 3)




#define IFXSCU_CFG_GTMDIV_80MHZ (IFXSCU_CFG_MAXDIV_80MHZ)




#define IFXSCU_CFG_GTMDIV_133MHZ (IFXSCU_CFG_MAXDIV_133MHZ * 2)




#define IFXSCU_CFG_GTMDIV_160MHZ (IFXSCU_CFG_MAXDIV_160MHZ * 2)




#define IFXSCU_CFG_GTMDIV_200MHZ (IFXSCU_CFG_MAXDIV_200MHZ * 2)




#define IFXSCU_CFG_GTMDIV_240MHZ (IFXSCU_CFG_MAXDIV_240MHZ * 3)




#define IFXSCU_CFG_GTMDIV_300MHZ (IFXSCU_CFG_MAXDIV_300MHZ * 3)




#define IFXSCU_CFG_ETHDIV_80MHZ (IFXSCU_CFG_MAXDIV_80MHZ * 2)




#define IFXSCU_CFG_ETHDIV_133MHZ (IFXSCU_CFG_MAXDIV_133MHZ * 3)




#define IFXSCU_CFG_ETHDIV_160MHZ (IFXSCU_CFG_MAXDIV_160MHZ * 4)




#define IFXSCU_CFG_ETHDIV_200MHZ (IFXSCU_CFG_MAXDIV_200MHZ * 4)




#define IFXSCU_CFG_ETHDIV_240MHZ (IFXSCU_CFG_MAXDIV_240MHZ * 5)




#define IFXSCU_CFG_ETHDIV_300MHZ (IFXSCU_CFG_MAXDIV_300MHZ * 6)




#define IFXSCU_CFG_ASCLINFDIV_80MHZ (IFXSCU_CFG_MAXDIV_80MHZ)




#define IFXSCU_CFG_ASCLINFDIV_133MHZ (IFXSCU_CFG_MAXDIV_133MHZ)




#define IFXSCU_CFG_ASCLINFDIV_160MHZ (IFXSCU_CFG_MAXDIV_160MHZ)




#define IFXSCU_CFG_ASCLINFDIV_200MHZ (IFXSCU_CFG_MAXDIV_200MHZ)




#define IFXSCU_CFG_ASCLINFDIV_240MHZ (IFXSCU_CFG_MAXDIV_240MHZ)




#define IFXSCU_CFG_ASCLINFDIV_300MHZ (IFXSCU_CFG_MAXDIV_300MHZ)




#define IFXSCU_CFG_ASCLINSDIV_80MHZ (IFXSCU_CFG_MAXDIV_80MHZ)




#define IFXSCU_CFG_ASCLINSDIV_133MHZ (IFXSCU_CFG_MAXDIV_133MHZ * 2)




#define IFXSCU_CFG_ASCLINSDIV_160MHZ (IFXSCU_CFG_MAXDIV_160MHZ * 2)




#define IFXSCU_CFG_ASCLINSDIV_200MHZ (IFXSCU_CFG_MAXDIV_200MHZ * 2)




#define IFXSCU_CFG_ASCLINSDIV_240MHZ (IFXSCU_CFG_MAXDIV_240MHZ * 3)




#define IFXSCU_CFG_ASCLINSDIV_300MHZ (IFXSCU_CFG_MAXDIV_300MHZ * 3)




#define IFXSCU_CFG_BBBDIV_80MHZ (IFXSCU_CFG_SRIDIV_80MHZ * 2)




#define IFXSCU_CFG_BBBDIV_133MHZ (IFXSCU_CFG_SRIDIV_133MHZ * 2)




#define IFXSCU_CFG_BBBDIV_160MHZ (IFXSCU_CFG_SRIDIV_160MHZ * 2)




#define IFXSCU_CFG_BBBDIV_200MHZ (IFXSCU_CFG_SRIDIV_200MHZ * 2)




#define IFXSCU_CFG_BBBDIV_240MHZ (IFXSCU_CFG_SRIDIV_240MHZ * 2)




#define IFXSCU_CFG_BBBDIV_300MHZ (IFXSCU_CFG_SRIDIV_300MHZ * 2)




#define IFXSCU_CFG_CPU0DIV_80MHZ (0)




#define IFXSCU_CFG_CPU0DIV_133MHZ (0)




#define IFXSCU_CFG_CPU0DIV_160MHZ (0)




#define IFXSCU_CFG_CPU0DIV_200MHZ (0)




#define IFXSCU_CFG_CPU0DIV_240MHZ (0)




#define IFXSCU_CFG_CPU0DIV_300MHZ (0)




#define IFXSCU_CFG_CPU1DIV_80MHZ (0)




#define IFXSCU_CFG_CPU1DIV_133MHZ (0)




#define IFXSCU_CFG_CPU1DIV_160MHZ (0)




#define IFXSCU_CFG_CPU1DIV_200MHZ (0)




#define IFXSCU_CFG_CPU1DIV_240MHZ (0)




#define IFXSCU_CFG_CPU1DIV_300MHZ (0)




#define IFXSCU_CFG_CPU2DIV_80MHZ (0)




#define IFXSCU_CFG_CPU2DIV_133MHZ (0)




#define IFXSCU_CFG_CPU2DIV_160MHZ (0)




#define IFXSCU_CFG_CPU2DIV_200MHZ (0)




#define IFXSCU_CFG_CPU2DIV_240MHZ (0)




#define IFXSCU_CFG_CPU2DIV_300MHZ (0)
# 1122 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_FLASH_FCON_WSPFLASH_80MHZ (3 - 1)




#define IFXSCU_CFG_FLASH_FCON_WSPFLASH_133MHZ (4 - 1)




#define IFXSCU_CFG_FLASH_FCON_WSPFLASH_160MHZ (5 - 1)




#define IFXSCU_CFG_FLASH_FCON_WSPFLASH_200MHZ (6 - 1)




#define IFXSCU_CFG_FLASH_FCON_WSPFLASH_240MHZ (8 - 1)




#define IFXSCU_CFG_FLASH_FCON_WSPFLASH_300MHZ (9 - 1)




#define IFXSCU_CFG_FLASH_FCON_WSECPF_80MHZ (1 - 1)




#define IFXSCU_CFG_FLASH_FCON_WSECPF_133MHZ (2 - 1)




#define IFXSCU_CFG_FLASH_FCON_WSECPF_160MHZ (2 - 1)




#define IFXSCU_CFG_FLASH_FCON_WSECPF_200MHZ (2 - 1)




#define IFXSCU_CFG_FLASH_FCON_WSECPF_240MHZ (3 - 1)




#define IFXSCU_CFG_FLASH_FCON_WSECPF_300MHZ (3 - 1)




#define IFXSCU_CFG_FLASH_FCON_WSDFLASH_80MHZ (8 - 1)




#define IFXSCU_CFG_FLASH_FCON_WSDFLASH_133MHZ (7 - 1)




#define IFXSCU_CFG_FLASH_FCON_WSDFLASH_160MHZ (8 - 1)




#define IFXSCU_CFG_FLASH_FCON_WSDFLASH_200MHZ (10 - 1)




#define IFXSCU_CFG_FLASH_FCON_WSDFLASH_240MHZ (8 - 1)




#define IFXSCU_CFG_FLASH_FCON_WSDFLASH_300MHZ (10 - 1)




#define IFXSCU_CFG_FLASH_FCON_WSECDF_80MHZ (2 - 1)




#define IFXSCU_CFG_FLASH_FCON_WSECDF_133MHZ (2 - 1)




#define IFXSCU_CFG_FLASH_FCON_WSECDF_160MHZ (2 - 1)




#define IFXSCU_CFG_FLASH_FCON_WSECDF_200MHZ (2 - 1)




#define IFXSCU_CFG_FLASH_FCON_WSECDF_240MHZ (2 - 1)




#define IFXSCU_CFG_FLASH_FCON_WSECDF_300MHZ (2 - 1)



#define IFXSCU_CFG_FLASH_WAITSTATE_MSK ( (IFX_FLASH_FCON_WSPFLASH_MSK << IFX_FLASH_FCON_WSPFLASH_OFF) | (IFX_FLASH_FCON_WSECPF_MSK << IFX_FLASH_FCON_WSECPF_OFF) | (IFX_FLASH_FCON_WSDFLASH_MSK << IFX_FLASH_FCON_WSDFLASH_OFF) | (IFX_FLASH_FCON_WSECDF_MSK << IFX_FLASH_FCON_WSECDF_OFF))






#define IFXSCU_CFG_FLASH_WAITSTATE_VAL_BASIC_(pllFreq) ( (IFXSCU_CFG_FLASH_FCON_WSPFLASH_ ##pllFreq << IFX_FLASH_FCON_WSPFLASH_OFF) | (IFXSCU_CFG_FLASH_FCON_WSECPF_ ##pllFreq << IFX_FLASH_FCON_WSECPF_OFF) | (IFXSCU_CFG_FLASH_FCON_WSDFLASH_ ##pllFreq << IFX_FLASH_FCON_WSDFLASH_OFF) | (IFXSCU_CFG_FLASH_FCON_WSECDF_ ##pllFreq << IFX_FLASH_FCON_WSECDF_OFF))






#define IFXSCU_CFG_FLASH_WAITSTATE_VAL_BASIC(pllFreq) IFXSCU_CFG_FLASH_WAITSTATE_VAL_BASIC_(pllFreq)

#define IFXSCU_CFG_FLASH_WAITSTATE_VAL IFXSCU_CFG_FLASH_WAITSTATE_VAL_BASIC(IFXSCU_CFG_PLL_FREQ)


#define IFXSCU_CFG_CCUCON0_MASK ( (IFX_SCU_CCUCON0_BAUD1DIV_MSK << IFX_SCU_CCUCON0_BAUD1DIV_OFF) | (IFX_SCU_CCUCON0_BAUD2DIV_MSK << IFX_SCU_CCUCON0_BAUD2DIV_OFF) | (IFX_SCU_CCUCON0_SRIDIV_MSK << IFX_SCU_CCUCON0_SRIDIV_OFF) | (IFX_SCU_CCUCON0_SPBDIV_MSK << IFX_SCU_CCUCON0_SPBDIV_OFF) | (IFX_SCU_CCUCON0_FSI2DIV_MSK << IFX_SCU_CCUCON0_FSI2DIV_OFF) | (IFX_SCU_CCUCON0_FSIDIV_MSK << IFX_SCU_CCUCON0_FSIDIV_OFF))
# 1269 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_CCUCON0_BASIC_(pllFreq) (uint32)( (IFXSCU_CFG_BAUD1DIV_ ##pllFreq << IFX_SCU_CCUCON0_BAUD1DIV_OFF) | (IFXSCU_CFG_BAUD2DIV_ ##pllFreq << IFX_SCU_CCUCON0_BAUD2DIV_OFF) | (IFXSCU_CFG_SRIDIV_ ##pllFreq << IFX_SCU_CCUCON0_SRIDIV_OFF) | (IFXSCU_CFG_SPBDIV_ ##pllFreq << IFX_SCU_CCUCON0_SPBDIV_OFF) | (IFXSCU_CFG_FSI2DIV_ ##pllFreq << IFX_SCU_CCUCON0_FSI2DIV_OFF) | (IFXSCU_CFG_FSIDIV_ ##pllFreq << IFX_SCU_CCUCON0_FSIDIV_OFF))
# 1278 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_CCUCON0_BASIC(pllFreq) IFXSCU_CFG_CCUCON0_BASIC_(pllFreq)

#define IFXSCU_CFG_CCUCON0 IFXSCU_CFG_CCUCON0_BASIC(IFXSCU_CFG_PLL_FREQ)


#define IFXSCU_CFG_CCUCON1_MASK ( (IFX_SCU_CCUCON1_CANDIV_MSK << IFX_SCU_CCUCON1_CANDIV_OFF) | (IFX_SCU_CCUCON1_ERAYDIV_MSK << IFX_SCU_CCUCON1_ERAYDIV_OFF) | (IFX_SCU_CCUCON1_STMDIV_MSK << IFX_SCU_CCUCON1_STMDIV_OFF) | (IFX_SCU_CCUCON1_GTMDIV_MSK << IFX_SCU_CCUCON1_GTMDIV_OFF) | (IFX_SCU_CCUCON1_ETHDIV_MSK << IFX_SCU_CCUCON1_ETHDIV_OFF) | (IFX_SCU_CCUCON1_ASCLINFDIV_MSK << IFX_SCU_CCUCON1_ASCLINFDIV_OFF) | (IFX_SCU_CCUCON1_ASCLINSDIV_MSK << IFX_SCU_CCUCON1_ASCLINSDIV_OFF))
# 1293 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_CCUCON1_BASIC_(pllFreq) (uint32)( (IFXSCU_CFG_CANDIV_ ##pllFreq << IFX_SCU_CCUCON1_CANDIV_OFF) | (IFXSCU_CFG_ERAYDIV_80MHZ << IFX_SCU_CCUCON1_ERAYDIV_OFF) | (IFXSCU_CFG_STMDIV_ ##pllFreq << IFX_SCU_CCUCON1_STMDIV_OFF) | (IFXSCU_CFG_GTMDIV_ ##pllFreq << IFX_SCU_CCUCON1_GTMDIV_OFF) | (IFXSCU_CFG_ETHDIV_ ##pllFreq << IFX_SCU_CCUCON1_ETHDIV_OFF) | (IFXSCU_CFG_ASCLINFDIV_ ##pllFreq << IFX_SCU_CCUCON1_ASCLINFDIV_OFF) | (IFXSCU_CFG_ASCLINSDIV_ ##pllFreq << IFX_SCU_CCUCON1_ASCLINSDIV_OFF))
# 1303 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_CCUCON1_BASIC(pllFreq) IFXSCU_CFG_CCUCON1_BASIC_(pllFreq)

#define IFXSCU_CFG_CCUCON1 IFXSCU_CFG_CCUCON1_BASIC(IFXSCU_CFG_PLL_FREQ)


#define IFXSCU_CFG_CCUCON2_MASK ( (IFX_SCU_CCUCON2_BBBDIV_MSK << IFX_SCU_CCUCON2_BBBDIV_OFF))



#define IFXSCU_CFG_CCUCON2_BASIC_(pllFreq) (uint32)( (IFXSCU_CFG_BBBDIV_ ##pllFreq << IFX_SCU_CCUCON2_BBBDIV_OFF))



#define IFXSCU_CFG_CCUCON2_BASIC(pllFreq) IFXSCU_CFG_CCUCON2_BASIC_(pllFreq)

#define IFXSCU_CFG_CCUCON2 IFXSCU_CFG_CCUCON2_BASIC(IFXSCU_CFG_PLL_FREQ)


#define IFXSCU_CFG_CCUCON5_MASK ( (IFX_SCU_CCUCON5_MAXDIV_MSK << IFX_SCU_CCUCON5_MAXDIV_OFF))



#define IFXSCU_CFG_CCUCON5_BASIC_(pllFreq) (uint32)( (IFXSCU_CFG_MAXDIV_ ##pllFreq << IFX_SCU_CCUCON5_MAXDIV_OFF))



#define IFXSCU_CFG_CCUCON5_BASIC(pllFreq) IFXSCU_CFG_CCUCON5_BASIC_(pllFreq)

#define IFXSCU_CFG_CCUCON5 IFXSCU_CFG_CCUCON5_BASIC(IFXSCU_CFG_PLL_FREQ)


#define IFXSCU_CFG_CCUCON6_MASK ( (IFX_SCU_CCUCON6_CPU0DIV_MSK << IFX_SCU_CCUCON6_CPU0DIV_OFF))



#define IFXSCU_CFG_CCUCON6_BASIC_(pllFreq) (uint32)( (IFXSCU_CFG_CPU0DIV_ ##pllFreq << IFX_SCU_CCUCON6_CPU0DIV_OFF))



#define IFXSCU_CFG_CCUCON6_BASIC(pllFreq) IFXSCU_CFG_CCUCON6_BASIC_(pllFreq)

#define IFXSCU_CFG_CCUCON6 IFXSCU_CFG_CCUCON6_BASIC(IFXSCU_CFG_PLL_FREQ)


#define IFXSCU_CFG_CCUCON7_MASK ( (IFX_SCU_CCUCON7_CPU1DIV_MSK << IFX_SCU_CCUCON7_CPU1DIV_OFF))



#define IFXSCU_CFG_CCUCON7_BASIC_(pllFreq) (uint32)( (IFXSCU_CFG_CPU1DIV_ ##pllFreq << IFX_SCU_CCUCON7_CPU1DIV_OFF))



#define IFXSCU_CFG_CCUCON7_BASIC(pllFreq) IFXSCU_CFG_CCUCON7_BASIC_(pllFreq)

#define IFXSCU_CFG_CCUCON7 IFXSCU_CFG_CCUCON7_BASIC(IFXSCU_CFG_PLL_FREQ)


#define IFXSCU_CFG_CCUCON8_MASK ( (IFX_SCU_CCUCON8_CPU2DIV_MSK << IFX_SCU_CCUCON8_CPU2DIV_OFF))



#define IFXSCU_CFG_CCUCON8_BASIC_(pllFreq) (uint32)( (IFXSCU_CFG_CPU2DIV_ ##pllFreq << IFX_SCU_CCUCON8_CPU2DIV_OFF))



#define IFXSCU_CFG_CCUCON8_BASIC(pllFreq) IFXSCU_CFG_CCUCON8_BASIC_(pllFreq)

#define IFXSCU_CFG_CCUCON8 IFXSCU_CFG_CCUCON8_BASIC(IFXSCU_CFG_PLL_FREQ)

#define IFXSCU_CFG_CLK_DISTRIBUTION { {IFXSCU_CFG_CCUCON0, IFXSCU_CFG_CCUCON0_MASK}, {IFXSCU_CFG_CCUCON1, IFXSCU_CFG_CCUCON1_MASK}, {IFXSCU_CFG_CCUCON2, IFXSCU_CFG_CCUCON2_MASK}, {IFXSCU_CFG_CCUCON5, IFXSCU_CFG_CCUCON5_MASK}, {IFXSCU_CFG_CCUCON6, IFXSCU_CFG_CCUCON6_MASK}, {IFXSCU_CFG_CCUCON7, IFXSCU_CFG_CCUCON7_MASK}, {IFXSCU_CFG_CCUCON8, IFXSCU_CFG_CCUCON8_MASK} }
# 1386 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_PLL_STEPS_BASIC_(xtalFreq,pllFreq) IFXSCU_CFG_PLL_STEPS_ ##xtalFreq ##_ ##pllFreq
#define IFXSCU_CFG_PLL_STEPS_BASIC(xtalFreq,pllFreq) IFXSCU_CFG_PLL_STEPS_BASIC_(xtalFreq, pllFreq)
#define IFXSCU_CFG_PLL_STEPS IFXSCU_CFG_PLL_STEPS_BASIC(IFXSCU_CFG_XTAL_FREQ, IFXSCU_CFG_PLL_FREQ)


#define IFXSCU_CFG_PLL_INITIAL_STEP_BASIC_(xtalFreq,pllFreq) IFXSCU_CFG_PLL_INITIAL_STEP_ ##xtalFreq ##_ ##pllFreq
#define IFXSCU_CFG_PLL_INITIAL_STEP_BASIC(xtalFreq,pllFreq) IFXSCU_CFG_PLL_INITIAL_STEP_BASIC_(xtalFreq, pllFreq)
#define IFXSCU_CFG_PLL_INITIAL_STEP IFXSCU_CFG_PLL_INITIAL_STEP_BASIC(IFXSCU_CFG_XTAL_FREQ, IFXSCU_CFG_PLL_FREQ)

#define IFXSCU_CFG_FLASH_WAITSTATE {IFXSCU_CFG_FLASH_WAITSTATE_VAL, IFXSCU_CFG_FLASH_WAITSTATE_MSK}




#define IFXSCU_CFG_XTAL_FREQ 20MHZ
# 1419 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
#define IFXSCU_CFG_PLL_FREQ 200MHZ
# 1429 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_cfg.h" 3
typedef enum
{
    IfxScu_CCUCON0_CLKSEL_fBack = 0,
    IfxScu_CCUCON0_CLKSEL_fPll = 1
} IfxScu_CCUCON0_CLKSEL;


typedef enum
{
    IfxScu_CCUCON1_INSEL_fOsc1 = 0,
    IfxScu_CCUCON1_INSEL_fOsc0 = 1
} IfxScu_CCUCON1_INSEL;


typedef enum
{
    IfxScu_WDTCON1_IR_divBy16384 = 0,
    IfxScu_WDTCON1_IR_divBy256 = 1,
    IfxScu_WDTCON1_IR_divBy64 = 2
} IfxScu_WDTCON1_IR;

typedef enum
{
    IfxScu_PMCSR_REQSLP_Run = 0U,
    IfxScu_PMCSR_REQSLP_Idle = 1U,
    IfxScu_PMCSR_REQSLP_Sleep = 2U,
    IfxScu_PMCSR_REQSLP_Stby = 3U
} IfxScu_PMCSR_REQSLP;
# 66 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 2 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_types.h" 1 3
# 43 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_types.h" 3
#define IFX_TYPES_H 1


# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\compilers.h" 1 3
# 42 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\compilers.h" 3
#define COMPILERS_H 1



# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_cfg.h" 1 3
# 47 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\compilers.h" 2 3



#define IFX_STATIC static



#define IFX_CONST const


#define CONST_CFG const





#define IFX_EXTERN extern






#define NULL_PTR ((void *)0)




#define CFG_LONG_SIZE_T (0)
# 85 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\compilers.h" 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\CompilerGnuc.h" 1 3
# 42 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\CompilerGnuc.h" 3
#define COMPILERGNUC_H 1



# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\lib\\gcc\\tricore\\4.9.4\\include\\stddef.h" 1 3 4
# 39 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\lib\\gcc\\tricore\\4.9.4\\include\\stddef.h" 3 4
#define _STDDEF_H 
#define _STDDEF_H_ 

#define _ANSI_STDDEF_H 
# 136 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\lib\\gcc\\tricore\\4.9.4\\include\\stddef.h" 3 4
#define _PTRDIFF_T 
#define _T_PTRDIFF_ 
#define _T_PTRDIFF 
#define __PTRDIFF_T 
#define _PTRDIFF_T_ 
#define _BSD_PTRDIFF_T_ 
#define ___int_ptrdiff_t_h 
#define _GCC_PTRDIFF_T 



typedef long int ptrdiff_t;
# 158 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\lib\\gcc\\tricore\\4.9.4\\include\\stddef.h" 3 4
#undef __need_ptrdiff_t
# 184 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\lib\\gcc\\tricore\\4.9.4\\include\\stddef.h" 3 4
#define __size_t__ 
#define __SIZE_T__ 
#define _SIZE_T 
#define _SYS_SIZE_T_H 
#define _T_SIZE_ 
#define _T_SIZE 
#define __SIZE_T 
#define _SIZE_T_ 
#define _BSD_SIZE_T_ 
#define _SIZE_T_DEFINED_ 
#define _SIZE_T_DEFINED 
#define _BSD_SIZE_T_DEFINED_ 
#define _SIZE_T_DECLARED 
#define ___int_size_t_h 
#define _GCC_SIZE_T 
#define _SIZET_ 






#define __size_t 





typedef long unsigned int size_t;
# 234 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\lib\\gcc\\tricore\\4.9.4\\include\\stddef.h" 3 4
#undef __need_size_t
# 263 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\lib\\gcc\\tricore\\4.9.4\\include\\stddef.h" 3 4
#define __wchar_t__ 
#define __WCHAR_T__ 
#define _WCHAR_T 
#define _T_WCHAR_ 
#define _T_WCHAR 
#define __WCHAR_T 
#define _WCHAR_T_ 
#define _BSD_WCHAR_T_ 
#define _WCHAR_T_DEFINED_ 
#define _WCHAR_T_DEFINED 
#define _WCHAR_T_H 
#define ___int_wchar_t_h 
#define __INT_WCHAR_T_H 
#define _GCC_WCHAR_T 
#define _WCHAR_T_DECLARED 
# 290 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\lib\\gcc\\tricore\\4.9.4\\include\\stddef.h" 3 4
#undef _BSD_WCHAR_T_
# 324 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\lib\\gcc\\tricore\\4.9.4\\include\\stddef.h" 3 4
typedef int wchar_t;
# 343 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\lib\\gcc\\tricore\\4.9.4\\include\\stddef.h" 3 4
#undef __need_wchar_t
# 397 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\lib\\gcc\\tricore\\4.9.4\\include\\stddef.h" 3 4
#undef NULL




#define NULL ((void *)0)





#undef __need_NULL




#define offsetof(TYPE,MEMBER) __builtin_offsetof (TYPE, MEMBER)
# 47 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\CompilerGnuc.h" 2 3







#define IFXCOMPILER_COMMON_LINKER_SYMBOLS() extern unsigned int __A0_MEM[]; extern unsigned int __A1_MEM[]; extern unsigned int __A8_MEM[]; extern unsigned int __A9_MEM[];
# 65 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\CompilerGnuc.h" 3
#define IFXCOMPILER_CORE_LINKER_SYMBOLS(cpu) extern unsigned int __USTACK ##cpu[]; extern unsigned int __ISTACK ##cpu[]; extern unsigned int __INTTAB_CPU ##cpu[]; extern unsigned int __TRAPTAB_CPU ##cpu[]; extern unsigned int __CSA ##cpu[]; extern unsigned int __CSA ##cpu ##_END[];







#define __USTACK(cpu) __USTACK ##cpu
#define __ISTACK(cpu) __ISTACK ##cpu
#define __INTTAB_CPU(cpu) __INTTAB_CPU ##cpu
#define __TRAPTAB_CPU(cpu) __TRAPTAB_CPU ##cpu
#define __CSA(cpu) __CSA ##cpu
#define __CSA_END(cpu) __CSA ##cpu ##_END





#define __INTTAB(cpu) __INTTAB_CPU ##cpu


#define __TRAPTAB(cpu) __TRAPTAB_CPU ##cpu

#define __SDATA1(cpu) __A0_MEM
#define __SDATA2(cpu) __A1_MEM
#define __SDATA3(cpu) __A8_MEM
#define __SDATA4(cpu) __A9_MEM





#define IFX_INLINE static inline __attribute__ ((always_inline))


#define IFX_PACKED __attribute__ ((packed))

#define COMPILER_NAME "GNUC"
#define COMPILER_VERSION __VERSION__

#define COMPILER_REVISION 0

#define IFX_INTERRUPT_FAST IFX_INTERRUPT
# 119 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\CompilerGnuc.h" 3
#define IFX_INTERRUPT(isr,vectabNum,prio) IFX_INTERRUPT_INTERNAL(isr, vectabNum, prio)




#define IFX_INTERRUPT_INTERNAL(isr,vectabNum,prio) __asm__ (".ifndef .intr.entry.include                        \n" ".altmacro                                           \n" ".macro .int_entry.2 intEntryLabel, name # define the section and inttab entry code \n" "	.pushsection .\\intEntryLabel,\"ax\",@progbits   \n" "	__\\intEntryLabel :                              \n" "		svlcx                                        \n" "		movh.a  %a14, hi:\\name                      \n" "		lea     %a14, [%a14]lo:\\name                \n" "		ji      %a14                                 \n" "	.popsection                                      \n" ".endm                                               \n" ".macro .int_entry.1 prio,vectabNum,u,name           \n" ".int_entry.2 intvec_tc\\vectabNum\\u\\prio,(name) # build the unique name \n" ".endm                                               \n" "                                                    \n" ".macro .intr.entry name,vectabNum,prio              \n" ".int_entry.1 %(prio),%(vectabNum),_,name # evaluate the priority and the cpu number \n" ".endm                                               \n" ".intr.entry.include:                                \n" ".endif                                              \n" ".intr.entry "#isr","#vectabNum","#prio );IFX_EXTERN void __attribute__ ((interrupt_handler)) isr(); void isr (void)
# 154 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\CompilerGnuc.h" 3
#define IFX_ALIGN(n) __attribute__ ((aligned(n)))




#define IFX_FAR_ABS __attribute__((fardata))



#define IFX_NEAR_ABS 



#define IFX_REL_A0 



#define IFX_REL_A1 



#define IFX_REL_A8 



#define IFX_REL_A9 
# 86 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\compilers.h" 2 3
# 123 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\compilers.h" 3
#define BEGIN_DATA_SECTION(sec) DATA_SECTION(section #sec aw 4)
#define DATA_SECTION(sec) _Pragma(#sec)
#define END_DATA_SECTION DATA_SECTION(section)
# 144 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\compilers.h" 3
void Ifx_C_Init(void);
# 47 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_types.h" 2 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\Platform_Types.h" 1 3
# 42 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\Platform_Types.h" 3
#define PLATFORM_TYPES_H 
# 51 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\Platform_Types.h" 3
#define PLATFORM_VENDOR_ID (17u)
#define PLATFORM_AR_RELEASE_MAJOR_VERSION (4u)
#define PLATFORM_AR_RELEASE_MINOR_VERSION (2u)
#define PLATFORM_AR_RELEASE_REVISION_VERSION (2u)
#define PLATFORM_SW_MAJOR_VERSION (1u)
#define PLATFORM_SW_MINOR_VERSION (0u)
#define PLATFORM_SW_PATCH_VERSION (0u)



#define CPU_TYPE_8 (8u)
#define CPU_TYPE_16 (16u)
#define CPU_TYPE_32 (32u)

#define CPU_TYPE CPU_TYPE_32





#define MSB_FIRST (0u)
#define LSB_FIRST (1u)

#define CPU_BIT_ORDER LSB_FIRST





#define HIGH_BYTE_FIRST (0u)
#define LOW_BYTE_FIRST (1u)

#define CPU_BYTE_ORDER LOW_BYTE_FIRST






#define TRUE (1u)


#define FALSE (0u)






typedef signed char int8_t;
typedef unsigned char uint8_t;
typedef signed short int16_t;
typedef unsigned short uint16_t;
typedef signed long int32_t;
typedef unsigned long uint32_t;
typedef float float32_t;
typedef double float64_t;



typedef unsigned char boolean;



typedef unsigned char uint8;



typedef unsigned short uint16;



typedef unsigned long uint32;




typedef unsigned long long uint64;



typedef signed char sint8;



typedef short sint16;




typedef long sint32;






typedef long long sint64;



typedef unsigned long uint8_least;



typedef unsigned long uint16_least;



typedef unsigned long uint32_least;



typedef signed long sint8_least;



typedef signed long sint16_least;



typedef signed long sint32_least;




typedef float float32;




typedef double float64;
# 48 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_types.h" 2 3





typedef const char *pchar;
typedef void *pvoid;
typedef volatile void *vvoid;
typedef void (*voidfuncvoid) (void);

typedef struct
{
    float32 real;
    float32 imag;
} cfloat32;

typedef struct
{
    sint32 real;
    sint32 imag;
} csint32;

typedef struct
{
    sint16 real;
    sint16 imag;
} csint16;

typedef sint64 Ifx_TickTime;
#define TIME_INFINITE ((Ifx_TickTime)0x7FFFFFFFFFFFFFFFLL)
#define TIME_NULL ((Ifx_TickTime)0x0000000000000000LL)

#define IFX_ONES (0xFFFFFFFFFFFFFFFFU)
#define IFX_ZEROS (0x0000000000000000U)






#define IFX_SIZET_MAX (0x7FFF)
typedef sint16 Ifx_SizeT;



typedef struct
{
    void *base;
    uint16 index;
    uint16 length;
} Ifx_CircularBuffer;

typedef uint16 Ifx_Priority;
typedef uint32 Ifx_TimerValue;
typedef sint32 Ifx_SignedTimerVal;

typedef pvoid Ifx_AddressValue;

typedef struct
{
    uint16 priority;
    uint16 provider;
} Ifx_IsrSetting;


typedef enum
{
    Ifx_ActiveState_low = 0,
    Ifx_ActiveState_high = 1
} Ifx_ActiveState;

typedef enum
{
    Ifx_ParityMode_even = 0,
    Ifx_ParityMode_odd = 1
} Ifx_ParityMode;



typedef enum
{
    Ifx_RxSel_a,
    Ifx_RxSel_b,
    Ifx_RxSel_c,
    Ifx_RxSel_d,
    Ifx_RxSel_e,
    Ifx_RxSel_f,
    Ifx_RxSel_g,
    Ifx_RxSel_h
} Ifx_RxSel;


typedef struct
{
    volatile void *module;
    sint32 index;
} IfxModule_IndexMap;

typedef struct
{
    Ifx_TickTime timestamp;
    uint8 data;
}Ifx_DataBufferMode_TimeStampSingle;
# 161 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_types.h" 3
typedef enum
{
    Ifx_DataBufferMode_normal = 0,
    Ifx_DataBufferMode_timeStampSingle,

}Ifx_DataBufferMode;
# 175 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_types.h" 3
typedef enum
{
    Ifx_Pwm_Mode_centerAligned = 0,
    Ifx_Pwm_Mode_centerAlignedInverted = 1,
    Ifx_Pwm_Mode_leftAligned = 2,
    Ifx_Pwm_Mode_rightAligned = 3,
    Ifx_Pwm_Mode_off = 4,
    Ifx_Pwm_Mode_init = 5,
    Ifx_Pwm_Mode_count
} Ifx_Pwm_Mode;
# 193 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_types.h" 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\Ifx_TypesGnuc.h" 1 3
# 40 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\Ifx_TypesGnuc.h" 3
#define IFX_TYPESGNUC_H_ 

#define FRACT_MAX 0x7fffffff

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\machine\\cint.h" 1 3
# 9 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\machine\\cint.h" 3
#define __cint_h 





#define MAX_TRAPS 8
#define MAX_INTRS 256







extern void _init_vectab (void);
extern void _init_hnd_chain (void);






extern int _install_int_handler (int intno, void (*handler) (int), int arg);







extern void *_install_chained_int_handler (int intno, void (*handler) (int),
        int arg);





extern int _remove_chained_int_handler (int intno, void *ptr);





extern int _install_trap_handler (int trapno, void (*handler) (int));



#define TrapInit _init_vectab
#define cintsetup _init_vectab
#define cinthandler _install_int_handler
#define ccintsetup _init_hnd_chain
#define ccinthandler _install_chained_int_handler
#define freechain_hnd _remove_chained_int_handler
#define ctraphandler _install_trap_handler
# 45 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\Ifx_TypesGnuc.h" 2 3
#define __interrupt(intno) 

typedef long fract;
typedef short sfract;
typedef long long laccum;
typedef long __packb;
typedef unsigned long __upackb;
typedef long __packhw;
typedef unsigned long __upackhw;
# 194 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_types.h" 2 3
# 208 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_types.h" 3
typedef struct
{
    fract real;
    fract imag;
} cfract;

typedef struct
{
    sfract real;
    sfract imag;
} csfract;

#define IFX_PI (3.1415926535897932384626433832795f)
#define IFX_TWO_OVER_PI (2.0 / IFX_PI)
#define IFX_ONE_OVER_TWO_PI (1.0f / (2.0f * IFX_PI))
#define IFX_ONE_OVER_SQRT_THREE (0.57735026918962576450914878050196f)
#define IFX_SQRT_TWO (1.4142135623730950488016887242097f)
#define IFX_SQRT_THREE (1.7320508075688772935274463415059f)
#define IFX_UNUSED_PARAMETER(x) if(x){}
# 67 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 2 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxScu_reg.h" 1 3
# 34 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxScu_reg.h" 3
#define IFXSCU_REG_H 1

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxScu_regdef.h" 1 3
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxScu_regdef.h" 3
#define IFXSCU_REGDEF_H 1

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\Ifx_TypesReg.h" 1 3
# 27 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\Ifx_TypesReg.h" 3
#define IFX_TYPESREG_H 1







#define Ifx_Strict_16Bit volatile unsigned short
#define Ifx_Strict_32Bit volatile unsigned int
# 48 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\Ifx_TypesReg.h" 3
#define Ifx_VADC_RES Ifx_VADC_G_RES
#define Ifx_VADC_RESD Ifx_VADC_G_RESD
#define Ifx_VADC_CHCTR Ifx_VADC_G_CHCTR
#define Ifx_VADC_RCR Ifx_VADC_G_RCR
# 40 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxScu_regdef.h" 2 3





typedef struct _Ifx_SCU_ACCEN0_Bits
{
    unsigned int EN0:1;
    unsigned int EN1:1;
    unsigned int EN2:1;
    unsigned int EN3:1;
    unsigned int EN4:1;
    unsigned int EN5:1;
    unsigned int EN6:1;
    unsigned int EN7:1;
    unsigned int EN8:1;
    unsigned int EN9:1;
    unsigned int EN10:1;
    unsigned int EN11:1;
    unsigned int EN12:1;
    unsigned int EN13:1;
    unsigned int EN14:1;
    unsigned int EN15:1;
    unsigned int EN16:1;
    unsigned int EN17:1;
    unsigned int EN18:1;
    unsigned int EN19:1;
    unsigned int EN20:1;
    unsigned int EN21:1;
    unsigned int EN22:1;
    unsigned int EN23:1;
    unsigned int EN24:1;
    unsigned int EN25:1;
    unsigned int EN26:1;
    unsigned int EN27:1;
    unsigned int EN28:1;
    unsigned int EN29:1;
    unsigned int EN30:1;
    unsigned int EN31:1;
} Ifx_SCU_ACCEN0_Bits;


typedef struct _Ifx_SCU_ACCEN1_Bits
{
    unsigned int reserved_0:32;
} Ifx_SCU_ACCEN1_Bits;


typedef struct _Ifx_SCU_ARSTDIS_Bits
{
    unsigned int STM0DIS:1;
    unsigned int STM1DIS:1;
    unsigned int STM2DIS:1;
    unsigned int reserved_3:29;
} Ifx_SCU_ARSTDIS_Bits;


typedef struct _Ifx_SCU_CCUCON0_Bits
{
    unsigned int BAUD1DIV:4;
    unsigned int BAUD2DIV:4;
    unsigned int SRIDIV:4;
    unsigned int LPDIV:4;
    unsigned int SPBDIV:4;
    unsigned int FSI2DIV:2;
    unsigned int reserved_22:2;
    unsigned int FSIDIV:2;
    unsigned int reserved_26:2;
    unsigned int CLKSEL:2;
    unsigned int UP:1;
    unsigned int LCK:1;
} Ifx_SCU_CCUCON0_Bits;


typedef struct _Ifx_SCU_CCUCON1_Bits
{
    unsigned int CANDIV:4;
    unsigned int ERAYDIV:4;
    unsigned int STMDIV:4;
    unsigned int GTMDIV:4;
    unsigned int ETHDIV:4;
    unsigned int ASCLINFDIV:4;
    unsigned int ASCLINSDIV:4;
    unsigned int INSEL:2;
    unsigned int UP:1;
    unsigned int LCK:1;
} Ifx_SCU_CCUCON1_Bits;


typedef struct _Ifx_SCU_CCUCON2_Bits
{
    unsigned int BBBDIV:4;
    unsigned int reserved_4:26;
    unsigned int UP:1;
    unsigned int LCK:1;
} Ifx_SCU_CCUCON2_Bits;


typedef struct _Ifx_SCU_CCUCON3_Bits
{
    unsigned int PLLDIV:6;
    unsigned int PLLSEL:2;
    unsigned int PLLERAYDIV:6;
    unsigned int PLLERAYSEL:2;
    unsigned int SRIDIV:6;
    unsigned int SRISEL:2;
    unsigned int reserved_24:5;
    unsigned int SLCK:1;
    unsigned int UP:1;
    unsigned int LCK:1;
} Ifx_SCU_CCUCON3_Bits;


typedef struct _Ifx_SCU_CCUCON4_Bits
{
    unsigned int SPBDIV:6;
    unsigned int SPBSEL:2;
    unsigned int GTMDIV:6;
    unsigned int GTMSEL:2;
    unsigned int STMDIV:6;
    unsigned int STMSEL:2;
    unsigned int reserved_24:5;
    unsigned int SLCK:1;
    unsigned int UP:1;
    unsigned int LCK:1;
} Ifx_SCU_CCUCON4_Bits;


typedef struct _Ifx_SCU_CCUCON5_Bits
{
    unsigned int MAXDIV:4;
    unsigned int reserved_4:26;
    unsigned int UP:1;
    unsigned int LCK:1;
} Ifx_SCU_CCUCON5_Bits;


typedef struct _Ifx_SCU_CCUCON6_Bits
{
    unsigned int CPU0DIV:6;
    unsigned int reserved_6:26;
} Ifx_SCU_CCUCON6_Bits;


typedef struct _Ifx_SCU_CCUCON7_Bits
{
    unsigned int CPU1DIV:6;
    unsigned int reserved_6:26;
} Ifx_SCU_CCUCON7_Bits;


typedef struct _Ifx_SCU_CCUCON8_Bits
{
    unsigned int CPU2DIV:6;
    unsigned int reserved_6:26;
} Ifx_SCU_CCUCON8_Bits;


typedef struct _Ifx_SCU_CHIPID_Bits
{
    unsigned int CHREV:6;
    unsigned int CHTEC:2;
    unsigned int CHID:8;
    unsigned int EEA:1;
    unsigned int UCODE:7;
    unsigned int FSIZE:4;
    unsigned int SP:2;
    unsigned int SEC:1;
    unsigned int reserved_31:1;
} Ifx_SCU_CHIPID_Bits;


typedef struct _Ifx_SCU_DTSCON_Bits
{
    unsigned int PWD:1;
    unsigned int START:1;
    unsigned int reserved_2:2;
    unsigned int CAL:22;
    unsigned int reserved_26:5;
    unsigned int SLCK:1;
} Ifx_SCU_DTSCON_Bits;


typedef struct _Ifx_SCU_DTSLIM_Bits
{
    unsigned int LOWER:10;
    unsigned int reserved_10:5;
    unsigned int LLU:1;
    unsigned int UPPER:10;
    unsigned int reserved_26:4;
    unsigned int SLCK:1;
    unsigned int UOF:1;
} Ifx_SCU_DTSLIM_Bits;


typedef struct _Ifx_SCU_DTSSTAT_Bits
{
    unsigned int RESULT:10;
    unsigned int reserved_10:4;
    unsigned int RDY:1;
    unsigned int BUSY:1;
    unsigned int reserved_16:16;
} Ifx_SCU_DTSSTAT_Bits;


typedef struct _Ifx_SCU_EICR_Bits
{
    unsigned int reserved_0:4;
    unsigned int EXIS0:3;
    unsigned int reserved_7:1;
    unsigned int FEN0:1;
    unsigned int REN0:1;
    unsigned int LDEN0:1;
    unsigned int EIEN0:1;
    unsigned int INP0:3;
    unsigned int reserved_15:5;
    unsigned int EXIS1:3;
    unsigned int reserved_23:1;
    unsigned int FEN1:1;
    unsigned int REN1:1;
    unsigned int LDEN1:1;
    unsigned int EIEN1:1;
    unsigned int INP1:3;
    unsigned int reserved_31:1;
} Ifx_SCU_EICR_Bits;


typedef struct _Ifx_SCU_EIFR_Bits
{
    unsigned int INTF0:1;
    unsigned int INTF1:1;
    unsigned int INTF2:1;
    unsigned int INTF3:1;
    unsigned int INTF4:1;
    unsigned int INTF5:1;
    unsigned int INTF6:1;
    unsigned int INTF7:1;
    unsigned int reserved_8:24;
} Ifx_SCU_EIFR_Bits;


typedef struct _Ifx_SCU_EMSR_Bits
{
    unsigned int POL:1;
    unsigned int MODE:1;
    unsigned int ENON:1;
    unsigned int PSEL:1;
    unsigned int reserved_4:12;
    unsigned int EMSF:1;
    unsigned int SEMSF:1;
    unsigned int reserved_18:6;
    unsigned int EMSFM:2;
    unsigned int SEMSFM:2;
    unsigned int reserved_28:4;
} Ifx_SCU_EMSR_Bits;


typedef struct _Ifx_SCU_ESRCFG_Bits
{
    unsigned int reserved_0:7;
    unsigned int EDCON:2;
    unsigned int reserved_9:23;
} Ifx_SCU_ESRCFG_Bits;


typedef struct _Ifx_SCU_ESROCFG_Bits
{
    unsigned int ARI:1;
    unsigned int ARC:1;
    unsigned int reserved_2:30;
} Ifx_SCU_ESROCFG_Bits;


typedef struct _Ifx_SCU_EVR13CON_Bits
{
    unsigned int reserved_0:28;
    unsigned int EVR13OFF:1;
    unsigned int BPEVR13OFF:1;
    unsigned int reserved_30:1;
    unsigned int LCK:1;
} Ifx_SCU_EVR13CON_Bits;


typedef struct _Ifx_SCU_EVR33CON_Bits
{
    unsigned int reserved_0:28;
    unsigned int EVR33OFF:1;
    unsigned int BPEVR33OFF:1;
    unsigned int reserved_30:1;
    unsigned int LCK:1;
} Ifx_SCU_EVR33CON_Bits;


typedef struct _Ifx_SCU_EVRADCSTAT_Bits
{
    unsigned int ADC13V:8;
    unsigned int ADC33V:8;
    unsigned int ADCSWDV:8;
    unsigned int reserved_24:7;
    unsigned int VAL:1;
} Ifx_SCU_EVRADCSTAT_Bits;


typedef struct _Ifx_SCU_EVRDVSTAT_Bits
{
    unsigned int DVS13TRIM:8;
    unsigned int reserved_8:8;
    unsigned int DVS33TRIM:8;
    unsigned int reserved_24:7;
    unsigned int VAL:1;
} Ifx_SCU_EVRDVSTAT_Bits;


typedef struct _Ifx_SCU_EVRMONCTRL_Bits
{
    unsigned int EVR13OVMOD:2;
    unsigned int reserved_2:2;
    unsigned int EVR13UVMOD:2;
    unsigned int reserved_6:2;
    unsigned int EVR33OVMOD:2;
    unsigned int reserved_10:2;
    unsigned int EVR33UVMOD:2;
    unsigned int reserved_14:2;
    unsigned int SWDOVMOD:2;
    unsigned int reserved_18:2;
    unsigned int SWDUVMOD:2;
    unsigned int reserved_22:8;
    unsigned int SLCK:1;
    unsigned int reserved_31:1;
} Ifx_SCU_EVRMONCTRL_Bits;


typedef struct _Ifx_SCU_EVROVMON_Bits
{
    unsigned int EVR13OVVAL:8;
    unsigned int EVR33OVVAL:8;
    unsigned int SWDOVVAL:8;
    unsigned int reserved_24:6;
    unsigned int SLCK:1;
    unsigned int LCK:1;
} Ifx_SCU_EVROVMON_Bits;


typedef struct _Ifx_SCU_EVRRSTCON_Bits
{
    unsigned int RST13TRIM:8;
    unsigned int reserved_8:16;
    unsigned int RST13OFF:1;
    unsigned int BPRST13OFF:1;
    unsigned int RST33OFF:1;
    unsigned int BPRST33OFF:1;
    unsigned int RSTSWDOFF:1;
    unsigned int BPRSTSWDOFF:1;
    unsigned int SLCK:1;
    unsigned int LCK:1;
} Ifx_SCU_EVRRSTCON_Bits;


typedef struct _Ifx_SCU_EVRSDCOEFF1_Bits
{
    unsigned int SD5P:8;
    unsigned int SD5I:8;
    unsigned int SD5D:8;
    unsigned int reserved_24:7;
    unsigned int LCK:1;
} Ifx_SCU_EVRSDCOEFF1_Bits;


typedef struct _Ifx_SCU_EVRSDCOEFF2_Bits
{
    unsigned int SD33P:8;
    unsigned int SD33I:8;
    unsigned int SD33D:8;
    unsigned int reserved_24:7;
    unsigned int LCK:1;
} Ifx_SCU_EVRSDCOEFF2_Bits;


typedef struct _Ifx_SCU_EVRSDCOEFF3_Bits
{
    unsigned int CT5REG0:8;
    unsigned int CT5REG1:8;
    unsigned int CT5REG2:8;
    unsigned int reserved_24:7;
    unsigned int LCK:1;
} Ifx_SCU_EVRSDCOEFF3_Bits;


typedef struct _Ifx_SCU_EVRSDCOEFF4_Bits
{
    unsigned int CT5REG3:8;
    unsigned int CT5REG4:8;
    unsigned int reserved_16:15;
    unsigned int LCK:1;
} Ifx_SCU_EVRSDCOEFF4_Bits;


typedef struct _Ifx_SCU_EVRSDCOEFF5_Bits
{
    unsigned int CT33REG0:8;
    unsigned int CT33REG1:8;
    unsigned int CT33REG2:8;
    unsigned int reserved_24:7;
    unsigned int LCK:1;
} Ifx_SCU_EVRSDCOEFF5_Bits;


typedef struct _Ifx_SCU_EVRSDCOEFF6_Bits
{
    unsigned int CT33REG3:8;
    unsigned int CT33REG4:8;
    unsigned int reserved_16:15;
    unsigned int LCK:1;
} Ifx_SCU_EVRSDCOEFF6_Bits;


typedef struct _Ifx_SCU_EVRSDCTRL1_Bits
{
    unsigned int SDFREQSPRD:16;
    unsigned int SDFREQ:8;
    unsigned int SDSTEP:4;
    unsigned int reserved_28:2;
    unsigned int SDSAMPLE:1;
    unsigned int LCK:1;
} Ifx_SCU_EVRSDCTRL1_Bits;


typedef struct _Ifx_SCU_EVRSDCTRL2_Bits
{
    unsigned int DRVP:8;
    unsigned int SDMINMAXDC:8;
    unsigned int DRVN:8;
    unsigned int SDLUT:6;
    unsigned int reserved_30:1;
    unsigned int LCK:1;
} Ifx_SCU_EVRSDCTRL2_Bits;


typedef struct _Ifx_SCU_EVRSDCTRL3_Bits
{
    unsigned int SDPWMPRE:8;
    unsigned int SDPID:8;
    unsigned int SDVOKLVL:8;
    unsigned int reserved_24:7;
    unsigned int LCK:1;
} Ifx_SCU_EVRSDCTRL3_Bits;


typedef struct _Ifx_SCU_EVRSDCTRL4_Bits
{
    unsigned int reserved_0:8;
    unsigned int SYNCDIV:3;
    unsigned int reserved_11:20;
    unsigned int LCK:1;
} Ifx_SCU_EVRSDCTRL4_Bits;


typedef struct _Ifx_SCU_EVRSTAT_Bits
{
    unsigned int EVR13:1;
    unsigned int OV13:1;
    unsigned int EVR33:1;
    unsigned int OV33:1;
    unsigned int OVSWD:1;
    unsigned int UV13:1;
    unsigned int UV33:1;
    unsigned int UVSWD:1;
    unsigned int EXTPASS13:1;
    unsigned int EXTPASS33:1;
    unsigned int BGPROK:1;
    unsigned int reserved_11:21;
} Ifx_SCU_EVRSTAT_Bits;


typedef struct _Ifx_SCU_EVRTRIM_Bits
{
    unsigned int EVR13TRIM:8;
    unsigned int SDVOUTSEL:8;
    unsigned int reserved_16:14;
    unsigned int SLCK:1;
    unsigned int LCK:1;
} Ifx_SCU_EVRTRIM_Bits;


typedef struct _Ifx_SCU_EVRUVMON_Bits
{
    unsigned int EVR13UVVAL:8;
    unsigned int EVR33UVVAL:8;
    unsigned int SWDUVVAL:8;
    unsigned int reserved_24:6;
    unsigned int SLCK:1;
    unsigned int LCK:1;
} Ifx_SCU_EVRUVMON_Bits;


typedef struct _Ifx_SCU_EXTCON_Bits
{
    unsigned int EN0:1;
    unsigned int reserved_1:1;
    unsigned int SEL0:4;
    unsigned int reserved_6:10;
    unsigned int EN1:1;
    unsigned int NSEL:1;
    unsigned int SEL1:4;
    unsigned int reserved_22:2;
    unsigned int DIV1:8;
} Ifx_SCU_EXTCON_Bits;


typedef struct _Ifx_SCU_FDR_Bits
{
    unsigned int STEP:10;
    unsigned int reserved_10:4;
    unsigned int DM:2;
    unsigned int RESULT:10;
    unsigned int reserved_26:5;
    unsigned int DISCLK:1;
} Ifx_SCU_FDR_Bits;


typedef struct _Ifx_SCU_FMR_Bits
{
    unsigned int FS0:1;
    unsigned int FS1:1;
    unsigned int FS2:1;
    unsigned int FS3:1;
    unsigned int FS4:1;
    unsigned int FS5:1;
    unsigned int FS6:1;
    unsigned int FS7:1;
    unsigned int reserved_8:8;
    unsigned int FC0:1;
    unsigned int FC1:1;
    unsigned int FC2:1;
    unsigned int FC3:1;
    unsigned int FC4:1;
    unsigned int FC5:1;
    unsigned int FC6:1;
    unsigned int FC7:1;
    unsigned int reserved_24:8;
} Ifx_SCU_FMR_Bits;


typedef struct _Ifx_SCU_ID_Bits
{
    unsigned int MODREV:8;
    unsigned int MODTYPE:8;
    unsigned int MODNUMBER:16;
} Ifx_SCU_ID_Bits;


typedef struct _Ifx_SCU_IGCR_Bits
{
    unsigned int IPEN00:1;
    unsigned int IPEN01:1;
    unsigned int IPEN02:1;
    unsigned int IPEN03:1;
    unsigned int IPEN04:1;
    unsigned int IPEN05:1;
    unsigned int IPEN06:1;
    unsigned int IPEN07:1;
    unsigned int reserved_8:5;
    unsigned int GEEN0:1;
    unsigned int IGP0:2;
    unsigned int IPEN10:1;
    unsigned int IPEN11:1;
    unsigned int IPEN12:1;
    unsigned int IPEN13:1;
    unsigned int IPEN14:1;
    unsigned int IPEN15:1;
    unsigned int IPEN16:1;
    unsigned int IPEN17:1;
    unsigned int reserved_24:5;
    unsigned int GEEN1:1;
    unsigned int IGP1:2;
} Ifx_SCU_IGCR_Bits;


typedef struct _Ifx_SCU_IN_Bits
{
    unsigned int P0:1;
    unsigned int P1:1;
    unsigned int reserved_2:30;
} Ifx_SCU_IN_Bits;


typedef struct _Ifx_SCU_IOCR_Bits
{
    unsigned int reserved_0:4;
    unsigned int PC0:4;
    unsigned int reserved_8:4;
    unsigned int PC1:4;
    unsigned int reserved_16:16;
} Ifx_SCU_IOCR_Bits;


typedef struct _Ifx_SCU_LBISTCTRL0_Bits
{
    unsigned int LBISTREQ:1;
    unsigned int LBISTREQP:1;
    unsigned int PATTERNS:14;
    unsigned int reserved_16:16;
} Ifx_SCU_LBISTCTRL0_Bits;


typedef struct _Ifx_SCU_LBISTCTRL1_Bits
{
    unsigned int SEED:23;
    unsigned int reserved_23:1;
    unsigned int SPLITSH:3;
    unsigned int BODY:1;
    unsigned int LBISTFREQU:4;
} Ifx_SCU_LBISTCTRL1_Bits;


typedef struct _Ifx_SCU_LBISTCTRL2_Bits
{
    unsigned int SIGNATURE:24;
    unsigned int reserved_24:7;
    unsigned int LBISTDONE:1;
} Ifx_SCU_LBISTCTRL2_Bits;


typedef struct _Ifx_SCU_LCLCON_Bits
{
    unsigned int reserved_0:16;
    unsigned int LS:1;
    unsigned int reserved_17:14;
    unsigned int LSEN:1;
} Ifx_SCU_LCLCON_Bits;


typedef struct _Ifx_SCU_LCLTEST_Bits
{
    unsigned int LCLT0:1;
    unsigned int LCLT1:1;
    unsigned int reserved_2:30;
} Ifx_SCU_LCLTEST_Bits;


typedef struct _Ifx_SCU_MANID_Bits
{
    unsigned int DEPT:5;
    unsigned int MANUF:11;
    unsigned int reserved_16:16;
} Ifx_SCU_MANID_Bits;


typedef struct _Ifx_SCU_OMR_Bits
{
    unsigned int PS0:1;
    unsigned int PS1:1;
    unsigned int reserved_2:14;
    unsigned int PCL0:1;
    unsigned int PCL1:1;
    unsigned int reserved_18:14;
} Ifx_SCU_OMR_Bits;


typedef struct _Ifx_SCU_OSCCON_Bits
{
    unsigned int reserved_0:1;
    unsigned int PLLLV:1;
    unsigned int OSCRES:1;
    unsigned int GAINSEL:2;
    unsigned int MODE:2;
    unsigned int SHBY:1;
    unsigned int PLLHV:1;
    unsigned int reserved_9:1;
    unsigned int X1D:1;
    unsigned int X1DEN:1;
    unsigned int reserved_12:4;
    unsigned int OSCVAL:5;
    unsigned int reserved_21:2;
    unsigned int APREN:1;
    unsigned int CAP0EN:1;
    unsigned int CAP1EN:1;
    unsigned int CAP2EN:1;
    unsigned int CAP3EN:1;
    unsigned int reserved_28:4;
} Ifx_SCU_OSCCON_Bits;


typedef struct _Ifx_SCU_OUT_Bits
{
    unsigned int P0:1;
    unsigned int P1:1;
    unsigned int reserved_2:30;
} Ifx_SCU_OUT_Bits;


typedef struct _Ifx_SCU_OVCCON_Bits
{
    unsigned int CSEL0:1;
    unsigned int CSEL1:1;
    unsigned int CSEL2:1;
    unsigned int reserved_3:13;
    unsigned int OVSTRT:1;
    unsigned int OVSTP:1;
    unsigned int DCINVAL:1;
    unsigned int reserved_19:5;
    unsigned int OVCONF:1;
    unsigned int POVCONF:1;
    unsigned int reserved_26:6;
} Ifx_SCU_OVCCON_Bits;


typedef struct _Ifx_SCU_OVCENABLE_Bits
{
    unsigned int OVEN0:1;
    unsigned int OVEN1:1;
    unsigned int OVEN2:1;
    unsigned int reserved_3:29;
} Ifx_SCU_OVCENABLE_Bits;


typedef struct _Ifx_SCU_PDISC_Bits
{
    unsigned int PDIS0:1;
    unsigned int PDIS1:1;
    unsigned int reserved_2:30;
} Ifx_SCU_PDISC_Bits;


typedef struct _Ifx_SCU_PDR_Bits
{
    unsigned int PD0:3;
    unsigned int PL0:1;
    unsigned int PD1:3;
    unsigned int PL1:1;
    unsigned int reserved_8:24;
} Ifx_SCU_PDR_Bits;


typedef struct _Ifx_SCU_PDRR_Bits
{
    unsigned int PDR0:1;
    unsigned int PDR1:1;
    unsigned int PDR2:1;
    unsigned int PDR3:1;
    unsigned int PDR4:1;
    unsigned int PDR5:1;
    unsigned int PDR6:1;
    unsigned int PDR7:1;
    unsigned int reserved_8:24;
} Ifx_SCU_PDRR_Bits;


typedef struct _Ifx_SCU_PLLCON0_Bits
{
    unsigned int VCOBYP:1;
    unsigned int VCOPWD:1;
    unsigned int MODEN:1;
    unsigned int reserved_3:1;
    unsigned int SETFINDIS:1;
    unsigned int CLRFINDIS:1;
    unsigned int OSCDISCDIS:1;
    unsigned int reserved_7:2;
    unsigned int NDIV:7;
    unsigned int PLLPWD:1;
    unsigned int reserved_17:1;
    unsigned int RESLD:1;
    unsigned int reserved_19:5;
    unsigned int PDIV:4;
    unsigned int reserved_28:4;
} Ifx_SCU_PLLCON0_Bits;


typedef struct _Ifx_SCU_PLLCON1_Bits
{
    unsigned int K2DIV:7;
    unsigned int reserved_7:1;
    unsigned int K3DIV:7;
    unsigned int reserved_15:1;
    unsigned int K1DIV:7;
    unsigned int reserved_23:9;
} Ifx_SCU_PLLCON1_Bits;


typedef struct _Ifx_SCU_PLLCON2_Bits
{
    unsigned int MODCFG:16;
    unsigned int reserved_16:16;
} Ifx_SCU_PLLCON2_Bits;


typedef struct _Ifx_SCU_PLLERAYCON0_Bits
{
    unsigned int VCOBYP:1;
    unsigned int VCOPWD:1;
    unsigned int reserved_2:2;
    unsigned int SETFINDIS:1;
    unsigned int CLRFINDIS:1;
    unsigned int OSCDISCDIS:1;
    unsigned int reserved_7:2;
    unsigned int NDIV:5;
    unsigned int reserved_14:2;
    unsigned int PLLPWD:1;
    unsigned int reserved_17:1;
    unsigned int RESLD:1;
    unsigned int reserved_19:5;
    unsigned int PDIV:4;
    unsigned int reserved_28:4;
} Ifx_SCU_PLLERAYCON0_Bits;


typedef struct _Ifx_SCU_PLLERAYCON1_Bits
{
    unsigned int K2DIV:7;
    unsigned int reserved_7:1;
    unsigned int K3DIV:4;
    unsigned int reserved_12:4;
    unsigned int K1DIV:7;
    unsigned int reserved_23:9;
} Ifx_SCU_PLLERAYCON1_Bits;


typedef struct _Ifx_SCU_PLLERAYSTAT_Bits
{
    unsigned int VCOBYST:1;
    unsigned int PWDSTAT:1;
    unsigned int VCOLOCK:1;
    unsigned int FINDIS:1;
    unsigned int K1RDY:1;
    unsigned int K2RDY:1;
    unsigned int reserved_6:26;
} Ifx_SCU_PLLERAYSTAT_Bits;


typedef struct _Ifx_SCU_PLLSTAT_Bits
{
    unsigned int VCOBYST:1;
    unsigned int reserved_1:1;
    unsigned int VCOLOCK:1;
    unsigned int FINDIS:1;
    unsigned int K1RDY:1;
    unsigned int K2RDY:1;
    unsigned int reserved_6:1;
    unsigned int MODRUN:1;
    unsigned int reserved_8:24;
} Ifx_SCU_PLLSTAT_Bits;


typedef struct _Ifx_SCU_PMCSR_Bits
{
    unsigned int REQSLP:2;
    unsigned int SMUSLP:1;
    unsigned int reserved_3:5;
    unsigned int PMST:3;
    unsigned int reserved_11:21;
} Ifx_SCU_PMCSR_Bits;


typedef struct _Ifx_SCU_PMSWCR0_Bits
{
    unsigned int reserved_0:1;
    unsigned int ESR1WKEN:1;
    unsigned int PINAWKEN:1;
    unsigned int PINBWKEN:1;
    unsigned int ESR0DFEN:1;
    unsigned int ESR0EDCON:2;
    unsigned int ESR1DFEN:1;
    unsigned int ESR1EDCON:2;
    unsigned int PINADFEN:1;
    unsigned int PINAEDCON:2;
    unsigned int PINBDFEN:1;
    unsigned int PINBEDCON:2;
    unsigned int reserved_16:1;
    unsigned int STBYRAMSEL:2;
    unsigned int reserved_19:2;
    unsigned int TRISTEN:1;
    unsigned int TRISTREQ:1;
    unsigned int PORSTDF:1;
    unsigned int PWRWKEN:1;
    unsigned int DCDCSYNC:1;
    unsigned int BLNKFIL:3;
    unsigned int ESR0TRIST:1;
    unsigned int reserved_30:1;
    unsigned int LCK:1;
} Ifx_SCU_PMSWCR0_Bits;


typedef struct _Ifx_SCU_PMSWCR1_Bits
{
    unsigned int reserved_0:8;
    unsigned int CPUIDLSEL:3;
    unsigned int reserved_11:1;
    unsigned int IRADIS:1;
    unsigned int reserved_13:11;
    unsigned int CPUSEL:3;
    unsigned int STBYEVEN:1;
    unsigned int STBYEV:3;
    unsigned int reserved_31:1;
} Ifx_SCU_PMSWCR1_Bits;


typedef struct _Ifx_SCU_PMSWSTAT_Bits
{
    unsigned int reserved_0:2;
    unsigned int ESR1WKP:1;
    unsigned int ESR1OVRUN:1;
    unsigned int PINAWKP:1;
    unsigned int PINAOVRUN:1;
    unsigned int PINBWKP:1;
    unsigned int PINBOVRUN:1;
    unsigned int PWRWKP:1;
    unsigned int PORSTDF:1;
    unsigned int HWCFGEVR:3;
    unsigned int STBYRAM:2;
    unsigned int TRIST:1;
    unsigned int reserved_16:4;
    unsigned int ESR1WKEN:1;
    unsigned int PINAWKEN:1;
    unsigned int PINBWKEN:1;
    unsigned int PWRWKEN:1;
    unsigned int BLNKFIL:3;
    unsigned int ESR0TRIST:1;
    unsigned int reserved_28:4;
} Ifx_SCU_PMSWSTAT_Bits;


typedef struct _Ifx_SCU_PMSWSTATCLR_Bits
{
    unsigned int reserved_0:2;
    unsigned int ESR1WKPCLR:1;
    unsigned int ESR1OVRUNCLR:1;
    unsigned int PINAWKPCLR:1;
    unsigned int PINAOVRUNCLR:1;
    unsigned int PINBWKPCLR:1;
    unsigned int PINBOVRUNCLR:1;
    unsigned int PWRWKPCLR:1;
    unsigned int reserved_9:23;
} Ifx_SCU_PMSWSTATCLR_Bits;


typedef struct _Ifx_SCU_RSTCON2_Bits
{
    unsigned int reserved_0:1;
    unsigned int CLRC:1;
    unsigned int reserved_2:10;
    unsigned int CSS0:1;
    unsigned int CSS1:1;
    unsigned int CSS2:1;
    unsigned int reserved_15:1;
    unsigned int USRINFO:16;
} Ifx_SCU_RSTCON2_Bits;


typedef struct _Ifx_SCU_RSTCON_Bits
{
    unsigned int ESR0:2;
    unsigned int ESR1:2;
    unsigned int reserved_4:2;
    unsigned int SMU:2;
    unsigned int SW:2;
    unsigned int STM0:2;
    unsigned int STM1:2;
    unsigned int STM2:2;
    unsigned int reserved_16:16;
} Ifx_SCU_RSTCON_Bits;


typedef struct _Ifx_SCU_RSTSTAT_Bits
{
    unsigned int ESR0:1;
    unsigned int ESR1:1;
    unsigned int reserved_2:1;
    unsigned int SMU:1;
    unsigned int SW:1;
    unsigned int STM0:1;
    unsigned int STM1:1;
    unsigned int STM2:1;
    unsigned int reserved_8:8;
    unsigned int PORST:1;
    unsigned int reserved_17:1;
    unsigned int CB0:1;
    unsigned int CB1:1;
    unsigned int CB3:1;
    unsigned int reserved_21:2;
    unsigned int EVR13:1;
    unsigned int EVR33:1;
    unsigned int SWD:1;
    unsigned int reserved_26:2;
    unsigned int STBYR:1;
    unsigned int reserved_29:3;
} Ifx_SCU_RSTSTAT_Bits;


typedef struct _Ifx_SCU_SAFECON_Bits
{
    unsigned int HBT:1;
    unsigned int reserved_1:31;
} Ifx_SCU_SAFECON_Bits;


typedef struct _Ifx_SCU_STSTAT_Bits
{
    unsigned int HWCFG:8;
    unsigned int FTM:7;
    unsigned int MODE:1;
    unsigned int reserved_16:1;
    unsigned int LUDIS:1;
    unsigned int reserved_18:1;
    unsigned int TRSTL:1;
    unsigned int SPDEN:1;
    unsigned int reserved_21:3;
    unsigned int RAMINT:1;
    unsigned int reserved_25:7;
} Ifx_SCU_STSTAT_Bits;


typedef struct _Ifx_SCU_SWRSTCON_Bits
{
    unsigned int reserved_0:1;
    unsigned int SWRSTREQ:1;
    unsigned int reserved_2:30;
} Ifx_SCU_SWRSTCON_Bits;


typedef struct _Ifx_SCU_SYSCON_Bits
{
    unsigned int CCTRIG0:1;
    unsigned int reserved_1:1;
    unsigned int RAMINTM:2;
    unsigned int SETLUDIS:1;
    unsigned int reserved_5:3;
    unsigned int DATM:1;
    unsigned int reserved_9:23;
} Ifx_SCU_SYSCON_Bits;


typedef struct _Ifx_SCU_TRAPCLR_Bits
{
    unsigned int ESR0T:1;
    unsigned int ESR1T:1;
    unsigned int reserved_2:1;
    unsigned int SMUT:1;
    unsigned int reserved_4:28;
} Ifx_SCU_TRAPCLR_Bits;


typedef struct _Ifx_SCU_TRAPDIS_Bits
{
    unsigned int ESR0T:1;
    unsigned int ESR1T:1;
    unsigned int reserved_2:1;
    unsigned int SMUT:1;
    unsigned int reserved_4:28;
} Ifx_SCU_TRAPDIS_Bits;


typedef struct _Ifx_SCU_TRAPSET_Bits
{
    unsigned int ESR0T:1;
    unsigned int ESR1T:1;
    unsigned int reserved_2:1;
    unsigned int SMUT:1;
    unsigned int reserved_4:28;
} Ifx_SCU_TRAPSET_Bits;


typedef struct _Ifx_SCU_TRAPSTAT_Bits
{
    unsigned int ESR0T:1;
    unsigned int ESR1T:1;
    unsigned int reserved_2:1;
    unsigned int SMUT:1;
    unsigned int reserved_4:28;
} Ifx_SCU_TRAPSTAT_Bits;


typedef struct _Ifx_SCU_WDTCPU_CON0_Bits
{
    volatile unsigned int ENDINIT:1;
    volatile unsigned int LCK:1;
    volatile unsigned int PW:14;
    volatile unsigned int REL:16;
} Ifx_SCU_WDTCPU_CON0_Bits;


typedef struct _Ifx_SCU_WDTCPU_CON1_Bits
{
    unsigned int reserved_0:2;
    unsigned int IR0:1;
    unsigned int DR:1;
    unsigned int reserved_4:1;
    unsigned int IR1:1;
    unsigned int UR:1;
    unsigned int PAR:1;
    unsigned int TCR:1;
    unsigned int TCTR:7;
    unsigned int reserved_16:16;
} Ifx_SCU_WDTCPU_CON1_Bits;


typedef struct _Ifx_SCU_WDTCPU_SR_Bits
{
    unsigned int AE:1;
    unsigned int OE:1;
    unsigned int IS0:1;
    unsigned int DS:1;
    unsigned int TO:1;
    unsigned int IS1:1;
    unsigned int US:1;
    unsigned int PAS:1;
    unsigned int TCS:1;
    unsigned int TCT:7;
    unsigned int TIM:16;
} Ifx_SCU_WDTCPU_SR_Bits;


typedef struct _Ifx_SCU_WDTS_CON0_Bits
{
    volatile unsigned int ENDINIT:1;
    volatile unsigned int LCK:1;
    volatile unsigned int PW:14;
    volatile unsigned int REL:16;
} Ifx_SCU_WDTS_CON0_Bits;


typedef struct _Ifx_SCU_WDTS_CON1_Bits
{
    unsigned int CLRIRF:1;
    unsigned int reserved_1:1;
    unsigned int IR0:1;
    unsigned int DR:1;
    unsigned int reserved_4:1;
    unsigned int IR1:1;
    unsigned int UR:1;
    unsigned int PAR:1;
    unsigned int TCR:1;
    unsigned int TCTR:7;
    unsigned int reserved_16:16;
} Ifx_SCU_WDTS_CON1_Bits;


typedef struct _Ifx_SCU_WDTS_SR_Bits
{
    unsigned int AE:1;
    unsigned int OE:1;
    unsigned int IS0:1;
    unsigned int DS:1;
    unsigned int TO:1;
    unsigned int IS1:1;
    unsigned int US:1;
    unsigned int PAS:1;
    unsigned int TCS:1;
    unsigned int TCT:7;
    unsigned int TIM:16;
} Ifx_SCU_WDTS_SR_Bits;







typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_ACCEN0_Bits B;
} Ifx_SCU_ACCEN0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_ACCEN1_Bits B;
} Ifx_SCU_ACCEN1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_ARSTDIS_Bits B;
} Ifx_SCU_ARSTDIS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_CCUCON0_Bits B;
} Ifx_SCU_CCUCON0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_CCUCON1_Bits B;
} Ifx_SCU_CCUCON1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_CCUCON2_Bits B;
} Ifx_SCU_CCUCON2;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_CCUCON3_Bits B;
} Ifx_SCU_CCUCON3;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_CCUCON4_Bits B;
} Ifx_SCU_CCUCON4;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_CCUCON5_Bits B;
} Ifx_SCU_CCUCON5;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_CCUCON6_Bits B;
} Ifx_SCU_CCUCON6;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_CCUCON7_Bits B;
} Ifx_SCU_CCUCON7;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_CCUCON8_Bits B;
} Ifx_SCU_CCUCON8;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_CHIPID_Bits B;
} Ifx_SCU_CHIPID;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_DTSCON_Bits B;
} Ifx_SCU_DTSCON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_DTSLIM_Bits B;
} Ifx_SCU_DTSLIM;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_DTSSTAT_Bits B;
} Ifx_SCU_DTSSTAT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_EICR_Bits B;
} Ifx_SCU_EICR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_EIFR_Bits B;
} Ifx_SCU_EIFR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_EMSR_Bits B;
} Ifx_SCU_EMSR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_ESRCFG_Bits B;
} Ifx_SCU_ESRCFG;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_ESROCFG_Bits B;
} Ifx_SCU_ESROCFG;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_EVR13CON_Bits B;
} Ifx_SCU_EVR13CON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_EVR33CON_Bits B;
} Ifx_SCU_EVR33CON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_EVRADCSTAT_Bits B;
} Ifx_SCU_EVRADCSTAT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_EVRDVSTAT_Bits B;
} Ifx_SCU_EVRDVSTAT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_EVRMONCTRL_Bits B;
} Ifx_SCU_EVRMONCTRL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_EVROVMON_Bits B;
} Ifx_SCU_EVROVMON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_EVRRSTCON_Bits B;
} Ifx_SCU_EVRRSTCON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_EVRSDCOEFF1_Bits B;
} Ifx_SCU_EVRSDCOEFF1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_EVRSDCOEFF2_Bits B;
} Ifx_SCU_EVRSDCOEFF2;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_EVRSDCOEFF3_Bits B;
} Ifx_SCU_EVRSDCOEFF3;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_EVRSDCOEFF4_Bits B;
} Ifx_SCU_EVRSDCOEFF4;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_EVRSDCOEFF5_Bits B;
} Ifx_SCU_EVRSDCOEFF5;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_EVRSDCOEFF6_Bits B;
} Ifx_SCU_EVRSDCOEFF6;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_EVRSDCTRL1_Bits B;
} Ifx_SCU_EVRSDCTRL1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_EVRSDCTRL2_Bits B;
} Ifx_SCU_EVRSDCTRL2;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_EVRSDCTRL3_Bits B;
} Ifx_SCU_EVRSDCTRL3;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_EVRSDCTRL4_Bits B;
} Ifx_SCU_EVRSDCTRL4;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_EVRSTAT_Bits B;
} Ifx_SCU_EVRSTAT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_EVRTRIM_Bits B;
} Ifx_SCU_EVRTRIM;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_EVRUVMON_Bits B;
} Ifx_SCU_EVRUVMON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_EXTCON_Bits B;
} Ifx_SCU_EXTCON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_FDR_Bits B;
} Ifx_SCU_FDR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_FMR_Bits B;
} Ifx_SCU_FMR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_ID_Bits B;
} Ifx_SCU_ID;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_IGCR_Bits B;
} Ifx_SCU_IGCR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_IN_Bits B;
} Ifx_SCU_IN;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_IOCR_Bits B;
} Ifx_SCU_IOCR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_LBISTCTRL0_Bits B;
} Ifx_SCU_LBISTCTRL0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_LBISTCTRL1_Bits B;
} Ifx_SCU_LBISTCTRL1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_LBISTCTRL2_Bits B;
} Ifx_SCU_LBISTCTRL2;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_LCLCON_Bits B;
} Ifx_SCU_LCLCON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_LCLTEST_Bits B;
} Ifx_SCU_LCLTEST;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_MANID_Bits B;
} Ifx_SCU_MANID;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_OMR_Bits B;
} Ifx_SCU_OMR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_OSCCON_Bits B;
} Ifx_SCU_OSCCON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_OUT_Bits B;
} Ifx_SCU_OUT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_OVCCON_Bits B;
} Ifx_SCU_OVCCON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_OVCENABLE_Bits B;
} Ifx_SCU_OVCENABLE;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_PDISC_Bits B;
} Ifx_SCU_PDISC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_PDR_Bits B;
} Ifx_SCU_PDR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_PDRR_Bits B;
} Ifx_SCU_PDRR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_PLLCON0_Bits B;
} Ifx_SCU_PLLCON0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_PLLCON1_Bits B;
} Ifx_SCU_PLLCON1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_PLLCON2_Bits B;
} Ifx_SCU_PLLCON2;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_PLLERAYCON0_Bits B;
} Ifx_SCU_PLLERAYCON0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_PLLERAYCON1_Bits B;
} Ifx_SCU_PLLERAYCON1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_PLLERAYSTAT_Bits B;
} Ifx_SCU_PLLERAYSTAT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_PLLSTAT_Bits B;
} Ifx_SCU_PLLSTAT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_PMCSR_Bits B;
} Ifx_SCU_PMCSR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_PMSWCR0_Bits B;
} Ifx_SCU_PMSWCR0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_PMSWCR1_Bits B;
} Ifx_SCU_PMSWCR1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_PMSWSTAT_Bits B;
} Ifx_SCU_PMSWSTAT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_PMSWSTATCLR_Bits B;
} Ifx_SCU_PMSWSTATCLR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_RSTCON_Bits B;
} Ifx_SCU_RSTCON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_RSTCON2_Bits B;
} Ifx_SCU_RSTCON2;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_RSTSTAT_Bits B;
} Ifx_SCU_RSTSTAT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_SAFECON_Bits B;
} Ifx_SCU_SAFECON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_STSTAT_Bits B;
} Ifx_SCU_STSTAT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_SWRSTCON_Bits B;
} Ifx_SCU_SWRSTCON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_SYSCON_Bits B;
} Ifx_SCU_SYSCON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_TRAPCLR_Bits B;
} Ifx_SCU_TRAPCLR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_TRAPDIS_Bits B;
} Ifx_SCU_TRAPDIS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_TRAPSET_Bits B;
} Ifx_SCU_TRAPSET;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_TRAPSTAT_Bits B;
} Ifx_SCU_TRAPSTAT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_WDTCPU_CON0_Bits B;
} Ifx_SCU_WDTCPU_CON0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_WDTCPU_CON1_Bits B;
} Ifx_SCU_WDTCPU_CON1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_WDTCPU_SR_Bits B;
} Ifx_SCU_WDTCPU_SR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_WDTS_CON0_Bits B;
} Ifx_SCU_WDTS_CON0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_WDTS_CON1_Bits B;
} Ifx_SCU_WDTS_CON1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SCU_WDTS_SR_Bits B;
} Ifx_SCU_WDTS_SR;
# 1933 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxScu_regdef.h" 3
typedef volatile struct _Ifx_SCU_WDTCPU
{
    Ifx_SCU_WDTCPU_CON0 CON0;
    Ifx_SCU_WDTCPU_CON1 CON1;
    Ifx_SCU_WDTCPU_SR SR;
} Ifx_SCU_WDTCPU;


typedef volatile struct _Ifx_SCU_WDTS
{
    Ifx_SCU_WDTS_CON0 CON0;
    Ifx_SCU_WDTS_CON1 CON1;
    Ifx_SCU_WDTS_SR SR;
} Ifx_SCU_WDTS;
# 1959 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxScu_regdef.h" 3
typedef volatile struct _Ifx_SCU
{
    unsigned char reserved_0[8];
    Ifx_SCU_ID ID;
    unsigned char reserved_C[4];
    Ifx_SCU_OSCCON OSCCON;
    Ifx_SCU_PLLSTAT PLLSTAT;
    Ifx_SCU_PLLCON0 PLLCON0;
    Ifx_SCU_PLLCON1 PLLCON1;
    Ifx_SCU_PLLCON2 PLLCON2;
    Ifx_SCU_PLLERAYSTAT PLLERAYSTAT;
    Ifx_SCU_PLLERAYCON0 PLLERAYCON0;
    Ifx_SCU_PLLERAYCON1 PLLERAYCON1;
    Ifx_SCU_CCUCON0 CCUCON0;
    Ifx_SCU_CCUCON1 CCUCON1;
    Ifx_SCU_FDR FDR;
    Ifx_SCU_EXTCON EXTCON;
    Ifx_SCU_CCUCON2 CCUCON2;
    Ifx_SCU_CCUCON3 CCUCON3;
    Ifx_SCU_CCUCON4 CCUCON4;
    Ifx_SCU_CCUCON5 CCUCON5;
    Ifx_SCU_RSTSTAT RSTSTAT;
    unsigned char reserved_54[4];
    Ifx_SCU_RSTCON RSTCON;
    Ifx_SCU_ARSTDIS ARSTDIS;
    Ifx_SCU_SWRSTCON SWRSTCON;
    Ifx_SCU_RSTCON2 RSTCON2;
    unsigned char reserved_68[4];
    Ifx_SCU_EVRRSTCON EVRRSTCON;
    Ifx_SCU_ESRCFG ESRCFG[2];
    Ifx_SCU_ESROCFG ESROCFG;
    Ifx_SCU_SYSCON SYSCON;
    Ifx_SCU_CCUCON6 CCUCON6;
    Ifx_SCU_CCUCON7 CCUCON7;
    Ifx_SCU_CCUCON8 CCUCON8;
    unsigned char reserved_8C[16];
    Ifx_SCU_PDR PDR;
    Ifx_SCU_IOCR IOCR;
    Ifx_SCU_OUT OUT;
    Ifx_SCU_OMR OMR;
    Ifx_SCU_IN IN;
    Ifx_SCU_EVRSTAT EVRSTAT;
    Ifx_SCU_EVRDVSTAT EVRDVSTAT;
    Ifx_SCU_EVR13CON EVR13CON;
    Ifx_SCU_EVR33CON EVR33CON;
    Ifx_SCU_STSTAT STSTAT;
    unsigned char reserved_C4[4];
    Ifx_SCU_PMSWCR0 PMSWCR0;
    Ifx_SCU_PMSWSTAT PMSWSTAT;
    Ifx_SCU_PMSWSTATCLR PMSWSTATCLR;
    Ifx_SCU_PMCSR PMCSR[3];
    Ifx_SCU_DTSSTAT DTSSTAT;
    Ifx_SCU_DTSCON DTSCON;
    Ifx_SCU_PMSWCR1 PMSWCR1;
    unsigned char reserved_EC[4];
    Ifx_SCU_WDTS WDTS;
    Ifx_SCU_EMSR EMSR;
    Ifx_SCU_WDTCPU WDTCPU[3];
    Ifx_SCU_TRAPSTAT TRAPSTAT;
    Ifx_SCU_TRAPSET TRAPSET;
    Ifx_SCU_TRAPCLR TRAPCLR;
    Ifx_SCU_TRAPDIS TRAPDIS;
    Ifx_SCU_LCLCON LCLCON0;
    Ifx_SCU_LCLCON LCLCON1;
    Ifx_SCU_LCLTEST LCLTEST;
    Ifx_SCU_CHIPID CHIPID;
    Ifx_SCU_MANID MANID;
    unsigned char reserved_148[8];
    Ifx_SCU_SAFECON SAFECON;
    unsigned char reserved_154[16];
    Ifx_SCU_LBISTCTRL0 LBISTCTRL0;
    Ifx_SCU_LBISTCTRL1 LBISTCTRL1;
    Ifx_SCU_LBISTCTRL2 LBISTCTRL2;
    unsigned char reserved_170[28];
    Ifx_SCU_PDISC PDISC;
    unsigned char reserved_190[8];
    Ifx_SCU_EVRTRIM EVRTRIM;
    Ifx_SCU_EVRADCSTAT EVRADCSTAT;
    Ifx_SCU_EVRUVMON EVRUVMON;
    Ifx_SCU_EVROVMON EVROVMON;
    Ifx_SCU_EVRMONCTRL EVRMONCTRL;
    unsigned char reserved_1AC[4];
    Ifx_SCU_EVRSDCTRL1 EVRSDCTRL1;
    Ifx_SCU_EVRSDCTRL2 EVRSDCTRL2;
    Ifx_SCU_EVRSDCTRL3 EVRSDCTRL3;
    Ifx_SCU_EVRSDCTRL4 EVRSDCTRL4;
    Ifx_SCU_EVRSDCOEFF1 EVRSDCOEFF1;
    Ifx_SCU_EVRSDCOEFF2 EVRSDCOEFF2;
    Ifx_SCU_EVRSDCOEFF3 EVRSDCOEFF3;
    Ifx_SCU_EVRSDCOEFF4 EVRSDCOEFF4;
    Ifx_SCU_EVRSDCOEFF5 EVRSDCOEFF5;
    Ifx_SCU_EVRSDCOEFF6 EVRSDCOEFF6;
    unsigned char reserved_1D8[8];
    Ifx_SCU_OVCENABLE OVCENABLE;
    Ifx_SCU_OVCCON OVCCON;
    unsigned char reserved_1E8[40];
    Ifx_SCU_EICR EICR[4];
    Ifx_SCU_EIFR EIFR;
    Ifx_SCU_FMR FMR;
    Ifx_SCU_PDRR PDRR;
    Ifx_SCU_IGCR IGCR[4];
    unsigned char reserved_23C[4];
    Ifx_SCU_DTSLIM DTSLIM;
    unsigned char reserved_244[436];
    Ifx_SCU_ACCEN1 ACCEN1;
    Ifx_SCU_ACCEN0 ACCEN0;
} Ifx_SCU;
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxScu_reg.h" 2 3





#define MODULE_SCU (*(Ifx_SCU*)0xF0036000u)







#define SCU_ACCEN0 (*(volatile Ifx_SCU_ACCEN0*)0xF00363FCu)


#define SCU_ACCEN1 (*(volatile Ifx_SCU_ACCEN1*)0xF00363F8u)


#define SCU_ARSTDIS (*(volatile Ifx_SCU_ARSTDIS*)0xF003605Cu)


#define SCU_CCUCON0 (*(volatile Ifx_SCU_CCUCON0*)0xF0036030u)


#define SCU_CCUCON1 (*(volatile Ifx_SCU_CCUCON1*)0xF0036034u)


#define SCU_CCUCON2 (*(volatile Ifx_SCU_CCUCON2*)0xF0036040u)


#define SCU_CCUCON3 (*(volatile Ifx_SCU_CCUCON3*)0xF0036044u)


#define SCU_CCUCON4 (*(volatile Ifx_SCU_CCUCON4*)0xF0036048u)


#define SCU_CCUCON5 (*(volatile Ifx_SCU_CCUCON5*)0xF003604Cu)


#define SCU_CCUCON6 (*(volatile Ifx_SCU_CCUCON6*)0xF0036080u)


#define SCU_CCUCON7 (*(volatile Ifx_SCU_CCUCON7*)0xF0036084u)


#define SCU_CCUCON8 (*(volatile Ifx_SCU_CCUCON8*)0xF0036088u)


#define SCU_CHIPID (*(volatile Ifx_SCU_CHIPID*)0xF0036140u)


#define SCU_DTSCON (*(volatile Ifx_SCU_DTSCON*)0xF00360E4u)


#define SCU_DTSLIM (*(volatile Ifx_SCU_DTSLIM*)0xF0036240u)


#define SCU_DTSSTAT (*(volatile Ifx_SCU_DTSSTAT*)0xF00360E0u)


#define SCU_EICR0 (*(volatile Ifx_SCU_EICR*)0xF0036210u)


#define SCU_EICR1 (*(volatile Ifx_SCU_EICR*)0xF0036214u)


#define SCU_EICR2 (*(volatile Ifx_SCU_EICR*)0xF0036218u)


#define SCU_EICR3 (*(volatile Ifx_SCU_EICR*)0xF003621Cu)


#define SCU_EIFR (*(volatile Ifx_SCU_EIFR*)0xF0036220u)


#define SCU_EMSR (*(volatile Ifx_SCU_EMSR*)0xF00360FCu)


#define SCU_ESRCFG0 (*(volatile Ifx_SCU_ESRCFG*)0xF0036070u)


#define SCU_ESRCFG1 (*(volatile Ifx_SCU_ESRCFG*)0xF0036074u)


#define SCU_ESROCFG (*(volatile Ifx_SCU_ESROCFG*)0xF0036078u)


#define SCU_EVR13CON (*(volatile Ifx_SCU_EVR13CON*)0xF00360B8u)


#define SCU_EVR33CON (*(volatile Ifx_SCU_EVR33CON*)0xF00360BCu)


#define SCU_EVRADCSTAT (*(volatile Ifx_SCU_EVRADCSTAT*)0xF003619Cu)


#define SCU_EVRDVSTAT (*(volatile Ifx_SCU_EVRDVSTAT*)0xF00360B4u)


#define SCU_EVRMONCTRL (*(volatile Ifx_SCU_EVRMONCTRL*)0xF00361A8u)


#define SCU_EVROVMON (*(volatile Ifx_SCU_EVROVMON*)0xF00361A4u)


#define SCU_EVRRSTCON (*(volatile Ifx_SCU_EVRRSTCON*)0xF003606Cu)


#define SCU_EVRSDCOEFF1 (*(volatile Ifx_SCU_EVRSDCOEFF1*)0xF00361C0u)


#define SCU_EVRSDCOEFF2 (*(volatile Ifx_SCU_EVRSDCOEFF2*)0xF00361C4u)


#define SCU_EVRSDCOEFF3 (*(volatile Ifx_SCU_EVRSDCOEFF3*)0xF00361C8u)


#define SCU_EVRSDCOEFF4 (*(volatile Ifx_SCU_EVRSDCOEFF4*)0xF00361CCu)


#define SCU_EVRSDCOEFF5 (*(volatile Ifx_SCU_EVRSDCOEFF5*)0xF00361D0u)


#define SCU_EVRSDCOEFF6 (*(volatile Ifx_SCU_EVRSDCOEFF6*)0xF00361D4u)


#define SCU_EVRSDCTRL1 (*(volatile Ifx_SCU_EVRSDCTRL1*)0xF00361B0u)


#define SCU_EVRSDCTRL2 (*(volatile Ifx_SCU_EVRSDCTRL2*)0xF00361B4u)


#define SCU_EVRSDCTRL3 (*(volatile Ifx_SCU_EVRSDCTRL3*)0xF00361B8u)


#define SCU_EVRSDCTRL4 (*(volatile Ifx_SCU_EVRSDCTRL4*)0xF00361BCu)


#define SCU_EVRSTAT (*(volatile Ifx_SCU_EVRSTAT*)0xF00360B0u)


#define SCU_EVRTRIM (*(volatile Ifx_SCU_EVRTRIM*)0xF0036198u)


#define SCU_EVRUVMON (*(volatile Ifx_SCU_EVRUVMON*)0xF00361A0u)


#define SCU_EXTCON (*(volatile Ifx_SCU_EXTCON*)0xF003603Cu)


#define SCU_FDR (*(volatile Ifx_SCU_FDR*)0xF0036038u)


#define SCU_FMR (*(volatile Ifx_SCU_FMR*)0xF0036224u)


#define SCU_ID (*(volatile Ifx_SCU_ID*)0xF0036008u)


#define SCU_IGCR0 (*(volatile Ifx_SCU_IGCR*)0xF003622Cu)


#define SCU_IGCR1 (*(volatile Ifx_SCU_IGCR*)0xF0036230u)


#define SCU_IGCR2 (*(volatile Ifx_SCU_IGCR*)0xF0036234u)


#define SCU_IGCR3 (*(volatile Ifx_SCU_IGCR*)0xF0036238u)


#define SCU_IN (*(volatile Ifx_SCU_IN*)0xF00360ACu)


#define SCU_IOCR (*(volatile Ifx_SCU_IOCR*)0xF00360A0u)


#define SCU_LBISTCTRL0 (*(volatile Ifx_SCU_LBISTCTRL0*)0xF0036164u)


#define SCU_LBISTCTRL1 (*(volatile Ifx_SCU_LBISTCTRL1*)0xF0036168u)


#define SCU_LBISTCTRL2 (*(volatile Ifx_SCU_LBISTCTRL2*)0xF003616Cu)


#define SCU_LCLCON0 (*(volatile Ifx_SCU_LCLCON*)0xF0036134u)


#define SCU_LCLCON1 (*(volatile Ifx_SCU_LCLCON*)0xF0036138u)


#define SCU_LCLTEST (*(volatile Ifx_SCU_LCLTEST*)0xF003613Cu)


#define SCU_MANID (*(volatile Ifx_SCU_MANID*)0xF0036144u)


#define SCU_OMR (*(volatile Ifx_SCU_OMR*)0xF00360A8u)


#define SCU_OSCCON (*(volatile Ifx_SCU_OSCCON*)0xF0036010u)


#define SCU_OUT (*(volatile Ifx_SCU_OUT*)0xF00360A4u)


#define SCU_OVCCON (*(volatile Ifx_SCU_OVCCON*)0xF00361E4u)


#define SCU_OVCENABLE (*(volatile Ifx_SCU_OVCENABLE*)0xF00361E0u)


#define SCU_PDISC (*(volatile Ifx_SCU_PDISC*)0xF003618Cu)


#define SCU_PDR (*(volatile Ifx_SCU_PDR*)0xF003609Cu)


#define SCU_PDRR (*(volatile Ifx_SCU_PDRR*)0xF0036228u)


#define SCU_PLLCON0 (*(volatile Ifx_SCU_PLLCON0*)0xF0036018u)


#define SCU_PLLCON1 (*(volatile Ifx_SCU_PLLCON1*)0xF003601Cu)


#define SCU_PLLCON2 (*(volatile Ifx_SCU_PLLCON2*)0xF0036020u)


#define SCU_PLLERAYCON0 (*(volatile Ifx_SCU_PLLERAYCON0*)0xF0036028u)


#define SCU_PLLERAYCON1 (*(volatile Ifx_SCU_PLLERAYCON1*)0xF003602Cu)


#define SCU_PLLERAYSTAT (*(volatile Ifx_SCU_PLLERAYSTAT*)0xF0036024u)


#define SCU_PLLSTAT (*(volatile Ifx_SCU_PLLSTAT*)0xF0036014u)


#define SCU_PMCSR0 (*(volatile Ifx_SCU_PMCSR*)0xF00360D4u)


#define SCU_PMCSR1 (*(volatile Ifx_SCU_PMCSR*)0xF00360D8u)


#define SCU_PMCSR2 (*(volatile Ifx_SCU_PMCSR*)0xF00360DCu)


#define SCU_PMSWCR0 (*(volatile Ifx_SCU_PMSWCR0*)0xF00360C8u)


#define SCU_PMSWCR1 (*(volatile Ifx_SCU_PMSWCR1*)0xF00360E8u)


#define SCU_PMSWSTAT (*(volatile Ifx_SCU_PMSWSTAT*)0xF00360CCu)


#define SCU_PMSWSTATCLR (*(volatile Ifx_SCU_PMSWSTATCLR*)0xF00360D0u)


#define SCU_RSTCON (*(volatile Ifx_SCU_RSTCON*)0xF0036058u)


#define SCU_RSTCON2 (*(volatile Ifx_SCU_RSTCON2*)0xF0036064u)


#define SCU_RSTSTAT (*(volatile Ifx_SCU_RSTSTAT*)0xF0036050u)


#define SCU_SAFECON (*(volatile Ifx_SCU_SAFECON*)0xF0036150u)


#define SCU_STSTAT (*(volatile Ifx_SCU_STSTAT*)0xF00360C0u)


#define SCU_SWRSTCON (*(volatile Ifx_SCU_SWRSTCON*)0xF0036060u)


#define SCU_SYSCON (*(volatile Ifx_SCU_SYSCON*)0xF003607Cu)


#define SCU_TRAPCLR (*(volatile Ifx_SCU_TRAPCLR*)0xF003612Cu)


#define SCU_TRAPDIS (*(volatile Ifx_SCU_TRAPDIS*)0xF0036130u)


#define SCU_TRAPSET (*(volatile Ifx_SCU_TRAPSET*)0xF0036128u)


#define SCU_TRAPSTAT (*(volatile Ifx_SCU_TRAPSTAT*)0xF0036124u)


#define SCU_WDTCPU0_CON0 (*(volatile Ifx_SCU_WDTCPU_CON0*)0xF0036100u)




#define SCU_WDTCPU0CON0 (SCU_WDTCPU0_CON0)


#define SCU_WDTCPU0_CON1 (*(volatile Ifx_SCU_WDTCPU_CON1*)0xF0036104u)




#define SCU_WDTCPU0CON1 (SCU_WDTCPU0_CON1)


#define SCU_WDTCPU0_SR (*(volatile Ifx_SCU_WDTCPU_SR*)0xF0036108u)




#define SCU_WDTCPU0SR (SCU_WDTCPU0_SR)


#define SCU_WDTCPU1_CON0 (*(volatile Ifx_SCU_WDTCPU_CON0*)0xF003610Cu)




#define SCU_WDTCPU1CON0 (SCU_WDTCPU1_CON0)


#define SCU_WDTCPU1_CON1 (*(volatile Ifx_SCU_WDTCPU_CON1*)0xF0036110u)




#define SCU_WDTCPU1CON1 (SCU_WDTCPU1_CON1)


#define SCU_WDTCPU1_SR (*(volatile Ifx_SCU_WDTCPU_SR*)0xF0036114u)




#define SCU_WDTCPU1SR (SCU_WDTCPU1_SR)


#define SCU_WDTCPU2_CON0 (*(volatile Ifx_SCU_WDTCPU_CON0*)0xF0036118u)




#define SCU_WDTCPU2CON0 (SCU_WDTCPU2_CON0)


#define SCU_WDTCPU2_CON1 (*(volatile Ifx_SCU_WDTCPU_CON1*)0xF003611Cu)




#define SCU_WDTCPU2CON1 (SCU_WDTCPU2_CON1)


#define SCU_WDTCPU2_SR (*(volatile Ifx_SCU_WDTCPU_SR*)0xF0036120u)




#define SCU_WDTCPU2SR (SCU_WDTCPU2_SR)


#define SCU_WDTS_CON0 (*(volatile Ifx_SCU_WDTS_CON0*)0xF00360F0u)




#define SCU_WDTSCON0 (SCU_WDTS_CON0)


#define SCU_WDTS_CON1 (*(volatile Ifx_SCU_WDTS_CON1*)0xF00360F4u)




#define SCU_WDTSCON1 (SCU_WDTS_CON1)


#define SCU_WDTS_SR (*(volatile Ifx_SCU_WDTS_SR*)0xF00360F8u)




#define SCU_WDTSSR (SCU_WDTS_SR)
# 68 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 2 3

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxScuWdt.asm.h" 1 3
# 45 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxScuWdt.asm.h" 3
#define IFXSCUWDT_ASM_H 1






#define IFXSCUWDT_CALCULATELFSR(pwd) ((((((pwd) >> 13) ^ ((pwd) >> 12) ^ ((pwd) >> 11) ^ ((pwd) >> 1 )) & 1)) | (((pwd)<<1) & 0x3FFF))
# 62 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxScuWdt.asm.h" 3
static inline __attribute__ ((always_inline)) uint16 IfxScuWdt_calculateLfsr(uint16 password);
# 85 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxScuWdt.asm.h" 3
static inline __attribute__ ((always_inline)) uint16 IfxScuWdt_calculateLfsr(uint16 pwd)
{

    uint32 temp = pwd;
    uint16 res;

    __asm("xor.t  %0,%1,13,%1,12 \n           xor.t  %0,%0,0,%1,11  \n           sh.xor.t %1,%0,0,%1,1  \n           extr.u %0,%1,0,14     \n"


                                     : "=&d" (res) : "d" (temp));
    return res;

}
# 70 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 2 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu_intrinsics.h" 1 3
# 45 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu_intrinsics.h" 3
#define IFXCPU_INTRINSICS_H 
# 56 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu_intrinsics.h" 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCpu_IntrinsicsGnuc.h" 1 3
# 46 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCpu_IntrinsicsGnuc.h" 3
#define IFXCPU_INTRINSICSGNUC_H 





#define IFXCPU_INTRINSICSGNUC_USE_MACHINE_INTRINSICS 1



# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\Ifx_Types.h" 1 3
# 57 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCpu_IntrinsicsGnuc.h" 2 3


# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\machine\\intrinsics.h" 1 3
# 28 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\machine\\intrinsics.h" 3
#define __INTRINSICS_H__ 

#undef __STRINGIFY
#define __STRINGIFY(x) #x
# 82 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\machine\\intrinsics.h" 3
#define __bisr(irq_level) __tric_bisr(irq_level)
#define __BISR(irq_level) __tric_bisr(irq_level)

#define __tric_bisr(irq_level) __asm__ volatile ("bisr " __STRINGIFY (irq_level) ::: "memory")


static __inline__ __attribute__((__always_inline__))
void _bisr (const unsigned __irq_level)
{
  __asm__ volatile ("bisr %0" :: "i" (__irq_level) : "memory");
}






#define __MFCR(regaddr) __tric_mfcr (regaddr)
#define __mfcr(regaddr) __tric_mfcr (regaddr)

#define __tric_mfcr(regaddr) (__extension__({ unsigned __res; __asm__ volatile ("mfcr %0, LO:" __STRINGIFY (regaddr) : "=d" (__res) :: "memory"); __res; }))







static __inline__ __attribute__((__always_inline__))
unsigned _mfcr (const unsigned __regaddr)
{
  unsigned __res;
  __asm__ volatile ("mfcr %0, LO:%1"
                    : "=d" (__res) : "i" (__regaddr) : "memory");
  return __res;
}






#define __MTCR(regaddr,val) __tric_mtcr (regaddr, val)
#define __mtcr(regaddr,val) __tric_mtcr (regaddr, val)

#define __tric_mtcr(regaddr,val) do { unsigned __newval = (unsigned) (val); __asm__ volatile ("mtcr LO:" __STRINGIFY (regaddr) ", %0" :: "d" (__newval) : "memory"); } while (0)






static __inline__ __attribute__((__always_inline__))
void _mtcr (const unsigned __regaddr, const unsigned __val)
{
  __asm__ volatile ("mtcr LO:%0, %1"
                    :: "i" (__regaddr), "d" (__val) : "memory");
}






#define __syscall(service) __tric_syscall (service)
#define __SYSCALL(service) __tric_syscall (service)

#define __tric_syscall(service) __asm__ volatile ("syscall "__STRINGIFY (service) ::: "memory")


static __inline__ __attribute__((__always_inline__))
void _syscall (const unsigned __service)
{
  __asm__ volatile ("syscall %0" :: "i" (__service) : "memory");
}






static __inline__ __attribute__((__always_inline__))
void _disable (void)
{
  __asm__ volatile ("disable" ::: "memory");
}

static __inline__ __attribute__((__always_inline__))
void _enable (void)
{
  __asm__ volatile ("enable" ::: "memory");
}

static __inline__ __attribute__((__always_inline__))
void _debug (void)
{
  __asm__ volatile ("debug" ::: "memory");
}

static __inline__ __attribute__((__always_inline__))
void _isync (void)
{
  __asm__ volatile ("isync" ::: "memory");
}

static __inline__ __attribute__((__always_inline__))
void _dsync (void)
{
  __asm__ volatile ("dsync" ::: "memory");
}

static __inline__ __attribute__((__always_inline__))
void _rstv (void)
{
  __asm__ volatile ("rstv" ::: "memory");
}

static __inline__ __attribute__((__always_inline__))
void _rslcx (void)
{
    __asm__ volatile ("rslcx" ::: "memory",
                      "d0", "d1", "d2", "d3", "d4", "d5", "d6", "d7",
                      "a2", "a3", "a4", "a5", "a6", "a7", "a11");
}


static __inline__ __attribute__((__always_inline__))
void _svlcx (void)
{
  __asm__ volatile ("svlcx" ::: "memory");
}

static __inline__ __attribute__((__always_inline__))
void _nop (void)
{
  __asm__ volatile ("nop" ::: "memory");
}
# 227 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\machine\\intrinsics.h" 3
static __inline__ __attribute__((__always_inline__))
void _restore (const int irqs_on)
{

  __asm__ volatile ("restore %0" :: "d" (irqs_on) : "memory");






}
# 248 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\machine\\intrinsics.h" 3
#define __CLZ(val) __builtin_clz (val)

#define __CTZ(val) __builtin_ctz (val)

#define __ABS(val) __builtin_abs (val)
# 60 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCpu_IntrinsicsGnuc.h" 2 3




#define STRINGIFY(x) #x



#define IFX_WEAK _attribute_((weak))



#define Ifx__non_return_call(fun) __asm__ volatile ("ji %0"::"a"(fun))



static inline __attribute__ ((always_inline)) void Ifx__jump_and_link(void (*fun)(void))
{
 __asm__ volatile ("jli %0"::"a"(fun));
}

static inline __attribute__ ((always_inline)) void Ifx__moveToDataParam0(unsigned int var)
{
 __asm__ volatile ("mov\t %%d4, %0"::"d"(var));
}

static inline __attribute__ ((always_inline)) void Ifx__moveToDataParamRet(unsigned int var)
{
 __asm__ volatile ("mov\t %%d2, %0"::"d"(var));
}

static inline __attribute__ ((always_inline)) unsigned int Ifx__getDataParamRet(void)
{
 unsigned int var;
 __asm__ volatile (" mov\t %0, %%d2":"=d"(var));
 return var;
}

static inline __attribute__ ((always_inline)) void Ifx__moveToAddrParam0(const void *var)
{
 __asm__ volatile ("mov.aa\t %%a4, %0"::"a"(var));
}

static inline __attribute__ ((always_inline)) void Ifx__jumpToFunction(const void *fun)
{
 __asm__ volatile ("ji %0"::"a"(fun));
}

static inline __attribute__ ((always_inline)) void Ifx__jumpToFunctionWithLink(const void *fun)
{
 Ifx__jump_and_link((void (*)(void))fun);
}

static inline __attribute__ ((always_inline)) void Ifx__jumpBackToLink(void)
{
 __asm__ volatile ("ji %a11");
}







#define Ifx__minX(X,Y) ( ((X) < (Y)) ? (X) : (Y) )
#define Ifx__maxX(X,Y) ( ((X) > (Y)) ? (X) : (Y) )
#define Ifx__saturateX(X,Min,Max) ( Ifx__minX(Ifx__maxX(X, Min), Max) )
#define Ifx__checkrangeX(X,Min,Max) (((X) >= (Min)) && ((X) <= (Max)))






#define Ifx__saturate(X,Min,Max) ( Ifx__min(Ifx__max(X, Min), Max) )






#define Ifx__saturateu(X,Min,Max) ( Ifx__minu(Ifx__maxu(X, Min), Max) )
# 152 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCpu_IntrinsicsGnuc.h" 3
static inline __attribute__ ((always_inline)) sint32 Ifx__max(sint32 a, sint32 b)
{
    sint32 res;
    __asm__ volatile ("max %0, %1, %2": "=d" (res) : "d" (a), "d" (b));
    return res;
}



static inline __attribute__ ((always_inline)) sint32 Ifx__maxs(sint16 a, sint16 b)
{
    sint32 res;
    __asm__ volatile ("max.h %0, %1, %2": "=d" (res) : "d" (a), "d" (b));
    return res;
}


static inline __attribute__ ((always_inline)) uint32 Ifx__maxu(uint32 a, uint32 b)
{
    uint32 res;
    __asm__ volatile ("max.u %0, %1, %2": "=d" (res) : "d" (a), "d" (b));
    return res;
}



static inline __attribute__ ((always_inline)) sint32 Ifx__min(sint32 a, sint32 b)
{
    sint32 res;
    __asm__ volatile ("min %0, %1, %2": "=d" (res) : "d" (a), "d" (b));
    return res;
}



static inline __attribute__ ((always_inline)) sint16 Ifx__mins(sint16 a, sint16 b)
{
    sint16 res;
    __asm__ volatile ("min.h %0, %1, %2": "=d" (res) : "d" (a), "d" (b));
    return res;
}



static inline __attribute__ ((always_inline)) uint32 Ifx__minu(uint32 a, uint32 b)
{
    uint32 res;
    __asm__ volatile ("min.u %0, %1, %2": "=d" (res) : "d" (a), "d" (b));
    return res;
}
# 210 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCpu_IntrinsicsGnuc.h" 3
#define Ifx__sqrf(X) ((X) * (X))
#define Ifx__sqrtf(X) sqrtf(X)
#define Ifx__checkrange(X,Min,Max) (((X) >= (Min)) && ((X) <= (Max)))

#define Ifx__roundf(X) ((((X) - (sint32)(X)) > 0.5) ? (1 + (sint32)(X)) : ((sint32)(X)))
#define Ifx__absf(X) ( ((X) < 0.0) ? -(X) : (X) )
#define Ifx__minf(X,Y) ( ((X) < (Y)) ? (X) : (Y) )
#define Ifx__maxf(X,Y) ( ((X) > (Y)) ? (X) : (Y) )
#define Ifx__saturatef(X,Min,Max) ( Ifx__minf(Ifx__maxf(X, Min), Max) )
#define Ifx__checkrangef(X,Min,Max) (((X) >= (Min)) && ((X) <= (Max)))

#define Ifx__abs_stdreal(X) ( ((X) > 0.0) ? (X) : -(X) )
#define Ifx__min_stdreal(X,Y) ( ((X) < (Y)) ? (X) : (Y) )
#define Ifx__max_stdreal(X,Y) ( ((X) > (Y)) ? (X) : (Y) )
#define Ifx__saturate_stdreal(X,Min,Max) ( Ifx__min_stdreal(Ifx__max_stdreal(X, Min), Max) )

#define Ifx__neqf(X,Y) ( ((X) > (Y)) || ((X) < (Y)) )
#define Ifx__leqf(X,Y) ( !((X) > (Y)) )
#define Ifx__geqf(X,Y) ( !((X) < (Y)) )
# 242 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCpu_IntrinsicsGnuc.h" 3
static inline __attribute__ ((always_inline)) sint16 Ifx__clssf(sfract a)
{
    sint16 res;
    __asm__ volatile ("sh  %1,%1,16    \n                      cls  %0,%1":"=d"(res):"d"(a):"memory");

    return res;
}



static inline __attribute__ ((always_inline)) float Ifx__fract_to_float(fract a)
{
    float res;
    __asm__ volatile ("q31tof  %0,%1,%2":"=d"(res):"d"(a), "d"(0):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) fract Ifx__float_to_fract(float a)
{
    fract res;
    __asm__ volatile ("ftoq31  %0,%1,%2":"=d"(res):"d"(a), "d"(0):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) sfract Ifx__fract_to_sfract(fract a)
{
    sfract res;
    __asm__ volatile ("mov.u  %0,0x8000        \n                    adds  %0,%1              \n                    extr  %0,%0,0x10,0x10 "


                      :"=&d"(res):"d"(a):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) sfract Ifx__float_to_sfract(float a)
{
    fract tmp = Ifx__float_to_fract(a);
    return Ifx__fract_to_sfract(tmp);
}



static inline __attribute__ ((always_inline)) fract Ifx__getfract(laccum a)
{
    fract res;
    __asm__ volatile ("dextr  %0,%H1,%L1,0x11":"=&d" (res):"d" (a):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) sfract Ifx__mac_r_sf(sfract a, sfract b, sfract c)
{
    sfract res;
    __asm__ volatile ("sh  %1,%1,16        \n                       maddrs.q  %0,%1,%2L,%3L,1        \n                       sh %0,%0,-16":"=d"(res):"d"(a),

                                                       "d"(b), "d"(c):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) sfract Ifx__mac_sf(sfract a, sfract b, sfract c)
{
    sfract res;
    __asm__ volatile ("sh  %1,%1,16        \n                      madds.q  %0,%1,%2L,%3L,1        \n                      sh %0,%0,-16":"=d"(res):"d"(a),

                                                      "d"(b), "d"(c):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) long Ifx__mulfractfract(fract a, fract b)
{
    long res;
    __asm__ volatile ("mul.q %0,%1,%2,1":"=d"(res):"d"(a), "d"(b):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) long Ifx__mulfractlong(fract a, long b)
{
    long res;
    __asm__ volatile ("mul.q %0,%1,%2,1":"=d"(res):"d"(a), "d"(b):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) sfract Ifx__round16(fract a)
{
    sfract res;
    __asm__ volatile ("mov.u  %0,0x8000        \n                    adds  %0,%1              \n                    insert  %0,%0,0,0,0x10 \n					sh  %0,%0,-16"



                      :"=&d"(res):"d"(a):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) sfract Ifx__s16_to_sfract(sint16 a)
{
    sfract res;
    __asm__ volatile ("sh  %0,%1,16    \n                       sh  %0,%1,-16":"=d"(res):"d"(a):"memory");

    return res;
}



static inline __attribute__ ((always_inline)) sint16 Ifx__sfract_to_s16(sfract a)
{
    sint16 res;
    __asm__ volatile ("sh  %1,%1,16    \n                       sh  %0,%1,-16":"=d"(res):"d"(a):"memory");

    return res;
}



static inline __attribute__ ((always_inline)) uint16 Ifx__sfract_to_u16(sfract a)
{
    uint16 res;
    __asm__ volatile ("sh  %1,%1,16    \n                       sh  %0,%1,-16":"=d"(res):"d"(a):"memory");

    return res;
}



static inline __attribute__ ((always_inline)) laccum Ifx__shaaccum(laccum a, sint32 b)
{
    laccum res;
    __asm__ volatile ("jge   %2,0,0f        \n                    sha   %H0,%H1,%2     \n                    rsub  %2,%2,0        \n                    dextr %L0,%H1,%L1,%2 \n                    j  1f                \n                    0:dextr %H0,%H1,%L1,%2 \n                    sha   %L0,%L1,%2     \n                    1:"







                      :"=d"(res):"d"(a), "d"(b):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) fract Ifx__shafracts(fract a, sint32 b)
{
    fract res;
    __asm__ volatile ("shas  %0,%1,%2":"=d"(res):"d"(a), "d"(b):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) sfract Ifx__shasfracts(sfract a, sint32 b)
{
    sfract res;
    __asm__ volatile ("shas  %0,%1,%2":"=d"(res):"d"(a), "d"(b):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) sfract Ifx__u16_to_sfract(uint16 a)
{
    sfract res;
    __asm__ volatile ("sh  %0,%1,16    \n                       sh  %0,%1,-16":"=d"(res):"d"(a):"memory");

    return res;
}
# 434 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCpu_IntrinsicsGnuc.h" 3
static inline __attribute__ ((always_inline)) sint32 Ifx__extr(sint32 a, uint32 p, uint32 w)
{
    sint32 res;
    __asm__ volatile ("mov %%d14,%2  \n                     mov %%d15,%3  \n                     extr %0,%1,%%e14"


                      : "=d" (res) : "d" (a), "d" (p), "d" (w):"d14", "d15");
    return res;
}



static inline __attribute__ ((always_inline)) uint32 Ifx__extru(uint32 a, uint32 p, uint32 w)
{
    uint32 res;
    __asm__ volatile ("mov %%d14,%2  \n                     mov %%d15,%3  \n                     extr.u %0,%1,%%e14"


                      : "=d" (res) : "d" (a), "d" (p), "d" (w):"d14", "d15");
    return res;
}




#define Ifx__getbit(address,bitoffset) ((*(address) & (1U << (bitoffset))) != 0)



#define Ifx__imaskldmst(address,value,bitoffset,bits) {long long tmp; __asm__("imask %A0,%1,%2,%3" :"=d"((long long)tmp) :"d"(value),"d"(bitoffset),"i"(bits): "memory"); __asm__("ldmst [%0]0,%A1"::"a"(address),"d"(tmp): "memory");}
# 472 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCpu_IntrinsicsGnuc.h" 3
static inline __attribute__ ((always_inline)) sint32 Ifx__ins(sint32 trg, const sint32 trgbit, sint32 src, const sint32 srcbit)
{
    sint32 res;
    __asm__ volatile ("ins.t %0,%1,%2,%3,%4":"=d"(res):"d"(trg), "i"(trgbit), "d"(src), "i"(srcbit));
    return res;
}



static inline __attribute__ ((always_inline)) sint32 Ifx__insert(sint32 a, sint32 b, sint32 p, const sint32 w)
{
    sint32 res;
    __asm__ volatile ("mov %%d14,%3  \n                     mov %%d15,%4  \n                     insert %0,%1,%2,%%e14"


                      :"=d"(res):"d"(a), "d"(b), "d"(p), "d"(w):"d14", "d15");
    return res;
}



static inline __attribute__ ((always_inline)) sint32 Ifx__insn(sint32 trg, const sint32 trgbit, sint32 src, const sint32 srcbit)
{
    sint32 res;
    __asm__ volatile ("insn.t %0,%1,%2,%3,%4":"=d"(res):"d"(trg), "i"(trgbit), "d"(src), "i"(srcbit));
    return res;
}



#define Ifx__putbit(value,address,bitoffset) Ifx__imaskldmst(address, value, bitoffset,1)
# 520 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCpu_IntrinsicsGnuc.h" 3
#define Ifx__disable() __asm__ volatile ("disable" : : : "memory")



static inline __attribute__ ((always_inline)) sint32 Ifx__disable_and_save(void)
{
    sint32 res;
    __asm__ volatile("disable %0":"=d"(res));
    return res;
}



#define Ifx__enable() __asm__ volatile ("enable" : : : "memory")



static inline __attribute__ ((always_inline)) void Ifx__restore(sint32 ie)
{
    __asm__ volatile ("restore %0"::"d"(ie));
}
# 558 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCpu_IntrinsicsGnuc.h" 3
static inline __attribute__ ((always_inline)) void Ifx__cacheawi(uint8* p)
{
    __asm__ volatile("cachea.wi [%0]0"::"a"(p));
}


static inline __attribute__ ((always_inline)) void Ifx__cacheiwi(uint8* p)
{
    __asm__ volatile("cachei.wi [%0]0"::"a"(p));
}




static inline __attribute__ ((always_inline)) uint8* Ifx__cacheawi_bo_post_inc(uint8* p)
{
    __asm__ volatile("cachea.wi  [%0+]0"::"a"(p));
    return p;
}





static inline __attribute__ ((always_inline)) sint32 Ifx__mulsc(sint32 a, sint32 b, sint32 offset)
{
    sint32 res;
    __asm__ volatile("mul  %%e12,%1,%2      \n                    dextr  %0,%%d13,%%d12,%3"

                     :"=d"(res):"d"(a), "d"(b), "d"(offset):"d12", "d13");
    return res;
}



static inline __attribute__ ((always_inline)) uint32 Ifx__rol(uint32 operand, uint32 count)
{
    uint32 res;
    __asm__ volatile("dextr  %0,%1,%1,%2":"=d"(res):"d"(operand), "d"(count):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) uint32 Ifx__ror(uint32 operand, uint32 count)
{
    uint32 res;
    __asm__ volatile("rsub %2,%2,0 \n                    dextr  %0,%1,%1,%2"

                     :"=d"(res):"d"(operand), "d"(count):"memory");
    return res;
}
# 620 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCpu_IntrinsicsGnuc.h" 3
static inline __attribute__ ((always_inline)) __packb Ifx__absb(__packb a)
{
    __packb res;
    __asm__ volatile ("abs.b %0,%1"
                      :"=d"(res):"d"(a):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) __packhw Ifx__absh(__packhw a)
{
    __packhw res;
    __asm__ volatile ("abs.h %0,%1"
                      :"=d"(res):"d"(a):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) __packhw Ifx__abssh(__packhw a)
{
    __packb res;
    __asm__ volatile ("abss.h %0,%1"
                      :"=d"(res):"d"(a):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) sint8 Ifx__extractbyte1(__packb a)
{
    sint8 res;
    __asm__ volatile ("extr  %0,%1,0,8"
                      :"=d"(res):"d"(a):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) sint8 Ifx__extractbyte2(__packb a)
{
    sint8 res;
    __asm__ volatile ("extr  %0,%1,8,8"
                      :"=d"(res):"d"(a):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) sint8 Ifx__extractbyte3(__packb a)
{
    sint8 res;
    __asm__ volatile ("extr  %0,%1,16,8"
                      :"=d"(res):"d"(a):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) sint8 Ifx__extractbyte4(__packb a)
{
    sint8 res;
    __asm__ volatile ("extr  %0,%1,24,8"
                      :"=d"(res):"d"(a):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) sint16 Ifx__extracthw1(__packhw a)
{
    sint16 res;
    __asm__ volatile ("extr  %0,%1,0,16"
                      :"=d"(res):"d"(a):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) sint16 Ifx__extracthw2(__packhw a)
{
    sint16 res;
    __asm__ volatile ("extr  %0,%1,16,16"
                      :"=d"(res):"d"(a):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) uint8 Ifx__extractubyte1(__upackb a)
{
    uint8 res;
    __asm__ volatile ("extr  %0,%1,0,8"
                      :"=d"(res):"d"(a):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) uint8 Ifx__extractubyte2(__upackb a)
{
    uint8 res;
    __asm__ volatile ("extr  %0,%1,8,8"
                      :"=d"(res):"d"(a):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) uint8 Ifx__extractubyte3(__upackb a)
{
    uint8 res;
    __asm__ volatile ("extr  %0,%1,16,8"
                      :"=d"(res):"d"(a):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) uint8 Ifx__extractubyte4(__upackb a)
{
    uint8 res;
    __asm__ volatile ("extr  %0,%1,24,8"
                      :"=d"(res):"d"(a):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) uint16 Ifx__extractuhw1(__upackhw a)
{
    uint16 res;
    __asm__ volatile ("extr  %0,%1,0,16"
                      :"=d"(res):"d"(a):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) uint16 Ifx__extractuhw2(__upackhw a)
{
    uint16 res;
    __asm__ volatile ("extr  %0,%1,16,16"
                      :"=d"(res):"d"(a):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) sint8 Ifx__getbyte1(__packb* a)
{
    sint8 res;
    __asm__ volatile ("ld.w  %0,[%1]0 \n                     extr  %0,%0,0,8"

                      :"=d"(res):"a"(a):"memory");
    return res;

}



static inline __attribute__ ((always_inline)) sint8 Ifx__getbyte2(__packb* a)
{
    sint8 res;
    __asm__ volatile ("ld.w  %0,[%1]0 \n                     extr  %0,%0,8,8"

                      :"=d"(res):"a"(a):"memory");
    return res;

}



static inline __attribute__ ((always_inline)) sint8 Ifx__getbyte3(__packb* a)
{
    sint8 res;
    __asm__ volatile ("ld.w  %0,[%1]0 \n                     extr  %0,%0,16,8"

                      :"=d"(res):"a"(a):"memory");
    return res;

}



static inline __attribute__ ((always_inline)) sint8 Ifx__getbyte4(__packb* a)
{
    sint8 res;
    __asm__ volatile ("ld.w  %0,[%1]0 \n                     extr  %0,%0,24,8"

                      :"=d"(res):"a"(a):"memory");
    return res;

}



static inline __attribute__ ((always_inline)) sint16 Ifx__gethw1(__packhw* a)
{
    sint16 res;
    __asm__ volatile ("ld.w  %0,[%1]0 \n                     extr  %0,%0,0,16"

                      :"=d"(res):"a"(a):"memory");
    return res;
}


static inline __attribute__ ((always_inline)) sint16 Ifx__gethw2(__packhw* a)
{
    sint16 res;
    __asm__ volatile ("ld.w  %0,[%1]0 \n                     extr  %0,%0,16,16"

                      :"=d"(res):"a"(a):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) uint8 Ifx__getubyte1(__upackb* a)
{
    uint8 res;
    __asm__ volatile ("ld.w  %0,[%1]0 \n                     extr  %0,%0,0,8"

                      :"=d"(res):"a"(a):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) uint8 Ifx__getubyte2(__upackb* a)
{
    uint8 res;
    __asm__ volatile ("ld.w  %0,[%1]0 \n                     extr  %0,%0,8,8"

                      :"=d"(res):"a"(a):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) uint8 Ifx__getubyte3(__upackb* a)
{
    uint8 res;
    __asm__ volatile ("ld.w  %0,[%1]0 \n                     extr  %0,%0,16,8"

                      :"=d"(res):"a"(a):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) uint8 Ifx__getubyte4(__upackb* a)
{
    uint8 res;
    __asm__ volatile ("ld.w  %0,[%1]0 \n                     extr  %0,%0,24,8"

                      :"=d"(res):"a"(a):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) uint16 Ifx__getuhw1(__upackhw* a)
{
    uint16 res;
    __asm__ volatile ("ld.w  %0,[%1]0 \n                     extr  %0,%0,0,16"

                      :"=d"(res):"a"(a):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) uint16 Ifx__getuhw2(__upackhw* a)
{
    uint16 res;
    __asm__ volatile ("ld.w  %0,[%1]0 \n                     extr  %0,%0,16,16"

                      :"=d"(res):"a"(a):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) __packb Ifx__initpackb(sint32 a, sint32 b, sint32 c, sint32 d)
{
    __packb res;
    __asm__ volatile ("insert  %3,%3,%4,8,8   \n                    insert  %4,%1,%2,8,8   \n                    insert  %0,%4,%3,16,16 "


                      :"=d"(res):"d"(a), "d"(b), "d"(c), "d"(d):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) __packb Ifx__initpackbl(long a)
{
    return (__packb) a;
}



static inline __attribute__ ((always_inline)) __packhw Ifx__initpackhw(sint16 a, sint16 b)
{
    __packhw res;
    __asm__ volatile ("insert  %0,%1,%2,16,16"
                      :"=d"(res):"d"(a), "d"(b):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) __packhw Ifx__initpackhwl(long a)
{
    return a;
}



static inline __attribute__ ((always_inline)) __upackb Ifx__initupackb( uint32 a, uint32 b, uint32 c, uint32 d)
{
    __upackb res;
    __asm__ volatile ("insert  %3,%3,%4,8,8   \n                    insert  %1,%1,%2,8,8   \n                    insert  %0,%1,%3,16,16"


                      :"=d"(res):"d"(a), "d"(b), "d"(c), "d"(d):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) __upackhw Ifx__initupackhw( uint16 a, uint16 b)
{
    __upackhw res;
    __asm__ volatile ("insert  %0,%1,%2,16,16"
                      :"=d"(res):"d"(a), "d"(b):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) __packb Ifx__insertbyte1(__packb a, sint8 b)
{
    __packb res;
    __asm__ volatile ("insert  %0,%1,%2,0,8"
                      :"=d"(res):"d"(a), "d"(b):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) __packb Ifx__insertbyte2(__packb a, sint8 b)
{
    __packb res;
    __asm__ volatile ("insert  %0,%1,%2,8,8"
                      :"=d"(res):"d"(a), "d"(b):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) __packb Ifx__insertbyte3(__packb a, sint8 b)
{
    __packb res;
    __asm__ volatile ("insert  %0,%1,%2,16,8"
                      :"=d"(res):"d"(a), "d"(b):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) __packb Ifx__insertbyte4(__packb a, sint8 b)
{
    __packb res;
    __asm__ volatile ("insert  %0,%1,%2,24,8"
                      :"=d"(res):"d"(a), "d"(b):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) __upackb Ifx__insertubyte1( __upackb a, uint8 b)
{
    __upackb res;
    __asm__ volatile ("insert  %0,%1,%2,0,8"
                      :"=d"(res):"d"(a), "d"(b):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) __upackb Ifx__insertubyte2( __upackb a, uint8 b)
{
    __upackb res;
    __asm__ volatile ("insert  %0,%1,%2,8,8"
                      :"=d"(res):"d"(a), "d"(b):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) __upackb Ifx__insertubyte3( __upackb a, uint8 b)
{
    __upackb res;
    __asm__ volatile ("insert  %0,%1,%2,16,8"
                      :"=d"(res):"d"(a), "d"(b):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) __upackb Ifx__insertubyte4( __upackb a, uint8 b)
{
    __upackb res;
    __asm__ volatile ("insert  %0,%1,%2,24,8"
                      :"=d"(res):"d"(a), "d"(b):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) __packhw Ifx__inserthw1(__packhw a, sint16 b)
{
    __packhw res;
    __asm__ volatile ("insert  %0,%1,%2,0,16"
                      :"=d"(res):"d"(a), "d"(b):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) __packhw Ifx__inserthw2(__packhw a, sint16 b)
{
    __packhw res;
    __asm__ volatile ("insert  %0,%1,%2,16,16"
                      :"=d"(res):"d"(a), "d"(b):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) __upackhw Ifx__insertuhw1( __upackhw a, uint16 b)
{
    __upackhw res;
    __asm__ volatile ("insert  %0,%1,%2,0,16"
                      :"=d"(res):"d"(a), "d"(b):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) __upackhw Ifx__insertuhw2( __upackhw a, uint16 b)
{
    __upackhw res;
    __asm__ volatile ("insert  %0,%1,%2,16,16"
                      :"=d"(res):"d"(a), "d"(b):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) __packb Ifx__minb(__packb a, __packb b)
{
    __packb res;
    __asm__ volatile ("min.b %0,%1,%2"
                      :"=d"(res):"d"(a), "d"(b):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) __upackb Ifx__minbu( __upackb a, __upackb b)
{
    __upackb res;
    __asm__ volatile ("min.bu %0,%1,%2"
                      :"=d"(res):"d"(a), "d"(b):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) __packhw Ifx__minh(__packhw a, __packhw b)
{
    __packhw res;
    __asm__ volatile ("min.h %0,%1,%2"
                      :"=d"(res):"d"(a), "d"(b):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) __upackhw Ifx__minhu( __upackhw a, __upackhw b)
{
    __upackhw res;
    __asm__ volatile ("min.hu %0,%1,%2"
                      :"=d"(res):"d"(a), "d"(b):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) void Ifx__setbyte1(__packb* a, sint8 b)
{
    __asm__ volatile ("ld.w  %%d15,[%0] \n                    insert  %%d15,%%d15,%1,0,8 \n                    st.w [%0],%%d15"


                      ::"a"(a), "d"(b):"d15", "memory");
}



static inline __attribute__ ((always_inline)) void Ifx__setbyte2(__packb* a, sint8 b)
{
    __asm__ volatile ("ld.w  %%d15,[%0] \n                    insert  %%d15,%%d15,%1,8,8 \n                    st.w [%0],%%d15"


                      ::"a"(a), "d"(b):"d15", "memory");
}



static inline __attribute__ ((always_inline)) void Ifx__setbyte3(__packb* a, sint8 b)
{
    __asm__ volatile ("ld.w  %%d15,[%0] \n                    insert  %%d15,%%d15,%1,16,8 \n                    st.w [%0],%%d15"


                      ::"a"(a), "d"(b):"d15", "memory");
}



static inline __attribute__ ((always_inline)) void Ifx__setbyte4(__packb* a, sint8 b)
{
    __asm__ volatile ("ld.w  %%d15,[%0] \n                    insert  %%d15,%%d15,%1,24,8 \n                    st.w [%0],%%d15"


                      ::"a"(a), "d"(b):"d15", "memory");
}



static inline __attribute__ ((always_inline)) void Ifx__sethw1(__packhw* a, sint16 b)
{
    __asm__ volatile ("ld.w  %%d15,[%0] \n                    insert  %%d15,%%d15,%1,0,16 \n                    st.w [%0],%%d15"


                      ::"a"(a), "d"(b):"d15", "memory");
}



static inline __attribute__ ((always_inline)) void Ifx__sethw2(__packhw* a, sint16 b)
{
    __asm__ volatile ("ld.w  %%d15,[%0] \n                    insert  %%d15,%%d15,%1,16,16 \n                    st.w [%0],%%d15"


                      ::"a"(a), "d"(b):"d15", "memory");
}



static inline __attribute__ ((always_inline)) void Ifx__setubyte1(__upackb* a, uint8 b)
{
    __asm__ volatile ("ld.w  %%d15,[%0] \n                    insert  %%d15,%%d15,%1,0,8 \n                    st.w [%0],%%d15"


                      ::"a"(a), "d"(b):"d15", "memory");
}



static inline __attribute__ ((always_inline)) void Ifx__setubyte2(__upackb* a, uint8 b)
{
    __asm__ volatile ("ld.w  %%d15,[%0] \n                    insert  %%d15,%%d15,%1,8,8 \n                    st.w [%0],%%d15"


                      ::"a"(a), "d"(b):"d15", "memory");
}



static inline __attribute__ ((always_inline)) void Ifx__setubyte3(__upackb* a, uint8 b)
{
    __asm__ volatile ("ld.w  %%d15,[%0] \n                    insert  %%d15,%%d15,%1,16,8 \n                    st.w [%0],%%d15"


                      ::"a"(a), "d"(b):"d15", "memory");
}



static inline __attribute__ ((always_inline)) void Ifx__setubyte4(__upackb* a, uint8 b)
{
    __asm__ volatile ("ld.w  %%d15,[%0] \n                    insert  %%d15,%%d15,%1,24,8 \n                    st.w [%0],%%d15"


                      ::"a"(a), "d"(b):"d15", "memory");
}



static inline __attribute__ ((always_inline)) void Ifx__setuhw1(__upackhw* a, uint16 b)
{
    __asm__ volatile ("ld.w  %%d15,[%0] \n                    insert  %%d15,%%d15,%1,0,16 \n                    st.w [%0],%%d15"


                      ::"a"(a), "d"(b):"d15", "memory");
}



static inline __attribute__ ((always_inline)) void Ifx__setuhw2(__upackhw* a, uint16 b)
{
    __asm__ volatile ("ld.w  %%d15,[%0] \n                    insert  %%d15,%%d15,%1,16,16 \n                    st.w [%0],%%d15"


                      ::"a"(a), "d"(b):"d15", "memory");
}
# 1251 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCpu_IntrinsicsGnuc.h" 3
#define Ifx__abs(a) __builtin_abs(a)



static inline __attribute__ ((always_inline)) sint32 Ifx__absdif(sint32 a, sint32 b)
{
    sint32 res;
    __asm__ volatile ("absdif %0, %1, %2": "=d" (res) : "d" (a), "d" (b));
    return res;
}



static inline __attribute__ ((always_inline)) sint32 Ifx__abss(sint32 a)
{
    sint32 res;
    __asm__ volatile ("abss %0, %1": "=d" (res) : "d" (a));
    return res;
}



static inline __attribute__ ((always_inline)) sint32 Ifx__clo(sint32 a)
{
    sint32 res;
    __asm__ volatile ("clo %0,%1":"=d"(res):"d"(a));
    return res;
}



static inline __attribute__ ((always_inline)) sint32 Ifx__cls(sint32 a)
{
    sint32 res;
    __asm__ volatile ("cls %0,%1":"=d"(res):"d"(a));
    return res;
}



#define Ifx__clz(a) __builtin_clz(a)



static inline __attribute__ ((always_inline)) double Ifx__fabs(double d)
{
    double res;
    __asm__ volatile ("insert  %0,%1,0,31,1": "=d" (res) : "d" (d):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) float Ifx__fabsf(float f)
{
    float res;
    __asm__ volatile ("insert  %0,%1,0,31,1": "=d" (res) : "d" (f):"memory");
    return res;
}
# 1326 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCpu_IntrinsicsGnuc.h" 3
static inline __attribute__ ((always_inline)) sint32 Ifx__parity(sint32 a)
{
    sint32 res;
    __asm__ volatile ("parity  %0,%1": "=d" (res) : "d" (a):"memory");
    return res;
}



static inline __attribute__ ((always_inline)) sint8 Ifx__satb(sint32 a)
{
    sint8 res;
    __asm__ volatile ("sat.b %0,%1":"=d"(res):"d"(a));
    return res;
}



static inline __attribute__ ((always_inline)) uint8 Ifx__satbu(sint32 a)
{
    uint8 res;
    __asm__ volatile ("sat.bu %0,%1":"=d"(res):"d"(a));
    return res;
}



static inline __attribute__ ((always_inline)) sint16 Ifx__sath(sint32 a)
{
    sint8 res;
    __asm__ volatile ("sat.h %0,%1":"=d"(res):"d"(a));
    return res;
}



static inline __attribute__ ((always_inline)) uint16 Ifx__sathu(sint32 a)
{
    sint8 res;
    __asm__ volatile ("sat.hu %0,%1":"=d"(res):"d"(a));
    return res;
}
# 1379 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCpu_IntrinsicsGnuc.h" 3
static inline __attribute__ ((always_inline)) sint32 Ifx__adds(sint32 a, sint32 b)
{
    sint32 res;
    __asm__ volatile ("adds %0, %1, %2": "=d" (res) : "d" (a), "d" (b));
    return res;
}



static inline __attribute__ ((always_inline)) uint32 Ifx__addsu(uint32 a, uint32 b)
{
    uint32 res;
    __asm__ volatile ("adds.u %0, %1, %2": "=d" (res) : "d" (a), "d" (b));
    return res;
}



static inline __attribute__ ((always_inline)) sint32 Ifx__subs(sint32 a, sint32 b)
{
    sint32 res;
    __asm__ volatile ("subs %0, %1, %2": "=d" (res) : "d" (a), "d" (b));
    return res;
}



static inline __attribute__ ((always_inline)) uint32 Ifx__subsu(uint32 a, uint32 b)
{
    uint32 res;
    __asm__ volatile ("subs.u %0, %1, %2": "=d" (res) : "d" (a), "d" (b));
    return res;
}
# 1425 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCpu_IntrinsicsGnuc.h" 3
static inline __attribute__ ((always_inline)) void Ifx__debug(void)
{
    __asm__ volatile ("debug" : : : "memory");
}



#define Ifx__mem_barrier __asm__ volatile("":::"memory");



static inline __attribute__ ((always_inline)) void Ifx__dsync(void)
{
    __asm__ volatile ("dsync" : : : "memory");
}



static inline __attribute__ ((always_inline)) void Ifx__isync(void)
{
    __asm__ volatile ("isync" : : : "memory");
}



static inline __attribute__ ((always_inline)) void Ifx__ldmst(volatile void* address, uint32 mask, uint32 value)
{
    __asm__ volatile("mov %H2,%1 \n                  ldmst [%0]0,%A2"

                     ::"a"(address), "d"(mask), "d"((long long)value));
}



static inline __attribute__ ((always_inline)) void Ifx__nop(void)
{
    __asm__ volatile ("nop" : : : "memory");
}



static inline __attribute__ ((always_inline)) void Ifx__nops(void* cnt)
{
    __asm__ volatile ("0: nop \n        loop %0,0b"

                      ::"a"(((sint8*)cnt)-1));
}



static inline __attribute__ ((always_inline)) void Ifx__rslcx(void)
{
    __asm__ volatile ("rslcx" : : : "memory");
}



static inline __attribute__ ((always_inline)) void Ifx__svlcx(void)
{
    __asm__ volatile ("svlcx" : : : "memory");
}



static inline __attribute__ ((always_inline)) uint32 Ifx__swap(void* place, uint32 value)
{
    uint32 res;
    __asm__ volatile("swap.w [%1]0,%2":"=d"(res):"a"(place), "0"(value));
    return res;
}



#define Ifx__NOP(n) __asm(".rept " #n "\n\tnop\n\t.endr\n")




#define Ifx__setareg(areg,val) { uint32 reg_val= (uint32)val; __asm__ volatile (" mov.a\t %%"#areg",%0"::"d"(reg_val)); }





static inline __attribute__ ((always_inline)) void Ifx__stopPerfCounters(void)
{
    __asm__ volatile("mov %%d0,0\n                  mtcr 0xFC00,%%d0\n                  isync\n"


            : : :"d0");
}







static inline __attribute__ ((always_inline)) unsigned int Ifx__cmpAndSwap (unsigned int volatile *address,
           unsigned int value, unsigned int condition)
{

  __extension__ unsigned long long reg64
    = value | (unsigned long long) condition << 32;

  __asm__ __volatile__ ("cmpswap.w [%[addr]]0, %A[reg]"
                        : [reg] "+d" (reg64)
                        : [addr] "a" (address)
                        : "memory");
    return reg64;
}
# 1548 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCpu_IntrinsicsGnuc.h" 3
static inline __attribute__ ((always_inline)) float32 Ifx__fixpoint_to_float32(fract value, sint32 shift)
{
    float32 result;

    __asm__ volatile("q31tof %0, %1, %2": "=d" (result) : "d" (value), "d" (shift));
    return result;
}

static inline __attribute__ ((always_inline)) void* Ifx__getA11(void)
{
    uint32 *res;
    __asm__ volatile ("mov.aa %0, %%a11": "=a" (res) : :"a11");
    return res;
}

static inline __attribute__ ((always_inline)) void Ifx__setStackPointer(void *stackAddr)
{
    __asm__ volatile ("mov.aa %%a10, %0": : "a" (stackAddr) :"a10");
}

static inline __attribute__ ((always_inline)) uint32 Ifx__crc32(uint32 b, uint32 a)
{
    uint32 returnvalue = 0;

    __asm__ volatile ("CRC32 %0,%1,%2" : "=d" (returnvalue) : "d"(b), "d"(a));

   return returnvalue;
}

static inline __attribute__ ((always_inline)) uint32 IfxCpu_calculateCrc32(uint32 *startaddress, uint8 length)
{
    uint32 returnvalue = 0;
    for (;length > 0; length--)
    {

        __asm__ ("CRC32 %0,%0,%1" : "+d" (returnvalue) : "d" (*startaddress));
        startaddress++;
    }
    return returnvalue;
}

static inline __attribute__ ((always_inline)) uint32 IfxCpu_getRandomVal(uint32 a, uint32 x, uint32 m)
{
 uint32 result;
    __asm("      mul.u     %%e14,%1,%2       # d15 = Eh; d14 = El    \n"
        "        mov       %%d12,%%d14       #   e12 = El            \n"
        "        mov       %%d13, 0          #                       \n"
        "        madd.u    %%e14,%%e12,%%d15, 5 # e14 = El + 5 * d15    \n"
        " cmp_m_%=: jge.u     %%d14,%3,sub_m_%=    #                       \n"
        "        jz        %%d15,done_%=        #                       \n"
        " sub_m_%=: subx      %%d14,%%d14,%3    #  e12=e12-m            \n"
        "        subc      %%d15,%%d15,%%d13 # d13=d13-0             \n"
        "        loopu     cmp_m_%=             #                       \n"
        " done_%=:  mov       %0,%%d14          #                       \n"
        : "=d"(result) : "d"(a), "d"(x), "d"(m) : "d12","d13","d14","d15");
    return result;
}

static inline __attribute__ ((always_inline)) sint32 Ifx__popcnt(sint32 a)
{
 sint32 res;
 __asm__ volatile ("popcnt %0,%1":"=d"(res):"d"(a));
  return res;
}



static inline __attribute__ ((always_inline)) void Ifx__cacheai(uint8* p)
{
    __asm__ volatile("cachea.i [%0]0"::"a"(p));
}





#define __non_return_call Ifx__non_return_call



#define __jump_and_link Ifx__jump_and_link



#define __moveToDataParam0 Ifx__moveToDataParam0



#define __moveToDataParamRet Ifx__moveToDataParamRet



#define __getDataParamRet Ifx__getDataParamRet



#define __moveToAddrParam0 Ifx__moveToAddrParam0



#define __jumpToFunction Ifx__jumpToFunction



#define __jumpToFunctionWithLink Ifx__jumpToFunctionWithLink



#define __jumpBackToLink Ifx__jumpBackToLink



#define __minX Ifx__minX



#define __maxX Ifx__maxX



#define __saturateX Ifx__saturateX



#define __checkrangeX Ifx__checkrangeX



#define __saturate Ifx__saturate



#define __saturateu Ifx__saturateu



#define __max Ifx__max



#define __maxs Ifx__maxs



#define __maxu Ifx__maxu



#define __min Ifx__min



#define __mins Ifx__mins



#define __minu Ifx__minu



#define __sqrtf Ifx__sqrtf



#define __sqrf Ifx__sqrf



#define __checkrange Ifx__checkrange



#define __roundf Ifx__roundf



#define __absf Ifx__absf



#define __saturatef Ifx__saturatef



#define __minf Ifx__minf



#define __maxf Ifx__maxf



#define __checkrangef Ifx__checkrangef



#define __abs_stdreal Ifx__abs_stdreal



#define __saturate_stdreal Ifx__saturate_stdreal



#define __min_stdreal Ifx__min_stdreal



#define __max_stdreal Ifx__max_stdreal



#define __neqf Ifx__neqf



#define __leqf Ifx__leqf



#define __geqf Ifx__geqf



#define __clssf Ifx__clssf



#define __fract_to_float Ifx__fract_to_float



#define __fract_to_sfract Ifx__fract_to_sfract



#define __float_to_sfract Ifx__float_to_sfract



#define __float_to_fract Ifx__float_to_fract



#define __getfract Ifx__getfract



#define __mac_r_sf Ifx__mac_r_sf



#define __mac_sf Ifx__mac_sf



#define __mulfractfract Ifx__mulfractfract



#define __mulfractlong Ifx__mulfractlong



#define __round16 Ifx__round16



#define __s16_to_sfract Ifx__s16_to_sfract



#define __sfract_to_s16 Ifx__sfract_to_s16



#define __sfract_to_u16 Ifx__sfract_to_u16



#define __shaaccum Ifx__shaaccum



#define __shafracts Ifx__shafracts



#define __shasfracts Ifx__shasfracts



#define __u16_to_sfract Ifx__u16_to_sfract



#define __extr Ifx__extr



#define __extru Ifx__extru



#define __getbit Ifx__getbit



#define __ins Ifx__ins



#define __insert Ifx__insert



#define __insn Ifx__insn



#define __putbit Ifx__putbit



#define __imaskldmst Ifx__imaskldmst







#define __disable Ifx__disable



#define __disable_and_save Ifx__disable_and_save



#define __enable Ifx__enable



#define __restore Ifx__restore
# 1904 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCpu_IntrinsicsGnuc.h" 3
#define __cacheawi Ifx__cacheawi



#define __cacheiwi Ifx__cacheiwi



#define __cacheawi_bo_post_inc Ifx__cacheawi_bo_post_inc



#define __mulsc Ifx__mulsc



#define __rol Ifx__rol



#define __ror Ifx__ror



#define __extractbyte1 Ifx__extractbyte1



#define __extractbyte2 Ifx__extractbyte2



#define __extractbyte3 Ifx__extractbyte3



#define __extractbyte4 Ifx__extractbyte4



#define __extracthw1 Ifx__extracthw1



#define __extracthw2 Ifx__extracthw2



#define __extractubyte1 Ifx__extractubyte1



#define __extractubyte2 Ifx__extractubyte2



#define __extractubyte3 Ifx__extractubyte3



#define __extractubyte4 Ifx__extractubyte4



#define __extractuhw1 Ifx__extractuhw1



#define __extractuhw2 Ifx__extractuhw2



#define __getbyte1 Ifx__getbyte1



#define __getbyte2 Ifx__getbyte2



#define __getbyte3 Ifx__getbyte3



#define __getbyte4 Ifx__getbyte4



#define __gethw1 Ifx__gethw1



#define __gethw2 Ifx__gethw2



#define __getubyte1 Ifx__getubyte1



#define __getubyte2 Ifx__getubyte2



#define __getubyte3 Ifx__getubyte3



#define __getubyte4 Ifx__getubyte4



#define __getuhw1 Ifx__getuhw1



#define __getuhw2 Ifx__getuhw2



#define __setbyte1 Ifx__setbyte1



#define __setbyte2 Ifx__setbyte2



#define __setbyte3 Ifx__setbyte3



#define __setbyte4 Ifx__setbyte4



#define __sethw1 Ifx__sethw1



#define __sethw2 Ifx__sethw2



#define __setubyte1 Ifx__setubyte1



#define __setubyte2 Ifx__setubyte2



#define __setubyte3 Ifx__setubyte3



#define __setubyte4 Ifx__setubyte4



#define __setuhw1 Ifx__setuhw1



#define __setuhw2 Ifx__setuhw2



#define __minhu Ifx__minhu



#define __minh Ifx__minh



#define __minbu Ifx__minbu



#define __minb Ifx__minb



#define __insertuhw2 Ifx__insertuhw2



#define __insertuhw1 Ifx__insertuhw1



#define __inserthw2 Ifx__inserthw2



#define __inserthw1 Ifx__inserthw1



#define __insertubyte4 Ifx__insertubyte4



#define __insertubyte3 Ifx__insertubyte3



#define __insertubyte2 Ifx__insertubyte2



#define __insertubyte1 Ifx__insertubyte1



#define __insertbyte4 Ifx__insertbyte4



#define __insertbyte3 Ifx__insertbyte3



#define __insertbyte2 Ifx__insertbyte2



#define __insertbyte1 Ifx__insertbyte1



#define __initupackhw Ifx__initupackhw



#define __initupackb Ifx__initupackb



#define __initpackhwl Ifx__initpackhwl



#define __initpackhw Ifx__initpackhw



#define __initpackbl Ifx__initpackbl



#define __initpackb Ifx__initpackb



#define __absb Ifx__absb



#define __absh Ifx__absh



#define __abssh Ifx__abssh




#define __abs Ifx__abs



#define __absdif Ifx__absdif



#define __abss Ifx__abss



#define __clo Ifx__clo



#define __cls Ifx__cls



#define __clz Ifx__clz



#define __fabs Ifx__fabs



#define __fabsf Ifx__fabsf
# 2213 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCpu_IntrinsicsGnuc.h" 3
#define __parity Ifx__parity



#define __satb Ifx__satb



#define __satbu Ifx__satbu



#define __sath Ifx__sath



#define __sathu Ifx__sathu



#define __adds Ifx__adds



#define __addsu Ifx__addsu



#define __subs Ifx__subs



#define __subsu Ifx__subsu



#define __debug Ifx__debug



#define __mem_barrier Ifx__mem_barrier



#define __dsync Ifx__dsync



#define __isync Ifx__isync



#define __ldmst Ifx__ldmst



#define __nop Ifx__nop



#define __nops Ifx__nops



#define __rslcx Ifx__rslcx



#define __svlcx Ifx__svlcx



#define __swap Ifx__swap



#define NOP Ifx__NOP



#define __setareg Ifx__setareg



#define __stopPerfCounters Ifx__stopPerfCounters



#define __cmpAndSwap Ifx__cmpAndSwap



#define __fixpoint_to_float32 Ifx__fixpoint_to_float32



#define __getA11 Ifx__getA11



#define __setStackPointer Ifx__setStackPointer



#define __crc32 Ifx__crc32



#define __popcnt Ifx__popcnt



#define __cacheai Ifx__cacheai
# 57 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu_intrinsics.h" 2 3
# 68 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu_intrinsics.h" 3
#define IFX_ALIGN_8 (1)
#define IFX_ALIGN_16 (2)
#define IFX_ALIGN_32 (4)
#define IFX_ALIGN_64 (8)
#define IFX_ALIGN_128 (16)
#define IFX_ALIGN_256 (32)

#define Ifx_AlignOn256(Size) ((((Size) + (IFX_ALIGN_256 - 1)) & (~(IFX_ALIGN_256 - 1))))
#define Ifx_AlignOn128(Size) ((((Size) + (IFX_ALIGN_128 - 1)) & (~(IFX_ALIGN_128 - 1))))
#define Ifx_AlignOn64(Size) ((((Size) + (IFX_ALIGN_64 - 1)) & (~(IFX_ALIGN_64 - 1))))
#define Ifx_AlignOn32(Size) ((((Size) + (IFX_ALIGN_32 - 1)) & (~(IFX_ALIGN_32 - 1))))
#define Ifx_AlignOn16(Size) ((((Size) + (IFX_ALIGN_16 - 1)) & (~(IFX_ALIGN_16 - 1))))
#define Ifx_AlignOn8(Size) ((((Size) + (IFX_ALIGN_8 - 1)) & (~(IFX_ALIGN_8 - 1))))

#define Ifx_COUNTOF(x) (sizeof(x) / sizeof(x[0]))







static inline __attribute__ ((always_inline)) void *__cx_to_addr(uint32 cx)
{
    uint32 seg_nr = Ifx__extru(cx, 16, 4);
    return (void *)Ifx__insert(seg_nr << 28, cx, 6, 16);
}






static inline __attribute__ ((always_inline)) uint32 __addr_to_cx(void *addr)
{
    uint32 seg_nr, seg_idx;
    seg_nr = Ifx__extru((int)addr, 28, 4) << 16;
    seg_idx = Ifx__extru((int)addr, 6, 16);
    return seg_nr | seg_idx;
}



static inline __attribute__ ((always_inline)) void __ldmst_c(volatile void *address, unsigned mask, unsigned value)
{
    *(volatile uint32 *)address = (*(volatile uint32 *)address & ~(mask)) | (mask & value);
}




static inline __attribute__ ((always_inline)) uint32 __ld32(void *addr)
{
    return *(volatile uint32 *)addr;
}




static inline __attribute__ ((always_inline)) void __st32(void *addr, uint32 value)
{
    *(volatile uint32 *)addr = value;
}




static inline __attribute__ ((always_inline)) uint64 __ld64(void *addr)
{
    return *(volatile uint64 *)addr;
}




static inline __attribute__ ((always_inline)) void __st64(void *addr, uint64 value)
{
    *(volatile uint64 *)addr = value;
}




static inline __attribute__ ((always_inline)) void __ld64_lu(void *addr, uint32 *valueLower, uint32 *valueUpper)
{
    register uint64 value;
    value = __ld64(addr);
    *valueLower = (uint32)value;
    *valueUpper = (uint32)(value >> 32);
}




static inline __attribute__ ((always_inline)) void __st64_lu(void *addr, uint32 valueLower, uint32 valueUpper)
{
    register uint64 value = ((uint64)valueUpper << 32) | valueLower;
    __st64(addr, value);
}
# 71 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 2 3







#define IFXSCUWDT_ENDINIT_WAIT_TIMEOUTCOUNT (0x100)
# 88 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 3
typedef struct
{
    uint16 password;
    uint16 reload;
    IfxScu_WDTCON1_IR inputFrequency;
    boolean disableWatchdog;
    boolean enableSmuRestriction;
    boolean enableAutomaticPasswordChange;
    boolean enableTimerCheck;
    boolean enableTimerCheckTolerance;
    boolean clrInternalResetFlag;
} IfxScuWdt_Config;
# 115 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 3
extern void IfxScuWdt_initConfig(IfxScuWdt_Config *config);
# 128 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 3
extern void IfxScuWdt_initCpuWatchdog(Ifx_SCU_WDTCPU *wdt, const IfxScuWdt_Config *config);
# 141 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 3
extern void IfxScuWdt_initSafetyWatchdog(Ifx_SCU_WDTS *wdt, const IfxScuWdt_Config *config);
# 164 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 3
static inline __attribute__ ((always_inline)) void IfxScuWdt_clearCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, uint16 password);
# 177 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 3
static inline __attribute__ ((always_inline)) void IfxScuWdt_clearSafetyEndinitInline(uint16 password);
# 189 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 3
static inline __attribute__ ((always_inline)) void IfxScuWdt_setCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, uint16 password);
# 200 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 3
static inline __attribute__ ((always_inline)) void IfxScuWdt_setSafetyEndinitInline(uint16 password);
# 216 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 3
extern void IfxScuWdt_clearCpuEndinit(uint16 password);
# 228 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 3
extern void IfxScuWdt_clearSafetyEndinit(uint16 password);
# 238 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 3
extern void IfxScuWdt_setCpuEndinit(uint16 password);
# 248 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 3
extern void IfxScuWdt_setSafetyEndinit(uint16 password);
# 268 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 3
static inline __attribute__ ((always_inline)) uint16 IfxScuWdt_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog);





static inline __attribute__ ((always_inline)) boolean IfxScuWdt_getCpuWatchdogEndInitInline(Ifx_SCU_WDTCPU *watchdog);




static inline __attribute__ ((always_inline)) boolean IfxScuWdt_getSafetyWatchdogEndInit(void);
# 289 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 3
static inline __attribute__ ((always_inline)) uint16 IfxScuWdt_getSafetyWatchdogPasswordInline(void);
# 303 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 3
extern void IfxScuWdt_changeCpuWatchdogPassword(uint16 password, uint16 newPassword);
# 314 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 3
extern void IfxScuWdt_changeCpuWatchdogReload(uint16 password, uint16 reload);
# 324 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 3
extern void IfxScuWdt_changeSafetyWatchdogPassword(uint16 password, uint16 newPassword);
# 335 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 3
extern void IfxScuWdt_changeSafetyWatchdogReload(uint16 password, uint16 reload);
# 345 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 3
extern void IfxScuWdt_disableCpuWatchdog(uint16 password);
# 355 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 3
extern void IfxScuWdt_disableSafetyWatchdog(uint16 password);
# 365 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 3
extern void IfxScuWdt_enableCpuWatchdog(uint16 password);
# 375 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 3
extern void IfxScuWdt_enableSafetyWatchdog(uint16 password);
# 384 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 3
extern uint16 IfxScuWdt_getCpuWatchdogPassword(void);




extern boolean IfxScuWdt_getCpuWatchdogEndInit(void);
# 398 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 3
extern uint16 IfxScuWdt_getSafetyWatchdogPassword(void);
# 408 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 3
extern void IfxScuWdt_serviceCpuWatchdog(uint16 password);
# 418 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 3
extern void IfxScuWdt_serviceSafetyWatchdog(uint16 password);
# 430 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuwdt.h" 3
extern boolean IfxScuWdt_enableWatchdogWithDebugger(void);





static inline __attribute__ ((always_inline)) void IfxScuWdt_clearCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, uint16 password)
{
    if (watchdog->CON0.B.LCK)
    {

        watchdog->CON0.U = (1 << (0u)) |
                           (0 << (1u)) |
                           (password << (2u)) |
                           (watchdog->CON0.B.REL << (16u));
    }


    watchdog->CON0.U = (0 << (0u)) |
                       (1 << (1u)) |
                       (password << (2u)) |
                       (watchdog->CON0.B.REL << (16u));


    while (watchdog->CON0.B.ENDINIT == 1)
    {}
}


static inline __attribute__ ((always_inline)) void IfxScuWdt_clearSafetyEndinitInline(uint16 password)
{
    if ((*(volatile Ifx_SCU_WDTS_CON0*)0xF00360F0u).B.LCK)
    {

        (*(volatile Ifx_SCU_WDTS_CON0*)0xF00360F0u).U = (1 << (0u)) |
                          (0 << (1u)) |
                          (password << (2u)) |
                          ((*(volatile Ifx_SCU_WDTS_CON0*)0xF00360F0u).B.REL << (16u));
    }


    (*(volatile Ifx_SCU_WDTS_CON0*)0xF00360F0u).U = (0 << (0u)) |
                      (1 << (1u)) |
                      (password << (2u)) |
                      ((*(volatile Ifx_SCU_WDTS_CON0*)0xF00360F0u).B.REL << (16u));


    while ((*(volatile Ifx_SCU_WDTS_CON0*)0xF00360F0u).B.ENDINIT == 1)
    {}
}


static inline __attribute__ ((always_inline)) uint16 IfxScuWdt_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog)
{
    uint16 password;




    password = watchdog->CON0.B.PW;
    password ^= 0x003F;

    return password;
}


static inline __attribute__ ((always_inline)) boolean IfxScuWdt_getCpuWatchdogEndInitInline(Ifx_SCU_WDTCPU *watchdog)
{
    return (boolean)watchdog->CON0.B.ENDINIT;
}


static inline __attribute__ ((always_inline)) boolean IfxScuWdt_getSafetyWatchdogEndInit(void)
{
    return (boolean)(*(Ifx_SCU*)0xF0036000u).WDTS.CON0.B.ENDINIT;
}


static inline __attribute__ ((always_inline)) uint16 IfxScuWdt_getSafetyWatchdogPasswordInline(void)
{
    uint16 password;
    Ifx_SCU_WDTS *watchdog = &(*(Ifx_SCU*)0xF0036000u).WDTS;




    password = watchdog->CON0.B.PW;
    password ^= 0x003F;

    return password;
}


static inline __attribute__ ((always_inline)) void IfxScuWdt_setCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, uint16 password)
{
    if (watchdog->CON0.B.LCK)
    {

        watchdog->CON0.U = (1 << (0u)) |
                           (0 << (1u)) |
                           (password << (2u)) |
                           (watchdog->CON0.B.REL << (16u));
    }


    watchdog->CON0.U = (1 << (0u)) |
                       (1 << (1u)) |
                       (password << (2u)) |
                       (watchdog->CON0.B.REL << (16u));


    while (watchdog->CON0.B.ENDINIT == 0)
    {}
}


static inline __attribute__ ((always_inline)) void IfxScuWdt_setSafetyEndinitInline(uint16 password)
{
    if ((*(volatile Ifx_SCU_WDTS_CON0*)0xF00360F0u).B.LCK)
    {

        (*(volatile Ifx_SCU_WDTS_CON0*)0xF00360F0u).U = (1 << (0u)) |
                          (0 << (1u)) |
                          (password << (2u)) |
                          ((*(volatile Ifx_SCU_WDTS_CON0*)0xF00360F0u).B.REL << (16u));
    }


    (*(volatile Ifx_SCU_WDTS_CON0*)0xF00360F0u).U = (1 << (0u)) |
                      (1 << (1u)) |
                      (password << (2u)) |
                      ((*(volatile Ifx_SCU_WDTS_CON0*)0xF00360F0u).B.REL << (16u));


    while ((*(volatile Ifx_SCU_WDTS_CON0*)0xF00360F0u).B.ENDINIT == 0)
    {}
}
# 50 "C:\\RTDRUI~1\\TC275_~1\\bsw\\IfxScuWdt.c" 2
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 1 3
# 63 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 3
#define IFXCPU_H 1





# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu_cfg.h" 1 3
# 50 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu_cfg.h" 3
#define IFXCPU_CFG_H 1






# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCpu_reg.h" 1 3
# 52 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCpu_reg.h" 3
#define IFXCPU_REG_H 1

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCpu_regdef.h" 1 3
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCpu_regdef.h" 3
#define IFXCPU_REGDEF_H 1







typedef struct _Ifx_CPU_A_Bits
{
    volatile unsigned int ADDR:32;
} Ifx_CPU_A_Bits;


typedef struct _Ifx_CPU_BIV_Bits
{
    volatile unsigned int VSS:1;
    volatile unsigned int BIV:31;
} Ifx_CPU_BIV_Bits;


typedef struct _Ifx_CPU_BTV_Bits
{
    volatile unsigned int reserved_0:1;
    volatile unsigned int BTV:31;
} Ifx_CPU_BTV_Bits;


typedef struct _Ifx_CPU_CCNT_Bits
{
    volatile unsigned int CountValue:31;
    volatile unsigned int SOvf:1;
} Ifx_CPU_CCNT_Bits;


typedef struct _Ifx_CPU_CCTRL_Bits
{
    volatile unsigned int CM:1;
    volatile unsigned int CE:1;
    volatile unsigned int M1:3;
    volatile unsigned int M2:3;
    volatile unsigned int M3:3;
    volatile unsigned int reserved_11:21;
} Ifx_CPU_CCTRL_Bits;


typedef struct _Ifx_CPU_COMPAT_Bits
{
    volatile unsigned int reserved_0:3;
    volatile unsigned int RM:1;
    volatile unsigned int SP:1;
    volatile unsigned int reserved_5:27;
} Ifx_CPU_COMPAT_Bits;


typedef struct _Ifx_CPU_CORE_ID_Bits
{
    volatile unsigned int CORE_ID:3;
    volatile unsigned int reserved_3:29;
} Ifx_CPU_CORE_ID_Bits;


typedef struct _Ifx_CPU_CPR_L_Bits
{
    volatile unsigned int reserved_0:3;
    volatile unsigned int LOWBND:29;
} Ifx_CPU_CPR_L_Bits;


typedef struct _Ifx_CPU_CPR_U_Bits
{
    volatile unsigned int reserved_0:3;
    volatile unsigned int UPPBND:29;
} Ifx_CPU_CPR_U_Bits;


typedef struct _Ifx_CPU_CPU_ID_Bits
{
    volatile unsigned int MOD_REV:8;
    volatile unsigned int MOD_32B:8;
    volatile unsigned int MOD:16;
} Ifx_CPU_CPU_ID_Bits;


typedef struct _Ifx_CPU_CPXE_Bits
{
    volatile unsigned int XE:8;
    volatile unsigned int reserved_8:24;
} Ifx_CPU_CPXE_Bits;


typedef struct _Ifx_CPU_CREVT_Bits
{
    volatile unsigned int EVTA:3;
    volatile unsigned int BBM:1;
    volatile unsigned int BOD:1;
    volatile unsigned int SUSP:1;
    volatile unsigned int CNT:2;
    volatile unsigned int reserved_8:24;
} Ifx_CPU_CREVT_Bits;


typedef struct _Ifx_CPU_CUS_ID_Bits
{
    volatile unsigned int CID:3;
    volatile unsigned int reserved_3:29;
} Ifx_CPU_CUS_ID_Bits;


typedef struct _Ifx_CPU_D_Bits
{
    volatile unsigned int DATA:32;
} Ifx_CPU_D_Bits;


typedef struct _Ifx_CPU_DATR_Bits
{
    volatile unsigned int reserved_0:3;
    volatile unsigned int SBE:1;
    volatile unsigned int reserved_4:5;
    volatile unsigned int CWE:1;
    volatile unsigned int CFE:1;
    volatile unsigned int reserved_11:3;
    volatile unsigned int SOE:1;
    volatile unsigned int SME:1;
    volatile unsigned int reserved_16:16;
} Ifx_CPU_DATR_Bits;


typedef struct _Ifx_CPU_DBGSR_Bits
{
    volatile unsigned int DE:1;
    volatile unsigned int HALT:2;
    volatile unsigned int SIH:1;
    volatile unsigned int SUSP:1;
    volatile unsigned int reserved_5:1;
    volatile unsigned int PREVSUSP:1;
    volatile unsigned int PEVT:1;
    volatile unsigned int EVTSRC:5;
    volatile unsigned int reserved_13:19;
} Ifx_CPU_DBGSR_Bits;


typedef struct _Ifx_CPU_DBGTCR_Bits
{
    volatile unsigned int DTA:1;
    volatile unsigned int reserved_1:31;
} Ifx_CPU_DBGTCR_Bits;


typedef struct _Ifx_CPU_DCON0_Bits
{
    volatile unsigned int reserved_0:1;
    volatile unsigned int DCBYP:1;
    volatile unsigned int reserved_2:30;
} Ifx_CPU_DCON0_Bits;


typedef struct _Ifx_CPU_DCON2_Bits
{
    volatile unsigned int DCACHE_SZE:16;
    volatile unsigned int DSCRATCH_SZE:16;
} Ifx_CPU_DCON2_Bits;


typedef struct _Ifx_CPU_DCX_Bits
{
    volatile unsigned int reserved_0:6;
    volatile unsigned int DCXValue:26;
} Ifx_CPU_DCX_Bits;


typedef struct _Ifx_CPU_DEADD_Bits
{
    volatile unsigned int ERROR_ADDRESS:32;
} Ifx_CPU_DEADD_Bits;


typedef struct _Ifx_CPU_DIEAR_Bits
{
    volatile unsigned int TA:32;
} Ifx_CPU_DIEAR_Bits;


typedef struct _Ifx_CPU_DIETR_Bits
{
    volatile unsigned int IED:1;
    volatile unsigned int IE_T:1;
    volatile unsigned int IE_C:1;
    volatile unsigned int IE_S:1;
    volatile unsigned int IE_BI:1;
    volatile unsigned int E_INFO:6;
    volatile unsigned int IE_DUAL:1;
    volatile unsigned int IE_SP:1;
    volatile unsigned int IE_BS:1;
    volatile unsigned int reserved_14:18;
} Ifx_CPU_DIETR_Bits;


typedef struct _Ifx_CPU_DMS_Bits
{
    volatile unsigned int reserved_0:1;
    volatile unsigned int DMSValue:31;
} Ifx_CPU_DMS_Bits;


typedef struct _Ifx_CPU_DPR_L_Bits
{
    volatile unsigned int reserved_0:3;
    volatile unsigned int LOWBND:29;
} Ifx_CPU_DPR_L_Bits;


typedef struct _Ifx_CPU_DPR_U_Bits
{
    volatile unsigned int reserved_0:3;
    volatile unsigned int UPPBND:29;
} Ifx_CPU_DPR_U_Bits;


typedef struct _Ifx_CPU_DPRE_Bits
{
    volatile unsigned int RE:16;
    volatile unsigned int reserved_16:16;
} Ifx_CPU_DPRE_Bits;


typedef struct _Ifx_CPU_DPWE_Bits
{
    volatile unsigned int WE:16;
    volatile unsigned int reserved_16:16;
} Ifx_CPU_DPWE_Bits;


typedef struct _Ifx_CPU_DSTR_Bits
{
    volatile unsigned int SRE:1;
    volatile unsigned int GAE:1;
    volatile unsigned int LBE:1;
    volatile unsigned int reserved_3:3;
    volatile unsigned int CRE:1;
    volatile unsigned int reserved_7:7;
    volatile unsigned int DTME:1;
    volatile unsigned int LOE:1;
    volatile unsigned int SDE:1;
    volatile unsigned int SCE:1;
    volatile unsigned int CAC:1;
    volatile unsigned int MPE:1;
    volatile unsigned int CLE:1;
    volatile unsigned int reserved_21:3;
    volatile unsigned int ALN:1;
    volatile unsigned int reserved_25:7;
} Ifx_CPU_DSTR_Bits;


typedef struct _Ifx_CPU_EXEVT_Bits
{
    volatile unsigned int EVTA:3;
    volatile unsigned int BBM:1;
    volatile unsigned int BOD:1;
    volatile unsigned int SUSP:1;
    volatile unsigned int CNT:2;
    volatile unsigned int reserved_8:24;
} Ifx_CPU_EXEVT_Bits;


typedef struct _Ifx_CPU_FCX_Bits
{
    volatile unsigned int FCXO:16;
    volatile unsigned int FCXS:4;
    volatile unsigned int reserved_20:12;
} Ifx_CPU_FCX_Bits;


typedef struct _Ifx_CPU_FPU_TRAP_CON_Bits
{
    volatile unsigned int TST:1;
    volatile unsigned int TCL:1;
    volatile unsigned int reserved_2:6;
    volatile unsigned int RM:2;
    volatile unsigned int reserved_10:8;
    volatile unsigned int FXE:1;
    volatile unsigned int FUE:1;
    volatile unsigned int FZE:1;
    volatile unsigned int FVE:1;
    volatile unsigned int FIE:1;
    volatile unsigned int reserved_23:3;
    volatile unsigned int FX:1;
    volatile unsigned int FU:1;
    volatile unsigned int FZ:1;
    volatile unsigned int FV:1;
    volatile unsigned int FI:1;
    volatile unsigned int reserved_31:1;
} Ifx_CPU_FPU_TRAP_CON_Bits;


typedef struct _Ifx_CPU_FPU_TRAP_OPC_Bits
{
    volatile unsigned int OPC:8;
    volatile unsigned int FMT:1;
    volatile unsigned int reserved_9:7;
    volatile unsigned int DREG:4;
    volatile unsigned int reserved_20:12;
} Ifx_CPU_FPU_TRAP_OPC_Bits;


typedef struct _Ifx_CPU_FPU_TRAP_PC_Bits
{
    volatile unsigned int PC:32;
} Ifx_CPU_FPU_TRAP_PC_Bits;


typedef struct _Ifx_CPU_FPU_TRAP_SRC1_Bits
{
    volatile unsigned int SRC1:32;
} Ifx_CPU_FPU_TRAP_SRC1_Bits;


typedef struct _Ifx_CPU_FPU_TRAP_SRC2_Bits
{
    volatile unsigned int SRC2:32;
} Ifx_CPU_FPU_TRAP_SRC2_Bits;


typedef struct _Ifx_CPU_FPU_TRAP_SRC3_Bits
{
    volatile unsigned int SRC3:32;
} Ifx_CPU_FPU_TRAP_SRC3_Bits;


typedef struct _Ifx_CPU_ICNT_Bits
{
    volatile unsigned int CountValue:31;
    volatile unsigned int SOvf:1;
} Ifx_CPU_ICNT_Bits;


typedef struct _Ifx_CPU_ICR_Bits
{
    volatile unsigned int CCPN:10;
    volatile unsigned int reserved_10:5;
    volatile unsigned int IE:1;
    volatile unsigned int PIPN:10;
    volatile unsigned int reserved_26:6;
} Ifx_CPU_ICR_Bits;


typedef struct _Ifx_CPU_ISP_Bits
{
    volatile unsigned int ISP:32;
} Ifx_CPU_ISP_Bits;


typedef struct _Ifx_CPU_LCX_Bits
{
    volatile unsigned int LCXO:16;
    volatile unsigned int LCXS:4;
    volatile unsigned int reserved_20:12;
} Ifx_CPU_LCX_Bits;


typedef struct _Ifx_CPU_M1CNT_Bits
{
    volatile unsigned int CountValue:31;
    volatile unsigned int SOvf:1;
} Ifx_CPU_M1CNT_Bits;


typedef struct _Ifx_CPU_M2CNT_Bits
{
    volatile unsigned int CountValue:31;
    volatile unsigned int SOvf:1;
} Ifx_CPU_M2CNT_Bits;


typedef struct _Ifx_CPU_M3CNT_Bits
{
    volatile unsigned int CountValue:31;
    volatile unsigned int SOvf:1;
} Ifx_CPU_M3CNT_Bits;


typedef struct _Ifx_CPU_PC_Bits
{
    volatile unsigned int reserved_0:1;
    volatile unsigned int PC:31;
} Ifx_CPU_PC_Bits;


typedef struct _Ifx_CPU_PCON0_Bits
{
    volatile unsigned int reserved_0:1;
    volatile unsigned int PCBYP:1;
    volatile unsigned int reserved_2:30;
} Ifx_CPU_PCON0_Bits;


typedef struct _Ifx_CPU_PCON1_Bits
{
    volatile unsigned int PCINV:1;
    volatile unsigned int PBINV:1;
    volatile unsigned int reserved_2:30;
} Ifx_CPU_PCON1_Bits;


typedef struct _Ifx_CPU_PCON2_Bits
{
    volatile unsigned int PCACHE_SZE:16;
    volatile unsigned int PSCRATCH_SZE:16;
} Ifx_CPU_PCON2_Bits;


typedef struct _Ifx_CPU_PCXI_Bits
{
    volatile unsigned int PCXO:16;
    volatile unsigned int PCXS:4;
    volatile unsigned int UL:1;
    volatile unsigned int PIE:1;
    volatile unsigned int PCPN:10;
} Ifx_CPU_PCXI_Bits;


typedef struct _Ifx_CPU_PIEAR_Bits
{
    volatile unsigned int TA:32;
} Ifx_CPU_PIEAR_Bits;


typedef struct _Ifx_CPU_PIETR_Bits
{
    volatile unsigned int IED:1;
    volatile unsigned int IE_T:1;
    volatile unsigned int IE_C:1;
    volatile unsigned int IE_S:1;
    volatile unsigned int IE_BI:1;
    volatile unsigned int E_INFO:6;
    volatile unsigned int IE_DUAL:1;
    volatile unsigned int IE_SP:1;
    volatile unsigned int IE_BS:1;
    volatile unsigned int reserved_14:18;
} Ifx_CPU_PIETR_Bits;


typedef struct _Ifx_CPU_PMA0_Bits
{
    volatile unsigned int reserved_0:13;
    volatile unsigned int DAC:3;
    volatile unsigned int reserved_16:16;
} Ifx_CPU_PMA0_Bits;


typedef struct _Ifx_CPU_PMA1_Bits
{
    volatile unsigned int reserved_0:14;
    volatile unsigned int CAC:2;
    volatile unsigned int reserved_16:16;
} Ifx_CPU_PMA1_Bits;


typedef struct _Ifx_CPU_PMA2_Bits
{
    volatile unsigned int PSI:16;
    volatile unsigned int reserved_16:16;
} Ifx_CPU_PMA2_Bits;


typedef struct _Ifx_CPU_PSTR_Bits
{
    volatile unsigned int FRE:1;
    volatile unsigned int reserved_1:1;
    volatile unsigned int FBE:1;
    volatile unsigned int reserved_3:9;
    volatile unsigned int FPE:1;
    volatile unsigned int reserved_13:1;
    volatile unsigned int FME:1;
    volatile unsigned int reserved_15:17;
} Ifx_CPU_PSTR_Bits;


typedef struct _Ifx_CPU_PSW_Bits
{
    volatile unsigned int CDC:7;
    volatile unsigned int CDE:1;
    volatile unsigned int GW:1;
    volatile unsigned int IS:1;
    volatile unsigned int IO:2;
    volatile unsigned int PRS:2;
    volatile unsigned int S:1;
    volatile unsigned int reserved_15:12;
    volatile unsigned int SAV:1;
    volatile unsigned int AV:1;
    volatile unsigned int SV:1;
    volatile unsigned int V:1;
    volatile unsigned int C:1;
} Ifx_CPU_PSW_Bits;


typedef struct _Ifx_CPU_SEGEN_Bits
{
    volatile unsigned int ADFLIP:8;
    volatile unsigned int ADTYPE:2;
    volatile unsigned int reserved_10:21;
    volatile unsigned int AE:1;
} Ifx_CPU_SEGEN_Bits;


typedef struct _Ifx_CPU_SMACON_Bits
{
    volatile unsigned int PC:1;
    volatile unsigned int reserved_1:1;
    volatile unsigned int PT:1;
    volatile unsigned int reserved_3:5;
    volatile unsigned int DC:1;
    volatile unsigned int reserved_9:1;
    volatile unsigned int DT:1;
    volatile unsigned int reserved_11:13;
    volatile unsigned int IODT:1;
    volatile unsigned int reserved_25:7;
} Ifx_CPU_SMACON_Bits;


typedef struct _Ifx_CPU_SPROT_ACCENA_Bits
{
    volatile unsigned int EN:32;
} Ifx_CPU_SPROT_ACCENA_Bits;


typedef struct _Ifx_CPU_SPROT_ACCENB_Bits
{
    volatile unsigned int reserved_0:32;
} Ifx_CPU_SPROT_ACCENB_Bits;


typedef struct _Ifx_CPU_SPROT_RGN_ACCENA_Bits
{
    volatile unsigned int EN:32;
} Ifx_CPU_SPROT_RGN_ACCENA_Bits;


typedef struct _Ifx_CPU_SPROT_RGN_ACCENB_Bits
{
    volatile unsigned int reserved_0:32;
} Ifx_CPU_SPROT_RGN_ACCENB_Bits;


typedef struct _Ifx_CPU_SPROT_RGN_LA_Bits
{
    volatile unsigned int reserved_0:5;
    volatile unsigned int ADDR:27;
} Ifx_CPU_SPROT_RGN_LA_Bits;


typedef struct _Ifx_CPU_SPROT_RGN_UA_Bits
{
    volatile unsigned int reserved_0:5;
    volatile unsigned int ADDR:27;
} Ifx_CPU_SPROT_RGN_UA_Bits;


typedef struct _Ifx_CPU_SWEVT_Bits
{
    volatile unsigned int EVTA:3;
    volatile unsigned int BBM:1;
    volatile unsigned int BOD:1;
    volatile unsigned int SUSP:1;
    volatile unsigned int CNT:2;
    volatile unsigned int reserved_8:24;
} Ifx_CPU_SWEVT_Bits;


typedef struct _Ifx_CPU_SYSCON_Bits
{
    volatile unsigned int FCDSF:1;
    volatile unsigned int PROTEN:1;
    volatile unsigned int TPROTEN:1;
    volatile unsigned int IS:1;
    volatile unsigned int IT:1;
    volatile unsigned int RES:11;
    volatile unsigned int U1_IED:1;
    volatile unsigned int U1_IOS:1;
    volatile unsigned int reserved_18:14;
} Ifx_CPU_SYSCON_Bits;


typedef struct _Ifx_CPU_TASK_ASI_Bits
{
    volatile unsigned int ASI:5;
    volatile unsigned int reserved_5:27;
} Ifx_CPU_TASK_ASI_Bits;


typedef struct _Ifx_CPU_TPS_CON_Bits
{
    volatile unsigned int TEXP0:1;
    volatile unsigned int TEXP1:1;
    volatile unsigned int TEXP2:1;
    volatile unsigned int reserved_3:13;
    volatile unsigned int TTRAP:1;
    volatile unsigned int reserved_17:15;
} Ifx_CPU_TPS_CON_Bits;


typedef struct _Ifx_CPU_TPS_TIMER_Bits
{
    volatile unsigned int Timer:32;
} Ifx_CPU_TPS_TIMER_Bits;


typedef struct _Ifx_CPU_TR_ADR_Bits
{
    volatile unsigned int ADDR:32;
} Ifx_CPU_TR_ADR_Bits;


typedef struct _Ifx_CPU_TR_EVT_Bits
{
    volatile unsigned int EVTA:3;
    volatile unsigned int BBM:1;
    volatile unsigned int BOD:1;
    volatile unsigned int SUSP:1;
    volatile unsigned int CNT:2;
    volatile unsigned int reserved_8:4;
    volatile unsigned int TYP:1;
    volatile unsigned int RNG:1;
    volatile unsigned int reserved_14:1;
    volatile unsigned int ASI_EN:1;
    volatile unsigned int ASI:5;
    volatile unsigned int reserved_21:6;
    volatile unsigned int AST:1;
    volatile unsigned int ALD:1;
    volatile unsigned int reserved_29:3;
} Ifx_CPU_TR_EVT_Bits;


typedef struct _Ifx_CPU_TRIG_ACC_Bits
{
    volatile unsigned int T0:1;
    volatile unsigned int T1:1;
    volatile unsigned int T2:1;
    volatile unsigned int T3:1;
    volatile unsigned int T4:1;
    volatile unsigned int T5:1;
    volatile unsigned int T6:1;
    volatile unsigned int T7:1;
    volatile unsigned int reserved_8:24;
} Ifx_CPU_TRIG_ACC_Bits;







typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_A_Bits B;
} Ifx_CPU_A;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_BIV_Bits B;
} Ifx_CPU_BIV;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_BTV_Bits B;
} Ifx_CPU_BTV;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_CCNT_Bits B;
} Ifx_CPU_CCNT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_CCTRL_Bits B;
} Ifx_CPU_CCTRL;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_COMPAT_Bits B;
} Ifx_CPU_COMPAT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_CORE_ID_Bits B;
} Ifx_CPU_CORE_ID;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_CPR_L_Bits B;
} Ifx_CPU_CPR_L;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_CPR_U_Bits B;
} Ifx_CPU_CPR_U;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_CPU_ID_Bits B;
} Ifx_CPU_CPU_ID;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_CPXE_Bits B;
} Ifx_CPU_CPXE;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_CREVT_Bits B;
} Ifx_CPU_CREVT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_CUS_ID_Bits B;
} Ifx_CPU_CUS_ID;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_D_Bits B;
} Ifx_CPU_D;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_DATR_Bits B;
} Ifx_CPU_DATR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_DBGSR_Bits B;
} Ifx_CPU_DBGSR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_DBGTCR_Bits B;
} Ifx_CPU_DBGTCR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_DCON0_Bits B;
} Ifx_CPU_DCON0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_DCON2_Bits B;
} Ifx_CPU_DCON2;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_DCX_Bits B;
} Ifx_CPU_DCX;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_DEADD_Bits B;
} Ifx_CPU_DEADD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_DIEAR_Bits B;
} Ifx_CPU_DIEAR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_DIETR_Bits B;
} Ifx_CPU_DIETR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_DMS_Bits B;
} Ifx_CPU_DMS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_DPR_L_Bits B;
} Ifx_CPU_DPR_L;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_DPR_U_Bits B;
} Ifx_CPU_DPR_U;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_DPRE_Bits B;
} Ifx_CPU_DPRE;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_DPWE_Bits B;
} Ifx_CPU_DPWE;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_DSTR_Bits B;
} Ifx_CPU_DSTR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_EXEVT_Bits B;
} Ifx_CPU_EXEVT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_FCX_Bits B;
} Ifx_CPU_FCX;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_FPU_TRAP_CON_Bits B;
} Ifx_CPU_FPU_TRAP_CON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_FPU_TRAP_OPC_Bits B;
} Ifx_CPU_FPU_TRAP_OPC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_FPU_TRAP_PC_Bits B;
} Ifx_CPU_FPU_TRAP_PC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_FPU_TRAP_SRC1_Bits B;
} Ifx_CPU_FPU_TRAP_SRC1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_FPU_TRAP_SRC2_Bits B;
} Ifx_CPU_FPU_TRAP_SRC2;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_FPU_TRAP_SRC3_Bits B;
} Ifx_CPU_FPU_TRAP_SRC3;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_ICNT_Bits B;
} Ifx_CPU_ICNT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_ICR_Bits B;
} Ifx_CPU_ICR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_ISP_Bits B;
} Ifx_CPU_ISP;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_LCX_Bits B;
} Ifx_CPU_LCX;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_M1CNT_Bits B;
} Ifx_CPU_M1CNT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_M2CNT_Bits B;
} Ifx_CPU_M2CNT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_M3CNT_Bits B;
} Ifx_CPU_M3CNT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_PC_Bits B;
} Ifx_CPU_PC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_PCON0_Bits B;
} Ifx_CPU_PCON0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_PCON1_Bits B;
} Ifx_CPU_PCON1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_PCON2_Bits B;
} Ifx_CPU_PCON2;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_PCXI_Bits B;
} Ifx_CPU_PCXI;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_PIEAR_Bits B;
} Ifx_CPU_PIEAR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_PIETR_Bits B;
} Ifx_CPU_PIETR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_PMA0_Bits B;
} Ifx_CPU_PMA0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_PMA1_Bits B;
} Ifx_CPU_PMA1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_PMA2_Bits B;
} Ifx_CPU_PMA2;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_PSTR_Bits B;
} Ifx_CPU_PSTR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_PSW_Bits B;
} Ifx_CPU_PSW;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_SEGEN_Bits B;
} Ifx_CPU_SEGEN;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_SMACON_Bits B;
} Ifx_CPU_SMACON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_SPROT_ACCENA_Bits B;
} Ifx_CPU_SPROT_ACCENA;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_SPROT_ACCENB_Bits B;
} Ifx_CPU_SPROT_ACCENB;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_SPROT_RGN_ACCENA_Bits B;
} Ifx_CPU_SPROT_RGN_ACCENA;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_SPROT_RGN_ACCENB_Bits B;
} Ifx_CPU_SPROT_RGN_ACCENB;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_SPROT_RGN_LA_Bits B;
} Ifx_CPU_SPROT_RGN_LA;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_SPROT_RGN_UA_Bits B;
} Ifx_CPU_SPROT_RGN_UA;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_SWEVT_Bits B;
} Ifx_CPU_SWEVT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_SYSCON_Bits B;
} Ifx_CPU_SYSCON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_TASK_ASI_Bits B;
} Ifx_CPU_TASK_ASI;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_TPS_CON_Bits B;
} Ifx_CPU_TPS_CON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_TPS_TIMER_Bits B;
} Ifx_CPU_TPS_TIMER;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_TR_ADR_Bits B;
} Ifx_CPU_TR_ADR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_TR_EVT_Bits B;
} Ifx_CPU_TR_EVT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_CPU_TRIG_ACC_Bits B;
} Ifx_CPU_TRIG_ACC;
# 1274 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCpu_regdef.h" 3
typedef volatile struct _Ifx_CPU_CPR
{
    Ifx_CPU_CPR_L L;
    Ifx_CPU_CPR_U U;
} Ifx_CPU_CPR;


typedef volatile struct _Ifx_CPU_DPR
{
    Ifx_CPU_DPR_L L;
    Ifx_CPU_DPR_U U;
} Ifx_CPU_DPR;


typedef volatile struct _Ifx_CPU_SPROT_RGN
{
    Ifx_CPU_SPROT_RGN_LA LA;
    Ifx_CPU_SPROT_RGN_UA UA;
    Ifx_CPU_SPROT_RGN_ACCENA ACCENA;
    Ifx_CPU_SPROT_RGN_ACCENB ACCENB;
} Ifx_CPU_SPROT_RGN;


typedef volatile struct _Ifx_CPU_TPS
{
    Ifx_CPU_TPS_CON CON;
    Ifx_CPU_TPS_TIMER TIMER[3];
} Ifx_CPU_TPS;


typedef volatile struct _Ifx_CPU_TR
{
    Ifx_CPU_TR_EVT EVT;
    Ifx_CPU_TR_ADR ADR;
} Ifx_CPU_TR;
# 1321 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCpu_regdef.h" 3
typedef volatile struct _Ifx_CPU
{
    unsigned char reserved_0[4144];
    Ifx_CPU_SEGEN SEGEN;
    unsigned char reserved_1034[28624];
    Ifx_CPU_TASK_ASI TASK_ASI;
    unsigned char reserved_8008[248];
    Ifx_CPU_PMA0 PMA0;
    Ifx_CPU_PMA1 PMA1;
    Ifx_CPU_PMA2 PMA2;
    unsigned char reserved_810C[3828];
    Ifx_CPU_DCON2 DCON2;
    unsigned char reserved_9004[8];
    Ifx_CPU_SMACON SMACON;
    Ifx_CPU_DSTR DSTR;
    unsigned char reserved_9014[4];
    Ifx_CPU_DATR DATR;
    Ifx_CPU_DEADD DEADD;
    Ifx_CPU_DIEAR DIEAR;
    Ifx_CPU_DIETR DIETR;
    unsigned char reserved_9028[24];
    Ifx_CPU_DCON0 DCON0;
    unsigned char reserved_9044[444];
    Ifx_CPU_PSTR PSTR;
    Ifx_CPU_PCON1 PCON1;
    Ifx_CPU_PCON2 PCON2;
    Ifx_CPU_PCON0 PCON0;
    Ifx_CPU_PIEAR PIEAR;
    Ifx_CPU_PIETR PIETR;
    unsigned char reserved_9218[488];
    Ifx_CPU_COMPAT COMPAT;
    unsigned char reserved_9404[3068];
    Ifx_CPU_FPU_TRAP_CON FPU_TRAP_CON;
    Ifx_CPU_FPU_TRAP_PC FPU_TRAP_PC;
    Ifx_CPU_FPU_TRAP_OPC FPU_TRAP_OPC;
    unsigned char reserved_A00C[4];
    Ifx_CPU_FPU_TRAP_SRC1 FPU_TRAP_SRC1;
    Ifx_CPU_FPU_TRAP_SRC2 FPU_TRAP_SRC2;
    Ifx_CPU_FPU_TRAP_SRC3 FPU_TRAP_SRC3;
    unsigned char reserved_A01C[8164];
    Ifx_CPU_DPR DPR[16];
    unsigned char reserved_C080[3968];
    Ifx_CPU_CPR CPR[8];
    unsigned char reserved_D040[4032];
    Ifx_CPU_CPXE CPXE[4];
    Ifx_CPU_DPRE DPRE[4];
    Ifx_CPU_DPWE DPWE[4];
    unsigned char reserved_E030[976];
    Ifx_CPU_TPS TPS;
    unsigned char reserved_E410[3056];
    Ifx_CPU_TR TR[8];
    unsigned char reserved_F040[3008];
    Ifx_CPU_CCTRL CCTRL;
    Ifx_CPU_CCNT CCNT;
    Ifx_CPU_ICNT ICNT;
    Ifx_CPU_M1CNT M1CNT;
    Ifx_CPU_M2CNT M2CNT;
    Ifx_CPU_M3CNT M3CNT;
    unsigned char reserved_FC18[232];
    Ifx_CPU_DBGSR DBGSR;
    unsigned char reserved_FD04[4];
    Ifx_CPU_EXEVT EXEVT;
    Ifx_CPU_CREVT CREVT;
    Ifx_CPU_SWEVT SWEVT;
    unsigned char reserved_FD14[28];
    Ifx_CPU_TRIG_ACC TRIG_ACC;
    unsigned char reserved_FD34[12];
    Ifx_CPU_DMS DMS;
    Ifx_CPU_DCX DCX;
    Ifx_CPU_DBGTCR DBGTCR;
    unsigned char reserved_FD4C[180];
    Ifx_CPU_PCXI PCXI;
    Ifx_CPU_PSW PSW;
    Ifx_CPU_PC PC;
    unsigned char reserved_FE0C[8];
    Ifx_CPU_SYSCON SYSCON;
    Ifx_CPU_CPU_ID CPU_ID;
    Ifx_CPU_CORE_ID CORE_ID;
    Ifx_CPU_BIV BIV;
    Ifx_CPU_BTV BTV;
    Ifx_CPU_ISP ISP;
    Ifx_CPU_ICR ICR;
    unsigned char reserved_FE30[8];
    Ifx_CPU_FCX FCX;
    Ifx_CPU_LCX LCX;
    unsigned char reserved_FE40[16];
    Ifx_CPU_CUS_ID CUS_ID;
    unsigned char reserved_FE54[172];
    Ifx_CPU_D D[16];
    unsigned char reserved_FF40[64];
    Ifx_CPU_A A[16];
    unsigned char reserved_FFC0[64];
} Ifx_CPU;


typedef volatile struct _Ifx_CPU_SPROT
{
    unsigned char reserved_0[57344];
    Ifx_CPU_SPROT_RGN RGN[8];
    unsigned char reserved_E080[128];
    Ifx_CPU_SPROT_ACCENA ACCENA;
    Ifx_CPU_SPROT_ACCENB ACCENB;
    unsigned char reserved_E108[7928];
} Ifx_CPU_SPROT;
# 55 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxCpu_reg.h" 2 3





#define MODULE_CPU0 (*(Ifx_CPU*)0xF8810000u)


#define MODULE_CPU0_SPROT (*(Ifx_CPU_SPROT*)0xF8800000u)


#define MODULE_CPU1 (*(Ifx_CPU*)0xF8830000u)


#define MODULE_CPU1_SPROT (*(Ifx_CPU_SPROT*)0xF8820000u)


#define MODULE_CPU2 (*(Ifx_CPU*)0xF8850000u)


#define MODULE_CPU2_SPROT (*(Ifx_CPU_SPROT*)0xF8840000u)







#define CPU0_A0 (*(volatile Ifx_CPU_A*)0xF881FF80u)


#define CPU0_A1 (*(volatile Ifx_CPU_A*)0xF881FF84u)


#define CPU0_A10 (*(volatile Ifx_CPU_A*)0xF881FFA8u)


#define CPU0_A11 (*(volatile Ifx_CPU_A*)0xF881FFACu)


#define CPU0_A12 (*(volatile Ifx_CPU_A*)0xF881FFB0u)


#define CPU0_A13 (*(volatile Ifx_CPU_A*)0xF881FFB4u)


#define CPU0_A14 (*(volatile Ifx_CPU_A*)0xF881FFB8u)


#define CPU0_A15 (*(volatile Ifx_CPU_A*)0xF881FFBCu)


#define CPU0_A2 (*(volatile Ifx_CPU_A*)0xF881FF88u)


#define CPU0_A3 (*(volatile Ifx_CPU_A*)0xF881FF8Cu)


#define CPU0_A4 (*(volatile Ifx_CPU_A*)0xF881FF90u)


#define CPU0_A5 (*(volatile Ifx_CPU_A*)0xF881FF94u)


#define CPU0_A6 (*(volatile Ifx_CPU_A*)0xF881FF98u)


#define CPU0_A7 (*(volatile Ifx_CPU_A*)0xF881FF9Cu)


#define CPU0_A8 (*(volatile Ifx_CPU_A*)0xF881FFA0u)


#define CPU0_A9 (*(volatile Ifx_CPU_A*)0xF881FFA4u)


#define CPU0_BIV (*(volatile Ifx_CPU_BIV*)0xF881FE20u)


#define CPU0_BTV (*(volatile Ifx_CPU_BTV*)0xF881FE24u)


#define CPU0_CCNT (*(volatile Ifx_CPU_CCNT*)0xF881FC04u)


#define CPU0_CCTRL (*(volatile Ifx_CPU_CCTRL*)0xF881FC00u)


#define CPU0_COMPAT (*(volatile Ifx_CPU_COMPAT*)0xF8819400u)


#define CPU0_CORE_ID (*(volatile Ifx_CPU_CORE_ID*)0xF881FE1Cu)


#define CPU0_CPR0_L (*(volatile Ifx_CPU_CPR_L*)0xF881D000u)


#define CPU0_CPR0_U (*(volatile Ifx_CPU_CPR_U*)0xF881D004u)


#define CPU0_CPR1_L (*(volatile Ifx_CPU_CPR_L*)0xF881D008u)


#define CPU0_CPR1_U (*(volatile Ifx_CPU_CPR_U*)0xF881D00Cu)


#define CPU0_CPR2_L (*(volatile Ifx_CPU_CPR_L*)0xF881D010u)


#define CPU0_CPR2_U (*(volatile Ifx_CPU_CPR_U*)0xF881D014u)


#define CPU0_CPR3_L (*(volatile Ifx_CPU_CPR_L*)0xF881D018u)


#define CPU0_CPR3_U (*(volatile Ifx_CPU_CPR_U*)0xF881D01Cu)


#define CPU0_CPR4_L (*(volatile Ifx_CPU_CPR_L*)0xF881D020u)


#define CPU0_CPR4_U (*(volatile Ifx_CPU_CPR_U*)0xF881D024u)


#define CPU0_CPR5_L (*(volatile Ifx_CPU_CPR_L*)0xF881D028u)


#define CPU0_CPR5_U (*(volatile Ifx_CPU_CPR_U*)0xF881D02Cu)


#define CPU0_CPR6_L (*(volatile Ifx_CPU_CPR_L*)0xF881D030u)


#define CPU0_CPR6_U (*(volatile Ifx_CPU_CPR_U*)0xF881D034u)


#define CPU0_CPR7_L (*(volatile Ifx_CPU_CPR_L*)0xF881D038u)


#define CPU0_CPR7_U (*(volatile Ifx_CPU_CPR_U*)0xF881D03Cu)


#define CPU0_CPU_ID (*(volatile Ifx_CPU_CPU_ID*)0xF881FE18u)


#define CPU0_CPXE0 (*(volatile Ifx_CPU_CPXE*)0xF881E000u)




#define CPU0_CPXE_0 (CPU0_CPXE0)


#define CPU0_CPXE1 (*(volatile Ifx_CPU_CPXE*)0xF881E004u)




#define CPU0_CPXE_1 (CPU0_CPXE1)


#define CPU0_CPXE2 (*(volatile Ifx_CPU_CPXE*)0xF881E008u)




#define CPU0_CPXE_2 (CPU0_CPXE2)


#define CPU0_CPXE3 (*(volatile Ifx_CPU_CPXE*)0xF881E00Cu)




#define CPU0_CPXE_3 (CPU0_CPXE3)


#define CPU0_CREVT (*(volatile Ifx_CPU_CREVT*)0xF881FD0Cu)


#define CPU0_CUS_ID (*(volatile Ifx_CPU_CUS_ID*)0xF881FE50u)


#define CPU0_D0 (*(volatile Ifx_CPU_D*)0xF881FF00u)


#define CPU0_D1 (*(volatile Ifx_CPU_D*)0xF881FF04u)


#define CPU0_D10 (*(volatile Ifx_CPU_D*)0xF881FF28u)


#define CPU0_D11 (*(volatile Ifx_CPU_D*)0xF881FF2Cu)


#define CPU0_D12 (*(volatile Ifx_CPU_D*)0xF881FF30u)


#define CPU0_D13 (*(volatile Ifx_CPU_D*)0xF881FF34u)


#define CPU0_D14 (*(volatile Ifx_CPU_D*)0xF881FF38u)


#define CPU0_D15 (*(volatile Ifx_CPU_D*)0xF881FF3Cu)


#define CPU0_D2 (*(volatile Ifx_CPU_D*)0xF881FF08u)


#define CPU0_D3 (*(volatile Ifx_CPU_D*)0xF881FF0Cu)


#define CPU0_D4 (*(volatile Ifx_CPU_D*)0xF881FF10u)


#define CPU0_D5 (*(volatile Ifx_CPU_D*)0xF881FF14u)


#define CPU0_D6 (*(volatile Ifx_CPU_D*)0xF881FF18u)


#define CPU0_D7 (*(volatile Ifx_CPU_D*)0xF881FF1Cu)


#define CPU0_D8 (*(volatile Ifx_CPU_D*)0xF881FF20u)


#define CPU0_D9 (*(volatile Ifx_CPU_D*)0xF881FF24u)


#define CPU0_DATR (*(volatile Ifx_CPU_DATR*)0xF8819018u)


#define CPU0_DBGSR (*(volatile Ifx_CPU_DBGSR*)0xF881FD00u)


#define CPU0_DBGTCR (*(volatile Ifx_CPU_DBGTCR*)0xF881FD48u)


#define CPU0_DCON0 (*(volatile Ifx_CPU_DCON0*)0xF8819040u)


#define CPU0_DCON2 (*(volatile Ifx_CPU_DCON2*)0xF8819000u)


#define CPU0_DCX (*(volatile Ifx_CPU_DCX*)0xF881FD44u)


#define CPU0_DEADD (*(volatile Ifx_CPU_DEADD*)0xF881901Cu)


#define CPU0_DIEAR (*(volatile Ifx_CPU_DIEAR*)0xF8819020u)


#define CPU0_DIETR (*(volatile Ifx_CPU_DIETR*)0xF8819024u)


#define CPU0_DMS (*(volatile Ifx_CPU_DMS*)0xF881FD40u)


#define CPU0_DPR0_L (*(volatile Ifx_CPU_DPR_L*)0xF881C000u)


#define CPU0_DPR0_U (*(volatile Ifx_CPU_DPR_U*)0xF881C004u)


#define CPU0_DPR10_L (*(volatile Ifx_CPU_DPR_L*)0xF881C050u)


#define CPU0_DPR10_U (*(volatile Ifx_CPU_DPR_U*)0xF881C054u)


#define CPU0_DPR11_L (*(volatile Ifx_CPU_DPR_L*)0xF881C058u)


#define CPU0_DPR11_U (*(volatile Ifx_CPU_DPR_U*)0xF881C05Cu)


#define CPU0_DPR12_L (*(volatile Ifx_CPU_DPR_L*)0xF881C060u)


#define CPU0_DPR12_U (*(volatile Ifx_CPU_DPR_U*)0xF881C064u)


#define CPU0_DPR13_L (*(volatile Ifx_CPU_DPR_L*)0xF881C068u)


#define CPU0_DPR13_U (*(volatile Ifx_CPU_DPR_U*)0xF881C06Cu)


#define CPU0_DPR14_L (*(volatile Ifx_CPU_DPR_L*)0xF881C070u)


#define CPU0_DPR14_U (*(volatile Ifx_CPU_DPR_U*)0xF881C074u)


#define CPU0_DPR15_L (*(volatile Ifx_CPU_DPR_L*)0xF881C078u)


#define CPU0_DPR15_U (*(volatile Ifx_CPU_DPR_U*)0xF881C07Cu)


#define CPU0_DPR1_L (*(volatile Ifx_CPU_DPR_L*)0xF881C008u)


#define CPU0_DPR1_U (*(volatile Ifx_CPU_DPR_U*)0xF881C00Cu)


#define CPU0_DPR2_L (*(volatile Ifx_CPU_DPR_L*)0xF881C010u)


#define CPU0_DPR2_U (*(volatile Ifx_CPU_DPR_U*)0xF881C014u)


#define CPU0_DPR3_L (*(volatile Ifx_CPU_DPR_L*)0xF881C018u)


#define CPU0_DPR3_U (*(volatile Ifx_CPU_DPR_U*)0xF881C01Cu)


#define CPU0_DPR4_L (*(volatile Ifx_CPU_DPR_L*)0xF881C020u)


#define CPU0_DPR4_U (*(volatile Ifx_CPU_DPR_U*)0xF881C024u)


#define CPU0_DPR5_L (*(volatile Ifx_CPU_DPR_L*)0xF881C028u)


#define CPU0_DPR5_U (*(volatile Ifx_CPU_DPR_U*)0xF881C02Cu)


#define CPU0_DPR6_L (*(volatile Ifx_CPU_DPR_L*)0xF881C030u)


#define CPU0_DPR6_U (*(volatile Ifx_CPU_DPR_U*)0xF881C034u)


#define CPU0_DPR7_L (*(volatile Ifx_CPU_DPR_L*)0xF881C038u)


#define CPU0_DPR7_U (*(volatile Ifx_CPU_DPR_U*)0xF881C03Cu)


#define CPU0_DPR8_L (*(volatile Ifx_CPU_DPR_L*)0xF881C040u)


#define CPU0_DPR8_U (*(volatile Ifx_CPU_DPR_U*)0xF881C044u)


#define CPU0_DPR9_L (*(volatile Ifx_CPU_DPR_L*)0xF881C048u)


#define CPU0_DPR9_U (*(volatile Ifx_CPU_DPR_U*)0xF881C04Cu)


#define CPU0_DPRE0 (*(volatile Ifx_CPU_DPRE*)0xF881E010u)




#define CPU0_DPRE_0 (CPU0_DPRE0)


#define CPU0_DPRE1 (*(volatile Ifx_CPU_DPRE*)0xF881E014u)




#define CPU0_DPRE_1 (CPU0_DPRE1)


#define CPU0_DPRE2 (*(volatile Ifx_CPU_DPRE*)0xF881E018u)




#define CPU0_DPRE_2 (CPU0_DPRE2)


#define CPU0_DPRE3 (*(volatile Ifx_CPU_DPRE*)0xF881E01Cu)




#define CPU0_DPRE_3 (CPU0_DPRE3)


#define CPU0_DPWE0 (*(volatile Ifx_CPU_DPWE*)0xF881E020u)




#define CPU0_DPWE_0 (CPU0_DPWE0)


#define CPU0_DPWE1 (*(volatile Ifx_CPU_DPWE*)0xF881E024u)




#define CPU0_DPWE_1 (CPU0_DPWE1)


#define CPU0_DPWE2 (*(volatile Ifx_CPU_DPWE*)0xF881E028u)




#define CPU0_DPWE_2 (CPU0_DPWE2)


#define CPU0_DPWE3 (*(volatile Ifx_CPU_DPWE*)0xF881E02Cu)




#define CPU0_DPWE_3 (CPU0_DPWE3)


#define CPU0_DSTR (*(volatile Ifx_CPU_DSTR*)0xF8819010u)


#define CPU0_EXEVT (*(volatile Ifx_CPU_EXEVT*)0xF881FD08u)


#define CPU0_FCX (*(volatile Ifx_CPU_FCX*)0xF881FE38u)


#define CPU0_FPU_TRAP_CON (*(volatile Ifx_CPU_FPU_TRAP_CON*)0xF881A000u)


#define CPU0_FPU_TRAP_OPC (*(volatile Ifx_CPU_FPU_TRAP_OPC*)0xF881A008u)


#define CPU0_FPU_TRAP_PC (*(volatile Ifx_CPU_FPU_TRAP_PC*)0xF881A004u)


#define CPU0_FPU_TRAP_SRC1 (*(volatile Ifx_CPU_FPU_TRAP_SRC1*)0xF881A010u)


#define CPU0_FPU_TRAP_SRC2 (*(volatile Ifx_CPU_FPU_TRAP_SRC2*)0xF881A014u)


#define CPU0_FPU_TRAP_SRC3 (*(volatile Ifx_CPU_FPU_TRAP_SRC3*)0xF881A018u)


#define CPU0_ICNT (*(volatile Ifx_CPU_ICNT*)0xF881FC08u)


#define CPU0_ICR (*(volatile Ifx_CPU_ICR*)0xF881FE2Cu)


#define CPU0_ISP (*(volatile Ifx_CPU_ISP*)0xF881FE28u)


#define CPU0_LCX (*(volatile Ifx_CPU_LCX*)0xF881FE3Cu)


#define CPU0_M1CNT (*(volatile Ifx_CPU_M1CNT*)0xF881FC0Cu)


#define CPU0_M2CNT (*(volatile Ifx_CPU_M2CNT*)0xF881FC10u)


#define CPU0_M3CNT (*(volatile Ifx_CPU_M3CNT*)0xF881FC14u)


#define CPU0_PC (*(volatile Ifx_CPU_PC*)0xF881FE08u)


#define CPU0_PCON0 (*(volatile Ifx_CPU_PCON0*)0xF881920Cu)


#define CPU0_PCON1 (*(volatile Ifx_CPU_PCON1*)0xF8819204u)


#define CPU0_PCON2 (*(volatile Ifx_CPU_PCON2*)0xF8819208u)


#define CPU0_PCXI (*(volatile Ifx_CPU_PCXI*)0xF881FE00u)


#define CPU0_PIEAR (*(volatile Ifx_CPU_PIEAR*)0xF8819210u)


#define CPU0_PIETR (*(volatile Ifx_CPU_PIETR*)0xF8819214u)


#define CPU0_PMA0 (*(volatile Ifx_CPU_PMA0*)0xF8818100u)


#define CPU0_PMA1 (*(volatile Ifx_CPU_PMA1*)0xF8818104u)


#define CPU0_PMA2 (*(volatile Ifx_CPU_PMA2*)0xF8818108u)


#define CPU0_PSTR (*(volatile Ifx_CPU_PSTR*)0xF8819200u)


#define CPU0_PSW (*(volatile Ifx_CPU_PSW*)0xF881FE04u)


#define CPU0_SEGEN (*(volatile Ifx_CPU_SEGEN*)0xF8811030u)


#define CPU0_SMACON (*(volatile Ifx_CPU_SMACON*)0xF881900Cu)


#define CPU0_SWEVT (*(volatile Ifx_CPU_SWEVT*)0xF881FD10u)


#define CPU0_SYSCON (*(volatile Ifx_CPU_SYSCON*)0xF881FE14u)


#define CPU0_TASK_ASI (*(volatile Ifx_CPU_TASK_ASI*)0xF8818004u)


#define CPU0_TPS_CON (*(volatile Ifx_CPU_TPS_CON*)0xF881E400u)


#define CPU0_TPS_TIMER0 (*(volatile Ifx_CPU_TPS_TIMER*)0xF881E404u)


#define CPU0_TPS_TIMER1 (*(volatile Ifx_CPU_TPS_TIMER*)0xF881E408u)


#define CPU0_TPS_TIMER2 (*(volatile Ifx_CPU_TPS_TIMER*)0xF881E40Cu)


#define CPU0_TR0_ADR (*(volatile Ifx_CPU_TR_ADR*)0xF881F004u)




#define CPU0_TR0ADR (CPU0_TR0_ADR)


#define CPU0_TR0_EVT (*(volatile Ifx_CPU_TR_EVT*)0xF881F000u)




#define CPU0_TR0EVT (CPU0_TR0_EVT)


#define CPU0_TR1_ADR (*(volatile Ifx_CPU_TR_ADR*)0xF881F00Cu)




#define CPU0_TR1ADR (CPU0_TR1_ADR)


#define CPU0_TR1_EVT (*(volatile Ifx_CPU_TR_EVT*)0xF881F008u)




#define CPU0_TR1EVT (CPU0_TR1_EVT)


#define CPU0_TR2_ADR (*(volatile Ifx_CPU_TR_ADR*)0xF881F014u)




#define CPU0_TR2ADR (CPU0_TR2_ADR)


#define CPU0_TR2_EVT (*(volatile Ifx_CPU_TR_EVT*)0xF881F010u)




#define CPU0_TR2EVT (CPU0_TR2_EVT)


#define CPU0_TR3_ADR (*(volatile Ifx_CPU_TR_ADR*)0xF881F01Cu)




#define CPU0_TR3ADR (CPU0_TR3_ADR)


#define CPU0_TR3_EVT (*(volatile Ifx_CPU_TR_EVT*)0xF881F018u)




#define CPU0_TR3EVT (CPU0_TR3_EVT)


#define CPU0_TR4_ADR (*(volatile Ifx_CPU_TR_ADR*)0xF881F024u)




#define CPU0_TR4ADR (CPU0_TR4_ADR)


#define CPU0_TR4_EVT (*(volatile Ifx_CPU_TR_EVT*)0xF881F020u)




#define CPU0_TR4EVT (CPU0_TR4_EVT)


#define CPU0_TR5_ADR (*(volatile Ifx_CPU_TR_ADR*)0xF881F02Cu)




#define CPU0_TR5ADR (CPU0_TR5_ADR)


#define CPU0_TR5_EVT (*(volatile Ifx_CPU_TR_EVT*)0xF881F028u)




#define CPU0_TR5EVT (CPU0_TR5_EVT)


#define CPU0_TR6_ADR (*(volatile Ifx_CPU_TR_ADR*)0xF881F034u)




#define CPU0_TR6ADR (CPU0_TR6_ADR)


#define CPU0_TR6_EVT (*(volatile Ifx_CPU_TR_EVT*)0xF881F030u)




#define CPU0_TR6EVT (CPU0_TR6_EVT)


#define CPU0_TR7_ADR (*(volatile Ifx_CPU_TR_ADR*)0xF881F03Cu)




#define CPU0_TR7ADR (CPU0_TR7_ADR)


#define CPU0_TR7_EVT (*(volatile Ifx_CPU_TR_EVT*)0xF881F038u)




#define CPU0_TR7EVT (CPU0_TR7_EVT)


#define CPU0_TRIG_ACC (*(volatile Ifx_CPU_TRIG_ACC*)0xF881FD30u)







#define CPU1_A0 (*(volatile Ifx_CPU_A*)0xF883FF80u)


#define CPU1_A1 (*(volatile Ifx_CPU_A*)0xF883FF84u)


#define CPU1_A10 (*(volatile Ifx_CPU_A*)0xF883FFA8u)


#define CPU1_A11 (*(volatile Ifx_CPU_A*)0xF883FFACu)


#define CPU1_A12 (*(volatile Ifx_CPU_A*)0xF883FFB0u)


#define CPU1_A13 (*(volatile Ifx_CPU_A*)0xF883FFB4u)


#define CPU1_A14 (*(volatile Ifx_CPU_A*)0xF883FFB8u)


#define CPU1_A15 (*(volatile Ifx_CPU_A*)0xF883FFBCu)


#define CPU1_A2 (*(volatile Ifx_CPU_A*)0xF883FF88u)


#define CPU1_A3 (*(volatile Ifx_CPU_A*)0xF883FF8Cu)


#define CPU1_A4 (*(volatile Ifx_CPU_A*)0xF883FF90u)


#define CPU1_A5 (*(volatile Ifx_CPU_A*)0xF883FF94u)


#define CPU1_A6 (*(volatile Ifx_CPU_A*)0xF883FF98u)


#define CPU1_A7 (*(volatile Ifx_CPU_A*)0xF883FF9Cu)


#define CPU1_A8 (*(volatile Ifx_CPU_A*)0xF883FFA0u)


#define CPU1_A9 (*(volatile Ifx_CPU_A*)0xF883FFA4u)


#define CPU1_BIV (*(volatile Ifx_CPU_BIV*)0xF883FE20u)


#define CPU1_BTV (*(volatile Ifx_CPU_BTV*)0xF883FE24u)


#define CPU1_CCNT (*(volatile Ifx_CPU_CCNT*)0xF883FC04u)


#define CPU1_CCTRL (*(volatile Ifx_CPU_CCTRL*)0xF883FC00u)


#define CPU1_COMPAT (*(volatile Ifx_CPU_COMPAT*)0xF8839400u)


#define CPU1_CORE_ID (*(volatile Ifx_CPU_CORE_ID*)0xF883FE1Cu)


#define CPU1_CPR0_L (*(volatile Ifx_CPU_CPR_L*)0xF883D000u)


#define CPU1_CPR0_U (*(volatile Ifx_CPU_CPR_U*)0xF883D004u)


#define CPU1_CPR1_L (*(volatile Ifx_CPU_CPR_L*)0xF883D008u)


#define CPU1_CPR1_U (*(volatile Ifx_CPU_CPR_U*)0xF883D00Cu)


#define CPU1_CPR2_L (*(volatile Ifx_CPU_CPR_L*)0xF883D010u)


#define CPU1_CPR2_U (*(volatile Ifx_CPU_CPR_U*)0xF883D014u)


#define CPU1_CPR3_L (*(volatile Ifx_CPU_CPR_L*)0xF883D018u)


#define CPU1_CPR3_U (*(volatile Ifx_CPU_CPR_U*)0xF883D01Cu)


#define CPU1_CPR4_L (*(volatile Ifx_CPU_CPR_L*)0xF883D020u)


#define CPU1_CPR4_U (*(volatile Ifx_CPU_CPR_U*)0xF883D024u)


#define CPU1_CPR5_L (*(volatile Ifx_CPU_CPR_L*)0xF883D028u)


#define CPU1_CPR5_U (*(volatile Ifx_CPU_CPR_U*)0xF883D02Cu)


#define CPU1_CPR6_L (*(volatile Ifx_CPU_CPR_L*)0xF883D030u)


#define CPU1_CPR6_U (*(volatile Ifx_CPU_CPR_U*)0xF883D034u)


#define CPU1_CPR7_L (*(volatile Ifx_CPU_CPR_L*)0xF883D038u)


#define CPU1_CPR7_U (*(volatile Ifx_CPU_CPR_U*)0xF883D03Cu)


#define CPU1_CPU_ID (*(volatile Ifx_CPU_CPU_ID*)0xF883FE18u)


#define CPU1_CPXE0 (*(volatile Ifx_CPU_CPXE*)0xF883E000u)




#define CPU1_CPXE_0 (CPU1_CPXE0)


#define CPU1_CPXE1 (*(volatile Ifx_CPU_CPXE*)0xF883E004u)




#define CPU1_CPXE_1 (CPU1_CPXE1)


#define CPU1_CPXE2 (*(volatile Ifx_CPU_CPXE*)0xF883E008u)




#define CPU1_CPXE_2 (CPU1_CPXE2)


#define CPU1_CPXE3 (*(volatile Ifx_CPU_CPXE*)0xF883E00Cu)




#define CPU1_CPXE_3 (CPU1_CPXE3)


#define CPU1_CREVT (*(volatile Ifx_CPU_CREVT*)0xF883FD0Cu)


#define CPU1_CUS_ID (*(volatile Ifx_CPU_CUS_ID*)0xF883FE50u)


#define CPU1_D0 (*(volatile Ifx_CPU_D*)0xF883FF00u)


#define CPU1_D1 (*(volatile Ifx_CPU_D*)0xF883FF04u)


#define CPU1_D10 (*(volatile Ifx_CPU_D*)0xF883FF28u)


#define CPU1_D11 (*(volatile Ifx_CPU_D*)0xF883FF2Cu)


#define CPU1_D12 (*(volatile Ifx_CPU_D*)0xF883FF30u)


#define CPU1_D13 (*(volatile Ifx_CPU_D*)0xF883FF34u)


#define CPU1_D14 (*(volatile Ifx_CPU_D*)0xF883FF38u)


#define CPU1_D15 (*(volatile Ifx_CPU_D*)0xF883FF3Cu)


#define CPU1_D2 (*(volatile Ifx_CPU_D*)0xF883FF08u)


#define CPU1_D3 (*(volatile Ifx_CPU_D*)0xF883FF0Cu)


#define CPU1_D4 (*(volatile Ifx_CPU_D*)0xF883FF10u)


#define CPU1_D5 (*(volatile Ifx_CPU_D*)0xF883FF14u)


#define CPU1_D6 (*(volatile Ifx_CPU_D*)0xF883FF18u)


#define CPU1_D7 (*(volatile Ifx_CPU_D*)0xF883FF1Cu)


#define CPU1_D8 (*(volatile Ifx_CPU_D*)0xF883FF20u)


#define CPU1_D9 (*(volatile Ifx_CPU_D*)0xF883FF24u)


#define CPU1_DATR (*(volatile Ifx_CPU_DATR*)0xF8839018u)


#define CPU1_DBGSR (*(volatile Ifx_CPU_DBGSR*)0xF883FD00u)


#define CPU1_DBGTCR (*(volatile Ifx_CPU_DBGTCR*)0xF883FD48u)


#define CPU1_DCON0 (*(volatile Ifx_CPU_DCON0*)0xF8839040u)


#define CPU1_DCON2 (*(volatile Ifx_CPU_DCON2*)0xF8839000u)


#define CPU1_DCX (*(volatile Ifx_CPU_DCX*)0xF883FD44u)


#define CPU1_DEADD (*(volatile Ifx_CPU_DEADD*)0xF883901Cu)


#define CPU1_DIEAR (*(volatile Ifx_CPU_DIEAR*)0xF8839020u)


#define CPU1_DIETR (*(volatile Ifx_CPU_DIETR*)0xF8839024u)


#define CPU1_DMS (*(volatile Ifx_CPU_DMS*)0xF883FD40u)


#define CPU1_DPR0_L (*(volatile Ifx_CPU_DPR_L*)0xF883C000u)


#define CPU1_DPR0_U (*(volatile Ifx_CPU_DPR_U*)0xF883C004u)


#define CPU1_DPR10_L (*(volatile Ifx_CPU_DPR_L*)0xF883C050u)


#define CPU1_DPR10_U (*(volatile Ifx_CPU_DPR_U*)0xF883C054u)


#define CPU1_DPR11_L (*(volatile Ifx_CPU_DPR_L*)0xF883C058u)


#define CPU1_DPR11_U (*(volatile Ifx_CPU_DPR_U*)0xF883C05Cu)


#define CPU1_DPR12_L (*(volatile Ifx_CPU_DPR_L*)0xF883C060u)


#define CPU1_DPR12_U (*(volatile Ifx_CPU_DPR_U*)0xF883C064u)


#define CPU1_DPR13_L (*(volatile Ifx_CPU_DPR_L*)0xF883C068u)


#define CPU1_DPR13_U (*(volatile Ifx_CPU_DPR_U*)0xF883C06Cu)


#define CPU1_DPR14_L (*(volatile Ifx_CPU_DPR_L*)0xF883C070u)


#define CPU1_DPR14_U (*(volatile Ifx_CPU_DPR_U*)0xF883C074u)


#define CPU1_DPR15_L (*(volatile Ifx_CPU_DPR_L*)0xF883C078u)


#define CPU1_DPR15_U (*(volatile Ifx_CPU_DPR_U*)0xF883C07Cu)


#define CPU1_DPR1_L (*(volatile Ifx_CPU_DPR_L*)0xF883C008u)


#define CPU1_DPR1_U (*(volatile Ifx_CPU_DPR_U*)0xF883C00Cu)


#define CPU1_DPR2_L (*(volatile Ifx_CPU_DPR_L*)0xF883C010u)


#define CPU1_DPR2_U (*(volatile Ifx_CPU_DPR_U*)0xF883C014u)


#define CPU1_DPR3_L (*(volatile Ifx_CPU_DPR_L*)0xF883C018u)


#define CPU1_DPR3_U (*(volatile Ifx_CPU_DPR_U*)0xF883C01Cu)


#define CPU1_DPR4_L (*(volatile Ifx_CPU_DPR_L*)0xF883C020u)


#define CPU1_DPR4_U (*(volatile Ifx_CPU_DPR_U*)0xF883C024u)


#define CPU1_DPR5_L (*(volatile Ifx_CPU_DPR_L*)0xF883C028u)


#define CPU1_DPR5_U (*(volatile Ifx_CPU_DPR_U*)0xF883C02Cu)


#define CPU1_DPR6_L (*(volatile Ifx_CPU_DPR_L*)0xF883C030u)


#define CPU1_DPR6_U (*(volatile Ifx_CPU_DPR_U*)0xF883C034u)


#define CPU1_DPR7_L (*(volatile Ifx_CPU_DPR_L*)0xF883C038u)


#define CPU1_DPR7_U (*(volatile Ifx_CPU_DPR_U*)0xF883C03Cu)


#define CPU1_DPR8_L (*(volatile Ifx_CPU_DPR_L*)0xF883C040u)


#define CPU1_DPR8_U (*(volatile Ifx_CPU_DPR_U*)0xF883C044u)


#define CPU1_DPR9_L (*(volatile Ifx_CPU_DPR_L*)0xF883C048u)


#define CPU1_DPR9_U (*(volatile Ifx_CPU_DPR_U*)0xF883C04Cu)


#define CPU1_DPRE0 (*(volatile Ifx_CPU_DPRE*)0xF883E010u)




#define CPU1_DPRE_0 (CPU1_DPRE0)


#define CPU1_DPRE1 (*(volatile Ifx_CPU_DPRE*)0xF883E014u)




#define CPU1_DPRE_1 (CPU1_DPRE1)


#define CPU1_DPRE2 (*(volatile Ifx_CPU_DPRE*)0xF883E018u)




#define CPU1_DPRE_2 (CPU1_DPRE2)


#define CPU1_DPRE3 (*(volatile Ifx_CPU_DPRE*)0xF883E01Cu)




#define CPU1_DPRE_3 (CPU1_DPRE3)


#define CPU1_DPWE0 (*(volatile Ifx_CPU_DPWE*)0xF883E020u)




#define CPU1_DPWE_0 (CPU1_DPWE0)


#define CPU1_DPWE1 (*(volatile Ifx_CPU_DPWE*)0xF883E024u)




#define CPU1_DPWE_1 (CPU1_DPWE1)


#define CPU1_DPWE2 (*(volatile Ifx_CPU_DPWE*)0xF883E028u)




#define CPU1_DPWE_2 (CPU1_DPWE2)


#define CPU1_DPWE3 (*(volatile Ifx_CPU_DPWE*)0xF883E02Cu)




#define CPU1_DPWE_3 (CPU1_DPWE3)


#define CPU1_DSTR (*(volatile Ifx_CPU_DSTR*)0xF8839010u)


#define CPU1_EXEVT (*(volatile Ifx_CPU_EXEVT*)0xF883FD08u)


#define CPU1_FCX (*(volatile Ifx_CPU_FCX*)0xF883FE38u)


#define CPU1_FPU_TRAP_CON (*(volatile Ifx_CPU_FPU_TRAP_CON*)0xF883A000u)


#define CPU1_FPU_TRAP_OPC (*(volatile Ifx_CPU_FPU_TRAP_OPC*)0xF883A008u)


#define CPU1_FPU_TRAP_PC (*(volatile Ifx_CPU_FPU_TRAP_PC*)0xF883A004u)


#define CPU1_FPU_TRAP_SRC1 (*(volatile Ifx_CPU_FPU_TRAP_SRC1*)0xF883A010u)


#define CPU1_FPU_TRAP_SRC2 (*(volatile Ifx_CPU_FPU_TRAP_SRC2*)0xF883A014u)


#define CPU1_FPU_TRAP_SRC3 (*(volatile Ifx_CPU_FPU_TRAP_SRC3*)0xF883A018u)


#define CPU1_ICNT (*(volatile Ifx_CPU_ICNT*)0xF883FC08u)


#define CPU1_ICR (*(volatile Ifx_CPU_ICR*)0xF883FE2Cu)


#define CPU1_ISP (*(volatile Ifx_CPU_ISP*)0xF883FE28u)


#define CPU1_LCX (*(volatile Ifx_CPU_LCX*)0xF883FE3Cu)


#define CPU1_M1CNT (*(volatile Ifx_CPU_M1CNT*)0xF883FC0Cu)


#define CPU1_M2CNT (*(volatile Ifx_CPU_M2CNT*)0xF883FC10u)


#define CPU1_M3CNT (*(volatile Ifx_CPU_M3CNT*)0xF883FC14u)


#define CPU1_PC (*(volatile Ifx_CPU_PC*)0xF883FE08u)


#define CPU1_PCON0 (*(volatile Ifx_CPU_PCON0*)0xF883920Cu)


#define CPU1_PCON1 (*(volatile Ifx_CPU_PCON1*)0xF8839204u)


#define CPU1_PCON2 (*(volatile Ifx_CPU_PCON2*)0xF8839208u)


#define CPU1_PCXI (*(volatile Ifx_CPU_PCXI*)0xF883FE00u)


#define CPU1_PIEAR (*(volatile Ifx_CPU_PIEAR*)0xF8839210u)


#define CPU1_PIETR (*(volatile Ifx_CPU_PIETR*)0xF8839214u)


#define CPU1_PMA0 (*(volatile Ifx_CPU_PMA0*)0xF8838100u)


#define CPU1_PMA1 (*(volatile Ifx_CPU_PMA1*)0xF8838104u)


#define CPU1_PMA2 (*(volatile Ifx_CPU_PMA2*)0xF8838108u)


#define CPU1_PSTR (*(volatile Ifx_CPU_PSTR*)0xF8839200u)


#define CPU1_PSW (*(volatile Ifx_CPU_PSW*)0xF883FE04u)


#define CPU1_SEGEN (*(volatile Ifx_CPU_SEGEN*)0xF8831030u)


#define CPU1_SMACON (*(volatile Ifx_CPU_SMACON*)0xF883900Cu)


#define CPU1_SWEVT (*(volatile Ifx_CPU_SWEVT*)0xF883FD10u)


#define CPU1_SYSCON (*(volatile Ifx_CPU_SYSCON*)0xF883FE14u)


#define CPU1_TASK_ASI (*(volatile Ifx_CPU_TASK_ASI*)0xF8838004u)


#define CPU1_TPS_CON (*(volatile Ifx_CPU_TPS_CON*)0xF883E400u)


#define CPU1_TPS_TIMER0 (*(volatile Ifx_CPU_TPS_TIMER*)0xF883E404u)


#define CPU1_TPS_TIMER1 (*(volatile Ifx_CPU_TPS_TIMER*)0xF883E408u)


#define CPU1_TPS_TIMER2 (*(volatile Ifx_CPU_TPS_TIMER*)0xF883E40Cu)


#define CPU1_TR0_ADR (*(volatile Ifx_CPU_TR_ADR*)0xF883F004u)




#define CPU1_TR0ADR (CPU1_TR0_ADR)


#define CPU1_TR0_EVT (*(volatile Ifx_CPU_TR_EVT*)0xF883F000u)




#define CPU1_TR0EVT (CPU1_TR0_EVT)


#define CPU1_TR1_ADR (*(volatile Ifx_CPU_TR_ADR*)0xF883F00Cu)




#define CPU1_TR1ADR (CPU1_TR1_ADR)


#define CPU1_TR1_EVT (*(volatile Ifx_CPU_TR_EVT*)0xF883F008u)




#define CPU1_TR1EVT (CPU1_TR1_EVT)


#define CPU1_TR2_ADR (*(volatile Ifx_CPU_TR_ADR*)0xF883F014u)




#define CPU1_TR2ADR (CPU1_TR2_ADR)


#define CPU1_TR2_EVT (*(volatile Ifx_CPU_TR_EVT*)0xF883F010u)




#define CPU1_TR2EVT (CPU1_TR2_EVT)


#define CPU1_TR3_ADR (*(volatile Ifx_CPU_TR_ADR*)0xF883F01Cu)




#define CPU1_TR3ADR (CPU1_TR3_ADR)


#define CPU1_TR3_EVT (*(volatile Ifx_CPU_TR_EVT*)0xF883F018u)




#define CPU1_TR3EVT (CPU1_TR3_EVT)


#define CPU1_TR4_ADR (*(volatile Ifx_CPU_TR_ADR*)0xF883F024u)




#define CPU1_TR4ADR (CPU1_TR4_ADR)


#define CPU1_TR4_EVT (*(volatile Ifx_CPU_TR_EVT*)0xF883F020u)




#define CPU1_TR4EVT (CPU1_TR4_EVT)


#define CPU1_TR5_ADR (*(volatile Ifx_CPU_TR_ADR*)0xF883F02Cu)




#define CPU1_TR5ADR (CPU1_TR5_ADR)


#define CPU1_TR5_EVT (*(volatile Ifx_CPU_TR_EVT*)0xF883F028u)




#define CPU1_TR5EVT (CPU1_TR5_EVT)


#define CPU1_TR6_ADR (*(volatile Ifx_CPU_TR_ADR*)0xF883F034u)




#define CPU1_TR6ADR (CPU1_TR6_ADR)


#define CPU1_TR6_EVT (*(volatile Ifx_CPU_TR_EVT*)0xF883F030u)




#define CPU1_TR6EVT (CPU1_TR6_EVT)


#define CPU1_TR7_ADR (*(volatile Ifx_CPU_TR_ADR*)0xF883F03Cu)




#define CPU1_TR7ADR (CPU1_TR7_ADR)


#define CPU1_TR7_EVT (*(volatile Ifx_CPU_TR_EVT*)0xF883F038u)




#define CPU1_TR7EVT (CPU1_TR7_EVT)


#define CPU1_TRIG_ACC (*(volatile Ifx_CPU_TRIG_ACC*)0xF883FD30u)







#define CPU2_A0 (*(volatile Ifx_CPU_A*)0xF885FF80u)


#define CPU2_A1 (*(volatile Ifx_CPU_A*)0xF885FF84u)


#define CPU2_A10 (*(volatile Ifx_CPU_A*)0xF885FFA8u)


#define CPU2_A11 (*(volatile Ifx_CPU_A*)0xF885FFACu)


#define CPU2_A12 (*(volatile Ifx_CPU_A*)0xF885FFB0u)


#define CPU2_A13 (*(volatile Ifx_CPU_A*)0xF885FFB4u)


#define CPU2_A14 (*(volatile Ifx_CPU_A*)0xF885FFB8u)


#define CPU2_A15 (*(volatile Ifx_CPU_A*)0xF885FFBCu)


#define CPU2_A2 (*(volatile Ifx_CPU_A*)0xF885FF88u)


#define CPU2_A3 (*(volatile Ifx_CPU_A*)0xF885FF8Cu)


#define CPU2_A4 (*(volatile Ifx_CPU_A*)0xF885FF90u)


#define CPU2_A5 (*(volatile Ifx_CPU_A*)0xF885FF94u)


#define CPU2_A6 (*(volatile Ifx_CPU_A*)0xF885FF98u)


#define CPU2_A7 (*(volatile Ifx_CPU_A*)0xF885FF9Cu)


#define CPU2_A8 (*(volatile Ifx_CPU_A*)0xF885FFA0u)


#define CPU2_A9 (*(volatile Ifx_CPU_A*)0xF885FFA4u)


#define CPU2_BIV (*(volatile Ifx_CPU_BIV*)0xF885FE20u)


#define CPU2_BTV (*(volatile Ifx_CPU_BTV*)0xF885FE24u)


#define CPU2_CCNT (*(volatile Ifx_CPU_CCNT*)0xF885FC04u)


#define CPU2_CCTRL (*(volatile Ifx_CPU_CCTRL*)0xF885FC00u)


#define CPU2_COMPAT (*(volatile Ifx_CPU_COMPAT*)0xF8859400u)


#define CPU2_CORE_ID (*(volatile Ifx_CPU_CORE_ID*)0xF885FE1Cu)


#define CPU2_CPR0_L (*(volatile Ifx_CPU_CPR_L*)0xF885D000u)


#define CPU2_CPR0_U (*(volatile Ifx_CPU_CPR_U*)0xF885D004u)


#define CPU2_CPR1_L (*(volatile Ifx_CPU_CPR_L*)0xF885D008u)


#define CPU2_CPR1_U (*(volatile Ifx_CPU_CPR_U*)0xF885D00Cu)


#define CPU2_CPR2_L (*(volatile Ifx_CPU_CPR_L*)0xF885D010u)


#define CPU2_CPR2_U (*(volatile Ifx_CPU_CPR_U*)0xF885D014u)


#define CPU2_CPR3_L (*(volatile Ifx_CPU_CPR_L*)0xF885D018u)


#define CPU2_CPR3_U (*(volatile Ifx_CPU_CPR_U*)0xF885D01Cu)


#define CPU2_CPR4_L (*(volatile Ifx_CPU_CPR_L*)0xF885D020u)


#define CPU2_CPR4_U (*(volatile Ifx_CPU_CPR_U*)0xF885D024u)


#define CPU2_CPR5_L (*(volatile Ifx_CPU_CPR_L*)0xF885D028u)


#define CPU2_CPR5_U (*(volatile Ifx_CPU_CPR_U*)0xF885D02Cu)


#define CPU2_CPR6_L (*(volatile Ifx_CPU_CPR_L*)0xF885D030u)


#define CPU2_CPR6_U (*(volatile Ifx_CPU_CPR_U*)0xF885D034u)


#define CPU2_CPR7_L (*(volatile Ifx_CPU_CPR_L*)0xF885D038u)


#define CPU2_CPR7_U (*(volatile Ifx_CPU_CPR_U*)0xF885D03Cu)


#define CPU2_CPU_ID (*(volatile Ifx_CPU_CPU_ID*)0xF885FE18u)


#define CPU2_CPXE0 (*(volatile Ifx_CPU_CPXE*)0xF885E000u)




#define CPU2_CPXE_0 (CPU2_CPXE0)


#define CPU2_CPXE1 (*(volatile Ifx_CPU_CPXE*)0xF885E004u)




#define CPU2_CPXE_1 (CPU2_CPXE1)


#define CPU2_CPXE2 (*(volatile Ifx_CPU_CPXE*)0xF885E008u)




#define CPU2_CPXE_2 (CPU2_CPXE2)


#define CPU2_CPXE3 (*(volatile Ifx_CPU_CPXE*)0xF885E00Cu)




#define CPU2_CPXE_3 (CPU2_CPXE3)


#define CPU2_CREVT (*(volatile Ifx_CPU_CREVT*)0xF885FD0Cu)


#define CPU2_CUS_ID (*(volatile Ifx_CPU_CUS_ID*)0xF885FE50u)


#define CPU2_D0 (*(volatile Ifx_CPU_D*)0xF885FF00u)


#define CPU2_D1 (*(volatile Ifx_CPU_D*)0xF885FF04u)


#define CPU2_D10 (*(volatile Ifx_CPU_D*)0xF885FF28u)


#define CPU2_D11 (*(volatile Ifx_CPU_D*)0xF885FF2Cu)


#define CPU2_D12 (*(volatile Ifx_CPU_D*)0xF885FF30u)


#define CPU2_D13 (*(volatile Ifx_CPU_D*)0xF885FF34u)


#define CPU2_D14 (*(volatile Ifx_CPU_D*)0xF885FF38u)


#define CPU2_D15 (*(volatile Ifx_CPU_D*)0xF885FF3Cu)


#define CPU2_D2 (*(volatile Ifx_CPU_D*)0xF885FF08u)


#define CPU2_D3 (*(volatile Ifx_CPU_D*)0xF885FF0Cu)


#define CPU2_D4 (*(volatile Ifx_CPU_D*)0xF885FF10u)


#define CPU2_D5 (*(volatile Ifx_CPU_D*)0xF885FF14u)


#define CPU2_D6 (*(volatile Ifx_CPU_D*)0xF885FF18u)


#define CPU2_D7 (*(volatile Ifx_CPU_D*)0xF885FF1Cu)


#define CPU2_D8 (*(volatile Ifx_CPU_D*)0xF885FF20u)


#define CPU2_D9 (*(volatile Ifx_CPU_D*)0xF885FF24u)


#define CPU2_DATR (*(volatile Ifx_CPU_DATR*)0xF8859018u)


#define CPU2_DBGSR (*(volatile Ifx_CPU_DBGSR*)0xF885FD00u)


#define CPU2_DBGTCR (*(volatile Ifx_CPU_DBGTCR*)0xF885FD48u)


#define CPU2_DCON0 (*(volatile Ifx_CPU_DCON0*)0xF8859040u)


#define CPU2_DCON2 (*(volatile Ifx_CPU_DCON2*)0xF8859000u)


#define CPU2_DCX (*(volatile Ifx_CPU_DCX*)0xF885FD44u)


#define CPU2_DEADD (*(volatile Ifx_CPU_DEADD*)0xF885901Cu)


#define CPU2_DIEAR (*(volatile Ifx_CPU_DIEAR*)0xF8859020u)


#define CPU2_DIETR (*(volatile Ifx_CPU_DIETR*)0xF8859024u)


#define CPU2_DMS (*(volatile Ifx_CPU_DMS*)0xF885FD40u)


#define CPU2_DPR0_L (*(volatile Ifx_CPU_DPR_L*)0xF885C000u)


#define CPU2_DPR0_U (*(volatile Ifx_CPU_DPR_U*)0xF885C004u)


#define CPU2_DPR10_L (*(volatile Ifx_CPU_DPR_L*)0xF885C050u)


#define CPU2_DPR10_U (*(volatile Ifx_CPU_DPR_U*)0xF885C054u)


#define CPU2_DPR11_L (*(volatile Ifx_CPU_DPR_L*)0xF885C058u)


#define CPU2_DPR11_U (*(volatile Ifx_CPU_DPR_U*)0xF885C05Cu)


#define CPU2_DPR12_L (*(volatile Ifx_CPU_DPR_L*)0xF885C060u)


#define CPU2_DPR12_U (*(volatile Ifx_CPU_DPR_U*)0xF885C064u)


#define CPU2_DPR13_L (*(volatile Ifx_CPU_DPR_L*)0xF885C068u)


#define CPU2_DPR13_U (*(volatile Ifx_CPU_DPR_U*)0xF885C06Cu)


#define CPU2_DPR14_L (*(volatile Ifx_CPU_DPR_L*)0xF885C070u)


#define CPU2_DPR14_U (*(volatile Ifx_CPU_DPR_U*)0xF885C074u)


#define CPU2_DPR15_L (*(volatile Ifx_CPU_DPR_L*)0xF885C078u)


#define CPU2_DPR15_U (*(volatile Ifx_CPU_DPR_U*)0xF885C07Cu)


#define CPU2_DPR1_L (*(volatile Ifx_CPU_DPR_L*)0xF885C008u)


#define CPU2_DPR1_U (*(volatile Ifx_CPU_DPR_U*)0xF885C00Cu)


#define CPU2_DPR2_L (*(volatile Ifx_CPU_DPR_L*)0xF885C010u)


#define CPU2_DPR2_U (*(volatile Ifx_CPU_DPR_U*)0xF885C014u)


#define CPU2_DPR3_L (*(volatile Ifx_CPU_DPR_L*)0xF885C018u)


#define CPU2_DPR3_U (*(volatile Ifx_CPU_DPR_U*)0xF885C01Cu)


#define CPU2_DPR4_L (*(volatile Ifx_CPU_DPR_L*)0xF885C020u)


#define CPU2_DPR4_U (*(volatile Ifx_CPU_DPR_U*)0xF885C024u)


#define CPU2_DPR5_L (*(volatile Ifx_CPU_DPR_L*)0xF885C028u)


#define CPU2_DPR5_U (*(volatile Ifx_CPU_DPR_U*)0xF885C02Cu)


#define CPU2_DPR6_L (*(volatile Ifx_CPU_DPR_L*)0xF885C030u)


#define CPU2_DPR6_U (*(volatile Ifx_CPU_DPR_U*)0xF885C034u)


#define CPU2_DPR7_L (*(volatile Ifx_CPU_DPR_L*)0xF885C038u)


#define CPU2_DPR7_U (*(volatile Ifx_CPU_DPR_U*)0xF885C03Cu)


#define CPU2_DPR8_L (*(volatile Ifx_CPU_DPR_L*)0xF885C040u)


#define CPU2_DPR8_U (*(volatile Ifx_CPU_DPR_U*)0xF885C044u)


#define CPU2_DPR9_L (*(volatile Ifx_CPU_DPR_L*)0xF885C048u)


#define CPU2_DPR9_U (*(volatile Ifx_CPU_DPR_U*)0xF885C04Cu)


#define CPU2_DPRE0 (*(volatile Ifx_CPU_DPRE*)0xF885E010u)




#define CPU2_DPRE_0 (CPU2_DPRE0)


#define CPU2_DPRE1 (*(volatile Ifx_CPU_DPRE*)0xF885E014u)




#define CPU2_DPRE_1 (CPU2_DPRE1)


#define CPU2_DPRE2 (*(volatile Ifx_CPU_DPRE*)0xF885E018u)




#define CPU2_DPRE_2 (CPU2_DPRE2)


#define CPU2_DPRE3 (*(volatile Ifx_CPU_DPRE*)0xF885E01Cu)




#define CPU2_DPRE_3 (CPU2_DPRE3)


#define CPU2_DPWE0 (*(volatile Ifx_CPU_DPWE*)0xF885E020u)




#define CPU2_DPWE_0 (CPU2_DPWE0)


#define CPU2_DPWE1 (*(volatile Ifx_CPU_DPWE*)0xF885E024u)




#define CPU2_DPWE_1 (CPU2_DPWE1)


#define CPU2_DPWE2 (*(volatile Ifx_CPU_DPWE*)0xF885E028u)




#define CPU2_DPWE_2 (CPU2_DPWE2)


#define CPU2_DPWE3 (*(volatile Ifx_CPU_DPWE*)0xF885E02Cu)




#define CPU2_DPWE_3 (CPU2_DPWE3)


#define CPU2_DSTR (*(volatile Ifx_CPU_DSTR*)0xF8859010u)


#define CPU2_EXEVT (*(volatile Ifx_CPU_EXEVT*)0xF885FD08u)


#define CPU2_FCX (*(volatile Ifx_CPU_FCX*)0xF885FE38u)


#define CPU2_FPU_TRAP_CON (*(volatile Ifx_CPU_FPU_TRAP_CON*)0xF885A000u)


#define CPU2_FPU_TRAP_OPC (*(volatile Ifx_CPU_FPU_TRAP_OPC*)0xF885A008u)


#define CPU2_FPU_TRAP_PC (*(volatile Ifx_CPU_FPU_TRAP_PC*)0xF885A004u)


#define CPU2_FPU_TRAP_SRC1 (*(volatile Ifx_CPU_FPU_TRAP_SRC1*)0xF885A010u)


#define CPU2_FPU_TRAP_SRC2 (*(volatile Ifx_CPU_FPU_TRAP_SRC2*)0xF885A014u)


#define CPU2_FPU_TRAP_SRC3 (*(volatile Ifx_CPU_FPU_TRAP_SRC3*)0xF885A018u)


#define CPU2_ICNT (*(volatile Ifx_CPU_ICNT*)0xF885FC08u)


#define CPU2_ICR (*(volatile Ifx_CPU_ICR*)0xF885FE2Cu)


#define CPU2_ISP (*(volatile Ifx_CPU_ISP*)0xF885FE28u)


#define CPU2_LCX (*(volatile Ifx_CPU_LCX*)0xF885FE3Cu)


#define CPU2_M1CNT (*(volatile Ifx_CPU_M1CNT*)0xF885FC0Cu)


#define CPU2_M2CNT (*(volatile Ifx_CPU_M2CNT*)0xF885FC10u)


#define CPU2_M3CNT (*(volatile Ifx_CPU_M3CNT*)0xF885FC14u)


#define CPU2_PC (*(volatile Ifx_CPU_PC*)0xF885FE08u)


#define CPU2_PCON0 (*(volatile Ifx_CPU_PCON0*)0xF885920Cu)


#define CPU2_PCON1 (*(volatile Ifx_CPU_PCON1*)0xF8859204u)


#define CPU2_PCON2 (*(volatile Ifx_CPU_PCON2*)0xF8859208u)


#define CPU2_PCXI (*(volatile Ifx_CPU_PCXI*)0xF885FE00u)


#define CPU2_PIEAR (*(volatile Ifx_CPU_PIEAR*)0xF8859210u)


#define CPU2_PIETR (*(volatile Ifx_CPU_PIETR*)0xF8859214u)


#define CPU2_PMA0 (*(volatile Ifx_CPU_PMA0*)0xF8858100u)


#define CPU2_PMA1 (*(volatile Ifx_CPU_PMA1*)0xF8858104u)


#define CPU2_PMA2 (*(volatile Ifx_CPU_PMA2*)0xF8858108u)


#define CPU2_PSTR (*(volatile Ifx_CPU_PSTR*)0xF8859200u)


#define CPU2_PSW (*(volatile Ifx_CPU_PSW*)0xF885FE04u)


#define CPU2_SEGEN (*(volatile Ifx_CPU_SEGEN*)0xF8851030u)


#define CPU2_SMACON (*(volatile Ifx_CPU_SMACON*)0xF885900Cu)


#define CPU2_SWEVT (*(volatile Ifx_CPU_SWEVT*)0xF885FD10u)


#define CPU2_SYSCON (*(volatile Ifx_CPU_SYSCON*)0xF885FE14u)


#define CPU2_TASK_ASI (*(volatile Ifx_CPU_TASK_ASI*)0xF8858004u)


#define CPU2_TPS_CON (*(volatile Ifx_CPU_TPS_CON*)0xF885E400u)


#define CPU2_TPS_TIMER0 (*(volatile Ifx_CPU_TPS_TIMER*)0xF885E404u)


#define CPU2_TPS_TIMER1 (*(volatile Ifx_CPU_TPS_TIMER*)0xF885E408u)


#define CPU2_TPS_TIMER2 (*(volatile Ifx_CPU_TPS_TIMER*)0xF885E40Cu)


#define CPU2_TR0_ADR (*(volatile Ifx_CPU_TR_ADR*)0xF885F004u)




#define CPU2_TR0ADR (CPU2_TR0_ADR)


#define CPU2_TR0_EVT (*(volatile Ifx_CPU_TR_EVT*)0xF885F000u)




#define CPU2_TR0EVT (CPU2_TR0_EVT)


#define CPU2_TR1_ADR (*(volatile Ifx_CPU_TR_ADR*)0xF885F00Cu)




#define CPU2_TR1ADR (CPU2_TR1_ADR)


#define CPU2_TR1_EVT (*(volatile Ifx_CPU_TR_EVT*)0xF885F008u)




#define CPU2_TR1EVT (CPU2_TR1_EVT)


#define CPU2_TR2_ADR (*(volatile Ifx_CPU_TR_ADR*)0xF885F014u)




#define CPU2_TR2ADR (CPU2_TR2_ADR)


#define CPU2_TR2_EVT (*(volatile Ifx_CPU_TR_EVT*)0xF885F010u)




#define CPU2_TR2EVT (CPU2_TR2_EVT)


#define CPU2_TR3_ADR (*(volatile Ifx_CPU_TR_ADR*)0xF885F01Cu)




#define CPU2_TR3ADR (CPU2_TR3_ADR)


#define CPU2_TR3_EVT (*(volatile Ifx_CPU_TR_EVT*)0xF885F018u)




#define CPU2_TR3EVT (CPU2_TR3_EVT)


#define CPU2_TR4_ADR (*(volatile Ifx_CPU_TR_ADR*)0xF885F024u)




#define CPU2_TR4ADR (CPU2_TR4_ADR)


#define CPU2_TR4_EVT (*(volatile Ifx_CPU_TR_EVT*)0xF885F020u)




#define CPU2_TR4EVT (CPU2_TR4_EVT)


#define CPU2_TR5_ADR (*(volatile Ifx_CPU_TR_ADR*)0xF885F02Cu)




#define CPU2_TR5ADR (CPU2_TR5_ADR)


#define CPU2_TR5_EVT (*(volatile Ifx_CPU_TR_EVT*)0xF885F028u)




#define CPU2_TR5EVT (CPU2_TR5_EVT)


#define CPU2_TR6_ADR (*(volatile Ifx_CPU_TR_ADR*)0xF885F034u)




#define CPU2_TR6ADR (CPU2_TR6_ADR)


#define CPU2_TR6_EVT (*(volatile Ifx_CPU_TR_EVT*)0xF885F030u)




#define CPU2_TR6EVT (CPU2_TR6_EVT)


#define CPU2_TR7_ADR (*(volatile Ifx_CPU_TR_ADR*)0xF885F03Cu)




#define CPU2_TR7ADR (CPU2_TR7_ADR)


#define CPU2_TR7_EVT (*(volatile Ifx_CPU_TR_EVT*)0xF885F038u)




#define CPU2_TR7EVT (CPU2_TR7_EVT)


#define CPU2_TRIG_ACC (*(volatile Ifx_CPU_TRIG_ACC*)0xF885FD30u)







#define CPU_A0 0xFF80


#define CPU_A1 0xFF84


#define CPU_A10 0xFFA8


#define CPU_A11 0xFFAC


#define CPU_A12 0xFFB0


#define CPU_A13 0xFFB4


#define CPU_A14 0xFFB8


#define CPU_A15 0xFFBC


#define CPU_A2 0xFF88


#define CPU_A3 0xFF8C


#define CPU_A4 0xFF90


#define CPU_A5 0xFF94


#define CPU_A6 0xFF98


#define CPU_A7 0xFF9C


#define CPU_A8 0xFFA0


#define CPU_A9 0xFFA4


#define CPU_BIV 0xFE20


#define CPU_BTV 0xFE24


#define CPU_CCNT 0xFC04


#define CPU_CCTRL 0xFC00


#define CPU_COMPAT 0x9400


#define CPU_CORE_ID 0xFE1C



#define CPU_CPR0_L 0xD000



#define CPU_CPR0_U 0xD004



#define CPU_CPR1_L 0xD008



#define CPU_CPR1_U 0xD00C



#define CPU_CPR2_L 0xD010



#define CPU_CPR2_U 0xD014



#define CPU_CPR3_L 0xD018



#define CPU_CPR3_U 0xD01C



#define CPU_CPR4_L 0xD020



#define CPU_CPR4_U 0xD024



#define CPU_CPR5_L 0xD028



#define CPU_CPR5_U 0xD02C



#define CPU_CPR6_L 0xD030



#define CPU_CPR6_U 0xD034



#define CPU_CPR7_L 0xD038



#define CPU_CPR7_U 0xD03C


#define CPU_CPU_ID 0xFE18



#define CPU_CPXE0 0xE000



#define CPU_CPXE1 0xE004



#define CPU_CPXE2 0xE008



#define CPU_CPXE3 0xE00C


#define CPU_CREVT 0xFD0C


#define CPU_CUS_ID 0xFE50


#define CPU_D0 0xFF00


#define CPU_D1 0xFF04


#define CPU_D10 0xFF28


#define CPU_D11 0xFF2C


#define CPU_D12 0xFF30


#define CPU_D13 0xFF34


#define CPU_D14 0xFF38


#define CPU_D15 0xFF3C


#define CPU_D2 0xFF08


#define CPU_D3 0xFF0C


#define CPU_D4 0xFF10


#define CPU_D5 0xFF14


#define CPU_D6 0xFF18


#define CPU_D7 0xFF1C


#define CPU_D8 0xFF20


#define CPU_D9 0xFF24


#define CPU_DATR 0x9018


#define CPU_DBGSR 0xFD00


#define CPU_DBGTCR 0xFD48


#define CPU_DCON0 0x9040


#define CPU_DCON2 0x9000


#define CPU_DCX 0xFD44


#define CPU_DEADD 0x901C


#define CPU_DIEAR 0x9020


#define CPU_DIETR 0x9024


#define CPU_DMS 0xFD40



#define CPU_DPR0_L 0xC000



#define CPU_DPR0_U 0xC004



#define CPU_DPR10_L 0xC050



#define CPU_DPR10_U 0xC054



#define CPU_DPR11_L 0xC058



#define CPU_DPR11_U 0xC05C



#define CPU_DPR12_L 0xC060



#define CPU_DPR12_U 0xC064



#define CPU_DPR13_L 0xC068



#define CPU_DPR13_U 0xC06C



#define CPU_DPR14_L 0xC070



#define CPU_DPR14_U 0xC074



#define CPU_DPR15_L 0xC078



#define CPU_DPR15_U 0xC07C



#define CPU_DPR1_L 0xC008



#define CPU_DPR1_U 0xC00C



#define CPU_DPR2_L 0xC010



#define CPU_DPR2_U 0xC014



#define CPU_DPR3_L 0xC018



#define CPU_DPR3_U 0xC01C



#define CPU_DPR4_L 0xC020



#define CPU_DPR4_U 0xC024



#define CPU_DPR5_L 0xC028



#define CPU_DPR5_U 0xC02C



#define CPU_DPR6_L 0xC030



#define CPU_DPR6_U 0xC034



#define CPU_DPR7_L 0xC038



#define CPU_DPR7_U 0xC03C



#define CPU_DPR8_L 0xC040



#define CPU_DPR8_U 0xC044



#define CPU_DPR9_L 0xC048



#define CPU_DPR9_U 0xC04C



#define CPU_DPRE0 0xE010



#define CPU_DPRE1 0xE014



#define CPU_DPRE2 0xE018



#define CPU_DPRE3 0xE01C



#define CPU_DPWE0 0xE020



#define CPU_DPWE1 0xE024



#define CPU_DPWE2 0xE028



#define CPU_DPWE3 0xE02C


#define CPU_DSTR 0x9010


#define CPU_EXEVT 0xFD08


#define CPU_FCX 0xFE38


#define CPU_FPU_TRAP_CON 0xA000



#define CPU_FPU_TRAP_OPC 0xA008



#define CPU_FPU_TRAP_PC 0xA004



#define CPU_FPU_TRAP_SRC1 0xA010



#define CPU_FPU_TRAP_SRC2 0xA014



#define CPU_FPU_TRAP_SRC3 0xA018


#define CPU_ICNT 0xFC08


#define CPU_ICR 0xFE2C


#define CPU_ISP 0xFE28


#define CPU_LCX 0xFE3C


#define CPU_M1CNT 0xFC0C


#define CPU_M2CNT 0xFC10


#define CPU_M3CNT 0xFC14


#define CPU_PC 0xFE08


#define CPU_PCON0 0x920C


#define CPU_PCON1 0x9204


#define CPU_PCON2 0x9208


#define CPU_PCXI 0xFE00



#define CPU_PIEAR 0x9210


#define CPU_PIETR 0x9214


#define CPU_PMA0 0x8100


#define CPU_PMA1 0x8104


#define CPU_PMA2 0x8108


#define CPU_PSTR 0x9200


#define CPU_PSW 0xFE04


#define CPU_SEGEN 0x1030


#define CPU_SMACON 0x900C


#define CPU_SWEVT 0xFD10


#define CPU_SYSCON 0xFE14



#define CPU_TASK_ASI 0x8004



#define CPU_TPS_CON 0xE400



#define CPU_TPS_TIMER0 0xE404



#define CPU_TPS_TIMER1 0xE408



#define CPU_TPS_TIMER2 0xE40C


#define CPU_TR0_ADR 0xF004


#define CPU_TR0_EVT 0xF000


#define CPU_TR1_ADR 0xF00C


#define CPU_TR1_EVT 0xF008


#define CPU_TR2_ADR 0xF014


#define CPU_TR2_EVT 0xF010


#define CPU_TR3_ADR 0xF01C


#define CPU_TR3_EVT 0xF018


#define CPU_TR4_ADR 0xF024


#define CPU_TR4_EVT 0xF020


#define CPU_TR5_ADR 0xF02C


#define CPU_TR5_EVT 0xF028


#define CPU_TR6_ADR 0xF034


#define CPU_TR6_EVT 0xF030


#define CPU_TR7_ADR 0xF03C


#define CPU_TR7_EVT 0xF038


#define CPU_TRIG_ACC 0xFD30







#define CPU0_SPROT_ACCENA (*(volatile Ifx_CPU_SPROT_ACCENA*)0xF880E100u)


#define CPU0_SPROT_ACCENB (*(volatile Ifx_CPU_SPROT_ACCENB*)0xF880E104u)


#define CPU0_SPROT_RGN0_ACCENA (*(volatile Ifx_CPU_SPROT_RGN_ACCENA*)0xF880E008u)




#define CPU0_SPROT_RGNACCENA0 (CPU0_SPROT_RGN0_ACCENA)


#define CPU0_SPROT_RGN0_ACCENB (*(volatile Ifx_CPU_SPROT_RGN_ACCENB*)0xF880E00Cu)




#define CPU0_SPROT_RGNACCENB0 (CPU0_SPROT_RGN0_ACCENB)


#define CPU0_SPROT_RGN0_LA (*(volatile Ifx_CPU_SPROT_RGN_LA*)0xF880E000u)




#define CPU0_SPROT_RGNLA0 (CPU0_SPROT_RGN0_LA)


#define CPU0_SPROT_RGN0_UA (*(volatile Ifx_CPU_SPROT_RGN_UA*)0xF880E004u)




#define CPU0_SPROT_RGNUA0 (CPU0_SPROT_RGN0_UA)


#define CPU0_SPROT_RGN1_ACCENA (*(volatile Ifx_CPU_SPROT_RGN_ACCENA*)0xF880E018u)




#define CPU0_SPROT_RGNACCENA1 (CPU0_SPROT_RGN1_ACCENA)


#define CPU0_SPROT_RGN1_ACCENB (*(volatile Ifx_CPU_SPROT_RGN_ACCENB*)0xF880E01Cu)




#define CPU0_SPROT_RGNACCENB1 (CPU0_SPROT_RGN1_ACCENB)


#define CPU0_SPROT_RGN1_LA (*(volatile Ifx_CPU_SPROT_RGN_LA*)0xF880E010u)




#define CPU0_SPROT_RGNLA1 (CPU0_SPROT_RGN1_LA)


#define CPU0_SPROT_RGN1_UA (*(volatile Ifx_CPU_SPROT_RGN_UA*)0xF880E014u)




#define CPU0_SPROT_RGNUA1 (CPU0_SPROT_RGN1_UA)


#define CPU0_SPROT_RGN2_ACCENA (*(volatile Ifx_CPU_SPROT_RGN_ACCENA*)0xF880E028u)




#define CPU0_SPROT_RGNACCENA2 (CPU0_SPROT_RGN2_ACCENA)


#define CPU0_SPROT_RGN2_ACCENB (*(volatile Ifx_CPU_SPROT_RGN_ACCENB*)0xF880E02Cu)




#define CPU0_SPROT_RGNACCENB2 (CPU0_SPROT_RGN2_ACCENB)


#define CPU0_SPROT_RGN2_LA (*(volatile Ifx_CPU_SPROT_RGN_LA*)0xF880E020u)




#define CPU0_SPROT_RGNLA2 (CPU0_SPROT_RGN2_LA)


#define CPU0_SPROT_RGN2_UA (*(volatile Ifx_CPU_SPROT_RGN_UA*)0xF880E024u)




#define CPU0_SPROT_RGNUA2 (CPU0_SPROT_RGN2_UA)


#define CPU0_SPROT_RGN3_ACCENA (*(volatile Ifx_CPU_SPROT_RGN_ACCENA*)0xF880E038u)




#define CPU0_SPROT_RGNACCENA3 (CPU0_SPROT_RGN3_ACCENA)


#define CPU0_SPROT_RGN3_ACCENB (*(volatile Ifx_CPU_SPROT_RGN_ACCENB*)0xF880E03Cu)




#define CPU0_SPROT_RGNACCENB3 (CPU0_SPROT_RGN3_ACCENB)


#define CPU0_SPROT_RGN3_LA (*(volatile Ifx_CPU_SPROT_RGN_LA*)0xF880E030u)




#define CPU0_SPROT_RGNLA3 (CPU0_SPROT_RGN3_LA)


#define CPU0_SPROT_RGN3_UA (*(volatile Ifx_CPU_SPROT_RGN_UA*)0xF880E034u)




#define CPU0_SPROT_RGNUA3 (CPU0_SPROT_RGN3_UA)


#define CPU0_SPROT_RGN4_ACCENA (*(volatile Ifx_CPU_SPROT_RGN_ACCENA*)0xF880E048u)




#define CPU0_SPROT_RGNACCENA4 (CPU0_SPROT_RGN4_ACCENA)


#define CPU0_SPROT_RGN4_ACCENB (*(volatile Ifx_CPU_SPROT_RGN_ACCENB*)0xF880E04Cu)




#define CPU0_SPROT_RGNACCENB4 (CPU0_SPROT_RGN4_ACCENB)


#define CPU0_SPROT_RGN4_LA (*(volatile Ifx_CPU_SPROT_RGN_LA*)0xF880E040u)




#define CPU0_SPROT_RGNLA4 (CPU0_SPROT_RGN4_LA)


#define CPU0_SPROT_RGN4_UA (*(volatile Ifx_CPU_SPROT_RGN_UA*)0xF880E044u)




#define CPU0_SPROT_RGNUA4 (CPU0_SPROT_RGN4_UA)


#define CPU0_SPROT_RGN5_ACCENA (*(volatile Ifx_CPU_SPROT_RGN_ACCENA*)0xF880E058u)




#define CPU0_SPROT_RGNACCENA5 (CPU0_SPROT_RGN5_ACCENA)


#define CPU0_SPROT_RGN5_ACCENB (*(volatile Ifx_CPU_SPROT_RGN_ACCENB*)0xF880E05Cu)




#define CPU0_SPROT_RGNACCENB5 (CPU0_SPROT_RGN5_ACCENB)


#define CPU0_SPROT_RGN5_LA (*(volatile Ifx_CPU_SPROT_RGN_LA*)0xF880E050u)




#define CPU0_SPROT_RGNLA5 (CPU0_SPROT_RGN5_LA)


#define CPU0_SPROT_RGN5_UA (*(volatile Ifx_CPU_SPROT_RGN_UA*)0xF880E054u)




#define CPU0_SPROT_RGNUA5 (CPU0_SPROT_RGN5_UA)


#define CPU0_SPROT_RGN6_ACCENA (*(volatile Ifx_CPU_SPROT_RGN_ACCENA*)0xF880E068u)




#define CPU0_SPROT_RGNACCENA6 (CPU0_SPROT_RGN6_ACCENA)


#define CPU0_SPROT_RGN6_ACCENB (*(volatile Ifx_CPU_SPROT_RGN_ACCENB*)0xF880E06Cu)




#define CPU0_SPROT_RGNACCENB6 (CPU0_SPROT_RGN6_ACCENB)


#define CPU0_SPROT_RGN6_LA (*(volatile Ifx_CPU_SPROT_RGN_LA*)0xF880E060u)




#define CPU0_SPROT_RGNLA6 (CPU0_SPROT_RGN6_LA)


#define CPU0_SPROT_RGN6_UA (*(volatile Ifx_CPU_SPROT_RGN_UA*)0xF880E064u)




#define CPU0_SPROT_RGNUA6 (CPU0_SPROT_RGN6_UA)


#define CPU0_SPROT_RGN7_ACCENA (*(volatile Ifx_CPU_SPROT_RGN_ACCENA*)0xF880E078u)




#define CPU0_SPROT_RGNACCENA7 (CPU0_SPROT_RGN7_ACCENA)


#define CPU0_SPROT_RGN7_ACCENB (*(volatile Ifx_CPU_SPROT_RGN_ACCENB*)0xF880E07Cu)




#define CPU0_SPROT_RGNACCENB7 (CPU0_SPROT_RGN7_ACCENB)


#define CPU0_SPROT_RGN7_LA (*(volatile Ifx_CPU_SPROT_RGN_LA*)0xF880E070u)




#define CPU0_SPROT_RGNLA7 (CPU0_SPROT_RGN7_LA)


#define CPU0_SPROT_RGN7_UA (*(volatile Ifx_CPU_SPROT_RGN_UA*)0xF880E074u)




#define CPU0_SPROT_RGNUA7 (CPU0_SPROT_RGN7_UA)







#define CPU1_SPROT_ACCENA (*(volatile Ifx_CPU_SPROT_ACCENA*)0xF882E100u)


#define CPU1_SPROT_ACCENB (*(volatile Ifx_CPU_SPROT_ACCENB*)0xF882E104u)


#define CPU1_SPROT_RGN0_ACCENA (*(volatile Ifx_CPU_SPROT_RGN_ACCENA*)0xF882E008u)




#define CPU1_SPROT_RGNACCENA0 (CPU1_SPROT_RGN0_ACCENA)


#define CPU1_SPROT_RGN0_ACCENB (*(volatile Ifx_CPU_SPROT_RGN_ACCENB*)0xF882E00Cu)




#define CPU1_SPROT_RGNACCENB0 (CPU1_SPROT_RGN0_ACCENB)


#define CPU1_SPROT_RGN0_LA (*(volatile Ifx_CPU_SPROT_RGN_LA*)0xF882E000u)




#define CPU1_SPROT_RGNLA0 (CPU1_SPROT_RGN0_LA)


#define CPU1_SPROT_RGN0_UA (*(volatile Ifx_CPU_SPROT_RGN_UA*)0xF882E004u)




#define CPU1_SPROT_RGNUA0 (CPU1_SPROT_RGN0_UA)


#define CPU1_SPROT_RGN1_ACCENA (*(volatile Ifx_CPU_SPROT_RGN_ACCENA*)0xF882E018u)




#define CPU1_SPROT_RGNACCENA1 (CPU1_SPROT_RGN1_ACCENA)


#define CPU1_SPROT_RGN1_ACCENB (*(volatile Ifx_CPU_SPROT_RGN_ACCENB*)0xF882E01Cu)




#define CPU1_SPROT_RGNACCENB1 (CPU1_SPROT_RGN1_ACCENB)


#define CPU1_SPROT_RGN1_LA (*(volatile Ifx_CPU_SPROT_RGN_LA*)0xF882E010u)




#define CPU1_SPROT_RGNLA1 (CPU1_SPROT_RGN1_LA)


#define CPU1_SPROT_RGN1_UA (*(volatile Ifx_CPU_SPROT_RGN_UA*)0xF882E014u)




#define CPU1_SPROT_RGNUA1 (CPU1_SPROT_RGN1_UA)


#define CPU1_SPROT_RGN2_ACCENA (*(volatile Ifx_CPU_SPROT_RGN_ACCENA*)0xF882E028u)




#define CPU1_SPROT_RGNACCENA2 (CPU1_SPROT_RGN2_ACCENA)


#define CPU1_SPROT_RGN2_ACCENB (*(volatile Ifx_CPU_SPROT_RGN_ACCENB*)0xF882E02Cu)




#define CPU1_SPROT_RGNACCENB2 (CPU1_SPROT_RGN2_ACCENB)


#define CPU1_SPROT_RGN2_LA (*(volatile Ifx_CPU_SPROT_RGN_LA*)0xF882E020u)




#define CPU1_SPROT_RGNLA2 (CPU1_SPROT_RGN2_LA)


#define CPU1_SPROT_RGN2_UA (*(volatile Ifx_CPU_SPROT_RGN_UA*)0xF882E024u)




#define CPU1_SPROT_RGNUA2 (CPU1_SPROT_RGN2_UA)


#define CPU1_SPROT_RGN3_ACCENA (*(volatile Ifx_CPU_SPROT_RGN_ACCENA*)0xF882E038u)




#define CPU1_SPROT_RGNACCENA3 (CPU1_SPROT_RGN3_ACCENA)


#define CPU1_SPROT_RGN3_ACCENB (*(volatile Ifx_CPU_SPROT_RGN_ACCENB*)0xF882E03Cu)




#define CPU1_SPROT_RGNACCENB3 (CPU1_SPROT_RGN3_ACCENB)


#define CPU1_SPROT_RGN3_LA (*(volatile Ifx_CPU_SPROT_RGN_LA*)0xF882E030u)




#define CPU1_SPROT_RGNLA3 (CPU1_SPROT_RGN3_LA)


#define CPU1_SPROT_RGN3_UA (*(volatile Ifx_CPU_SPROT_RGN_UA*)0xF882E034u)




#define CPU1_SPROT_RGNUA3 (CPU1_SPROT_RGN3_UA)


#define CPU1_SPROT_RGN4_ACCENA (*(volatile Ifx_CPU_SPROT_RGN_ACCENA*)0xF882E048u)




#define CPU1_SPROT_RGNACCENA4 (CPU1_SPROT_RGN4_ACCENA)


#define CPU1_SPROT_RGN4_ACCENB (*(volatile Ifx_CPU_SPROT_RGN_ACCENB*)0xF882E04Cu)




#define CPU1_SPROT_RGNACCENB4 (CPU1_SPROT_RGN4_ACCENB)


#define CPU1_SPROT_RGN4_LA (*(volatile Ifx_CPU_SPROT_RGN_LA*)0xF882E040u)




#define CPU1_SPROT_RGNLA4 (CPU1_SPROT_RGN4_LA)


#define CPU1_SPROT_RGN4_UA (*(volatile Ifx_CPU_SPROT_RGN_UA*)0xF882E044u)




#define CPU1_SPROT_RGNUA4 (CPU1_SPROT_RGN4_UA)


#define CPU1_SPROT_RGN5_ACCENA (*(volatile Ifx_CPU_SPROT_RGN_ACCENA*)0xF882E058u)




#define CPU1_SPROT_RGNACCENA5 (CPU1_SPROT_RGN5_ACCENA)


#define CPU1_SPROT_RGN5_ACCENB (*(volatile Ifx_CPU_SPROT_RGN_ACCENB*)0xF882E05Cu)




#define CPU1_SPROT_RGNACCENB5 (CPU1_SPROT_RGN5_ACCENB)


#define CPU1_SPROT_RGN5_LA (*(volatile Ifx_CPU_SPROT_RGN_LA*)0xF882E050u)




#define CPU1_SPROT_RGNLA5 (CPU1_SPROT_RGN5_LA)


#define CPU1_SPROT_RGN5_UA (*(volatile Ifx_CPU_SPROT_RGN_UA*)0xF882E054u)




#define CPU1_SPROT_RGNUA5 (CPU1_SPROT_RGN5_UA)


#define CPU1_SPROT_RGN6_ACCENA (*(volatile Ifx_CPU_SPROT_RGN_ACCENA*)0xF882E068u)




#define CPU1_SPROT_RGNACCENA6 (CPU1_SPROT_RGN6_ACCENA)


#define CPU1_SPROT_RGN6_ACCENB (*(volatile Ifx_CPU_SPROT_RGN_ACCENB*)0xF882E06Cu)




#define CPU1_SPROT_RGNACCENB6 (CPU1_SPROT_RGN6_ACCENB)


#define CPU1_SPROT_RGN6_LA (*(volatile Ifx_CPU_SPROT_RGN_LA*)0xF882E060u)




#define CPU1_SPROT_RGNLA6 (CPU1_SPROT_RGN6_LA)


#define CPU1_SPROT_RGN6_UA (*(volatile Ifx_CPU_SPROT_RGN_UA*)0xF882E064u)




#define CPU1_SPROT_RGNUA6 (CPU1_SPROT_RGN6_UA)


#define CPU1_SPROT_RGN7_ACCENA (*(volatile Ifx_CPU_SPROT_RGN_ACCENA*)0xF882E078u)




#define CPU1_SPROT_RGNACCENA7 (CPU1_SPROT_RGN7_ACCENA)


#define CPU1_SPROT_RGN7_ACCENB (*(volatile Ifx_CPU_SPROT_RGN_ACCENB*)0xF882E07Cu)




#define CPU1_SPROT_RGNACCENB7 (CPU1_SPROT_RGN7_ACCENB)


#define CPU1_SPROT_RGN7_LA (*(volatile Ifx_CPU_SPROT_RGN_LA*)0xF882E070u)




#define CPU1_SPROT_RGNLA7 (CPU1_SPROT_RGN7_LA)


#define CPU1_SPROT_RGN7_UA (*(volatile Ifx_CPU_SPROT_RGN_UA*)0xF882E074u)




#define CPU1_SPROT_RGNUA7 (CPU1_SPROT_RGN7_UA)







#define CPU2_SPROT_ACCENA (*(volatile Ifx_CPU_SPROT_ACCENA*)0xF884E100u)


#define CPU2_SPROT_ACCENB (*(volatile Ifx_CPU_SPROT_ACCENB*)0xF884E104u)


#define CPU2_SPROT_RGN0_ACCENA (*(volatile Ifx_CPU_SPROT_RGN_ACCENA*)0xF884E008u)




#define CPU2_SPROT_RGNACCENA0 (CPU2_SPROT_RGN0_ACCENA)


#define CPU2_SPROT_RGN0_ACCENB (*(volatile Ifx_CPU_SPROT_RGN_ACCENB*)0xF884E00Cu)




#define CPU2_SPROT_RGNACCENB0 (CPU2_SPROT_RGN0_ACCENB)


#define CPU2_SPROT_RGN0_LA (*(volatile Ifx_CPU_SPROT_RGN_LA*)0xF884E000u)




#define CPU2_SPROT_RGNLA0 (CPU2_SPROT_RGN0_LA)


#define CPU2_SPROT_RGN0_UA (*(volatile Ifx_CPU_SPROT_RGN_UA*)0xF884E004u)




#define CPU2_SPROT_RGNUA0 (CPU2_SPROT_RGN0_UA)


#define CPU2_SPROT_RGN1_ACCENA (*(volatile Ifx_CPU_SPROT_RGN_ACCENA*)0xF884E018u)




#define CPU2_SPROT_RGNACCENA1 (CPU2_SPROT_RGN1_ACCENA)


#define CPU2_SPROT_RGN1_ACCENB (*(volatile Ifx_CPU_SPROT_RGN_ACCENB*)0xF884E01Cu)




#define CPU2_SPROT_RGNACCENB1 (CPU2_SPROT_RGN1_ACCENB)


#define CPU2_SPROT_RGN1_LA (*(volatile Ifx_CPU_SPROT_RGN_LA*)0xF884E010u)




#define CPU2_SPROT_RGNLA1 (CPU2_SPROT_RGN1_LA)


#define CPU2_SPROT_RGN1_UA (*(volatile Ifx_CPU_SPROT_RGN_UA*)0xF884E014u)




#define CPU2_SPROT_RGNUA1 (CPU2_SPROT_RGN1_UA)


#define CPU2_SPROT_RGN2_ACCENA (*(volatile Ifx_CPU_SPROT_RGN_ACCENA*)0xF884E028u)




#define CPU2_SPROT_RGNACCENA2 (CPU2_SPROT_RGN2_ACCENA)


#define CPU2_SPROT_RGN2_ACCENB (*(volatile Ifx_CPU_SPROT_RGN_ACCENB*)0xF884E02Cu)




#define CPU2_SPROT_RGNACCENB2 (CPU2_SPROT_RGN2_ACCENB)


#define CPU2_SPROT_RGN2_LA (*(volatile Ifx_CPU_SPROT_RGN_LA*)0xF884E020u)




#define CPU2_SPROT_RGNLA2 (CPU2_SPROT_RGN2_LA)


#define CPU2_SPROT_RGN2_UA (*(volatile Ifx_CPU_SPROT_RGN_UA*)0xF884E024u)




#define CPU2_SPROT_RGNUA2 (CPU2_SPROT_RGN2_UA)


#define CPU2_SPROT_RGN3_ACCENA (*(volatile Ifx_CPU_SPROT_RGN_ACCENA*)0xF884E038u)




#define CPU2_SPROT_RGNACCENA3 (CPU2_SPROT_RGN3_ACCENA)


#define CPU2_SPROT_RGN3_ACCENB (*(volatile Ifx_CPU_SPROT_RGN_ACCENB*)0xF884E03Cu)




#define CPU2_SPROT_RGNACCENB3 (CPU2_SPROT_RGN3_ACCENB)


#define CPU2_SPROT_RGN3_LA (*(volatile Ifx_CPU_SPROT_RGN_LA*)0xF884E030u)




#define CPU2_SPROT_RGNLA3 (CPU2_SPROT_RGN3_LA)


#define CPU2_SPROT_RGN3_UA (*(volatile Ifx_CPU_SPROT_RGN_UA*)0xF884E034u)




#define CPU2_SPROT_RGNUA3 (CPU2_SPROT_RGN3_UA)


#define CPU2_SPROT_RGN4_ACCENA (*(volatile Ifx_CPU_SPROT_RGN_ACCENA*)0xF884E048u)




#define CPU2_SPROT_RGNACCENA4 (CPU2_SPROT_RGN4_ACCENA)


#define CPU2_SPROT_RGN4_ACCENB (*(volatile Ifx_CPU_SPROT_RGN_ACCENB*)0xF884E04Cu)




#define CPU2_SPROT_RGNACCENB4 (CPU2_SPROT_RGN4_ACCENB)


#define CPU2_SPROT_RGN4_LA (*(volatile Ifx_CPU_SPROT_RGN_LA*)0xF884E040u)




#define CPU2_SPROT_RGNLA4 (CPU2_SPROT_RGN4_LA)


#define CPU2_SPROT_RGN4_UA (*(volatile Ifx_CPU_SPROT_RGN_UA*)0xF884E044u)




#define CPU2_SPROT_RGNUA4 (CPU2_SPROT_RGN4_UA)


#define CPU2_SPROT_RGN5_ACCENA (*(volatile Ifx_CPU_SPROT_RGN_ACCENA*)0xF884E058u)




#define CPU2_SPROT_RGNACCENA5 (CPU2_SPROT_RGN5_ACCENA)


#define CPU2_SPROT_RGN5_ACCENB (*(volatile Ifx_CPU_SPROT_RGN_ACCENB*)0xF884E05Cu)




#define CPU2_SPROT_RGNACCENB5 (CPU2_SPROT_RGN5_ACCENB)


#define CPU2_SPROT_RGN5_LA (*(volatile Ifx_CPU_SPROT_RGN_LA*)0xF884E050u)




#define CPU2_SPROT_RGNLA5 (CPU2_SPROT_RGN5_LA)


#define CPU2_SPROT_RGN5_UA (*(volatile Ifx_CPU_SPROT_RGN_UA*)0xF884E054u)




#define CPU2_SPROT_RGNUA5 (CPU2_SPROT_RGN5_UA)


#define CPU2_SPROT_RGN6_ACCENA (*(volatile Ifx_CPU_SPROT_RGN_ACCENA*)0xF884E068u)




#define CPU2_SPROT_RGNACCENA6 (CPU2_SPROT_RGN6_ACCENA)


#define CPU2_SPROT_RGN6_ACCENB (*(volatile Ifx_CPU_SPROT_RGN_ACCENB*)0xF884E06Cu)




#define CPU2_SPROT_RGNACCENB6 (CPU2_SPROT_RGN6_ACCENB)


#define CPU2_SPROT_RGN6_LA (*(volatile Ifx_CPU_SPROT_RGN_LA*)0xF884E060u)




#define CPU2_SPROT_RGNLA6 (CPU2_SPROT_RGN6_LA)


#define CPU2_SPROT_RGN6_UA (*(volatile Ifx_CPU_SPROT_RGN_UA*)0xF884E064u)




#define CPU2_SPROT_RGNUA6 (CPU2_SPROT_RGN6_UA)


#define CPU2_SPROT_RGN7_ACCENA (*(volatile Ifx_CPU_SPROT_RGN_ACCENA*)0xF884E078u)




#define CPU2_SPROT_RGNACCENA7 (CPU2_SPROT_RGN7_ACCENA)


#define CPU2_SPROT_RGN7_ACCENB (*(volatile Ifx_CPU_SPROT_RGN_ACCENB*)0xF884E07Cu)




#define CPU2_SPROT_RGNACCENB7 (CPU2_SPROT_RGN7_ACCENB)


#define CPU2_SPROT_RGN7_LA (*(volatile Ifx_CPU_SPROT_RGN_LA*)0xF884E070u)




#define CPU2_SPROT_RGNLA7 (CPU2_SPROT_RGN7_LA)


#define CPU2_SPROT_RGN7_UA (*(volatile Ifx_CPU_SPROT_RGN_UA*)0xF884E074u)




#define CPU2_SPROT_RGNUA7 (CPU2_SPROT_RGN7_UA)
# 58 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu_cfg.h" 2 3







#define IFXCPU_NUM_MODULES (3)



#define IFXCPU_CACHABLE_FLASH_SEGMENT (8)



#define IFXCPU_CACHABLE_LMU_SEGMENT (9)
# 95 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu_cfg.h" 3
#define IFXCPU_CFG_ALLCORE_DONE (0x7)





#define IFXCPU_ALLCORE_DONE IFXCPU_CFG_ALLCORE_DONE
# 116 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu_cfg.h" 3
typedef enum
{
    IfxCpu_DBGST_HALT_run = 0,
    IfxCpu_DBGST_HALT_halt = 1
} IfxCpu_DBGST_HALT;



typedef enum
{
    IfxCpu_Id_0 = 0,
    IfxCpu_Id_1 = 1,
    IfxCpu_Id_2 = 2,
    IfxCpu_Id_none
} IfxCpu_Id;



typedef enum
{
    IfxCpu_Index_0 = 0,
    IfxCpu_Index_1 = 1,
    IfxCpu_Index_2 = 2,
    IfxCpu_Index_none
} IfxCpu_Index;



typedef enum
{
    IfxCpu_PMCSR_PMST_normalMode = 1,
    IfxCpu_PMCSR_PMST_idleModeRequest = 2,
    IfxCpu_PMCSR_PMST_idleMode = 3,
    IfxCpu_PMCSR_PMST_sleepModeRequest = 4,
    IfxCpu_PMCSR_PMST_standbyModeRequest = 6
} IfxCpu_PMCSR_PMST;



typedef enum
{
    IfxCpu_ResourceCpu_0 = IfxCpu_Index_0,
    IfxCpu_ResourceCpu_1 = IfxCpu_Index_1,
    IfxCpu_ResourceCpu_2 = IfxCpu_Index_2,
    IfxCpu_ResourceCpu_none = IfxCpu_Index_none
} IfxCpu_ResourceCpu;





extern const IfxModule_IndexMap IfxCpu_cfg_indexMap[(3)];
# 70 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 2 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxSrc_reg.h" 1 3
# 34 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxSrc_reg.h" 3
#define IFXSRC_REG_H 1

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxSrc_regdef.h" 1 3
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxSrc_regdef.h" 3
#define IFXSRC_REGDEF_H 1







typedef struct _Ifx_SRC_SRCR_Bits
{
    unsigned int SRPN:8;
    unsigned int reserved_8:2;
    unsigned int SRE:1;
    unsigned int TOS:2;
    unsigned int reserved_13:3;
    unsigned int ECC:6;
    unsigned int reserved_22:2;
    unsigned int SRR:1;
    unsigned int CLRR:1;
    unsigned int SETR:1;
    unsigned int IOV:1;
    unsigned int IOVCLR:1;
    unsigned int SWS:1;
    unsigned int SWSCLR:1;
    unsigned int reserved_31:1;
} Ifx_SRC_SRCR_Bits;







typedef union
{
    unsigned int U;
    signed int I;
    Ifx_SRC_SRCR_Bits B;
} Ifx_SRC_SRCR;
# 86 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxSrc_regdef.h" 3
typedef volatile struct _Ifx_SRC_AGBT
{
    Ifx_SRC_SRCR SR;
} Ifx_SRC_AGBT;


typedef volatile struct _Ifx_SRC_ASCLIN
{
    Ifx_SRC_SRCR TX;
    Ifx_SRC_SRCR RX;
    Ifx_SRC_SRCR ERR;
} Ifx_SRC_ASCLIN;


typedef volatile struct _Ifx_SRC_BCUSPB
{
    Ifx_SRC_SRCR SBSRC;
} Ifx_SRC_BCUSPB;


typedef volatile struct _Ifx_SRC_CAN
{
    Ifx_SRC_SRCR INT[16];
} Ifx_SRC_CAN;


typedef volatile struct _Ifx_SRC_CCU6
{
    Ifx_SRC_SRCR SR0;
    Ifx_SRC_SRCR SR1;
    Ifx_SRC_SRCR SR2;
    Ifx_SRC_SRCR SR3;
} Ifx_SRC_CCU6;


typedef volatile struct _Ifx_SRC_CERBERUS
{
    Ifx_SRC_SRCR SR[2];
} Ifx_SRC_CERBERUS;


typedef volatile struct _Ifx_SRC_CIF
{
    Ifx_SRC_SRCR MI;
    Ifx_SRC_SRCR MIEP;
    Ifx_SRC_SRCR ISP;
    Ifx_SRC_SRCR MJPEG;
} Ifx_SRC_CIF;


typedef volatile struct _Ifx_SRC_CPU
{
    Ifx_SRC_SRCR SBSRC;
} Ifx_SRC_CPU;


typedef volatile struct _Ifx_SRC_DAM
{
    Ifx_SRC_SRCR SR[6];
} Ifx_SRC_DAM;


typedef volatile struct _Ifx_SRC_DMA
{
    Ifx_SRC_SRCR ERR;
    unsigned char reserved_4[12];
    Ifx_SRC_SRCR CH[64];
} Ifx_SRC_DMA;


typedef volatile struct _Ifx_SRC_DSADC
{
    Ifx_SRC_SRCR SRM;
    Ifx_SRC_SRCR SRA;
} Ifx_SRC_DSADC;


typedef volatile struct _Ifx_SRC_EMEM
{
    Ifx_SRC_SRCR SR;
} Ifx_SRC_EMEM;


typedef volatile struct _Ifx_SRC_ERAY
{
    Ifx_SRC_SRCR INT[2];
    Ifx_SRC_SRCR TINT[2];
    Ifx_SRC_SRCR NDAT[2];
    Ifx_SRC_SRCR MBSC[2];
    Ifx_SRC_SRCR OBUSY;
    Ifx_SRC_SRCR IBUSY;
    unsigned char reserved_28[40];
} Ifx_SRC_ERAY;


typedef volatile struct _Ifx_SRC_ETH
{
    Ifx_SRC_SRCR SR;
} Ifx_SRC_ETH;


typedef volatile struct _Ifx_SRC_FCE
{
    Ifx_SRC_SRCR SR;
} Ifx_SRC_FCE;


typedef volatile struct _Ifx_SRC_GPSR
{
    Ifx_SRC_SRCR SR0;
    Ifx_SRC_SRCR SR1;
    Ifx_SRC_SRCR SR2;
    Ifx_SRC_SRCR SR3;
    unsigned char reserved_10[16];
} Ifx_SRC_GPSR;


typedef volatile struct _Ifx_SRC_GPT12
{
    Ifx_SRC_SRCR CIRQ;
    Ifx_SRC_SRCR T2;
    Ifx_SRC_SRCR T3;
    Ifx_SRC_SRCR T4;
    Ifx_SRC_SRCR T5;
    Ifx_SRC_SRCR T6;
    unsigned char reserved_18[24];
} Ifx_SRC_GPT12;


typedef volatile struct _Ifx_SRC_GTM
{
    Ifx_SRC_SRCR AEIIRQ;
    Ifx_SRC_SRCR ARUIRQ[3];
    unsigned char reserved_10[4];
    Ifx_SRC_SRCR BRCIRQ;
    Ifx_SRC_SRCR CMPIRQ;
    Ifx_SRC_SRCR SPEIRQ[2];
    unsigned char reserved_24[8];
    Ifx_SRC_SRCR PSM[1][8];
    unsigned char reserved_4C[88];
    Ifx_SRC_SRCR DPLL[27];
    unsigned char reserved_110[96];
    Ifx_SRC_SRCR ERR;
    unsigned char reserved_174[12];
    Ifx_SRC_SRCR TIM[4][8];
    unsigned char reserved_200[384];
    Ifx_SRC_SRCR MCS[4][8];
    unsigned char reserved_400[384];
    Ifx_SRC_SRCR TOM[3][8];
    unsigned char reserved_5E0[416];
    Ifx_SRC_SRCR ATOM[5][4];
    unsigned char reserved_7D0[304];
    Ifx_SRC_SRCR MCSW0[4];
    unsigned char reserved_910[48];
    Ifx_SRC_SRCR MCSW1[4];
} Ifx_SRC_GTM;


typedef volatile struct _Ifx_SRC_HSCT
{
    Ifx_SRC_SRCR SR;
} Ifx_SRC_HSCT;


typedef volatile struct _Ifx_SRC_HSM
{
    Ifx_SRC_SRCR HSM[2];
} Ifx_SRC_HSM;


typedef volatile struct _Ifx_SRC_HSSL
{
    Ifx_SRC_SRCR COK;
    Ifx_SRC_SRCR RDI;
    Ifx_SRC_SRCR ERR;
    Ifx_SRC_SRCR TRG;
} Ifx_SRC_HSSL;


typedef volatile struct _Ifx_SRC_I2C
{
    Ifx_SRC_SRCR BREQ;
    Ifx_SRC_SRCR LBREQ;
    Ifx_SRC_SRCR SREQ;
    Ifx_SRC_SRCR LSREQ;
    Ifx_SRC_SRCR ERR;
    Ifx_SRC_SRCR P;
    unsigned char reserved_18[56];
} Ifx_SRC_I2C;


typedef volatile struct _Ifx_SRC_LMU
{
    Ifx_SRC_SRCR SR;
} Ifx_SRC_LMU;


typedef volatile struct _Ifx_SRC_MSC
{
    Ifx_SRC_SRCR SR0;
    Ifx_SRC_SRCR SR1;
    Ifx_SRC_SRCR SR2;
    Ifx_SRC_SRCR SR3;
    Ifx_SRC_SRCR SR4;
} Ifx_SRC_MSC;


typedef volatile struct _Ifx_SRC_PMU
{
    Ifx_SRC_SRCR SR;
} Ifx_SRC_PMU;


typedef volatile struct _Ifx_SRC_PSI5
{
    Ifx_SRC_SRCR SR[8];
} Ifx_SRC_PSI5;


typedef volatile struct _Ifx_SRC_PSI5S
{
    Ifx_SRC_SRCR SR[8];
} Ifx_SRC_PSI5S;


typedef volatile struct _Ifx_SRC_QSPI
{
    Ifx_SRC_SRCR TX;
    Ifx_SRC_SRCR RX;
    Ifx_SRC_SRCR ERR;
    Ifx_SRC_SRCR PT;
    unsigned char reserved_10[4];
    Ifx_SRC_SRCR U;
} Ifx_SRC_QSPI;


typedef volatile struct _Ifx_SRC_SCU
{
    Ifx_SRC_SRCR DTS;
    Ifx_SRC_SRCR ERU[4];
} Ifx_SRC_SCU;


typedef volatile struct _Ifx_SRC_SENT
{
    Ifx_SRC_SRCR SR[10];
} Ifx_SRC_SENT;


typedef volatile struct _Ifx_SRC_SMU
{
    Ifx_SRC_SRCR SR[3];
} Ifx_SRC_SMU;


typedef volatile struct _Ifx_SRC_STM
{
    Ifx_SRC_SRCR SR0;
    Ifx_SRC_SRCR SR1;
} Ifx_SRC_STM;


typedef volatile struct _Ifx_SRC_VADCCG
{
    Ifx_SRC_SRCR SR0;
    Ifx_SRC_SRCR SR1;
    Ifx_SRC_SRCR SR2;
    Ifx_SRC_SRCR SR3;
} Ifx_SRC_VADCCG;


typedef volatile struct _Ifx_SRC_VADCG
{
    Ifx_SRC_SRCR SR0;
    Ifx_SRC_SRCR SR1;
    Ifx_SRC_SRCR SR2;
    Ifx_SRC_SRCR SR3;
} Ifx_SRC_VADCG;


typedef volatile struct _Ifx_SRC_XBAR
{
    Ifx_SRC_SRCR SRC;
} Ifx_SRC_XBAR;
# 382 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxSrc_regdef.h" 3
typedef volatile struct _Ifx_SRC_GAGBT
{
    Ifx_SRC_AGBT AGBT[1];
} Ifx_SRC_GAGBT;


typedef volatile struct _Ifx_SRC_GASCLIN
{
    Ifx_SRC_ASCLIN ASCLIN[4];
} Ifx_SRC_GASCLIN;


typedef volatile struct _Ifx_SRC_GBCU
{
    Ifx_SRC_BCUSPB SPB;
} Ifx_SRC_GBCU;


typedef volatile struct _Ifx_SRC_GCAN
{
    Ifx_SRC_CAN CAN[1];
} Ifx_SRC_GCAN;


typedef volatile struct _Ifx_SRC_GCCU6
{
    Ifx_SRC_CCU6 CCU6[2];
} Ifx_SRC_GCCU6;


typedef volatile struct _Ifx_SRC_GCERBERUS
{
    Ifx_SRC_CERBERUS CERBERUS;
} Ifx_SRC_GCERBERUS;


typedef volatile struct _Ifx_SRC_GCIF
{
    Ifx_SRC_CIF CIF[1];
} Ifx_SRC_GCIF;


typedef volatile struct _Ifx_SRC_GCPU
{
    Ifx_SRC_CPU CPU[3];
} Ifx_SRC_GCPU;


typedef volatile struct _Ifx_SRC_GDAM
{
    Ifx_SRC_DAM DAM[1];
} Ifx_SRC_GDAM;


typedef volatile struct _Ifx_SRC_GDMA
{
    Ifx_SRC_DMA DMA[1];
} Ifx_SRC_GDMA;


typedef volatile struct _Ifx_SRC_GDSADC
{
    Ifx_SRC_DSADC DSADC[6];
} Ifx_SRC_GDSADC;


typedef volatile struct _Ifx_SRC_GEMEM
{
    Ifx_SRC_EMEM EMEM[1];
} Ifx_SRC_GEMEM;


typedef volatile struct _Ifx_SRC_GERAY
{
    Ifx_SRC_ERAY ERAY[1];
} Ifx_SRC_GERAY;


typedef volatile struct _Ifx_SRC_GETH
{
    Ifx_SRC_ETH ETH[1];
} Ifx_SRC_GETH;


typedef volatile struct _Ifx_SRC_GFCE
{
    Ifx_SRC_FCE FCE[1];
} Ifx_SRC_GFCE;


typedef volatile struct _Ifx_SRC_GGPSR
{
    Ifx_SRC_GPSR GPSR[3];
} Ifx_SRC_GGPSR;


typedef volatile struct _Ifx_SRC_GGPT12
{
    Ifx_SRC_GPT12 GPT12[1];
} Ifx_SRC_GGPT12;


typedef volatile struct _Ifx_SRC_GGTM
{
    Ifx_SRC_GTM GTM[1];
} Ifx_SRC_GGTM;


typedef volatile struct _Ifx_SRC_GHSCT
{
    Ifx_SRC_HSCT HSCT[1];
} Ifx_SRC_GHSCT;


typedef volatile struct _Ifx_SRC_GHSM
{
    Ifx_SRC_HSM HSM[1];
} Ifx_SRC_GHSM;


typedef volatile struct _Ifx_SRC_GHSSL
{
    Ifx_SRC_HSSL HSSL[4];
    Ifx_SRC_SRCR EXI;
} Ifx_SRC_GHSSL;


typedef volatile struct _Ifx_SRC_GI2C
{
    Ifx_SRC_I2C I2C[1];
} Ifx_SRC_GI2C;


typedef volatile struct _Ifx_SRC_GLMU
{
    Ifx_SRC_LMU LMU[1];
} Ifx_SRC_GLMU;


typedef volatile struct _Ifx_SRC_GMSC
{
    Ifx_SRC_MSC MSC[2];
} Ifx_SRC_GMSC;


typedef volatile struct _Ifx_SRC_GPMU
{
    Ifx_SRC_PMU PMU[2];
} Ifx_SRC_GPMU;


typedef volatile struct _Ifx_SRC_GPSI5
{
    Ifx_SRC_PSI5 PSI5[1];
} Ifx_SRC_GPSI5;


typedef volatile struct _Ifx_SRC_GPSI5S
{
    Ifx_SRC_PSI5S PSI5S[1];
} Ifx_SRC_GPSI5S;


typedef volatile struct _Ifx_SRC_GQSPI
{
    Ifx_SRC_QSPI QSPI[4];
} Ifx_SRC_GQSPI;


typedef volatile struct _Ifx_SRC_GSCU
{
    Ifx_SRC_SCU SCU;
} Ifx_SRC_GSCU;


typedef volatile struct _Ifx_SRC_GSENT
{
    Ifx_SRC_SENT SENT[1];
} Ifx_SRC_GSENT;


typedef volatile struct _Ifx_SRC_GSMU
{
    Ifx_SRC_SMU SMU[1];
} Ifx_SRC_GSMU;


typedef volatile struct _Ifx_SRC_GSTM
{
    Ifx_SRC_STM STM[3];
} Ifx_SRC_GSTM;


typedef volatile struct _Ifx_SRC_GVADC
{
    Ifx_SRC_VADCG G[8];
    unsigned char reserved_80[160];
    Ifx_SRC_VADCCG CG[2];
} Ifx_SRC_GVADC;


typedef volatile struct _Ifx_SRC_GXBAR
{
    Ifx_SRC_XBAR XBAR;
} Ifx_SRC_GXBAR;
# 599 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxSrc_regdef.h" 3
typedef volatile struct _Ifx_SRC
{
    Ifx_SRC_GCPU CPU;
    unsigned char reserved_C[20];
    Ifx_SRC_GEMEM EMEM;
    Ifx_SRC_GAGBT AGBT;
    unsigned char reserved_28[24];
    Ifx_SRC_GBCU BCU;
    unsigned char reserved_44[4];
    Ifx_SRC_GXBAR XBAR;
    unsigned char reserved_4C[4];
    Ifx_SRC_GCERBERUS CERBERUS;
    unsigned char reserved_58[40];
    Ifx_SRC_GASCLIN ASCLIN;
    unsigned char reserved_B0[224];
    Ifx_SRC_GQSPI QSPI;
    unsigned char reserved_1F0[160];
    Ifx_SRC_GHSCT HSCT;
    unsigned char reserved_294[12];
    Ifx_SRC_GHSSL HSSL;
    unsigned char reserved_2E4[28];
    Ifx_SRC_GI2C I2C;
    Ifx_SRC_GSENT SENT;
    unsigned char reserved_378[104];
    Ifx_SRC_GMSC MSC;
    unsigned char reserved_408[24];
    Ifx_SRC_GCCU6 CCU6;
    unsigned char reserved_440[32];
    Ifx_SRC_GGPT12 GPT12;
    Ifx_SRC_GSTM STM;
    unsigned char reserved_4A8[8];
    Ifx_SRC_GFCE FCE;
    unsigned char reserved_4B4[60];
    Ifx_SRC_GDMA DMA;
    unsigned char reserved_600[752];
    Ifx_SRC_GETH ETH;
    unsigned char reserved_8F4[12];
    Ifx_SRC_GCAN CAN;
    unsigned char reserved_940[64];
    Ifx_SRC_GVADC VADC;
    unsigned char reserved_AC0[144];
    Ifx_SRC_GDSADC DSADC;
    unsigned char reserved_B80[96];
    Ifx_SRC_GERAY ERAY;
    Ifx_SRC_GPMU PMU;
    unsigned char reserved_C38[136];
    Ifx_SRC_GHSM HSM;
    unsigned char reserved_CC8[8];
    Ifx_SRC_GSCU SCU;
    unsigned char reserved_CE4[44];
    Ifx_SRC_GSMU SMU;
    unsigned char reserved_D1C[20];
    Ifx_SRC_GPSI5 PSI5;
    unsigned char reserved_D50[32];
    Ifx_SRC_GDAM DAM;
    unsigned char reserved_D88[24];
    Ifx_SRC_GCIF CIF;
    unsigned char reserved_DB0[48];
    Ifx_SRC_GLMU LMU;
    unsigned char reserved_DE4[12];
    Ifx_SRC_GPSI5S PSI5S;
    unsigned char reserved_E10[496];
    Ifx_SRC_GGPSR GPSR;
    unsigned char reserved_1060[1440];
    Ifx_SRC_GGTM GTM;
    unsigned char reserved_1F50[176];
} Ifx_SRC;
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxSrc_reg.h" 2 3





#define MODULE_SRC (*(Ifx_SRC*)0xF0038000u)







#define SRC_AGBT_AGBT0_SR (*(volatile Ifx_SRC_SRCR*)0xF0038024u)




#define SRC_AGBT (SRC_AGBT_AGBT0_SR)


#define SRC_ASCLIN_ASCLIN0_ERR (*(volatile Ifx_SRC_SRCR*)0xF0038088u)




#define SRC_ASCLIN0ERR (SRC_ASCLIN_ASCLIN0_ERR)


#define SRC_ASCLIN_ASCLIN0_RX (*(volatile Ifx_SRC_SRCR*)0xF0038084u)




#define SRC_ASCLIN0RX (SRC_ASCLIN_ASCLIN0_RX)


#define SRC_ASCLIN_ASCLIN0_TX (*(volatile Ifx_SRC_SRCR*)0xF0038080u)




#define SRC_ASCLIN0TX (SRC_ASCLIN_ASCLIN0_TX)


#define SRC_ASCLIN_ASCLIN1_ERR (*(volatile Ifx_SRC_SRCR*)0xF0038094u)




#define SRC_ASCLIN1ERR (SRC_ASCLIN_ASCLIN1_ERR)


#define SRC_ASCLIN_ASCLIN1_RX (*(volatile Ifx_SRC_SRCR*)0xF0038090u)




#define SRC_ASCLIN1RX (SRC_ASCLIN_ASCLIN1_RX)


#define SRC_ASCLIN_ASCLIN1_TX (*(volatile Ifx_SRC_SRCR*)0xF003808Cu)




#define SRC_ASCLIN1TX (SRC_ASCLIN_ASCLIN1_TX)


#define SRC_ASCLIN_ASCLIN2_ERR (*(volatile Ifx_SRC_SRCR*)0xF00380A0u)




#define SRC_ASCLIN2ERR (SRC_ASCLIN_ASCLIN2_ERR)


#define SRC_ASCLIN_ASCLIN2_RX (*(volatile Ifx_SRC_SRCR*)0xF003809Cu)




#define SRC_ASCLIN2RX (SRC_ASCLIN_ASCLIN2_RX)


#define SRC_ASCLIN_ASCLIN2_TX (*(volatile Ifx_SRC_SRCR*)0xF0038098u)




#define SRC_ASCLIN2TX (SRC_ASCLIN_ASCLIN2_TX)


#define SRC_ASCLIN_ASCLIN3_ERR (*(volatile Ifx_SRC_SRCR*)0xF00380ACu)




#define SRC_ASCLIN3ERR (SRC_ASCLIN_ASCLIN3_ERR)


#define SRC_ASCLIN_ASCLIN3_RX (*(volatile Ifx_SRC_SRCR*)0xF00380A8u)




#define SRC_ASCLIN3RX (SRC_ASCLIN_ASCLIN3_RX)


#define SRC_ASCLIN_ASCLIN3_TX (*(volatile Ifx_SRC_SRCR*)0xF00380A4u)




#define SRC_ASCLIN3TX (SRC_ASCLIN_ASCLIN3_TX)


#define SRC_BCU_SPB_SBSRC (*(volatile Ifx_SRC_SRCR*)0xF0038040u)




#define SRC_BCUSPBSBSRC (SRC_BCU_SPB_SBSRC)


#define SRC_CAN_CAN0_INT0 (*(volatile Ifx_SRC_SRCR*)0xF0038900u)




#define SRC_CANINT0 (SRC_CAN_CAN0_INT0)


#define SRC_CAN_CAN0_INT1 (*(volatile Ifx_SRC_SRCR*)0xF0038904u)




#define SRC_CANINT1 (SRC_CAN_CAN0_INT1)


#define SRC_CAN_CAN0_INT10 (*(volatile Ifx_SRC_SRCR*)0xF0038928u)




#define SRC_CANINT10 (SRC_CAN_CAN0_INT10)


#define SRC_CAN_CAN0_INT11 (*(volatile Ifx_SRC_SRCR*)0xF003892Cu)




#define SRC_CANINT11 (SRC_CAN_CAN0_INT11)


#define SRC_CAN_CAN0_INT12 (*(volatile Ifx_SRC_SRCR*)0xF0038930u)




#define SRC_CANINT12 (SRC_CAN_CAN0_INT12)


#define SRC_CAN_CAN0_INT13 (*(volatile Ifx_SRC_SRCR*)0xF0038934u)




#define SRC_CANINT13 (SRC_CAN_CAN0_INT13)


#define SRC_CAN_CAN0_INT14 (*(volatile Ifx_SRC_SRCR*)0xF0038938u)




#define SRC_CANINT14 (SRC_CAN_CAN0_INT14)


#define SRC_CAN_CAN0_INT15 (*(volatile Ifx_SRC_SRCR*)0xF003893Cu)




#define SRC_CANINT15 (SRC_CAN_CAN0_INT15)


#define SRC_CAN_CAN0_INT2 (*(volatile Ifx_SRC_SRCR*)0xF0038908u)




#define SRC_CANINT2 (SRC_CAN_CAN0_INT2)


#define SRC_CAN_CAN0_INT3 (*(volatile Ifx_SRC_SRCR*)0xF003890Cu)




#define SRC_CANINT3 (SRC_CAN_CAN0_INT3)


#define SRC_CAN_CAN0_INT4 (*(volatile Ifx_SRC_SRCR*)0xF0038910u)




#define SRC_CANINT4 (SRC_CAN_CAN0_INT4)


#define SRC_CAN_CAN0_INT5 (*(volatile Ifx_SRC_SRCR*)0xF0038914u)




#define SRC_CANINT5 (SRC_CAN_CAN0_INT5)


#define SRC_CAN_CAN0_INT6 (*(volatile Ifx_SRC_SRCR*)0xF0038918u)




#define SRC_CANINT6 (SRC_CAN_CAN0_INT6)


#define SRC_CAN_CAN0_INT7 (*(volatile Ifx_SRC_SRCR*)0xF003891Cu)




#define SRC_CANINT7 (SRC_CAN_CAN0_INT7)


#define SRC_CAN_CAN0_INT8 (*(volatile Ifx_SRC_SRCR*)0xF0038920u)




#define SRC_CANINT8 (SRC_CAN_CAN0_INT8)


#define SRC_CAN_CAN0_INT9 (*(volatile Ifx_SRC_SRCR*)0xF0038924u)




#define SRC_CANINT9 (SRC_CAN_CAN0_INT9)


#define SRC_CCU6_CCU60_SR0 (*(volatile Ifx_SRC_SRCR*)0xF0038420u)




#define SRC_CCU60SR0 (SRC_CCU6_CCU60_SR0)


#define SRC_CCU6_CCU60_SR1 (*(volatile Ifx_SRC_SRCR*)0xF0038424u)




#define SRC_CCU60SR1 (SRC_CCU6_CCU60_SR1)


#define SRC_CCU6_CCU60_SR2 (*(volatile Ifx_SRC_SRCR*)0xF0038428u)




#define SRC_CCU60SR2 (SRC_CCU6_CCU60_SR2)


#define SRC_CCU6_CCU60_SR3 (*(volatile Ifx_SRC_SRCR*)0xF003842Cu)




#define SRC_CCU60SR3 (SRC_CCU6_CCU60_SR3)


#define SRC_CCU6_CCU61_SR0 (*(volatile Ifx_SRC_SRCR*)0xF0038430u)




#define SRC_CCU61SR0 (SRC_CCU6_CCU61_SR0)


#define SRC_CCU6_CCU61_SR1 (*(volatile Ifx_SRC_SRCR*)0xF0038434u)




#define SRC_CCU61SR1 (SRC_CCU6_CCU61_SR1)


#define SRC_CCU6_CCU61_SR2 (*(volatile Ifx_SRC_SRCR*)0xF0038438u)




#define SRC_CCU61SR2 (SRC_CCU6_CCU61_SR2)


#define SRC_CCU6_CCU61_SR3 (*(volatile Ifx_SRC_SRCR*)0xF003843Cu)




#define SRC_CCU61SR3 (SRC_CCU6_CCU61_SR3)


#define SRC_CERBERUS_CERBERUS_SR0 (*(volatile Ifx_SRC_SRCR*)0xF0038050u)




#define SRC_CERBERUS0 (SRC_CERBERUS_CERBERUS_SR0)


#define SRC_CERBERUS_CERBERUS_SR1 (*(volatile Ifx_SRC_SRCR*)0xF0038054u)




#define SRC_CERBERUS1 (SRC_CERBERUS_CERBERUS_SR1)


#define SRC_CIF_CIF0_ISP (*(volatile Ifx_SRC_SRCR*)0xF0038DA8u)




#define SRC_CIFISP (SRC_CIF_CIF0_ISP)


#define SRC_CIF_CIF0_MI (*(volatile Ifx_SRC_SRCR*)0xF0038DA0u)




#define SRC_CIFMI (SRC_CIF_CIF0_MI)


#define SRC_CIF_CIF0_MIEP (*(volatile Ifx_SRC_SRCR*)0xF0038DA4u)




#define SRC_CIFMIEP (SRC_CIF_CIF0_MIEP)


#define SRC_CIF_CIF0_MJPEG (*(volatile Ifx_SRC_SRCR*)0xF0038DACu)




#define SRC_CIFMJPEG (SRC_CIF_CIF0_MJPEG)


#define SRC_CPU_CPU0_SBSRC (*(volatile Ifx_SRC_SRCR*)0xF0038000u)




#define SRC_CPU0SBSRC (SRC_CPU_CPU0_SBSRC)


#define SRC_CPU_CPU1_SBSRC (*(volatile Ifx_SRC_SRCR*)0xF0038004u)




#define SRC_CPU1SBSRC (SRC_CPU_CPU1_SBSRC)


#define SRC_CPU_CPU2_SBSRC (*(volatile Ifx_SRC_SRCR*)0xF0038008u)




#define SRC_CPU2SBSRC (SRC_CPU_CPU2_SBSRC)


#define SRC_DAM_DAM0_SR0 (*(volatile Ifx_SRC_SRCR*)0xF0038D70u)




#define SRC_DAM0 (SRC_DAM_DAM0_SR0)


#define SRC_DAM_DAM0_SR1 (*(volatile Ifx_SRC_SRCR*)0xF0038D74u)




#define SRC_DAM1 (SRC_DAM_DAM0_SR1)


#define SRC_DAM_DAM0_SR2 (*(volatile Ifx_SRC_SRCR*)0xF0038D78u)




#define SRC_DAM2 (SRC_DAM_DAM0_SR2)


#define SRC_DAM_DAM0_SR3 (*(volatile Ifx_SRC_SRCR*)0xF0038D7Cu)




#define SRC_DAM3 (SRC_DAM_DAM0_SR3)


#define SRC_DAM_DAM0_SR4 (*(volatile Ifx_SRC_SRCR*)0xF0038D80u)




#define SRC_DAM4 (SRC_DAM_DAM0_SR4)


#define SRC_DAM_DAM0_SR5 (*(volatile Ifx_SRC_SRCR*)0xF0038D84u)




#define SRC_DAM5 (SRC_DAM_DAM0_SR5)


#define SRC_DMA_DMA0_CH0 (*(volatile Ifx_SRC_SRCR*)0xF0038500u)




#define SRC_DMACH0 (SRC_DMA_DMA0_CH0)


#define SRC_DMA_DMA0_CH1 (*(volatile Ifx_SRC_SRCR*)0xF0038504u)




#define SRC_DMACH1 (SRC_DMA_DMA0_CH1)


#define SRC_DMA_DMA0_CH10 (*(volatile Ifx_SRC_SRCR*)0xF0038528u)




#define SRC_DMACH10 (SRC_DMA_DMA0_CH10)


#define SRC_DMA_DMA0_CH11 (*(volatile Ifx_SRC_SRCR*)0xF003852Cu)




#define SRC_DMACH11 (SRC_DMA_DMA0_CH11)


#define SRC_DMA_DMA0_CH12 (*(volatile Ifx_SRC_SRCR*)0xF0038530u)




#define SRC_DMACH12 (SRC_DMA_DMA0_CH12)


#define SRC_DMA_DMA0_CH13 (*(volatile Ifx_SRC_SRCR*)0xF0038534u)




#define SRC_DMACH13 (SRC_DMA_DMA0_CH13)


#define SRC_DMA_DMA0_CH14 (*(volatile Ifx_SRC_SRCR*)0xF0038538u)




#define SRC_DMACH14 (SRC_DMA_DMA0_CH14)


#define SRC_DMA_DMA0_CH15 (*(volatile Ifx_SRC_SRCR*)0xF003853Cu)




#define SRC_DMACH15 (SRC_DMA_DMA0_CH15)


#define SRC_DMA_DMA0_CH16 (*(volatile Ifx_SRC_SRCR*)0xF0038540u)




#define SRC_DMACH16 (SRC_DMA_DMA0_CH16)


#define SRC_DMA_DMA0_CH17 (*(volatile Ifx_SRC_SRCR*)0xF0038544u)




#define SRC_DMACH17 (SRC_DMA_DMA0_CH17)


#define SRC_DMA_DMA0_CH18 (*(volatile Ifx_SRC_SRCR*)0xF0038548u)




#define SRC_DMACH18 (SRC_DMA_DMA0_CH18)


#define SRC_DMA_DMA0_CH19 (*(volatile Ifx_SRC_SRCR*)0xF003854Cu)




#define SRC_DMACH19 (SRC_DMA_DMA0_CH19)


#define SRC_DMA_DMA0_CH2 (*(volatile Ifx_SRC_SRCR*)0xF0038508u)




#define SRC_DMACH2 (SRC_DMA_DMA0_CH2)


#define SRC_DMA_DMA0_CH20 (*(volatile Ifx_SRC_SRCR*)0xF0038550u)




#define SRC_DMACH20 (SRC_DMA_DMA0_CH20)


#define SRC_DMA_DMA0_CH21 (*(volatile Ifx_SRC_SRCR*)0xF0038554u)




#define SRC_DMACH21 (SRC_DMA_DMA0_CH21)


#define SRC_DMA_DMA0_CH22 (*(volatile Ifx_SRC_SRCR*)0xF0038558u)




#define SRC_DMACH22 (SRC_DMA_DMA0_CH22)


#define SRC_DMA_DMA0_CH23 (*(volatile Ifx_SRC_SRCR*)0xF003855Cu)




#define SRC_DMACH23 (SRC_DMA_DMA0_CH23)


#define SRC_DMA_DMA0_CH24 (*(volatile Ifx_SRC_SRCR*)0xF0038560u)




#define SRC_DMACH24 (SRC_DMA_DMA0_CH24)


#define SRC_DMA_DMA0_CH25 (*(volatile Ifx_SRC_SRCR*)0xF0038564u)




#define SRC_DMACH25 (SRC_DMA_DMA0_CH25)


#define SRC_DMA_DMA0_CH26 (*(volatile Ifx_SRC_SRCR*)0xF0038568u)




#define SRC_DMACH26 (SRC_DMA_DMA0_CH26)


#define SRC_DMA_DMA0_CH27 (*(volatile Ifx_SRC_SRCR*)0xF003856Cu)




#define SRC_DMACH27 (SRC_DMA_DMA0_CH27)


#define SRC_DMA_DMA0_CH28 (*(volatile Ifx_SRC_SRCR*)0xF0038570u)




#define SRC_DMACH28 (SRC_DMA_DMA0_CH28)


#define SRC_DMA_DMA0_CH29 (*(volatile Ifx_SRC_SRCR*)0xF0038574u)




#define SRC_DMACH29 (SRC_DMA_DMA0_CH29)


#define SRC_DMA_DMA0_CH3 (*(volatile Ifx_SRC_SRCR*)0xF003850Cu)




#define SRC_DMACH3 (SRC_DMA_DMA0_CH3)


#define SRC_DMA_DMA0_CH30 (*(volatile Ifx_SRC_SRCR*)0xF0038578u)




#define SRC_DMACH30 (SRC_DMA_DMA0_CH30)


#define SRC_DMA_DMA0_CH31 (*(volatile Ifx_SRC_SRCR*)0xF003857Cu)




#define SRC_DMACH31 (SRC_DMA_DMA0_CH31)


#define SRC_DMA_DMA0_CH32 (*(volatile Ifx_SRC_SRCR*)0xF0038580u)




#define SRC_DMACH32 (SRC_DMA_DMA0_CH32)


#define SRC_DMA_DMA0_CH33 (*(volatile Ifx_SRC_SRCR*)0xF0038584u)




#define SRC_DMACH33 (SRC_DMA_DMA0_CH33)


#define SRC_DMA_DMA0_CH34 (*(volatile Ifx_SRC_SRCR*)0xF0038588u)




#define SRC_DMACH34 (SRC_DMA_DMA0_CH34)


#define SRC_DMA_DMA0_CH35 (*(volatile Ifx_SRC_SRCR*)0xF003858Cu)




#define SRC_DMACH35 (SRC_DMA_DMA0_CH35)


#define SRC_DMA_DMA0_CH36 (*(volatile Ifx_SRC_SRCR*)0xF0038590u)




#define SRC_DMACH36 (SRC_DMA_DMA0_CH36)


#define SRC_DMA_DMA0_CH37 (*(volatile Ifx_SRC_SRCR*)0xF0038594u)




#define SRC_DMACH37 (SRC_DMA_DMA0_CH37)


#define SRC_DMA_DMA0_CH38 (*(volatile Ifx_SRC_SRCR*)0xF0038598u)




#define SRC_DMACH38 (SRC_DMA_DMA0_CH38)


#define SRC_DMA_DMA0_CH39 (*(volatile Ifx_SRC_SRCR*)0xF003859Cu)




#define SRC_DMACH39 (SRC_DMA_DMA0_CH39)


#define SRC_DMA_DMA0_CH4 (*(volatile Ifx_SRC_SRCR*)0xF0038510u)




#define SRC_DMACH4 (SRC_DMA_DMA0_CH4)


#define SRC_DMA_DMA0_CH40 (*(volatile Ifx_SRC_SRCR*)0xF00385A0u)




#define SRC_DMACH40 (SRC_DMA_DMA0_CH40)


#define SRC_DMA_DMA0_CH41 (*(volatile Ifx_SRC_SRCR*)0xF00385A4u)




#define SRC_DMACH41 (SRC_DMA_DMA0_CH41)


#define SRC_DMA_DMA0_CH42 (*(volatile Ifx_SRC_SRCR*)0xF00385A8u)




#define SRC_DMACH42 (SRC_DMA_DMA0_CH42)


#define SRC_DMA_DMA0_CH43 (*(volatile Ifx_SRC_SRCR*)0xF00385ACu)




#define SRC_DMACH43 (SRC_DMA_DMA0_CH43)


#define SRC_DMA_DMA0_CH44 (*(volatile Ifx_SRC_SRCR*)0xF00385B0u)




#define SRC_DMACH44 (SRC_DMA_DMA0_CH44)


#define SRC_DMA_DMA0_CH45 (*(volatile Ifx_SRC_SRCR*)0xF00385B4u)




#define SRC_DMACH45 (SRC_DMA_DMA0_CH45)


#define SRC_DMA_DMA0_CH46 (*(volatile Ifx_SRC_SRCR*)0xF00385B8u)




#define SRC_DMACH46 (SRC_DMA_DMA0_CH46)


#define SRC_DMA_DMA0_CH47 (*(volatile Ifx_SRC_SRCR*)0xF00385BCu)




#define SRC_DMACH47 (SRC_DMA_DMA0_CH47)


#define SRC_DMA_DMA0_CH48 (*(volatile Ifx_SRC_SRCR*)0xF00385C0u)




#define SRC_DMACH48 (SRC_DMA_DMA0_CH48)


#define SRC_DMA_DMA0_CH49 (*(volatile Ifx_SRC_SRCR*)0xF00385C4u)




#define SRC_DMACH49 (SRC_DMA_DMA0_CH49)


#define SRC_DMA_DMA0_CH5 (*(volatile Ifx_SRC_SRCR*)0xF0038514u)




#define SRC_DMACH5 (SRC_DMA_DMA0_CH5)


#define SRC_DMA_DMA0_CH50 (*(volatile Ifx_SRC_SRCR*)0xF00385C8u)




#define SRC_DMACH50 (SRC_DMA_DMA0_CH50)


#define SRC_DMA_DMA0_CH51 (*(volatile Ifx_SRC_SRCR*)0xF00385CCu)




#define SRC_DMACH51 (SRC_DMA_DMA0_CH51)


#define SRC_DMA_DMA0_CH52 (*(volatile Ifx_SRC_SRCR*)0xF00385D0u)




#define SRC_DMACH52 (SRC_DMA_DMA0_CH52)


#define SRC_DMA_DMA0_CH53 (*(volatile Ifx_SRC_SRCR*)0xF00385D4u)




#define SRC_DMACH53 (SRC_DMA_DMA0_CH53)


#define SRC_DMA_DMA0_CH54 (*(volatile Ifx_SRC_SRCR*)0xF00385D8u)




#define SRC_DMACH54 (SRC_DMA_DMA0_CH54)


#define SRC_DMA_DMA0_CH55 (*(volatile Ifx_SRC_SRCR*)0xF00385DCu)




#define SRC_DMACH55 (SRC_DMA_DMA0_CH55)


#define SRC_DMA_DMA0_CH56 (*(volatile Ifx_SRC_SRCR*)0xF00385E0u)




#define SRC_DMACH56 (SRC_DMA_DMA0_CH56)


#define SRC_DMA_DMA0_CH57 (*(volatile Ifx_SRC_SRCR*)0xF00385E4u)




#define SRC_DMACH57 (SRC_DMA_DMA0_CH57)


#define SRC_DMA_DMA0_CH58 (*(volatile Ifx_SRC_SRCR*)0xF00385E8u)




#define SRC_DMACH58 (SRC_DMA_DMA0_CH58)


#define SRC_DMA_DMA0_CH59 (*(volatile Ifx_SRC_SRCR*)0xF00385ECu)




#define SRC_DMACH59 (SRC_DMA_DMA0_CH59)


#define SRC_DMA_DMA0_CH6 (*(volatile Ifx_SRC_SRCR*)0xF0038518u)




#define SRC_DMACH6 (SRC_DMA_DMA0_CH6)


#define SRC_DMA_DMA0_CH60 (*(volatile Ifx_SRC_SRCR*)0xF00385F0u)




#define SRC_DMACH60 (SRC_DMA_DMA0_CH60)


#define SRC_DMA_DMA0_CH61 (*(volatile Ifx_SRC_SRCR*)0xF00385F4u)




#define SRC_DMACH61 (SRC_DMA_DMA0_CH61)


#define SRC_DMA_DMA0_CH62 (*(volatile Ifx_SRC_SRCR*)0xF00385F8u)




#define SRC_DMACH62 (SRC_DMA_DMA0_CH62)


#define SRC_DMA_DMA0_CH63 (*(volatile Ifx_SRC_SRCR*)0xF00385FCu)




#define SRC_DMACH63 (SRC_DMA_DMA0_CH63)


#define SRC_DMA_DMA0_CH7 (*(volatile Ifx_SRC_SRCR*)0xF003851Cu)




#define SRC_DMACH7 (SRC_DMA_DMA0_CH7)


#define SRC_DMA_DMA0_CH8 (*(volatile Ifx_SRC_SRCR*)0xF0038520u)




#define SRC_DMACH8 (SRC_DMA_DMA0_CH8)


#define SRC_DMA_DMA0_CH9 (*(volatile Ifx_SRC_SRCR*)0xF0038524u)




#define SRC_DMACH9 (SRC_DMA_DMA0_CH9)


#define SRC_DMA_DMA0_ERR (*(volatile Ifx_SRC_SRCR*)0xF00384F0u)




#define SRC_DMAERR (SRC_DMA_DMA0_ERR)


#define SRC_DSADC_DSADC0_SRA (*(volatile Ifx_SRC_SRCR*)0xF0038B54u)




#define SRC_DSADCSRA0 (SRC_DSADC_DSADC0_SRA)


#define SRC_DSADC_DSADC0_SRM (*(volatile Ifx_SRC_SRCR*)0xF0038B50u)




#define SRC_DSADCSRM0 (SRC_DSADC_DSADC0_SRM)


#define SRC_DSADC_DSADC1_SRA (*(volatile Ifx_SRC_SRCR*)0xF0038B5Cu)




#define SRC_DSADCSRA1 (SRC_DSADC_DSADC1_SRA)


#define SRC_DSADC_DSADC1_SRM (*(volatile Ifx_SRC_SRCR*)0xF0038B58u)




#define SRC_DSADCSRM1 (SRC_DSADC_DSADC1_SRM)


#define SRC_DSADC_DSADC2_SRA (*(volatile Ifx_SRC_SRCR*)0xF0038B64u)




#define SRC_DSADCSRA2 (SRC_DSADC_DSADC2_SRA)


#define SRC_DSADC_DSADC2_SRM (*(volatile Ifx_SRC_SRCR*)0xF0038B60u)




#define SRC_DSADCSRM2 (SRC_DSADC_DSADC2_SRM)


#define SRC_DSADC_DSADC3_SRA (*(volatile Ifx_SRC_SRCR*)0xF0038B6Cu)




#define SRC_DSADCSRA3 (SRC_DSADC_DSADC3_SRA)


#define SRC_DSADC_DSADC3_SRM (*(volatile Ifx_SRC_SRCR*)0xF0038B68u)




#define SRC_DSADCSRM3 (SRC_DSADC_DSADC3_SRM)


#define SRC_DSADC_DSADC4_SRA (*(volatile Ifx_SRC_SRCR*)0xF0038B74u)




#define SRC_DSADCSRA4 (SRC_DSADC_DSADC4_SRA)


#define SRC_DSADC_DSADC4_SRM (*(volatile Ifx_SRC_SRCR*)0xF0038B70u)




#define SRC_DSADCSRM4 (SRC_DSADC_DSADC4_SRM)


#define SRC_DSADC_DSADC5_SRA (*(volatile Ifx_SRC_SRCR*)0xF0038B7Cu)




#define SRC_DSADCSRA5 (SRC_DSADC_DSADC5_SRA)


#define SRC_DSADC_DSADC5_SRM (*(volatile Ifx_SRC_SRCR*)0xF0038B78u)




#define SRC_DSADCSRM5 (SRC_DSADC_DSADC5_SRM)


#define SRC_EMEM_EMEM0_SR (*(volatile Ifx_SRC_SRCR*)0xF0038020u)




#define SRC_EMEM (SRC_EMEM_EMEM0_SR)


#define SRC_ERAY_ERAY0_IBUSY (*(volatile Ifx_SRC_SRCR*)0xF0038C04u)




#define SRC_ERAYIBUSY (SRC_ERAY_ERAY0_IBUSY)


#define SRC_ERAY_ERAY0_INT0 (*(volatile Ifx_SRC_SRCR*)0xF0038BE0u)




#define SRC_ERAYINT0 (SRC_ERAY_ERAY0_INT0)


#define SRC_ERAY_ERAY0_INT1 (*(volatile Ifx_SRC_SRCR*)0xF0038BE4u)




#define SRC_ERAYINT1 (SRC_ERAY_ERAY0_INT1)


#define SRC_ERAY_ERAY0_MBSC0 (*(volatile Ifx_SRC_SRCR*)0xF0038BF8u)




#define SRC_ERAYMBSC0 (SRC_ERAY_ERAY0_MBSC0)


#define SRC_ERAY_ERAY0_MBSC1 (*(volatile Ifx_SRC_SRCR*)0xF0038BFCu)




#define SRC_ERAYMBSC1 (SRC_ERAY_ERAY0_MBSC1)


#define SRC_ERAY_ERAY0_NDAT0 (*(volatile Ifx_SRC_SRCR*)0xF0038BF0u)




#define SRC_ERAYNDAT0 (SRC_ERAY_ERAY0_NDAT0)


#define SRC_ERAY_ERAY0_NDAT1 (*(volatile Ifx_SRC_SRCR*)0xF0038BF4u)




#define SRC_ERAYNDAT1 (SRC_ERAY_ERAY0_NDAT1)


#define SRC_ERAY_ERAY0_OBUSY (*(volatile Ifx_SRC_SRCR*)0xF0038C00u)




#define SRC_ERAYOBUSY (SRC_ERAY_ERAY0_OBUSY)


#define SRC_ERAY_ERAY0_TINT0 (*(volatile Ifx_SRC_SRCR*)0xF0038BE8u)




#define SRC_ERAYTINT0 (SRC_ERAY_ERAY0_TINT0)


#define SRC_ERAY_ERAY0_TINT1 (*(volatile Ifx_SRC_SRCR*)0xF0038BECu)




#define SRC_ERAYTINT1 (SRC_ERAY_ERAY0_TINT1)


#define SRC_ETH_ETH0_SR (*(volatile Ifx_SRC_SRCR*)0xF00388F0u)




#define SRC_ETH (SRC_ETH_ETH0_SR)


#define SRC_FCE_FCE0_SR (*(volatile Ifx_SRC_SRCR*)0xF00384B0u)




#define SRC_FCE (SRC_FCE_FCE0_SR)


#define SRC_GPSR_GPSR0_SR0 (*(volatile Ifx_SRC_SRCR*)0xF0039000u)




#define SRC_GPSR00 (SRC_GPSR_GPSR0_SR0)


#define SRC_GPSR_GPSR0_SR1 (*(volatile Ifx_SRC_SRCR*)0xF0039004u)




#define SRC_GPSR01 (SRC_GPSR_GPSR0_SR1)


#define SRC_GPSR_GPSR0_SR2 (*(volatile Ifx_SRC_SRCR*)0xF0039008u)




#define SRC_GPSR02 (SRC_GPSR_GPSR0_SR2)


#define SRC_GPSR_GPSR0_SR3 (*(volatile Ifx_SRC_SRCR*)0xF003900Cu)




#define SRC_GPSR03 (SRC_GPSR_GPSR0_SR3)


#define SRC_GPSR_GPSR1_SR0 (*(volatile Ifx_SRC_SRCR*)0xF0039020u)




#define SRC_GPSR10 (SRC_GPSR_GPSR1_SR0)


#define SRC_GPSR_GPSR1_SR1 (*(volatile Ifx_SRC_SRCR*)0xF0039024u)




#define SRC_GPSR11 (SRC_GPSR_GPSR1_SR1)


#define SRC_GPSR_GPSR1_SR2 (*(volatile Ifx_SRC_SRCR*)0xF0039028u)




#define SRC_GPSR12 (SRC_GPSR_GPSR1_SR2)


#define SRC_GPSR_GPSR1_SR3 (*(volatile Ifx_SRC_SRCR*)0xF003902Cu)




#define SRC_GPSR13 (SRC_GPSR_GPSR1_SR3)


#define SRC_GPSR_GPSR2_SR0 (*(volatile Ifx_SRC_SRCR*)0xF0039040u)




#define SRC_GPSR20 (SRC_GPSR_GPSR2_SR0)


#define SRC_GPSR_GPSR2_SR1 (*(volatile Ifx_SRC_SRCR*)0xF0039044u)




#define SRC_GPSR21 (SRC_GPSR_GPSR2_SR1)


#define SRC_GPSR_GPSR2_SR2 (*(volatile Ifx_SRC_SRCR*)0xF0039048u)




#define SRC_GPSR22 (SRC_GPSR_GPSR2_SR2)


#define SRC_GPSR_GPSR2_SR3 (*(volatile Ifx_SRC_SRCR*)0xF003904Cu)




#define SRC_GPSR23 (SRC_GPSR_GPSR2_SR3)


#define SRC_GPT12_GPT120_CIRQ (*(volatile Ifx_SRC_SRCR*)0xF0038460u)




#define SRC_GPT120CIRQ (SRC_GPT12_GPT120_CIRQ)


#define SRC_GPT12_GPT120_T2 (*(volatile Ifx_SRC_SRCR*)0xF0038464u)




#define SRC_GPT120T2 (SRC_GPT12_GPT120_T2)


#define SRC_GPT12_GPT120_T3 (*(volatile Ifx_SRC_SRCR*)0xF0038468u)




#define SRC_GPT120T3 (SRC_GPT12_GPT120_T3)


#define SRC_GPT12_GPT120_T4 (*(volatile Ifx_SRC_SRCR*)0xF003846Cu)




#define SRC_GPT120T4 (SRC_GPT12_GPT120_T4)


#define SRC_GPT12_GPT120_T5 (*(volatile Ifx_SRC_SRCR*)0xF0038470u)




#define SRC_GPT120T5 (SRC_GPT12_GPT120_T5)


#define SRC_GPT12_GPT120_T6 (*(volatile Ifx_SRC_SRCR*)0xF0038474u)




#define SRC_GPT120T6 (SRC_GPT12_GPT120_T6)


#define SRC_GTM_GTM0_AEIIRQ (*(volatile Ifx_SRC_SRCR*)0xF0039600u)




#define SRC_GTMAEIIRQ (SRC_GTM_GTM0_AEIIRQ)


#define SRC_GTM_GTM0_ARUIRQ0 (*(volatile Ifx_SRC_SRCR*)0xF0039604u)




#define SRC_GTMARUIRQ0 (SRC_GTM_GTM0_ARUIRQ0)


#define SRC_GTM_GTM0_ARUIRQ1 (*(volatile Ifx_SRC_SRCR*)0xF0039608u)




#define SRC_GTMARUIRQ1 (SRC_GTM_GTM0_ARUIRQ1)


#define SRC_GTM_GTM0_ARUIRQ2 (*(volatile Ifx_SRC_SRCR*)0xF003960Cu)




#define SRC_GTMARUIRQ2 (SRC_GTM_GTM0_ARUIRQ2)


#define SRC_GTM_GTM0_ATOM0_0 (*(volatile Ifx_SRC_SRCR*)0xF0039D80u)




#define SRC_GTMATOM00 (SRC_GTM_GTM0_ATOM0_0)


#define SRC_GTM_GTM0_ATOM0_1 (*(volatile Ifx_SRC_SRCR*)0xF0039D84u)




#define SRC_GTMATOM01 (SRC_GTM_GTM0_ATOM0_1)


#define SRC_GTM_GTM0_ATOM0_2 (*(volatile Ifx_SRC_SRCR*)0xF0039D88u)




#define SRC_GTMATOM02 (SRC_GTM_GTM0_ATOM0_2)


#define SRC_GTM_GTM0_ATOM0_3 (*(volatile Ifx_SRC_SRCR*)0xF0039D8Cu)




#define SRC_GTMATOM03 (SRC_GTM_GTM0_ATOM0_3)


#define SRC_GTM_GTM0_ATOM1_0 (*(volatile Ifx_SRC_SRCR*)0xF0039D90u)




#define SRC_GTMATOM10 (SRC_GTM_GTM0_ATOM1_0)


#define SRC_GTM_GTM0_ATOM1_1 (*(volatile Ifx_SRC_SRCR*)0xF0039D94u)




#define SRC_GTMATOM11 (SRC_GTM_GTM0_ATOM1_1)


#define SRC_GTM_GTM0_ATOM1_2 (*(volatile Ifx_SRC_SRCR*)0xF0039D98u)




#define SRC_GTMATOM12 (SRC_GTM_GTM0_ATOM1_2)


#define SRC_GTM_GTM0_ATOM1_3 (*(volatile Ifx_SRC_SRCR*)0xF0039D9Cu)




#define SRC_GTMATOM13 (SRC_GTM_GTM0_ATOM1_3)


#define SRC_GTM_GTM0_ATOM2_0 (*(volatile Ifx_SRC_SRCR*)0xF0039DA0u)




#define SRC_GTMATOM20 (SRC_GTM_GTM0_ATOM2_0)


#define SRC_GTM_GTM0_ATOM2_1 (*(volatile Ifx_SRC_SRCR*)0xF0039DA4u)




#define SRC_GTMATOM21 (SRC_GTM_GTM0_ATOM2_1)


#define SRC_GTM_GTM0_ATOM2_2 (*(volatile Ifx_SRC_SRCR*)0xF0039DA8u)




#define SRC_GTMATOM22 (SRC_GTM_GTM0_ATOM2_2)


#define SRC_GTM_GTM0_ATOM2_3 (*(volatile Ifx_SRC_SRCR*)0xF0039DACu)




#define SRC_GTMATOM23 (SRC_GTM_GTM0_ATOM2_3)


#define SRC_GTM_GTM0_ATOM3_0 (*(volatile Ifx_SRC_SRCR*)0xF0039DB0u)




#define SRC_GTMATOM30 (SRC_GTM_GTM0_ATOM3_0)


#define SRC_GTM_GTM0_ATOM3_1 (*(volatile Ifx_SRC_SRCR*)0xF0039DB4u)




#define SRC_GTMATOM31 (SRC_GTM_GTM0_ATOM3_1)


#define SRC_GTM_GTM0_ATOM3_2 (*(volatile Ifx_SRC_SRCR*)0xF0039DB8u)




#define SRC_GTMATOM32 (SRC_GTM_GTM0_ATOM3_2)


#define SRC_GTM_GTM0_ATOM3_3 (*(volatile Ifx_SRC_SRCR*)0xF0039DBCu)




#define SRC_GTMATOM33 (SRC_GTM_GTM0_ATOM3_3)


#define SRC_GTM_GTM0_ATOM4_0 (*(volatile Ifx_SRC_SRCR*)0xF0039DC0u)




#define SRC_GTMATOM40 (SRC_GTM_GTM0_ATOM4_0)


#define SRC_GTM_GTM0_ATOM4_1 (*(volatile Ifx_SRC_SRCR*)0xF0039DC4u)




#define SRC_GTMATOM41 (SRC_GTM_GTM0_ATOM4_1)


#define SRC_GTM_GTM0_ATOM4_2 (*(volatile Ifx_SRC_SRCR*)0xF0039DC8u)




#define SRC_GTMATOM42 (SRC_GTM_GTM0_ATOM4_2)


#define SRC_GTM_GTM0_ATOM4_3 (*(volatile Ifx_SRC_SRCR*)0xF0039DCCu)




#define SRC_GTMATOM43 (SRC_GTM_GTM0_ATOM4_3)


#define SRC_GTM_GTM0_BRCIRQ (*(volatile Ifx_SRC_SRCR*)0xF0039614u)




#define SRC_GTMBRCIRQ (SRC_GTM_GTM0_BRCIRQ)


#define SRC_GTM_GTM0_CMPIRQ (*(volatile Ifx_SRC_SRCR*)0xF0039618u)




#define SRC_GTMCMPIRQ (SRC_GTM_GTM0_CMPIRQ)


#define SRC_GTM_GTM0_DPLL0 (*(volatile Ifx_SRC_SRCR*)0xF00396A4u)




#define SRC_GTMDPLL0 (SRC_GTM_GTM0_DPLL0)


#define SRC_GTM_GTM0_DPLL1 (*(volatile Ifx_SRC_SRCR*)0xF00396A8u)




#define SRC_GTMDPLL1 (SRC_GTM_GTM0_DPLL1)


#define SRC_GTM_GTM0_DPLL10 (*(volatile Ifx_SRC_SRCR*)0xF00396CCu)




#define SRC_GTMDPLL10 (SRC_GTM_GTM0_DPLL10)


#define SRC_GTM_GTM0_DPLL11 (*(volatile Ifx_SRC_SRCR*)0xF00396D0u)




#define SRC_GTMDPLL11 (SRC_GTM_GTM0_DPLL11)


#define SRC_GTM_GTM0_DPLL12 (*(volatile Ifx_SRC_SRCR*)0xF00396D4u)




#define SRC_GTMDPLL12 (SRC_GTM_GTM0_DPLL12)


#define SRC_GTM_GTM0_DPLL13 (*(volatile Ifx_SRC_SRCR*)0xF00396D8u)




#define SRC_GTMDPLL13 (SRC_GTM_GTM0_DPLL13)


#define SRC_GTM_GTM0_DPLL14 (*(volatile Ifx_SRC_SRCR*)0xF00396DCu)




#define SRC_GTMDPLL14 (SRC_GTM_GTM0_DPLL14)


#define SRC_GTM_GTM0_DPLL15 (*(volatile Ifx_SRC_SRCR*)0xF00396E0u)




#define SRC_GTMDPLL15 (SRC_GTM_GTM0_DPLL15)


#define SRC_GTM_GTM0_DPLL16 (*(volatile Ifx_SRC_SRCR*)0xF00396E4u)




#define SRC_GTMDPLL16 (SRC_GTM_GTM0_DPLL16)


#define SRC_GTM_GTM0_DPLL17 (*(volatile Ifx_SRC_SRCR*)0xF00396E8u)




#define SRC_GTMDPLL17 (SRC_GTM_GTM0_DPLL17)


#define SRC_GTM_GTM0_DPLL18 (*(volatile Ifx_SRC_SRCR*)0xF00396ECu)




#define SRC_GTMDPLL18 (SRC_GTM_GTM0_DPLL18)


#define SRC_GTM_GTM0_DPLL19 (*(volatile Ifx_SRC_SRCR*)0xF00396F0u)




#define SRC_GTMDPLL19 (SRC_GTM_GTM0_DPLL19)


#define SRC_GTM_GTM0_DPLL2 (*(volatile Ifx_SRC_SRCR*)0xF00396ACu)




#define SRC_GTMDPLL2 (SRC_GTM_GTM0_DPLL2)


#define SRC_GTM_GTM0_DPLL20 (*(volatile Ifx_SRC_SRCR*)0xF00396F4u)




#define SRC_GTMDPLL20 (SRC_GTM_GTM0_DPLL20)


#define SRC_GTM_GTM0_DPLL21 (*(volatile Ifx_SRC_SRCR*)0xF00396F8u)




#define SRC_GTMDPLL21 (SRC_GTM_GTM0_DPLL21)


#define SRC_GTM_GTM0_DPLL22 (*(volatile Ifx_SRC_SRCR*)0xF00396FCu)




#define SRC_GTMDPLL22 (SRC_GTM_GTM0_DPLL22)


#define SRC_GTM_GTM0_DPLL23 (*(volatile Ifx_SRC_SRCR*)0xF0039700u)




#define SRC_GTMDPLL23 (SRC_GTM_GTM0_DPLL23)


#define SRC_GTM_GTM0_DPLL24 (*(volatile Ifx_SRC_SRCR*)0xF0039704u)




#define SRC_GTMDPLL24 (SRC_GTM_GTM0_DPLL24)


#define SRC_GTM_GTM0_DPLL25 (*(volatile Ifx_SRC_SRCR*)0xF0039708u)




#define SRC_GTMDPLL25 (SRC_GTM_GTM0_DPLL25)


#define SRC_GTM_GTM0_DPLL26 (*(volatile Ifx_SRC_SRCR*)0xF003970Cu)




#define SRC_GTMDPLL26 (SRC_GTM_GTM0_DPLL26)


#define SRC_GTM_GTM0_DPLL3 (*(volatile Ifx_SRC_SRCR*)0xF00396B0u)




#define SRC_GTMDPLL3 (SRC_GTM_GTM0_DPLL3)


#define SRC_GTM_GTM0_DPLL4 (*(volatile Ifx_SRC_SRCR*)0xF00396B4u)




#define SRC_GTMDPLL4 (SRC_GTM_GTM0_DPLL4)


#define SRC_GTM_GTM0_DPLL5 (*(volatile Ifx_SRC_SRCR*)0xF00396B8u)




#define SRC_GTMDPLL5 (SRC_GTM_GTM0_DPLL5)


#define SRC_GTM_GTM0_DPLL6 (*(volatile Ifx_SRC_SRCR*)0xF00396BCu)




#define SRC_GTMDPLL6 (SRC_GTM_GTM0_DPLL6)


#define SRC_GTM_GTM0_DPLL7 (*(volatile Ifx_SRC_SRCR*)0xF00396C0u)




#define SRC_GTMDPLL7 (SRC_GTM_GTM0_DPLL7)


#define SRC_GTM_GTM0_DPLL8 (*(volatile Ifx_SRC_SRCR*)0xF00396C4u)




#define SRC_GTMDPLL8 (SRC_GTM_GTM0_DPLL8)


#define SRC_GTM_GTM0_DPLL9 (*(volatile Ifx_SRC_SRCR*)0xF00396C8u)




#define SRC_GTMDPLL9 (SRC_GTM_GTM0_DPLL9)


#define SRC_GTM_GTM0_ERR (*(volatile Ifx_SRC_SRCR*)0xF0039770u)




#define SRC_GTMERR (SRC_GTM_GTM0_ERR)


#define SRC_GTM_GTM0_MCS0_0 (*(volatile Ifx_SRC_SRCR*)0xF0039980u)




#define SRC_GTMMCS00 (SRC_GTM_GTM0_MCS0_0)


#define SRC_GTM_GTM0_MCS0_1 (*(volatile Ifx_SRC_SRCR*)0xF0039984u)




#define SRC_GTMMCS01 (SRC_GTM_GTM0_MCS0_1)


#define SRC_GTM_GTM0_MCS0_2 (*(volatile Ifx_SRC_SRCR*)0xF0039988u)




#define SRC_GTMMCS02 (SRC_GTM_GTM0_MCS0_2)


#define SRC_GTM_GTM0_MCS0_3 (*(volatile Ifx_SRC_SRCR*)0xF003998Cu)




#define SRC_GTMMCS03 (SRC_GTM_GTM0_MCS0_3)


#define SRC_GTM_GTM0_MCS0_4 (*(volatile Ifx_SRC_SRCR*)0xF0039990u)




#define SRC_GTMMCS04 (SRC_GTM_GTM0_MCS0_4)


#define SRC_GTM_GTM0_MCS0_5 (*(volatile Ifx_SRC_SRCR*)0xF0039994u)




#define SRC_GTMMCS05 (SRC_GTM_GTM0_MCS0_5)


#define SRC_GTM_GTM0_MCS0_6 (*(volatile Ifx_SRC_SRCR*)0xF0039998u)




#define SRC_GTMMCS06 (SRC_GTM_GTM0_MCS0_6)


#define SRC_GTM_GTM0_MCS0_7 (*(volatile Ifx_SRC_SRCR*)0xF003999Cu)




#define SRC_GTMMCS07 (SRC_GTM_GTM0_MCS0_7)


#define SRC_GTM_GTM0_MCS1_0 (*(volatile Ifx_SRC_SRCR*)0xF00399A0u)




#define SRC_GTMMCS10 (SRC_GTM_GTM0_MCS1_0)


#define SRC_GTM_GTM0_MCS1_1 (*(volatile Ifx_SRC_SRCR*)0xF00399A4u)




#define SRC_GTMMCS11 (SRC_GTM_GTM0_MCS1_1)


#define SRC_GTM_GTM0_MCS1_2 (*(volatile Ifx_SRC_SRCR*)0xF00399A8u)




#define SRC_GTMMCS12 (SRC_GTM_GTM0_MCS1_2)


#define SRC_GTM_GTM0_MCS1_3 (*(volatile Ifx_SRC_SRCR*)0xF00399ACu)




#define SRC_GTMMCS13 (SRC_GTM_GTM0_MCS1_3)


#define SRC_GTM_GTM0_MCS1_4 (*(volatile Ifx_SRC_SRCR*)0xF00399B0u)




#define SRC_GTMMCS14 (SRC_GTM_GTM0_MCS1_4)


#define SRC_GTM_GTM0_MCS1_5 (*(volatile Ifx_SRC_SRCR*)0xF00399B4u)




#define SRC_GTMMCS15 (SRC_GTM_GTM0_MCS1_5)


#define SRC_GTM_GTM0_MCS1_6 (*(volatile Ifx_SRC_SRCR*)0xF00399B8u)




#define SRC_GTMMCS16 (SRC_GTM_GTM0_MCS1_6)


#define SRC_GTM_GTM0_MCS1_7 (*(volatile Ifx_SRC_SRCR*)0xF00399BCu)




#define SRC_GTMMCS17 (SRC_GTM_GTM0_MCS1_7)


#define SRC_GTM_GTM0_MCS2_0 (*(volatile Ifx_SRC_SRCR*)0xF00399C0u)




#define SRC_GTMMCS20 (SRC_GTM_GTM0_MCS2_0)


#define SRC_GTM_GTM0_MCS2_1 (*(volatile Ifx_SRC_SRCR*)0xF00399C4u)




#define SRC_GTMMCS21 (SRC_GTM_GTM0_MCS2_1)


#define SRC_GTM_GTM0_MCS2_2 (*(volatile Ifx_SRC_SRCR*)0xF00399C8u)




#define SRC_GTMMCS22 (SRC_GTM_GTM0_MCS2_2)


#define SRC_GTM_GTM0_MCS2_3 (*(volatile Ifx_SRC_SRCR*)0xF00399CCu)




#define SRC_GTMMCS23 (SRC_GTM_GTM0_MCS2_3)


#define SRC_GTM_GTM0_MCS2_4 (*(volatile Ifx_SRC_SRCR*)0xF00399D0u)




#define SRC_GTMMCS24 (SRC_GTM_GTM0_MCS2_4)


#define SRC_GTM_GTM0_MCS2_5 (*(volatile Ifx_SRC_SRCR*)0xF00399D4u)




#define SRC_GTMMCS25 (SRC_GTM_GTM0_MCS2_5)


#define SRC_GTM_GTM0_MCS2_6 (*(volatile Ifx_SRC_SRCR*)0xF00399D8u)




#define SRC_GTMMCS26 (SRC_GTM_GTM0_MCS2_6)


#define SRC_GTM_GTM0_MCS2_7 (*(volatile Ifx_SRC_SRCR*)0xF00399DCu)




#define SRC_GTMMCS27 (SRC_GTM_GTM0_MCS2_7)


#define SRC_GTM_GTM0_MCS3_0 (*(volatile Ifx_SRC_SRCR*)0xF00399E0u)




#define SRC_GTMMCS30 (SRC_GTM_GTM0_MCS3_0)


#define SRC_GTM_GTM0_MCS3_1 (*(volatile Ifx_SRC_SRCR*)0xF00399E4u)




#define SRC_GTMMCS31 (SRC_GTM_GTM0_MCS3_1)


#define SRC_GTM_GTM0_MCS3_2 (*(volatile Ifx_SRC_SRCR*)0xF00399E8u)




#define SRC_GTMMCS32 (SRC_GTM_GTM0_MCS3_2)


#define SRC_GTM_GTM0_MCS3_3 (*(volatile Ifx_SRC_SRCR*)0xF00399ECu)




#define SRC_GTMMCS33 (SRC_GTM_GTM0_MCS3_3)


#define SRC_GTM_GTM0_MCS3_4 (*(volatile Ifx_SRC_SRCR*)0xF00399F0u)




#define SRC_GTMMCS34 (SRC_GTM_GTM0_MCS3_4)


#define SRC_GTM_GTM0_MCS3_5 (*(volatile Ifx_SRC_SRCR*)0xF00399F4u)




#define SRC_GTMMCS35 (SRC_GTM_GTM0_MCS3_5)


#define SRC_GTM_GTM0_MCS3_6 (*(volatile Ifx_SRC_SRCR*)0xF00399F8u)




#define SRC_GTMMCS36 (SRC_GTM_GTM0_MCS3_6)


#define SRC_GTM_GTM0_MCS3_7 (*(volatile Ifx_SRC_SRCR*)0xF00399FCu)




#define SRC_GTMMCS37 (SRC_GTM_GTM0_MCS3_7)


#define SRC_GTM_GTM0_MCSW00 (*(volatile Ifx_SRC_SRCR*)0xF0039F00u)




#define SRC_GTMMCSW00 (SRC_GTM_GTM0_MCSW00)


#define SRC_GTM_GTM0_MCSW01 (*(volatile Ifx_SRC_SRCR*)0xF0039F04u)




#define SRC_GTMMCSW01 (SRC_GTM_GTM0_MCSW01)


#define SRC_GTM_GTM0_MCSW02 (*(volatile Ifx_SRC_SRCR*)0xF0039F08u)




#define SRC_GTMMCSW02 (SRC_GTM_GTM0_MCSW02)


#define SRC_GTM_GTM0_MCSW03 (*(volatile Ifx_SRC_SRCR*)0xF0039F0Cu)




#define SRC_GTMMCSW03 (SRC_GTM_GTM0_MCSW03)


#define SRC_GTM_GTM0_MCSW10 (*(volatile Ifx_SRC_SRCR*)0xF0039F40u)




#define SRC_GTMMCSW10 (SRC_GTM_GTM0_MCSW10)


#define SRC_GTM_GTM0_MCSW11 (*(volatile Ifx_SRC_SRCR*)0xF0039F44u)




#define SRC_GTMMCSW11 (SRC_GTM_GTM0_MCSW11)


#define SRC_GTM_GTM0_MCSW12 (*(volatile Ifx_SRC_SRCR*)0xF0039F48u)




#define SRC_GTMMCSW12 (SRC_GTM_GTM0_MCSW12)


#define SRC_GTM_GTM0_MCSW13 (*(volatile Ifx_SRC_SRCR*)0xF0039F4Cu)




#define SRC_GTMMCSW13 (SRC_GTM_GTM0_MCSW13)


#define SRC_GTM_GTM0_PSM0_0 (*(volatile Ifx_SRC_SRCR*)0xF003962Cu)




#define SRC_GTMPSM00 (SRC_GTM_GTM0_PSM0_0)


#define SRC_GTM_GTM0_PSM0_1 (*(volatile Ifx_SRC_SRCR*)0xF0039630u)




#define SRC_GTMPSM01 (SRC_GTM_GTM0_PSM0_1)


#define SRC_GTM_GTM0_PSM0_2 (*(volatile Ifx_SRC_SRCR*)0xF0039634u)




#define SRC_GTMPSM02 (SRC_GTM_GTM0_PSM0_2)


#define SRC_GTM_GTM0_PSM0_3 (*(volatile Ifx_SRC_SRCR*)0xF0039638u)




#define SRC_GTMPSM03 (SRC_GTM_GTM0_PSM0_3)


#define SRC_GTM_GTM0_PSM0_4 (*(volatile Ifx_SRC_SRCR*)0xF003963Cu)




#define SRC_GTMPSM04 (SRC_GTM_GTM0_PSM0_4)


#define SRC_GTM_GTM0_PSM0_5 (*(volatile Ifx_SRC_SRCR*)0xF0039640u)




#define SRC_GTMPSM05 (SRC_GTM_GTM0_PSM0_5)


#define SRC_GTM_GTM0_PSM0_6 (*(volatile Ifx_SRC_SRCR*)0xF0039644u)




#define SRC_GTMPSM06 (SRC_GTM_GTM0_PSM0_6)


#define SRC_GTM_GTM0_PSM0_7 (*(volatile Ifx_SRC_SRCR*)0xF0039648u)




#define SRC_GTMPSM07 (SRC_GTM_GTM0_PSM0_7)


#define SRC_GTM_GTM0_SPEIRQ0 (*(volatile Ifx_SRC_SRCR*)0xF003961Cu)




#define SRC_GTMSPE0IRQ (SRC_GTM_GTM0_SPEIRQ0)


#define SRC_GTM_GTM0_SPEIRQ1 (*(volatile Ifx_SRC_SRCR*)0xF0039620u)




#define SRC_GTMSPE1IRQ (SRC_GTM_GTM0_SPEIRQ1)


#define SRC_GTM_GTM0_TIM0_0 (*(volatile Ifx_SRC_SRCR*)0xF0039780u)




#define SRC_GTMTIM00 (SRC_GTM_GTM0_TIM0_0)


#define SRC_GTM_GTM0_TIM0_1 (*(volatile Ifx_SRC_SRCR*)0xF0039784u)




#define SRC_GTMTIM01 (SRC_GTM_GTM0_TIM0_1)


#define SRC_GTM_GTM0_TIM0_2 (*(volatile Ifx_SRC_SRCR*)0xF0039788u)




#define SRC_GTMTIM02 (SRC_GTM_GTM0_TIM0_2)


#define SRC_GTM_GTM0_TIM0_3 (*(volatile Ifx_SRC_SRCR*)0xF003978Cu)




#define SRC_GTMTIM03 (SRC_GTM_GTM0_TIM0_3)


#define SRC_GTM_GTM0_TIM0_4 (*(volatile Ifx_SRC_SRCR*)0xF0039790u)




#define SRC_GTMTIM04 (SRC_GTM_GTM0_TIM0_4)


#define SRC_GTM_GTM0_TIM0_5 (*(volatile Ifx_SRC_SRCR*)0xF0039794u)




#define SRC_GTMTIM05 (SRC_GTM_GTM0_TIM0_5)


#define SRC_GTM_GTM0_TIM0_6 (*(volatile Ifx_SRC_SRCR*)0xF0039798u)




#define SRC_GTMTIM06 (SRC_GTM_GTM0_TIM0_6)


#define SRC_GTM_GTM0_TIM0_7 (*(volatile Ifx_SRC_SRCR*)0xF003979Cu)




#define SRC_GTMTIM07 (SRC_GTM_GTM0_TIM0_7)


#define SRC_GTM_GTM0_TIM1_0 (*(volatile Ifx_SRC_SRCR*)0xF00397A0u)




#define SRC_GTMTIM10 (SRC_GTM_GTM0_TIM1_0)


#define SRC_GTM_GTM0_TIM1_1 (*(volatile Ifx_SRC_SRCR*)0xF00397A4u)




#define SRC_GTMTIM11 (SRC_GTM_GTM0_TIM1_1)


#define SRC_GTM_GTM0_TIM1_2 (*(volatile Ifx_SRC_SRCR*)0xF00397A8u)




#define SRC_GTMTIM12 (SRC_GTM_GTM0_TIM1_2)


#define SRC_GTM_GTM0_TIM1_3 (*(volatile Ifx_SRC_SRCR*)0xF00397ACu)




#define SRC_GTMTIM13 (SRC_GTM_GTM0_TIM1_3)


#define SRC_GTM_GTM0_TIM1_4 (*(volatile Ifx_SRC_SRCR*)0xF00397B0u)




#define SRC_GTMTIM14 (SRC_GTM_GTM0_TIM1_4)


#define SRC_GTM_GTM0_TIM1_5 (*(volatile Ifx_SRC_SRCR*)0xF00397B4u)




#define SRC_GTMTIM15 (SRC_GTM_GTM0_TIM1_5)


#define SRC_GTM_GTM0_TIM1_6 (*(volatile Ifx_SRC_SRCR*)0xF00397B8u)




#define SRC_GTMTIM16 (SRC_GTM_GTM0_TIM1_6)


#define SRC_GTM_GTM0_TIM1_7 (*(volatile Ifx_SRC_SRCR*)0xF00397BCu)




#define SRC_GTMTIM17 (SRC_GTM_GTM0_TIM1_7)


#define SRC_GTM_GTM0_TIM2_0 (*(volatile Ifx_SRC_SRCR*)0xF00397C0u)




#define SRC_GTMTIM20 (SRC_GTM_GTM0_TIM2_0)


#define SRC_GTM_GTM0_TIM2_1 (*(volatile Ifx_SRC_SRCR*)0xF00397C4u)




#define SRC_GTMTIM21 (SRC_GTM_GTM0_TIM2_1)


#define SRC_GTM_GTM0_TIM2_2 (*(volatile Ifx_SRC_SRCR*)0xF00397C8u)




#define SRC_GTMTIM22 (SRC_GTM_GTM0_TIM2_2)


#define SRC_GTM_GTM0_TIM2_3 (*(volatile Ifx_SRC_SRCR*)0xF00397CCu)




#define SRC_GTMTIM23 (SRC_GTM_GTM0_TIM2_3)


#define SRC_GTM_GTM0_TIM2_4 (*(volatile Ifx_SRC_SRCR*)0xF00397D0u)




#define SRC_GTMTIM24 (SRC_GTM_GTM0_TIM2_4)


#define SRC_GTM_GTM0_TIM2_5 (*(volatile Ifx_SRC_SRCR*)0xF00397D4u)




#define SRC_GTMTIM25 (SRC_GTM_GTM0_TIM2_5)


#define SRC_GTM_GTM0_TIM2_6 (*(volatile Ifx_SRC_SRCR*)0xF00397D8u)




#define SRC_GTMTIM26 (SRC_GTM_GTM0_TIM2_6)


#define SRC_GTM_GTM0_TIM2_7 (*(volatile Ifx_SRC_SRCR*)0xF00397DCu)




#define SRC_GTMTIM27 (SRC_GTM_GTM0_TIM2_7)


#define SRC_GTM_GTM0_TIM3_0 (*(volatile Ifx_SRC_SRCR*)0xF00397E0u)




#define SRC_GTMTIM30 (SRC_GTM_GTM0_TIM3_0)


#define SRC_GTM_GTM0_TIM3_1 (*(volatile Ifx_SRC_SRCR*)0xF00397E4u)




#define SRC_GTMTIM31 (SRC_GTM_GTM0_TIM3_1)


#define SRC_GTM_GTM0_TIM3_2 (*(volatile Ifx_SRC_SRCR*)0xF00397E8u)




#define SRC_GTMTIM32 (SRC_GTM_GTM0_TIM3_2)


#define SRC_GTM_GTM0_TIM3_3 (*(volatile Ifx_SRC_SRCR*)0xF00397ECu)




#define SRC_GTMTIM33 (SRC_GTM_GTM0_TIM3_3)


#define SRC_GTM_GTM0_TIM3_4 (*(volatile Ifx_SRC_SRCR*)0xF00397F0u)




#define SRC_GTMTIM34 (SRC_GTM_GTM0_TIM3_4)


#define SRC_GTM_GTM0_TIM3_5 (*(volatile Ifx_SRC_SRCR*)0xF00397F4u)




#define SRC_GTMTIM35 (SRC_GTM_GTM0_TIM3_5)


#define SRC_GTM_GTM0_TIM3_6 (*(volatile Ifx_SRC_SRCR*)0xF00397F8u)




#define SRC_GTMTIM36 (SRC_GTM_GTM0_TIM3_6)


#define SRC_GTM_GTM0_TIM3_7 (*(volatile Ifx_SRC_SRCR*)0xF00397FCu)




#define SRC_GTMTIM37 (SRC_GTM_GTM0_TIM3_7)


#define SRC_GTM_GTM0_TOM0_0 (*(volatile Ifx_SRC_SRCR*)0xF0039B80u)




#define SRC_GTMTOM00 (SRC_GTM_GTM0_TOM0_0)


#define SRC_GTM_GTM0_TOM0_1 (*(volatile Ifx_SRC_SRCR*)0xF0039B84u)




#define SRC_GTMTOM01 (SRC_GTM_GTM0_TOM0_1)


#define SRC_GTM_GTM0_TOM0_2 (*(volatile Ifx_SRC_SRCR*)0xF0039B88u)




#define SRC_GTMTOM02 (SRC_GTM_GTM0_TOM0_2)


#define SRC_GTM_GTM0_TOM0_3 (*(volatile Ifx_SRC_SRCR*)0xF0039B8Cu)




#define SRC_GTMTOM03 (SRC_GTM_GTM0_TOM0_3)


#define SRC_GTM_GTM0_TOM0_4 (*(volatile Ifx_SRC_SRCR*)0xF0039B90u)




#define SRC_GTMTOM04 (SRC_GTM_GTM0_TOM0_4)


#define SRC_GTM_GTM0_TOM0_5 (*(volatile Ifx_SRC_SRCR*)0xF0039B94u)




#define SRC_GTMTOM05 (SRC_GTM_GTM0_TOM0_5)


#define SRC_GTM_GTM0_TOM0_6 (*(volatile Ifx_SRC_SRCR*)0xF0039B98u)




#define SRC_GTMTOM06 (SRC_GTM_GTM0_TOM0_6)


#define SRC_GTM_GTM0_TOM0_7 (*(volatile Ifx_SRC_SRCR*)0xF0039B9Cu)




#define SRC_GTMTOM07 (SRC_GTM_GTM0_TOM0_7)


#define SRC_GTM_GTM0_TOM1_0 (*(volatile Ifx_SRC_SRCR*)0xF0039BA0u)




#define SRC_GTMTOM10 (SRC_GTM_GTM0_TOM1_0)


#define SRC_GTM_GTM0_TOM1_1 (*(volatile Ifx_SRC_SRCR*)0xF0039BA4u)




#define SRC_GTMTOM11 (SRC_GTM_GTM0_TOM1_1)


#define SRC_GTM_GTM0_TOM1_2 (*(volatile Ifx_SRC_SRCR*)0xF0039BA8u)




#define SRC_GTMTOM12 (SRC_GTM_GTM0_TOM1_2)


#define SRC_GTM_GTM0_TOM1_3 (*(volatile Ifx_SRC_SRCR*)0xF0039BACu)




#define SRC_GTMTOM13 (SRC_GTM_GTM0_TOM1_3)


#define SRC_GTM_GTM0_TOM1_4 (*(volatile Ifx_SRC_SRCR*)0xF0039BB0u)




#define SRC_GTMTOM14 (SRC_GTM_GTM0_TOM1_4)


#define SRC_GTM_GTM0_TOM1_5 (*(volatile Ifx_SRC_SRCR*)0xF0039BB4u)




#define SRC_GTMTOM15 (SRC_GTM_GTM0_TOM1_5)


#define SRC_GTM_GTM0_TOM1_6 (*(volatile Ifx_SRC_SRCR*)0xF0039BB8u)




#define SRC_GTMTOM16 (SRC_GTM_GTM0_TOM1_6)


#define SRC_GTM_GTM0_TOM1_7 (*(volatile Ifx_SRC_SRCR*)0xF0039BBCu)




#define SRC_GTMTOM17 (SRC_GTM_GTM0_TOM1_7)


#define SRC_GTM_GTM0_TOM2_0 (*(volatile Ifx_SRC_SRCR*)0xF0039BC0u)




#define SRC_GTMTOM20 (SRC_GTM_GTM0_TOM2_0)


#define SRC_GTM_GTM0_TOM2_1 (*(volatile Ifx_SRC_SRCR*)0xF0039BC4u)




#define SRC_GTMTOM21 (SRC_GTM_GTM0_TOM2_1)


#define SRC_GTM_GTM0_TOM2_2 (*(volatile Ifx_SRC_SRCR*)0xF0039BC8u)




#define SRC_GTMTOM22 (SRC_GTM_GTM0_TOM2_2)


#define SRC_GTM_GTM0_TOM2_3 (*(volatile Ifx_SRC_SRCR*)0xF0039BCCu)




#define SRC_GTMTOM23 (SRC_GTM_GTM0_TOM2_3)


#define SRC_GTM_GTM0_TOM2_4 (*(volatile Ifx_SRC_SRCR*)0xF0039BD0u)




#define SRC_GTMTOM24 (SRC_GTM_GTM0_TOM2_4)


#define SRC_GTM_GTM0_TOM2_5 (*(volatile Ifx_SRC_SRCR*)0xF0039BD4u)




#define SRC_GTMTOM25 (SRC_GTM_GTM0_TOM2_5)


#define SRC_GTM_GTM0_TOM2_6 (*(volatile Ifx_SRC_SRCR*)0xF0039BD8u)




#define SRC_GTMTOM26 (SRC_GTM_GTM0_TOM2_6)


#define SRC_GTM_GTM0_TOM2_7 (*(volatile Ifx_SRC_SRCR*)0xF0039BDCu)




#define SRC_GTMTOM27 (SRC_GTM_GTM0_TOM2_7)


#define SRC_HSCT_HSCT0_SR (*(volatile Ifx_SRC_SRCR*)0xF0038290u)




#define SRC_HSCT (SRC_HSCT_HSCT0_SR)


#define SRC_HSM_HSM0_HSM0 (*(volatile Ifx_SRC_SRCR*)0xF0038CC0u)




#define SRC_HSM0 (SRC_HSM_HSM0_HSM0)


#define SRC_HSM_HSM0_HSM1 (*(volatile Ifx_SRC_SRCR*)0xF0038CC4u)




#define SRC_HSM1 (SRC_HSM_HSM0_HSM1)


#define SRC_HSSL_EXI (*(volatile Ifx_SRC_SRCR*)0xF00382E0u)




#define SRC_HSSLEXI (SRC_HSSL_EXI)


#define SRC_HSSL_HSSL0_COK (*(volatile Ifx_SRC_SRCR*)0xF00382A0u)




#define SRC_HSSLCOK0 (SRC_HSSL_HSSL0_COK)


#define SRC_HSSL_HSSL0_ERR (*(volatile Ifx_SRC_SRCR*)0xF00382A8u)




#define SRC_HSSLERR0 (SRC_HSSL_HSSL0_ERR)


#define SRC_HSSL_HSSL0_RDI (*(volatile Ifx_SRC_SRCR*)0xF00382A4u)




#define SRC_HSSLRDI0 (SRC_HSSL_HSSL0_RDI)


#define SRC_HSSL_HSSL0_TRG (*(volatile Ifx_SRC_SRCR*)0xF00382ACu)




#define SRC_HSSLTRG0 (SRC_HSSL_HSSL0_TRG)


#define SRC_HSSL_HSSL1_COK (*(volatile Ifx_SRC_SRCR*)0xF00382B0u)




#define SRC_HSSLCOK1 (SRC_HSSL_HSSL1_COK)


#define SRC_HSSL_HSSL1_ERR (*(volatile Ifx_SRC_SRCR*)0xF00382B8u)




#define SRC_HSSLERR1 (SRC_HSSL_HSSL1_ERR)


#define SRC_HSSL_HSSL1_RDI (*(volatile Ifx_SRC_SRCR*)0xF00382B4u)




#define SRC_HSSLRDI1 (SRC_HSSL_HSSL1_RDI)


#define SRC_HSSL_HSSL1_TRG (*(volatile Ifx_SRC_SRCR*)0xF00382BCu)




#define SRC_HSSLTRG1 (SRC_HSSL_HSSL1_TRG)


#define SRC_HSSL_HSSL2_COK (*(volatile Ifx_SRC_SRCR*)0xF00382C0u)




#define SRC_HSSLCOK2 (SRC_HSSL_HSSL2_COK)


#define SRC_HSSL_HSSL2_ERR (*(volatile Ifx_SRC_SRCR*)0xF00382C8u)




#define SRC_HSSLERR2 (SRC_HSSL_HSSL2_ERR)


#define SRC_HSSL_HSSL2_RDI (*(volatile Ifx_SRC_SRCR*)0xF00382C4u)




#define SRC_HSSLRDI2 (SRC_HSSL_HSSL2_RDI)


#define SRC_HSSL_HSSL2_TRG (*(volatile Ifx_SRC_SRCR*)0xF00382CCu)




#define SRC_HSSLTRG2 (SRC_HSSL_HSSL2_TRG)


#define SRC_HSSL_HSSL3_COK (*(volatile Ifx_SRC_SRCR*)0xF00382D0u)




#define SRC_HSSLCOK3 (SRC_HSSL_HSSL3_COK)


#define SRC_HSSL_HSSL3_ERR (*(volatile Ifx_SRC_SRCR*)0xF00382D8u)




#define SRC_HSSLERR3 (SRC_HSSL_HSSL3_ERR)


#define SRC_HSSL_HSSL3_RDI (*(volatile Ifx_SRC_SRCR*)0xF00382D4u)




#define SRC_HSSLRDI3 (SRC_HSSL_HSSL3_RDI)


#define SRC_HSSL_HSSL3_TRG (*(volatile Ifx_SRC_SRCR*)0xF00382DCu)




#define SRC_HSSLTRG3 (SRC_HSSL_HSSL3_TRG)


#define SRC_I2C_I2C0_BREQ (*(volatile Ifx_SRC_SRCR*)0xF0038300u)




#define SRC_I2C0BREQ (SRC_I2C_I2C0_BREQ)


#define SRC_I2C_I2C0_ERR (*(volatile Ifx_SRC_SRCR*)0xF0038310u)




#define SRC_I2C0ERR (SRC_I2C_I2C0_ERR)


#define SRC_I2C_I2C0_LBREQ (*(volatile Ifx_SRC_SRCR*)0xF0038304u)




#define SRC_I2C0LBREQ (SRC_I2C_I2C0_LBREQ)


#define SRC_I2C_I2C0_LSREQ (*(volatile Ifx_SRC_SRCR*)0xF003830Cu)




#define SRC_I2C0LSREQ (SRC_I2C_I2C0_LSREQ)


#define SRC_I2C_I2C0_P (*(volatile Ifx_SRC_SRCR*)0xF0038314u)




#define SRC_I2C0P (SRC_I2C_I2C0_P)


#define SRC_I2C_I2C0_SREQ (*(volatile Ifx_SRC_SRCR*)0xF0038308u)




#define SRC_I2C0SREQ (SRC_I2C_I2C0_SREQ)


#define SRC_LMU_LMU0_SR (*(volatile Ifx_SRC_SRCR*)0xF0038DE0u)




#define SRC_LMU (SRC_LMU_LMU0_SR)


#define SRC_MSC_MSC0_SR0 (*(volatile Ifx_SRC_SRCR*)0xF00383E0u)




#define SRC_MSC0SR0 (SRC_MSC_MSC0_SR0)


#define SRC_MSC_MSC0_SR1 (*(volatile Ifx_SRC_SRCR*)0xF00383E4u)




#define SRC_MSC0SR1 (SRC_MSC_MSC0_SR1)


#define SRC_MSC_MSC0_SR2 (*(volatile Ifx_SRC_SRCR*)0xF00383E8u)




#define SRC_MSC0SR2 (SRC_MSC_MSC0_SR2)


#define SRC_MSC_MSC0_SR3 (*(volatile Ifx_SRC_SRCR*)0xF00383ECu)




#define SRC_MSC0SR3 (SRC_MSC_MSC0_SR3)


#define SRC_MSC_MSC0_SR4 (*(volatile Ifx_SRC_SRCR*)0xF00383F0u)




#define SRC_MSC0SR4 (SRC_MSC_MSC0_SR4)


#define SRC_MSC_MSC1_SR0 (*(volatile Ifx_SRC_SRCR*)0xF00383F4u)




#define SRC_MSC1SR0 (SRC_MSC_MSC1_SR0)


#define SRC_MSC_MSC1_SR1 (*(volatile Ifx_SRC_SRCR*)0xF00383F8u)




#define SRC_MSC1SR1 (SRC_MSC_MSC1_SR1)


#define SRC_MSC_MSC1_SR2 (*(volatile Ifx_SRC_SRCR*)0xF00383FCu)




#define SRC_MSC1SR2 (SRC_MSC_MSC1_SR2)


#define SRC_MSC_MSC1_SR3 (*(volatile Ifx_SRC_SRCR*)0xF0038400u)




#define SRC_MSC1SR3 (SRC_MSC_MSC1_SR3)


#define SRC_MSC_MSC1_SR4 (*(volatile Ifx_SRC_SRCR*)0xF0038404u)




#define SRC_MSC1SR4 (SRC_MSC_MSC1_SR4)


#define SRC_PMU_PMU0_SR (*(volatile Ifx_SRC_SRCR*)0xF0038C30u)




#define SRC_PMU00 (SRC_PMU_PMU0_SR)


#define SRC_PMU_PMU1_SR (*(volatile Ifx_SRC_SRCR*)0xF0038C34u)




#define SRC_PMU01 (SRC_PMU_PMU1_SR)


#define SRC_PSI5_PSI50_SR0 (*(volatile Ifx_SRC_SRCR*)0xF0038D30u)




#define SRC_PSI50 (SRC_PSI5_PSI50_SR0)


#define SRC_PSI5_PSI50_SR1 (*(volatile Ifx_SRC_SRCR*)0xF0038D34u)




#define SRC_PSI51 (SRC_PSI5_PSI50_SR1)


#define SRC_PSI5_PSI50_SR2 (*(volatile Ifx_SRC_SRCR*)0xF0038D38u)




#define SRC_PSI52 (SRC_PSI5_PSI50_SR2)


#define SRC_PSI5_PSI50_SR3 (*(volatile Ifx_SRC_SRCR*)0xF0038D3Cu)




#define SRC_PSI53 (SRC_PSI5_PSI50_SR3)


#define SRC_PSI5_PSI50_SR4 (*(volatile Ifx_SRC_SRCR*)0xF0038D40u)




#define SRC_PSI54 (SRC_PSI5_PSI50_SR4)


#define SRC_PSI5_PSI50_SR5 (*(volatile Ifx_SRC_SRCR*)0xF0038D44u)




#define SRC_PSI55 (SRC_PSI5_PSI50_SR5)


#define SRC_PSI5_PSI50_SR6 (*(volatile Ifx_SRC_SRCR*)0xF0038D48u)




#define SRC_PSI56 (SRC_PSI5_PSI50_SR6)


#define SRC_PSI5_PSI50_SR7 (*(volatile Ifx_SRC_SRCR*)0xF0038D4Cu)




#define SRC_PSI57 (SRC_PSI5_PSI50_SR7)


#define SRC_PSI5S_PSI5S0_SR0 (*(volatile Ifx_SRC_SRCR*)0xF0038DF0u)




#define SRC_PSI5S0 (SRC_PSI5S_PSI5S0_SR0)


#define SRC_PSI5S_PSI5S0_SR1 (*(volatile Ifx_SRC_SRCR*)0xF0038DF4u)




#define SRC_PSI5S1 (SRC_PSI5S_PSI5S0_SR1)


#define SRC_PSI5S_PSI5S0_SR2 (*(volatile Ifx_SRC_SRCR*)0xF0038DF8u)




#define SRC_PSI5S2 (SRC_PSI5S_PSI5S0_SR2)


#define SRC_PSI5S_PSI5S0_SR3 (*(volatile Ifx_SRC_SRCR*)0xF0038DFCu)




#define SRC_PSI5S3 (SRC_PSI5S_PSI5S0_SR3)


#define SRC_PSI5S_PSI5S0_SR4 (*(volatile Ifx_SRC_SRCR*)0xF0038E00u)




#define SRC_PSI5S4 (SRC_PSI5S_PSI5S0_SR4)


#define SRC_PSI5S_PSI5S0_SR5 (*(volatile Ifx_SRC_SRCR*)0xF0038E04u)




#define SRC_PSI5S5 (SRC_PSI5S_PSI5S0_SR5)


#define SRC_PSI5S_PSI5S0_SR6 (*(volatile Ifx_SRC_SRCR*)0xF0038E08u)




#define SRC_PSI5S6 (SRC_PSI5S_PSI5S0_SR6)


#define SRC_PSI5S_PSI5S0_SR7 (*(volatile Ifx_SRC_SRCR*)0xF0038E0Cu)




#define SRC_PSI5S7 (SRC_PSI5S_PSI5S0_SR7)


#define SRC_QSPI_QSPI0_ERR (*(volatile Ifx_SRC_SRCR*)0xF0038198u)




#define SRC_QSPI0ERR (SRC_QSPI_QSPI0_ERR)


#define SRC_QSPI_QSPI0_PT (*(volatile Ifx_SRC_SRCR*)0xF003819Cu)




#define SRC_QSPI0PT (SRC_QSPI_QSPI0_PT)


#define SRC_QSPI_QSPI0_RX (*(volatile Ifx_SRC_SRCR*)0xF0038194u)




#define SRC_QSPI0RX (SRC_QSPI_QSPI0_RX)


#define SRC_QSPI_QSPI0_TX (*(volatile Ifx_SRC_SRCR*)0xF0038190u)




#define SRC_QSPI0TX (SRC_QSPI_QSPI0_TX)


#define SRC_QSPI_QSPI0_U (*(volatile Ifx_SRC_SRCR*)0xF00381A4u)




#define SRC_QSPI0U (SRC_QSPI_QSPI0_U)


#define SRC_QSPI_QSPI1_ERR (*(volatile Ifx_SRC_SRCR*)0xF00381B0u)




#define SRC_QSPI1ERR (SRC_QSPI_QSPI1_ERR)


#define SRC_QSPI_QSPI1_PT (*(volatile Ifx_SRC_SRCR*)0xF00381B4u)




#define SRC_QSPI1PT (SRC_QSPI_QSPI1_PT)


#define SRC_QSPI_QSPI1_RX (*(volatile Ifx_SRC_SRCR*)0xF00381ACu)




#define SRC_QSPI1RX (SRC_QSPI_QSPI1_RX)


#define SRC_QSPI_QSPI1_TX (*(volatile Ifx_SRC_SRCR*)0xF00381A8u)




#define SRC_QSPI1TX (SRC_QSPI_QSPI1_TX)


#define SRC_QSPI_QSPI1_U (*(volatile Ifx_SRC_SRCR*)0xF00381BCu)




#define SRC_QSPI1U (SRC_QSPI_QSPI1_U)


#define SRC_QSPI_QSPI2_ERR (*(volatile Ifx_SRC_SRCR*)0xF00381C8u)




#define SRC_QSPI2ERR (SRC_QSPI_QSPI2_ERR)


#define SRC_QSPI_QSPI2_PT (*(volatile Ifx_SRC_SRCR*)0xF00381CCu)




#define SRC_QSPI2PT (SRC_QSPI_QSPI2_PT)


#define SRC_QSPI_QSPI2_RX (*(volatile Ifx_SRC_SRCR*)0xF00381C4u)




#define SRC_QSPI2RX (SRC_QSPI_QSPI2_RX)


#define SRC_QSPI_QSPI2_TX (*(volatile Ifx_SRC_SRCR*)0xF00381C0u)




#define SRC_QSPI2TX (SRC_QSPI_QSPI2_TX)


#define SRC_QSPI_QSPI2_U (*(volatile Ifx_SRC_SRCR*)0xF00381D4u)




#define SRC_QSPI2U (SRC_QSPI_QSPI2_U)


#define SRC_QSPI_QSPI3_ERR (*(volatile Ifx_SRC_SRCR*)0xF00381E0u)




#define SRC_QSPI3ERR (SRC_QSPI_QSPI3_ERR)


#define SRC_QSPI_QSPI3_PT (*(volatile Ifx_SRC_SRCR*)0xF00381E4u)




#define SRC_QSPI3PT (SRC_QSPI_QSPI3_PT)


#define SRC_QSPI_QSPI3_RX (*(volatile Ifx_SRC_SRCR*)0xF00381DCu)




#define SRC_QSPI3RX (SRC_QSPI_QSPI3_RX)


#define SRC_QSPI_QSPI3_TX (*(volatile Ifx_SRC_SRCR*)0xF00381D8u)




#define SRC_QSPI3TX (SRC_QSPI_QSPI3_TX)


#define SRC_QSPI_QSPI3_U (*(volatile Ifx_SRC_SRCR*)0xF00381ECu)




#define SRC_QSPI3U (SRC_QSPI_QSPI3_U)


#define SRC_SCU_SCU_DTS (*(volatile Ifx_SRC_SRCR*)0xF0038CD0u)




#define SRC_SCUDTS (SRC_SCU_SCU_DTS)


#define SRC_SCU_SCU_ERU0 (*(volatile Ifx_SRC_SRCR*)0xF0038CD4u)




#define SRC_SCUERU0 (SRC_SCU_SCU_ERU0)


#define SRC_SCU_SCU_ERU1 (*(volatile Ifx_SRC_SRCR*)0xF0038CD8u)




#define SRC_SCUERU1 (SRC_SCU_SCU_ERU1)


#define SRC_SCU_SCU_ERU2 (*(volatile Ifx_SRC_SRCR*)0xF0038CDCu)




#define SRC_SCUERU2 (SRC_SCU_SCU_ERU2)


#define SRC_SCU_SCU_ERU3 (*(volatile Ifx_SRC_SRCR*)0xF0038CE0u)




#define SRC_SCUERU3 (SRC_SCU_SCU_ERU3)


#define SRC_SENT_SENT0_SR0 (*(volatile Ifx_SRC_SRCR*)0xF0038350u)




#define SRC_SENT0 (SRC_SENT_SENT0_SR0)


#define SRC_SENT_SENT0_SR1 (*(volatile Ifx_SRC_SRCR*)0xF0038354u)




#define SRC_SENT1 (SRC_SENT_SENT0_SR1)


#define SRC_SENT_SENT0_SR2 (*(volatile Ifx_SRC_SRCR*)0xF0038358u)




#define SRC_SENT2 (SRC_SENT_SENT0_SR2)


#define SRC_SENT_SENT0_SR3 (*(volatile Ifx_SRC_SRCR*)0xF003835Cu)




#define SRC_SENT3 (SRC_SENT_SENT0_SR3)


#define SRC_SENT_SENT0_SR4 (*(volatile Ifx_SRC_SRCR*)0xF0038360u)




#define SRC_SENT4 (SRC_SENT_SENT0_SR4)


#define SRC_SENT_SENT0_SR5 (*(volatile Ifx_SRC_SRCR*)0xF0038364u)




#define SRC_SENT5 (SRC_SENT_SENT0_SR5)


#define SRC_SENT_SENT0_SR6 (*(volatile Ifx_SRC_SRCR*)0xF0038368u)




#define SRC_SENT6 (SRC_SENT_SENT0_SR6)


#define SRC_SENT_SENT0_SR7 (*(volatile Ifx_SRC_SRCR*)0xF003836Cu)




#define SRC_SENT7 (SRC_SENT_SENT0_SR7)


#define SRC_SENT_SENT0_SR8 (*(volatile Ifx_SRC_SRCR*)0xF0038370u)




#define SRC_SENT8 (SRC_SENT_SENT0_SR8)


#define SRC_SENT_SENT0_SR9 (*(volatile Ifx_SRC_SRCR*)0xF0038374u)




#define SRC_SENT9 (SRC_SENT_SENT0_SR9)


#define SRC_SMU_SMU0_SR0 (*(volatile Ifx_SRC_SRCR*)0xF0038D10u)




#define SRC_SMU0 (SRC_SMU_SMU0_SR0)


#define SRC_SMU_SMU0_SR1 (*(volatile Ifx_SRC_SRCR*)0xF0038D14u)




#define SRC_SMU1 (SRC_SMU_SMU0_SR1)


#define SRC_SMU_SMU0_SR2 (*(volatile Ifx_SRC_SRCR*)0xF0038D18u)




#define SRC_SMU2 (SRC_SMU_SMU0_SR2)


#define SRC_STM_STM0_SR0 (*(volatile Ifx_SRC_SRCR*)0xF0038490u)




#define SRC_STM0SR0 (SRC_STM_STM0_SR0)


#define SRC_STM_STM0_SR1 (*(volatile Ifx_SRC_SRCR*)0xF0038494u)




#define SRC_STM0SR1 (SRC_STM_STM0_SR1)


#define SRC_STM_STM1_SR0 (*(volatile Ifx_SRC_SRCR*)0xF0038498u)




#define SRC_STM1SR0 (SRC_STM_STM1_SR0)


#define SRC_STM_STM1_SR1 (*(volatile Ifx_SRC_SRCR*)0xF003849Cu)




#define SRC_STM1SR1 (SRC_STM_STM1_SR1)


#define SRC_STM_STM2_SR0 (*(volatile Ifx_SRC_SRCR*)0xF00384A0u)




#define SRC_STM2SR0 (SRC_STM_STM2_SR0)


#define SRC_STM_STM2_SR1 (*(volatile Ifx_SRC_SRCR*)0xF00384A4u)




#define SRC_STM2SR1 (SRC_STM_STM2_SR1)


#define SRC_VADC_CG0_SR0 (*(volatile Ifx_SRC_SRCR*)0xF0038AA0u)




#define SRC_VADCCG0SR0 (SRC_VADC_CG0_SR0)


#define SRC_VADC_CG0_SR1 (*(volatile Ifx_SRC_SRCR*)0xF0038AA4u)




#define SRC_VADCCG0SR1 (SRC_VADC_CG0_SR1)


#define SRC_VADC_CG0_SR2 (*(volatile Ifx_SRC_SRCR*)0xF0038AA8u)




#define SRC_VADCCG0SR2 (SRC_VADC_CG0_SR2)


#define SRC_VADC_CG0_SR3 (*(volatile Ifx_SRC_SRCR*)0xF0038AACu)




#define SRC_VADCCG0SR3 (SRC_VADC_CG0_SR3)


#define SRC_VADC_CG1_SR0 (*(volatile Ifx_SRC_SRCR*)0xF0038AB0u)




#define SRC_VADCCG1SR0 (SRC_VADC_CG1_SR0)


#define SRC_VADC_CG1_SR1 (*(volatile Ifx_SRC_SRCR*)0xF0038AB4u)




#define SRC_VADCCG1SR1 (SRC_VADC_CG1_SR1)


#define SRC_VADC_CG1_SR2 (*(volatile Ifx_SRC_SRCR*)0xF0038AB8u)




#define SRC_VADCCG1SR2 (SRC_VADC_CG1_SR2)


#define SRC_VADC_CG1_SR3 (*(volatile Ifx_SRC_SRCR*)0xF0038ABCu)




#define SRC_VADCCG1SR3 (SRC_VADC_CG1_SR3)


#define SRC_VADC_G0_SR0 (*(volatile Ifx_SRC_SRCR*)0xF0038980u)




#define SRC_VADCG0SR0 (SRC_VADC_G0_SR0)


#define SRC_VADC_G0_SR1 (*(volatile Ifx_SRC_SRCR*)0xF0038984u)




#define SRC_VADCG0SR1 (SRC_VADC_G0_SR1)


#define SRC_VADC_G0_SR2 (*(volatile Ifx_SRC_SRCR*)0xF0038988u)




#define SRC_VADCG0SR2 (SRC_VADC_G0_SR2)


#define SRC_VADC_G0_SR3 (*(volatile Ifx_SRC_SRCR*)0xF003898Cu)




#define SRC_VADCG0SR3 (SRC_VADC_G0_SR3)


#define SRC_VADC_G1_SR0 (*(volatile Ifx_SRC_SRCR*)0xF0038990u)




#define SRC_VADCG1SR0 (SRC_VADC_G1_SR0)


#define SRC_VADC_G1_SR1 (*(volatile Ifx_SRC_SRCR*)0xF0038994u)




#define SRC_VADCG1SR1 (SRC_VADC_G1_SR1)


#define SRC_VADC_G1_SR2 (*(volatile Ifx_SRC_SRCR*)0xF0038998u)




#define SRC_VADCG1SR2 (SRC_VADC_G1_SR2)


#define SRC_VADC_G1_SR3 (*(volatile Ifx_SRC_SRCR*)0xF003899Cu)




#define SRC_VADCG1SR3 (SRC_VADC_G1_SR3)


#define SRC_VADC_G2_SR0 (*(volatile Ifx_SRC_SRCR*)0xF00389A0u)




#define SRC_VADCG2SR0 (SRC_VADC_G2_SR0)


#define SRC_VADC_G2_SR1 (*(volatile Ifx_SRC_SRCR*)0xF00389A4u)




#define SRC_VADCG2SR1 (SRC_VADC_G2_SR1)


#define SRC_VADC_G2_SR2 (*(volatile Ifx_SRC_SRCR*)0xF00389A8u)




#define SRC_VADCG2SR2 (SRC_VADC_G2_SR2)


#define SRC_VADC_G2_SR3 (*(volatile Ifx_SRC_SRCR*)0xF00389ACu)




#define SRC_VADCG2SR3 (SRC_VADC_G2_SR3)


#define SRC_VADC_G3_SR0 (*(volatile Ifx_SRC_SRCR*)0xF00389B0u)




#define SRC_VADCG3SR0 (SRC_VADC_G3_SR0)


#define SRC_VADC_G3_SR1 (*(volatile Ifx_SRC_SRCR*)0xF00389B4u)




#define SRC_VADCG3SR1 (SRC_VADC_G3_SR1)


#define SRC_VADC_G3_SR2 (*(volatile Ifx_SRC_SRCR*)0xF00389B8u)




#define SRC_VADCG3SR2 (SRC_VADC_G3_SR2)


#define SRC_VADC_G3_SR3 (*(volatile Ifx_SRC_SRCR*)0xF00389BCu)




#define SRC_VADCG3SR3 (SRC_VADC_G3_SR3)


#define SRC_VADC_G4_SR0 (*(volatile Ifx_SRC_SRCR*)0xF00389C0u)




#define SRC_VADCG4SR0 (SRC_VADC_G4_SR0)


#define SRC_VADC_G4_SR1 (*(volatile Ifx_SRC_SRCR*)0xF00389C4u)




#define SRC_VADCG4SR1 (SRC_VADC_G4_SR1)


#define SRC_VADC_G4_SR2 (*(volatile Ifx_SRC_SRCR*)0xF00389C8u)




#define SRC_VADCG4SR2 (SRC_VADC_G4_SR2)


#define SRC_VADC_G4_SR3 (*(volatile Ifx_SRC_SRCR*)0xF00389CCu)




#define SRC_VADCG4SR3 (SRC_VADC_G4_SR3)


#define SRC_VADC_G5_SR0 (*(volatile Ifx_SRC_SRCR*)0xF00389D0u)




#define SRC_VADCG5SR0 (SRC_VADC_G5_SR0)


#define SRC_VADC_G5_SR1 (*(volatile Ifx_SRC_SRCR*)0xF00389D4u)




#define SRC_VADCG5SR1 (SRC_VADC_G5_SR1)


#define SRC_VADC_G5_SR2 (*(volatile Ifx_SRC_SRCR*)0xF00389D8u)




#define SRC_VADCG5SR2 (SRC_VADC_G5_SR2)


#define SRC_VADC_G5_SR3 (*(volatile Ifx_SRC_SRCR*)0xF00389DCu)




#define SRC_VADCG5SR3 (SRC_VADC_G5_SR3)


#define SRC_VADC_G6_SR0 (*(volatile Ifx_SRC_SRCR*)0xF00389E0u)




#define SRC_VADCG6SR0 (SRC_VADC_G6_SR0)


#define SRC_VADC_G6_SR1 (*(volatile Ifx_SRC_SRCR*)0xF00389E4u)




#define SRC_VADCG6SR1 (SRC_VADC_G6_SR1)


#define SRC_VADC_G6_SR2 (*(volatile Ifx_SRC_SRCR*)0xF00389E8u)




#define SRC_VADCG6SR2 (SRC_VADC_G6_SR2)


#define SRC_VADC_G6_SR3 (*(volatile Ifx_SRC_SRCR*)0xF00389ECu)




#define SRC_VADCG6SR3 (SRC_VADC_G6_SR3)


#define SRC_VADC_G7_SR0 (*(volatile Ifx_SRC_SRCR*)0xF00389F0u)




#define SRC_VADCG7SR0 (SRC_VADC_G7_SR0)


#define SRC_VADC_G7_SR1 (*(volatile Ifx_SRC_SRCR*)0xF00389F4u)




#define SRC_VADCG7SR1 (SRC_VADC_G7_SR1)


#define SRC_VADC_G7_SR2 (*(volatile Ifx_SRC_SRCR*)0xF00389F8u)




#define SRC_VADCG7SR2 (SRC_VADC_G7_SR2)


#define SRC_VADC_G7_SR3 (*(volatile Ifx_SRC_SRCR*)0xF00389FCu)




#define SRC_VADCG7SR3 (SRC_VADC_G7_SR3)


#define SRC_XBAR_XBAR_SRC (*(volatile Ifx_SRC_SRCR*)0xF0038048u)




#define SRC_XBARSRC (SRC_XBAR_XBAR_SRC)
# 71 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 2 3

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxStm_reg.h" 1 3
# 40 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxStm_reg.h" 3
#define IFXSTM_REG_H 1

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxStm_regdef.h" 1 3
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxStm_regdef.h" 3
#define IFXSTM_REGDEF_H 1







typedef struct _Ifx_STM_ACCEN0_Bits
{
    unsigned int EN0:1;
    unsigned int EN1:1;
    unsigned int EN2:1;
    unsigned int EN3:1;
    unsigned int EN4:1;
    unsigned int EN5:1;
    unsigned int EN6:1;
    unsigned int EN7:1;
    unsigned int EN8:1;
    unsigned int EN9:1;
    unsigned int EN10:1;
    unsigned int EN11:1;
    unsigned int EN12:1;
    unsigned int EN13:1;
    unsigned int EN14:1;
    unsigned int EN15:1;
    unsigned int EN16:1;
    unsigned int EN17:1;
    unsigned int EN18:1;
    unsigned int EN19:1;
    unsigned int EN20:1;
    unsigned int EN21:1;
    unsigned int EN22:1;
    unsigned int EN23:1;
    unsigned int EN24:1;
    unsigned int EN25:1;
    unsigned int EN26:1;
    unsigned int EN27:1;
    unsigned int EN28:1;
    unsigned int EN29:1;
    unsigned int EN30:1;
    unsigned int EN31:1;
} Ifx_STM_ACCEN0_Bits;


typedef struct _Ifx_STM_ACCEN1_Bits
{
    unsigned int reserved_0:32;
} Ifx_STM_ACCEN1_Bits;


typedef struct _Ifx_STM_CAP_Bits
{
    unsigned int STMCAP63_32:32;
} Ifx_STM_CAP_Bits;


typedef struct _Ifx_STM_CAPSV_Bits
{
    unsigned int STMCAP63_32:32;
} Ifx_STM_CAPSV_Bits;


typedef struct _Ifx_STM_CLC_Bits
{
    unsigned int DISR:1;
    unsigned int DISS:1;
    unsigned int reserved_2:1;
    unsigned int EDIS:1;
    unsigned int reserved_4:28;
} Ifx_STM_CLC_Bits;


typedef struct _Ifx_STM_CMCON_Bits
{
    unsigned int MSIZE0:5;
    unsigned int reserved_5:3;
    unsigned int MSTART0:5;
    unsigned int reserved_13:3;
    unsigned int MSIZE1:5;
    unsigned int reserved_21:3;
    unsigned int MSTART1:5;
    unsigned int reserved_29:3;
} Ifx_STM_CMCON_Bits;


typedef struct _Ifx_STM_CMP_Bits
{
    unsigned int CMPVAL:32;
} Ifx_STM_CMP_Bits;


typedef struct _Ifx_STM_ICR_Bits
{
    unsigned int CMP0EN:1;
    unsigned int CMP0IR:1;
    unsigned int CMP0OS:1;
    unsigned int reserved_3:1;
    unsigned int CMP1EN:1;
    unsigned int CMP1IR:1;
    unsigned int CMP1OS:1;
    unsigned int reserved_7:25;
} Ifx_STM_ICR_Bits;


typedef struct _Ifx_STM_ID_Bits
{
    unsigned int MODREV:8;
    unsigned int MODTYPE:8;
    unsigned int MODNUMBER:16;
} Ifx_STM_ID_Bits;


typedef struct _Ifx_STM_ISCR_Bits
{
    unsigned int CMP0IRR:1;
    unsigned int CMP0IRS:1;
    unsigned int CMP1IRR:1;
    unsigned int CMP1IRS:1;
    unsigned int reserved_4:28;
} Ifx_STM_ISCR_Bits;


typedef struct _Ifx_STM_KRST0_Bits
{
    unsigned int RST:1;
    unsigned int RSTSTAT:1;
    unsigned int reserved_2:30;
} Ifx_STM_KRST0_Bits;


typedef struct _Ifx_STM_KRST1_Bits
{
    unsigned int RST:1;
    unsigned int reserved_1:31;
} Ifx_STM_KRST1_Bits;


typedef struct _Ifx_STM_KRSTCLR_Bits
{
    unsigned int CLR:1;
    unsigned int reserved_1:31;
} Ifx_STM_KRSTCLR_Bits;


typedef struct _Ifx_STM_OCS_Bits
{
    unsigned int reserved_0:24;
    unsigned int SUS:4;
    unsigned int SUS_P:1;
    unsigned int SUSSTA:1;
    unsigned int reserved_30:2;
} Ifx_STM_OCS_Bits;


typedef struct _Ifx_STM_TIM0_Bits
{
    unsigned int STM31_0:32;
} Ifx_STM_TIM0_Bits;


typedef struct _Ifx_STM_TIM0SV_Bits
{
    unsigned int STM31_0:32;
} Ifx_STM_TIM0SV_Bits;


typedef struct _Ifx_STM_TIM1_Bits
{
    unsigned int STM35_4:32;
} Ifx_STM_TIM1_Bits;


typedef struct _Ifx_STM_TIM2_Bits
{
    unsigned int STM39_8:32;
} Ifx_STM_TIM2_Bits;


typedef struct _Ifx_STM_TIM3_Bits
{
    unsigned int STM43_12:32;
} Ifx_STM_TIM3_Bits;


typedef struct _Ifx_STM_TIM4_Bits
{
    unsigned int STM47_16:32;
} Ifx_STM_TIM4_Bits;


typedef struct _Ifx_STM_TIM5_Bits
{
    unsigned int STM51_20:32;
} Ifx_STM_TIM5_Bits;


typedef struct _Ifx_STM_TIM6_Bits
{
    unsigned int STM63_32:32;
} Ifx_STM_TIM6_Bits;







typedef union
{
    unsigned int U;
    signed int I;
    Ifx_STM_ACCEN0_Bits B;
} Ifx_STM_ACCEN0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_STM_ACCEN1_Bits B;
} Ifx_STM_ACCEN1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_STM_CAP_Bits B;
} Ifx_STM_CAP;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_STM_CAPSV_Bits B;
} Ifx_STM_CAPSV;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_STM_CLC_Bits B;
} Ifx_STM_CLC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_STM_CMCON_Bits B;
} Ifx_STM_CMCON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_STM_CMP_Bits B;
} Ifx_STM_CMP;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_STM_ICR_Bits B;
} Ifx_STM_ICR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_STM_ID_Bits B;
} Ifx_STM_ID;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_STM_ISCR_Bits B;
} Ifx_STM_ISCR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_STM_KRST0_Bits B;
} Ifx_STM_KRST0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_STM_KRST1_Bits B;
} Ifx_STM_KRST1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_STM_KRSTCLR_Bits B;
} Ifx_STM_KRSTCLR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_STM_OCS_Bits B;
} Ifx_STM_OCS;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_STM_TIM0_Bits B;
} Ifx_STM_TIM0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_STM_TIM0SV_Bits B;
} Ifx_STM_TIM0SV;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_STM_TIM1_Bits B;
} Ifx_STM_TIM1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_STM_TIM2_Bits B;
} Ifx_STM_TIM2;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_STM_TIM3_Bits B;
} Ifx_STM_TIM3;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_STM_TIM4_Bits B;
} Ifx_STM_TIM4;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_STM_TIM5_Bits B;
} Ifx_STM_TIM5;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_STM_TIM6_Bits B;
} Ifx_STM_TIM6;
# 429 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxStm_regdef.h" 3
typedef volatile struct _Ifx_STM
{
    Ifx_STM_CLC CLC;
    unsigned char reserved_4[4];
    Ifx_STM_ID ID;
    unsigned char reserved_C[4];
    Ifx_STM_TIM0 TIM0;
    Ifx_STM_TIM1 TIM1;
    Ifx_STM_TIM2 TIM2;
    Ifx_STM_TIM3 TIM3;
    Ifx_STM_TIM4 TIM4;
    Ifx_STM_TIM5 TIM5;
    Ifx_STM_TIM6 TIM6;
    Ifx_STM_CAP CAP;
    Ifx_STM_CMP CMP[2];
    Ifx_STM_CMCON CMCON;
    Ifx_STM_ICR ICR;
    Ifx_STM_ISCR ISCR;
    unsigned char reserved_44[12];
    Ifx_STM_TIM0SV TIM0SV;
    Ifx_STM_CAPSV CAPSV;
    unsigned char reserved_58[144];
    Ifx_STM_OCS OCS;
    Ifx_STM_KRSTCLR KRSTCLR;
    Ifx_STM_KRST1 KRST1;
    Ifx_STM_KRST0 KRST0;
    Ifx_STM_ACCEN1 ACCEN1;
    Ifx_STM_ACCEN0 ACCEN0;
} Ifx_STM;
# 43 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxStm_reg.h" 2 3





#define MODULE_STM0 (*(Ifx_STM*)0xF0000000u)


#define MODULE_STM1 (*(Ifx_STM*)0xF0000100u)


#define MODULE_STM2 (*(Ifx_STM*)0xF0000200u)







#define STM0_ACCEN0 (*(volatile Ifx_STM_ACCEN0*)0xF00000FCu)


#define STM0_ACCEN1 (*(volatile Ifx_STM_ACCEN1*)0xF00000F8u)


#define STM0_CAP (*(volatile Ifx_STM_CAP*)0xF000002Cu)


#define STM0_CAPSV (*(volatile Ifx_STM_CAPSV*)0xF0000054u)


#define STM0_CLC (*(volatile Ifx_STM_CLC*)0xF0000000u)


#define STM0_CMCON (*(volatile Ifx_STM_CMCON*)0xF0000038u)


#define STM0_CMP0 (*(volatile Ifx_STM_CMP*)0xF0000030u)


#define STM0_CMP1 (*(volatile Ifx_STM_CMP*)0xF0000034u)


#define STM0_ICR (*(volatile Ifx_STM_ICR*)0xF000003Cu)


#define STM0_ID (*(volatile Ifx_STM_ID*)0xF0000008u)


#define STM0_ISCR (*(volatile Ifx_STM_ISCR*)0xF0000040u)


#define STM0_KRST0 (*(volatile Ifx_STM_KRST0*)0xF00000F4u)


#define STM0_KRST1 (*(volatile Ifx_STM_KRST1*)0xF00000F0u)


#define STM0_KRSTCLR (*(volatile Ifx_STM_KRSTCLR*)0xF00000ECu)


#define STM0_OCS (*(volatile Ifx_STM_OCS*)0xF00000E8u)


#define STM0_TIM0 (*(volatile Ifx_STM_TIM0*)0xF0000010u)


#define STM0_TIM0SV (*(volatile Ifx_STM_TIM0SV*)0xF0000050u)


#define STM0_TIM1 (*(volatile Ifx_STM_TIM1*)0xF0000014u)


#define STM0_TIM2 (*(volatile Ifx_STM_TIM2*)0xF0000018u)


#define STM0_TIM3 (*(volatile Ifx_STM_TIM3*)0xF000001Cu)


#define STM0_TIM4 (*(volatile Ifx_STM_TIM4*)0xF0000020u)


#define STM0_TIM5 (*(volatile Ifx_STM_TIM5*)0xF0000024u)


#define STM0_TIM6 (*(volatile Ifx_STM_TIM6*)0xF0000028u)







#define STM1_ACCEN0 (*(volatile Ifx_STM_ACCEN0*)0xF00001FCu)


#define STM1_ACCEN1 (*(volatile Ifx_STM_ACCEN1*)0xF00001F8u)


#define STM1_CAP (*(volatile Ifx_STM_CAP*)0xF000012Cu)


#define STM1_CAPSV (*(volatile Ifx_STM_CAPSV*)0xF0000154u)


#define STM1_CLC (*(volatile Ifx_STM_CLC*)0xF0000100u)


#define STM1_CMCON (*(volatile Ifx_STM_CMCON*)0xF0000138u)


#define STM1_CMP0 (*(volatile Ifx_STM_CMP*)0xF0000130u)


#define STM1_CMP1 (*(volatile Ifx_STM_CMP*)0xF0000134u)


#define STM1_ICR (*(volatile Ifx_STM_ICR*)0xF000013Cu)


#define STM1_ID (*(volatile Ifx_STM_ID*)0xF0000108u)


#define STM1_ISCR (*(volatile Ifx_STM_ISCR*)0xF0000140u)


#define STM1_KRST0 (*(volatile Ifx_STM_KRST0*)0xF00001F4u)


#define STM1_KRST1 (*(volatile Ifx_STM_KRST1*)0xF00001F0u)


#define STM1_KRSTCLR (*(volatile Ifx_STM_KRSTCLR*)0xF00001ECu)


#define STM1_OCS (*(volatile Ifx_STM_OCS*)0xF00001E8u)


#define STM1_TIM0 (*(volatile Ifx_STM_TIM0*)0xF0000110u)


#define STM1_TIM0SV (*(volatile Ifx_STM_TIM0SV*)0xF0000150u)


#define STM1_TIM1 (*(volatile Ifx_STM_TIM1*)0xF0000114u)


#define STM1_TIM2 (*(volatile Ifx_STM_TIM2*)0xF0000118u)


#define STM1_TIM3 (*(volatile Ifx_STM_TIM3*)0xF000011Cu)


#define STM1_TIM4 (*(volatile Ifx_STM_TIM4*)0xF0000120u)


#define STM1_TIM5 (*(volatile Ifx_STM_TIM5*)0xF0000124u)


#define STM1_TIM6 (*(volatile Ifx_STM_TIM6*)0xF0000128u)







#define STM2_ACCEN0 (*(volatile Ifx_STM_ACCEN0*)0xF00002FCu)


#define STM2_ACCEN1 (*(volatile Ifx_STM_ACCEN1*)0xF00002F8u)


#define STM2_CAP (*(volatile Ifx_STM_CAP*)0xF000022Cu)


#define STM2_CAPSV (*(volatile Ifx_STM_CAPSV*)0xF0000254u)


#define STM2_CLC (*(volatile Ifx_STM_CLC*)0xF0000200u)


#define STM2_CMCON (*(volatile Ifx_STM_CMCON*)0xF0000238u)


#define STM2_CMP0 (*(volatile Ifx_STM_CMP*)0xF0000230u)


#define STM2_CMP1 (*(volatile Ifx_STM_CMP*)0xF0000234u)


#define STM2_ICR (*(volatile Ifx_STM_ICR*)0xF000023Cu)


#define STM2_ID (*(volatile Ifx_STM_ID*)0xF0000208u)


#define STM2_ISCR (*(volatile Ifx_STM_ISCR*)0xF0000240u)


#define STM2_KRST0 (*(volatile Ifx_STM_KRST0*)0xF00002F4u)


#define STM2_KRST1 (*(volatile Ifx_STM_KRST1*)0xF00002F0u)


#define STM2_KRSTCLR (*(volatile Ifx_STM_KRSTCLR*)0xF00002ECu)


#define STM2_OCS (*(volatile Ifx_STM_OCS*)0xF00002E8u)


#define STM2_TIM0 (*(volatile Ifx_STM_TIM0*)0xF0000210u)


#define STM2_TIM0SV (*(volatile Ifx_STM_TIM0SV*)0xF0000250u)


#define STM2_TIM1 (*(volatile Ifx_STM_TIM1*)0xF0000214u)


#define STM2_TIM2 (*(volatile Ifx_STM_TIM2*)0xF0000218u)


#define STM2_TIM3 (*(volatile Ifx_STM_TIM3*)0xF000021Cu)


#define STM2_TIM4 (*(volatile Ifx_STM_TIM4*)0xF0000220u)


#define STM2_TIM5 (*(volatile Ifx_STM_TIM5*)0xF0000224u)


#define STM2_TIM6 (*(volatile Ifx_STM_TIM6*)0xF0000228u)
# 73 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 2 3

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_assert.h" 1 3
# 48 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifx_assert.h" 3
#define IFX_ASSERT_H 1







#define IFX_VERBOSE_LEVEL_OFF (0)
#define IFX_VERBOSE_LEVEL_FAILURE (1)
#define IFX_VERBOSE_LEVEL_ERROR (2)
#define IFX_VERBOSE_LEVEL_WARNING (3)
#define IFX_VERBOSE_LEVEL_INFO (4)
#define IFX_VERBOSE_LEVEL_DEBUG (5)


#define IFX_ASSERT_FEATURE_NOT_IMPLEMENTED (FALSE)

#define IFX_ASSERT_FEATURE_NOT_AVAILABLE (FALSE)


#define IFX_ASSERT(level,expr) ((void)0)



#define IFX_VALIDATE(level,expr) (expr)
# 75 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 2 3

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuccu.h" 1 3
# 118 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuccu.h" 3
#define IFXSCUCCU_H 1







# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 1 3
# 127 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuccu.h" 2 3


# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxFlash_reg.h" 1 3
# 34 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxFlash_reg.h" 3
#define IFXFLASH_REG_H 1

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxFlash_regdef.h" 1 3
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxFlash_regdef.h" 3
#define IFXFLASH_REGDEF_H 1







typedef struct _Ifx_FLASH_ACCEN0_Bits
{
    unsigned int EN0:1;
    unsigned int EN1:1;
    unsigned int EN2:1;
    unsigned int EN3:1;
    unsigned int EN4:1;
    unsigned int EN5:1;
    unsigned int EN6:1;
    unsigned int EN7:1;
    unsigned int EN8:1;
    unsigned int EN9:1;
    unsigned int EN10:1;
    unsigned int EN11:1;
    unsigned int EN12:1;
    unsigned int EN13:1;
    unsigned int EN14:1;
    unsigned int EN15:1;
    unsigned int EN16:1;
    unsigned int EN17:1;
    unsigned int EN18:1;
    unsigned int EN19:1;
    unsigned int EN20:1;
    unsigned int EN21:1;
    unsigned int EN22:1;
    unsigned int EN23:1;
    unsigned int EN24:1;
    unsigned int EN25:1;
    unsigned int EN26:1;
    unsigned int EN27:1;
    unsigned int EN28:1;
    unsigned int EN29:1;
    unsigned int EN30:1;
    unsigned int EN31:1;
} Ifx_FLASH_ACCEN0_Bits;


typedef struct _Ifx_FLASH_ACCEN1_Bits
{
    unsigned int reserved_0:32;
} Ifx_FLASH_ACCEN1_Bits;


typedef struct _Ifx_FLASH_CBAB_CFG_Bits
{
    unsigned int SEL:6;
    unsigned int reserved_6:2;
    unsigned int CLR:1;
    unsigned int DIS:1;
    unsigned int reserved_10:22;
} Ifx_FLASH_CBAB_CFG_Bits;


typedef struct _Ifx_FLASH_CBAB_STAT_Bits
{
    unsigned int VLD0:1;
    unsigned int VLD1:1;
    unsigned int VLD2:1;
    unsigned int VLD3:1;
    unsigned int VLD4:1;
    unsigned int VLD5:1;
    unsigned int VLD6:1;
    unsigned int VLD7:1;
    unsigned int VLD8:1;
    unsigned int VLD9:1;
    unsigned int reserved_10:22;
} Ifx_FLASH_CBAB_STAT_Bits;


typedef struct _Ifx_FLASH_CBAB_TOP_Bits
{
    unsigned int reserved_0:5;
    unsigned int ADDR:19;
    unsigned int ERR:6;
    unsigned int VLD:1;
    unsigned int CLR:1;
} Ifx_FLASH_CBAB_TOP_Bits;


typedef struct _Ifx_FLASH_COMM0_Bits
{
    unsigned int STATUS:8;
    unsigned int reserved_8:24;
} Ifx_FLASH_COMM0_Bits;


typedef struct _Ifx_FLASH_COMM1_Bits
{
    unsigned int STATUS:8;
    unsigned int DATA:8;
    unsigned int reserved_16:16;
} Ifx_FLASH_COMM1_Bits;


typedef struct _Ifx_FLASH_COMM2_Bits
{
    unsigned int STATUS:8;
    unsigned int DATA:8;
    unsigned int reserved_16:16;
} Ifx_FLASH_COMM2_Bits;


typedef struct _Ifx_FLASH_ECCRD_Bits
{
    unsigned int RCODE:22;
    unsigned int reserved_22:8;
    unsigned int EDCERRINJ:1;
    unsigned int ECCORDIS:1;
} Ifx_FLASH_ECCRD_Bits;


typedef struct _Ifx_FLASH_ECCRP_Bits
{
    unsigned int RCODE:22;
    unsigned int reserved_22:8;
    unsigned int EDCERRINJ:1;
    unsigned int ECCORDIS:1;
} Ifx_FLASH_ECCRP_Bits;


typedef struct _Ifx_FLASH_ECCW_Bits
{
    unsigned int WCODE:22;
    unsigned int reserved_22:8;
    unsigned int DECENCDIS:1;
    unsigned int PECENCDIS:1;
} Ifx_FLASH_ECCW_Bits;


typedef struct _Ifx_FLASH_FCON_Bits
{
    unsigned int WSPFLASH:4;
    unsigned int WSECPF:2;
    unsigned int WSDFLASH:6;
    unsigned int WSECDF:3;
    unsigned int IDLE:1;
    unsigned int ESLDIS:1;
    unsigned int SLEEP:1;
    unsigned int NSAFECC:1;
    unsigned int STALL:1;
    unsigned int RES21:2;
    unsigned int RES23:2;
    unsigned int VOPERM:1;
    unsigned int SQERM:1;
    unsigned int PROERM:1;
    unsigned int reserved_27:3;
    unsigned int PR5V:1;
    unsigned int EOBM:1;
} Ifx_FLASH_FCON_Bits;


typedef struct _Ifx_FLASH_FPRO_Bits
{
    unsigned int PROINP:1;
    unsigned int PRODISP:1;
    unsigned int PROIND:1;
    unsigned int PRODISD:1;
    unsigned int PROINHSMCOTP:1;
    unsigned int RES5:1;
    unsigned int PROINOTP:1;
    unsigned int RES7:1;
    unsigned int PROINDBG:1;
    unsigned int PRODISDBG:1;
    unsigned int PROINHSM:1;
    unsigned int reserved_11:5;
    unsigned int DCFP:1;
    unsigned int DDFP:1;
    unsigned int DDFPX:1;
    unsigned int reserved_19:1;
    unsigned int DDFD:1;
    unsigned int reserved_21:1;
    unsigned int ENPE:2;
    unsigned int reserved_24:8;
} Ifx_FLASH_FPRO_Bits;


typedef struct _Ifx_FLASH_FSR_Bits
{
    unsigned int FABUSY:1;
    unsigned int D0BUSY:1;
    unsigned int D1BUSY:1;
    unsigned int P0BUSY:1;
    unsigned int P1BUSY:1;
    unsigned int RES5:1;
    unsigned int RES6:1;
    unsigned int PROG:1;
    unsigned int ERASE:1;
    unsigned int PFPAGE:1;
    unsigned int DFPAGE:1;
    unsigned int OPER:1;
    unsigned int SQER:1;
    unsigned int PROER:1;
    unsigned int PFSBER:1;
    unsigned int PFDBER:1;
    unsigned int PFMBER:1;
    unsigned int RES17:1;
    unsigned int DFSBER:1;
    unsigned int DFDBER:1;
    unsigned int DFTBER:1;
    unsigned int DFMBER:1;
    unsigned int SRIADDERR:1;
    unsigned int reserved_23:2;
    unsigned int PVER:1;
    unsigned int EVER:1;
    unsigned int SPND:1;
    unsigned int SLM:1;
    unsigned int reserved_29:1;
    unsigned int ORIER:1;
    unsigned int reserved_31:1;
} Ifx_FLASH_FSR_Bits;


typedef struct _Ifx_FLASH_HSMFCON_Bits
{
    unsigned int LCKHSMUCB:2;
    unsigned int reserved_2:22;
    unsigned int VOPERM:1;
    unsigned int SQERM:1;
    unsigned int reserved_26:5;
    unsigned int EOBM:1;
} Ifx_FLASH_HSMFCON_Bits;


typedef struct _Ifx_FLASH_HSMFSR_Bits
{
    unsigned int reserved_0:2;
    unsigned int D1BUSY:1;
    unsigned int reserved_3:4;
    unsigned int PROG:1;
    unsigned int ERASE:1;
    unsigned int reserved_9:1;
    unsigned int DFPAGE:1;
    unsigned int OPER:1;
    unsigned int SQER:1;
    unsigned int reserved_13:12;
    unsigned int PVER:1;
    unsigned int EVER:1;
    unsigned int SPND:1;
    unsigned int reserved_28:4;
} Ifx_FLASH_HSMFSR_Bits;


typedef struct _Ifx_FLASH_HSMMARD_Bits
{
    unsigned int reserved_0:1;
    unsigned int SELD1:1;
    unsigned int reserved_2:1;
    unsigned int SPND:1;
    unsigned int SPNDERR:1;
    unsigned int reserved_5:27;
} Ifx_FLASH_HSMMARD_Bits;


typedef struct _Ifx_FLASH_HSMRRAD_Bits
{
    unsigned int reserved_0:3;
    unsigned int ADD:29;
} Ifx_FLASH_HSMRRAD_Bits;


typedef struct _Ifx_FLASH_HSMRRCT_Bits
{
    unsigned int STRT:1;
    unsigned int STP:1;
    unsigned int BUSY:1;
    unsigned int DONE:1;
    unsigned int ERR:1;
    unsigned int reserved_5:3;
    unsigned int EOBM:1;
    unsigned int reserved_9:7;
    unsigned int CNT:16;
} Ifx_FLASH_HSMRRCT_Bits;


typedef struct _Ifx_FLASH_HSMRRD0_Bits
{
    unsigned int DATA:32;
} Ifx_FLASH_HSMRRD0_Bits;


typedef struct _Ifx_FLASH_HSMRRD1_Bits
{
    unsigned int DATA:32;
} Ifx_FLASH_HSMRRD1_Bits;


typedef struct _Ifx_FLASH_ID_Bits
{
    unsigned int MOD_REV:8;
    unsigned int MOD_TYPE:8;
    unsigned int MODNUMBER:16;
} Ifx_FLASH_ID_Bits;


typedef struct _Ifx_FLASH_MARD_Bits
{
    unsigned int HMARGIN:1;
    unsigned int SELD0:1;
    unsigned int reserved_2:1;
    unsigned int SPND:1;
    unsigned int SPNDERR:1;
    unsigned int reserved_5:10;
    unsigned int TRAPDIS:1;
    unsigned int reserved_16:16;
} Ifx_FLASH_MARD_Bits;


typedef struct _Ifx_FLASH_MARP_Bits
{
    unsigned int SELP0:1;
    unsigned int SELP1:1;
    unsigned int RES2:1;
    unsigned int RES3:1;
    unsigned int reserved_4:11;
    unsigned int TRAPDIS:1;
    unsigned int reserved_16:16;
} Ifx_FLASH_MARP_Bits;


typedef struct _Ifx_FLASH_PROCOND_Bits
{
    unsigned int L:1;
    unsigned int NSAFECC:1;
    unsigned int RAMIN:2;
    unsigned int RAMINSEL:4;
    unsigned int OSCCFG:1;
    unsigned int MODE:2;
    unsigned int APREN:1;
    unsigned int CAP0EN:1;
    unsigned int CAP1EN:1;
    unsigned int CAP2EN:1;
    unsigned int CAP3EN:1;
    unsigned int ESR0CNT:12;
    unsigned int RES29:2;
    unsigned int RES30:1;
    unsigned int RPRO:1;
} Ifx_FLASH_PROCOND_Bits;


typedef struct _Ifx_FLASH_PROCONDBG_Bits
{
    unsigned int OCDSDIS:1;
    unsigned int DBGIFLCK:1;
    unsigned int EDM:2;
    unsigned int reserved_4:28;
} Ifx_FLASH_PROCONDBG_Bits;


typedef struct _Ifx_FLASH_PROCONHSM_Bits
{
    unsigned int HSMDBGDIS:1;
    unsigned int DBGIFLCK:1;
    unsigned int TSTIFLCK:1;
    unsigned int HSMTSTDIS:1;
    unsigned int RES15:12;
    unsigned int reserved_16:16;
} Ifx_FLASH_PROCONHSM_Bits;


typedef struct _Ifx_FLASH_PROCONHSMCOTP_Bits
{
    unsigned int HSMBOOTEN:1;
    unsigned int SSWWAIT:1;
    unsigned int HSMDX:1;
    unsigned int HSM6X:1;
    unsigned int HSM16X:1;
    unsigned int HSM17X:1;
    unsigned int S6ROM:1;
    unsigned int HSMENPINS:2;
    unsigned int HSMENRES:2;
    unsigned int DESTDBG:2;
    unsigned int BLKFLAN:1;
    unsigned int reserved_14:2;
    unsigned int S16ROM:1;
    unsigned int S17ROM:1;
    unsigned int reserved_18:14;
} Ifx_FLASH_PROCONHSMCOTP_Bits;


typedef struct _Ifx_FLASH_PROCONOTP_Bits
{
    unsigned int S0ROM:1;
    unsigned int S1ROM:1;
    unsigned int S2ROM:1;
    unsigned int S3ROM:1;
    unsigned int S4ROM:1;
    unsigned int S5ROM:1;
    unsigned int S6ROM:1;
    unsigned int S7ROM:1;
    unsigned int S8ROM:1;
    unsigned int S9ROM:1;
    unsigned int S10ROM:1;
    unsigned int S11ROM:1;
    unsigned int S12ROM:1;
    unsigned int S13ROM:1;
    unsigned int S14ROM:1;
    unsigned int S15ROM:1;
    unsigned int S16ROM:1;
    unsigned int S17ROM:1;
    unsigned int S18ROM:1;
    unsigned int S19ROM:1;
    unsigned int S20ROM:1;
    unsigned int S21ROM:1;
    unsigned int S22ROM:1;
    unsigned int S23ROM:1;
    unsigned int S24ROM:1;
    unsigned int S25ROM:1;
    unsigned int S26ROM:1;
    unsigned int reserved_27:2;
    unsigned int BML:2;
    unsigned int TP:1;
} Ifx_FLASH_PROCONOTP_Bits;


typedef struct _Ifx_FLASH_PROCONP_Bits
{
    unsigned int S0L:1;
    unsigned int S1L:1;
    unsigned int S2L:1;
    unsigned int S3L:1;
    unsigned int S4L:1;
    unsigned int S5L:1;
    unsigned int S6L:1;
    unsigned int S7L:1;
    unsigned int S8L:1;
    unsigned int S9L:1;
    unsigned int S10L:1;
    unsigned int S11L:1;
    unsigned int S12L:1;
    unsigned int S13L:1;
    unsigned int S14L:1;
    unsigned int S15L:1;
    unsigned int S16L:1;
    unsigned int S17L:1;
    unsigned int S18L:1;
    unsigned int S19L:1;
    unsigned int S20L:1;
    unsigned int S21L:1;
    unsigned int S22L:1;
    unsigned int S23L:1;
    unsigned int S24L:1;
    unsigned int S25L:1;
    unsigned int S26L:1;
    unsigned int reserved_27:4;
    unsigned int RPRO:1;
} Ifx_FLASH_PROCONP_Bits;


typedef struct _Ifx_FLASH_PROCONWOP_Bits
{
    unsigned int S0WOP:1;
    unsigned int S1WOP:1;
    unsigned int S2WOP:1;
    unsigned int S3WOP:1;
    unsigned int S4WOP:1;
    unsigned int S5WOP:1;
    unsigned int S6WOP:1;
    unsigned int S7WOP:1;
    unsigned int S8WOP:1;
    unsigned int S9WOP:1;
    unsigned int S10WOP:1;
    unsigned int S11WOP:1;
    unsigned int S12WOP:1;
    unsigned int S13WOP:1;
    unsigned int S14WOP:1;
    unsigned int S15WOP:1;
    unsigned int S16WOP:1;
    unsigned int S17WOP:1;
    unsigned int S18WOP:1;
    unsigned int S19WOP:1;
    unsigned int S20WOP:1;
    unsigned int S21WOP:1;
    unsigned int S22WOP:1;
    unsigned int S23WOP:1;
    unsigned int S24WOP:1;
    unsigned int S25WOP:1;
    unsigned int S26WOP:1;
    unsigned int reserved_27:4;
    unsigned int DATM:1;
} Ifx_FLASH_PROCONWOP_Bits;


typedef struct _Ifx_FLASH_RDB_CFG0_Bits
{
    unsigned int TAG:6;
    unsigned int reserved_6:26;
} Ifx_FLASH_RDB_CFG0_Bits;


typedef struct _Ifx_FLASH_RDB_CFG1_Bits
{
    unsigned int TAG:6;
    unsigned int reserved_6:26;
} Ifx_FLASH_RDB_CFG1_Bits;


typedef struct _Ifx_FLASH_RDB_CFG2_Bits
{
    unsigned int TAG:6;
    unsigned int reserved_6:26;
} Ifx_FLASH_RDB_CFG2_Bits;


typedef struct _Ifx_FLASH_RRAD_Bits
{
    unsigned int reserved_0:3;
    unsigned int ADD:29;
} Ifx_FLASH_RRAD_Bits;


typedef struct _Ifx_FLASH_RRCT_Bits
{
    unsigned int STRT:1;
    unsigned int STP:1;
    unsigned int BUSY:1;
    unsigned int DONE:1;
    unsigned int ERR:1;
    unsigned int reserved_5:3;
    unsigned int EOBM:1;
    unsigned int reserved_9:7;
    unsigned int CNT:16;
} Ifx_FLASH_RRCT_Bits;


typedef struct _Ifx_FLASH_RRD0_Bits
{
    unsigned int DATA:32;
} Ifx_FLASH_RRD0_Bits;


typedef struct _Ifx_FLASH_RRD1_Bits
{
    unsigned int DATA:32;
} Ifx_FLASH_RRD1_Bits;


typedef struct _Ifx_FLASH_UBAB_CFG_Bits
{
    unsigned int SEL:6;
    unsigned int reserved_6:2;
    unsigned int CLR:1;
    unsigned int DIS:1;
    unsigned int reserved_10:22;
} Ifx_FLASH_UBAB_CFG_Bits;


typedef struct _Ifx_FLASH_UBAB_STAT_Bits
{
    unsigned int VLD0:1;
    unsigned int reserved_1:31;
} Ifx_FLASH_UBAB_STAT_Bits;


typedef struct _Ifx_FLASH_UBAB_TOP_Bits
{
    unsigned int reserved_0:5;
    unsigned int ADDR:19;
    unsigned int ERR:6;
    unsigned int VLD:1;
    unsigned int CLR:1;
} Ifx_FLASH_UBAB_TOP_Bits;







typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_ACCEN0_Bits B;
} Ifx_FLASH_ACCEN0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_ACCEN1_Bits B;
} Ifx_FLASH_ACCEN1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_CBAB_CFG_Bits B;
} Ifx_FLASH_CBAB_CFG;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_CBAB_STAT_Bits B;
} Ifx_FLASH_CBAB_STAT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_CBAB_TOP_Bits B;
} Ifx_FLASH_CBAB_TOP;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_COMM0_Bits B;
} Ifx_FLASH_COMM0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_COMM1_Bits B;
} Ifx_FLASH_COMM1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_COMM2_Bits B;
} Ifx_FLASH_COMM2;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_ECCRD_Bits B;
} Ifx_FLASH_ECCRD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_ECCRP_Bits B;
} Ifx_FLASH_ECCRP;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_ECCW_Bits B;
} Ifx_FLASH_ECCW;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_FCON_Bits B;
} Ifx_FLASH_FCON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_FPRO_Bits B;
} Ifx_FLASH_FPRO;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_FSR_Bits B;
} Ifx_FLASH_FSR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_HSMFCON_Bits B;
} Ifx_FLASH_HSMFCON;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_HSMFSR_Bits B;
} Ifx_FLASH_HSMFSR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_HSMMARD_Bits B;
} Ifx_FLASH_HSMMARD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_HSMRRAD_Bits B;
} Ifx_FLASH_HSMRRAD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_HSMRRCT_Bits B;
} Ifx_FLASH_HSMRRCT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_HSMRRD0_Bits B;
} Ifx_FLASH_HSMRRD0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_HSMRRD1_Bits B;
} Ifx_FLASH_HSMRRD1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_ID_Bits B;
} Ifx_FLASH_ID;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_MARD_Bits B;
} Ifx_FLASH_MARD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_MARP_Bits B;
} Ifx_FLASH_MARP;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_PROCOND_Bits B;
} Ifx_FLASH_PROCOND;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_PROCONDBG_Bits B;
} Ifx_FLASH_PROCONDBG;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_PROCONHSM_Bits B;
} Ifx_FLASH_PROCONHSM;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_PROCONHSMCOTP_Bits B;
} Ifx_FLASH_PROCONHSMCOTP;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_PROCONOTP_Bits B;
} Ifx_FLASH_PROCONOTP;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_PROCONP_Bits B;
} Ifx_FLASH_PROCONP;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_PROCONWOP_Bits B;
} Ifx_FLASH_PROCONWOP;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_RDB_CFG0_Bits B;
} Ifx_FLASH_RDB_CFG0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_RDB_CFG1_Bits B;
} Ifx_FLASH_RDB_CFG1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_RDB_CFG2_Bits B;
} Ifx_FLASH_RDB_CFG2;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_RRAD_Bits B;
} Ifx_FLASH_RRAD;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_RRCT_Bits B;
} Ifx_FLASH_RRCT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_RRD0_Bits B;
} Ifx_FLASH_RRD0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_RRD1_Bits B;
} Ifx_FLASH_RRD1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_UBAB_CFG_Bits B;
} Ifx_FLASH_UBAB_CFG;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_UBAB_STAT_Bits B;
} Ifx_FLASH_UBAB_STAT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_FLASH_UBAB_TOP_Bits B;
} Ifx_FLASH_UBAB_TOP;
# 949 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxFlash_regdef.h" 3
typedef volatile struct _Ifx_FLASH_CBAB
{
    Ifx_FLASH_CBAB_CFG CFG;
    Ifx_FLASH_CBAB_STAT STAT;
    Ifx_FLASH_CBAB_TOP TOP;
} Ifx_FLASH_CBAB;


typedef volatile struct _Ifx_FLASH_RDB
{
    Ifx_FLASH_RDB_CFG0 CFG0;
    Ifx_FLASH_RDB_CFG1 CFG1;
    Ifx_FLASH_RDB_CFG2 CFG2;
} Ifx_FLASH_RDB;


typedef volatile struct _Ifx_FLASH_UBAB
{
    Ifx_FLASH_UBAB_CFG CFG;
    Ifx_FLASH_UBAB_STAT STAT;
    Ifx_FLASH_UBAB_TOP TOP;
} Ifx_FLASH_UBAB;
# 983 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxFlash_regdef.h" 3
typedef volatile struct _Ifx_FLASH
{
    Ifx_FLASH_COMM0 COMM0;
    Ifx_FLASH_COMM1 COMM1;
    Ifx_FLASH_COMM2 COMM2;
    unsigned char reserved_C[4092];
    Ifx_FLASH_ID ID;
    unsigned char reserved_100C[4];
    Ifx_FLASH_FSR FSR;
    Ifx_FLASH_FCON FCON;
    unsigned char reserved_1018[4];
    Ifx_FLASH_FPRO FPRO;
    Ifx_FLASH_PROCONP PROCONP[2];
    unsigned char reserved_1028[8];
    Ifx_FLASH_PROCOND PROCOND;
    Ifx_FLASH_PROCONHSMCOTP PROCONHSMCOTP;
    Ifx_FLASH_PROCONOTP PROCONOTP[2];
    unsigned char reserved_1040[8];
    Ifx_FLASH_PROCONWOP PROCONWOP[2];
    unsigned char reserved_1050[8];
    Ifx_FLASH_PROCONDBG PROCONDBG;
    Ifx_FLASH_PROCONHSM PROCONHSM;
    Ifx_FLASH_RDB RDBCFG[2];
    unsigned char reserved_1078[24];
    Ifx_FLASH_ECCW ECCW;
    Ifx_FLASH_ECCRP ECCRP[2];
    unsigned char reserved_109C[8];
    Ifx_FLASH_ECCRD ECCRD;
    Ifx_FLASH_MARP MARP;
    Ifx_FLASH_MARD MARD;
    unsigned char reserved_10B0[4];
    Ifx_FLASH_CBAB CBAB[2];
    unsigned char reserved_10CC[24];
    Ifx_FLASH_UBAB UBAB[2];
    unsigned char reserved_10FC[68];
    Ifx_FLASH_RRCT RRCT;
    Ifx_FLASH_RRD0 RRD0;
    Ifx_FLASH_RRD1 RRD1;
    Ifx_FLASH_RRAD RRAD;
    unsigned char reserved_1150[176];
    Ifx_FLASH_HSMFSR HSMFSR;
    Ifx_FLASH_HSMFCON HSMFCON;
    Ifx_FLASH_HSMMARD HSMMARD;
    Ifx_FLASH_HSMRRCT HSMRRCT;
    Ifx_FLASH_HSMRRD0 HSMRRD0;
    Ifx_FLASH_HSMRRD1 HSMRRD1;
    Ifx_FLASH_HSMRRAD HSMRRAD;
    unsigned char reserved_121C[476];
    Ifx_FLASH_ACCEN1 ACCEN1;
    Ifx_FLASH_ACCEN0 ACCEN0;
} Ifx_FLASH;
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxFlash_reg.h" 2 3





#define MODULE_FLASH0 (*(Ifx_FLASH*)0xF8001000u)







#define FLASH0_ACCEN0 (*(volatile Ifx_FLASH_ACCEN0*)0xF80023FCu)


#define FLASH0_ACCEN1 (*(volatile Ifx_FLASH_ACCEN1*)0xF80023F8u)


#define FLASH0_CBAB0_CFG (*(volatile Ifx_FLASH_CBAB_CFG*)0xF80020B4u)




#define FLASH0_CBABCFG0 (FLASH0_CBAB0_CFG)


#define FLASH0_CBAB0_STAT (*(volatile Ifx_FLASH_CBAB_STAT*)0xF80020B8u)




#define FLASH0_CBABSTAT0 (FLASH0_CBAB0_STAT)


#define FLASH0_CBAB0_TOP (*(volatile Ifx_FLASH_CBAB_TOP*)0xF80020BCu)




#define FLASH0_CBABTOP0 (FLASH0_CBAB0_TOP)


#define FLASH0_CBAB1_CFG (*(volatile Ifx_FLASH_CBAB_CFG*)0xF80020C0u)




#define FLASH0_CBABCFG1 (FLASH0_CBAB1_CFG)


#define FLASH0_CBAB1_STAT (*(volatile Ifx_FLASH_CBAB_STAT*)0xF80020C4u)




#define FLASH0_CBABSTAT1 (FLASH0_CBAB1_STAT)


#define FLASH0_CBAB1_TOP (*(volatile Ifx_FLASH_CBAB_TOP*)0xF80020C8u)




#define FLASH0_CBABTOP1 (FLASH0_CBAB1_TOP)


#define FLASH0_COMM0 (*(volatile Ifx_FLASH_COMM0*)0xF8001000u)


#define FLASH0_COMM1 (*(volatile Ifx_FLASH_COMM1*)0xF8001004u)


#define FLASH0_COMM2 (*(volatile Ifx_FLASH_COMM2*)0xF8001008u)


#define FLASH0_ECCRD (*(volatile Ifx_FLASH_ECCRD*)0xF80020A4u)


#define FLASH0_ECCRP0 (*(volatile Ifx_FLASH_ECCRP*)0xF8002094u)


#define FLASH0_ECCRP1 (*(volatile Ifx_FLASH_ECCRP*)0xF8002098u)


#define FLASH0_ECCW (*(volatile Ifx_FLASH_ECCW*)0xF8002090u)


#define FLASH0_FCON (*(volatile Ifx_FLASH_FCON*)0xF8002014u)


#define FLASH0_FPRO (*(volatile Ifx_FLASH_FPRO*)0xF800201Cu)


#define FLASH0_FSR (*(volatile Ifx_FLASH_FSR*)0xF8002010u)


#define FLASH0_HSMFCON (*(volatile Ifx_FLASH_HSMFCON*)0xF8002204u)


#define FLASH0_HSMFSR (*(volatile Ifx_FLASH_HSMFSR*)0xF8002200u)


#define FLASH0_HSMMARD (*(volatile Ifx_FLASH_HSMMARD*)0xF8002208u)


#define FLASH0_HSMRRAD (*(volatile Ifx_FLASH_HSMRRAD*)0xF8002218u)


#define FLASH0_HSMRRCT (*(volatile Ifx_FLASH_HSMRRCT*)0xF800220Cu)


#define FLASH0_HSMRRD0 (*(volatile Ifx_FLASH_HSMRRD0*)0xF8002210u)


#define FLASH0_HSMRRD1 (*(volatile Ifx_FLASH_HSMRRD1*)0xF8002214u)


#define FLASH0_ID (*(volatile Ifx_FLASH_ID*)0xF8002008u)


#define FLASH0_MARD (*(volatile Ifx_FLASH_MARD*)0xF80020ACu)


#define FLASH0_MARP (*(volatile Ifx_FLASH_MARP*)0xF80020A8u)


#define FLASH0_PROCOND (*(volatile Ifx_FLASH_PROCOND*)0xF8002030u)


#define FLASH0_PROCONDBG (*(volatile Ifx_FLASH_PROCONDBG*)0xF8002058u)


#define FLASH0_PROCONHSM (*(volatile Ifx_FLASH_PROCONHSM*)0xF800205Cu)


#define FLASH0_PROCONHSMCOTP (*(volatile Ifx_FLASH_PROCONHSMCOTP*)0xF8002034u)


#define FLASH0_PROCONOTP0 (*(volatile Ifx_FLASH_PROCONOTP*)0xF8002038u)


#define FLASH0_PROCONOTP1 (*(volatile Ifx_FLASH_PROCONOTP*)0xF800203Cu)


#define FLASH0_PROCONP0 (*(volatile Ifx_FLASH_PROCONP*)0xF8002020u)


#define FLASH0_PROCONP1 (*(volatile Ifx_FLASH_PROCONP*)0xF8002024u)


#define FLASH0_PROCONWOP0 (*(volatile Ifx_FLASH_PROCONWOP*)0xF8002048u)


#define FLASH0_PROCONWOP1 (*(volatile Ifx_FLASH_PROCONWOP*)0xF800204Cu)


#define FLASH0_RDBCFG0_CFG0 (*(volatile Ifx_FLASH_RDB_CFG0*)0xF8002060u)




#define FLASH0_RDBCFG00 (FLASH0_RDBCFG0_CFG0)


#define FLASH0_RDBCFG0_CFG1 (*(volatile Ifx_FLASH_RDB_CFG1*)0xF8002064u)




#define FLASH0_RDBCFG01 (FLASH0_RDBCFG0_CFG1)


#define FLASH0_RDBCFG0_CFG2 (*(volatile Ifx_FLASH_RDB_CFG2*)0xF8002068u)




#define FLASH0_RDBCFG02 (FLASH0_RDBCFG0_CFG2)


#define FLASH0_RDBCFG1_CFG0 (*(volatile Ifx_FLASH_RDB_CFG0*)0xF800206Cu)




#define FLASH0_RDBCFG10 (FLASH0_RDBCFG1_CFG0)


#define FLASH0_RDBCFG1_CFG1 (*(volatile Ifx_FLASH_RDB_CFG1*)0xF8002070u)




#define FLASH0_RDBCFG11 (FLASH0_RDBCFG1_CFG1)


#define FLASH0_RDBCFG1_CFG2 (*(volatile Ifx_FLASH_RDB_CFG2*)0xF8002074u)




#define FLASH0_RDBCFG12 (FLASH0_RDBCFG1_CFG2)


#define FLASH0_RRAD (*(volatile Ifx_FLASH_RRAD*)0xF800214Cu)


#define FLASH0_RRCT (*(volatile Ifx_FLASH_RRCT*)0xF8002140u)


#define FLASH0_RRD0 (*(volatile Ifx_FLASH_RRD0*)0xF8002144u)


#define FLASH0_RRD1 (*(volatile Ifx_FLASH_RRD1*)0xF8002148u)


#define FLASH0_UBAB0_CFG (*(volatile Ifx_FLASH_UBAB_CFG*)0xF80020E4u)




#define FLASH0_UBABCFG0 (FLASH0_UBAB0_CFG)


#define FLASH0_UBAB0_STAT (*(volatile Ifx_FLASH_UBAB_STAT*)0xF80020E8u)




#define FLASH0_UBABSTAT0 (FLASH0_UBAB0_STAT)


#define FLASH0_UBAB0_TOP (*(volatile Ifx_FLASH_UBAB_TOP*)0xF80020ECu)




#define FLASH0_UBABTOP0 (FLASH0_UBAB0_TOP)


#define FLASH0_UBAB1_CFG (*(volatile Ifx_FLASH_UBAB_CFG*)0xF80020F0u)




#define FLASH0_UBABCFG1 (FLASH0_UBAB1_CFG)


#define FLASH0_UBAB1_STAT (*(volatile Ifx_FLASH_UBAB_STAT*)0xF80020F4u)




#define FLASH0_UBABSTAT1 (FLASH0_UBAB1_STAT)


#define FLASH0_UBAB1_TOP (*(volatile Ifx_FLASH_UBAB_TOP*)0xF80020F8u)




#define FLASH0_UBABTOP1 (FLASH0_UBAB1_TOP)
# 130 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuccu.h" 2 3
# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_pinmap.h" 1 3
# 46 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_pinmap.h" 3
#define IFXSCU_PINMAP_H 

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_reg.h" 1 3
# 49 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_pinmap.h" 2 3

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport.h" 1 3
# 54 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport.h" 3
#define IFXPORT_H 1





# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport_cfg.h" 1 3
# 51 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport_cfg.h" 3
#define IFXPORT_CFG_H 1






# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport_reg.h" 1 3
# 82 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport_reg.h" 3
#define IFXPORT_REG_H 1

# 1 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxPort_regdef.h" 1 3
# 37 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxPort_regdef.h" 3
#define IFXPORT_REGDEF_H 1







typedef struct _Ifx_P_ACCEN0_Bits
{
    unsigned int EN0:1;
    unsigned int EN1:1;
    unsigned int EN2:1;
    unsigned int EN3:1;
    unsigned int EN4:1;
    unsigned int EN5:1;
    unsigned int EN6:1;
    unsigned int EN7:1;
    unsigned int EN8:1;
    unsigned int EN9:1;
    unsigned int EN10:1;
    unsigned int EN11:1;
    unsigned int EN12:1;
    unsigned int EN13:1;
    unsigned int EN14:1;
    unsigned int EN15:1;
    unsigned int EN16:1;
    unsigned int EN17:1;
    unsigned int EN18:1;
    unsigned int EN19:1;
    unsigned int EN20:1;
    unsigned int EN21:1;
    unsigned int EN22:1;
    unsigned int EN23:1;
    unsigned int EN24:1;
    unsigned int EN25:1;
    unsigned int EN26:1;
    unsigned int EN27:1;
    unsigned int EN28:1;
    unsigned int EN29:1;
    unsigned int EN30:1;
    unsigned int EN31:1;
} Ifx_P_ACCEN0_Bits;


typedef struct _Ifx_P_ACCEN1_Bits
{
    unsigned int reserved_0:32;
} Ifx_P_ACCEN1_Bits;


typedef struct _Ifx_P_ESR_Bits
{
    unsigned int EN0:1;
    unsigned int EN1:1;
    unsigned int EN2:1;
    unsigned int EN3:1;
    unsigned int EN4:1;
    unsigned int EN5:1;
    unsigned int EN6:1;
    unsigned int EN7:1;
    unsigned int EN8:1;
    unsigned int EN9:1;
    unsigned int EN10:1;
    unsigned int EN11:1;
    unsigned int EN12:1;
    unsigned int EN13:1;
    unsigned int EN14:1;
    unsigned int EN15:1;
    unsigned int reserved_16:16;
} Ifx_P_ESR_Bits;


typedef struct _Ifx_P_ID_Bits
{
    unsigned int MODREV:8;
    unsigned int MODTYPE:8;
    unsigned int MODNUMBER:16;
} Ifx_P_ID_Bits;


typedef struct _Ifx_P_IN_Bits
{
    unsigned int P0:1;
    unsigned int P1:1;
    unsigned int P2:1;
    unsigned int P3:1;
    unsigned int P4:1;
    unsigned int P5:1;
    unsigned int P6:1;
    unsigned int P7:1;
    unsigned int P8:1;
    unsigned int P9:1;
    unsigned int P10:1;
    unsigned int P11:1;
    unsigned int P12:1;
    unsigned int P13:1;
    unsigned int P14:1;
    unsigned int P15:1;
    unsigned int reserved_16:16;
} Ifx_P_IN_Bits;


typedef struct _Ifx_P_IOCR0_Bits
{
    unsigned int reserved_0:3;
    unsigned int PC0:5;
    unsigned int reserved_8:3;
    unsigned int PC1:5;
    unsigned int reserved_16:3;
    unsigned int PC2:5;
    unsigned int reserved_24:3;
    unsigned int PC3:5;
} Ifx_P_IOCR0_Bits;


typedef struct _Ifx_P_IOCR12_Bits
{
    unsigned int reserved_0:3;
    unsigned int PC12:5;
    unsigned int reserved_8:3;
    unsigned int PC13:5;
    unsigned int reserved_16:3;
    unsigned int PC14:5;
    unsigned int reserved_24:3;
    unsigned int PC15:5;
} Ifx_P_IOCR12_Bits;


typedef struct _Ifx_P_IOCR4_Bits
{
    unsigned int reserved_0:3;
    unsigned int PC4:5;
    unsigned int reserved_8:3;
    unsigned int PC5:5;
    unsigned int reserved_16:3;
    unsigned int PC6:5;
    unsigned int reserved_24:3;
    unsigned int PC7:5;
} Ifx_P_IOCR4_Bits;


typedef struct _Ifx_P_IOCR8_Bits
{
    unsigned int reserved_0:3;
    unsigned int PC8:5;
    unsigned int reserved_8:3;
    unsigned int PC9:5;
    unsigned int reserved_16:3;
    unsigned int PC10:5;
    unsigned int reserved_24:3;
    unsigned int PC11:5;
} Ifx_P_IOCR8_Bits;


typedef struct _Ifx_P_LPCR0_Bits
{
    unsigned int reserved_0:1;
    unsigned int PS1:1;
    unsigned int reserved_2:30;
} Ifx_P_LPCR0_Bits;


typedef struct _Ifx_P_LPCR1_Bits
{
    unsigned int reserved_0:1;
    unsigned int PS1:1;
    unsigned int reserved_2:30;
} Ifx_P_LPCR1_Bits;


typedef struct _Ifx_P_LPCR1_P21_Bits
{
    unsigned int RDIS_CTRL:1;
    unsigned int RX_DIS:1;
    unsigned int TERM:1;
    unsigned int LRXTERM:5;
    unsigned int reserved_8:24;
} Ifx_P_LPCR1_P21_Bits;


typedef struct _Ifx_P_LPCR2_Bits
{
    unsigned int reserved_0:8;
    unsigned int LVDSR:1;
    unsigned int LVDSRL:1;
    unsigned int reserved_10:2;
    unsigned int TDIS_CTRL:1;
    unsigned int TX_DIS:1;
    unsigned int TX_PD:1;
    unsigned int TX_PWDPD:1;
    unsigned int reserved_16:16;
} Ifx_P_LPCR2_Bits;


typedef struct _Ifx_P_OMCR0_Bits
{
    unsigned int reserved_0:16;
    unsigned int PCL0:1;
    unsigned int PCL1:1;
    unsigned int PCL2:1;
    unsigned int PCL3:1;
    unsigned int reserved_20:12;
} Ifx_P_OMCR0_Bits;


typedef struct _Ifx_P_OMCR12_Bits
{
    unsigned int reserved_0:28;
    unsigned int PCL12:1;
    unsigned int PCL13:1;
    unsigned int PCL14:1;
    unsigned int PCL15:1;
} Ifx_P_OMCR12_Bits;


typedef struct _Ifx_P_OMCR4_Bits
{
    unsigned int reserved_0:20;
    unsigned int PCL4:1;
    unsigned int PCL5:1;
    unsigned int PCL6:1;
    unsigned int PCL7:1;
    unsigned int reserved_24:8;
} Ifx_P_OMCR4_Bits;


typedef struct _Ifx_P_OMCR8_Bits
{
    unsigned int reserved_0:24;
    unsigned int PCL8:1;
    unsigned int PCL9:1;
    unsigned int PCL10:1;
    unsigned int PCL11:1;
    unsigned int reserved_28:4;
} Ifx_P_OMCR8_Bits;


typedef struct _Ifx_P_OMCR_Bits
{
    unsigned int reserved_0:16;
    unsigned int PCL0:1;
    unsigned int PCL1:1;
    unsigned int PCL2:1;
    unsigned int PCL3:1;
    unsigned int PCL4:1;
    unsigned int PCL5:1;
    unsigned int PCL6:1;
    unsigned int PCL7:1;
    unsigned int PCL8:1;
    unsigned int PCL9:1;
    unsigned int PCL10:1;
    unsigned int PCL11:1;
    unsigned int PCL12:1;
    unsigned int PCL13:1;
    unsigned int PCL14:1;
    unsigned int PCL15:1;
} Ifx_P_OMCR_Bits;


typedef struct _Ifx_P_OMR_Bits
{
    unsigned int PS0:1;
    unsigned int PS1:1;
    unsigned int PS2:1;
    unsigned int PS3:1;
    unsigned int PS4:1;
    unsigned int PS5:1;
    unsigned int PS6:1;
    unsigned int PS7:1;
    unsigned int PS8:1;
    unsigned int PS9:1;
    unsigned int PS10:1;
    unsigned int PS11:1;
    unsigned int PS12:1;
    unsigned int PS13:1;
    unsigned int PS14:1;
    unsigned int PS15:1;
    unsigned int PCL0:1;
    unsigned int PCL1:1;
    unsigned int PCL2:1;
    unsigned int PCL3:1;
    unsigned int PCL4:1;
    unsigned int PCL5:1;
    unsigned int PCL6:1;
    unsigned int PCL7:1;
    unsigned int PCL8:1;
    unsigned int PCL9:1;
    unsigned int PCL10:1;
    unsigned int PCL11:1;
    unsigned int PCL12:1;
    unsigned int PCL13:1;
    unsigned int PCL14:1;
    unsigned int PCL15:1;
} Ifx_P_OMR_Bits;


typedef struct _Ifx_P_OMSR0_Bits
{
    unsigned int PS0:1;
    unsigned int PS1:1;
    unsigned int PS2:1;
    unsigned int PS3:1;
    unsigned int reserved_4:28;
} Ifx_P_OMSR0_Bits;


typedef struct _Ifx_P_OMSR12_Bits
{
    unsigned int reserved_0:12;
    unsigned int PS12:1;
    unsigned int PS13:1;
    unsigned int PS14:1;
    unsigned int PS15:1;
    unsigned int reserved_16:16;
} Ifx_P_OMSR12_Bits;


typedef struct _Ifx_P_OMSR4_Bits
{
    unsigned int reserved_0:4;
    unsigned int PS4:1;
    unsigned int PS5:1;
    unsigned int PS6:1;
    unsigned int PS7:1;
    unsigned int reserved_8:24;
} Ifx_P_OMSR4_Bits;


typedef struct _Ifx_P_OMSR8_Bits
{
    unsigned int reserved_0:8;
    unsigned int PS8:1;
    unsigned int PS9:1;
    unsigned int PS10:1;
    unsigned int PS11:1;
    unsigned int reserved_12:20;
} Ifx_P_OMSR8_Bits;


typedef struct _Ifx_P_OMSR_Bits
{
    unsigned int PS0:1;
    unsigned int PS1:1;
    unsigned int PS2:1;
    unsigned int PS3:1;
    unsigned int PS4:1;
    unsigned int PS5:1;
    unsigned int PS6:1;
    unsigned int PS7:1;
    unsigned int PS8:1;
    unsigned int PS9:1;
    unsigned int PS10:1;
    unsigned int PS11:1;
    unsigned int PS12:1;
    unsigned int PS13:1;
    unsigned int PS14:1;
    unsigned int PS15:1;
    unsigned int reserved_16:16;
} Ifx_P_OMSR_Bits;


typedef struct _Ifx_P_OUT_Bits
{
    unsigned int P0:1;
    unsigned int P1:1;
    unsigned int P2:1;
    unsigned int P3:1;
    unsigned int P4:1;
    unsigned int P5:1;
    unsigned int P6:1;
    unsigned int P7:1;
    unsigned int P8:1;
    unsigned int P9:1;
    unsigned int P10:1;
    unsigned int P11:1;
    unsigned int P12:1;
    unsigned int P13:1;
    unsigned int P14:1;
    unsigned int P15:1;
    unsigned int reserved_16:16;
} Ifx_P_OUT_Bits;


typedef struct _Ifx_P_PCSR_Bits
{
    unsigned int SEL0:1;
    unsigned int SEL1:1;
    unsigned int SEL2:1;
    unsigned int SEL3:1;
    unsigned int SEL4:1;
    unsigned int SEL5:1;
    unsigned int SEL6:1;
    unsigned int reserved_7:3;
    unsigned int SEL10:1;
    unsigned int SEL11:1;
    unsigned int reserved_12:19;
    unsigned int LCK:1;
} Ifx_P_PCSR_Bits;


typedef struct _Ifx_P_PDISC_Bits
{
    unsigned int PDIS0:1;
    unsigned int PDIS1:1;
    unsigned int PDIS2:1;
    unsigned int PDIS3:1;
    unsigned int PDIS4:1;
    unsigned int PDIS5:1;
    unsigned int PDIS6:1;
    unsigned int PDIS7:1;
    unsigned int PDIS8:1;
    unsigned int PDIS9:1;
    unsigned int PDIS10:1;
    unsigned int PDIS11:1;
    unsigned int PDIS12:1;
    unsigned int PDIS13:1;
    unsigned int PDIS14:1;
    unsigned int PDIS15:1;
    unsigned int reserved_16:16;
} Ifx_P_PDISC_Bits;


typedef struct _Ifx_P_PDR0_Bits
{
    unsigned int PD0:3;
    unsigned int PL0:1;
    unsigned int PD1:3;
    unsigned int PL1:1;
    unsigned int PD2:3;
    unsigned int PL2:1;
    unsigned int PD3:3;
    unsigned int PL3:1;
    unsigned int PD4:3;
    unsigned int PL4:1;
    unsigned int PD5:3;
    unsigned int PL5:1;
    unsigned int PD6:3;
    unsigned int PL6:1;
    unsigned int PD7:3;
    unsigned int PL7:1;
} Ifx_P_PDR0_Bits;


typedef struct _Ifx_P_PDR1_Bits
{
    unsigned int PD8:3;
    unsigned int PL8:1;
    unsigned int PD9:3;
    unsigned int PL9:1;
    unsigned int PD10:3;
    unsigned int PL10:1;
    unsigned int PD11:3;
    unsigned int PL11:1;
    unsigned int PD12:3;
    unsigned int PL12:1;
    unsigned int PD13:3;
    unsigned int PL13:1;
    unsigned int PD14:3;
    unsigned int PL14:1;
    unsigned int PD15:3;
    unsigned int PL15:1;
} Ifx_P_PDR1_Bits;







typedef union
{
    unsigned int U;
    signed int I;
    Ifx_P_ACCEN0_Bits B;
} Ifx_P_ACCEN0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_P_ACCEN1_Bits B;
} Ifx_P_ACCEN1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_P_ESR_Bits B;
} Ifx_P_ESR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_P_ID_Bits B;
} Ifx_P_ID;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_P_IN_Bits B;
} Ifx_P_IN;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_P_IOCR0_Bits B;
} Ifx_P_IOCR0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_P_IOCR12_Bits B;
} Ifx_P_IOCR12;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_P_IOCR4_Bits B;
} Ifx_P_IOCR4;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_P_IOCR8_Bits B;
} Ifx_P_IOCR8;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_P_LPCR0_Bits B;
} Ifx_P_LPCR0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_P_LPCR1_Bits B;
    Ifx_P_LPCR1_P21_Bits B_P21;
} Ifx_P_LPCR1;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_P_LPCR2_Bits B;
} Ifx_P_LPCR2;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_P_OMCR_Bits B;
} Ifx_P_OMCR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_P_OMCR0_Bits B;
} Ifx_P_OMCR0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_P_OMCR12_Bits B;
} Ifx_P_OMCR12;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_P_OMCR4_Bits B;
} Ifx_P_OMCR4;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_P_OMCR8_Bits B;
} Ifx_P_OMCR8;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_P_OMR_Bits B;
} Ifx_P_OMR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_P_OMSR_Bits B;
} Ifx_P_OMSR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_P_OMSR0_Bits B;
} Ifx_P_OMSR0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_P_OMSR12_Bits B;
} Ifx_P_OMSR12;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_P_OMSR4_Bits B;
} Ifx_P_OMSR4;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_P_OMSR8_Bits B;
} Ifx_P_OMSR8;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_P_OUT_Bits B;
} Ifx_P_OUT;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_P_PCSR_Bits B;
} Ifx_P_PCSR;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_P_PDISC_Bits B;
} Ifx_P_PDISC;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_P_PDR0_Bits B;
} Ifx_P_PDR0;


typedef union
{
    unsigned int U;
    signed int I;
    Ifx_P_PDR1_Bits B;
} Ifx_P_PDR1;
# 740 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\IfxPort_regdef.h" 3
typedef volatile struct _Ifx_P
{
    Ifx_P_OUT OUT;
    Ifx_P_OMR OMR;
    Ifx_P_ID ID;
    unsigned char reserved_C[4];
    Ifx_P_IOCR0 IOCR0;
    Ifx_P_IOCR4 IOCR4;
    Ifx_P_IOCR8 IOCR8;
    Ifx_P_IOCR12 IOCR12;
    unsigned char reserved_20[4];
    Ifx_P_IN IN;
    unsigned char reserved_28[24];
    Ifx_P_PDR0 PDR0;
    Ifx_P_PDR1 PDR1;
    unsigned char reserved_48[8];
    Ifx_P_ESR ESR;
    unsigned char reserved_54[12];
    Ifx_P_PDISC PDISC;
    Ifx_P_PCSR PCSR;
    unsigned char reserved_68[8];
    Ifx_P_OMSR0 OMSR0;
    Ifx_P_OMSR4 OMSR4;
    Ifx_P_OMSR8 OMSR8;
    Ifx_P_OMSR12 OMSR12;
    Ifx_P_OMCR0 OMCR0;
    Ifx_P_OMCR4 OMCR4;
    Ifx_P_OMCR8 OMCR8;
    Ifx_P_OMCR12 OMCR12;
    Ifx_P_OMSR OMSR;
    Ifx_P_OMCR OMCR;
    unsigned char reserved_98[8];
    Ifx_P_LPCR0 LPCR0;
    Ifx_P_LPCR1 LPCR1;
    Ifx_P_LPCR2 LPCR2;
    unsigned char reserved_A4[76];
    Ifx_P_ACCEN1 ACCEN1;
    Ifx_P_ACCEN0 ACCEN0;
} Ifx_P;
# 85 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport_reg.h" 2 3





#define MODULE_P00 (*(Ifx_P*)0xF003A000u)


#define MODULE_P01 (*(Ifx_P*)0xF003A100u)


#define MODULE_P02 (*(Ifx_P*)0xF003A200u)


#define MODULE_P10 (*(Ifx_P*)0xF003B000u)


#define MODULE_P11 (*(Ifx_P*)0xF003B100u)


#define MODULE_P12 (*(Ifx_P*)0xF003B200u)


#define MODULE_P13 (*(Ifx_P*)0xF003B300u)


#define MODULE_P14 (*(Ifx_P*)0xF003B400u)


#define MODULE_P15 (*(Ifx_P*)0xF003B500u)


#define MODULE_P20 (*(Ifx_P*)0xF003C000u)


#define MODULE_P21 (*(Ifx_P*)0xF003C100u)


#define MODULE_P22 (*(Ifx_P*)0xF003C200u)


#define MODULE_P23 (*(Ifx_P*)0xF003C300u)


#define MODULE_P32 (*(Ifx_P*)0xF003D200u)


#define MODULE_P33 (*(Ifx_P*)0xF003D300u)


#define MODULE_P34 (*(Ifx_P*)0xF003D400u)


#define MODULE_P40 (*(Ifx_P*)0xF003E000u)







#define P00_ACCEN0 (*(volatile Ifx_P_ACCEN0*)0xF003A0FCu)


#define P00_ACCEN1 (*(volatile Ifx_P_ACCEN1*)0xF003A0F8u)


#define P00_ESR (*(volatile Ifx_P_ESR*)0xF003A050u)


#define P00_ID (*(volatile Ifx_P_ID*)0xF003A008u)


#define P00_IN (*(volatile Ifx_P_IN*)0xF003A024u)


#define P00_IOCR0 (*(volatile Ifx_P_IOCR0*)0xF003A010u)


#define P00_IOCR12 (*(volatile Ifx_P_IOCR12*)0xF003A01Cu)


#define P00_IOCR4 (*(volatile Ifx_P_IOCR4*)0xF003A014u)


#define P00_IOCR8 (*(volatile Ifx_P_IOCR8*)0xF003A018u)


#define P00_OMCR (*(volatile Ifx_P_OMCR*)0xF003A094u)


#define P00_OMCR0 (*(volatile Ifx_P_OMCR0*)0xF003A080u)


#define P00_OMCR12 (*(volatile Ifx_P_OMCR12*)0xF003A08Cu)


#define P00_OMCR4 (*(volatile Ifx_P_OMCR4*)0xF003A084u)


#define P00_OMCR8 (*(volatile Ifx_P_OMCR8*)0xF003A088u)


#define P00_OMR (*(volatile Ifx_P_OMR*)0xF003A004u)


#define P00_OMSR (*(volatile Ifx_P_OMSR*)0xF003A090u)


#define P00_OMSR0 (*(volatile Ifx_P_OMSR0*)0xF003A070u)


#define P00_OMSR12 (*(volatile Ifx_P_OMSR12*)0xF003A07Cu)


#define P00_OMSR4 (*(volatile Ifx_P_OMSR4*)0xF003A074u)


#define P00_OMSR8 (*(volatile Ifx_P_OMSR8*)0xF003A078u)


#define P00_OUT (*(volatile Ifx_P_OUT*)0xF003A000u)


#define P00_PCSR (*(volatile Ifx_P_PCSR*)0xF003A064u)


#define P00_PDR0 (*(volatile Ifx_P_PDR0*)0xF003A040u)


#define P00_PDR1 (*(volatile Ifx_P_PDR1*)0xF003A044u)







#define P01_ACCEN0 (*(volatile Ifx_P_ACCEN0*)0xF003A1FCu)


#define P01_ACCEN1 (*(volatile Ifx_P_ACCEN1*)0xF003A1F8u)


#define P01_ESR (*(volatile Ifx_P_ESR*)0xF003A150u)


#define P01_ID (*(volatile Ifx_P_ID*)0xF003A108u)


#define P01_IN (*(volatile Ifx_P_IN*)0xF003A124u)


#define P01_IOCR0 (*(volatile Ifx_P_IOCR0*)0xF003A110u)


#define P01_IOCR4 (*(volatile Ifx_P_IOCR4*)0xF003A114u)


#define P01_OMCR (*(volatile Ifx_P_OMCR*)0xF003A194u)


#define P01_OMCR0 (*(volatile Ifx_P_OMCR0*)0xF003A180u)


#define P01_OMCR4 (*(volatile Ifx_P_OMCR4*)0xF003A184u)


#define P01_OMR (*(volatile Ifx_P_OMR*)0xF003A104u)


#define P01_OMSR (*(volatile Ifx_P_OMSR*)0xF003A190u)


#define P01_OMSR0 (*(volatile Ifx_P_OMSR0*)0xF003A170u)


#define P01_OMSR4 (*(volatile Ifx_P_OMSR4*)0xF003A174u)


#define P01_OUT (*(volatile Ifx_P_OUT*)0xF003A100u)


#define P01_PDR0 (*(volatile Ifx_P_PDR0*)0xF003A140u)







#define P02_ACCEN0 (*(volatile Ifx_P_ACCEN0*)0xF003A2FCu)


#define P02_ACCEN1 (*(volatile Ifx_P_ACCEN1*)0xF003A2F8u)


#define P02_ESR (*(volatile Ifx_P_ESR*)0xF003A250u)


#define P02_ID (*(volatile Ifx_P_ID*)0xF003A208u)


#define P02_IN (*(volatile Ifx_P_IN*)0xF003A224u)


#define P02_IOCR0 (*(volatile Ifx_P_IOCR0*)0xF003A210u)


#define P02_IOCR4 (*(volatile Ifx_P_IOCR4*)0xF003A214u)


#define P02_IOCR8 (*(volatile Ifx_P_IOCR8*)0xF003A218u)


#define P02_OMCR (*(volatile Ifx_P_OMCR*)0xF003A294u)


#define P02_OMCR0 (*(volatile Ifx_P_OMCR0*)0xF003A280u)


#define P02_OMCR4 (*(volatile Ifx_P_OMCR4*)0xF003A284u)


#define P02_OMCR8 (*(volatile Ifx_P_OMCR8*)0xF003A288u)


#define P02_OMR (*(volatile Ifx_P_OMR*)0xF003A204u)


#define P02_OMSR (*(volatile Ifx_P_OMSR*)0xF003A290u)


#define P02_OMSR0 (*(volatile Ifx_P_OMSR0*)0xF003A270u)


#define P02_OMSR4 (*(volatile Ifx_P_OMSR4*)0xF003A274u)


#define P02_OMSR8 (*(volatile Ifx_P_OMSR8*)0xF003A278u)


#define P02_OUT (*(volatile Ifx_P_OUT*)0xF003A200u)


#define P02_PDR0 (*(volatile Ifx_P_PDR0*)0xF003A240u)


#define P02_PDR1 (*(volatile Ifx_P_PDR1*)0xF003A244u)







#define P10_ACCEN0 (*(volatile Ifx_P_ACCEN0*)0xF003B0FCu)


#define P10_ACCEN1 (*(volatile Ifx_P_ACCEN1*)0xF003B0F8u)


#define P10_ESR (*(volatile Ifx_P_ESR*)0xF003B050u)


#define P10_ID (*(volatile Ifx_P_ID*)0xF003B008u)


#define P10_IN (*(volatile Ifx_P_IN*)0xF003B024u)


#define P10_IOCR0 (*(volatile Ifx_P_IOCR0*)0xF003B010u)


#define P10_IOCR4 (*(volatile Ifx_P_IOCR4*)0xF003B014u)


#define P10_IOCR8 (*(volatile Ifx_P_IOCR8*)0xF003B018u)


#define P10_OMCR (*(volatile Ifx_P_OMCR*)0xF003B094u)


#define P10_OMCR0 (*(volatile Ifx_P_OMCR0*)0xF003B080u)


#define P10_OMCR4 (*(volatile Ifx_P_OMCR4*)0xF003B084u)


#define P10_OMCR8 (*(volatile Ifx_P_OMCR8*)0xF003B088u)


#define P10_OMR (*(volatile Ifx_P_OMR*)0xF003B004u)


#define P10_OMSR (*(volatile Ifx_P_OMSR*)0xF003B090u)


#define P10_OMSR0 (*(volatile Ifx_P_OMSR0*)0xF003B070u)


#define P10_OMSR4 (*(volatile Ifx_P_OMSR4*)0xF003B074u)


#define P10_OMSR8 (*(volatile Ifx_P_OMSR8*)0xF003B078u)


#define P10_OUT (*(volatile Ifx_P_OUT*)0xF003B000u)


#define P10_PDR0 (*(volatile Ifx_P_PDR0*)0xF003B040u)


#define P10_PDR1 (*(volatile Ifx_P_PDR1*)0xF003B044u)







#define P11_ACCEN0 (*(volatile Ifx_P_ACCEN0*)0xF003B1FCu)


#define P11_ACCEN1 (*(volatile Ifx_P_ACCEN1*)0xF003B1F8u)


#define P11_ESR (*(volatile Ifx_P_ESR*)0xF003B150u)


#define P11_ID (*(volatile Ifx_P_ID*)0xF003B108u)


#define P11_IN (*(volatile Ifx_P_IN*)0xF003B124u)


#define P11_IOCR0 (*(volatile Ifx_P_IOCR0*)0xF003B110u)


#define P11_IOCR12 (*(volatile Ifx_P_IOCR12*)0xF003B11Cu)


#define P11_IOCR4 (*(volatile Ifx_P_IOCR4*)0xF003B114u)


#define P11_IOCR8 (*(volatile Ifx_P_IOCR8*)0xF003B118u)


#define P11_OMCR (*(volatile Ifx_P_OMCR*)0xF003B194u)


#define P11_OMCR0 (*(volatile Ifx_P_OMCR0*)0xF003B180u)


#define P11_OMCR12 (*(volatile Ifx_P_OMCR12*)0xF003B18Cu)


#define P11_OMCR4 (*(volatile Ifx_P_OMCR4*)0xF003B184u)


#define P11_OMCR8 (*(volatile Ifx_P_OMCR8*)0xF003B188u)


#define P11_OMR (*(volatile Ifx_P_OMR*)0xF003B104u)


#define P11_OMSR (*(volatile Ifx_P_OMSR*)0xF003B190u)


#define P11_OMSR0 (*(volatile Ifx_P_OMSR0*)0xF003B170u)


#define P11_OMSR12 (*(volatile Ifx_P_OMSR12*)0xF003B17Cu)


#define P11_OMSR4 (*(volatile Ifx_P_OMSR4*)0xF003B174u)


#define P11_OMSR8 (*(volatile Ifx_P_OMSR8*)0xF003B178u)


#define P11_OUT (*(volatile Ifx_P_OUT*)0xF003B100u)


#define P11_PCSR (*(volatile Ifx_P_PCSR*)0xF003B164u)


#define P11_PDR0 (*(volatile Ifx_P_PDR0*)0xF003B140u)


#define P11_PDR1 (*(volatile Ifx_P_PDR1*)0xF003B144u)







#define P12_ACCEN0 (*(volatile Ifx_P_ACCEN0*)0xF003B2FCu)


#define P12_ACCEN1 (*(volatile Ifx_P_ACCEN1*)0xF003B2F8u)


#define P12_ESR (*(volatile Ifx_P_ESR*)0xF003B250u)


#define P12_ID (*(volatile Ifx_P_ID*)0xF003B208u)


#define P12_IN (*(volatile Ifx_P_IN*)0xF003B224u)


#define P12_IOCR0 (*(volatile Ifx_P_IOCR0*)0xF003B210u)


#define P12_OMCR (*(volatile Ifx_P_OMCR*)0xF003B294u)


#define P12_OMCR0 (*(volatile Ifx_P_OMCR0*)0xF003B280u)


#define P12_OMR (*(volatile Ifx_P_OMR*)0xF003B204u)


#define P12_OMSR (*(volatile Ifx_P_OMSR*)0xF003B290u)


#define P12_OMSR0 (*(volatile Ifx_P_OMSR0*)0xF003B270u)


#define P12_OUT (*(volatile Ifx_P_OUT*)0xF003B200u)


#define P12_PDR0 (*(volatile Ifx_P_PDR0*)0xF003B240u)







#define P13_ACCEN0 (*(volatile Ifx_P_ACCEN0*)0xF003B3FCu)


#define P13_ACCEN1 (*(volatile Ifx_P_ACCEN1*)0xF003B3F8u)


#define P13_ESR (*(volatile Ifx_P_ESR*)0xF003B350u)


#define P13_ID (*(volatile Ifx_P_ID*)0xF003B308u)


#define P13_IN (*(volatile Ifx_P_IN*)0xF003B324u)


#define P13_IOCR0 (*(volatile Ifx_P_IOCR0*)0xF003B310u)


#define P13_LPCR0 (*(volatile Ifx_P_LPCR0*)0xF003B3A0u)


#define P13_LPCR1 (*(volatile Ifx_P_LPCR1*)0xF003B3A4u)


#define P13_OMCR (*(volatile Ifx_P_OMCR*)0xF003B394u)


#define P13_OMCR0 (*(volatile Ifx_P_OMCR0*)0xF003B380u)


#define P13_OMR (*(volatile Ifx_P_OMR*)0xF003B304u)


#define P13_OMSR (*(volatile Ifx_P_OMSR*)0xF003B390u)


#define P13_OMSR0 (*(volatile Ifx_P_OMSR0*)0xF003B370u)


#define P13_OUT (*(volatile Ifx_P_OUT*)0xF003B300u)


#define P13_PDR0 (*(volatile Ifx_P_PDR0*)0xF003B340u)







#define P14_ACCEN0 (*(volatile Ifx_P_ACCEN0*)0xF003B4FCu)


#define P14_ACCEN1 (*(volatile Ifx_P_ACCEN1*)0xF003B4F8u)


#define P14_ESR (*(volatile Ifx_P_ESR*)0xF003B450u)


#define P14_ID (*(volatile Ifx_P_ID*)0xF003B408u)


#define P14_IN (*(volatile Ifx_P_IN*)0xF003B424u)


#define P14_IOCR0 (*(volatile Ifx_P_IOCR0*)0xF003B410u)


#define P14_IOCR4 (*(volatile Ifx_P_IOCR4*)0xF003B414u)


#define P14_IOCR8 (*(volatile Ifx_P_IOCR8*)0xF003B418u)


#define P14_OMCR (*(volatile Ifx_P_OMCR*)0xF003B494u)


#define P14_OMCR0 (*(volatile Ifx_P_OMCR0*)0xF003B480u)


#define P14_OMCR4 (*(volatile Ifx_P_OMCR4*)0xF003B484u)


#define P14_OMCR8 (*(volatile Ifx_P_OMCR8*)0xF003B488u)


#define P14_OMR (*(volatile Ifx_P_OMR*)0xF003B404u)


#define P14_OMSR (*(volatile Ifx_P_OMSR*)0xF003B490u)


#define P14_OMSR0 (*(volatile Ifx_P_OMSR0*)0xF003B470u)


#define P14_OMSR4 (*(volatile Ifx_P_OMSR4*)0xF003B474u)


#define P14_OMSR8 (*(volatile Ifx_P_OMSR8*)0xF003B478u)


#define P14_OUT (*(volatile Ifx_P_OUT*)0xF003B400u)


#define P14_PDR0 (*(volatile Ifx_P_PDR0*)0xF003B440u)


#define P14_PDR1 (*(volatile Ifx_P_PDR1*)0xF003B444u)







#define P15_ACCEN0 (*(volatile Ifx_P_ACCEN0*)0xF003B5FCu)


#define P15_ACCEN1 (*(volatile Ifx_P_ACCEN1*)0xF003B5F8u)


#define P15_ESR (*(volatile Ifx_P_ESR*)0xF003B550u)


#define P15_ID (*(volatile Ifx_P_ID*)0xF003B508u)


#define P15_IN (*(volatile Ifx_P_IN*)0xF003B524u)


#define P15_IOCR0 (*(volatile Ifx_P_IOCR0*)0xF003B510u)


#define P15_IOCR4 (*(volatile Ifx_P_IOCR4*)0xF003B514u)


#define P15_IOCR8 (*(volatile Ifx_P_IOCR8*)0xF003B518u)


#define P15_OMCR (*(volatile Ifx_P_OMCR*)0xF003B594u)


#define P15_OMCR0 (*(volatile Ifx_P_OMCR0*)0xF003B580u)


#define P15_OMCR4 (*(volatile Ifx_P_OMCR4*)0xF003B584u)


#define P15_OMCR8 (*(volatile Ifx_P_OMCR8*)0xF003B588u)


#define P15_OMR (*(volatile Ifx_P_OMR*)0xF003B504u)


#define P15_OMSR (*(volatile Ifx_P_OMSR*)0xF003B590u)


#define P15_OMSR0 (*(volatile Ifx_P_OMSR0*)0xF003B570u)


#define P15_OMSR4 (*(volatile Ifx_P_OMSR4*)0xF003B574u)


#define P15_OMSR8 (*(volatile Ifx_P_OMSR8*)0xF003B578u)


#define P15_OUT (*(volatile Ifx_P_OUT*)0xF003B500u)


#define P15_PDR0 (*(volatile Ifx_P_PDR0*)0xF003B540u)


#define P15_PDR1 (*(volatile Ifx_P_PDR1*)0xF003B544u)







#define P20_ACCEN0 (*(volatile Ifx_P_ACCEN0*)0xF003C0FCu)


#define P20_ACCEN1 (*(volatile Ifx_P_ACCEN1*)0xF003C0F8u)


#define P20_ESR (*(volatile Ifx_P_ESR*)0xF003C050u)


#define P20_ID (*(volatile Ifx_P_ID*)0xF003C008u)


#define P20_IN (*(volatile Ifx_P_IN*)0xF003C024u)


#define P20_IOCR0 (*(volatile Ifx_P_IOCR0*)0xF003C010u)


#define P20_IOCR12 (*(volatile Ifx_P_IOCR12*)0xF003C01Cu)


#define P20_IOCR4 (*(volatile Ifx_P_IOCR4*)0xF003C014u)


#define P20_IOCR8 (*(volatile Ifx_P_IOCR8*)0xF003C018u)


#define P20_OMCR (*(volatile Ifx_P_OMCR*)0xF003C094u)


#define P20_OMCR0 (*(volatile Ifx_P_OMCR0*)0xF003C080u)


#define P20_OMCR12 (*(volatile Ifx_P_OMCR12*)0xF003C08Cu)


#define P20_OMCR4 (*(volatile Ifx_P_OMCR4*)0xF003C084u)


#define P20_OMCR8 (*(volatile Ifx_P_OMCR8*)0xF003C088u)


#define P20_OMR (*(volatile Ifx_P_OMR*)0xF003C004u)


#define P20_OMSR (*(volatile Ifx_P_OMSR*)0xF003C090u)


#define P20_OMSR0 (*(volatile Ifx_P_OMSR0*)0xF003C070u)


#define P20_OMSR12 (*(volatile Ifx_P_OMSR12*)0xF003C07Cu)


#define P20_OMSR4 (*(volatile Ifx_P_OMSR4*)0xF003C074u)


#define P20_OMSR8 (*(volatile Ifx_P_OMSR8*)0xF003C078u)


#define P20_OUT (*(volatile Ifx_P_OUT*)0xF003C000u)


#define P20_PDR0 (*(volatile Ifx_P_PDR0*)0xF003C040u)


#define P20_PDR1 (*(volatile Ifx_P_PDR1*)0xF003C044u)







#define P21_ACCEN0 (*(volatile Ifx_P_ACCEN0*)0xF003C1FCu)


#define P21_ACCEN1 (*(volatile Ifx_P_ACCEN1*)0xF003C1F8u)


#define P21_ESR (*(volatile Ifx_P_ESR*)0xF003C150u)


#define P21_ID (*(volatile Ifx_P_ID*)0xF003C108u)


#define P21_IN (*(volatile Ifx_P_IN*)0xF003C124u)


#define P21_IOCR0 (*(volatile Ifx_P_IOCR0*)0xF003C110u)


#define P21_IOCR4 (*(volatile Ifx_P_IOCR4*)0xF003C114u)


#define P21_LPCR1 (*(volatile Ifx_P_LPCR1*)0xF003C1A4u)


#define P21_LPCR2 (*(volatile Ifx_P_LPCR2*)0xF003C1A8u)


#define P21_OMCR (*(volatile Ifx_P_OMCR*)0xF003C194u)


#define P21_OMCR0 (*(volatile Ifx_P_OMCR0*)0xF003C180u)


#define P21_OMCR4 (*(volatile Ifx_P_OMCR4*)0xF003C184u)


#define P21_OMR (*(volatile Ifx_P_OMR*)0xF003C104u)


#define P21_OMSR (*(volatile Ifx_P_OMSR*)0xF003C190u)


#define P21_OMSR0 (*(volatile Ifx_P_OMSR0*)0xF003C170u)


#define P21_OMSR4 (*(volatile Ifx_P_OMSR4*)0xF003C174u)


#define P21_OUT (*(volatile Ifx_P_OUT*)0xF003C100u)


#define P21_PDR0 (*(volatile Ifx_P_PDR0*)0xF003C140u)







#define P22_ACCEN0 (*(volatile Ifx_P_ACCEN0*)0xF003C2FCu)


#define P22_ACCEN1 (*(volatile Ifx_P_ACCEN1*)0xF003C2F8u)


#define P22_ESR (*(volatile Ifx_P_ESR*)0xF003C250u)


#define P22_ID (*(volatile Ifx_P_ID*)0xF003C208u)


#define P22_IN (*(volatile Ifx_P_IN*)0xF003C224u)


#define P22_IOCR0 (*(volatile Ifx_P_IOCR0*)0xF003C210u)


#define P22_IOCR4 (*(volatile Ifx_P_IOCR4*)0xF003C214u)


#define P22_IOCR8 (*(volatile Ifx_P_IOCR8*)0xF003C218u)


#define P22_LPCR0 (*(volatile Ifx_P_LPCR0*)0xF003C2A0u)


#define P22_LPCR1 (*(volatile Ifx_P_LPCR1*)0xF003C2A4u)


#define P22_OMCR (*(volatile Ifx_P_OMCR*)0xF003C294u)


#define P22_OMCR0 (*(volatile Ifx_P_OMCR0*)0xF003C280u)


#define P22_OMCR4 (*(volatile Ifx_P_OMCR4*)0xF003C284u)


#define P22_OMCR8 (*(volatile Ifx_P_OMCR8*)0xF003C288u)


#define P22_OMR (*(volatile Ifx_P_OMR*)0xF003C204u)


#define P22_OMSR (*(volatile Ifx_P_OMSR*)0xF003C290u)


#define P22_OMSR0 (*(volatile Ifx_P_OMSR0*)0xF003C270u)


#define P22_OMSR4 (*(volatile Ifx_P_OMSR4*)0xF003C274u)


#define P22_OMSR8 (*(volatile Ifx_P_OMSR8*)0xF003C278u)


#define P22_OUT (*(volatile Ifx_P_OUT*)0xF003C200u)


#define P22_PDR0 (*(volatile Ifx_P_PDR0*)0xF003C240u)


#define P22_PDR1 (*(volatile Ifx_P_PDR1*)0xF003C244u)







#define P23_ACCEN0 (*(volatile Ifx_P_ACCEN0*)0xF003C3FCu)


#define P23_ACCEN1 (*(volatile Ifx_P_ACCEN1*)0xF003C3F8u)


#define P23_ESR (*(volatile Ifx_P_ESR*)0xF003C350u)


#define P23_ID (*(volatile Ifx_P_ID*)0xF003C308u)


#define P23_IN (*(volatile Ifx_P_IN*)0xF003C324u)


#define P23_IOCR0 (*(volatile Ifx_P_IOCR0*)0xF003C310u)


#define P23_IOCR4 (*(volatile Ifx_P_IOCR4*)0xF003C314u)


#define P23_OMCR (*(volatile Ifx_P_OMCR*)0xF003C394u)


#define P23_OMCR0 (*(volatile Ifx_P_OMCR0*)0xF003C380u)


#define P23_OMCR4 (*(volatile Ifx_P_OMCR4*)0xF003C384u)


#define P23_OMR (*(volatile Ifx_P_OMR*)0xF003C304u)


#define P23_OMSR (*(volatile Ifx_P_OMSR*)0xF003C390u)


#define P23_OMSR0 (*(volatile Ifx_P_OMSR0*)0xF003C370u)


#define P23_OMSR4 (*(volatile Ifx_P_OMSR4*)0xF003C374u)


#define P23_OUT (*(volatile Ifx_P_OUT*)0xF003C300u)


#define P23_PDR0 (*(volatile Ifx_P_PDR0*)0xF003C340u)







#define P32_ACCEN0 (*(volatile Ifx_P_ACCEN0*)0xF003D2FCu)


#define P32_ACCEN1 (*(volatile Ifx_P_ACCEN1*)0xF003D2F8u)


#define P32_ESR (*(volatile Ifx_P_ESR*)0xF003D250u)


#define P32_ID (*(volatile Ifx_P_ID*)0xF003D208u)


#define P32_IN (*(volatile Ifx_P_IN*)0xF003D224u)


#define P32_IOCR0 (*(volatile Ifx_P_IOCR0*)0xF003D210u)


#define P32_IOCR4 (*(volatile Ifx_P_IOCR4*)0xF003D214u)


#define P32_OMCR (*(volatile Ifx_P_OMCR*)0xF003D294u)


#define P32_OMCR0 (*(volatile Ifx_P_OMCR0*)0xF003D280u)


#define P32_OMCR4 (*(volatile Ifx_P_OMCR4*)0xF003D284u)


#define P32_OMR (*(volatile Ifx_P_OMR*)0xF003D204u)


#define P32_OMSR (*(volatile Ifx_P_OMSR*)0xF003D290u)


#define P32_OMSR0 (*(volatile Ifx_P_OMSR0*)0xF003D270u)


#define P32_OMSR4 (*(volatile Ifx_P_OMSR4*)0xF003D274u)


#define P32_OUT (*(volatile Ifx_P_OUT*)0xF003D200u)


#define P32_PDR0 (*(volatile Ifx_P_PDR0*)0xF003D240u)







#define P33_ACCEN0 (*(volatile Ifx_P_ACCEN0*)0xF003D3FCu)


#define P33_ACCEN1 (*(volatile Ifx_P_ACCEN1*)0xF003D3F8u)


#define P33_ESR (*(volatile Ifx_P_ESR*)0xF003D350u)


#define P33_ID (*(volatile Ifx_P_ID*)0xF003D308u)


#define P33_IN (*(volatile Ifx_P_IN*)0xF003D324u)


#define P33_IOCR0 (*(volatile Ifx_P_IOCR0*)0xF003D310u)


#define P33_IOCR12 (*(volatile Ifx_P_IOCR12*)0xF003D31Cu)


#define P33_IOCR4 (*(volatile Ifx_P_IOCR4*)0xF003D314u)


#define P33_IOCR8 (*(volatile Ifx_P_IOCR8*)0xF003D318u)


#define P33_OMCR (*(volatile Ifx_P_OMCR*)0xF003D394u)


#define P33_OMCR0 (*(volatile Ifx_P_OMCR0*)0xF003D380u)


#define P33_OMCR12 (*(volatile Ifx_P_OMCR12*)0xF003D38Cu)


#define P33_OMCR4 (*(volatile Ifx_P_OMCR4*)0xF003D384u)


#define P33_OMCR8 (*(volatile Ifx_P_OMCR8*)0xF003D388u)


#define P33_OMR (*(volatile Ifx_P_OMR*)0xF003D304u)


#define P33_OMSR (*(volatile Ifx_P_OMSR*)0xF003D390u)


#define P33_OMSR0 (*(volatile Ifx_P_OMSR0*)0xF003D370u)


#define P33_OMSR12 (*(volatile Ifx_P_OMSR12*)0xF003D37Cu)


#define P33_OMSR4 (*(volatile Ifx_P_OMSR4*)0xF003D374u)


#define P33_OMSR8 (*(volatile Ifx_P_OMSR8*)0xF003D378u)


#define P33_OUT (*(volatile Ifx_P_OUT*)0xF003D300u)


#define P33_PDR0 (*(volatile Ifx_P_PDR0*)0xF003D340u)


#define P33_PDR1 (*(volatile Ifx_P_PDR1*)0xF003D344u)







#define P34_ACCEN0 (*(volatile Ifx_P_ACCEN0*)0xF003D4FCu)


#define P34_ACCEN1 (*(volatile Ifx_P_ACCEN1*)0xF003D4F8u)


#define P34_ESR (*(volatile Ifx_P_ESR*)0xF003D450u)


#define P34_ID (*(volatile Ifx_P_ID*)0xF003D408u)


#define P34_IN (*(volatile Ifx_P_IN*)0xF003D424u)


#define P34_IOCR0 (*(volatile Ifx_P_IOCR0*)0xF003D410u)


#define P34_IOCR4 (*(volatile Ifx_P_IOCR4*)0xF003D414u)


#define P34_OMCR (*(volatile Ifx_P_OMCR*)0xF003D494u)


#define P34_OMCR0 (*(volatile Ifx_P_OMCR0*)0xF003D480u)


#define P34_OMCR4 (*(volatile Ifx_P_OMCR4*)0xF003D484u)


#define P34_OMR (*(volatile Ifx_P_OMR*)0xF003D404u)


#define P34_OMSR (*(volatile Ifx_P_OMSR*)0xF003D490u)


#define P34_OMSR0 (*(volatile Ifx_P_OMSR0*)0xF003D470u)


#define P34_OMSR4 (*(volatile Ifx_P_OMSR4*)0xF003D474u)


#define P34_OUT (*(volatile Ifx_P_OUT*)0xF003D400u)


#define P34_PDR0 (*(volatile Ifx_P_PDR0*)0xF003D440u)







#define P40_ACCEN0 (*(volatile Ifx_P_ACCEN0*)0xF003E0FCu)


#define P40_ACCEN1 (*(volatile Ifx_P_ACCEN1*)0xF003E0F8u)


#define P40_ID (*(volatile Ifx_P_ID*)0xF003E008u)


#define P40_IN (*(volatile Ifx_P_IN*)0xF003E024u)


#define P40_IOCR0 (*(volatile Ifx_P_IOCR0*)0xF003E010u)


#define P40_IOCR4 (*(volatile Ifx_P_IOCR4*)0xF003E014u)


#define P40_IOCR8 (*(volatile Ifx_P_IOCR8*)0xF003E018u)


#define P40_PCSR (*(volatile Ifx_P_PCSR*)0xF003E064u)


#define P40_PDISC (*(volatile Ifx_P_PDISC*)0xF003E060u)
# 59 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport_cfg.h" 2 3







#define IFXPORT_NUM_MODULES (16)

#define IFXPORT_OUTOUTFEATURE_NONE (0xFFFFFFFF)







typedef enum
{
    IfxPort_Index_00 = 0,
    IfxPort_Index_01 = 1,
    IfxPort_Index_02 = 2,
    IfxPort_Index_10 = 10,
    IfxPort_Index_11 = 11,
    IfxPort_Index_12 = 12,
    IfxPort_Index_13 = 13,
    IfxPort_Index_14 = 14,
    IfxPort_Index_15 = 15,
    IfxPort_Index_20 = 20,
    IfxPort_Index_21 = 21,
    IfxPort_Index_22 = 22,
    IfxPort_Index_23 = 23,
    IfxPort_Index_32 = 32,
    IfxPort_Index_33 = 33,
    IfxPort_Index_34 = 34,
    IfxPort_Index_none = -1
} IfxPort_Index;







typedef struct
{
    Ifx_P *port;
    uint16 masks;
} IfxPort_Esr_Masks;





extern const IfxPort_Esr_Masks IfxPort_cfg_esrMasks[(16)];

extern const IfxModule_IndexMap IfxPort_cfg_indexMap[(16)];
# 61 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport.h" 2 3
# 72 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport.h" 3
typedef enum
{
    IfxPort_ControlledBy_port = 0,
    IfxPort_ControlledBy_hsct = 1
} IfxPort_ControlledBy;



typedef enum
{
    IfxPort_InputMode_undefined = -1,
    IfxPort_InputMode_noPullDevice = 0 << 3,
        IfxPort_InputMode_pullDown = 1U << 3,
        IfxPort_InputMode_pullUp = 2U << 3
} IfxPort_InputMode;





typedef enum
{
    IfxPort_Mode_inputNoPullDevice = 0,
    IfxPort_Mode_inputPullDown = 8U,
    IfxPort_Mode_inputPullUp = 0x10U,
    IfxPort_Mode_outputPushPullGeneral = 0x80U,
    IfxPort_Mode_outputPushPullAlt1 = 0x88U,
    IfxPort_Mode_outputPushPullAlt2 = 0x90U,
    IfxPort_Mode_outputPushPullAlt3 = 0x98U,
    IfxPort_Mode_outputPushPullAlt4 = 0xA0U,
    IfxPort_Mode_outputPushPullAlt5 = 0xA8U,
    IfxPort_Mode_outputPushPullAlt6 = 0xB0U,
    IfxPort_Mode_outputPushPullAlt7 = 0xB8U,
    IfxPort_Mode_outputOpenDrainGeneral = 0xC0U,
    IfxPort_Mode_outputOpenDrainAlt1 = 0xC8U,
    IfxPort_Mode_outputOpenDrainAlt2 = 0xD0U,
    IfxPort_Mode_outputOpenDrainAlt3 = 0xD8U,
    IfxPort_Mode_outputOpenDrainAlt4 = 0xE0U,
    IfxPort_Mode_outputOpenDrainAlt5 = 0xE8U,
    IfxPort_Mode_outputOpenDrainAlt6 = 0xF0U,
    IfxPort_Mode_outputOpenDrainAlt7 = 0xF8U
} IfxPort_Mode;



typedef enum
{
    IfxPort_OutputIdx_general = 0x10U << 3,
        IfxPort_OutputIdx_alt1 = 0x11U << 3,
        IfxPort_OutputIdx_alt2 = 0x12U << 3,
        IfxPort_OutputIdx_alt3 = 0x13U << 3,
        IfxPort_OutputIdx_alt4 = 0x14U << 3,
        IfxPort_OutputIdx_alt5 = 0x15U << 3,
        IfxPort_OutputIdx_alt6 = 0x16U << 3,
        IfxPort_OutputIdx_alt7 = 0x17U << 3
} IfxPort_OutputIdx;



typedef enum
{
    IfxPort_OutputMode_pushPull = 0x10U << 3,
        IfxPort_OutputMode_openDrain = 0x18U << 3,
        IfxPort_OutputMode_none = 0
} IfxPort_OutputMode;





typedef enum
{
    IfxPort_PadDriver_cmosAutomotiveSpeed1 = 0,
    IfxPort_PadDriver_cmosAutomotiveSpeed2 = 1,
    IfxPort_PadDriver_cmosAutomotiveSpeed3 = 2,
    IfxPort_PadDriver_cmosAutomotiveSpeed4 = 3,
    IfxPort_PadDriver_lvdsSpeed1 = 4,
    IfxPort_PadDriver_lvdsSpeed2 = 5,
    IfxPort_PadDriver_lvdsSpeed3 = 6,
    IfxPort_PadDriver_lvdsSpeed4 = 7,
    IfxPort_PadDriver_ttlSpeed1 = 8,
    IfxPort_PadDriver_ttlSpeed2 = 9,
    IfxPort_PadDriver_ttlSpeed3 = 10,
    IfxPort_PadDriver_ttlSpeed4 = 11
} IfxPort_PadDriver;



typedef enum
{
    IfxPort_PadSupply_5v = 0,
    IfxPort_PadSupply_3v = 1
} IfxPort_PadSupply;





typedef enum
{
    IfxPort_State_notChanged = (0 << 16) | (0 << 0),
    IfxPort_State_high = (0 << 16) | (1U << 0),
    IfxPort_State_low = (1U << 16) | (0 << 0),
    IfxPort_State_toggled = (1U << 16) | (1U << 0)
} IfxPort_State;
# 188 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport.h" 3
typedef struct
{
    Ifx_P *port;
    uint8 pinIndex;
} IfxPort_Pin;



typedef struct
{
    Ifx_P *port;
    uint8 pinIndex;
    IfxPort_OutputIdx mode;
    IfxPort_PadDriver padDriver;
} IfxPort_Pin_Config;
# 226 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport.h" 3
static inline __attribute__ ((always_inline)) boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex);
# 241 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport.h" 3
static inline __attribute__ ((always_inline)) void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex);
# 256 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport.h" 3
static inline __attribute__ ((always_inline)) void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex);
# 270 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport.h" 3
static inline __attribute__ ((always_inline)) void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode);
# 285 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport.h" 3
static inline __attribute__ ((always_inline)) void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
# 301 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport.h" 3
static inline __attribute__ ((always_inline)) void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action);
# 316 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport.h" 3
static inline __attribute__ ((always_inline)) void IfxPort_togglePin(Ifx_P *port, uint8 pinIndex);
# 339 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport.h" 3
extern boolean IfxPort_disableEmergencyStop(Ifx_P *port, uint8 pinIndex);
# 357 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport.h" 3
extern boolean IfxPort_enableEmergencyStop(Ifx_P *port, uint8 pinIndex);
# 373 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport.h" 3
extern void IfxPort_setPinMode(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode);
# 388 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport.h" 3
extern void IfxPort_setPinPadDriver(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver padDriver);
# 412 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport.h" 3
static inline __attribute__ ((always_inline)) uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask);
# 431 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport.h" 3
static inline __attribute__ ((always_inline)) void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data);
# 441 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport.h" 3
extern Ifx_P *IfxPort_getAddress(IfxPort_Index port);





extern IfxPort_Index IfxPort_getIndex(Ifx_P *port);
# 463 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport.h" 3
extern void IfxPort_setGroupModeInput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_InputMode mode);
# 480 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport.h" 3
extern void IfxPort_setGroupModeOutput(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_OutputMode mode, IfxPort_OutputIdx index);
# 496 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport.h" 3
extern void IfxPort_setGroupPadDriver(Ifx_P *port, uint8 pinIndex, uint16 mask, IfxPort_PadDriver padDriver);
# 505 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport.h" 3
extern void IfxPort_setPinModeLvdsHigh(Ifx_P *port, uint8 pinIndex, IfxPort_Mode mode, IfxPort_ControlledBy enablePortControlled);
# 514 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport.h" 3
extern void IfxPort_setPinModeLvdsMedium(Ifx_P *port, uint8 pinIndex, IfxPort_PadDriver lvdsPadDriver, IfxPort_PadSupply padSupply);
# 531 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport.h" 3
extern void IfxPort_resetESR(Ifx_P *port, uint8 pinIndex);
# 542 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxport.h" 3
extern void IfxPort_setESR(Ifx_P *port, uint8 pinIndex);





static inline __attribute__ ((always_inline)) uint32 IfxPort_getGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask)
{
    return (uint32)((port->IN.U) >> (pinIndex)) & mask;
}


static inline __attribute__ ((always_inline)) boolean IfxPort_getPinState(Ifx_P *port, uint8 pinIndex)
{
    return (((*(&port->IN.U) & (1U << (pinIndex))) != 0) != 0) ? (1u) : (0u);
}


static inline __attribute__ ((always_inline)) void IfxPort_setGroupState(Ifx_P *port, uint8 pinIndex, uint16 mask, uint16 data)
{
    port->OUT.U = (port->OUT.U & ~((uint32)(mask)) << pinIndex) | (data << pinIndex);
}


static inline __attribute__ ((always_inline)) void IfxPort_setPinHigh(Ifx_P *port, uint8 pinIndex)
{
    IfxPort_setPinState(port, pinIndex, IfxPort_State_high);
}


static inline __attribute__ ((always_inline)) void IfxPort_setPinLow(Ifx_P *port, uint8 pinIndex)
{
    IfxPort_setPinState(port, pinIndex, IfxPort_State_low);
}


static inline __attribute__ ((always_inline)) void IfxPort_setPinModeInput(Ifx_P *port, uint8 pinIndex, IfxPort_InputMode mode)
{
    IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)mode);
}


static inline __attribute__ ((always_inline)) void IfxPort_setPinModeOutput(Ifx_P *port, uint8 pinIndex, IfxPort_OutputMode mode, IfxPort_OutputIdx index)
{
    IfxPort_setPinMode(port, pinIndex, (IfxPort_Mode)(index | mode));
}


static inline __attribute__ ((always_inline)) void IfxPort_setPinState(Ifx_P *port, uint8 pinIndex, IfxPort_State action)
{
    port->OMR.U = action << pinIndex;
}


static inline __attribute__ ((always_inline)) void IfxPort_togglePin(Ifx_P *port, uint8 pinIndex)
{
    IfxPort_setPinState(port, pinIndex, IfxPort_State_toggled);
}
# 51 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscu_pinmap.h" 2 3





typedef const struct
{
    Ifx_SCU* module;
    IfxPort_Pin pin;
    Ifx_RxSel select;
} IfxScu_Evrwup_In;


typedef const struct
{
    Ifx_SCU* module;
    IfxPort_Pin pin;
} IfxScu_Hwcfg_In;


typedef const struct
{
    Ifx_SCU* module;
    uint8 channelId;
    IfxPort_Pin pin;
    Ifx_RxSel select;
} IfxScu_Req_In;


typedef const struct
{
    Ifx_SCU* module;
    IfxPort_Pin pin;
    IfxPort_OutputIdx select;
} IfxScu_Dcdcsync_Out;


typedef const struct
{
    Ifx_SCU* module;
    IfxPort_Pin pin;
    Ifx_RxSel select;
} IfxScu_Emgstop_In;


typedef const struct
{
    Ifx_SCU* module;
    IfxPort_Pin pin;
    IfxPort_OutputIdx select;
} IfxScu_Wdtlck_Out;


typedef const struct
{
    Ifx_SCU* module;
    IfxPort_Pin pin;
    IfxPort_OutputIdx select;
} IfxScu_Extclk_Out;

extern IfxScu_Dcdcsync_Out IfxScu_DCDCSYNC_P32_2_OUT;
extern IfxScu_Dcdcsync_Out IfxScu_DCDCSYNC_P33_13_OUT;
extern IfxScu_Emgstop_In IfxScu_EMGSTOPA_P33_8_IN;
extern IfxScu_Emgstop_In IfxScu_EMGSTOPB_P21_2_IN;
extern IfxScu_Evrwup_In IfxScu_EVRWUPA_P14_1_IN;
extern IfxScu_Evrwup_In IfxScu_EVRWUPB_P15_1_IN;
extern IfxScu_Extclk_Out IfxScu_EXTCLK0_P23_1_OUT;
extern IfxScu_Extclk_Out IfxScu_EXTCLK1_P11_12_OUT;
extern IfxScu_Extclk_Out IfxScu_EXTCLK1_P32_4_OUT;
extern IfxScu_Hwcfg_In IfxScu_HWCFG0DCLDO_P14_6_IN;
extern IfxScu_Hwcfg_In IfxScu_HWCFG1EVR33_P14_5_IN;
extern IfxScu_Hwcfg_In IfxScu_HWCFG2EVR13_P14_2_IN;
extern IfxScu_Hwcfg_In IfxScu_HWCFG3_BMI_P14_3_IN;
extern IfxScu_Hwcfg_In IfxScu_HWCFG4_P10_5_IN;
extern IfxScu_Hwcfg_In IfxScu_HWCFG5_P10_6_IN;
extern IfxScu_Hwcfg_In IfxScu_HWCFG6_P14_4_IN;
extern IfxScu_Req_In IfxScu_REQ0_P15_4_IN;
extern IfxScu_Req_In IfxScu_REQ10_P14_3_IN;
extern IfxScu_Req_In IfxScu_REQ11_P20_9_IN;
extern IfxScu_Req_In IfxScu_REQ12_P11_10_IN;
extern IfxScu_Req_In IfxScu_REQ13_P15_5_IN;
extern IfxScu_Req_In IfxScu_REQ14_P02_1_IN;
extern IfxScu_Req_In IfxScu_REQ15_P14_1_IN;
extern IfxScu_Req_In IfxScu_REQ16_P15_1_IN;
extern IfxScu_Req_In IfxScu_REQ1_P15_8_IN;
extern IfxScu_Req_In IfxScu_REQ2_P10_2_IN;
extern IfxScu_Req_In IfxScu_REQ3_P10_3_IN;
extern IfxScu_Req_In IfxScu_REQ4_P10_7_IN;
extern IfxScu_Req_In IfxScu_REQ5_P10_8_IN;
extern IfxScu_Req_In IfxScu_REQ6_P02_0_IN;
extern IfxScu_Req_In IfxScu_REQ7_P00_4_IN;
extern IfxScu_Req_In IfxScu_REQ8_P33_7_IN;
extern IfxScu_Req_In IfxScu_REQ9_P20_0_IN;
extern IfxScu_Wdtlck_Out IfxScu_WDT0LCK_P20_8_OUT;
extern IfxScu_Wdtlck_Out IfxScu_WDT1LCK_P20_7_OUT;
extern IfxScu_Wdtlck_Out IfxScu_WDT2LCK_P20_6_OUT;
extern IfxScu_Wdtlck_Out IfxScu_WDTSLCK_P20_9_OUT;


#define IFXSCU_PINMAP_NUM_MODULES 1
#define IFXSCU_PINMAP_NUM_REQUESTS 8
#define IFXSCU_PINMAP_DCDCSYNC_OUT_NUM_ITEMS 2
#define IFXSCU_PINMAP_EMGSTOP_IN_NUM_ITEMS 2
#define IFXSCU_PINMAP_EVRWUP_IN_NUM_ITEMS 2
#define IFXSCU_PINMAP_EXTCLK_OUT_NUM_ITEMS 3
#define IFXSCU_PINMAP_HWCFG_IN_NUM_ITEMS 7
#define IFXSCU_PINMAP_REQ_IN_NUM_ITEMS 4
#define IFXSCU_PINMAP_WDTLCK_OUT_NUM_ITEMS 4



extern const IfxScu_Dcdcsync_Out *IfxScu_Dcdcsync_Out_pinTable[1][2];


extern const IfxScu_Emgstop_In *IfxScu_Emgstop_In_pinTable[1][2];


extern const IfxScu_Evrwup_In *IfxScu_Evrwup_In_pinTable[1][2];


extern const IfxScu_Extclk_Out *IfxScu_Extclk_Out_pinTable[1][3];


extern const IfxScu_Hwcfg_In *IfxScu_Hwcfg_In_pinTable[1][7];


extern const IfxScu_Req_In *IfxScu_Req_In_pinTable[1][8][4];


extern const IfxScu_Wdtlck_Out *IfxScu_Wdtlck_Out_pinTable[1][4];
# 131 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuccu.h" 2 3







#define IFXSCUCCU_OSC_STABLECHK_TIME (640)
# 147 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuccu.h" 3
typedef void (*IfxScuCcu_PllStepsFunctionHook)(void);
# 161 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuccu.h" 3
typedef enum
{
    IfxScuCcu_K1divider_1 = 0,
    IfxScuCcu_K1divider_2,
    IfxScuCcu_K1divider_3,
    IfxScuCcu_K1divider_4,
    IfxScuCcu_K1divider_5,
    IfxScuCcu_K1divider_6,
    IfxScuCcu_K1divider_7,
    IfxScuCcu_K1divider_8,
    IfxScuCcu_K1divider_9,
    IfxScuCcu_K1divider_10,
    IfxScuCcu_K1divider_11,
    IfxScuCcu_K1divider_12,
    IfxScuCcu_K1divider_13,
    IfxScuCcu_K1divider_14,
    IfxScuCcu_K1divider_15,
    IfxScuCcu_K1divider_16,
    IfxScuCcu_K1divider_17,
    IfxScuCcu_K1divider_18,
    IfxScuCcu_K1divider_19,
    IfxScuCcu_K1divider_20,
    IfxScuCcu_K1divider_21,
    IfxScuCcu_K1divider_22,
    IfxScuCcu_K1divider_23,
    IfxScuCcu_K1divider_24,
    IfxScuCcu_K1divider_25,
    IfxScuCcu_K1divider_26,
    IfxScuCcu_K1divider_27,
    IfxScuCcu_K1divider_28,
    IfxScuCcu_K1divider_29,
    IfxScuCcu_K1divider_30,
    IfxScuCcu_K1divider_31,
    IfxScuCcu_K1divider_32,
    IfxScuCcu_K1divider_33,
    IfxScuCcu_K1divider_34,
    IfxScuCcu_K1divider_35,
    IfxScuCcu_K1divider_36,
    IfxScuCcu_K1divider_37,
    IfxScuCcu_K1divider_38,
    IfxScuCcu_K1divider_39,
    IfxScuCcu_K1divider_40,
    IfxScuCcu_K1divider_41,
    IfxScuCcu_K1divider_42,
    IfxScuCcu_K1divider_43,
    IfxScuCcu_K1divider_44,
    IfxScuCcu_K1divider_45,
    IfxScuCcu_K1divider_46,
    IfxScuCcu_K1divider_47,
    IfxScuCcu_K1divider_48,
    IfxScuCcu_K1divider_49,
    IfxScuCcu_K1divider_50,
    IfxScuCcu_K1divider_51,
    IfxScuCcu_K1divider_52,
    IfxScuCcu_K1divider_53,
    IfxScuCcu_K1divider_54,
    IfxScuCcu_K1divider_55,
    IfxScuCcu_K1divider_56,
    IfxScuCcu_K1divider_57,
    IfxScuCcu_K1divider_58,
    IfxScuCcu_K1divider_59,
    IfxScuCcu_K1divider_60,
    IfxScuCcu_K1divider_61,
    IfxScuCcu_K1divider_62,
    IfxScuCcu_K1divider_63,
    IfxScuCcu_K1divider_64,
    IfxScuCcu_K1divider_65,
    IfxScuCcu_K1divider_66,
    IfxScuCcu_K1divider_67,
    IfxScuCcu_K1divider_68,
    IfxScuCcu_K1divider_69,
    IfxScuCcu_K1divider_70,
    IfxScuCcu_K1divider_71,
    IfxScuCcu_K1divider_72,
    IfxScuCcu_K1divider_73,
    IfxScuCcu_K1divider_74,
    IfxScuCcu_K1divider_75,
    IfxScuCcu_K1divider_76,
    IfxScuCcu_K1divider_77,
    IfxScuCcu_K1divider_78,
    IfxScuCcu_K1divider_79,
    IfxScuCcu_K1divider_80,
    IfxScuCcu_K1divider_81,
    IfxScuCcu_K1divider_82,
    IfxScuCcu_K1divider_83,
    IfxScuCcu_K1divider_84,
    IfxScuCcu_K1divider_85,
    IfxScuCcu_K1divider_86,
    IfxScuCcu_K1divider_87,
    IfxScuCcu_K1divider_88,
    IfxScuCcu_K1divider_89,
    IfxScuCcu_K1divider_90,
    IfxScuCcu_K1divider_91,
    IfxScuCcu_K1divider_92,
    IfxScuCcu_K1divider_93,
    IfxScuCcu_K1divider_94,
    IfxScuCcu_K1divider_95,
    IfxScuCcu_K1divider_96,
    IfxScuCcu_K1divider_97,
    IfxScuCcu_K1divider_98,
    IfxScuCcu_K1divider_99,
    IfxScuCcu_K1divider_100,
    IfxScuCcu_K1divider_101,
    IfxScuCcu_K1divider_102,
    IfxScuCcu_K1divider_103,
    IfxScuCcu_K1divider_104,
    IfxScuCcu_K1divider_105,
    IfxScuCcu_K1divider_106,
    IfxScuCcu_K1divider_107,
    IfxScuCcu_K1divider_108,
    IfxScuCcu_K1divider_109,
    IfxScuCcu_K1divider_110,
    IfxScuCcu_K1divider_111,
    IfxScuCcu_K1divider_112,
    IfxScuCcu_K1divider_113,
    IfxScuCcu_K1divider_114,
    IfxScuCcu_K1divider_115,
    IfxScuCcu_K1divider_116,
    IfxScuCcu_K1divider_117,
    IfxScuCcu_K1divider_118,
    IfxScuCcu_K1divider_119,
    IfxScuCcu_K1divider_120,
    IfxScuCcu_K1divider_121,
    IfxScuCcu_K1divider_122,
    IfxScuCcu_K1divider_123,
    IfxScuCcu_K1divider_124,
    IfxScuCcu_K1divider_125,
    IfxScuCcu_K1divider_126,
    IfxScuCcu_K1divider_127,
    IfxScuCcu_K1divider_128
} IfxScuCcu_K1divider;



typedef enum
{
    IfxScuCcu_K2divider_1 = 0,
    IfxScuCcu_K2divider_2,
    IfxScuCcu_K2divider_3,
    IfxScuCcu_K2divider_4,
    IfxScuCcu_K2divider_5,
    IfxScuCcu_K2divider_6,
    IfxScuCcu_K2divider_7,
    IfxScuCcu_K2divider_8,
    IfxScuCcu_K2divider_9,
    IfxScuCcu_K2divider_10,
    IfxScuCcu_K2divider_11,
    IfxScuCcu_K2divider_12,
    IfxScuCcu_K2divider_13,
    IfxScuCcu_K2divider_14,
    IfxScuCcu_K2divider_15,
    IfxScuCcu_K2divider_16,
    IfxScuCcu_K2divider_17,
    IfxScuCcu_K2divider_18,
    IfxScuCcu_K2divider_19,
    IfxScuCcu_K2divider_20,
    IfxScuCcu_K2divider_21,
    IfxScuCcu_K2divider_22,
    IfxScuCcu_K2divider_23,
    IfxScuCcu_K2divider_24,
    IfxScuCcu_K2divider_25,
    IfxScuCcu_K2divider_26,
    IfxScuCcu_K2divider_27,
    IfxScuCcu_K2divider_28,
    IfxScuCcu_K2divider_29,
    IfxScuCcu_K2divider_30,
    IfxScuCcu_K2divider_31,
    IfxScuCcu_K2divider_32,
    IfxScuCcu_K2divider_33,
    IfxScuCcu_K2divider_34,
    IfxScuCcu_K2divider_35,
    IfxScuCcu_K2divider_36,
    IfxScuCcu_K2divider_37,
    IfxScuCcu_K2divider_38,
    IfxScuCcu_K2divider_39,
    IfxScuCcu_K2divider_40,
    IfxScuCcu_K2divider_41,
    IfxScuCcu_K2divider_42,
    IfxScuCcu_K2divider_43,
    IfxScuCcu_K2divider_44,
    IfxScuCcu_K2divider_45,
    IfxScuCcu_K2divider_46,
    IfxScuCcu_K2divider_47,
    IfxScuCcu_K2divider_48,
    IfxScuCcu_K2divider_49,
    IfxScuCcu_K2divider_50,
    IfxScuCcu_K2divider_51,
    IfxScuCcu_K2divider_52,
    IfxScuCcu_K2divider_53,
    IfxScuCcu_K2divider_54,
    IfxScuCcu_K2divider_55,
    IfxScuCcu_K2divider_56,
    IfxScuCcu_K2divider_57,
    IfxScuCcu_K2divider_58,
    IfxScuCcu_K2divider_59,
    IfxScuCcu_K2divider_60,
    IfxScuCcu_K2divider_61,
    IfxScuCcu_K2divider_62,
    IfxScuCcu_K2divider_63,
    IfxScuCcu_K2divider_64,
    IfxScuCcu_K2divider_65,
    IfxScuCcu_K2divider_66,
    IfxScuCcu_K2divider_67,
    IfxScuCcu_K2divider_68,
    IfxScuCcu_K2divider_69,
    IfxScuCcu_K2divider_70,
    IfxScuCcu_K2divider_71,
    IfxScuCcu_K2divider_72,
    IfxScuCcu_K2divider_73,
    IfxScuCcu_K2divider_74,
    IfxScuCcu_K2divider_75,
    IfxScuCcu_K2divider_76,
    IfxScuCcu_K2divider_77,
    IfxScuCcu_K2divider_78,
    IfxScuCcu_K2divider_79,
    IfxScuCcu_K2divider_80,
    IfxScuCcu_K2divider_81,
    IfxScuCcu_K2divider_82,
    IfxScuCcu_K2divider_83,
    IfxScuCcu_K2divider_84,
    IfxScuCcu_K2divider_85,
    IfxScuCcu_K2divider_86,
    IfxScuCcu_K2divider_87,
    IfxScuCcu_K2divider_88,
    IfxScuCcu_K2divider_89,
    IfxScuCcu_K2divider_90,
    IfxScuCcu_K2divider_91,
    IfxScuCcu_K2divider_92,
    IfxScuCcu_K2divider_93,
    IfxScuCcu_K2divider_94,
    IfxScuCcu_K2divider_95,
    IfxScuCcu_K2divider_96,
    IfxScuCcu_K2divider_97,
    IfxScuCcu_K2divider_98,
    IfxScuCcu_K2divider_99,
    IfxScuCcu_K2divider_100,
    IfxScuCcu_K2divider_101,
    IfxScuCcu_K2divider_102,
    IfxScuCcu_K2divider_103,
    IfxScuCcu_K2divider_104,
    IfxScuCcu_K2divider_105,
    IfxScuCcu_K2divider_106,
    IfxScuCcu_K2divider_107,
    IfxScuCcu_K2divider_108,
    IfxScuCcu_K2divider_109,
    IfxScuCcu_K2divider_110,
    IfxScuCcu_K2divider_111,
    IfxScuCcu_K2divider_112,
    IfxScuCcu_K2divider_113,
    IfxScuCcu_K2divider_114,
    IfxScuCcu_K2divider_115,
    IfxScuCcu_K2divider_116,
    IfxScuCcu_K2divider_117,
    IfxScuCcu_K2divider_118,
    IfxScuCcu_K2divider_119,
    IfxScuCcu_K2divider_120,
    IfxScuCcu_K2divider_121,
    IfxScuCcu_K2divider_122,
    IfxScuCcu_K2divider_123,
    IfxScuCcu_K2divider_124,
    IfxScuCcu_K2divider_125,
    IfxScuCcu_K2divider_126,
    IfxScuCcu_K2divider_127,
    IfxScuCcu_K2divider_128
} IfxScuCcu_K2divider;



typedef enum
{
    IfxScuCcu_K3divider_1 = 0,
    IfxScuCcu_K3divider_2,
    IfxScuCcu_K3divider_3,
    IfxScuCcu_K3divider_4,
    IfxScuCcu_K3divider_5,
    IfxScuCcu_K3divider_6,
    IfxScuCcu_K3divider_7,
    IfxScuCcu_K3divider_8,
    IfxScuCcu_K3divider_9,
    IfxScuCcu_K3divider_10,
    IfxScuCcu_K3divider_11,
    IfxScuCcu_K3divider_12,
    IfxScuCcu_K3divider_13,
    IfxScuCcu_K3divider_14,
    IfxScuCcu_K3divider_15,
    IfxScuCcu_K3divider_16,
    IfxScuCcu_K3divider_17,
    IfxScuCcu_K3divider_18,
    IfxScuCcu_K3divider_19,
    IfxScuCcu_K3divider_20,
    IfxScuCcu_K3divider_21,
    IfxScuCcu_K3divider_22,
    IfxScuCcu_K3divider_23,
    IfxScuCcu_K3divider_24,
    IfxScuCcu_K3divider_25,
    IfxScuCcu_K3divider_26,
    IfxScuCcu_K3divider_27,
    IfxScuCcu_K3divider_28,
    IfxScuCcu_K3divider_29,
    IfxScuCcu_K3divider_30,
    IfxScuCcu_K3divider_31,
    IfxScuCcu_K3divider_32,
    IfxScuCcu_K3divider_33,
    IfxScuCcu_K3divider_34,
    IfxScuCcu_K3divider_35,
    IfxScuCcu_K3divider_36,
    IfxScuCcu_K3divider_37,
    IfxScuCcu_K3divider_38,
    IfxScuCcu_K3divider_39,
    IfxScuCcu_K3divider_40,
    IfxScuCcu_K3divider_41,
    IfxScuCcu_K3divider_42,
    IfxScuCcu_K3divider_43,
    IfxScuCcu_K3divider_44,
    IfxScuCcu_K3divider_45,
    IfxScuCcu_K3divider_46,
    IfxScuCcu_K3divider_47,
    IfxScuCcu_K3divider_48,
    IfxScuCcu_K3divider_49,
    IfxScuCcu_K3divider_50,
    IfxScuCcu_K3divider_51,
    IfxScuCcu_K3divider_52,
    IfxScuCcu_K3divider_53,
    IfxScuCcu_K3divider_54,
    IfxScuCcu_K3divider_55,
    IfxScuCcu_K3divider_56,
    IfxScuCcu_K3divider_57,
    IfxScuCcu_K3divider_58,
    IfxScuCcu_K3divider_59,
    IfxScuCcu_K3divider_60,
    IfxScuCcu_K3divider_61,
    IfxScuCcu_K3divider_62,
    IfxScuCcu_K3divider_63,
    IfxScuCcu_K3divider_64,
    IfxScuCcu_K3divider_65,
    IfxScuCcu_K3divider_66,
    IfxScuCcu_K3divider_67,
    IfxScuCcu_K3divider_68,
    IfxScuCcu_K3divider_69,
    IfxScuCcu_K3divider_70,
    IfxScuCcu_K3divider_71,
    IfxScuCcu_K3divider_72,
    IfxScuCcu_K3divider_73,
    IfxScuCcu_K3divider_74,
    IfxScuCcu_K3divider_75,
    IfxScuCcu_K3divider_76,
    IfxScuCcu_K3divider_77,
    IfxScuCcu_K3divider_78,
    IfxScuCcu_K3divider_79,
    IfxScuCcu_K3divider_80,
    IfxScuCcu_K3divider_81,
    IfxScuCcu_K3divider_82,
    IfxScuCcu_K3divider_83,
    IfxScuCcu_K3divider_84,
    IfxScuCcu_K3divider_85,
    IfxScuCcu_K3divider_86,
    IfxScuCcu_K3divider_87,
    IfxScuCcu_K3divider_88,
    IfxScuCcu_K3divider_89,
    IfxScuCcu_K3divider_90,
    IfxScuCcu_K3divider_91,
    IfxScuCcu_K3divider_92,
    IfxScuCcu_K3divider_93,
    IfxScuCcu_K3divider_94,
    IfxScuCcu_K3divider_95,
    IfxScuCcu_K3divider_96,
    IfxScuCcu_K3divider_97,
    IfxScuCcu_K3divider_98,
    IfxScuCcu_K3divider_99,
    IfxScuCcu_K3divider_100,
    IfxScuCcu_K3divider_101,
    IfxScuCcu_K3divider_102,
    IfxScuCcu_K3divider_103,
    IfxScuCcu_K3divider_104,
    IfxScuCcu_K3divider_105,
    IfxScuCcu_K3divider_106,
    IfxScuCcu_K3divider_107,
    IfxScuCcu_K3divider_108,
    IfxScuCcu_K3divider_109,
    IfxScuCcu_K3divider_110,
    IfxScuCcu_K3divider_111,
    IfxScuCcu_K3divider_112,
    IfxScuCcu_K3divider_113,
    IfxScuCcu_K3divider_114,
    IfxScuCcu_K3divider_115,
    IfxScuCcu_K3divider_116,
    IfxScuCcu_K3divider_117,
    IfxScuCcu_K3divider_118,
    IfxScuCcu_K3divider_119,
    IfxScuCcu_K3divider_120,
    IfxScuCcu_K3divider_121,
    IfxScuCcu_K3divider_122,
    IfxScuCcu_K3divider_123,
    IfxScuCcu_K3divider_124,
    IfxScuCcu_K3divider_125,
    IfxScuCcu_K3divider_126,
    IfxScuCcu_K3divider_127,
    IfxScuCcu_K3divider_128
} IfxScuCcu_K3divider;



typedef enum
{
    IfxScuCcu_Ndivider_1 = 0,
    IfxScuCcu_Ndivider_2,
    IfxScuCcu_Ndivider_3,
    IfxScuCcu_Ndivider_4,
    IfxScuCcu_Ndivider_5,
    IfxScuCcu_Ndivider_6,
    IfxScuCcu_Ndivider_7,
    IfxScuCcu_Ndivider_8,
    IfxScuCcu_Ndivider_9,
    IfxScuCcu_Ndivider_10,
    IfxScuCcu_Ndivider_11,
    IfxScuCcu_Ndivider_12,
    IfxScuCcu_Ndivider_13,
    IfxScuCcu_Ndivider_14,
    IfxScuCcu_Ndivider_15,
    IfxScuCcu_Ndivider_16,
    IfxScuCcu_Ndivider_17,
    IfxScuCcu_Ndivider_18,
    IfxScuCcu_Ndivider_19,
    IfxScuCcu_Ndivider_20,
    IfxScuCcu_Ndivider_21,
    IfxScuCcu_Ndivider_22,
    IfxScuCcu_Ndivider_23,
    IfxScuCcu_Ndivider_24,
    IfxScuCcu_Ndivider_25,
    IfxScuCcu_Ndivider_26,
    IfxScuCcu_Ndivider_27,
    IfxScuCcu_Ndivider_28,
    IfxScuCcu_Ndivider_29,
    IfxScuCcu_Ndivider_30,
    IfxScuCcu_Ndivider_31,
    IfxScuCcu_Ndivider_32,
    IfxScuCcu_Ndivider_33,
    IfxScuCcu_Ndivider_34,
    IfxScuCcu_Ndivider_35,
    IfxScuCcu_Ndivider_36,
    IfxScuCcu_Ndivider_37,
    IfxScuCcu_Ndivider_38,
    IfxScuCcu_Ndivider_39,
    IfxScuCcu_Ndivider_40,
    IfxScuCcu_Ndivider_41,
    IfxScuCcu_Ndivider_42,
    IfxScuCcu_Ndivider_43,
    IfxScuCcu_Ndivider_44,
    IfxScuCcu_Ndivider_45,
    IfxScuCcu_Ndivider_46,
    IfxScuCcu_Ndivider_47,
    IfxScuCcu_Ndivider_48,
    IfxScuCcu_Ndivider_49,
    IfxScuCcu_Ndivider_50,
    IfxScuCcu_Ndivider_51,
    IfxScuCcu_Ndivider_52,
    IfxScuCcu_Ndivider_53,
    IfxScuCcu_Ndivider_54,
    IfxScuCcu_Ndivider_55,
    IfxScuCcu_Ndivider_56,
    IfxScuCcu_Ndivider_57,
    IfxScuCcu_Ndivider_58,
    IfxScuCcu_Ndivider_59,
    IfxScuCcu_Ndivider_60,
    IfxScuCcu_Ndivider_61,
    IfxScuCcu_Ndivider_62,
    IfxScuCcu_Ndivider_63,
    IfxScuCcu_Ndivider_64,
    IfxScuCcu_Ndivider_65,
    IfxScuCcu_Ndivider_66,
    IfxScuCcu_Ndivider_67,
    IfxScuCcu_Ndivider_68,
    IfxScuCcu_Ndivider_69,
    IfxScuCcu_Ndivider_70,
    IfxScuCcu_Ndivider_71,
    IfxScuCcu_Ndivider_72,
    IfxScuCcu_Ndivider_73,
    IfxScuCcu_Ndivider_74,
    IfxScuCcu_Ndivider_75,
    IfxScuCcu_Ndivider_76,
    IfxScuCcu_Ndivider_77,
    IfxScuCcu_Ndivider_78,
    IfxScuCcu_Ndivider_79,
    IfxScuCcu_Ndivider_80,
    IfxScuCcu_Ndivider_81,
    IfxScuCcu_Ndivider_82,
    IfxScuCcu_Ndivider_83,
    IfxScuCcu_Ndivider_84,
    IfxScuCcu_Ndivider_85,
    IfxScuCcu_Ndivider_86,
    IfxScuCcu_Ndivider_87,
    IfxScuCcu_Ndivider_88,
    IfxScuCcu_Ndivider_89,
    IfxScuCcu_Ndivider_90,
    IfxScuCcu_Ndivider_91,
    IfxScuCcu_Ndivider_92,
    IfxScuCcu_Ndivider_93,
    IfxScuCcu_Ndivider_94,
    IfxScuCcu_Ndivider_95,
    IfxScuCcu_Ndivider_96,
    IfxScuCcu_Ndivider_97,
    IfxScuCcu_Ndivider_98,
    IfxScuCcu_Ndivider_99,
    IfxScuCcu_Ndivider_100,
    IfxScuCcu_Ndivider_101,
    IfxScuCcu_Ndivider_102,
    IfxScuCcu_Ndivider_103,
    IfxScuCcu_Ndivider_104,
    IfxScuCcu_Ndivider_105,
    IfxScuCcu_Ndivider_106,
    IfxScuCcu_Ndivider_107,
    IfxScuCcu_Ndivider_108,
    IfxScuCcu_Ndivider_109,
    IfxScuCcu_Ndivider_110,
    IfxScuCcu_Ndivider_111,
    IfxScuCcu_Ndivider_112,
    IfxScuCcu_Ndivider_113,
    IfxScuCcu_Ndivider_114,
    IfxScuCcu_Ndivider_115,
    IfxScuCcu_Ndivider_116,
    IfxScuCcu_Ndivider_117,
    IfxScuCcu_Ndivider_118,
    IfxScuCcu_Ndivider_119,
    IfxScuCcu_Ndivider_120,
    IfxScuCcu_Ndivider_121,
    IfxScuCcu_Ndivider_122,
    IfxScuCcu_Ndivider_123,
    IfxScuCcu_Ndivider_124,
    IfxScuCcu_Ndivider_125,
    IfxScuCcu_Ndivider_126,
    IfxScuCcu_Ndivider_127,
    IfxScuCcu_Ndivider_128
} IfxScuCcu_Ndivider;



typedef enum
{
    IfxScuCcu_Pdivider_1 = 0,
    IfxScuCcu_Pdivider_2,
    IfxScuCcu_Pdivider_3,
    IfxScuCcu_Pdivider_4,
    IfxScuCcu_Pdivider_5,
    IfxScuCcu_Pdivider_6,
    IfxScuCcu_Pdivider_7,
    IfxScuCcu_Pdivider_8,
    IfxScuCcu_Pdivider_9,
    IfxScuCcu_Pdivider_10,
    IfxScuCcu_Pdivider_11,
    IfxScuCcu_Pdivider_12,
    IfxScuCcu_Pdivider_13,
    IfxScuCcu_Pdivider_14,
    IfxScuCcu_Pdivider_15,
    IfxScuCcu_Pdivider_16
} IfxScuCcu_Pdivider;





typedef enum
{
    IfxScuCcu_Clk0Mode_normal = 1,
    IfxScuCcu_Clk0Mode_fractional = 2
} IfxScuCcu_Clk0Mode;



typedef enum
{
    IfxScuCcu_Clk1Negation_inverted = 0,
    IfxScuCcu_Clk1Negation_Clk1Negation = 1
} IfxScuCcu_Clk1Negation;



typedef enum
{
    IfxScuCcu_ClkSel0_fOUT = 0,
    IfxScuCcu_ClkSel0_fPLL = 1,
    IfxScuCcu_ClkSel0_fPLLERAY = 2,
    IfxScuCcu_ClkSel0_fOSC0 = 3,
    IfxScuCcu_ClkSel0_fBACK = 4,
    IfxScuCcu_ClkSel0_fETH = 5,
    IfxScuCcu_ClkSel0_fBBB = 6,
    IfxScuCcu_ClkSel0_fBAUD1 = 7,
    IfxScuCcu_ClkSel0_fSRI = 8,
    IfxScuCcu_ClkSel0_fSPB = 9,
    IfxScuCcu_ClkSel0_fFSI = 10,
    IfxScuCcu_ClkSel0_fSTM = 11,
    IfxScuCcu_ClkSel0_fGTM = 12,
    IfxScuCcu_ClkSel0_fTCK = 13,
    IfxScuCcu_ClkSel0_fBAUD2 = 14,
    IfxScuCcu_ClkSel0_fMT0 = 15
} IfxScuCcu_ClkSel0;



typedef enum
{
    IfxScuCcu_ClkSel1_fOUT = 0,
    IfxScuCcu_ClkSel1_fPLL = 1,
    IfxScuCcu_ClkSel1_fPLLERAY = 2,
    IfxScuCcu_ClkSel1_fOSC0 = 3,
    IfxScuCcu_ClkSel1_fBACK = 4,
    IfxScuCcu_ClkSel1_fETH = 5,
    IfxScuCcu_ClkSel1_fBBB = 6,
    IfxScuCcu_ClkSel1_fASLINF = 7,
    IfxScuCcu_ClkSel1_fSRI = 8,
    IfxScuCcu_ClkSel1_fSPB = 9,
    IfxScuCcu_ClkSel1_fFSI2 = 10,
    IfxScuCcu_ClkSel1_fCAN = 11,
    IfxScuCcu_ClkSel1_fERAY = 12,
    IfxScuCcu_ClkSel1_fTCK = 13,
    IfxScuCcu_ClkSel1_fASCLINS = 14,
    IfxScuCcu_ClkSel1_fOSCFL = 15
} IfxScuCcu_ClkSel1;
# 787 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuccu.h" 3
typedef struct
{
    uint32 value;
    uint32 mask;
} IfxScuCcu_CcuconRegConfig;




typedef struct
{
    uint8 pDivider;
    uint8 nDivider;
    uint8 k2Initial;
    float32 waitTime;
} IfxScuCcu_InitialStepConfig;



typedef struct
{
    uint8 k2Step;
    float32 waitTime;
    IfxScuCcu_PllStepsFunctionHook hookFunction;
} IfxScuCcu_PllStepsConfig;







typedef struct
{
    IfxScuCcu_CcuconRegConfig ccucon0;
    IfxScuCcu_CcuconRegConfig ccucon1;
    IfxScuCcu_CcuconRegConfig ccucon2;
    IfxScuCcu_CcuconRegConfig ccucon5;
    IfxScuCcu_CcuconRegConfig ccucon6;
    IfxScuCcu_CcuconRegConfig ccucon7;
    IfxScuCcu_CcuconRegConfig ccucon8;
} IfxScuCcu_ClockDistributionConfig;



typedef struct
{
    uint32 value;
    uint32 mask;
} IfxScuCcu_FlashWaitstateConfig;




typedef struct
{
    uint8 numOfPllDividerSteps;
    IfxScuCcu_PllStepsConfig *pllDividerStep;
    IfxScuCcu_InitialStepConfig pllInitialStep;
} IfxScuCcu_SysPllConfig;







typedef struct
{
    IfxScuCcu_SysPllConfig sysPll;
    IfxScuCcu_ClockDistributionConfig clockDistribution;
    IfxScuCcu_FlashWaitstateConfig flashFconWaitStateConfig;
    uint32 xtalFrequency;
} IfxScuCcu_Config;



typedef struct
{
    IfxScuCcu_InitialStepConfig pllInitialStep;
} IfxScuCcu_ErayPllConfig;
# 882 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuccu.h" 3
static inline __attribute__ ((always_inline)) float32 IfxScuCcu_getEvrFrequency(void);





static inline __attribute__ ((always_inline)) float32 IfxScuCcu_getPll2ErayFrequency(void);





static inline __attribute__ ((always_inline)) float32 IfxScuCcu_getPll2Frequency(void);




static inline __attribute__ ((always_inline)) IfxScu_CCUCON0_CLKSEL IfxScuCcu_getSourceSelection(void);





static inline __attribute__ ((always_inline)) float32 IfxScuCcu_getStmFrequency(void);





static inline __attribute__ ((always_inline)) float32 IfxScuCcu_getCanFrequency(void);
# 921 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuccu.h" 3
extern float32 IfxScuCcu_getBaud1Frequency(void);





extern float32 IfxScuCcu_getBaud2Frequency(void);





extern float32 IfxScuCcu_getBbbFrequency(void);





extern float32 IfxScuCcu_getCpuFrequency(const IfxCpu_ResourceCpu cpu);





extern float32 IfxScuCcu_getFsi2Frequency(void);





extern float32 IfxScuCcu_getFsiFrequency(void);





extern float32 IfxScuCcu_getMaxFrequency(void);





extern float32 IfxScuCcu_getModuleFrequency(void);





extern float32 IfxScuCcu_getOsc0Frequency(void);





extern float32 IfxScuCcu_getOscFrequency(void);





extern float32 IfxScuCcu_getPllErayFrequency(void);





extern float32 IfxScuCcu_getPllErayVcoFrequency(void);





extern float32 IfxScuCcu_getPllFrequency(void);





extern float32 IfxScuCcu_getPllVcoFrequency(void);





extern float32 IfxScuCcu_getSourceFrequency(void);





extern float32 IfxScuCcu_getSpbFrequency(void);





extern float32 IfxScuCcu_getSriFrequency(void);







extern float32 IfxScuCcu_setCpuFrequency(IfxCpu_ResourceCpu cpu, float32 cpuFreq);






extern float32 IfxScuCcu_setPll2ErayFrequency(float32 pll2ErayFreq);






extern float32 IfxScuCcu_setPll2Frequency(float32 pll2Freq);






extern float32 IfxScuCcu_setSpbFrequency(float32 spbFreq);






extern float32 IfxScuCcu_setSriFrequency(float32 sriFreq);
# 1069 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuccu.h" 3
extern boolean IfxScuCcu_calculateSysPllDividers(IfxScuCcu_Config *cfg, uint32 fPll);
# 1078 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuccu.h" 3
extern boolean IfxScuCcu_init(const IfxScuCcu_Config *cfg);





extern void IfxScuCcu_initConfig(IfxScuCcu_Config *cfg);
# 1093 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuccu.h" 3
extern boolean IfxScuCcu_initErayPll(const IfxScuCcu_ErayPllConfig *cfg);





extern void IfxScuCcu_initErayPllConfig(IfxScuCcu_ErayPllConfig *cfg);





extern void IfxScuCcu_switchToBackupClock(const IfxScuCcu_Config *cfg);
# 1118 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuccu.h" 3
static inline __attribute__ ((always_inline)) float32 IfxScuCcu_getGtmFrequency(void);
# 1129 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxscuccu.h" 3
extern float32 IfxScuCcu_setGtmFrequency(float32 gtmFreq);







extern void IfxScuCcu_enableExtClockOut0(IfxScuCcu_ClkSel0 Clk_Sel, const uint32 freqHz, IfxScuCcu_Clk0Mode mode);







extern void IfxScuCcu_enableExtClockOut1(IfxScuCcu_ClkSel1 Clk_Sel, const uint32 freqHz, IfxScuCcu_Clk1Negation sel);







extern const IfxScuCcu_Config IfxScuCcu_defaultClockConfig;




extern const IfxScuCcu_ErayPllConfig IfxScuCcu_defaultErayPllConfig;





static inline __attribute__ ((always_inline)) float32 IfxScuCcu_getEvrFrequency(void)
{
    return (100000000.0);
}


static inline __attribute__ ((always_inline)) float32 IfxScuCcu_getGtmFrequency(void)
{
    return IfxScuCcu_getSourceFrequency() / (*(volatile Ifx_SCU_CCUCON1*)0xF0036034u).B.GTMDIV;
}


static inline __attribute__ ((always_inline)) float32 IfxScuCcu_getPll2ErayFrequency(void)
{
    float32 pll2ErayFrequency;

    pll2ErayFrequency = IfxScuCcu_getPllErayVcoFrequency() / ((*(volatile Ifx_SCU_PLLERAYCON1*)0xF003602Cu).B.K3DIV + 1);

    return pll2ErayFrequency;
}


static inline __attribute__ ((always_inline)) float32 IfxScuCcu_getPll2Frequency(void)
{
    float32 pll2Frequency;
    pll2Frequency = IfxScuCcu_getPllVcoFrequency() / ((*(volatile Ifx_SCU_PLLCON1*)0xF003601Cu).B.K3DIV + 1);

    return pll2Frequency;
}


static inline __attribute__ ((always_inline)) IfxScu_CCUCON0_CLKSEL IfxScuCcu_getSourceSelection(void)
{
    return (IfxScu_CCUCON0_CLKSEL)(*(volatile Ifx_SCU_CCUCON0*)0xF0036030u).B.CLKSEL;
}


static inline __attribute__ ((always_inline)) float32 IfxScuCcu_getStmFrequency(void)
{
    return IfxScuCcu_getSourceFrequency() / (*(volatile Ifx_SCU_CCUCON1*)0xF0036034u).B.STMDIV;
}


static inline __attribute__ ((always_inline)) float32 IfxScuCcu_getCanFrequency(void)
{
    float32 canFrequency;
    float32 sourceFrequency;

    sourceFrequency = IfxScuCcu_getSourceFrequency();

    if ((*(volatile Ifx_SCU_CCUCON1*)0xF0036034u).B.CANDIV == 0)
    {
        canFrequency = 0.0f;
    }
    else
    {
        canFrequency = sourceFrequency / (*(volatile Ifx_SCU_CCUCON1*)0xF0036034u).B.CANDIV;
    }

    return canFrequency;
}
# 77 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 2 3
# 92 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 3
#define IFXCPU_GLB_ADDR_DSPR(cpu,address) ((((((unsigned)(address) & 0xF0000000) == 0xD0000000) ? ((((unsigned)(address) & 0x000fffff) | 0x70000000) - ((cpu) * 0x10000000)) : (unsigned)(address))))
# 105 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 3
#define IFXCPU_GLB_ADDR_PSPR(cpu,address) ((((unsigned)(address) & 0x000fffff) | 0x70100000) - ((cpu) * 0x10000000))







typedef unsigned int IfxCpu_spinLock;



typedef unsigned int IfxCpu_mutexLock;



typedef unsigned int IfxCpu_syncEvent;
# 131 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 3
typedef enum
{
    IfxCpu_CoreMode_halt,
    IfxCpu_CoreMode_run,
    IfxCpu_CoreMode_idle,
    IfxCpu_CoreMode_sleep,
    IfxCpu_CoreMode_stby,
    IfxCpu_CoreMode_unknown
} IfxCpu_CoreMode;



typedef enum
{
    IfxCpu_CounterMode_normal = 0,
    IfxCpu_CounterMode_task = 1
} IfxCpu_CounterMode;
# 159 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 3
typedef struct
{
    uint32 counter;
    boolean overlfow;
} IfxCpu_Counter;







typedef struct
{
    IfxCpu_Counter instruction;
    IfxCpu_Counter clock;
    IfxCpu_Counter counter1;
    IfxCpu_Counter counter2;
    IfxCpu_Counter counter3;
} IfxCpu_Perf;
# 193 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 3
static inline __attribute__ ((always_inline)) Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu);






static inline __attribute__ ((always_inline)) IfxCpu_Id IfxCpu_getCoreId(void);





static inline __attribute__ ((always_inline)) IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void);
# 216 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 3
static inline __attribute__ ((always_inline)) void IfxCpu_initCSA(uint32 *csaBegin, uint32 *csaEnd);




static inline __attribute__ ((always_inline)) void IfxCpu_setSafetyTaskIdentifier(boolean safetyId);




static inline __attribute__ ((always_inline)) void IfxCpu_triggerSwReset(void);
# 236 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 3
extern IfxCpu_CoreMode IfxCpu_getCoreMode(Ifx_CPU *cpu);





extern IfxCpu_ResourceCpu IfxCpu_getIndex(Ifx_CPU *cpu);
# 251 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 3
extern boolean IfxCpu_setCoreMode(Ifx_CPU *cpu, IfxCpu_CoreMode mode);
# 260 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 3
extern boolean IfxCpu_setProgramCounter(Ifx_CPU *cpu, uint32 programCounter);
# 269 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 3
extern boolean IfxCpu_startCore(Ifx_CPU *cpu, uint32 programCounter);
# 286 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 3
static inline __attribute__ ((always_inline)) boolean IfxCpu_areInterruptsEnabled(void);
# 296 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 3
static inline __attribute__ ((always_inline)) boolean IfxCpu_disableInterrupts(void);





static inline __attribute__ ((always_inline)) void IfxCpu_enableInterrupts(void);




static inline __attribute__ ((always_inline)) void IfxCpu_forceDisableInterrupts(void);
# 316 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 3
static inline __attribute__ ((always_inline)) void IfxCpu_restoreInterrupts(boolean enabled);
# 334 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 3
static inline __attribute__ ((always_inline)) void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable);
# 343 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 3
static inline __attribute__ ((always_inline)) void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable);




static inline __attribute__ ((always_inline)) void IfxCpu_invalidateProgramCache(void);





static inline __attribute__ ((always_inline)) boolean IfxCpu_isAddressCachable(void *address);
# 365 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 3
static inline __attribute__ ((always_inline)) void IfxCpu_setDataCache(boolean enable);
# 376 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 3
static inline __attribute__ ((always_inline)) void IfxCpu_setProgramCache(boolean enable);
# 393 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 3
static inline __attribute__ ((always_inline)) uint32 IfxCpu_getClockCounter(void);
# 406 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 3
static inline __attribute__ ((always_inline)) boolean IfxCpu_getClockCounterStickyOverflow(void);







static inline __attribute__ ((always_inline)) uint32 IfxCpu_getInstructionCounter(void);
# 427 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 3
static inline __attribute__ ((always_inline)) boolean IfxCpu_getInstructionCounterStickyOverflow(void);





static inline __attribute__ ((always_inline)) uint32 IfxCpu_getPerformanceCounter(uint16 address);






static inline __attribute__ ((always_inline)) boolean IfxCpu_getPerformanceCounterStickyOverflow(uint16 address);







static inline __attribute__ ((always_inline)) void IfxCpu_resetAndStartCounters(IfxCpu_CounterMode mode);
# 459 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 3
static inline __attribute__ ((always_inline)) void IfxCpu_setPerformanceCountersEnableBit(uint32 enable);
# 468 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 3
static inline __attribute__ ((always_inline)) IfxCpu_Perf IfxCpu_stopCounters(void);
# 478 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 3
static inline __attribute__ ((always_inline)) void IfxCpu_updateClockCounter(uint32 count);
# 487 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 3
static inline __attribute__ ((always_inline)) void IfxCpu_updateInstructionCounter(uint32 count);







static inline __attribute__ ((always_inline)) void IfxCpu_updatePerformanceCounter(uint32 address, uint32 count);
# 522 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 3
extern boolean IfxCpu_acquireMutex(IfxCpu_mutexLock *lock);
# 540 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 3
extern void IfxCpu_releaseMutex(IfxCpu_mutexLock *lock);







extern void IfxCpu_resetSpinLock(IfxCpu_spinLock *lock);
# 567 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 3
extern boolean IfxCpu_setSpinLock(IfxCpu_spinLock *lock, uint32 timeoutCount);
# 582 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 3
extern uint32 IfxCpu_getRandomValue(uint32 *seed);







extern uint32 IfxCpu_getRandomValueWithinRange(uint32 *seed, uint32 min, uint32 max);
# 633 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 3
extern boolean IfxCpu_waitEvent(IfxCpu_syncEvent *event, uint32 timeoutMilliSec);
# 642 "c:\\hightec\\toolchains\\tricore\\v4.9.3.0-infineon-1.0\\tricore\\include\\tc27xd\\ifxcpu.h" 3
extern void IfxCpu_emitEvent(IfxCpu_syncEvent *event);







static inline __attribute__ ((always_inline)) boolean IfxCpu_areInterruptsEnabled(void)
{
    Ifx_CPU_ICR reg;
    reg.U = (__extension__({ unsigned __res; __asm__ volatile ("mfcr %0, LO:" "0xFE2C" : "=d" (__res) :: "memory"); __res; }));
    return reg.B.IE != 0;
}


static inline __attribute__ ((always_inline)) boolean IfxCpu_disableInterrupts(void)
{
    boolean enabled;
    enabled = IfxCpu_areInterruptsEnabled();
    __asm__ volatile ("disable" : : : "memory");
    Ifx__nop();
    return enabled;
}


static inline __attribute__ ((always_inline)) void IfxCpu_enableInterrupts(void)
{
    __asm__ volatile ("enable" : : : "memory");
}


static inline __attribute__ ((always_inline)) void IfxCpu_enableSegmentSpecificDataAccessCacheability(uint16 segmentNumberMask, boolean enable)
{
    uint32 cpu_pmaVal;
    uint16 checkRestrictionMask;
    uint32 coreIndex = IfxCpu_getCoreIndex();
    uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&(*(Ifx_SCU*)0xF0036000u).WDTCPU[coreIndex]);



    checkRestrictionMask = ((uint16)1 << (7 - coreIndex)) | ((uint16)1 << 0xC);

    if ((segmentNumberMask & checkRestrictionMask) != 0)
    {
        segmentNumberMask |= checkRestrictionMask;
    }

    cpu_pmaVal = (__extension__({ unsigned __res; __asm__ volatile ("mfcr %0, LO:" "0x8100" : "=d" (__res) :: "memory"); __res; }));

    cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask);


    IfxScuWdt_clearCpuEndinitInline(&(*(Ifx_SCU*)0xF0036000u).WDTCPU[coreIndex], wdtPassword);


    Ifx__dsync();
    do { unsigned __newval = (unsigned) (cpu_pmaVal); __asm__ volatile ("mtcr LO:" "0x8100" ", %0" :: "d" (__newval) : "memory"); } while (0);
    Ifx__isync();
    IfxScuWdt_setCpuEndinitInline(&(*(Ifx_SCU*)0xF0036000u).WDTCPU[coreIndex], wdtPassword);
}


static inline __attribute__ ((always_inline)) void IfxCpu_enableSegmentSpecificInstructionAccessCacheability(uint16 segmentNumberMask, boolean enable)
{
    uint32 cpu_pmaVal;
    uint16 checkRestrictionMask;
    uint32 coreIndex = IfxCpu_getCoreIndex();
    uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&(*(Ifx_SCU*)0xF0036000u).WDTCPU[coreIndex]);



    checkRestrictionMask = ((uint16)1 << (7 - coreIndex)) | ((uint16)1 << 0xD);

    if ((segmentNumberMask & checkRestrictionMask) != 0)
    {
        segmentNumberMask |= checkRestrictionMask;
    }

    cpu_pmaVal = (__extension__({ unsigned __res; __asm__ volatile ("mfcr %0, LO:" "0x8104" : "=d" (__res) :: "memory"); __res; }));

    cpu_pmaVal = enable ? (cpu_pmaVal | segmentNumberMask) : (cpu_pmaVal & ~segmentNumberMask);


    IfxScuWdt_clearCpuEndinitInline(&(*(Ifx_SCU*)0xF0036000u).WDTCPU[coreIndex], wdtPassword);


    Ifx__dsync();
    do { unsigned __newval = (unsigned) (cpu_pmaVal); __asm__ volatile ("mtcr LO:" "0x8104" ", %0" :: "d" (__newval) : "memory"); } while (0);
    Ifx__isync();
    IfxScuWdt_setCpuEndinitInline(&(*(Ifx_SCU*)0xF0036000u).WDTCPU[coreIndex], wdtPassword);
}


static inline __attribute__ ((always_inline)) void IfxCpu_forceDisableInterrupts(void)
{
    __asm__ volatile ("disable" : : : "memory");
    Ifx__nop();
}


static inline __attribute__ ((always_inline)) Ifx_CPU *IfxCpu_getAddress(IfxCpu_ResourceCpu cpu)
{
    Ifx_CPU *module;

    if (cpu < IfxCpu_ResourceCpu_none)
    {
        module = (Ifx_CPU *)IfxCpu_cfg_indexMap[cpu].module;
    }
    else
    {
        module = ((void *)0);
    }

    return module;
}


static inline __attribute__ ((always_inline)) uint32 IfxCpu_getClockCounter(void)
{
    return IfxCpu_getPerformanceCounter(0xFC04);
}


static inline __attribute__ ((always_inline)) boolean IfxCpu_getClockCounterStickyOverflow(void)
{
    return IfxCpu_getPerformanceCounterStickyOverflow(0xFC04);
}


static inline __attribute__ ((always_inline)) IfxCpu_Id IfxCpu_getCoreId(void)
{
    Ifx_CPU_CORE_ID reg;
    reg.U = (__extension__({ unsigned __res; __asm__ volatile ("mfcr %0, LO:" "0xFE1C" : "=d" (__res) :: "memory"); __res; }));
    return (IfxCpu_Id)reg.B.CORE_ID;
}


static inline __attribute__ ((always_inline)) IfxCpu_ResourceCpu IfxCpu_getCoreIndex(void)
{
    Ifx_CPU_CORE_ID reg;
    reg.U = (__extension__({ unsigned __res; __asm__ volatile ("mfcr %0, LO:" "0xFE1C" : "=d" (__res) :: "memory"); __res; }));
    return (IfxCpu_ResourceCpu)reg.B.CORE_ID;
}


static inline __attribute__ ((always_inline)) uint32 IfxCpu_getInstructionCounter(void)
{
    return IfxCpu_getPerformanceCounter(0xFC08);
}


static inline __attribute__ ((always_inline)) boolean IfxCpu_getInstructionCounterStickyOverflow(void)
{
    return IfxCpu_getPerformanceCounterStickyOverflow(0xFC08);
}


static inline __attribute__ ((always_inline)) uint32 IfxCpu_getPerformanceCounter(uint16 address)
{
    Ifx_CPU_CCNT ccnt;

    if (address == 0xFC04)
    {
        ccnt.U = (__extension__({ unsigned __res; __asm__ volatile ("mfcr %0, LO:" "0xFC04" : "=d" (__res) :: "memory"); __res; }));
    }
    else if (address == 0xFC08)
    {
        ccnt.U = (__extension__({ unsigned __res; __asm__ volatile ("mfcr %0, LO:" "0xFC08" : "=d" (__res) :: "memory"); __res; }));
    }
    else if (address == 0xFC0C)
    {
        ccnt.U = (__extension__({ unsigned __res; __asm__ volatile ("mfcr %0, LO:" "0xFC0C" : "=d" (__res) :: "memory"); __res; }));
    }
    else if (address == 0xFC10)
    {
        ccnt.U = (__extension__({ unsigned __res; __asm__ volatile ("mfcr %0, LO:" "0xFC10" : "=d" (__res) :: "memory"); __res; }));
    }
    else if (address == 0xFC14)
    {
        ccnt.U = (__extension__({ unsigned __res; __asm__ volatile ("mfcr %0, LO:" "0xFC14" : "=d" (__res) :: "memory"); __res; }));
    }

    return ccnt.B.CountValue;
}


static inline __attribute__ ((always_inline)) boolean IfxCpu_getPerformanceCounterStickyOverflow(uint16 address)
{
    Ifx_CPU_CCNT ccnt;

    if (address == 0xFC04)
    {
        ccnt.U = (__extension__({ unsigned __res; __asm__ volatile ("mfcr %0, LO:" "0xFC04" : "=d" (__res) :: "memory"); __res; }));
    }
    else if (address == 0xFC08)
    {
        ccnt.U = (__extension__({ unsigned __res; __asm__ volatile ("mfcr %0, LO:" "0xFC08" : "=d" (__res) :: "memory"); __res; }));
    }
    else if (address == 0xFC0C)
    {
        ccnt.U = (__extension__({ unsigned __res; __asm__ volatile ("mfcr %0, LO:" "0xFC0C" : "=d" (__res) :: "memory"); __res; }));
    }
    else if (address == 0xFC10)
    {
        ccnt.U = (__extension__({ unsigned __res; __asm__ volatile ("mfcr %0, LO:" "0xFC10" : "=d" (__res) :: "memory"); __res; }));
    }
    else if (address == 0xFC14)
    {
        ccnt.U = (__extension__({ unsigned __res; __asm__ volatile ("mfcr %0, LO:" "0xFC14" : "=d" (__res) :: "memory"); __res; }));
    }

    return ccnt.B.SOvf;
}


static inline __attribute__ ((always_inline)) void IfxCpu_initCSA(uint32 *csaBegin, uint32 *csaEnd)
{
    uint32 k;
    uint32 nxt_cxi_val = 0U;
    uint32 *prvCsa = csaBegin;
    uint32 *nxtCsa = csaBegin;
    uint32 numOfCsa = (((uint32)csaEnd - (uint32)csaBegin) / 64U);

    for (k = 0U; k < numOfCsa; k++)
    {
        nxt_cxi_val = ((uint32)nxtCsa & (0XFU << 28U)) >> 12U | ((uint32)nxtCsa & (0XFFFFU << 6U)) >> 6U;

        if (k == 0U)
        {
            do { unsigned __newval = (unsigned) (nxt_cxi_val); __asm__ volatile ("mtcr LO:" "0xFE38" ", %0" :: "d" (__newval) : "memory"); } while (0);
        }
        else
        {
            *prvCsa = nxt_cxi_val;
        }

        if (k == (numOfCsa - 3U))
        {
            do { unsigned __newval = (unsigned) (nxt_cxi_val); __asm__ volatile ("mtcr LO:" "0xFE3C" ", %0" :: "d" (__newval) : "memory"); } while (0);
        }

        prvCsa = (uint32 *)nxtCsa;
        nxtCsa += 16U;
    }

    *prvCsa = 0U;
}


static inline __attribute__ ((always_inline)) void IfxCpu_invalidateProgramCache(void)
{
    uint16 cpuWdtPassword = IfxScuWdt_getCpuWatchdogPassword();
    {
        IfxScuWdt_clearCpuEndinit(cpuWdtPassword);
        Ifx_CPU_PCON1 pcon1;
        pcon1.U = (__extension__({ unsigned __res; __asm__ volatile ("mfcr %0, LO:" "0x9204" : "=d" (__res) :: "memory"); __res; }));
        pcon1.B.PCINV = 1;
        do { unsigned __newval = (unsigned) (pcon1.U); __asm__ volatile ("mtcr LO:" "0x9204" ", %0" :: "d" (__newval) : "memory"); } while (0);
        IfxScuWdt_setCpuEndinit(cpuWdtPassword);
    }
}


static inline __attribute__ ((always_inline)) boolean IfxCpu_isAddressCachable(void *address)
{
    uint8 segment = (uint32)address >> 24;
    return ((segment == (8)) || (segment == (9))) ? (1u) : (0u);
}


static inline __attribute__ ((always_inline)) void IfxCpu_resetAndStartCounters(IfxCpu_CounterMode mode)
{
    Ifx_CPU_CCTRL cctrl;
    cctrl.U = (__extension__({ unsigned __res; __asm__ volatile ("mfcr %0, LO:" "0xFC00" : "=d" (__res) :: "memory"); __res; }));

    cctrl.B.CE = 0;
    do { unsigned __newval = (unsigned) (cctrl.U); __asm__ volatile ("mtcr LO:" "0xFC00" ", %0" :: "d" (__newval) : "memory"); } while (0);


    do { unsigned __newval = (unsigned) (0); __asm__ volatile ("mtcr LO:" "0xFC04" ", %0" :: "d" (__newval) : "memory"); } while (0);
    do { unsigned __newval = (unsigned) (0); __asm__ volatile ("mtcr LO:" "0xFC08" ", %0" :: "d" (__newval) : "memory"); } while (0);
    do { unsigned __newval = (unsigned) (0); __asm__ volatile ("mtcr LO:" "0xFC0C" ", %0" :: "d" (__newval) : "memory"); } while (0);
    do { unsigned __newval = (unsigned) (0); __asm__ volatile ("mtcr LO:" "0xFC10" ", %0" :: "d" (__newval) : "memory"); } while (0);
    do { unsigned __newval = (unsigned) (0); __asm__ volatile ("mtcr LO:" "0xFC14" ", %0" :: "d" (__newval) : "memory"); } while (0);


    cctrl.B.CE = 1;
    cctrl.B.CM = mode;
    do { unsigned __newval = (unsigned) (cctrl.U); __asm__ volatile ("mtcr LO:" "0xFC00" ", %0" :: "d" (__newval) : "memory"); } while (0);
}


static inline __attribute__ ((always_inline)) void IfxCpu_restoreInterrupts(boolean enabled)
{
    if (enabled != (0u))
    {
        __asm__ volatile ("enable" : : : "memory");
    }
}


static inline __attribute__ ((always_inline)) void IfxCpu_setDataCache(boolean enable)
{
    uint32 coreIndex = IfxCpu_getCoreIndex();
    uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&(*(Ifx_SCU*)0xF0036000u).WDTCPU[coreIndex]);

    {
        IfxScuWdt_clearCpuEndinitInline(&(*(Ifx_SCU*)0xF0036000u).WDTCPU[coreIndex], wdtPassword);
        Ifx_CPU_DCON0 dcon0;
        dcon0.U = 0;
        dcon0.B.DCBYP = enable ? 0 : 1;
        do { unsigned __newval = (unsigned) (dcon0.U); __asm__ volatile ("mtcr LO:" "0x9040" ", %0" :: "d" (__newval) : "memory"); } while (0);
        IfxScuWdt_setCpuEndinitInline(&(*(Ifx_SCU*)0xF0036000u).WDTCPU[coreIndex], wdtPassword);
    }

    Ifx__isync();
}


static inline __attribute__ ((always_inline)) void IfxCpu_setPerformanceCountersEnableBit(uint32 enable)
{
    Ifx_CPU_CCTRL cctrl;
    cctrl.U = (__extension__({ unsigned __res; __asm__ volatile ("mfcr %0, LO:" "0xFC00" : "=d" (__res) :: "memory"); __res; }));
    cctrl.B.CE = enable;
    do { unsigned __newval = (unsigned) (cctrl.U); __asm__ volatile ("mtcr LO:" "0xFC00" ", %0" :: "d" (__newval) : "memory"); } while (0);
}


static inline __attribute__ ((always_inline)) void IfxCpu_setProgramCache(boolean enable)
{
    if (enable)
    {
        Ifx_CPU_PCON1 pcon1;
        pcon1.U = 0;
        pcon1.B.PCINV = 1;
        do { unsigned __newval = (unsigned) (pcon1.U); __asm__ volatile ("mtcr LO:" "0x9204" ", %0" :: "d" (__newval) : "memory"); } while (0);
    }

    uint32 coreIndex = IfxCpu_getCoreIndex();
    uint16 wdtPassword = IfxScuWdt_getCpuWatchdogPasswordInline(&(*(Ifx_SCU*)0xF0036000u).WDTCPU[coreIndex]);

    {
        IfxScuWdt_clearCpuEndinitInline(&(*(Ifx_SCU*)0xF0036000u).WDTCPU[coreIndex], wdtPassword);
        Ifx_CPU_PCON0 pcon0;
        pcon0.U = 0;
        pcon0.B.PCBYP = enable ? 0 : 1;
        do { unsigned __newval = (unsigned) (pcon0.U); __asm__ volatile ("mtcr LO:" "0x920C" ", %0" :: "d" (__newval) : "memory"); } while (0);
        IfxScuWdt_setCpuEndinitInline(&(*(Ifx_SCU*)0xF0036000u).WDTCPU[coreIndex], wdtPassword);
    }

    Ifx__isync();
}


static inline __attribute__ ((always_inline)) void IfxCpu_setSafetyTaskIdentifier(boolean safetyId)
{
    Ifx_CPU_PSW psw;
    ((void)0);
    psw.U = (__extension__({ unsigned __res; __asm__ volatile ("mfcr %0, LO:" "0xFE04" : "=d" (__res) :: "memory"); __res; }));
    psw.B.S = safetyId;
    do { unsigned __newval = (unsigned) ((uint32)psw.U); __asm__ volatile ("mtcr LO:" "0xFE04" ", %0" :: "d" (__newval) : "memory"); } while (0);
}



static inline __attribute__ ((always_inline)) IfxCpu_Perf IfxCpu_stopCounters(void)
{
    IfxCpu_Perf result;


    Ifx__stopPerfCounters();

    Ifx_CPU_CCNT ccnt;
    ccnt.U = (__extension__({ unsigned __res; __asm__ volatile ("mfcr %0, LO:" "0xFC04" : "=d" (__res) :: "memory"); __res; }));
    result.clock.counter = ccnt.B.CountValue;
    result.clock.overlfow = ccnt.B.SOvf;

    Ifx_CPU_ICNT icnt;
    icnt.U = (__extension__({ unsigned __res; __asm__ volatile ("mfcr %0, LO:" "0xFC08" : "=d" (__res) :: "memory"); __res; }));
    result.instruction.counter = icnt.B.CountValue;
    result.instruction.overlfow = icnt.B.SOvf;

    Ifx_CPU_M1CNT m1cnt;
    m1cnt.U = (__extension__({ unsigned __res; __asm__ volatile ("mfcr %0, LO:" "0xFC0C" : "=d" (__res) :: "memory"); __res; }));
    result.counter1.counter = m1cnt.B.CountValue;
    result.counter1.overlfow = m1cnt.B.SOvf;

    Ifx_CPU_M2CNT m2cnt;
    m2cnt.U = (__extension__({ unsigned __res; __asm__ volatile ("mfcr %0, LO:" "0xFC10" : "=d" (__res) :: "memory"); __res; }));
    result.counter2.counter = m2cnt.B.CountValue;
    result.counter2.overlfow = m2cnt.B.SOvf;

    Ifx_CPU_M3CNT m3cnt;
    m3cnt.U = (__extension__({ unsigned __res; __asm__ volatile ("mfcr %0, LO:" "0xFC14" : "=d" (__res) :: "memory"); __res; }));
    result.counter3.counter = m3cnt.B.CountValue;
    result.counter3.overlfow = m3cnt.B.SOvf;

    return result;
}



static inline __attribute__ ((always_inline)) void IfxCpu_triggerSwReset(void)
{
    (*(Ifx_SCU*)0xF0036000u).SWRSTCON.B.SWRSTREQ = 1;


    while (1)
    {}
}


static inline __attribute__ ((always_inline)) void IfxCpu_updateClockCounter(uint32 count)
{
    IfxCpu_updatePerformanceCounter(0xFC04, count);
}


static inline __attribute__ ((always_inline)) void IfxCpu_updateInstructionCounter(uint32 count)
{
    IfxCpu_updatePerformanceCounter(0xFC08, count);
}


static inline __attribute__ ((always_inline)) void IfxCpu_updatePerformanceCounter(uint32 address, uint32 count)
{
    if(address){};
    Ifx_CPU_CCTRL cctrl;
    boolean enableBit;

    cctrl.U = (__extension__({ unsigned __res; __asm__ volatile ("mfcr %0, LO:" "0xFC00" : "=d" (__res) :: "memory"); __res; }));
    enableBit = cctrl.B.CE;
    cctrl.B.CE = 0;
    do { unsigned __newval = (unsigned) (cctrl.U); __asm__ volatile ("mtcr LO:" "0xFC00" ", %0" :: "d" (__newval) : "memory"); } while (0);


    count &= ~(1U << 31);
    do { unsigned __newval = (unsigned) (count); __asm__ volatile ("mtcr LO:" "address" ", %0" :: "d" (__newval) : "memory"); } while (0);


    cctrl.B.CE = enableBit;
    do { unsigned __newval = (unsigned) (cctrl.U); __asm__ volatile ("mtcr LO:" "0xFC00" ", %0" :: "d" (__newval) : "memory"); } while (0);
}
# 51 "C:\\RTDRUI~1\\TC275_~1\\bsw\\IfxScuWdt.c" 2







#define IFXSCUWDT_RESET_PASSWORD (0x3CU)





void IfxScuWdt_changeCpuWatchdogPassword(uint16 password, uint16 newPassword)
{
    Ifx_SCU_WDTCPU *watchdog = &(*(Ifx_SCU*)0xF0036000u).WDTCPU[IfxCpu_getCoreIndex()];


    Ifx_SCU_WDTCPU_CON0 wdt_con0;
    wdt_con0.U = watchdog->CON0.U;

    if (wdt_con0.B.LCK)
    {

        wdt_con0.B.ENDINIT = 1;
        wdt_con0.B.LCK = 0;
        wdt_con0.B.PW = password;


        watchdog->CON0.U = wdt_con0.U;
    }


    wdt_con0.B.ENDINIT = 1;
    wdt_con0.B.LCK = 1;
    wdt_con0.B.PW = newPassword;
    watchdog->CON0.U = wdt_con0.U;


    while (watchdog->CON0.B.ENDINIT == 0)
    {}
}


void IfxScuWdt_changeCpuWatchdogReload(uint16 password, uint16 reload)
{

    uint32 coreId = IfxCpu_getCoreIndex();
    Ifx_SCU_WDTCPU *wdt = &(*(Ifx_SCU*)0xF0036000u).WDTCPU[coreId];


    Ifx_SCU_WDTCPU_CON0 wdt_con0;
    wdt_con0.U = wdt->CON0.U;

    if (wdt_con0.B.LCK)
    {

        wdt_con0.B.ENDINIT = 1;
        wdt_con0.B.LCK = 0;
        wdt_con0.B.PW = password;


        wdt->CON0.U = wdt_con0.U;
    }


    wdt_con0.B.ENDINIT = 1;
    wdt_con0.B.LCK = 1;
    wdt_con0.B.REL = reload;
    wdt->CON0.U = wdt_con0.U;


    while (wdt->CON0.B.ENDINIT == 0)
    {}
}


void IfxScuWdt_changeSafetyWatchdogPassword(uint16 password, uint16 newPassword)
{
    Ifx_SCU_WDTS *watchdog = &(*(Ifx_SCU*)0xF0036000u).WDTS;


    Ifx_SCU_WDTS_CON0 wdt_con0;
    wdt_con0.U = watchdog->CON0.U;

    if (wdt_con0.B.LCK)
    {

        wdt_con0.B.ENDINIT = 1;
        wdt_con0.B.LCK = 0;
        wdt_con0.B.PW = password;


        watchdog->CON0.U = wdt_con0.U;
    }


    wdt_con0.B.ENDINIT = 1;
    wdt_con0.B.LCK = 1;
    wdt_con0.B.PW = newPassword;
    watchdog->CON0.U = wdt_con0.U;


    while (watchdog->CON0.B.ENDINIT == 0)
    {}
}


void IfxScuWdt_changeSafetyWatchdogReload(uint16 password, uint16 reload)
{

    Ifx_SCU_WDTS *wdt = &(*(Ifx_SCU*)0xF0036000u).WDTS;


    Ifx_SCU_WDTS_CON0 wdt_con0;
    wdt_con0.U = wdt->CON0.U;

    if (wdt_con0.B.LCK)
    {

        wdt_con0.B.ENDINIT = 1;
        wdt_con0.B.LCK = 0;
        wdt_con0.B.PW = password;


        wdt->CON0.U = wdt_con0.U;
    }


    wdt_con0.B.ENDINIT = 1;
    wdt_con0.B.LCK = 1;
    wdt_con0.B.REL = reload;
    wdt->CON0.U = wdt_con0.U;


    while (wdt->CON0.B.ENDINIT == 0)
    {}
}


void IfxScuWdt_clearCpuEndinit(uint16 password)
{
    IfxScuWdt_clearCpuEndinitInline(&(*(Ifx_SCU*)0xF0036000u).WDTCPU[IfxCpu_getCoreIndex()], password);
}


void IfxScuWdt_clearSafetyEndinit(uint16 password)
{
    IfxScuWdt_clearSafetyEndinitInline(password);
}


void IfxScuWdt_disableCpuWatchdog(uint16 password)
{

    uint32 coreId = (uint32)IfxCpu_getCoreIndex();
    Ifx_SCU_WDTCPU *wdt = &(*(Ifx_SCU*)0xF0036000u).WDTCPU[coreId];

    IfxScuWdt_clearCpuEndinitInline(wdt, password);
    wdt->CON1.B.DR = 1;
    IfxScuWdt_setCpuEndinitInline(wdt, password);
}


void IfxScuWdt_disableSafetyWatchdog(uint16 password)
{
    IfxScuWdt_clearSafetyEndinitInline(password);
    (*(volatile Ifx_SCU_WDTS_CON1*)0xF00360F4u).B.DR = 1;
    IfxScuWdt_setSafetyEndinitInline(password);
}


void IfxScuWdt_enableCpuWatchdog(uint16 password)
{

    uint32 coreId = (uint32)IfxCpu_getCoreIndex();
    Ifx_SCU_WDTCPU *wdt = &(*(Ifx_SCU*)0xF0036000u).WDTCPU[coreId];

    IfxScuWdt_clearCpuEndinitInline(wdt, password);
    wdt->CON1.B.DR = 0;
    IfxScuWdt_setCpuEndinitInline(wdt, password);
}


void IfxScuWdt_enableSafetyWatchdog(uint16 password)
{
    IfxScuWdt_clearSafetyEndinitInline(password);
    (*(volatile Ifx_SCU_WDTS_CON1*)0xF00360F4u).B.DR = 0;
    IfxScuWdt_setSafetyEndinitInline(password);
}


uint16 IfxScuWdt_getCpuWatchdogPassword(void)
{
    return IfxScuWdt_getCpuWatchdogPasswordInline(&(*(Ifx_SCU*)0xF0036000u).WDTCPU[IfxCpu_getCoreIndex()]);
}


boolean IfxScuWdt_getCpuWatchdogEndInit(void)
{
    return (boolean)IfxScuWdt_getCpuWatchdogEndInitInline(&(*(Ifx_SCU*)0xF0036000u).WDTCPU[IfxCpu_getCoreIndex()]);
}


uint16 IfxScuWdt_getSafetyWatchdogPassword(void)
{
    return IfxScuWdt_getSafetyWatchdogPasswordInline();
}


void IfxScuWdt_initConfig(IfxScuWdt_Config *config)
{
    config->password = (0x3CU);
    config->reload = 0xFFFC;
    config->inputFrequency = IfxScu_WDTCON1_IR_divBy16384;
    config->disableWatchdog = (0u);
    config->enableSmuRestriction = (0u);
    config->enableAutomaticPasswordChange = (0u);
    config->enableTimerCheck = (0u);
    config->enableTimerCheckTolerance = (0u);
    config->clrInternalResetFlag = (0u);
}


void IfxScuWdt_initCpuWatchdog(Ifx_SCU_WDTCPU *wdt, const IfxScuWdt_Config *config)
{
    Ifx_SCU_WDTCPU_CON0 wdt_con0;
    Ifx_SCU_WDTCPU_CON1 wdt_con1;


    wdt_con0.U = wdt->CON0.U;
    wdt_con1.U = 0;

    if (wdt_con0.B.LCK)
    {

        wdt_con0.B.ENDINIT = 1;
        wdt_con0.B.LCK = 0;
        wdt_con0.B.PW ^= 0x003F;


        wdt->CON0.U = wdt_con0.U;
    }




    wdt_con0.B.ENDINIT = 0;
    wdt_con0.B.LCK = 1;
    wdt_con0.B.PW = config->password;
    wdt_con0.B.REL = config->reload;


    wdt->CON0.U = wdt_con0.U;


    while (wdt->CON0.B.ENDINIT == 1)
    {}


    switch (config->inputFrequency)
    {
    case IfxScu_WDTCON1_IR_divBy16384:
        wdt_con1.B.IR0 = 0;
        wdt_con1.B.IR1 = 0;
        break;
    case IfxScu_WDTCON1_IR_divBy256:
        wdt_con1.B.IR0 = 1;
        wdt_con1.B.IR1 = 0;
        break;
    case IfxScu_WDTCON1_IR_divBy64:
        wdt_con1.B.IR0 = 0;
        wdt_con1.B.IR1 = 1;
        break;
    }

    wdt_con1.B.DR = config->disableWatchdog ? 1 : 0;
    wdt_con1.B.UR = config->enableSmuRestriction ? 1 : 0;
    wdt_con1.B.PAR = config->enableAutomaticPasswordChange ? 1 : 0;
    wdt_con1.B.TCR = config->enableTimerCheck ? 1 : 0;
    wdt_con1.B.TCTR = config->enableTimerCheckTolerance ? 1 : 0;


    wdt->CON1.U = wdt_con1.U;


    IfxScuWdt_setCpuEndinit(config->password);
}


void IfxScuWdt_initSafetyWatchdog(Ifx_SCU_WDTS *wdt, const IfxScuWdt_Config *config)
{
    Ifx_SCU_WDTS_CON0 wdt_con0;
    Ifx_SCU_WDTS_CON1 wdt_con1;


    wdt_con0.U = wdt->CON0.U;
    wdt_con1.U = 0;

    if (wdt_con0.B.LCK)
    {

        wdt_con0.B.ENDINIT = 1;
        wdt_con0.B.LCK = 0;
        wdt_con0.B.PW ^= 0x003F;


        wdt->CON0.U = wdt_con0.U;
    }




    wdt_con0.B.ENDINIT = 0;
    wdt_con0.B.LCK = 1;
    wdt_con0.B.PW = config->password;
    wdt_con0.B.REL = config->reload;


    wdt->CON0.U = wdt_con0.U;


    while (wdt->CON0.B.ENDINIT == 1)
    {}


    switch (config->inputFrequency)
    {
    case IfxScu_WDTCON1_IR_divBy16384:
        wdt_con1.B.IR0 = 0;
        wdt_con1.B.IR1 = 0;
        break;
    case IfxScu_WDTCON1_IR_divBy256:
        wdt_con1.B.IR0 = 1;
        wdt_con1.B.IR1 = 0;
        break;
    case IfxScu_WDTCON1_IR_divBy64:
        wdt_con1.B.IR0 = 0;
        wdt_con1.B.IR1 = 1;
        break;
    }

    wdt_con1.B.DR = config->disableWatchdog ? 1 : 0;
    wdt_con1.B.UR = config->enableSmuRestriction ? 1 : 0;
    wdt_con1.B.PAR = config->enableAutomaticPasswordChange ? 1 : 0;
    wdt_con1.B.TCR = config->enableTimerCheck ? 1 : 0;
    wdt_con1.B.TCTR = config->enableTimerCheckTolerance ? 1 : 0;
    wdt_con1.B.CLRIRF = config->clrInternalResetFlag ? 1 : 0;


    wdt->CON1.U = wdt_con1.U;


    IfxScuWdt_setSafetyEndinit(config->password);
}


void IfxScuWdt_serviceCpuWatchdog(uint16 password)
{
    IfxScuWdt_setCpuEndinit(password);
}


void IfxScuWdt_serviceSafetyWatchdog(uint16 password)
{
    IfxScuWdt_setSafetyEndinit(password);
}


void IfxScuWdt_setCpuEndinit(uint16 password)
{
    IfxScuWdt_setCpuEndinitInline(&(*(Ifx_SCU*)0xF0036000u).WDTCPU[IfxCpu_getCoreIndex()], password);
}


void IfxScuWdt_setSafetyEndinit(uint16 password)
{
    IfxScuWdt_setSafetyEndinitInline(password);
}


boolean IfxScuWdt_enableWatchdogWithDebugger(void)
{
    boolean status = 0, oenEnabled = 0, watchdogEnabled = 0;
    uint32 ostateValue;

    volatile uint32 *oecPtr = (volatile uint32 *)0xF0000478;
    volatile uint32 *ostatePtr = (volatile uint32 *)0xF0000480;
    volatile uint32 *ocntrlPtr = (volatile uint32 *)0xF000047C;


    ostateValue = *ostatePtr;
    oenEnabled = (ostateValue & 0x00000001);

    if (!oenEnabled)
    {


        *oecPtr = 0xA1;
        *oecPtr = 0x5E;
        *oecPtr = 0xA1;
        *oecPtr = 0x5E;


        ostateValue = *ostatePtr;
        oenEnabled = (ostateValue & 0x00000001);
    }

    if (oenEnabled)
    {

        *ocntrlPtr = 0x00003000;
    }
    else
    {
        status = 1;
    }

    ((void)0);


    ostateValue = *ostatePtr;
    watchdogEnabled = (ostateValue & 0x00000080);

    if (!watchdogEnabled)
    {
        status = 1;
    }

    ((void)0);

    return status;
}
